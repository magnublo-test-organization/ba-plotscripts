<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201029 09:34:32.921" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.233" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:34.250" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:36.305" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:34.230" endtime="20201029 09:34:36.307"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.313" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:34:36.309" endtime="20201029 09:34:36.314"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.227" endtime="20201029 09:34:36.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.321" endtime="20201029 09:34:36.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.318" endtime="20201029 09:34:36.652"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.682" endtime="20201029 09:34:36.698"></status>
</kw>
<msg timestamp="20201029 09:34:36.699" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.679" endtime="20201029 09:34:36.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.706" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.702" endtime="20201029 09:34:36.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.713" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:36.708" endtime="20201029 09:34:36.713"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:36.673" endtime="20201029 09:34:36.715"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:36.667" endtime="20201029 09:34:36.717"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.665" endtime="20201029 09:34:36.717"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:36.725" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:36.724" endtime="20201029 09:34:36.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.719" endtime="20201029 09:34:36.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.663" endtime="20201029 09:34:36.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.661" endtime="20201029 09:34:36.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.729" endtime="20201029 09:34:36.732"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.657" endtime="20201029 09:34:36.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.735" endtime="20201029 09:34:36.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.654" endtime="20201029 09:34:36.741"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.223" endtime="20201029 09:34:36.741"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.757" endtime="20201029 09:34:36.779"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.754" endtime="20201029 09:34:36.781"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.814" endtime="20201029 09:34:36.829"></status>
</kw>
<msg timestamp="20201029 09:34:36.830" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.811" endtime="20201029 09:34:36.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.837" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.833" endtime="20201029 09:34:36.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.843" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:36.839" endtime="20201029 09:34:36.844"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:36.804" endtime="20201029 09:34:36.846"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:36.797" endtime="20201029 09:34:36.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.794" endtime="20201029 09:34:36.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:36.856" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:36.854" endtime="20201029 09:34:36.857"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.850" endtime="20201029 09:34:36.857"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.792" endtime="20201029 09:34:36.857"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.790" endtime="20201029 09:34:36.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.859" endtime="20201029 09:34:36.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.786" endtime="20201029 09:34:36.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.782" endtime="20201029 09:34:36.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.751" endtime="20201029 09:34:36.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.883" endtime="20201029 09:34:36.893"></status>
</kw>
<msg timestamp="20201029 09:34:36.895" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.880" endtime="20201029 09:34:36.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.901" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.897" endtime="20201029 09:34:36.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.903" endtime="20201029 09:34:36.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.873" endtime="20201029 09:34:36.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.868" endtime="20201029 09:34:36.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.921" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:34:36.919" endtime="20201029 09:34:36.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.925" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 09:34:36.923" endtime="20201029 09:34:36.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.913" endtime="20201029 09:34:36.927"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:36.743" endtime="20201029 09:34:36.929" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:34:33.207" endtime="20201029 09:34:36.936"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.105" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:37.132" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:39.188" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:37.099" endtime="20201029 09:34:39.190"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.195" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:34:39.192" endtime="20201029 09:34:39.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.094" endtime="20201029 09:34:39.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:39.202" endtime="20201029 09:34:39.527"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.199" endtime="20201029 09:34:39.529"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.562" endtime="20201029 09:34:39.583"></status>
</kw>
<msg timestamp="20201029 09:34:39.584" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.556" endtime="20201029 09:34:39.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.592" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.587" endtime="20201029 09:34:39.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.601" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:39.595" endtime="20201029 09:34:39.601"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:39.550" endtime="20201029 09:34:39.604"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:39.544" endtime="20201029 09:34:39.606"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.541" endtime="20201029 09:34:39.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:39.619" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:39.615" endtime="20201029 09:34:39.620"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.609" endtime="20201029 09:34:39.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.539" endtime="20201029 09:34:39.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.537" endtime="20201029 09:34:39.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.624" endtime="20201029 09:34:39.629"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.534" endtime="20201029 09:34:39.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.632" endtime="20201029 09:34:39.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.531" endtime="20201029 09:34:39.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.088" endtime="20201029 09:34:39.639"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:39.657" endtime="20201029 09:34:39.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.652" endtime="20201029 09:34:39.684"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.752" endtime="20201029 09:34:39.788"></status>
</kw>
<msg timestamp="20201029 09:34:39.792" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.745" endtime="20201029 09:34:39.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.801" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.796" endtime="20201029 09:34:39.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.808" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:39.803" endtime="20201029 09:34:39.808"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:39.732" endtime="20201029 09:34:39.810"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:39.700" endtime="20201029 09:34:39.812"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.698" endtime="20201029 09:34:39.813"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:39.821" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:39.819" endtime="20201029 09:34:39.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.815" endtime="20201029 09:34:39.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.696" endtime="20201029 09:34:39.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.694" endtime="20201029 09:34:39.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.824" endtime="20201029 09:34:39.828"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.690" endtime="20201029 09:34:39.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.685" endtime="20201029 09:34:39.831"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.649" endtime="20201029 09:34:39.832"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.916" endtime="20201029 09:34:39.930"></status>
</kw>
<msg timestamp="20201029 09:34:39.931" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.913" endtime="20201029 09:34:39.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.937" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.933" endtime="20201029 09:34:39.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.940" endtime="20201029 09:34:39.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.843" endtime="20201029 09:34:39.945"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.838" endtime="20201029 09:34:39.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.963" endtime="20201029 09:34:40.339"></status>
</kw>
<msg timestamp="20201029 09:34:40.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.249647583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.249663806, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:39.960" endtime="20201029 09:34:40.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.249647583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.249663806, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:40.350" endtime="20201029 09:34:40.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.372" endtime="20201029 09:34:40.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.953" endtime="20201029 09:34:40.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.948" endtime="20201029 09:34:40.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:40.391" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.730000000...</msg>
<status status="PASS" starttime="20201029 09:34:40.382" endtime="20201029 09:34:40.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:40.402" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:40.394" endtime="20201029 09:34:40.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.413" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:40.410" endtime="20201029 09:34:40.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.418" level="INFO">VALUE: [0, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999730783e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:40.415" endtime="20201029 09:34:40.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.404" endtime="20201029 09:34:40.421"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.835" endtime="20201029 09:34:40.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.834" endtime="20201029 09:34:40.423"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.443" endtime="20201029 09:34:40.454"></status>
</kw>
<msg timestamp="20201029 09:34:40.455" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.439" endtime="20201029 09:34:40.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.461" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.457" endtime="20201029 09:34:40.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.463" endtime="20201029 09:34:40.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.432" endtime="20201029 09:34:40.469"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.428" endtime="20201029 09:34:40.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.486" endtime="20201029 09:34:40.835"></status>
</kw>
<msg timestamp="20201029 09:34:40.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.250216194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.250216667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.483" endtime="20201029 09:34:40.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.250216194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.250216667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.847" endtime="20201029 09:34:40.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.869" endtime="20201029 09:34:40.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.476" endtime="20201029 09:34:40.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.471" endtime="20201029 09:34:40.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:40.887" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 09:34:40.878" endtime="20201029 09:34:40.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:40.899" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:40.889" endtime="20201029 09:34:40.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.910" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:40.908" endtime="20201029 09:34:40.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.915" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07]</msg>
<status status="PASS" starttime="20201029 09:34:40.912" endtime="20201029 09:34:40.916"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.901" endtime="20201029 09:34:40.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.424" endtime="20201029 09:34:40.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.423" endtime="20201029 09:34:40.920"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.940" endtime="20201029 09:34:40.951"></status>
</kw>
<msg timestamp="20201029 09:34:40.953" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.937" endtime="20201029 09:34:40.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.959" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.955" endtime="20201029 09:34:40.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.961" endtime="20201029 09:34:40.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.929" endtime="20201029 09:34:40.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.925" endtime="20201029 09:34:40.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.986" endtime="20201029 09:34:41.355"></status>
</kw>
<msg timestamp="20201029 09:34:41.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.766696042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.766696514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.983" endtime="20201029 09:34:41.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.766696042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.766696514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.367" endtime="20201029 09:34:41.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.389" endtime="20201029 09:34:41.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.974" endtime="20201029 09:34:41.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.969" endtime="20201029 09:34:41.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.407" level="INFO">${RESULT} = [{'diff': 4.7200000008462695e-07}, {'diff': 4.729999999453227e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 09:34:41.397" endtime="20201029 09:34:41.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:41.417" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000008462695e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201029 09:34:41.409" endtime="20201029 09:34:41.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.428" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:41.426" endtime="20201029 09:34:41.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.435" level="INFO">VALUE: [4.7200000008462695e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:41.431" endtime="20201029 09:34:41.436"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.420" endtime="20201029 09:34:41.438"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.922" endtime="20201029 09:34:41.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.921" endtime="20201029 09:34:41.439"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.462" endtime="20201029 09:34:41.475"></status>
</kw>
<msg timestamp="20201029 09:34:41.476" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.457" endtime="20201029 09:34:41.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.485" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.480" endtime="20201029 09:34:41.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.488" endtime="20201029 09:34:41.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.449" endtime="20201029 09:34:41.495"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.444" endtime="20201029 09:34:41.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.519" endtime="20201029 09:34:41.888"></status>
</kw>
<msg timestamp="20201029 09:34:41.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.254952972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.254953444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.514" endtime="20201029 09:34:41.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.254952972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.254953444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.899" endtime="20201029 09:34:41.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.922" endtime="20201029 09:34:41.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.505" endtime="20201029 09:34:41.927"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.500" endtime="20201029 09:34:41.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.940" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 09:34:41.931" endtime="20201029 09:34:41.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:41.961" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:41.942" endtime="20201029 09:34:41.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.971" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:41.969" endtime="20201029 09:34:41.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.981" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:41.976" endtime="20201029 09:34:41.986"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.962" endtime="20201029 09:34:41.988"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.441" endtime="20201029 09:34:41.991"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.440" endtime="20201029 09:34:41.992"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.024" endtime="20201029 09:34:42.037"></status>
</kw>
<msg timestamp="20201029 09:34:42.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.018" endtime="20201029 09:34:42.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.047" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.041" endtime="20201029 09:34:42.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.050" endtime="20201029 09:34:42.054"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.009" endtime="20201029 09:34:42.056"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.002" endtime="20201029 09:34:42.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.074" endtime="20201029 09:34:42.445"></status>
</kw>
<msg timestamp="20201029 09:34:42.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.767238292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.767238764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.071" endtime="20201029 09:34:42.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.767238292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.767238764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.456" endtime="20201029 09:34:42.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.478" endtime="20201029 09:34:42.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.063" endtime="20201029 09:34:42.485"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.059" endtime="20201029 09:34:42.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:42.498" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:42.488" endtime="20201029 09:34:42.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:42.509" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:42.500" endtime="20201029 09:34:42.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.519" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:42.517" endtime="20201029 09:34:42.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.525" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:42.521" endtime="20201029 09:34:42.526"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.511" endtime="20201029 09:34:42.527"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.995" endtime="20201029 09:34:42.529"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.994" endtime="20201029 09:34:42.529"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.549" endtime="20201029 09:34:42.563"></status>
</kw>
<msg timestamp="20201029 09:34:42.564" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.546" endtime="20201029 09:34:42.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.572" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.566" endtime="20201029 09:34:42.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.575" endtime="20201029 09:34:42.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.539" endtime="20201029 09:34:42.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.534" endtime="20201029 09:34:42.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.604" endtime="20201029 09:34:42.984"></status>
</kw>
<msg timestamp="20201029 09:34:42.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.319921556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.319922028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.600" endtime="20201029 09:34:42.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.319921556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.319922028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.995" endtime="20201029 09:34:43.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.017" endtime="20201029 09:34:43.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.592" endtime="20201029 09:34:43.023"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.585" endtime="20201029 09:34:43.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:43.036" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:34:43.026" endtime="20201029 09:34:43.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:43.048" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:43.038" endtime="20201029 09:34:43.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.058" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:43.056" endtime="20201029 09:34:43.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.064" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:43.060" endtime="20201029 09:34:43.064"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.050" endtime="20201029 09:34:43.066"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.531" endtime="20201029 09:34:43.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.530" endtime="20201029 09:34:43.068"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.088" endtime="20201029 09:34:43.100"></status>
</kw>
<msg timestamp="20201029 09:34:43.101" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.085" endtime="20201029 09:34:43.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.108" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.104" endtime="20201029 09:34:43.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.110" endtime="20201029 09:34:43.114"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.078" endtime="20201029 09:34:43.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.073" endtime="20201029 09:34:43.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.133" endtime="20201029 09:34:43.524"></status>
</kw>
<msg timestamp="20201029 09:34:43.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.833723083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.833723556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.130" endtime="20201029 09:34:43.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.833723083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.833723556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.535" endtime="20201029 09:34:43.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.557" endtime="20201029 09:34:43.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.123" endtime="20201029 09:34:43.563"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.118" endtime="20201029 09:34:43.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:43.576" level="INFO">${RESULT} = [{'diff': 4.729999996122558e-07}, {'diff': 4.729999996122558e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:34:43.566" endtime="20201029 09:34:43.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:43.588" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999996122558e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73...</msg>
<status status="PASS" starttime="20201029 09:34:43.578" endtime="20201029 09:34:43.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.598" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:43.596" endtime="20201029 09:34:43.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.604" level="INFO">VALUE: [4.729999996122558e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:43.601" endtime="20201029 09:34:43.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.590" endtime="20201029 09:34:43.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.070" endtime="20201029 09:34:43.608"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.069" endtime="20201029 09:34:43.608"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.629" endtime="20201029 09:34:43.641"></status>
</kw>
<msg timestamp="20201029 09:34:43.642" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.625" endtime="20201029 09:34:43.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.648" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.644" endtime="20201029 09:34:43.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.650" endtime="20201029 09:34:43.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.618" endtime="20201029 09:34:43.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.613" endtime="20201029 09:34:43.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.674" endtime="20201029 09:34:44.053"></status>
</kw>
<msg timestamp="20201029 09:34:44.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.359666139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.359666611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.670" endtime="20201029 09:34:44.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.359666139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.359666611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:44.065" endtime="20201029 09:34:44.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.088" endtime="20201029 09:34:44.093"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.663" endtime="20201029 09:34:44.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.658" endtime="20201029 09:34:44.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:44.110" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:44.099" endtime="20201029 09:34:44.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:44.122" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:44.112" endtime="20201029 09:34:44.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.145" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:44.131" endtime="20201029 09:34:44.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.153" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:44.148" endtime="20201029 09:34:44.154"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.125" endtime="20201029 09:34:44.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.610" endtime="20201029 09:34:44.158"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.609" endtime="20201029 09:34:44.158"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.183" endtime="20201029 09:34:44.195"></status>
</kw>
<msg timestamp="20201029 09:34:44.197" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:44.179" endtime="20201029 09:34:44.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.205" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:44.200" endtime="20201029 09:34:44.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.209" endtime="20201029 09:34:44.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.171" endtime="20201029 09:34:44.216"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.165" endtime="20201029 09:34:44.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.240" endtime="20201029 09:34:44.631"></status>
</kw>
<msg timestamp="20201029 09:34:44.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.889313361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.889313833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:44.236" endtime="20201029 09:34:44.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.889313361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.889313833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:44.642" endtime="20201029 09:34:44.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.664" endtime="20201029 09:34:44.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.227" endtime="20201029 09:34:44.670"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.220" endtime="20201029 09:34:44.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:44.683" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 09:34:44.673" endtime="20201029 09:34:44.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:44.697" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:44.685" endtime="20201029 09:34:44.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.708" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:44.705" endtime="20201029 09:34:44.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.713" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:44.710" endtime="20201029 09:34:44.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.699" endtime="20201029 09:34:44.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.161" endtime="20201029 09:34:44.717"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.159" endtime="20201029 09:34:44.718"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.738" endtime="20201029 09:34:44.749"></status>
</kw>
<msg timestamp="20201029 09:34:44.750" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:44.735" endtime="20201029 09:34:44.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.756" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:44.752" endtime="20201029 09:34:44.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.758" endtime="20201029 09:34:44.762"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.727" endtime="20201029 09:34:44.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.723" endtime="20201029 09:34:44.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.782" endtime="20201029 09:34:45.158"></status>
</kw>
<msg timestamp="20201029 09:34:45.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.435645903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.435646375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:44.778" endtime="20201029 09:34:45.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.435645903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.435646375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:45.170" endtime="20201029 09:34:45.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.193" endtime="20201029 09:34:45.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.771" endtime="20201029 09:34:45.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.766" endtime="20201029 09:34:45.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:45.211" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:34:45.201" endtime="20201029 09:34:45.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:45.223" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:45.213" endtime="20201029 09:34:45.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.233" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:45.231" endtime="20201029 09:34:45.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.238" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:45.235" endtime="20201029 09:34:45.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.224" endtime="20201029 09:34:45.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.719" endtime="20201029 09:34:45.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.718" endtime="20201029 09:34:45.243"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.263" endtime="20201029 09:34:45.274"></status>
</kw>
<msg timestamp="20201029 09:34:45.275" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.260" endtime="20201029 09:34:45.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.281" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.277" endtime="20201029 09:34:45.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.284" endtime="20201029 09:34:45.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.253" endtime="20201029 09:34:45.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.248" endtime="20201029 09:34:45.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.306" endtime="20201029 09:34:45.678"></status>
</kw>
<msg timestamp="20201029 09:34:45.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.977753708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.977754181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:45.303" endtime="20201029 09:34:45.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.977753708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.977754181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:45.690" endtime="20201029 09:34:45.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.713" endtime="20201029 09:34:45.717"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.296" endtime="20201029 09:34:45.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.292" endtime="20201029 09:34:45.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:45.731" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'dif...</msg>
<status status="PASS" starttime="20201029 09:34:45.721" endtime="20201029 09:34:45.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:45.742" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.719999...</msg>
<status status="PASS" starttime="20201029 09:34:45.733" endtime="20201029 09:34:45.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.752" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:45.749" endtime="20201029 09:34:45.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.757" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:34:45.754" endtime="20201029 09:34:45.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.743" endtime="20201029 09:34:45.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.245" endtime="20201029 09:34:45.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.244" endtime="20201029 09:34:45.762"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.782" endtime="20201029 09:34:45.795"></status>
</kw>
<msg timestamp="20201029 09:34:45.796" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.779" endtime="20201029 09:34:45.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.802" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.798" endtime="20201029 09:34:45.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.804" endtime="20201029 09:34:45.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.772" endtime="20201029 09:34:45.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.767" endtime="20201029 09:34:45.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.827" endtime="20201029 09:34:46.214"></status>
</kw>
<msg timestamp="20201029 09:34:46.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.493540819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.493541292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:45.824" endtime="20201029 09:34:46.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.493540819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.493541292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:46.227" endtime="20201029 09:34:46.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.256" endtime="20201029 09:34:46.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.817" endtime="20201029 09:34:46.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.812" endtime="20201029 09:34:46.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:46.278" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:46.266" endtime="20201029 09:34:46.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:46.292" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:46.280" endtime="20201029 09:34:46.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.305" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:46.303" endtime="20201029 09:34:46.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.313" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:46.308" endtime="20201029 09:34:46.314"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.296" endtime="20201029 09:34:46.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.764" endtime="20201029 09:34:46.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.763" endtime="20201029 09:34:46.317"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.337" endtime="20201029 09:34:46.348"></status>
</kw>
<msg timestamp="20201029 09:34:46.349" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.334" endtime="20201029 09:34:46.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.356" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.352" endtime="20201029 09:34:46.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.358" endtime="20201029 09:34:46.362"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.327" endtime="20201029 09:34:46.363"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.322" endtime="20201029 09:34:46.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.381" endtime="20201029 09:34:46.744"></status>
</kw>
<msg timestamp="20201029 09:34:46.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.005353556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.005354028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:46.378" endtime="20201029 09:34:46.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.005353556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.005354028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:46.755" endtime="20201029 09:34:46.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.778" endtime="20201029 09:34:46.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.371" endtime="20201029 09:34:46.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.366" endtime="20201029 09:34:46.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:46.796" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.729999991681666e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:34:46.786" endtime="20201029 09:34:46.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:46.808" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:34:46.798" endtime="20201029 09:34:46.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.818" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:46.816" endtime="20201029 09:34:46.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.824" level="INFO">VALUE: [4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:46.820" endtime="20201029 09:34:46.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.810" endtime="20201029 09:34:46.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.319" endtime="20201029 09:34:46.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.318" endtime="20201029 09:34:46.828"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.848" endtime="20201029 09:34:46.859"></status>
</kw>
<msg timestamp="20201029 09:34:46.860" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.845" endtime="20201029 09:34:46.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.866" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.862" endtime="20201029 09:34:46.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.868" endtime="20201029 09:34:46.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.837" endtime="20201029 09:34:46.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.833" endtime="20201029 09:34:46.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.898" endtime="20201029 09:34:47.258"></status>
</kw>
<msg timestamp="20201029 09:34:47.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.549017833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.549018306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:46.894" endtime="20201029 09:34:47.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.549017833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.549018306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:47.271" endtime="20201029 09:34:47.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.293" endtime="20201029 09:34:47.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.887" endtime="20201029 09:34:47.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.882" endtime="20201029 09:34:47.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:47.311" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 09:34:47.301" endtime="20201029 09:34:47.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:47.321" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:47.313" endtime="20201029 09:34:47.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.331" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:47.329" endtime="20201029 09:34:47.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.337" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:47.334" endtime="20201029 09:34:47.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.323" endtime="20201029 09:34:47.340"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.830" endtime="20201029 09:34:47.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.829" endtime="20201029 09:34:47.342"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.362" endtime="20201029 09:34:47.374"></status>
</kw>
<msg timestamp="20201029 09:34:47.375" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:47.358" endtime="20201029 09:34:47.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.382" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:47.378" endtime="20201029 09:34:47.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.384" endtime="20201029 09:34:47.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.351" endtime="20201029 09:34:47.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.347" endtime="20201029 09:34:47.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.407" endtime="20201029 09:34:47.785"></status>
</kw>
<msg timestamp="20201029 09:34:47.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.048688125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.048688597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:47.404" endtime="20201029 09:34:47.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.048688125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.048688597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:47.796" endtime="20201029 09:34:47.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.819" endtime="20201029 09:34:47.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.397" endtime="20201029 09:34:47.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.392" endtime="20201029 09:34:47.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:47.837" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000086178306e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:47.827" endtime="20201029 09:34:47.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:47.848" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:47.839" endtime="20201029 09:34:47.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.858" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:47.856" endtime="20201029 09:34:47.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.864" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:47.861" endtime="20201029 09:34:47.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.850" endtime="20201029 09:34:47.867"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.343" endtime="20201029 09:34:47.868"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.342" endtime="20201029 09:34:47.868"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.889" endtime="20201029 09:34:47.900"></status>
</kw>
<msg timestamp="20201029 09:34:47.901" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:47.885" endtime="20201029 09:34:47.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.907" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:47.903" endtime="20201029 09:34:47.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.909" endtime="20201029 09:34:47.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.878" endtime="20201029 09:34:47.915"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.873" endtime="20201029 09:34:47.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.933" endtime="20201029 09:34:48.305"></status>
</kw>
<msg timestamp="20201029 09:34:48.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.554118375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.554118847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:47.930" endtime="20201029 09:34:48.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.554118375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.554118847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:48.317" endtime="20201029 09:34:48.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.339" endtime="20201029 09:34:48.343"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.923" endtime="20201029 09:34:48.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.918" endtime="20201029 09:34:48.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:48.357" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000086178306e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:48.347" endtime="20201029 09:34:48.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:48.369" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:48.359" endtime="20201029 09:34:48.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.379" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:48.377" endtime="20201029 09:34:48.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.385" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999982799882e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999982799882e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:48.382" endtime="20201029 09:34:48.386"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.371" endtime="20201029 09:34:48.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.870" endtime="20201029 09:34:48.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.869" endtime="20201029 09:34:48.390"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.410" endtime="20201029 09:34:48.421"></status>
</kw>
<msg timestamp="20201029 09:34:48.422" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.406" endtime="20201029 09:34:48.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.428" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.424" endtime="20201029 09:34:48.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.430" endtime="20201029 09:34:48.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.399" endtime="20201029 09:34:48.435"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.395" endtime="20201029 09:34:48.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.454" endtime="20201029 09:34:48.831"></status>
</kw>
<msg timestamp="20201029 09:34:48.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.070506125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.070506597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:48.450" endtime="20201029 09:34:48.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.070506125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.070506597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:48.843" endtime="20201029 09:34:48.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.865" endtime="20201029 09:34:48.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.443" endtime="20201029 09:34:48.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.438" endtime="20201029 09:34:48.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:48.883" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:48.874" endtime="20201029 09:34:48.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:48.894" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:48.885" endtime="20201029 09:34:48.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.904" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:48.902" endtime="20201029 09:34:48.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.910" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:48.906" endtime="20201029 09:34:48.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.896" endtime="20201029 09:34:48.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.391" endtime="20201029 09:34:48.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.390" endtime="20201029 09:34:48.914"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.934" endtime="20201029 09:34:48.946"></status>
</kw>
<msg timestamp="20201029 09:34:48.948" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.931" endtime="20201029 09:34:48.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.954" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.950" endtime="20201029 09:34:48.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.957" endtime="20201029 09:34:48.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.924" endtime="20201029 09:34:48.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.919" endtime="20201029 09:34:48.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.982" endtime="20201029 09:34:49.354"></status>
</kw>
<msg timestamp="20201029 09:34:49.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.580510389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.580510861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:48.979" endtime="20201029 09:34:49.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.580510389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.580510861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:49.366" endtime="20201029 09:34:49.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.388" endtime="20201029 09:34:49.392"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.970" endtime="20201029 09:34:49.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.965" endtime="20201029 09:34:49.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:49.406" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:34:49.397" endtime="20201029 09:34:49.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:49.422" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:49.408" endtime="20201029 09:34:49.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.432" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:49.430" endtime="20201029 09:34:49.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.438" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:49.435" endtime="20201029 09:34:49.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.424" endtime="20201029 09:34:49.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.916" endtime="20201029 09:34:49.442"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.915" endtime="20201029 09:34:49.442"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.463" endtime="20201029 09:34:49.474"></status>
</kw>
<msg timestamp="20201029 09:34:49.475" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:49.459" endtime="20201029 09:34:49.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.481" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:49.477" endtime="20201029 09:34:49.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.483" endtime="20201029 09:34:49.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.452" endtime="20201029 09:34:49.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.447" endtime="20201029 09:34:49.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.508" endtime="20201029 09:34:49.868"></status>
</kw>
<msg timestamp="20201029 09:34:49.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.094380361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.094380833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:49.504" endtime="20201029 09:34:49.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.094380361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.094380833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:49.879" endtime="20201029 09:34:49.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.902" endtime="20201029 09:34:49.906"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.497" endtime="20201029 09:34:49.907"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.491" endtime="20201029 09:34:49.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:49.920" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:34:49.910" endtime="20201029 09:34:49.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:49.932" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:49.922" endtime="20201029 09:34:49.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.942" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:49.940" endtime="20201029 09:34:49.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.948" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999982799882e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:49.945" endtime="20201029 09:34:49.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.934" endtime="20201029 09:34:49.951"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.444" endtime="20201029 09:34:49.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.443" endtime="20201029 09:34:49.952"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.973" endtime="20201029 09:34:49.984"></status>
</kw>
<msg timestamp="20201029 09:34:49.985" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:49.969" endtime="20201029 09:34:49.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.992" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:49.987" endtime="20201029 09:34:49.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.994" endtime="20201029 09:34:49.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.962" endtime="20201029 09:34:50.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.957" endtime="20201029 09:34:50.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.020" endtime="20201029 09:34:50.392"></status>
</kw>
<msg timestamp="20201029 09:34:50.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.611798111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.611798583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:50.016" endtime="20201029 09:34:50.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.611798111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.611798583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:50.403" endtime="20201029 09:34:50.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.426" endtime="20201029 09:34:50.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.009" endtime="20201029 09:34:50.432"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.004" endtime="20201029 09:34:50.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:50.444" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:34:50.435" endtime="20201029 09:34:50.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:50.455" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:50.446" endtime="20201029 09:34:50.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.465" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:50.463" endtime="20201029 09:34:50.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.471" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:50.467" endtime="20201029 09:34:50.472"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.457" endtime="20201029 09:34:50.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.954" endtime="20201029 09:34:50.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.953" endtime="20201029 09:34:50.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.832" endtime="20201029 09:34:50.475"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:39.640" endtime="20201029 09:34:50.477" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:50.494" endtime="20201029 09:34:50.516"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.490" endtime="20201029 09:34:50.518"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.553" endtime="20201029 09:34:50.569"></status>
</kw>
<msg timestamp="20201029 09:34:50.570" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:50.550" endtime="20201029 09:34:50.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.577" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:50.572" endtime="20201029 09:34:50.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.583" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:50.579" endtime="20201029 09:34:50.584"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:50.542" endtime="20201029 09:34:50.586"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:50.535" endtime="20201029 09:34:50.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.533" endtime="20201029 09:34:50.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:50.596" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:50.595" endtime="20201029 09:34:50.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.590" endtime="20201029 09:34:50.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.529" endtime="20201029 09:34:50.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.528" endtime="20201029 09:34:50.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.600" endtime="20201029 09:34:50.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.524" endtime="20201029 09:34:50.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.519" endtime="20201029 09:34:50.606"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.488" endtime="20201029 09:34:50.607"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.629" endtime="20201029 09:34:50.642"></status>
</kw>
<msg timestamp="20201029 09:34:50.643" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:50.625" endtime="20201029 09:34:50.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.650" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:50.646" endtime="20201029 09:34:50.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.652" endtime="20201029 09:34:50.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.618" endtime="20201029 09:34:50.657"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.613" endtime="20201029 09:34:50.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.675" endtime="20201029 09:34:51.038"></status>
</kw>
<msg timestamp="20201029 09:34:51.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125191806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125201069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:50.672" endtime="20201029 09:34:51.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125191806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125201069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:51.049" endtime="20201029 09:34:51.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.067" endtime="20201029 09:34:51.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.665" endtime="20201029 09:34:51.073"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.660" endtime="20201029 09:34:51.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:51.086" level="INFO">${RESULT} = [{'diff': 9.263000000009347e-06}, {'diff': 9.667000000018744e-06}, {'diff': 8.916999999997177e-06}, {'diff': 9.277000000001978e-06}, {'diff': 9.082999999993069e-06}, {'diff': 9.597000000000078e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:51.077" endtime="20201029 09:34:51.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:51.095" level="INFO">${OVERHEAD} = {'diff': [9.263000000009347e-06, 9.667000000018744e-06, 8.916999999997177e-06, 9.277000000001978e-06, 9.082999999993069e-06, 9.597000000000078e-06, 9.444000000025099e-06, 9.597999999999551e-06, 9.9159...</msg>
<status status="PASS" starttime="20201029 09:34:51.088" endtime="20201029 09:34:51.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.105" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:51.103" endtime="20201029 09:34:51.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.111" level="INFO">VALUE: [9.263000000009347e-06, 9.667000000018744e-06, 8.916999999997177e-06, 9.277000000001978e-06, 9.082999999993069e-06, 9.597000000000078e-06, 9.444000000025099e-06, 9.597999999999551e-06, 9.915999999998704e-06, 9.278000000001452e-06, 8.94499999998244e-06, 9.763999999995443e-06, 9.333000000000258e-06, 9.513999999988254e-06, 9.625000000013095e-06, 8.943999999982966e-06, 9.763999999995443e-06, 9.25000000001619e-06, 9.611999999992182e-06, 9.610999999992709e-06, 9.430000000004712e-06, 9.0969999999857e-06, 9.263999999981065e-06, 9.930999999990808e-06, 9.111000000006086e-06, 9.290999999994609e-06, 9.0969999999857e-06, 8.929999999990335e-06, 9.097000000013455e-06, 9.083999999992542e-06, 9.124999999998717e-06, 9.749999999975056e-06, 9.263999999981065e-06, 9.763999999995443e-06, 8.94499999998244e-06, 9.26400000000882e-06, 9.68099999998362e-06, 8.931000000017564e-06, 9.62499999998534e-06, 9.929999999991335e-06, 8.958000000003352e-06, 8.916999999997177e-06, 9.26400000000882e-06, 9.361999999984993e-06, 9.054999999980051e-06, 9.707999999997163e-06, 9.277000000001978e-06, 9.263999999981065e-06, 9.235999999995803e-06, 9.069999999999911e-06]</msg>
<status status="PASS" starttime="20201029 09:34:51.107" endtime="20201029 09:34:51.111"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.097" endtime="20201029 09:34:51.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.610" endtime="20201029 09:34:51.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.609" endtime="20201029 09:34:51.115"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.135" endtime="20201029 09:34:51.149"></status>
</kw>
<msg timestamp="20201029 09:34:51.150" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:51.132" endtime="20201029 09:34:51.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.156" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:51.152" endtime="20201029 09:34:51.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.159" endtime="20201029 09:34:51.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.125" endtime="20201029 09:34:51.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.120" endtime="20201029 09:34:51.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.188" endtime="20201029 09:34:51.555"></status>
</kw>
<msg timestamp="20201029 09:34:51.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.12580525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125814931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:51.184" endtime="20201029 09:34:51.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.12580525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125814931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:51.567" endtime="20201029 09:34:51.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.590" endtime="20201029 09:34:51.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.174" endtime="20201029 09:34:51.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.168" endtime="20201029 09:34:51.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:51.609" level="INFO">${RESULT} = [{'diff': 9.68099999998362e-06}, {'diff': 8.931000000017564e-06}, {'diff': 9.62499999998534e-06}, {'diff': 9.929999999991335e-06}, {'diff': 8.958000000003352e-06}, {'diff': 8.916999999997177e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:51.599" endtime="20201029 09:34:51.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:51.620" level="INFO">${OVERHEAD} = {'diff': [9.68099999998362e-06, 8.931000000017564e-06, 9.62499999998534e-06, 9.929999999991335e-06, 8.958000000003352e-06, 8.916999999997177e-06, 9.26400000000882e-06, 9.361999999984993e-06, 9.0549999...</msg>
<status status="PASS" starttime="20201029 09:34:51.611" endtime="20201029 09:34:51.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.630" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:51.627" endtime="20201029 09:34:51.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.637" level="INFO">VALUE: [9.68099999998362e-06, 8.931000000017564e-06, 9.62499999998534e-06, 9.929999999991335e-06, 8.958000000003352e-06, 8.916999999997177e-06, 9.26400000000882e-06, 9.361999999984993e-06, 9.054999999980051e-06, 9.707999999997163e-06, 9.277000000001978e-06, 9.263999999981065e-06, 9.235999999995803e-06, 9.069999999999911e-06, 9.096999999957944e-06, 8.94500000003795e-06, 8.94399999995521e-06, 9.597000000027833e-06, 9.429999999976957e-06, 9.096999999957944e-06, 9.096999999957944e-06, 9.444999999996817e-06, 9.444999999996817e-06, 8.93000000001809e-06, 9.444000000025099e-06, 9.111000000006086e-06, 8.930999999989808e-06, 9.431000000059697e-06, 9.625000000013095e-06, 9.278000000056963e-06, 9.292000000105105e-06, 9.249999999960679e-06, 9.472000000010361e-06, 9.431000000059697e-06, 9.625000000013095e-06, 9.763999999967687e-06, 3.290300000002855e-05, 8.94500000003795e-06, 9.180000000053035e-06, 9.249999999960679e-06, 9.77800000001583e-06, 8.958000000003352e-06, 9.097000000068967e-06, 9.763999999967687e-06, 9.416000000039837e-06, 9.77800000001583e-06, 9.27799999994594e-06, 9.79199999995295e-06, 9.777999999904807e-06, 9.610999999964953e-06, 9.083999999992542e-06, 9.415999999928815e-06, 8.903000000004546e-06, 9.304999999959485e-06, 9.416000000039837e-06, 9.610999999964953e-06, 9.111000000006086e-06, 9.68099999998362e-06, 9.555000000105451e-06, 8.94399999995521e-06, 9.763999999967687e-06, 9.763999999967687e-06, 9.111000000006086e-06, 9.444000000025099e-06]</msg>
<status status="PASS" starttime="20201029 09:34:51.632" endtime="20201029 09:34:51.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.622" endtime="20201029 09:34:51.639"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.117" endtime="20201029 09:34:51.641"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.116" endtime="20201029 09:34:51.641"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.662" endtime="20201029 09:34:51.674"></status>
</kw>
<msg timestamp="20201029 09:34:51.675" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:51.658" endtime="20201029 09:34:51.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.681" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:51.677" endtime="20201029 09:34:51.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.685" endtime="20201029 09:34:51.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.651" endtime="20201029 09:34:51.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.646" endtime="20201029 09:34:51.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.711" endtime="20201029 09:34:52.074"></status>
</kw>
<msg timestamp="20201029 09:34:52.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.622519319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.622528403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:51.707" endtime="20201029 09:34:52.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.622519319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.622528403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:52.086" endtime="20201029 09:34:52.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.108" endtime="20201029 09:34:52.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.700" endtime="20201029 09:34:52.114"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.695" endtime="20201029 09:34:52.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:52.127" level="INFO">${RESULT} = [{'diff': 9.083999999992542e-06}, {'diff': 9.415999999928815e-06}, {'diff': 8.903000000004546e-06}, {'diff': 9.304999999959485e-06}, {'diff': 9.416000000039837e-06}, {'diff': 9.610999999964953e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:52.117" endtime="20201029 09:34:52.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:52.139" level="INFO">${OVERHEAD} = {'diff': [9.083999999992542e-06, 9.415999999928815e-06, 8.903000000004546e-06, 9.304999999959485e-06, 9.416000000039837e-06, 9.610999999964953e-06, 9.111000000006086e-06, 9.68099999998362e-06, 9.55500...</msg>
<status status="PASS" starttime="20201029 09:34:52.129" endtime="20201029 09:34:52.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.149" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:52.147" endtime="20201029 09:34:52.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.155" level="INFO">VALUE: [9.083999999992542e-06, 9.415999999928815e-06, 8.903000000004546e-06, 9.304999999959485e-06, 9.416000000039837e-06, 9.610999999964953e-06, 9.111000000006086e-06, 9.68099999998362e-06, 9.555000000105451e-06, 8.94399999995521e-06, 9.763999999967687e-06, 9.763999999967687e-06, 9.111000000006086e-06, 9.444000000025099e-06, 9.568999999931549e-06, 9.111000000006086e-06, 9.931000000129586e-06, 9.76400000007871e-06, 9.096999999957944e-06, 9.652999999998357e-06, 9.777000000044112e-06, 9.597000000027833e-06, 9.277999999834918e-06, 9.763999999856665e-06, 9.708999999968881e-06, 9.249999999960679e-06, 9.249999999960679e-06, 9.417000000011555e-06, 9.361000000041031e-06, 9.06899999986166e-06, 8.930999999989808e-06, 9.250000000182723e-06, 9.458000000073241e-06, 9.444000000025099e-06, 9.26400000000882e-06, 8.930000000129112e-06, 9.930999999907542e-06, 9.096999999957944e-06, 9.820000000049234e-06, 9.26400000000882e-06, 9.625000000124118e-06, 9.763999999856665e-06, 9.16699999997661e-06, 9.61099999985393e-06, 9.278000000056963e-06, 9.236000000134581e-06, 9.458000000073241e-06, 9.29099999980032e-06, 9.431000000059697e-06, 9.096999999957944e-06, 9.944999999955684e-06, 9.818999999966493e-06, 9.431000000059697e-06, 9.111000000006086e-06, 9.611999999936671e-06, 9.096999999957944e-06, 9.112000000088827e-06, 9.611999999936671e-06, 9.76299999999597e-06, 9.332999999944747e-06, 9.597000000027833e-06, 9.26400000000882e-06, 9.444000000025099e-06, 9.597000000027833e-06]</msg>
<status status="PASS" starttime="20201029 09:34:52.151" endtime="20201029 09:34:52.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.141" endtime="20201029 09:34:52.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.643" endtime="20201029 09:34:52.159"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.642" endtime="20201029 09:34:52.159"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.180" endtime="20201029 09:34:52.192"></status>
</kw>
<msg timestamp="20201029 09:34:52.193" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:52.177" endtime="20201029 09:34:52.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.200" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:52.196" endtime="20201029 09:34:52.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.203" endtime="20201029 09:34:52.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.169" endtime="20201029 09:34:52.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.164" endtime="20201029 09:34:52.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.226" endtime="20201029 09:34:52.621"></status>
</kw>
<msg timestamp="20201029 09:34:52.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.138909347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.138919292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:52.223" endtime="20201029 09:34:52.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.138909347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.138919292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:52.632" endtime="20201029 09:34:52.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.654" endtime="20201029 09:34:52.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.215" endtime="20201029 09:34:52.661"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.211" endtime="20201029 09:34:52.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:52.675" level="INFO">${RESULT} = [{'diff': 9.944999999955684e-06}, {'diff': 9.818999999966493e-06}, {'diff': 9.431000000059697e-06}, {'diff': 9.111000000006086e-06}, {'diff': 9.611999999936671e-06}, {'diff': 9.096999999957944e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:52.664" endtime="20201029 09:34:52.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:52.686" level="INFO">${OVERHEAD} = {'diff': [9.944999999955684e-06, 9.818999999966493e-06, 9.431000000059697e-06, 9.111000000006086e-06, 9.611999999936671e-06, 9.096999999957944e-06, 9.112000000088827e-06, 9.611999999936671e-06, 9.7629...</msg>
<status status="PASS" starttime="20201029 09:34:52.677" endtime="20201029 09:34:52.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.696" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:52.694" endtime="20201029 09:34:52.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.702" level="INFO">VALUE: [9.944999999955684e-06, 9.818999999966493e-06, 9.431000000059697e-06, 9.111000000006086e-06, 9.611999999936671e-06, 9.096999999957944e-06, 9.112000000088827e-06, 9.611999999936671e-06, 9.76299999999597e-06, 9.332999999944747e-06, 9.597000000027833e-06, 9.26400000000882e-06, 9.444000000025099e-06, 9.597000000027833e-06, 9.597000000027833e-06, 9.26400000000882e-06, 8.929999999907068e-06, 9.44500000010784e-06, 9.582999999979691e-06, 9.611000000075975e-06, 9.611000000075975e-06, 9.458000000073241e-06, 9.305999999931203e-06, 8.916999999941666e-06, 9.013999999973876e-06, 9.112000000088827e-06, 9.444999999885795e-06, 9.44500000010784e-06, 9.597000000027833e-06, 9.111000000006086e-06, 9.402999999963413e-06, 9.76299999999597e-06, 9.61099999985393e-06, 9.098000000040685e-06, 9.777999999904807e-06, 9.278000000056963e-06, 9.111000000006086e-06, 9.444000000025099e-06, 8.930999999989808e-06, 9.346999999992889e-06, 9.26400000000882e-06, 9.597000000027833e-06, 9.082999999909802e-06, 8.94399999995521e-06, 8.929999999907068e-06, 9.083999999992542e-06, 9.806000000001092e-06, 9.680000000011901e-06, 9.333999999805442e-06, 9.111000000006086e-06, 9.944999999955684e-06, 9.431000000059697e-06, 9.111000000006086e-06, 9.598000000110574e-06, 9.26400000000882e-06, 9.26400000000882e-06, 8.889000000067426e-06, 9.597000000027833e-06, 9.431000000059697e-06, 9.249999999960679e-06, 9.777000000044112e-06, 9.429999999976957e-06, 9.777999999904807e-06, 9.76400000007871e-06]</msg>
<status status="PASS" starttime="20201029 09:34:52.698" endtime="20201029 09:34:52.703"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.688" endtime="20201029 09:34:52.704"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.161" endtime="20201029 09:34:52.706"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.160" endtime="20201029 09:34:52.706"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.727" endtime="20201029 09:34:52.742"></status>
</kw>
<msg timestamp="20201029 09:34:52.743" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:52.724" endtime="20201029 09:34:52.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.749" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:52.745" endtime="20201029 09:34:52.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.751" endtime="20201029 09:34:52.755"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.716" endtime="20201029 09:34:52.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.712" endtime="20201029 09:34:52.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.777" endtime="20201029 09:34:53.143"></status>
</kw>
<msg timestamp="20201029 09:34:53.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.647360208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.647370153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:52.773" endtime="20201029 09:34:53.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.647360208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.647370153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:53.154" endtime="20201029 09:34:53.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.177" endtime="20201029 09:34:53.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.765" endtime="20201029 09:34:53.183"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.760" endtime="20201029 09:34:53.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:53.196" level="INFO">${RESULT} = [{'diff': 9.944999999955684e-06}, {'diff': 9.431000000059697e-06}, {'diff': 9.111000000006086e-06}, {'diff': 9.598000000110574e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.26400000000882e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:53.186" endtime="20201029 09:34:53.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:53.207" level="INFO">${OVERHEAD} = {'diff': [9.944999999955684e-06, 9.431000000059697e-06, 9.111000000006086e-06, 9.598000000110574e-06, 9.26400000000882e-06, 9.26400000000882e-06, 8.889000000067426e-06, 9.597000000027833e-06, 9.431000...</msg>
<status status="PASS" starttime="20201029 09:34:53.198" endtime="20201029 09:34:53.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.217" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:53.214" endtime="20201029 09:34:53.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.223" level="INFO">VALUE: [9.944999999955684e-06, 9.431000000059697e-06, 9.111000000006086e-06, 9.598000000110574e-06, 9.26400000000882e-06, 9.26400000000882e-06, 8.889000000067426e-06, 9.597000000027833e-06, 9.431000000059697e-06, 9.249999999960679e-06, 9.777000000044112e-06, 9.429999999976957e-06, 9.777999999904807e-06, 9.76400000007871e-06, 9.082999999687758e-06, 9.402999999963413e-06, 9.431000000059697e-06, 9.111000000228131e-06, 9.750000000252612e-06, 9.80500000036244e-06, 9.291999999661016e-06, 9.277999999834918e-06, 9.459000000155982e-06, 9.041999999848116e-06, 8.945000000259995e-06, 9.638999999950215e-06, 8.929999999907068e-06, 9.749999999808523e-06, 9.61099999985393e-06, 8.930999999989808e-06, 9.597999999666484e-06, 8.930999999989808e-06, 9.76400000007871e-06, 9.06899999986166e-06, 9.26400000000882e-06, 9.597000000027833e-06, 9.111000000228131e-06, 9.193999999990154e-06, 9.472999999982079e-06, 9.597000000027833e-06, 9.249999999738634e-06, 9.26400000000882e-06, 8.958000000003352e-06, 9.444000000247144e-06, 9.431000000059697e-06, 9.749999999808523e-06, 9.250000000182723e-06, 9.443999999803054e-06, 9.943999999872943e-06, 9.736999999621077e-06, 8.929999999907068e-06, 9.76400000007871e-06, 9.278000000279008e-06, 8.986000000099637e-06, 9.083999999770498e-06, 9.195000000072895e-06, 9.598000000110574e-06, 9.26400000000882e-06, 9.429999999976957e-06, 9.444000000247144e-06, 9.6670000000465e-06, 8.930999999989808e-06, 9.444000000247144e-06, 9.277999999834918e-06]</msg>
<status status="PASS" starttime="20201029 09:34:53.219" endtime="20201029 09:34:53.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.208" endtime="20201029 09:34:53.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.708" endtime="20201029 09:34:53.227"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.707" endtime="20201029 09:34:53.227"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.249" endtime="20201029 09:34:53.263"></status>
</kw>
<msg timestamp="20201029 09:34:53.264" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:53.246" endtime="20201029 09:34:53.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.271" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:53.266" endtime="20201029 09:34:53.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.273" endtime="20201029 09:34:53.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.238" endtime="20201029 09:34:53.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.232" endtime="20201029 09:34:53.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.296" endtime="20201029 09:34:53.682"></status>
</kw>
<msg timestamp="20201029 09:34:53.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.184931556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.184940486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:53.293" endtime="20201029 09:34:53.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.184931556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.184940486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:53.694" endtime="20201029 09:34:53.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.717" endtime="20201029 09:34:53.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.286" endtime="20201029 09:34:53.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.281" endtime="20201029 09:34:53.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:53.735" level="INFO">${RESULT} = [{'diff': 8.929999999907068e-06}, {'diff': 9.76400000007871e-06}, {'diff': 9.278000000279008e-06}, {'diff': 8.986000000099637e-06}, {'diff': 9.083999999770498e-06}, {'diff': 9.195000000072895e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:53.726" endtime="20201029 09:34:53.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:53.747" level="INFO">${OVERHEAD} = {'diff': [8.929999999907068e-06, 9.76400000007871e-06, 9.278000000279008e-06, 8.986000000099637e-06, 9.083999999770498e-06, 9.195000000072895e-06, 9.598000000110574e-06, 9.26400000000882e-06, 9.429999...</msg>
<status status="PASS" starttime="20201029 09:34:53.738" endtime="20201029 09:34:53.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.758" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:53.756" endtime="20201029 09:34:53.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.763" level="INFO">VALUE: [8.929999999907068e-06, 9.76400000007871e-06, 9.278000000279008e-06, 8.986000000099637e-06, 9.083999999770498e-06, 9.195000000072895e-06, 9.598000000110574e-06, 9.26400000000882e-06, 9.429999999976957e-06, 9.444000000247144e-06, 9.6670000000465e-06, 8.930999999989808e-06, 9.444000000247144e-06, 9.277999999834918e-06, 9.583000000201736e-06, 8.944000000177255e-06, 9.625000000124118e-06, 9.26299999992608e-06, 9.639000000394304e-06, 9.41599999970677e-06, 9.750000000252612e-06, 8.945000000259995e-06, 9.95800000014313e-06, 8.944000000177255e-06, 9.26400000000882e-06, 9.041999999848116e-06, 9.125000000054229e-06, 8.943999999733165e-06, 9.792000000174994e-06, 9.277999999834918e-06, 9.277999999834918e-06, 9.76399999963462e-06, 9.111000000228131e-06, 9.61099999985393e-06, 9.76400000007871e-06, 9.402999999963413e-06, 9.125000000054229e-06, 9.819000000188538e-06, 9.625000000124118e-06, 9.9169999998594e-06, 9.111000000228131e-06, 9.4170000002336e-06, 9.277999999834918e-06, 9.597000000027833e-06, 9.4170000002336e-06, 9.110999999784042e-06, 9.4170000002336e-06, 8.944999999815906e-06, 9.61099999985393e-06, 9.569000000375638e-06, 9.096999999957944e-06, 9.250000000182723e-06, 9.943999999872943e-06, 9.76299999999597e-06, 9.76400000007871e-06, 8.916999999719621e-06, 9.598000000110574e-06, 9.098000000040685e-06, 9.443999999803054e-06, 9.26400000000882e-06, 9.26400000000882e-06, 8.902999999893524e-06, 8.889000000067426e-06, 9.319000000118649e-06]</msg>
<status status="PASS" starttime="20201029 09:34:53.760" endtime="20201029 09:34:53.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.749" endtime="20201029 09:34:53.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.229" endtime="20201029 09:34:53.768"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.228" endtime="20201029 09:34:53.768"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.789" endtime="20201029 09:34:53.803"></status>
</kw>
<msg timestamp="20201029 09:34:53.804" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:53.785" endtime="20201029 09:34:53.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.810" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:53.806" endtime="20201029 09:34:53.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.812" endtime="20201029 09:34:53.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.778" endtime="20201029 09:34:53.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.773" endtime="20201029 09:34:53.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.836" endtime="20201029 09:34:54.229"></status>
</kw>
<msg timestamp="20201029 09:34:54.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.69660775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.696616847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:53.833" endtime="20201029 09:34:54.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.69660775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.696616847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:54.241" endtime="20201029 09:34:54.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.264" endtime="20201029 09:34:54.268"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.825" endtime="20201029 09:34:54.270"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.821" endtime="20201029 09:34:54.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:54.283" level="INFO">${RESULT} = [{'diff': 9.096999999957944e-06}, {'diff': 9.250000000182723e-06}, {'diff': 9.943999999872943e-06}, {'diff': 9.76299999999597e-06}, {'diff': 9.76400000007871e-06}, {'diff': 8.916999999719621e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:54.273" endtime="20201029 09:34:54.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:54.298" level="INFO">${OVERHEAD} = {'diff': [9.096999999957944e-06, 9.250000000182723e-06, 9.943999999872943e-06, 9.76299999999597e-06, 9.76400000007871e-06, 8.916999999719621e-06, 9.598000000110574e-06, 9.098000000040685e-06, 9.443999...</msg>
<status status="PASS" starttime="20201029 09:34:54.285" endtime="20201029 09:34:54.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.309" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:54.307" endtime="20201029 09:34:54.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.315" level="INFO">VALUE: [9.096999999957944e-06, 9.250000000182723e-06, 9.943999999872943e-06, 9.76299999999597e-06, 9.76400000007871e-06, 8.916999999719621e-06, 9.598000000110574e-06, 9.098000000040685e-06, 9.443999999803054e-06, 9.26400000000882e-06, 9.26400000000882e-06, 8.902999999893524e-06, 8.889000000067426e-06, 9.319000000118649e-06, 9.250000000182723e-06, 9.278000000279008e-06, 9.125000000054229e-06, 9.583000000201736e-06, 9.819000000188538e-06, 8.945000000259995e-06, 9.111000000228131e-06, 8.958999999642003e-06, 9.26400000000882e-06, 9.431000000059697e-06, 9.458000000073241e-06, 8.929999999907068e-06, 9.250000000182723e-06, 9.096999999957944e-06, 9.26400000000882e-06, 8.902999999893524e-06, 9.277999999834918e-06, 9.583000000201736e-06, 9.819000000188538e-06, 9.680999999872597e-06, 9.61099999985393e-06, 9.597000000027833e-06, 9.402999999963413e-06, 9.222000000086439e-06, 9.096999999957944e-06, 9.444000000247144e-06, 8.930999999989808e-06, 9.776999999822067e-06, 9.084000000214587e-06, 8.929999999907068e-06, 9.76399999963462e-06, 9.431000000059697e-06, 8.930999999989808e-06, 9.291000000022365e-06, 9.236999999995277e-06, 9.624999999680028e-06, 9.389000000137315e-06, 9.598000000110574e-06, 8.860999999971142e-06, 9.584000000284476e-06, 8.999999999925734e-06, 9.625000000124118e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.76400000007871e-06, 9.277999999834918e-06, 9.098000000040685e-06, 9.110999999784042e-06, 9.41699999978951e-06, 8.986000000099637e-06]</msg>
<status status="PASS" starttime="20201029 09:34:54.311" endtime="20201029 09:34:54.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.300" endtime="20201029 09:34:54.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.770" endtime="20201029 09:34:54.319"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.769" endtime="20201029 09:34:54.319"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.340" endtime="20201029 09:34:54.354"></status>
</kw>
<msg timestamp="20201029 09:34:54.355" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:54.336" endtime="20201029 09:34:54.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.361" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:54.357" endtime="20201029 09:34:54.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.364" endtime="20201029 09:34:54.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.329" endtime="20201029 09:34:54.369"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.324" endtime="20201029 09:34:54.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.388" endtime="20201029 09:34:54.767"></status>
</kw>
<msg timestamp="20201029 09:34:54.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.226032389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.226041778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:54.384" endtime="20201029 09:34:54.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.226032389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.226041778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:54.779" endtime="20201029 09:34:54.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.802" endtime="20201029 09:34:54.806"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.377" endtime="20201029 09:34:54.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.372" endtime="20201029 09:34:54.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:54.820" level="INFO">${RESULT} = [{'diff': 9.389000000137315e-06}, {'diff': 9.598000000110574e-06}, {'diff': 8.860999999971142e-06}, {'diff': 9.584000000284476e-06}, {'diff': 8.999999999925734e-06}, {'diff': 9.625000000124118e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:54.811" endtime="20201029 09:34:54.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:54.831" level="INFO">${OVERHEAD} = {'diff': [9.389000000137315e-06, 9.598000000110574e-06, 8.860999999971142e-06, 9.584000000284476e-06, 8.999999999925734e-06, 9.625000000124118e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.76400...</msg>
<status status="PASS" starttime="20201029 09:34:54.822" endtime="20201029 09:34:54.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.841" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:54.839" endtime="20201029 09:34:54.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.847" level="INFO">VALUE: [9.389000000137315e-06, 9.598000000110574e-06, 8.860999999971142e-06, 9.584000000284476e-06, 8.999999999925734e-06, 9.625000000124118e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.76400000007871e-06, 9.277999999834918e-06, 9.098000000040685e-06, 9.110999999784042e-06, 9.41699999978951e-06, 8.986000000099637e-06, 9.597000000027833e-06, 9.41599999970677e-06, 9.195000000072895e-06, 9.111000000228131e-06, 9.111000000228131e-06, 9.61099999985393e-06, 9.236999999995277e-06, 9.777999999904807e-06, 9.541999999918005e-06, 9.597999999666484e-06, 9.791999999730905e-06, 9.777999999904807e-06, 8.916999999719621e-06, 9.250000000182723e-06, 9.944999999955684e-06, 9.777999999904807e-06, 8.91700000016371e-06, 9.276999999752178e-06, 9.554999999661362e-06, 8.944000000177255e-06, 9.083000000131847e-06, 8.929999999907068e-06, 9.41600000015086e-06, 9.597000000027833e-06, 9.749999999808523e-06, 8.943999999733165e-06, 9.389000000137315e-06, 9.083999999770498e-06, 9.445000000329884e-06, 9.291000000022365e-06, 9.083999999770498e-06, 8.930999999989808e-06, 9.777999999904807e-06, 9.112000000310871e-06, 9.292000000105105e-06, 9.431000000059697e-06, 9.278000000279008e-06, 9.61100000029802e-06, 9.056000000118303e-06, 9.277999999834918e-06, 9.9169999998594e-06, 9.083000000131847e-06, 9.680000000233946e-06, 9.583000000201736e-06, 8.930999999989808e-06, 9.735999999982425e-06, 9.930000000046846e-06, 9.26299999992608e-06, 9.292000000105105e-06, 9.625000000124118e-06]</msg>
<status status="PASS" starttime="20201029 09:34:54.844" endtime="20201029 09:34:54.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.833" endtime="20201029 09:34:54.849"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.321" endtime="20201029 09:34:54.851"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.320" endtime="20201029 09:34:54.851"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.874" endtime="20201029 09:34:54.888"></status>
</kw>
<msg timestamp="20201029 09:34:54.889" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:54.869" endtime="20201029 09:34:54.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.895" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:54.891" endtime="20201029 09:34:54.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.897" endtime="20201029 09:34:54.901"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.861" endtime="20201029 09:34:54.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.857" endtime="20201029 09:34:54.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.922" endtime="20201029 09:34:55.316"></status>
</kw>
<msg timestamp="20201029 09:34:55.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.766579764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.766589042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:54.919" endtime="20201029 09:34:55.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.766579764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.766589042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:55.328" endtime="20201029 09:34:55.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.351" endtime="20201029 09:34:55.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.911" endtime="20201029 09:34:55.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.906" endtime="20201029 09:34:55.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:55.370" level="INFO">${RESULT} = [{'diff': 9.278000000279008e-06}, {'diff': 9.61100000029802e-06}, {'diff': 9.056000000118303e-06}, {'diff': 9.277999999834918e-06}, {'diff': 9.9169999998594e-06}, {'diff': 9.083000000131847e-06}, {'di...</msg>
<status status="PASS" starttime="20201029 09:34:55.360" endtime="20201029 09:34:55.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:55.381" level="INFO">${OVERHEAD} = {'diff': [9.278000000279008e-06, 9.61100000029802e-06, 9.056000000118303e-06, 9.277999999834918e-06, 9.9169999998594e-06, 9.083000000131847e-06, 9.680000000233946e-06, 9.583000000201736e-06, 8.9309999...</msg>
<status status="PASS" starttime="20201029 09:34:55.372" endtime="20201029 09:34:55.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.392" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:55.389" endtime="20201029 09:34:55.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.397" level="INFO">VALUE: [9.278000000279008e-06, 9.61100000029802e-06, 9.056000000118303e-06, 9.277999999834918e-06, 9.9169999998594e-06, 9.083000000131847e-06, 9.680000000233946e-06, 9.583000000201736e-06, 8.930999999989808e-06, 9.735999999982425e-06, 9.930000000046846e-06, 9.26299999992608e-06, 9.292000000105105e-06, 9.625000000124118e-06, 9.16699999997661e-06, 9.277000000196267e-06, 9.305999999931203e-06, 9.278000000279008e-06, 9.388999999693226e-06, 9.083000000131847e-06, 9.26400000000882e-06, 9.66699999960241e-06, 9.445000000773973e-06, 9.082999999243668e-06, 9.805999999557002e-06, 8.929999999907068e-06, 9.097000000402033e-06, 9.097000000402033e-06, 9.194000000434244e-06, 9.06899999986166e-06, 9.597000000027833e-06, 9.443999999803054e-06, 9.083000000131847e-06, 9.097000000402033e-06, 8.91600000052506e-06, 8.944000000177255e-06, 9.777999999904807e-06, 9.76399999963462e-06, 9.624999999680028e-06, 9.430999999615608e-06, 9.276999999308089e-06, 9.737000000065166e-06, 8.930999999989808e-06, 9.249999999738634e-06, 9.61100000029802e-06, 9.597000000027833e-06, 9.430000000421046e-06, 9.749999999364434e-06, 9.292000000549194e-06, 9.749999999364434e-06, 9.110999999784042e-06, 8.944000000177255e-06, 8.957999999559263e-06, 9.26400000000882e-06, 8.916999999719621e-06, 9.458000000073241e-06, 9.61100000029802e-06, 9.01400000064001e-06, 9.41600000015086e-06, 9.429999999532868e-06, 9.61100000029802e-06, 9.610999999409842e-06, 9.429999999532868e-06, 9.431000000503786e-06]</msg>
<status status="PASS" starttime="20201029 09:34:55.394" endtime="20201029 09:34:55.398"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.383" endtime="20201029 09:34:55.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.853" endtime="20201029 09:34:55.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.852" endtime="20201029 09:34:55.402"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.423" endtime="20201029 09:34:55.437"></status>
</kw>
<msg timestamp="20201029 09:34:55.438" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:55.419" endtime="20201029 09:34:55.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.444" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:55.440" endtime="20201029 09:34:55.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.447" endtime="20201029 09:34:55.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.412" endtime="20201029 09:34:55.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.407" endtime="20201029 09:34:55.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.471" endtime="20201029 09:34:55.861"></status>
</kw>
<msg timestamp="20201029 09:34:55.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.289462847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.289471958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:55.467" endtime="20201029 09:34:55.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.289462847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.289471958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:55.872" endtime="20201029 09:34:55.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.895" endtime="20201029 09:34:55.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.460" endtime="20201029 09:34:55.900"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.455" endtime="20201029 09:34:55.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:55.913" level="INFO">${RESULT} = [{'diff': 9.110999999784042e-06}, {'diff': 8.944000000177255e-06}, {'diff': 8.957999999559263e-06}, {'diff': 9.26400000000882e-06}, {'diff': 8.916999999719621e-06}, {'diff': 9.458000000073241e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:55.904" endtime="20201029 09:34:55.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:55.926" level="INFO">${OVERHEAD} = {'diff': [9.110999999784042e-06, 8.944000000177255e-06, 8.957999999559263e-06, 9.26400000000882e-06, 8.916999999719621e-06, 9.458000000073241e-06, 9.61100000029802e-06, 9.01400000064001e-06, 9.4160000...</msg>
<status status="PASS" starttime="20201029 09:34:55.915" endtime="20201029 09:34:55.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.936" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:55.934" endtime="20201029 09:34:55.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.942" level="INFO">VALUE: [9.110999999784042e-06, 8.944000000177255e-06, 8.957999999559263e-06, 9.26400000000882e-06, 8.916999999719621e-06, 9.458000000073241e-06, 9.61100000029802e-06, 9.01400000064001e-06, 9.41600000015086e-06, 9.429999999532868e-06, 9.61100000029802e-06, 9.610999999409842e-06, 9.429999999532868e-06, 9.431000000503786e-06, 9.777999999904807e-06, 9.597000000027833e-06, 9.597000000027833e-06, 8.958999999642003e-06, 9.61100000029802e-06, 9.61100000029802e-06, 9.666000000407848e-06, 9.263000000814259e-06, 9.583000000645825e-06, 9.431000000503786e-06, 8.929999999907068e-06, 9.249999999738634e-06, 9.249999999738634e-06, 9.125000000054229e-06, 8.944000000177255e-06, 9.013999999751832e-06, 9.667000000490589e-06, 9.278000000279008e-06, 9.541999999918005e-06, 9.082999999243668e-06, 8.915999999636881e-06, 8.945000000259995e-06, 9.763000000440059e-06, 9.472000000343428e-06, 9.277000000196267e-06, 9.445000000773973e-06, 9.26400000000882e-06, 9.61100000029802e-06, 9.61100000029802e-06, 9.791000000092254e-06, 9.61100000029802e-06, 9.61100000029802e-06, 9.637999999867475e-06, 9.16699999997661e-06, 9.097000000402033e-06, 9.777999999904807e-06, 9.485999999725436e-06, 9.083999999326409e-06, 9.26400000000882e-06, 9.430999999615608e-06, 9.110999999784042e-06, 9.431000000503786e-06, 9.431000000503786e-06, 9.76399999963462e-06, 9.291999999661016e-06, 9.110999999784042e-06, 9.66699999960241e-06, 9.26400000000882e-06, 8.930999999989808e-06, 9.11100000067222e-06]</msg>
<status status="PASS" starttime="20201029 09:34:55.938" endtime="20201029 09:34:55.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.928" endtime="20201029 09:34:55.944"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.404" endtime="20201029 09:34:55.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.403" endtime="20201029 09:34:55.946"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.970" endtime="20201029 09:34:55.986"></status>
</kw>
<msg timestamp="20201029 09:34:55.987" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:55.966" endtime="20201029 09:34:55.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.996" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:55.991" endtime="20201029 09:34:55.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.998" endtime="20201029 09:34:56.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.957" endtime="20201029 09:34:56.005"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.952" endtime="20201029 09:34:56.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.029" endtime="20201029 09:34:56.397"></status>
</kw>
<msg timestamp="20201029 09:34:56.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.828529931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.828539417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:56.024" endtime="20201029 09:34:56.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.828529931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.828539417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:56.408" endtime="20201029 09:34:56.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.431" endtime="20201029 09:34:56.435"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.015" endtime="20201029 09:34:56.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.009" endtime="20201029 09:34:56.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:56.449" level="INFO">${RESULT} = [{'diff': 9.485999999725436e-06}, {'diff': 9.083999999326409e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.430999999615608e-06}, {'diff': 9.110999999784042e-06}, {'diff': 9.431000000503786e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:56.440" endtime="20201029 09:34:56.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:56.460" level="INFO">${OVERHEAD} = {'diff': [9.485999999725436e-06, 9.083999999326409e-06, 9.26400000000882e-06, 9.430999999615608e-06, 9.110999999784042e-06, 9.431000000503786e-06, 9.431000000503786e-06, 9.76399999963462e-06, 9.291999...</msg>
<status status="PASS" starttime="20201029 09:34:56.452" endtime="20201029 09:34:56.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.471" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:56.468" endtime="20201029 09:34:56.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.476" level="INFO">VALUE: [9.485999999725436e-06, 9.083999999326409e-06, 9.26400000000882e-06, 9.430999999615608e-06, 9.110999999784042e-06, 9.431000000503786e-06, 9.431000000503786e-06, 9.76399999963462e-06, 9.291999999661016e-06, 9.110999999784042e-06, 9.66699999960241e-06, 9.26400000000882e-06, 8.930999999989808e-06, 9.11100000067222e-06, 9.097999999596595e-06, 9.777999999904807e-06, 9.277000000196267e-06, 9.764000000522799e-06, 9.278000000279008e-06, 8.9170000006078e-06, 9.277999999390829e-06, 9.402999999963413e-06, 9.583999999840387e-06, 9.096999999513855e-06, 8.97199999982945e-06, 9.083000000131847e-06, 9.597000000027833e-06, 9.041999999404027e-06, 9.597000000027833e-06, 9.26400000000882e-06, 9.083000000131847e-06, 9.750000000252612e-06, 9.096999999513855e-06, 9.22199999919826e-06, 9.098000000484774e-06, 8.9170000006078e-06, 9.804999999474262e-06, 8.930999999989808e-06, 9.931000000129586e-06, 9.597000000027833e-06, 9.11100000067222e-06, 9.944000000317033e-06, 8.986000000099637e-06, 9.776999999822067e-06, 9.930000000046846e-06, 9.4170000002336e-06, 9.792000000174994e-06, 9.278000000279008e-06, 8.929999999907068e-06, 8.944000000177255e-06, 9.250000000626812e-06, 9.152999999706424e-06, 9.61100000029802e-06, 9.750000000252612e-06, 9.097999999596595e-06, 9.443999999803054e-06, 9.430999999615608e-06, 9.096999999513855e-06, 9.110999999784042e-06, 9.277999999390829e-06, 9.125000000054229e-06, 9.277000000196267e-06, 9.290999999578275e-06, 9.597000000027833e-06]</msg>
<status status="PASS" starttime="20201029 09:34:56.473" endtime="20201029 09:34:56.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.462" endtime="20201029 09:34:56.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.948" endtime="20201029 09:34:56.480"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.947" endtime="20201029 09:34:56.481"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.502" endtime="20201029 09:34:56.517"></status>
</kw>
<msg timestamp="20201029 09:34:56.519" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:56.498" endtime="20201029 09:34:56.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.525" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:56.521" endtime="20201029 09:34:56.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.527" endtime="20201029 09:34:56.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.491" endtime="20201029 09:34:56.533"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.486" endtime="20201029 09:34:56.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.552" endtime="20201029 09:34:56.921"></status>
</kw>
<msg timestamp="20201029 09:34:56.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.365033056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.365042306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:56.548" endtime="20201029 09:34:56.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.365033056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.365042306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:56.933" endtime="20201029 09:34:56.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.955" endtime="20201029 09:34:56.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.540" endtime="20201029 09:34:56.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.536" endtime="20201029 09:34:56.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:56.974" level="INFO">${RESULT} = [{'diff': 9.250000000626812e-06}, {'diff': 9.152999999706424e-06}, {'diff': 9.61100000029802e-06}, {'diff': 9.750000000252612e-06}, {'diff': 9.097999999596595e-06}, {'diff': 9.443999999803054e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:56.964" endtime="20201029 09:34:56.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:56.986" level="INFO">${OVERHEAD} = {'diff': [9.250000000626812e-06, 9.152999999706424e-06, 9.61100000029802e-06, 9.750000000252612e-06, 9.097999999596595e-06, 9.443999999803054e-06, 9.430999999615608e-06, 9.096999999513855e-06, 9.11099...</msg>
<status status="PASS" starttime="20201029 09:34:56.976" endtime="20201029 09:34:56.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.996" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:56.994" endtime="20201029 09:34:56.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.002" level="INFO">VALUE: [9.250000000626812e-06, 9.152999999706424e-06, 9.61100000029802e-06, 9.750000000252612e-06, 9.097999999596595e-06, 9.443999999803054e-06, 9.430999999615608e-06, 9.096999999513855e-06, 9.110999999784042e-06, 9.277999999390829e-06, 9.125000000054229e-06, 9.277000000196267e-06, 9.290999999578275e-06, 9.597000000027833e-06, 9.485999999725436e-06, 9.597000000027833e-06, 9.11100000067222e-06, 9.4170000002336e-06, 9.597000000027833e-06, 8.944999999371817e-06, 9.777999999904807e-06, 9.777000000710245e-06, 9.625000000568207e-06, 9.721999999712239e-06, 8.945000000259995e-06, 9.361000000041031e-06, 9.096999999513855e-06, 9.110999999784042e-06, 8.929999999907068e-06, 9.249999999738634e-06, 9.431000000503786e-06, 8.916999999719621e-06, 9.12499999916605e-06, 9.931000000129586e-06, 9.750000000252612e-06, 9.096999999513855e-06, 9.5699999995702e-06, 9.776999999822067e-06, 9.402999999963413e-06, 9.278000000279008e-06, 8.945000000259995e-06, 8.929999999907068e-06, 9.444000000691233e-06, 9.207999999816252e-06, 9.277999999390829e-06, 9.26400000000882e-06, 9.430000000421046e-06, 9.292000000549194e-06, 9.361000000041031e-06, 9.11100000067222e-06, 9.26400000000882e-06, 9.097999999596595e-06, 9.083000000131847e-06, 9.597000000027833e-06, 9.429999999532868e-06, 9.76399999963462e-06, 9.915999999776659e-06, 9.152999999706424e-06, 9.430999999615608e-06, 8.944999999371817e-06, 9.096999999513855e-06, 9.276999999308089e-06, 9.096999999513855e-06, 8.944000000177255e-06]</msg>
<status status="PASS" starttime="20201029 09:34:56.998" endtime="20201029 09:34:57.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.988" endtime="20201029 09:34:57.005"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.483" endtime="20201029 09:34:57.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.482" endtime="20201029 09:34:57.006"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.027" endtime="20201029 09:34:57.041"></status>
</kw>
<msg timestamp="20201029 09:34:57.042" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:57.024" endtime="20201029 09:34:57.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.049" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:57.045" endtime="20201029 09:34:57.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.051" endtime="20201029 09:34:57.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.016" endtime="20201029 09:34:57.056"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.012" endtime="20201029 09:34:57.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.076" endtime="20201029 09:34:57.463"></status>
</kw>
<msg timestamp="20201029 09:34:57.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.888115083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.888124347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:57.072" endtime="20201029 09:34:57.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.888115083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.888124347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:57.475" endtime="20201029 09:34:57.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.497" endtime="20201029 09:34:57.501"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.065" endtime="20201029 09:34:57.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.059" endtime="20201029 09:34:57.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:57.515" level="INFO">${RESULT} = [{'diff': 9.26400000000882e-06}, {'diff': 9.097999999596595e-06}, {'diff': 9.083000000131847e-06}, {'diff': 9.597000000027833e-06}, {'diff': 9.429999999532868e-06}, {'diff': 9.76399999963462e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:57.506" endtime="20201029 09:34:57.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:57.528" level="INFO">${OVERHEAD} = {'diff': [9.26400000000882e-06, 9.097999999596595e-06, 9.083000000131847e-06, 9.597000000027833e-06, 9.429999999532868e-06, 9.76399999963462e-06, 9.915999999776659e-06, 9.152999999706424e-06, 9.430999...</msg>
<status status="PASS" starttime="20201029 09:34:57.518" endtime="20201029 09:34:57.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.538" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:57.536" endtime="20201029 09:34:57.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.544" level="INFO">VALUE: [9.26400000000882e-06, 9.097999999596595e-06, 9.083000000131847e-06, 9.597000000027833e-06, 9.429999999532868e-06, 9.76399999963462e-06, 9.915999999776659e-06, 9.152999999706424e-06, 9.430999999615608e-06, 8.944999999371817e-06, 9.096999999513855e-06, 9.276999999308089e-06, 9.096999999513855e-06, 8.944000000177255e-06, 9.097999999596595e-06, 9.444000000691233e-06, 9.527999999647818e-06, 9.096999999513855e-06, 9.26400000000882e-06, 9.110999999784042e-06, 9.76399999963462e-06, 9.430999999615608e-06, 9.277999999390829e-06, 9.597000000027833e-06, 9.444999999885795e-06, 9.430999999615608e-06, 8.944999999371817e-06, 9.26400000000882e-06, 8.9170000006078e-06, 9.834000000097376e-06, 9.4170000002336e-06, 8.943999999289076e-06, 9.431000000503786e-06, 9.430000000421046e-06, 9.583000000645825e-06, 9.096999999513855e-06, 9.764000000522799e-06, 9.4170000002336e-06, 9.889000000207204e-06, 9.81999999982719e-06, 9.777999999904807e-06, 9.76399999963462e-06, 9.597000000027833e-06, 9.110999999784042e-06, 9.777999999904807e-06, 9.096999999513855e-06, 9.764000000522799e-06, 9.431000000503786e-06, 8.929999999907068e-06, 9.125000000054229e-06, 9.249999999738634e-06, 9.624999999680028e-06, 9.26400000000882e-06, 9.055000000479652e-06, 9.444999999885795e-06, 9.569000000375638e-06, 9.583999999840387e-06, 9.597000000027833e-06, 9.26400000000882e-06, 9.818999999744449e-06, 9.76299999955188e-06, 9.084000000214587e-06, 9.110999999784042e-06, 9.429999999532868e-06]</msg>
<status status="PASS" starttime="20201029 09:34:57.541" endtime="20201029 09:34:57.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.530" endtime="20201029 09:34:57.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.008" endtime="20201029 09:34:57.548"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.007" endtime="20201029 09:34:57.548"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.569" endtime="20201029 09:34:57.583"></status>
</kw>
<msg timestamp="20201029 09:34:57.584" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:57.566" endtime="20201029 09:34:57.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.591" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:57.587" endtime="20201029 09:34:57.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.593" endtime="20201029 09:34:57.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.558" endtime="20201029 09:34:57.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.554" endtime="20201029 09:34:57.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.619" endtime="20201029 09:34:58.010"></status>
</kw>
<msg timestamp="20201029 09:34:58.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.403021208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.403030458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:57.615" endtime="20201029 09:34:58.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.403021208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.403030458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:58.021" endtime="20201029 09:34:58.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.044" endtime="20201029 09:34:58.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.607" endtime="20201029 09:34:58.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.602" endtime="20201029 09:34:58.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:58.062" level="INFO">${RESULT} = [{'diff': 9.249999999738634e-06}, {'diff': 9.624999999680028e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.055000000479652e-06}, {'diff': 9.444999999885795e-06}, {'diff': 9.569000000375638e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:58.053" endtime="20201029 09:34:58.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:58.073" level="INFO">${OVERHEAD} = {'diff': [9.249999999738634e-06, 9.624999999680028e-06, 9.26400000000882e-06, 9.055000000479652e-06, 9.444999999885795e-06, 9.569000000375638e-06, 9.583999999840387e-06, 9.597000000027833e-06, 9.26400...</msg>
<status status="PASS" starttime="20201029 09:34:58.065" endtime="20201029 09:34:58.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.083" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:58.081" endtime="20201029 09:34:58.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.089" level="INFO">VALUE: [9.249999999738634e-06, 9.624999999680028e-06, 9.26400000000882e-06, 9.055000000479652e-06, 9.444999999885795e-06, 9.569000000375638e-06, 9.583999999840387e-06, 9.597000000027833e-06, 9.26400000000882e-06, 9.818999999744449e-06, 9.76299999955188e-06, 9.084000000214587e-06, 9.110999999784042e-06, 9.429999999532868e-06, 9.278000000279008e-06, 9.110999999784042e-06, 9.26400000000882e-06, 9.096999999513855e-06, 9.61200000038076e-06, 9.291999999661016e-06, 9.111999999866782e-06, 9.292000000549194e-06, 9.777000000710245e-06, 9.61100000029802e-06, 9.208999999898992e-06, 9.76399999963462e-06, 8.930999999989808e-06, 9.444000000691233e-06, 9.096999999513855e-06, 9.430000000421046e-06, 9.805999999557002e-06, 9.097000000402033e-06, 9.125000000054229e-06, 9.388000000498664e-06, 9.430000000421046e-06, 9.083000000131847e-06, 9.735999999982425e-06, 9.278000000279008e-06, 9.764000000522799e-06, 9.083000000131847e-06, 8.916999999719621e-06, 9.0699999999444e-06, 9.777999999904807e-06, 9.278000000279008e-06, 9.097000000402033e-06, 9.429999999532868e-06, 8.91600000052506e-06, 9.764000000522799e-06, 9.26400000000882e-06, 9.26400000000882e-06, 8.929999999907068e-06, 9.084000000214587e-06, 8.930000000795246e-06, 9.485999999725436e-06, 8.916999999719621e-06, 9.764000000522799e-06, 9.624999999680028e-06, 9.944999999511595e-06, 9.125000000054229e-06, 8.929999999907068e-06, 9.084000000214587e-06, 9.777999999904807e-06, 9.776999999822067e-06, 9.582999999757646e-06]</msg>
<status status="PASS" starttime="20201029 09:34:58.086" endtime="20201029 09:34:58.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.075" endtime="20201029 09:34:58.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.550" endtime="20201029 09:34:58.093"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.549" endtime="20201029 09:34:58.094"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.114" endtime="20201029 09:34:58.130"></status>
</kw>
<msg timestamp="20201029 09:34:58.131" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:58.111" endtime="20201029 09:34:58.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.137" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:58.133" endtime="20201029 09:34:58.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.140" endtime="20201029 09:34:58.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.104" endtime="20201029 09:34:58.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.099" endtime="20201029 09:34:58.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.164" endtime="20201029 09:34:58.565"></status>
</kw>
<msg timestamp="20201029 09:34:58.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.934200139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.934209069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:58.161" endtime="20201029 09:34:58.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.934200139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.934209069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:58.592" endtime="20201029 09:34:58.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.631" endtime="20201029 09:34:58.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.153" endtime="20201029 09:34:58.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.148" endtime="20201029 09:34:58.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:58.648" level="INFO">${RESULT} = [{'diff': 8.929999999907068e-06}, {'diff': 9.084000000214587e-06}, {'diff': 8.930000000795246e-06}, {'diff': 9.485999999725436e-06}, {'diff': 8.916999999719621e-06}, {'diff': 9.764000000522799e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:58.639" endtime="20201029 09:34:58.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:58.660" level="INFO">${OVERHEAD} = {'diff': [8.929999999907068e-06, 9.084000000214587e-06, 8.930000000795246e-06, 9.485999999725436e-06, 8.916999999719621e-06, 9.764000000522799e-06, 9.624999999680028e-06, 9.944999999511595e-06, 9.1250...</msg>
<status status="PASS" starttime="20201029 09:34:58.651" endtime="20201029 09:34:58.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.670" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:58.668" endtime="20201029 09:34:58.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.676" level="INFO">VALUE: [8.929999999907068e-06, 9.084000000214587e-06, 8.930000000795246e-06, 9.485999999725436e-06, 8.916999999719621e-06, 9.764000000522799e-06, 9.624999999680028e-06, 9.944999999511595e-06, 9.125000000054229e-06, 8.929999999907068e-06, 9.084000000214587e-06, 9.777999999904807e-06, 9.776999999822067e-06, 9.582999999757646e-06, 9.61100000029802e-06, 9.430000000421046e-06, 9.777999999904807e-06, 9.125000000054229e-06, 8.9170000006078e-06, 9.598000000110574e-06, 9.26299999992608e-06, 9.152999999706424e-06, 8.945000000259995e-06, 9.222000000086439e-06, 9.139000000324415e-06, 9.764000000522799e-06, 9.61200000038076e-06, 9.61100000029802e-06, 9.583999999840387e-06, 9.598000000110574e-06, 9.750000000252612e-06, 9.388999999693226e-06, 8.930999999989808e-06, 9.527999999647818e-06, 9.278000000279008e-06, 9.249999999738634e-06, 9.249999999738634e-06, 9.777999999904807e-06, 9.777999999904807e-06, 9.61100000029802e-06, 9.430999999615608e-06, 9.778000000792986e-06, 9.597000000027833e-06, 9.443999999803054e-06, 9.11100000067222e-06, 9.096999999513855e-06, 9.26400000000882e-06, 9.610999999409842e-06, 9.444999999885795e-06, 9.388999999693226e-06, 8.929999999907068e-06, 9.624999999680028e-06, 9.624999999680028e-06, 9.402999999963413e-06, 9.249999999738634e-06, 9.638999999950215e-06, 9.61100000029802e-06, 9.278000000279008e-06, 9.61100000029802e-06, 9.444000000691233e-06, 8.916999999719621e-06, 9.777999999904807e-06, 8.929999999907068e-06, 9.402999999963413e-06]</msg>
<status status="PASS" starttime="20201029 09:34:58.672" endtime="20201029 09:34:58.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.662" endtime="20201029 09:34:58.678"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.095" endtime="20201029 09:34:58.680"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.094" endtime="20201029 09:34:58.680"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.700" endtime="20201029 09:34:58.712"></status>
</kw>
<msg timestamp="20201029 09:34:58.713" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:58.697" endtime="20201029 09:34:58.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.719" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:58.715" endtime="20201029 09:34:58.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.722" endtime="20201029 09:34:58.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.690" endtime="20201029 09:34:58.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.685" endtime="20201029 09:34:58.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.745" endtime="20201029 09:34:59.113"></status>
</kw>
<msg timestamp="20201029 09:34:59.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.469956431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.469965361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:58.742" endtime="20201029 09:34:59.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.469956431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.469965361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:59.124" endtime="20201029 09:34:59.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.146" endtime="20201029 09:34:59.150"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.735" endtime="20201029 09:34:59.152"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.730" endtime="20201029 09:34:59.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:59.164" level="INFO">${RESULT} = [{'diff': 8.929999999907068e-06}, {'diff': 9.624999999680028e-06}, {'diff': 9.624999999680028e-06}, {'diff': 9.402999999963413e-06}, {'diff': 9.249999999738634e-06}, {'diff': 9.638999999950215e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:59.154" endtime="20201029 09:34:59.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:59.180" level="INFO">${OVERHEAD} = {'diff': [8.929999999907068e-06, 9.624999999680028e-06, 9.624999999680028e-06, 9.402999999963413e-06, 9.249999999738634e-06, 9.638999999950215e-06, 9.61100000029802e-06, 9.278000000279008e-06, 9.61100...</msg>
<status status="PASS" starttime="20201029 09:34:59.166" endtime="20201029 09:34:59.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.190" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:59.187" endtime="20201029 09:34:59.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.195" level="INFO">VALUE: [8.929999999907068e-06, 9.624999999680028e-06, 9.624999999680028e-06, 9.402999999963413e-06, 9.249999999738634e-06, 9.638999999950215e-06, 9.61100000029802e-06, 9.278000000279008e-06, 9.61100000029802e-06, 9.444000000691233e-06, 8.916999999719621e-06, 9.777999999904807e-06, 8.929999999907068e-06, 9.402999999963413e-06, 9.249999999738634e-06, 9.263999999120642e-06, 9.833000000014636e-06, 8.874999998909061e-06, 9.80600000133336e-06, 9.097999999596595e-06, 8.9170000006078e-06, 9.096999999513855e-06, 9.125000000054229e-06, 9.110999998895863e-06, 9.11100000067222e-06, 9.792000000174994e-06, 9.25000000151499e-06, 9.264000000897e-06, 9.778000000792986e-06, 9.388999998805048e-06, 9.597000000027833e-06, 9.16699999997661e-06, 9.416000001039038e-06, 9.791000000092254e-06, 9.431000000503786e-06, 9.125000000054229e-06, 9.263999999120642e-06, 9.195000000516984e-06, 9.597000000027833e-06, 9.637999999867475e-06, 9.430000000421046e-06, 9.249999999738634e-06, 9.583000000645825e-06, 9.431000000503786e-06, 9.083000000131847e-06, 9.264000000897e-06, 9.582999998869468e-06, 9.597000000027833e-06, 9.22199999919826e-06, 9.777999999016629e-06, 9.249999999738634e-06, 8.930000001683425e-06, 8.901999999366694e-06, 9.597000000027833e-06, 9.45800000096142e-06, 9.611000001186198e-06, 9.125000000054229e-06, 9.598000000110574e-06, 9.263999999120642e-06, 9.76399999963462e-06, 9.096999999513855e-06, 9.444999999885795e-06, 9.443999999803054e-06, 9.65300000110858e-06]</msg>
<status status="PASS" starttime="20201029 09:34:59.192" endtime="20201029 09:34:59.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.182" endtime="20201029 09:34:59.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.682" endtime="20201029 09:34:59.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.681" endtime="20201029 09:34:59.200"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.220" endtime="20201029 09:34:59.232"></status>
</kw>
<msg timestamp="20201029 09:34:59.233" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:59.216" endtime="20201029 09:34:59.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.239" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:59.235" endtime="20201029 09:34:59.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.242" endtime="20201029 09:34:59.246"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.209" endtime="20201029 09:34:59.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.205" endtime="20201029 09:34:59.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.265" endtime="20201029 09:34:59.655"></status>
</kw>
<msg timestamp="20201029 09:34:59.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.043230847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.043240097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:59.262" endtime="20201029 09:34:59.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.043230847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.043240097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:59.667" endtime="20201029 09:34:59.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.689" endtime="20201029 09:34:59.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.255" endtime="20201029 09:34:59.695"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.250" endtime="20201029 09:34:59.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:59.708" level="INFO">${RESULT} = [{'diff': 9.249999999738634e-06}, {'diff': 8.930000001683425e-06}, {'diff': 8.901999999366694e-06}, {'diff': 9.597000000027833e-06}, {'diff': 9.45800000096142e-06}, {'diff': 9.611000001186198e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:59.698" endtime="20201029 09:34:59.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:59.718" level="INFO">${OVERHEAD} = {'diff': [9.249999999738634e-06, 8.930000001683425e-06, 8.901999999366694e-06, 9.597000000027833e-06, 9.45800000096142e-06, 9.611000001186198e-06, 9.125000000054229e-06, 9.598000000110574e-06, 9.26399...</msg>
<status status="PASS" starttime="20201029 09:34:59.710" endtime="20201029 09:34:59.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.729" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:59.726" endtime="20201029 09:34:59.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.734" level="INFO">VALUE: [9.249999999738634e-06, 8.930000001683425e-06, 8.901999999366694e-06, 9.597000000027833e-06, 9.45800000096142e-06, 9.611000001186198e-06, 9.125000000054229e-06, 9.598000000110574e-06, 9.263999999120642e-06, 9.76399999963462e-06, 9.096999999513855e-06, 9.444999999885795e-06, 9.443999999803054e-06, 9.65300000110858e-06, 9.625000000568207e-06, 9.443999999803054e-06, 9.096999999513855e-06, 9.582999998869468e-06, 8.930999999989808e-06, 9.416999999345421e-06, 9.750000000252612e-06, 9.084000000214587e-06, 8.847000000145044e-06, 9.096999999513855e-06, 8.930999999989808e-06, 9.083000000131847e-06, 9.597000000027833e-06, 9.444999999885795e-06, 9.750000000252612e-06, 9.597000000027833e-06, 9.76299999955188e-06, 9.750000000252612e-06, 9.430000000421046e-06, 9.444999999885795e-06, 8.943999999289076e-06, 9.110999998895863e-06, 9.431000000503786e-06, 9.805999999557002e-06, 9.764000001410977e-06, 9.264000000897e-06, 8.930999999989808e-06, 9.249999999738634e-06, 9.582999998869468e-06, 9.625000000568207e-06, 9.513999998489453e-06, 9.054999999591473e-06, 8.930999999989808e-06, 9.583999998952208e-06, 9.43099999872743e-06, 9.667000000490589e-06, 9.263999999120642e-06, 9.16599999989387e-06, 9.430000000421046e-06, 9.430000000421046e-06, 9.264000000897e-06, 9.443999999803054e-06, 9.76399999963462e-06, 8.929999999907068e-06, 9.431000000503786e-06, 9.443999999803054e-06, 9.777000000710245e-06, 9.263999999120642e-06, 9.610999999409842e-06, 9.305999999043024e-06]</msg>
<status status="PASS" starttime="20201029 09:34:59.731" endtime="20201029 09:34:59.735"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.720" endtime="20201029 09:34:59.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.201" endtime="20201029 09:34:59.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.200" endtime="20201029 09:34:59.739"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.759" endtime="20201029 09:34:59.775"></status>
</kw>
<msg timestamp="20201029 09:34:59.776" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:59.756" endtime="20201029 09:34:59.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.783" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:59.778" endtime="20201029 09:34:59.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.785" endtime="20201029 09:34:59.789"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.749" endtime="20201029 09:34:59.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.744" endtime="20201029 09:34:59.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.809" endtime="20201029 09:35:00.201"></status>
</kw>
<msg timestamp="20201029 09:35:00.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.553876792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.553886056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:59.806" endtime="20201029 09:35:00.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.553876792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.553886056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:00.212" endtime="20201029 09:35:00.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.234" endtime="20201029 09:35:00.238"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.798" endtime="20201029 09:35:00.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.794" endtime="20201029 09:35:00.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:00.252" level="INFO">${RESULT} = [{'diff': 9.263999999120642e-06}, {'diff': 9.16599999989387e-06}, {'diff': 9.430000000421046e-06}, {'diff': 9.430000000421046e-06}, {'diff': 9.264000000897e-06}, {'diff': 9.443999999803054e-06}, {'dif...</msg>
<status status="PASS" starttime="20201029 09:35:00.243" endtime="20201029 09:35:00.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:35:00.264" level="INFO">${OVERHEAD} = {'diff': [9.263999999120642e-06, 9.16599999989387e-06, 9.430000000421046e-06, 9.430000000421046e-06, 9.264000000897e-06, 9.443999999803054e-06, 9.76399999963462e-06, 8.929999999907068e-06, 9.431000000...</msg>
<status status="PASS" starttime="20201029 09:35:00.254" endtime="20201029 09:35:00.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.274" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:35:00.272" endtime="20201029 09:35:00.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.279" level="INFO">VALUE: [9.263999999120642e-06, 9.16599999989387e-06, 9.430000000421046e-06, 9.430000000421046e-06, 9.264000000897e-06, 9.443999999803054e-06, 9.76399999963462e-06, 8.929999999907068e-06, 9.431000000503786e-06, 9.443999999803054e-06, 9.777000000710245e-06, 9.263999999120642e-06, 9.610999999409842e-06, 9.305999999043024e-06, 9.777999999016629e-06, 9.76399999963462e-06, 9.430000000421046e-06, 8.930999999989808e-06, 9.790999998315897e-06, 9.584000000728565e-06, 9.597000000027833e-06, 8.930999999989808e-06, 9.443999999803054e-06, 8.930999999989808e-06, 9.598000000110574e-06, 8.875000000685418e-06, 9.443999999803054e-06, 9.598000000110574e-06, 8.916999998831443e-06, 9.083000000131847e-06, 9.792000000174994e-06, 9.41599999926268e-06, 9.598000000110574e-06, 9.805999999557002e-06, 8.930999999989808e-06, 8.930999999989808e-06, 9.278000000279008e-06, 9.584000000728565e-06, 9.778000000792986e-06, 9.084000000214587e-06, 9.62499999879185e-06, 9.430000000421046e-06, 9.707999998553873e-06, 9.750000000252612e-06, 9.138999999436237e-06, 8.902999999449435e-06, 9.416999999345421e-06, 9.778000000792986e-06, 9.16599999989387e-06, 9.25000000151499e-06, 9.81999999893901e-06, 9.416999999345421e-06, 9.278000000279008e-06, 9.444999999885795e-06, 9.667000000490589e-06, 9.666999998714232e-06, 9.249999999738634e-06, 9.443999999803054e-06, 9.610999999409842e-06, 9.055999999674214e-06, 9.264000000897e-06, 9.583000000645825e-06, 9.431000000503786e-06, 9.096999999513855e-06]</msg>
<status status="PASS" starttime="20201029 09:35:00.276" endtime="20201029 09:35:00.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.265" endtime="20201029 09:35:00.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.741" endtime="20201029 09:35:00.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.740" endtime="20201029 09:35:00.284"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.304" endtime="20201029 09:35:00.316"></status>
</kw>
<msg timestamp="20201029 09:35:00.317" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:00.300" endtime="20201029 09:35:00.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.324" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:00.320" endtime="20201029 09:35:00.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.326" endtime="20201029 09:35:00.330"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.293" endtime="20201029 09:35:00.332"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.289" endtime="20201029 09:35:00.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.351" endtime="20201029 09:35:00.711"></status>
</kw>
<msg timestamp="20201029 09:35:00.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.085979347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.085989167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:00.347" endtime="20201029 09:35:00.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.085979347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.085989167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:00.724" endtime="20201029 09:35:00.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.746" endtime="20201029 09:35:00.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.340" endtime="20201029 09:35:00.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.335" endtime="20201029 09:35:00.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:00.764" level="INFO">${RESULT} = [{'diff': 9.81999999893901e-06}, {'diff': 9.416999999345421e-06}, {'diff': 9.278000000279008e-06}, {'diff': 9.444999999885795e-06}, {'diff': 9.667000000490589e-06}, {'diff': 9.666999998714232e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:00.755" endtime="20201029 09:35:00.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:35:00.777" level="INFO">${OVERHEAD} = {'diff': [9.81999999893901e-06, 9.416999999345421e-06, 9.278000000279008e-06, 9.444999999885795e-06, 9.667000000490589e-06, 9.666999998714232e-06, 9.249999999738634e-06, 9.443999999803054e-06, 9.61099...</msg>
<status status="PASS" starttime="20201029 09:35:00.766" endtime="20201029 09:35:00.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.787" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:35:00.784" endtime="20201029 09:35:00.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.792" level="INFO">VALUE: [9.81999999893901e-06, 9.416999999345421e-06, 9.278000000279008e-06, 9.444999999885795e-06, 9.667000000490589e-06, 9.666999998714232e-06, 9.249999999738634e-06, 9.443999999803054e-06, 9.610999999409842e-06, 9.055999999674214e-06, 9.264000000897e-06, 9.583000000645825e-06, 9.431000000503786e-06, 9.096999999513855e-06, 9.43099999872743e-06, 9.76399999963462e-06, 9.485999999725436e-06, 9.264000000897e-06, 9.264000000897e-06, 8.944999999371817e-06, 9.096999999513855e-06, 9.443999999803054e-06, 9.138999999436237e-06, 9.278000000279008e-06, 8.930999999989808e-06, 9.62499999879185e-06, 9.264000000897e-06, 9.62499999879185e-06, 9.138999999436237e-06, 9.444999999885795e-06, 9.764000001410977e-06, 9.11100000067222e-06, 9.083000000131847e-06, 9.416999999345421e-06, 9.207999999816252e-06, 9.389000000581404e-06, 9.430000000421046e-06, 9.834000000097376e-06, 8.929999999907068e-06, 9.76399999963462e-06, 9.735999999094247e-06, 9.361000000041031e-06, 9.76399999963462e-06, 9.11200000075496e-06, 9.76299999955188e-06, 9.319000000118649e-06, 9.583000000645825e-06, 9.16699999997661e-06, 9.11100000067222e-06, 9.263000000814259e-06, 9.263999999120642e-06, 9.778000000792986e-06, 8.929999999907068e-06, 9.27799999850265e-06, 9.263999999120642e-06, 8.943999999289076e-06, 9.27699999841991e-06, 9.431000000503786e-06, 9.096999999513855e-06, 9.084000000214587e-06, 9.598000000110574e-06, 9.443999999803054e-06, 8.957999998671085e-06, 9.930999999241408e-06]</msg>
<status status="PASS" starttime="20201029 09:35:00.789" endtime="20201029 09:35:00.793"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.778" endtime="20201029 09:35:00.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.285" endtime="20201029 09:35:00.796"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.285" endtime="20201029 09:35:00.796"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.817" endtime="20201029 09:35:00.828"></status>
</kw>
<msg timestamp="20201029 09:35:00.830" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:00.813" endtime="20201029 09:35:00.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.837" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:00.833" endtime="20201029 09:35:00.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.839" endtime="20201029 09:35:00.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.806" endtime="20201029 09:35:00.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.802" endtime="20201029 09:35:00.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.862" endtime="20201029 09:35:01.235"></status>
</kw>
<msg timestamp="20201029 09:35:01.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.616093208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.616102472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:00.859" endtime="20201029 09:35:01.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.616093208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.616102472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:01.246" endtime="20201029 09:35:01.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.268" endtime="20201029 09:35:01.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.852" endtime="20201029 09:35:01.274"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.847" endtime="20201029 09:35:01.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:01.286" level="INFO">${RESULT} = [{'diff': 9.263999999120642e-06}, {'diff': 9.778000000792986e-06}, {'diff': 8.929999999907068e-06}, {'diff': 9.27799999850265e-06}, {'diff': 9.263999999120642e-06}, {'diff': 8.943999999289076e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:01.277" endtime="20201029 09:35:01.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:35:01.297" level="INFO">${OVERHEAD} = {'diff': [9.263999999120642e-06, 9.778000000792986e-06, 8.929999999907068e-06, 9.27799999850265e-06, 9.263999999120642e-06, 8.943999999289076e-06, 9.27699999841991e-06, 9.431000000503786e-06, 9.096999...</msg>
<status status="PASS" starttime="20201029 09:35:01.288" endtime="20201029 09:35:01.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.307" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:35:01.304" endtime="20201029 09:35:01.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.312" level="INFO">VALUE: [9.263999999120642e-06, 9.778000000792986e-06, 8.929999999907068e-06, 9.27799999850265e-06, 9.263999999120642e-06, 8.943999999289076e-06, 9.27699999841991e-06, 9.431000000503786e-06, 9.096999999513855e-06, 9.084000000214587e-06, 9.598000000110574e-06, 9.443999999803054e-06, 8.957999998671085e-06, 9.930999999241408e-06, 9.152999998818245e-06, 9.597000000027833e-06, 9.263999999120642e-06, 9.264000000897e-06, 9.11100000067222e-06, 8.930999999989808e-06, 9.416999999345421e-06, 9.76399999963462e-06, 9.278000000279008e-06, 9.625000000568207e-06, 9.736000000870604e-06, 9.51400000026581e-06, 9.416999999345421e-06, 9.249999999738634e-06, 9.764000001410977e-06, 8.943999999289076e-06, 9.083000000131847e-06, 9.249999999738634e-06, 9.291000001354632e-06, 8.875000000685418e-06, 9.32000000020139e-06, 9.945000000399773e-06, 9.110999998895863e-06, 9.054999999591473e-06, 8.959000000530182e-06, 9.444000001579411e-06, 8.944999999371817e-06, 8.944999999371817e-06, 9.249999999738634e-06, 9.263999999120642e-06, 9.443999999803054e-06, 8.929999999907068e-06, 9.263000000814259e-06, 9.264000000897e-06, 8.943999999289076e-06, 9.443999999803054e-06, 9.542000000806183e-06, 9.098000001372952e-06, 8.930999999989808e-06, 9.76399999963462e-06, 9.597000000027833e-06, 9.430000000421046e-06, 9.402999999963413e-06, 9.236000000356626e-06, 9.083000000131847e-06, 9.013999999751832e-06, 9.569000001263817e-06, 9.610999999409842e-06, 9.402999999963413e-06, 9.443999999803054e-06]</msg>
<status status="PASS" starttime="20201029 09:35:01.309" endtime="20201029 09:35:01.313"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.298" endtime="20201029 09:35:01.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.798" endtime="20201029 09:35:01.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.797" endtime="20201029 09:35:01.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.607" endtime="20201029 09:35:01.317"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:50.481" endtime="20201029 09:35:01.318" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:01.336" endtime="20201029 09:35:01.363"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.332" endtime="20201029 09:35:01.365"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.401" endtime="20201029 09:35:01.416"></status>
</kw>
<msg timestamp="20201029 09:35:01.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:01.398" endtime="20201029 09:35:01.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.424" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:01.420" endtime="20201029 09:35:01.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.432" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:35:01.427" endtime="20201029 09:35:01.433"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:01.391" endtime="20201029 09:35:01.435"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:01.384" endtime="20201029 09:35:01.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.381" endtime="20201029 09:35:01.438"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:35:01.447" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:35:01.445" endtime="20201029 09:35:01.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.440" endtime="20201029 09:35:01.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.378" endtime="20201029 09:35:01.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.376" endtime="20201029 09:35:01.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.451" endtime="20201029 09:35:01.455"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.371" endtime="20201029 09:35:01.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.367" endtime="20201029 09:35:01.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.329" endtime="20201029 09:35:01.459"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.485" endtime="20201029 09:35:01.514"></status>
</kw>
<msg timestamp="20201029 09:35:01.515" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:01.481" endtime="20201029 09:35:01.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.523" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:01.518" endtime="20201029 09:35:01.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.526" endtime="20201029 09:35:01.530"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.473" endtime="20201029 09:35:01.532"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.466" endtime="20201029 09:35:01.534"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.540" endtime="20201029 09:35:01.545"></status>
</kw>
<msg timestamp="20201029 09:35:01.546" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:35:01.536" endtime="20201029 09:35:01.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.559" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:35:01.556" endtime="20201029 09:35:01.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.565" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:35:01.562" endtime="20201029 09:35:01.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.548" endtime="20201029 09:35:01.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.577" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:35:01.575" endtime="20201029 09:35:01.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.582" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:35:01.579" endtime="20201029 09:35:01.584"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.568" endtime="20201029 09:35:01.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.602" endtime="20201029 09:35:01.958"></status>
</kw>
<msg timestamp="20201029 09:35:01.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142153389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142177097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:01.599" endtime="20201029 09:35:01.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142153389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142177097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:01.967" endtime="20201029 09:35:01.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.986" endtime="20201029 09:35:01.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.592" endtime="20201029 09:35:01.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.587" endtime="20201029 09:35:01.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:02.004" level="INFO">${RESULT} = [{'diff': 2.3708000000011165e-05}, {'diff': 2.4957999999991598e-05}, {'diff': 2.5583999999995166e-05}, {'diff': 2.5514000000004255e-05}, {'diff': 2.5013999999989878e-05}, {'diff': 2.549999999998387e-0...</msg>
<status status="PASS" starttime="20201029 09:35:01.995" endtime="20201029 09:35:02.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:35:02.015" level="INFO">${OVERHEAD} = {'diff': [2.3708000000011165e-05, 2.4957999999991598e-05, 2.5583999999995166e-05, 2.5514000000004255e-05, 2.5013999999989878e-05, 2.549999999998387e-05, 2.4834000000001355e-05, 2.549999999998387e-05, ...</msg>
<status status="PASS" starttime="20201029 09:35:02.006" endtime="20201029 09:35:02.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.029" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:35:02.026" endtime="20201029 09:35:02.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.039" level="INFO">VALUE: [2.3708000000011165e-05, 2.4957999999991598e-05, 2.5583999999995166e-05, 2.5514000000004255e-05, 2.5013999999989878e-05, 2.549999999998387e-05, 2.4834000000001355e-05, 2.549999999998387e-05, 2.483300000000188e-05, 2.48610000000149e-05, 2.3999999999996247e-05, 2.4166999999991612e-05, 2.4834000000001355e-05, 2.549999999998387e-05, 2.565300000001436e-05, 2.5834000000002355e-05, 2.566700000000699e-05, 2.515299999999998e-05, 2.4999999999997247e-05, 2.493100000000581e-05, 2.534700000000889e-05, 2.48339999999736e-05, 2.566700000000699e-05, 2.581900000001025e-05, 2.4180000000012525e-05, 2.4847999999993986e-05, 2.568099999999962e-05, 2.517999999998577e-05, 2.4860999999987143e-05, 2.5514000000004255e-05, 2.5500000000011624e-05, 2.5166000000020894e-05, 2.5138999999979594e-05, 2.5181000000013e-05, 2.449999999998287e-05, 2.4820000000008724e-05, 2.5416000000000327e-05, 2.481900000000925e-05, 2.5485999999991238e-05, 2.570900000001264e-05, 2.498700000000409e-05, 2.3986000000003616e-05, 2.5666000000007516e-05, 2.493100000000581e-05, 2.4834000000001355e-05, 2.465300000001336e-05, 2.5319999999995346e-05, 2.5180000000013525e-05, 2.548699999999071e-05, 2.5652999999986603e-05]</msg>
<status status="PASS" starttime="20201029 09:35:02.035" endtime="20201029 09:35:02.040"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.018" endtime="20201029 09:35:02.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.461" endtime="20201029 09:35:02.044"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:35:01.323" endtime="20201029 09:35:02.045" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:02.069" endtime="20201029 09:35:02.091"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.063" endtime="20201029 09:35:02.093"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.130" endtime="20201029 09:35:02.145"></status>
</kw>
<msg timestamp="20201029 09:35:02.146" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:02.126" endtime="20201029 09:35:02.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.153" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:02.148" endtime="20201029 09:35:02.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.159" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:35:02.155" endtime="20201029 09:35:02.160"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:02.119" endtime="20201029 09:35:02.162"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:02.112" endtime="20201029 09:35:02.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.110" endtime="20201029 09:35:02.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:35:02.172" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:35:02.171" endtime="20201029 09:35:02.173"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.166" endtime="20201029 09:35:02.173"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.108" endtime="20201029 09:35:02.174"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.106" endtime="20201029 09:35:02.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.176" endtime="20201029 09:35:02.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.102" endtime="20201029 09:35:02.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.095" endtime="20201029 09:35:02.182"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.058" endtime="20201029 09:35:02.183"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.206" endtime="20201029 09:35:02.287"></status>
</kw>
<msg timestamp="20201029 09:35:02.289" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:02.202" endtime="20201029 09:35:02.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.295" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:02.291" endtime="20201029 09:35:02.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.298" endtime="20201029 09:35:02.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.195" endtime="20201029 09:35:02.303"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.189" endtime="20201029 09:35:02.304"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.309" endtime="20201029 09:35:02.314"></status>
</kw>
<msg timestamp="20201029 09:35:02.315" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:35:02.306" endtime="20201029 09:35:02.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.327" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:35:02.322" endtime="20201029 09:35:02.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.332" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:35:02.330" endtime="20201029 09:35:02.333"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.316" endtime="20201029 09:35:02.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.344" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:35:02.342" endtime="20201029 09:35:02.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.348" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:35:02.346" endtime="20201029 09:35:02.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.336" endtime="20201029 09:35:02.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.370" endtime="20201029 09:35:02.739"></status>
</kw>
<msg timestamp="20201029 09:35:02.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129706167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129731278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:02.366" endtime="20201029 09:35:02.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129706167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129731278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:02.748" endtime="20201029 09:35:02.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.771" endtime="20201029 09:35:02.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.357" endtime="20201029 09:35:02.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.352" endtime="20201029 09:35:02.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:02.793" level="INFO">${RESULT} = [{'diff': 2.5110999999994332e-05}, {'diff': 3.430500000001224e-05}, {'diff': 3.42779999999987e-05}, {'diff': 3.430500000001224e-05}, {'diff': 3.4138999999988595e-05}, {'diff': 3.416699999997386e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:35:02.782" endtime="20201029 09:35:02.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:35:02.805" level="INFO">${OVERHEAD} = {'diff': [2.5110999999994332e-05, 3.430500000001224e-05, 3.42779999999987e-05, 3.430500000001224e-05, 3.4138999999988595e-05, 3.416699999997386e-05, 3.4152999999981226e-05, 3.411100000000333e-05, 3.41...</msg>
<status status="PASS" starttime="20201029 09:35:02.796" endtime="20201029 09:35:02.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.821" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:35:02.817" endtime="20201029 09:35:02.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.828" level="INFO">VALUE: [2.5110999999994332e-05, 3.430500000001224e-05, 3.42779999999987e-05, 3.430500000001224e-05, 3.4138999999988595e-05, 3.416699999997386e-05, 3.4152999999981226e-05, 3.411100000000333e-05, 3.415199999998175e-05, 3.41939999999874e-05, 3.4138999999988595e-05, 3.4290999999991856e-05, 3.415300000000898e-05, 3.415199999998175e-05, 3.413900000001635e-05, 3.4138999999988595e-05, 3.413900000001635e-05, 3.4124999999995964e-05, 3.4138999999988595e-05, 3.413900000001635e-05, 3.415300000000898e-05, 3.4138999999988595e-05, 3.4138999999988595e-05, 3.4180000000022526e-05, 3.431899999997712e-05, 3.4124999999995964e-05, 3.413900000001635e-05, 3.40970000000107e-05, 3.4124999999995964e-05, 3.417999999999477e-05, 3.4124999999995964e-05, 3.416700000000161e-05, 3.4306000000011716e-05, 3.429100000001961e-05, 3.4124999999995964e-05, 3.408399999998979e-05, 3.42779999999987e-05, 3.431899999997712e-05, 3.4292000000019085e-05, 3.4290999999991856e-05, 3.432000000000435e-05, 3.4096999999982947e-05, 3.431900000000487e-05, 3.430499999998449e-05, 3.412500000002372e-05, 3.4124999999995964e-05, 3.415300000000898e-05, 3.4124999999995964e-05, 3.4124999999995964e-05, 3.411200000000281e-05]</msg>
<status status="PASS" starttime="20201029 09:35:02.824" endtime="20201029 09:35:02.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.808" endtime="20201029 09:35:02.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.184" endtime="20201029 09:35:02.832"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:35:02.052" endtime="20201029 09:35:02.833" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:02.858" endtime="20201029 09:35:02.879"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.854" endtime="20201029 09:35:02.881"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.914" endtime="20201029 09:35:02.930"></status>
</kw>
<msg timestamp="20201029 09:35:02.931" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:02.911" endtime="20201029 09:35:02.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.937" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:02.933" endtime="20201029 09:35:02.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.944" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:35:02.940" endtime="20201029 09:35:02.944"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:02.904" endtime="20201029 09:35:02.946"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:02.898" endtime="20201029 09:35:02.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.895" endtime="20201029 09:35:02.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:35:02.956" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:35:02.955" endtime="20201029 09:35:02.957"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.950" endtime="20201029 09:35:02.957"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.893" endtime="20201029 09:35:02.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.892" endtime="20201029 09:35:02.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.960" endtime="20201029 09:35:02.963"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.887" endtime="20201029 09:35:02.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.883" endtime="20201029 09:35:02.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.851" endtime="20201029 09:35:02.967"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.991" endtime="20201029 09:35:03.186"></status>
</kw>
<msg timestamp="20201029 09:35:03.188" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:02.986" endtime="20201029 09:35:03.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.195" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:03.190" endtime="20201029 09:35:03.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.198" endtime="20201029 09:35:03.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.979" endtime="20201029 09:35:03.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.973" endtime="20201029 09:35:03.206"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.212" endtime="20201029 09:35:03.217"></status>
</kw>
<msg timestamp="20201029 09:35:03.219" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:35:03.208" endtime="20201029 09:35:03.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.231" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:35:03.228" endtime="20201029 09:35:03.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.237" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:35:03.234" endtime="20201029 09:35:03.238"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.221" endtime="20201029 09:35:03.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.253" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:35:03.250" endtime="20201029 09:35:03.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.258" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:35:03.256" endtime="20201029 09:35:03.260"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.242" endtime="20201029 09:35:03.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.280" endtime="20201029 09:35:03.625"></status>
</kw>
<msg timestamp="20201029 09:35:03.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1277595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127796806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:03.276" endtime="20201029 09:35:03.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1277595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127796806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:03.634" endtime="20201029 09:35:03.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.652" endtime="20201029 09:35:03.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.269" endtime="20201029 09:35:03.657"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.263" endtime="20201029 09:35:03.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:03.669" level="INFO">${RESULT} = [{'diff': 3.7306000000014716e-05}, {'diff': 5.530499999997773e-05}, {'diff': 5.4291999999983576e-05}, {'diff': 5.52909999999851e-05}, {'diff': 5.5208000000001034e-05}, {'diff': 5.511099999999658e-05},...</msg>
<status status="PASS" starttime="20201029 09:35:03.661" endtime="20201029 09:35:03.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:35:03.684" level="INFO">${OVERHEAD} = {'diff': [3.7306000000014716e-05, 5.530499999997773e-05, 5.4291999999983576e-05, 5.52909999999851e-05, 5.5208000000001034e-05, 5.511099999999658e-05, 5.5165999999995385e-05, 5.5179999999988016e-05, 5....</msg>
<status status="PASS" starttime="20201029 09:35:03.671" endtime="20201029 09:35:03.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.695" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:35:03.693" endtime="20201029 09:35:03.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.700" level="INFO">VALUE: [3.7306000000014716e-05, 5.530499999997773e-05, 5.4291999999983576e-05, 5.52909999999851e-05, 5.5208000000001034e-05, 5.511099999999658e-05, 5.5165999999995385e-05, 5.5179999999988016e-05, 5.51390000000096e-05, 5.534700000001114e-05, 5.511099999999658e-05, 5.516699999999486e-05, 5.431999999999659e-05, 5.516699999999486e-05, 5.433299999998975e-05, 5.433299999998975e-05, 5.5165999999995385e-05, 5.511099999999658e-05, 5.516699999999486e-05, 5.516699999999486e-05, 5.51390000000096e-05, 5.530500000000549e-05, 5.515300000000223e-05, 5.516699999999486e-05, 5.5167000000022615e-05, 5.533400000001798e-05, 5.434700000001014e-05, 5.51940000000084e-05, 5.430600000000396e-05, 5.5151999999975e-05, 5.516699999999486e-05, 5.5181000000015246e-05, 5.515300000000223e-05, 5.534800000001061e-05, 5.5165999999995385e-05, 5.434700000001014e-05, 5.5153000000029984e-05, 5.513800000001012e-05, 5.5153000000029984e-05, 5.5153000000029984e-05, 5.530500000000549e-05, 5.515299999997447e-05, 5.529100000001286e-05, 5.5166999999967103e-05, 5.513899999998184e-05, 5.4333999999989224e-05, 5.518000000004353e-05, 5.5152000000002754e-05, 5.513899999998184e-05, 5.4333000000017506e-05]</msg>
<status status="PASS" starttime="20201029 09:35:03.697" endtime="20201029 09:35:03.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.686" endtime="20201029 09:35:03.703"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.968" endtime="20201029 09:35:03.704"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:35:02.845" endtime="20201029 09:35:03.706" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:03.723" endtime="20201029 09:35:03.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.719" endtime="20201029 09:35:03.747"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.781" endtime="20201029 09:35:03.796"></status>
</kw>
<msg timestamp="20201029 09:35:03.797" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:03.777" endtime="20201029 09:35:03.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.804" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:03.799" endtime="20201029 09:35:03.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.810" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:35:03.806" endtime="20201029 09:35:03.811"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:03.770" endtime="20201029 09:35:03.813"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:03.764" endtime="20201029 09:35:03.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.760" endtime="20201029 09:35:03.815"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:35:03.823" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:35:03.821" endtime="20201029 09:35:03.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.817" endtime="20201029 09:35:03.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.758" endtime="20201029 09:35:03.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.757" endtime="20201029 09:35:03.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.826" endtime="20201029 09:35:03.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.753" endtime="20201029 09:35:03.832"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.748" endtime="20201029 09:35:03.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.717" endtime="20201029 09:35:03.834"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.858" endtime="20201029 09:35:03.880"></status>
</kw>
<msg timestamp="20201029 09:35:03.881" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:03.854" endtime="20201029 09:35:03.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.887" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:03.883" endtime="20201029 09:35:03.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.890" endtime="20201029 09:35:03.894"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.845" endtime="20201029 09:35:03.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.839" endtime="20201029 09:35:03.897"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.901" endtime="20201029 09:35:03.907"></status>
</kw>
<msg timestamp="20201029 09:35:03.908" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:35:03.898" endtime="20201029 09:35:03.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.920" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:35:03.917" endtime="20201029 09:35:03.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.926" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:35:03.924" endtime="20201029 09:35:03.927"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.910" endtime="20201029 09:35:03.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.941" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:35:03.938" endtime="20201029 09:35:03.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.947" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:35:03.944" endtime="20201029 09:35:03.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.931" endtime="20201029 09:35:03.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.970" endtime="20201029 09:35:04.323"></status>
</kw>
<msg timestamp="20201029 09:35:04.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126491167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126517042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:03.966" endtime="20201029 09:35:04.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126491167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126517042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:04.333" endtime="20201029 09:35:04.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.353" endtime="20201029 09:35:04.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.957" endtime="20201029 09:35:04.358"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.951" endtime="20201029 09:35:04.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:04.370" level="INFO">${RESULT} = [{'diff': 2.587500000000853e-05}, {'diff': 2.4958000000019354e-05}, {'diff': 2.4959000000018827e-05}, {'diff': 2.502799999998251e-05}, {'diff': 2.592999999997958e-05}, {'diff': 2.5902999999993792e-05}...</msg>
<status status="PASS" starttime="20201029 09:35:04.361" endtime="20201029 09:35:04.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:35:04.381" level="INFO">${OVERHEAD} = {'diff': [2.587500000000853e-05, 2.4958000000019354e-05, 2.4959000000018827e-05, 2.502799999998251e-05, 2.592999999997958e-05, 2.5902999999993792e-05, 2.583300000000288e-05, 2.497199999998423e-05, 2.5...</msg>
<status status="PASS" starttime="20201029 09:35:04.372" endtime="20201029 09:35:04.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.392" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:35:04.390" endtime="20201029 09:35:04.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.398" level="INFO">VALUE: [2.587500000000853e-05, 2.4958000000019354e-05, 2.4959000000018827e-05, 2.502799999998251e-05, 2.592999999997958e-05, 2.5902999999993792e-05, 2.583300000000288e-05, 2.497199999998423e-05, 2.5860999999988143e-05, 2.4972000000011985e-05, 2.4958000000019354e-05, 2.58610000000159e-05, 2.5902999999993792e-05, 2.5846999999995512e-05, 2.593100000000681e-05, 2.5943999999999967e-05, 2.5846999999995512e-05, 2.4972000000011985e-05, 2.5888000000001687e-05, 2.5874999999980774e-05, 2.588900000000116e-05, 2.593100000000681e-05, 2.588900000000116e-05, 2.5834000000002355e-05, 2.4986000000004616e-05, 2.581900000001025e-05, 2.588900000000116e-05, 2.581900000001025e-05, 2.593100000000681e-05, 2.587500000000853e-05, 2.581999999998197e-05, 2.583300000000288e-05, 2.5792000000024462e-05, 2.4943999999998967e-05, 2.587500000000853e-05, 2.583300000000288e-05, 2.588900000000116e-05, 2.594499999999944e-05, 2.588900000000116e-05, 2.4959000000018827e-05, 2.593100000000681e-05, 2.5846999999995512e-05, 2.592999999997958e-05, 2.593100000000681e-05, 2.592999999997958e-05, 2.5846999999995512e-05, 2.5916000000014705e-05, 2.5958000000020354e-05, 2.583300000000288e-05, 2.588900000000116e-05]</msg>
<status status="PASS" starttime="20201029 09:35:04.394" endtime="20201029 09:35:04.398"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.383" endtime="20201029 09:35:04.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.835" endtime="20201029 09:35:04.402"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:35:03.710" endtime="20201029 09:35:04.403" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:04.421" endtime="20201029 09:35:04.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.417" endtime="20201029 09:35:04.445"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.486" endtime="20201029 09:35:04.530"></status>
</kw>
<msg timestamp="20201029 09:35:04.532" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:04.481" endtime="20201029 09:35:04.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.540" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:04.535" endtime="20201029 09:35:04.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.550" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:35:04.544" endtime="20201029 09:35:04.551"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:04.473" endtime="20201029 09:35:04.554"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:04.466" endtime="20201029 09:35:04.557"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.462" endtime="20201029 09:35:04.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:35:04.567" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:35:04.566" endtime="20201029 09:35:04.568"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.560" endtime="20201029 09:35:04.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.460" endtime="20201029 09:35:04.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.457" endtime="20201029 09:35:04.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.571" endtime="20201029 09:35:04.575"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.452" endtime="20201029 09:35:04.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.447" endtime="20201029 09:35:04.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.414" endtime="20201029 09:35:04.578"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.603" endtime="20201029 09:35:04.687"></status>
</kw>
<msg timestamp="20201029 09:35:04.689" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:04.600" endtime="20201029 09:35:04.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.696" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:04.691" endtime="20201029 09:35:04.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.699" endtime="20201029 09:35:04.704"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.592" endtime="20201029 09:35:04.706"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.584" endtime="20201029 09:35:04.708"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.713" endtime="20201029 09:35:04.718"></status>
</kw>
<msg timestamp="20201029 09:35:04.719" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:35:04.710" endtime="20201029 09:35:04.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.729" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:35:04.727" endtime="20201029 09:35:04.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.734" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:35:04.731" endtime="20201029 09:35:04.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.721" endtime="20201029 09:35:04.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.746" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:35:04.744" endtime="20201029 09:35:04.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.751" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:35:04.749" endtime="20201029 09:35:04.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.737" endtime="20201029 09:35:04.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.770" endtime="20201029 09:35:05.117"></status>
</kw>
<msg timestamp="20201029 09:35:05.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.175555139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.175586694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:04.766" endtime="20201029 09:35:05.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.175555139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.175586694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:05.126" endtime="20201029 09:35:05.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.145" endtime="20201029 09:35:05.149"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.759" endtime="20201029 09:35:05.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.754" endtime="20201029 09:35:05.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:05.163" level="INFO">${RESULT} = [{'diff': 3.1554999999988675e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.1540999999996044e-05}, {'diff': 3.1362000000006995e-05}, {'diff': 3.1360999999979766e-05}, {'diff': 3.137500000000015e-05...</msg>
<status status="PASS" starttime="20201029 09:35:05.154" endtime="20201029 09:35:05.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:35:05.173" level="INFO">${OVERHEAD} = {'diff': [3.1554999999988675e-05, 3.137500000000015e-05, 3.1540999999996044e-05, 3.1362000000006995e-05, 3.1360999999979766e-05, 3.137500000000015e-05, 3.148599999999724e-05, 3.136100000000752e-05, 3....</msg>
<status status="PASS" starttime="20201029 09:35:05.165" endtime="20201029 09:35:05.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.185" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:35:05.182" endtime="20201029 09:35:05.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.190" level="INFO">VALUE: [3.1554999999988675e-05, 3.137500000000015e-05, 3.1540999999996044e-05, 3.1362000000006995e-05, 3.1360999999979766e-05, 3.137500000000015e-05, 3.148599999999724e-05, 3.136100000000752e-05, 3.137500000000015e-05, 3.1388999999992784e-05, 3.1540999999996044e-05, 3.136100000000752e-05, 3.1556000000015905e-05, 3.1346999999987135e-05, 3.136100000000752e-05, 3.136100000000752e-05, 3.1346999999987135e-05, 3.137500000000015e-05, 3.1514000000010256e-05, 3.136100000000752e-05, 3.136100000000752e-05, 3.1556000000015905e-05, 3.136100000000752e-05, 3.12779999999957e-05, 3.137500000000015e-05, 3.1402999999985415e-05, 3.1556000000015905e-05, 3.12779999999957e-05, 3.152800000000289e-05, 3.149999999998987e-05, 3.1346999999987135e-05, 3.1514000000010256e-05, 3.158400000000117e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.1388999999992784e-05, 3.1514000000010256e-05, 3.14170000000058e-05, 3.1348000000014364e-05, 3.152800000000289e-05, 3.1346999999987135e-05, 3.137500000000015e-05, 3.136100000000752e-05, 3.1514000000010256e-05, 3.15139999999825e-05, 3.138799999999331e-05, 3.1540999999996044e-05, 3.134799999998661e-05, 3.136100000000752e-05, 3.136199999997924e-05]</msg>
<status status="PASS" starttime="20201029 09:35:05.187" endtime="20201029 09:35:05.191"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.175" endtime="20201029 09:35:05.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.580" endtime="20201029 09:35:05.194"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:35:04.407" endtime="20201029 09:35:05.196" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:05.213" endtime="20201029 09:35:05.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.209" endtime="20201029 09:35:05.236"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.270" endtime="20201029 09:35:05.286"></status>
</kw>
<msg timestamp="20201029 09:35:05.287" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:05.267" endtime="20201029 09:35:05.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.294" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:05.290" endtime="20201029 09:35:05.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.300" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:35:05.296" endtime="20201029 09:35:05.301"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:05.260" endtime="20201029 09:35:05.303"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:05.253" endtime="20201029 09:35:05.305"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.250" endtime="20201029 09:35:05.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:35:05.313" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:35:05.312" endtime="20201029 09:35:05.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.307" endtime="20201029 09:35:05.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.248" endtime="20201029 09:35:05.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.246" endtime="20201029 09:35:05.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.318" endtime="20201029 09:35:05.322"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.242" endtime="20201029 09:35:05.323"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.238" endtime="20201029 09:35:05.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.207" endtime="20201029 09:35:05.326"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.349" endtime="20201029 09:35:05.547"></status>
</kw>
<msg timestamp="20201029 09:35:05.548" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:05.345" endtime="20201029 09:35:05.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.555" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:05.550" endtime="20201029 09:35:05.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.557" endtime="20201029 09:35:05.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.337" endtime="20201029 09:35:05.563"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.332" endtime="20201029 09:35:05.564"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.569" endtime="20201029 09:35:05.573"></status>
</kw>
<msg timestamp="20201029 09:35:05.574" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:35:05.566" endtime="20201029 09:35:05.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.584" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:35:05.582" endtime="20201029 09:35:05.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.589" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:35:05.587" endtime="20201029 09:35:05.589"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.576" endtime="20201029 09:35:05.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.601" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:35:05.598" endtime="20201029 09:35:05.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.606" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:35:05.604" endtime="20201029 09:35:05.606"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.592" endtime="20201029 09:35:05.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.624" endtime="20201029 09:35:05.973"></status>
</kw>
<msg timestamp="20201029 09:35:05.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131516306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131557167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:05.621" endtime="20201029 09:35:05.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131516306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131557167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:05.982" endtime="20201029 09:35:05.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:06.000" endtime="20201029 09:35:06.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.614" endtime="20201029 09:35:06.005"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.609" endtime="20201029 09:35:06.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:06.017" level="INFO">${RESULT} = [{'diff': 4.0861000000003145e-05}, {'diff': 3.988899999998741e-05}, {'diff': 4.084799999998223e-05}, {'diff': 4.0874999999995776e-05}, {'diff': 4.004199999999014e-05}, {'diff': 3.997199999999923e-05},...</msg>
<status status="PASS" starttime="20201029 09:35:06.008" endtime="20201029 09:35:06.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:35:06.028" level="INFO">${OVERHEAD} = {'diff': [4.0861000000003145e-05, 3.988899999998741e-05, 4.084799999998223e-05, 4.0874999999995776e-05, 4.004199999999014e-05, 3.997199999999923e-05, 4.0917000000001424e-05, 4.0874999999995776e-05, 4....</msg>
<status status="PASS" starttime="20201029 09:35:06.019" endtime="20201029 09:35:06.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:06.039" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:35:06.037" endtime="20201029 09:35:06.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:06.046" level="INFO">VALUE: [4.0861000000003145e-05, 3.988899999998741e-05, 4.084799999998223e-05, 4.0874999999995776e-05, 4.004199999999014e-05, 3.997199999999923e-05, 4.0917000000001424e-05, 4.0874999999995776e-05, 4.083300000001788e-05, 4.0874999999995776e-05, 4.088900000001616e-05, 4.088899999998841e-05, 4.005599999998277e-05, 4.0042000000017897e-05, 3.9917000000000424e-05, 3.9861000000002145e-05, 4.088899999998841e-05, 4.088900000001616e-05, 4.088899999998841e-05, 4.0861000000003145e-05, 4.084800000000999e-05, 4.001400000000488e-05, 4.088799999998893e-05, 4.001400000000488e-05, 4.0874999999995776e-05, 4.005600000001053e-05, 4.086200000000262e-05, 4.0028000000025266e-05, 4.088899999998841e-05, 4.088900000001616e-05, 4.004199999999014e-05, 4.002799999999751e-05, 4.0013999999977123e-05, 4.001400000000488e-05, 4.0861000000003145e-05, 4.0861000000003145e-05, 4.004099999999067e-05, 4.0874999999995776e-05, 3.986099999997439e-05, 4.094399999998721e-05, 3.999999999998449e-05, 4.0874999999995776e-05, 4.0042000000017897e-05, 3.997199999999923e-05, 4.006900000003144e-05, 3.988799999998793e-05, 4.0861000000003145e-05, 4.0861000000003145e-05, 4.0874999999995776e-05, 4.0874999999995776e-05]</msg>
<status status="PASS" starttime="20201029 09:35:06.042" endtime="20201029 09:35:06.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.030" endtime="20201029 09:35:06.049"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.327" endtime="20201029 09:35:06.051"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:35:05.200" endtime="20201029 09:35:06.053" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:06.074" endtime="20201029 09:35:06.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.070" endtime="20201029 09:35:06.101"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:06.139" endtime="20201029 09:35:06.158"></status>
</kw>
<msg timestamp="20201029 09:35:06.160" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:06.136" endtime="20201029 09:35:06.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:06.166" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:06.162" endtime="20201029 09:35:06.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:35:06.173" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:35:06.168" endtime="20201029 09:35:06.173"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:06.128" endtime="20201029 09:35:06.175"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:06.122" endtime="20201029 09:35:06.177"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.119" endtime="20201029 09:35:06.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:35:06.185" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:35:06.184" endtime="20201029 09:35:06.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.179" endtime="20201029 09:35:06.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.117" endtime="20201029 09:35:06.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.114" endtime="20201029 09:35:06.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:06.189" endtime="20201029 09:35:06.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.109" endtime="20201029 09:35:06.194"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.104" endtime="20201029 09:35:06.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.066" endtime="20201029 09:35:06.196"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:35:06.204" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:35:06.220" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:35:08.308" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:35:06.201" endtime="20201029 09:35:08.310"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.316" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:35:08.312" endtime="20201029 09:35:08.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.197" endtime="20201029 09:35:08.319"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:08.328" endtime="20201029 09:35:08.351"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.324" endtime="20201029 09:35:08.353"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.378" endtime="20201029 09:35:08.389"></status>
</kw>
<msg timestamp="20201029 09:35:08.390" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.374" endtime="20201029 09:35:08.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.396" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.392" endtime="20201029 09:35:08.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.399" endtime="20201029 09:35:08.402"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.366" endtime="20201029 09:35:08.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.360" endtime="20201029 09:35:08.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.422" endtime="20201029 09:35:08.761"></status>
</kw>
<msg timestamp="20201029 09:35:08.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039888514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.039914625, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:35:08.419" endtime="20201029 09:35:08.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039888514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.039914625, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:35:08.772" endtime="20201029 09:35:08.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.790" endtime="20201029 09:35:08.794"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.411" endtime="20201029 09:35:08.796"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.407" endtime="20201029 09:35:08.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:08.806" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 2.3985999999996677e-05}, {'diff': 2.3957999999997537e-05}, {'diff': 2.4013999999995816e-05}, {'diff': 2.3985999999996677e-05}, {'diff': 2.3971999999997107e-05}, {'diff': 2.39859...</msg>
<status status="PASS" starttime="20201029 09:35:08.799" endtime="20201029 09:35:08.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:08.816" level="INFO">${RESULT} = {'diff': [0, 2.3985999999996677e-05, 2.3957999999997537e-05, 2.4013999999995816e-05, 2.3985999999996677e-05, 2.3971999999997107e-05, 2.3985999999996677e-05, 2.4014000000002755e-05, 2.3986000000003616e...</msg>
<status status="PASS" starttime="20201029 09:35:08.808" endtime="20201029 09:35:08.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.826" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:08.824" endtime="20201029 09:35:08.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.832" level="INFO">VALUE: [0, 2.3985999999996677e-05, 2.3957999999997537e-05, 2.4013999999995816e-05, 2.3985999999996677e-05, 2.3971999999997107e-05, 2.3985999999996677e-05, 2.4014000000002755e-05, 2.3986000000003616e-05, 2.397300000000352e-05, 2.3958000000004476e-05, 2.4000000000003185e-05, 2.3986000000003616e-05, 2.4000000000003185e-05, 2.39169999999983e-05, 2.397300000000352e-05, 2.4014000000002755e-05, 2.4000000000003185e-05, 2.3972000000004046e-05, 2.4000000000003185e-05, 2.4000000000003185e-05, 2.3957999999997537e-05, 2.3971999999997107e-05, 2.3999999999996247e-05, 2.3999999999996247e-05, 2.3999999999996247e-05, 2.3985999999996677e-05, 2.398699999999615e-05, 2.3971999999997107e-05, 2.397299999999658e-05, 2.4000000000003185e-05, 2.4028000000002325e-05, 2.3972000000004046e-05, 2.3972000000004046e-05, 2.3986000000003616e-05, 2.397300000000352e-05, 2.3986000000003616e-05, 2.4056000000001465e-05, 2.3986000000003616e-05, 2.397300000000352e-05, 2.3986000000003616e-05, 2.397300000000352e-05, 2.4014000000002755e-05, 2.3986000000003616e-05, 2.3986000000003616e-05, 2.3972000000004046e-05, 2.4000000000003185e-05, 2.4000000000003185e-05, 2.3986000000003616e-05, 2.4000000000003185e-05]</msg>
<status status="PASS" starttime="20201029 09:35:08.829" endtime="20201029 09:35:08.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.818" endtime="20201029 09:35:08.834"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.355" endtime="20201029 09:35:08.836"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.322" endtime="20201029 09:35:08.836"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:08.842" endtime="20201029 09:35:08.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.838" endtime="20201029 09:35:08.865"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.886" endtime="20201029 09:35:08.898"></status>
</kw>
<msg timestamp="20201029 09:35:08.900" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.883" endtime="20201029 09:35:08.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.906" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.902" endtime="20201029 09:35:08.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.908" endtime="20201029 09:35:08.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.876" endtime="20201029 09:35:08.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.870" endtime="20201029 09:35:08.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.933" endtime="20201029 09:35:09.277"></status>
</kw>
<msg timestamp="20201029 09:35:09.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034112986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034150167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:08.929" endtime="20201029 09:35:09.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034112986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034150167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.287" endtime="20201029 09:35:09.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.306" endtime="20201029 09:35:09.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.921" endtime="20201029 09:35:09.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.916" endtime="20201029 09:35:09.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:09.322" level="INFO">${PHILIP_RES} = [{'diff': 3.718100000000418e-05}, {'diff': 3.8846999999994636e-05}, {'diff': 3.8847000000001575e-05}, {'diff': 3.8861000000001145e-05}, {'diff': 3.8847000000001575e-05}, {'diff': 3.8860999999994206e-0...</msg>
<status status="PASS" starttime="20201029 09:35:09.314" endtime="20201029 09:35:09.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:09.331" level="INFO">${RESULT} = {'diff': [3.718100000000418e-05, 3.8846999999994636e-05, 3.8847000000001575e-05, 3.8861000000001145e-05, 3.8847000000001575e-05, 3.8860999999994206e-05, 3.8819000000002435e-05, 3.8805000000002865e-05,...</msg>
<status status="PASS" starttime="20201029 09:35:09.324" endtime="20201029 09:35:09.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.341" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:09.339" endtime="20201029 09:35:09.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.346" level="INFO">VALUE: [3.718100000000418e-05, 3.8846999999994636e-05, 3.8847000000001575e-05, 3.8861000000001145e-05, 3.8847000000001575e-05, 3.8860999999994206e-05, 3.8819000000002435e-05, 3.8805000000002865e-05, 3.886200000000062e-05, 3.8860999999994206e-05, 3.884800000000105e-05, 3.8861000000001145e-05, 3.8833000000002005e-05, 3.8762999999997216e-05, 3.8861000000001145e-05, 3.884800000000105e-05, 3.8846999999994636e-05, 3.8847000000001575e-05, 3.8847000000001575e-05, 3.8847000000001575e-05, 3.8874999999993776e-05, 3.8875000000000715e-05, 3.884800000000105e-05, 3.8861000000001145e-05, 3.8846999999994636e-05, 3.884800000000105e-05, 3.8847000000001575e-05, 3.8861000000001145e-05, 3.8875000000000715e-05, 3.88059999999954e-05, 3.8861000000001145e-05, 3.8847000000001575e-05, 3.8847000000001575e-05, 3.8846999999994636e-05, 3.8847000000001575e-05, 3.8833000000002005e-05, 3.8847000000001575e-05, 3.8804999999995926e-05, 3.8902999999999854e-05, 3.8776999999996786e-05, 3.884800000000105e-05, 3.884800000000105e-05, 3.8861000000001145e-05, 3.8847000000001575e-05, 3.8847000000001575e-05, 3.8847000000001575e-05, 3.8832999999995066e-05, 3.8847000000001575e-05, 3.8805000000002865e-05, 3.8861000000001145e-05]</msg>
<status status="PASS" starttime="20201029 09:35:09.343" endtime="20201029 09:35:09.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.333" endtime="20201029 09:35:09.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.866" endtime="20201029 09:35:09.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.837" endtime="20201029 09:35:09.351"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:09.356" endtime="20201029 09:35:09.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.353" endtime="20201029 09:35:09.380"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.402" endtime="20201029 09:35:09.416"></status>
</kw>
<msg timestamp="20201029 09:35:09.417" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:09.399" endtime="20201029 09:35:09.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.423" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:09.419" endtime="20201029 09:35:09.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.425" endtime="20201029 09:35:09.429"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.390" endtime="20201029 09:35:09.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.385" endtime="20201029 09:35:09.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.449" endtime="20201029 09:35:09.790"></status>
</kw>
<msg timestamp="20201029 09:35:09.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035437778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035489319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.446" endtime="20201029 09:35:09.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035437778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035489319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.799" endtime="20201029 09:35:09.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.819" endtime="20201029 09:35:09.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.438" endtime="20201029 09:35:09.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.433" endtime="20201029 09:35:09.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:09.835" level="INFO">${PHILIP_RES} = [{'diff': 5.154099999999523e-05}, {'diff': 5.18470000000007e-05}, {'diff': 5.18470000000007e-05}, {'diff': 5.181900000000156e-05}, {'diff': 5.190299999999898e-05}, {'diff': 5.186100000000027e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:35:09.827" endtime="20201029 09:35:09.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:09.846" level="INFO">${RESULT} = {'diff': [5.154099999999523e-05, 5.18470000000007e-05, 5.18470000000007e-05, 5.181900000000156e-05, 5.190299999999898e-05, 5.186100000000027e-05, 5.183299999999419e-05, 5.187499999999984e-05, 5.184700...</msg>
<status status="PASS" starttime="20201029 09:35:09.837" endtime="20201029 09:35:09.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.861" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:09.855" endtime="20201029 09:35:09.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.867" level="INFO">VALUE: [5.154099999999523e-05, 5.18470000000007e-05, 5.18470000000007e-05, 5.181900000000156e-05, 5.190299999999898e-05, 5.186100000000027e-05, 5.183299999999419e-05, 5.187499999999984e-05, 5.18470000000007e-05, 5.1901999999999504e-05, 5.182000000000103e-05, 5.18340000000006e-05, 5.183399999999366e-05, 5.184800000000017e-05, 5.186199999999974e-05, 5.184800000000017e-05, 5.186100000000027e-05, 5.187499999999984e-05, 5.18470000000007e-05, 5.177800000000232e-05, 5.18470000000007e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.18470000000007e-05, 5.18470000000007e-05, 5.18470000000007e-05, 5.191699999999855e-05, 5.186100000000027e-05, 5.18470000000007e-05, 5.18340000000006e-05, 5.184800000000017e-05, 5.188899999999941e-05, 5.18470000000007e-05, 5.18470000000007e-05, 5.187499999999984e-05, 5.186100000000027e-05, 5.187499999999984e-05, 5.188900000000635e-05, 5.187499999999984e-05, 5.186100000000027e-05, 5.186100000000027e-05, 5.188899999999941e-05, 5.187499999999984e-05, 5.180500000000199e-05, 5.190299999999898e-05, 5.182000000000103e-05, 5.18470000000007e-05, 5.186100000000027e-05, 5.184800000000017e-05]</msg>
<status status="PASS" starttime="20201029 09:35:09.864" endtime="20201029 09:35:09.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.848" endtime="20201029 09:35:09.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.381" endtime="20201029 09:35:09.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.352" endtime="20201029 09:35:09.873"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:09.882" endtime="20201029 09:35:09.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.877" endtime="20201029 09:35:09.906"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.929" endtime="20201029 09:35:09.945"></status>
</kw>
<msg timestamp="20201029 09:35:09.946" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:09.925" endtime="20201029 09:35:09.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.953" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:09.948" endtime="20201029 09:35:09.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.955" endtime="20201029 09:35:09.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.918" endtime="20201029 09:35:09.960"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.913" endtime="20201029 09:35:09.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.979" endtime="20201029 09:35:10.325"></status>
</kw>
<msg timestamp="20201029 09:35:10.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036842097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036907222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.976" endtime="20201029 09:35:10.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036842097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036907222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:10.334" endtime="20201029 09:35:10.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.352" endtime="20201029 09:35:10.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.968" endtime="20201029 09:35:10.358"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.963" endtime="20201029 09:35:10.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:10.368" level="INFO">${PHILIP_RES} = [{'diff': 6.512500000000615e-05}, {'diff': 6.511200000000605e-05}, {'diff': 6.511100000000658e-05}, {'diff': 6.511099999999964e-05}, {'diff': 6.52080000000041e-05}, {'diff': 6.512500000000615e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:10.361" endtime="20201029 09:35:10.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:10.384" level="INFO">${RESULT} = {'diff': [6.512500000000615e-05, 6.511200000000605e-05, 6.511100000000658e-05, 6.511099999999964e-05, 6.52080000000041e-05, 6.512500000000615e-05, 6.512500000000615e-05, 6.515300000000529e-05, 6.51390...</msg>
<status status="PASS" starttime="20201029 09:35:10.370" endtime="20201029 09:35:10.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.394" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:10.392" endtime="20201029 09:35:10.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.400" level="INFO">VALUE: [6.512500000000615e-05, 6.511200000000605e-05, 6.511100000000658e-05, 6.511099999999964e-05, 6.52080000000041e-05, 6.512500000000615e-05, 6.512500000000615e-05, 6.515300000000529e-05, 6.513900000000572e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.50280000000017e-05, 6.511100000000658e-05, 6.509700000000007e-05, 6.509700000000007e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.515299999999835e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.513899999999878e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.509799999999955e-05, 6.515299999999835e-05, 6.520799999999716e-05, 6.511099999999964e-05, 6.515200000000582e-05, 6.511100000000658e-05, 6.518000000000496e-05, 6.512499999999921e-05, 6.509700000000007e-05, 6.515200000000582e-05, 6.509700000000007e-05, 6.512500000000615e-05, 6.515200000000582e-05, 6.512499999999921e-05, 6.515200000000582e-05, 6.516700000000486e-05]</msg>
<status status="PASS" starttime="20201029 09:35:10.397" endtime="20201029 09:35:10.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.386" endtime="20201029 09:35:10.402"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.908" endtime="20201029 09:35:10.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.875" endtime="20201029 09:35:10.404"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:10.410" endtime="20201029 09:35:10.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.406" endtime="20201029 09:35:10.433"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.454" endtime="20201029 09:35:10.472"></status>
</kw>
<msg timestamp="20201029 09:35:10.473" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.451" endtime="20201029 09:35:10.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.479" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.475" endtime="20201029 09:35:10.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.481" endtime="20201029 09:35:10.485"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.443" endtime="20201029 09:35:10.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.438" endtime="20201029 09:35:10.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.505" endtime="20201029 09:35:10.857"></status>
</kw>
<msg timestamp="20201029 09:35:10.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033967042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034044583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:10.502" endtime="20201029 09:35:10.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033967042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034044583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:10.868" endtime="20201029 09:35:10.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.888" endtime="20201029 09:35:10.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.495" endtime="20201029 09:35:10.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.490" endtime="20201029 09:35:10.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:10.904" level="INFO">${PHILIP_RES} = [{'diff': 7.754100000000042e-05}, {'diff': 7.83190000000003e-05}, {'diff': 7.822300000000226e-05}, {'diff': 7.833299999999987e-05}, {'diff': 7.830500000000074e-05}, {'diff': 7.829200000000064e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:10.896" endtime="20201029 09:35:10.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:10.915" level="INFO">${RESULT} = {'diff': [7.754100000000042e-05, 7.83190000000003e-05, 7.822300000000226e-05, 7.833299999999987e-05, 7.830500000000074e-05, 7.829200000000064e-05, 7.831999999999978e-05, 7.829200000000064e-05, 7.82770...</msg>
<status status="PASS" starttime="20201029 09:35:10.906" endtime="20201029 09:35:10.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.926" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:10.924" endtime="20201029 09:35:10.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.931" level="INFO">VALUE: [7.754100000000042e-05, 7.83190000000003e-05, 7.822300000000226e-05, 7.833299999999987e-05, 7.830500000000074e-05, 7.829200000000064e-05, 7.831999999999978e-05, 7.829200000000064e-05, 7.82770000000016e-05, 7.830600000000021e-05, 7.830500000000074e-05, 7.827699999999466e-05, 7.827800000000107e-05, 7.826399999999456e-05, 7.836099999999901e-05, 7.82919999999937e-05, 7.836099999999901e-05, 7.83190000000003e-05, 7.83190000000003e-05, 7.829200000000064e-05, 7.833399999999935e-05, 7.831999999999978e-05, 7.830600000000021e-05, 7.823600000000236e-05, 7.830500000000074e-05, 7.830500000000074e-05, 7.836100000000595e-05, 7.833299999999987e-05, 7.829200000000064e-05, 7.831999999999978e-05, 7.830600000000021e-05, 7.827800000000107e-05, 7.82919999999937e-05, 7.836099999999901e-05, 7.830600000000021e-05, 7.827800000000107e-05, 7.830600000000021e-05, 7.83190000000003e-05, 7.83190000000003e-05, 7.829100000000117e-05, 7.827800000000107e-05, 7.83190000000003e-05, 7.836099999999901e-05, 7.83190000000003e-05, 7.836099999999901e-05, 7.83190000000003e-05, 7.83190000000003e-05, 7.82919999999937e-05, 7.824999999999499e-05, 7.829200000000064e-05]</msg>
<status status="PASS" starttime="20201029 09:35:10.928" endtime="20201029 09:35:10.932"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.917" endtime="20201029 09:35:10.934"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.434" endtime="20201029 09:35:10.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.405" endtime="20201029 09:35:10.936"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:10.941" endtime="20201029 09:35:10.963"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.938" endtime="20201029 09:35:10.965"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.986" endtime="20201029 09:35:11.006"></status>
</kw>
<msg timestamp="20201029 09:35:11.007" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.983" endtime="20201029 09:35:11.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.013" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.009" endtime="20201029 09:35:11.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.016" endtime="20201029 09:35:11.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.976" endtime="20201029 09:35:11.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.970" endtime="20201029 09:35:11.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.039" endtime="20201029 09:35:11.387"></status>
</kw>
<msg timestamp="20201029 09:35:11.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034419222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034509681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:11.036" endtime="20201029 09:35:11.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034419222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034509681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:11.397" endtime="20201029 09:35:11.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.415" endtime="20201029 09:35:11.418"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.029" endtime="20201029 09:35:11.420"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.024" endtime="20201029 09:35:11.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:11.431" level="INFO">${PHILIP_RES} = [{'diff': 9.045900000000107e-05}, {'diff': 9.156899999999968e-05}, {'diff': 9.156899999999968e-05}, {'diff': 9.155500000000011e-05}, {'diff': 9.154100000000054e-05}, {'diff': 9.155500000000011e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:35:11.423" endtime="20201029 09:35:11.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:11.440" level="INFO">${RESULT} = {'diff': [9.045900000000107e-05, 9.156899999999968e-05, 9.156899999999968e-05, 9.155500000000011e-05, 9.154100000000054e-05, 9.155500000000011e-05, 9.14859999999948e-05, 9.158299999999925e-05, 9.15829...</msg>
<status status="PASS" starttime="20201029 09:35:11.433" endtime="20201029 09:35:11.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.450" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:11.448" endtime="20201029 09:35:11.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.455" level="INFO">VALUE: [9.045900000000107e-05, 9.156899999999968e-05, 9.156899999999968e-05, 9.155500000000011e-05, 9.154100000000054e-05, 9.155500000000011e-05, 9.14859999999948e-05, 9.158299999999925e-05, 9.158299999999925e-05, 9.156999999999915e-05, 9.155599999999958e-05, 9.152800000000044e-05, 9.154200000000001e-05, 9.154200000000001e-05, 9.158299999999925e-05, 9.159699999999882e-05, 9.1638000000005e-05, 9.158299999999925e-05, 9.155500000000011e-05, 9.151400000000087e-05, 9.155599999999958e-05, 9.155500000000011e-05, 9.154100000000054e-05, 9.155500000000011e-05, 9.154200000000001e-05, 9.152800000000044e-05, 9.154100000000054e-05, 9.154200000000001e-05, 9.155599999999958e-05, 9.155599999999958e-05, 9.155599999999958e-05, 9.154200000000001e-05, 9.157000000000609e-05, 9.154200000000001e-05, 9.155500000000011e-05, 9.152800000000044e-05, 9.156899999999968e-05, 9.152800000000044e-05, 9.157000000000609e-05, 9.154100000000054e-05, 9.154100000000054e-05, 9.152800000000044e-05, 9.155599999999958e-05, 9.154200000000001e-05, 9.15000000000013e-05, 9.154200000000001e-05, 9.156899999999968e-05, 9.156899999999968e-05, 9.158299999999925e-05, 9.14859999999948e-05]</msg>
<status status="PASS" starttime="20201029 09:35:11.452" endtime="20201029 09:35:11.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.442" endtime="20201029 09:35:11.458"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.966" endtime="20201029 09:35:11.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.936" endtime="20201029 09:35:11.460"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:11.465" endtime="20201029 09:35:11.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.462" endtime="20201029 09:35:11.489"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.510" endtime="20201029 09:35:11.533"></status>
</kw>
<msg timestamp="20201029 09:35:11.534" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.506" endtime="20201029 09:35:11.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.540" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.536" endtime="20201029 09:35:11.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.543" endtime="20201029 09:35:11.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.499" endtime="20201029 09:35:11.548"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.494" endtime="20201029 09:35:11.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.566" endtime="20201029 09:35:11.911"></status>
</kw>
<msg timestamp="20201029 09:35:11.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03543625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035541639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:35:11.563" endtime="20201029 09:35:11.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03543625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035541639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:35:11.920" endtime="20201029 09:35:11.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.938" endtime="20201029 09:35:11.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.556" endtime="20201029 09:35:11.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.551" endtime="20201029 09:35:11.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:11.953" level="INFO">${PHILIP_RES} = [{'diff': 0.0001053889999999974}, {'diff': 0.0001059160000000045}, {'diff': 0.00010591700000000398}, {'diff': 0.00010595800000000322}, {'diff': 0.00010590299999999747}, {'diff': 0.00010591599999999757...</msg>
<status status="PASS" starttime="20201029 09:35:11.946" endtime="20201029 09:35:11.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:11.964" level="INFO">${RESULT} = {'diff': [0.0001053889999999974, 0.0001059160000000045, 0.00010591700000000398, 0.00010595800000000322, 0.00010590299999999747, 0.00010591599999999757, 0.000105901999999998, 0.00010591699999999704, 0....</msg>
<status status="PASS" starttime="20201029 09:35:11.956" endtime="20201029 09:35:11.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.978" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:11.974" endtime="20201029 09:35:11.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.985" level="INFO">VALUE: [0.0001053889999999974, 0.0001059160000000045, 0.00010591700000000398, 0.00010595800000000322, 0.00010590299999999747, 0.00010591599999999757, 0.000105901999999998, 0.00010591699999999704, 0.00010590299999999747, 0.00010594399999999671, 0.00010583299999999962, 0.00010590300000000441, 0.00010591700000000398, 0.00010598600000000236, 0.00010594499999999618, 0.00010597199999999585, 0.00010590299999999747, 0.00010591700000000398, 0.00010590300000000441, 0.00010591699999999704, 0.00010586099999999876, 0.00010588900000000484, 0.00010584799999999867, 0.00010591599999999757, 0.00010593099999999661, 0.00010593000000000408, 0.00010590300000000441, 0.00010583299999999962, 0.00010591699999999704, 0.00010590299999999747, 0.00010591700000000398, 0.00010590300000000441, 0.00010587500000000527, 0.00010588900000000484, 0.00010588799999999843, 0.00010591699999999704, 0.00010593000000000408, 0.00010587499999999833, 0.000105901999999998, 0.00010587500000000527, 0.00010592999999999714, 0.00010586099999999876, 0.00010590300000000441, 0.00010591699999999704, 0.00010590299999999747, 0.0001059160000000045, 0.00010591599999999757, 0.00010593099999999661, 0.0001058889999999979, 0.00010590200000000494]</msg>
<status status="PASS" starttime="20201029 09:35:11.982" endtime="20201029 09:35:11.987"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.967" endtime="20201029 09:35:11.989"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.490" endtime="20201029 09:35:11.991"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.461" endtime="20201029 09:35:11.991"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:12.000" endtime="20201029 09:35:12.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.994" endtime="20201029 09:35:12.024"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.046" endtime="20201029 09:35:12.070"></status>
</kw>
<msg timestamp="20201029 09:35:12.072" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:12.043" endtime="20201029 09:35:12.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.081" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:12.074" endtime="20201029 09:35:12.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.084" endtime="20201029 09:35:12.088"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.036" endtime="20201029 09:35:12.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.031" endtime="20201029 09:35:12.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.110" endtime="20201029 09:35:12.460"></status>
</kw>
<msg timestamp="20201029 09:35:12.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035907472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036027583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:12.107" endtime="20201029 09:35:12.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035907472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036027583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:12.469" endtime="20201029 09:35:12.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.486" endtime="20201029 09:35:12.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.099" endtime="20201029 09:35:12.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.094" endtime="20201029 09:35:12.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:12.502" level="INFO">${PHILIP_RES} = [{'diff': 0.00012011099999999914}, {'diff': 0.00012019399999999708}, {'diff': 0.00012016699999999741}, {'diff': 0.00012017999999999751}, {'diff': 0.00012015299999999784}, {'diff': 0.000120166999999997...</msg>
<status status="PASS" starttime="20201029 09:35:12.495" endtime="20201029 09:35:12.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:12.511" level="INFO">${RESULT} = {'diff': [0.00012011099999999914, 0.00012019399999999708, 0.00012016699999999741, 0.00012017999999999751, 0.00012015299999999784, 0.00012016699999999741, 0.00012019399999999708, 0.00012022200000000316...</msg>
<status status="PASS" starttime="20201029 09:35:12.504" endtime="20201029 09:35:12.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.522" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:12.520" endtime="20201029 09:35:12.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.528" level="INFO">VALUE: [0.00012011099999999914, 0.00012019399999999708, 0.00012016699999999741, 0.00012017999999999751, 0.00012015299999999784, 0.00012016699999999741, 0.00012019399999999708, 0.00012022200000000316, 0.0001201950000000035, 0.00012020800000000359, 0.00012026399999999493, 0.00012015299999999784, 0.00012015199999999837, 0.00012015299999999784, 0.00012020900000000306, 0.0001201249999999987, 0.00012023699999999526, 0.00012017999999999751, 0.00012023600000000273, 0.00012017999999999751, 0.00012015299999999784, 0.00012023600000000273, 0.0001201950000000035, 0.00012015299999999784, 0.00012018099999999698, 0.00012101400000000262, 0.00012013899999999827, 0.00012016599999999794, 0.00012015299999999784, 0.00012013899999999827, 0.00012018099999999698, 0.00012018100000000392, 0.00012015300000000478, 0.00012098600000000348, 0.00012015200000000531, 0.00012016700000000435, 0.00012017999999999751, 0.00012016699999999741, 0.00012017999999999751, 0.0001201249999999987, 0.00012015299999999784, 0.00012016699999999741, 0.00012020799999999665, 0.00012016599999999794, 0.00012015299999999784, 0.00012016599999999794, 0.00012016600000000488, 0.00012013900000000521, 0.00012012500000000564, 0.00012015200000000531]</msg>
<status status="PASS" starttime="20201029 09:35:12.524" endtime="20201029 09:35:12.530"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.513" endtime="20201029 09:35:12.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.025" endtime="20201029 09:35:12.533"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.992" endtime="20201029 09:35:12.533"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:12.539" endtime="20201029 09:35:12.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.535" endtime="20201029 09:35:12.562"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.583" endtime="20201029 09:35:12.609"></status>
</kw>
<msg timestamp="20201029 09:35:12.610" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:12.580" endtime="20201029 09:35:12.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.617" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:12.613" endtime="20201029 09:35:12.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.619" endtime="20201029 09:35:12.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.573" endtime="20201029 09:35:12.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.567" endtime="20201029 09:35:12.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.642" endtime="20201029 09:35:12.990"></status>
</kw>
<msg timestamp="20201029 09:35:12.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034190958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034323958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:12.639" endtime="20201029 09:35:12.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034190958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034323958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:12.999" endtime="20201029 09:35:13.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.017" endtime="20201029 09:35:13.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.632" endtime="20201029 09:35:13.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.627" endtime="20201029 09:35:13.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:13.032" level="INFO">${PHILIP_RES} = [{'diff': 0.00013300000000000117}, {'diff': 0.00013432000000000027}, {'diff': 0.0001343190000000008}, {'diff': 0.0001343479999999994}, {'diff': 0.00013433400000000678}, {'diff': 0.0001343060000000007}...</msg>
<status status="PASS" starttime="20201029 09:35:13.025" endtime="20201029 09:35:13.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:13.043" level="INFO">${RESULT} = {'diff': [0.00013300000000000117, 0.00013432000000000027, 0.0001343190000000008, 0.0001343479999999994, 0.00013433400000000678, 0.0001343060000000007, 0.0001343190000000008, 0.00013429099999999472, 0....</msg>
<status status="PASS" starttime="20201029 09:35:13.035" endtime="20201029 09:35:13.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.053" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:13.051" endtime="20201029 09:35:13.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.058" level="INFO">VALUE: [0.00013300000000000117, 0.00013432000000000027, 0.0001343190000000008, 0.0001343479999999994, 0.00013433400000000678, 0.0001343060000000007, 0.0001343190000000008, 0.00013429099999999472, 0.00013429200000000113, 0.00013432000000000027, 0.0001343060000000007, 0.00013429100000000166, 0.0001343049999999943, 0.00013430500000000123, 0.00013430500000000123, 0.00013430500000000123, 0.0001343060000000007, 0.00013432000000000027, 0.0001343060000000007, 0.00013427800000000156, 0.0001342770000000021, 0.0001343060000000007, 0.00013432000000000027, 0.00013433300000000037, 0.00013432000000000027, 0.00013432000000000027, 0.0001343479999999994, 0.00013434699999999994, 0.0001343060000000007, 0.0001343060000000007, 0.00013429200000000113, 0.00013424999999999548, 0.0001343060000000007, 0.00013430500000000123, 0.00013431899999999386, 0.0001343479999999994, 0.00013430500000000123, 0.0001343479999999994, 0.0001343060000000007, 0.00013432000000000027, 0.0001343060000000007, 0.00013427699999999515, 0.0001343190000000008, 0.00013432000000000027, 0.00013433399999999984, 0.0001343060000000007, 0.0001343060000000007, 0.00013430599999999376, 0.00013422200000000328, 0.0001343060000000007]</msg>
<status status="PASS" starttime="20201029 09:35:13.056" endtime="20201029 09:35:13.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.045" endtime="20201029 09:35:13.061"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.563" endtime="20201029 09:35:13.062"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.534" endtime="20201029 09:35:13.063"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:13.068" endtime="20201029 09:35:13.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.065" endtime="20201029 09:35:13.092"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.113" endtime="20201029 09:35:13.141"></status>
</kw>
<msg timestamp="20201029 09:35:13.142" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.109" endtime="20201029 09:35:13.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.148" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.144" endtime="20201029 09:35:13.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.150" endtime="20201029 09:35:13.154"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.102" endtime="20201029 09:35:13.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.097" endtime="20201029 09:35:13.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.174" endtime="20201029 09:35:13.521"></status>
</kw>
<msg timestamp="20201029 09:35:13.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034628847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034776986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:13.170" endtime="20201029 09:35:13.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034628847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034776986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:13.530" endtime="20201029 09:35:13.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.548" endtime="20201029 09:35:13.552"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.163" endtime="20201029 09:35:13.554"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.158" endtime="20201029 09:35:13.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:13.566" level="INFO">${PHILIP_RES} = [{'diff': 0.00014813900000000546}, {'diff': 0.00014863899999999902}, {'diff': 0.0001486250000000064}, {'diff': 0.00014858400000000022}, {'diff': 0.0001486250000000064}, {'diff': 0.00014866699999999816...</msg>
<status status="PASS" starttime="20201029 09:35:13.557" endtime="20201029 09:35:13.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:13.581" level="INFO">${RESULT} = {'diff': [0.00014813900000000546, 0.00014863899999999902, 0.0001486250000000064, 0.00014858400000000022, 0.0001486250000000064, 0.00014866699999999816, 0.00014862499999999945, 0.00014862499999999945, ...</msg>
<status status="PASS" starttime="20201029 09:35:13.570" endtime="20201029 09:35:13.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.596" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:13.593" endtime="20201029 09:35:13.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.603" level="INFO">VALUE: [0.00014813900000000546, 0.00014863899999999902, 0.0001486250000000064, 0.00014858400000000022, 0.0001486250000000064, 0.00014866699999999816, 0.00014862499999999945, 0.00014862499999999945, 0.00014865300000000553, 0.0001486529999999986, 0.00014856899999999423, 0.00014862499999999945, 0.00014861099999999988, 0.00014862499999999945, 0.0001486250000000064, 0.00014863899999999902, 0.00014863899999999902, 0.00014863899999999902, 0.0001486659999999987, 0.00014863900000000596, 0.0001486529999999986, 0.0001485970000000003, 0.00014861099999999988, 0.00014861099999999988, 0.00014862499999999945, 0.00014862499999999945, 0.0001485420000000015, 0.00014862499999999945, 0.0001485970000000003, 0.0001486529999999986, 0.00014862499999999945, 0.0001485420000000015, 0.0001485970000000003, 0.00014866699999999816, 0.00014863899999999902, 0.00014861099999999988, 0.00014861099999999988, 0.0001485970000000003, 0.00014863799999999955, 0.00014857000000000065, 0.00014861099999999988, 0.00014862499999999945, 0.00014861199999999936, 0.00014861099999999988, 0.00014861099999999988, 0.00014862499999999945, 0.00014858300000000074, 0.00014859799999999979, 0.0001485970000000003, 0.0001486529999999986]</msg>
<status status="PASS" starttime="20201029 09:35:13.599" endtime="20201029 09:35:13.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.584" endtime="20201029 09:35:13.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.093" endtime="20201029 09:35:13.610"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.064" endtime="20201029 09:35:13.610"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:13.619" endtime="20201029 09:35:13.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.614" endtime="20201029 09:35:13.645"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.675" endtime="20201029 09:35:13.708"></status>
</kw>
<msg timestamp="20201029 09:35:13.709" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.670" endtime="20201029 09:35:13.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.718" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.713" endtime="20201029 09:35:13.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.722" endtime="20201029 09:35:13.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.660" endtime="20201029 09:35:13.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.652" endtime="20201029 09:35:13.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.754" endtime="20201029 09:35:14.107"></status>
</kw>
<msg timestamp="20201029 09:35:14.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046920903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047084194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:13.749" endtime="20201029 09:35:14.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046920903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047084194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:14.117" endtime="20201029 09:35:14.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.135" endtime="20201029 09:35:14.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.739" endtime="20201029 09:35:14.140"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.733" endtime="20201029 09:35:14.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:14.151" level="INFO">${PHILIP_RES} = [{'diff': 0.0001632910000000029}, {'diff': 0.00016395899999999825}, {'diff': 0.00016401399999999705}, {'diff': 0.00016402799999999662}, {'diff': 0.00016398600000000485}, {'diff': 0.0001639860000000048...</msg>
<status status="PASS" starttime="20201029 09:35:14.144" endtime="20201029 09:35:14.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:14.161" level="INFO">${RESULT} = {'diff': [0.0001632910000000029, 0.00016395899999999825, 0.00016401399999999705, 0.00016402799999999662, 0.00016398600000000485, 0.00016398600000000485, 0.00016398600000000485, 0.00016394500000000561,...</msg>
<status status="PASS" starttime="20201029 09:35:14.153" endtime="20201029 09:35:14.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.171" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:14.169" endtime="20201029 09:35:14.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.177" level="INFO">VALUE: [0.0001632910000000029, 0.00016395899999999825, 0.00016401399999999705, 0.00016402799999999662, 0.00016398600000000485, 0.00016398600000000485, 0.00016398600000000485, 0.00016394500000000561, 0.00016397199999999834, 0.0001639859999999979, 0.00016391699999999954, 0.00016401399999999705, 0.00016402799999999662, 0.00016404099999999672, 0.00016401399999999705, 0.0001639859999999979, 0.00016402800000000356, 0.00016399999999999748, 0.00016395899999999825, 0.00016400000000000442, 0.00016398700000000432, 0.00016397299999999781, 0.00016397199999999834, 0.00016400000000000442, 0.00016401399999999705, 0.00016401399999999705, 0.00016401399999999705, 0.00016401399999999705, 0.00016402800000000356, 0.00016399999999999748, 0.00016402799999999662, 0.0001639309999999991, 0.00016395900000000518, 0.00016395799999999877, 0.00016401399999999705, 0.00016398600000000485, 0.0001639299999999927, 0.00016399999999999748, 0.0001639580000000057, 0.00016394499999999868, 0.00016391600000000006, 0.0001639439999999992, 0.00016393000000000657, 0.00016388800000000092, 0.0001639580000000057, 0.000164014000000004, 0.00016399999999999748, 0.00016399999999999748, 0.00016397199999999834, 0.0001639589999999913]</msg>
<status status="PASS" starttime="20201029 09:35:14.174" endtime="20201029 09:35:14.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.162" endtime="20201029 09:35:14.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.647" endtime="20201029 09:35:14.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.612" endtime="20201029 09:35:14.181"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:14.187" endtime="20201029 09:35:14.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.183" endtime="20201029 09:35:14.211"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.238" endtime="20201029 09:35:14.270"></status>
</kw>
<msg timestamp="20201029 09:35:14.271" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.234" endtime="20201029 09:35:14.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.278" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.274" endtime="20201029 09:35:14.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.280" endtime="20201029 09:35:14.285"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.227" endtime="20201029 09:35:14.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.216" endtime="20201029 09:35:14.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.305" endtime="20201029 09:35:14.655"></status>
</kw>
<msg timestamp="20201029 09:35:14.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040859, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041037194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:35:14.302" endtime="20201029 09:35:14.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040859, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041037194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:35:14.665" endtime="20201029 09:35:14.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.683" endtime="20201029 09:35:14.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.295" endtime="20201029 09:35:14.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.290" endtime="20201029 09:35:14.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:14.699" level="INFO">${PHILIP_RES} = [{'diff': 0.00017819399999999957}, {'diff': 0.00017923599999999928}, {'diff': 0.000179277999999998}, {'diff': 0.00017923599999999928}, {'diff': 0.00017926400000000536}, {'diff': 0.00017926400000000536...</msg>
<status status="PASS" starttime="20201029 09:35:14.691" endtime="20201029 09:35:14.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:14.708" level="INFO">${RESULT} = {'diff': [0.00017819399999999957, 0.00017923599999999928, 0.000179277999999998, 0.00017923599999999928, 0.00017926400000000536, 0.00017926400000000536, 0.00017924999999999885, 0.00017929199999999756, ...</msg>
<status status="PASS" starttime="20201029 09:35:14.701" endtime="20201029 09:35:14.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.719" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:14.717" endtime="20201029 09:35:14.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.724" level="INFO">VALUE: [0.00017819399999999957, 0.00017923599999999928, 0.000179277999999998, 0.00017923599999999928, 0.00017926400000000536, 0.00017926400000000536, 0.00017924999999999885, 0.00017929199999999756, 0.00017923599999999928, 0.00017926400000000536, 0.00017924999999999885, 0.00017931899999999723, 0.00017926399999999842, 0.00017920899999999962, 0.00017926399999999842, 0.00017924999999999885, 0.00017926399999999842, 0.00017920899999999962, 0.00017923599999999928, 0.00017924999999999885, 0.00017929199999999756, 0.00017923599999999928, 0.00017929199999999756, 0.00017923599999999928, 0.0001792920000000045, 0.00017929199999999756, 0.000179277999999998, 0.00017926400000000536, 0.00017926399999999842, 0.00017924999999999885, 0.00017924999999999885, 0.00017926399999999842, 0.00017930600000000407, 0.00017930599999999713, 0.00017926399999999842, 0.00017924999999999885, 0.00017924999999999885, 0.00017924999999999885, 0.00017929199999999756, 0.000179277999999998, 0.00017924999999999885, 0.00017924999999999885, 0.0001791670000000009, 0.00017924999999999885, 0.00017924999999999885, 0.00017922199999999971, 0.00017927699999999158, 0.00017922200000000665, 0.00017926399999999842, 0.00017926399999999842]</msg>
<status status="PASS" starttime="20201029 09:35:14.721" endtime="20201029 09:35:14.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.710" endtime="20201029 09:35:14.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.212" endtime="20201029 09:35:14.728"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.182" endtime="20201029 09:35:14.729"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:14.735" endtime="20201029 09:35:14.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.731" endtime="20201029 09:35:14.758"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.782" endtime="20201029 09:35:14.817"></status>
</kw>
<msg timestamp="20201029 09:35:14.818" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.779" endtime="20201029 09:35:14.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.825" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.820" endtime="20201029 09:35:14.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.827" endtime="20201029 09:35:14.831"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.771" endtime="20201029 09:35:14.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.766" endtime="20201029 09:35:14.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.852" endtime="20201029 09:35:15.208"></status>
</kw>
<msg timestamp="20201029 09:35:15.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037407458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037601528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:14.848" endtime="20201029 09:35:15.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037407458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037601528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.218" endtime="20201029 09:35:15.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.237" endtime="20201029 09:35:15.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.841" endtime="20201029 09:35:15.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.835" endtime="20201029 09:35:15.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:15.253" level="INFO">${PHILIP_RES} = [{'diff': 0.00019407000000000452}, {'diff': 0.00019443100000000185}, {'diff': 0.0001944019999999963}, {'diff': 0.00019441700000000228}, {'diff': 0.0001944720000000011}, {'diff': 0.0001944309999999949}...</msg>
<status status="PASS" starttime="20201029 09:35:15.245" endtime="20201029 09:35:15.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:15.262" level="INFO">${RESULT} = {'diff': [0.00019407000000000452, 0.00019443100000000185, 0.0001944019999999963, 0.00019441700000000228, 0.0001944720000000011, 0.0001944309999999949, 0.00019437499999999663, 0.00019444500000000142, 0...</msg>
<status status="PASS" starttime="20201029 09:35:15.255" endtime="20201029 09:35:15.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.273" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:15.271" endtime="20201029 09:35:15.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.280" level="INFO">VALUE: [0.00019407000000000452, 0.00019443100000000185, 0.0001944019999999963, 0.00019441700000000228, 0.0001944720000000011, 0.0001944309999999949, 0.00019437499999999663, 0.00019444500000000142, 0.00019450000000000023, 0.00019441700000000228, 0.00019444499999999448, 0.00019443100000000185, 0.0001944720000000011, 0.00019433400000000434, 0.0001944160000000028, 0.00019441700000000228, 0.00019440299999999577, 0.00019441700000000228, 0.00019437500000000357, 0.00019443100000000185, 0.000194443999999995, 0.00019442999999999544, 0.00019448600000000066, 0.00019441699999999534, 0.0001944720000000011, 0.00019444500000000142, 0.000194443999999995, 0.00019441700000000228, 0.00019443100000000185, 0.0001944720000000011, 0.00019443000000000238, 0.00019441699999999534, 0.00019441700000000228, 0.00019444400000000195, 0.0001945139999999998, 0.00019438900000000314, 0.00019440299999999577, 0.00019440299999999577, 0.0001944160000000028, 0.00019438900000000314, 0.00019441700000000228, 0.00019441699999999534, 0.00019445800000000152, 0.00019441599999999587, 0.00019444400000000195, 0.00019441699999999534, 0.0001944030000000027, 0.00019438900000000314, 0.00019441700000000228, 0.00019448700000000707]</msg>
<status status="PASS" starttime="20201029 09:35:15.275" endtime="20201029 09:35:15.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.264" endtime="20201029 09:35:15.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.760" endtime="20201029 09:35:15.284"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.730" endtime="20201029 09:35:15.284"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:15.291" endtime="20201029 09:35:15.313"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.287" endtime="20201029 09:35:15.315"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.337" endtime="20201029 09:35:15.373"></status>
</kw>
<msg timestamp="20201029 09:35:15.374" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.333" endtime="20201029 09:35:15.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.381" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.377" endtime="20201029 09:35:15.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.383" endtime="20201029 09:35:15.387"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.326" endtime="20201029 09:35:15.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.321" endtime="20201029 09:35:15.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.407" endtime="20201029 09:35:15.756"></status>
</kw>
<msg timestamp="20201029 09:35:15.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035574361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035782444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.404" endtime="20201029 09:35:15.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035574361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035782444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.766" endtime="20201029 09:35:15.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.786" endtime="20201029 09:35:15.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.396" endtime="20201029 09:35:15.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.391" endtime="20201029 09:35:15.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:15.802" level="INFO">${PHILIP_RES} = [{'diff': 0.0002080829999999978}, {'diff': 0.0002096799999999968}, {'diff': 0.00020969399999999638}, {'diff': 0.00020968100000000323}, {'diff': 0.00020966700000000366}, {'diff': 0.00020969399999999638...</msg>
<status status="PASS" starttime="20201029 09:35:15.795" endtime="20201029 09:35:15.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:15.817" level="INFO">${RESULT} = {'diff': [0.0002080829999999978, 0.0002096799999999968, 0.00020969399999999638, 0.00020968100000000323, 0.00020966700000000366, 0.00020969399999999638, 0.00020970900000000237, 0.00020965300000000409, ...</msg>
<status status="PASS" starttime="20201029 09:35:15.805" endtime="20201029 09:35:15.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.828" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:15.826" endtime="20201029 09:35:15.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.833" level="INFO">VALUE: [0.0002080829999999978, 0.0002096799999999968, 0.00020969399999999638, 0.00020968100000000323, 0.00020966700000000366, 0.00020969399999999638, 0.00020970900000000237, 0.00020965300000000409, 0.0002095280000000005, 0.00020963899999999758, 0.00020962500000000495, 0.0002096809999999963, 0.00020969400000000332, 0.0002097080000000029, 0.00020965299999999715, 0.00020969400000000332, 0.00020979100000000084, 0.00020968000000000375, 0.0002096809999999963, 0.00020965300000000409, 0.0002096950000000028, 0.00020969399999999638, 0.00020972199999999552, 0.000209624999999998, 0.00020965299999999715, 0.00020968000000000375, 0.00020963900000000452, 0.00020969399999999638, 0.0002096799999999968, 0.0002096799999999968, 0.00020968100000000323, 0.00020970900000000237, 0.0002096950000000028, 0.00020966699999999672, 0.0002096950000000028, 0.0002097080000000029, 0.00020972200000000246, 0.00020970799999999595, 0.00020969399999999638, 0.00020969399999999638, 0.00020976400000000117, 0.00020970900000000237, 0.0002097080000000029, 0.00020973600000000203, 0.0002097500000000016, 0.00020968000000000375, 0.00020970900000000237, 0.00020973600000000203, 0.0002096809999999963, 0.0002097080000000029]</msg>
<status status="PASS" starttime="20201029 09:35:15.830" endtime="20201029 09:35:15.834"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.819" endtime="20201029 09:35:15.836"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.316" endtime="20201029 09:35:15.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.285" endtime="20201029 09:35:15.838"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:15.844" endtime="20201029 09:35:15.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.841" endtime="20201029 09:35:15.868"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.891" endtime="20201029 09:35:15.930"></status>
</kw>
<msg timestamp="20201029 09:35:15.931" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.887" endtime="20201029 09:35:15.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.937" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.933" endtime="20201029 09:35:15.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.940" endtime="20201029 09:35:15.944"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.879" endtime="20201029 09:35:15.945"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.874" endtime="20201029 09:35:15.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.964" endtime="20201029 09:35:16.312"></status>
</kw>
<msg timestamp="20201029 09:35:16.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036665139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036890431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.960" endtime="20201029 09:35:16.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036665139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036890431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:16.321" endtime="20201029 09:35:16.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.339" endtime="20201029 09:35:16.343"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.953" endtime="20201029 09:35:16.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.948" endtime="20201029 09:35:16.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:16.355" level="INFO">${PHILIP_RES} = [{'diff': 0.00022529200000000194}, {'diff': 0.00022605500000000278}, {'diff': 0.00022602700000000364}, {'diff': 0.00022600000000000398}, {'diff': 0.00022602799999999618}, {'diff': 0.000225985999999997...</msg>
<status status="PASS" starttime="20201029 09:35:16.347" endtime="20201029 09:35:16.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:16.366" level="INFO">${RESULT} = {'diff': [0.00022529200000000194, 0.00022605500000000278, 0.00022602700000000364, 0.00022600000000000398, 0.00022602799999999618, 0.00022598599999999747, 0.00022601299999999713, 0.00022600000000000398...</msg>
<status status="PASS" starttime="20201029 09:35:16.357" endtime="20201029 09:35:16.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.377" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:16.375" endtime="20201029 09:35:16.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.383" level="INFO">VALUE: [0.00022529200000000194, 0.00022605500000000278, 0.00022602700000000364, 0.00022600000000000398, 0.00022602799999999618, 0.00022598599999999747, 0.00022601299999999713, 0.00022600000000000398, 0.00022601400000000355, 0.0002259730000000043, 0.00022605600000000226, 0.0002260840000000014, 0.00022605600000000226, 0.0002260139999999966, 0.0002260139999999966, 0.00022606999999999489, 0.00022611200000000053, 0.00022602799999999618, 0.00022605499999999584, 0.00022602799999999618, 0.0002260139999999966, 0.00022605500000000278, 0.00022602800000000312, 0.00022602800000000312, 0.00022599999999999704, 0.00022595799999999833, 0.00022599999999999704, 0.00022604200000000269, 0.00022600000000000398, 0.00022602799999999618, 0.00022608399999999446, 0.0002260689999999954, 0.00022604099999999627, 0.00022598599999999747, 0.0002260139999999966, 0.00022597200000000484, 0.00022602800000000312, 0.00022605600000000226, 0.00022605600000000226, 0.0002259440000000057, 0.0002260269999999967, 0.0002259719999999979, 0.00022604200000000269, 0.00022602799999999618, 0.00022605599999998838, 0.00022604099999999627, 0.00022604200000000962, 0.00022604099999999627, 0.00022605600000000226, 0.00022605600000000226]</msg>
<status status="PASS" starttime="20201029 09:35:16.380" endtime="20201029 09:35:16.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.368" endtime="20201029 09:35:16.386"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.869" endtime="20201029 09:35:16.387"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.839" endtime="20201029 09:35:16.387"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:16.393" endtime="20201029 09:35:16.415"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.390" endtime="20201029 09:35:16.417"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.439" endtime="20201029 09:35:16.479"></status>
</kw>
<msg timestamp="20201029 09:35:16.480" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:16.435" endtime="20201029 09:35:16.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.487" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:16.483" endtime="20201029 09:35:16.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.489" endtime="20201029 09:35:16.493"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.428" endtime="20201029 09:35:16.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.423" endtime="20201029 09:35:16.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.513" endtime="20201029 09:35:16.864"></status>
</kw>
<msg timestamp="20201029 09:35:16.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035161833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035404097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:16.510" endtime="20201029 09:35:16.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035161833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035404097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:16.875" endtime="20201029 09:35:16.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.893" endtime="20201029 09:35:16.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.502" endtime="20201029 09:35:16.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.497" endtime="20201029 09:35:16.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:16.909" level="INFO">${PHILIP_RES} = [{'diff': 0.00024226399999999898}, {'diff': 0.00024240199999999573}, {'diff': 0.00024227799999999855}, {'diff': 0.00024227699999999908}, {'diff': 0.00024231899999999779}, {'diff': 0.000242332999999997...</msg>
<status status="PASS" starttime="20201029 09:35:16.901" endtime="20201029 09:35:16.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:16.919" level="INFO">${RESULT} = {'diff': [0.00024226399999999898, 0.00024240199999999573, 0.00024227799999999855, 0.00024227699999999908, 0.00024231899999999779, 0.00024233299999999736, 0.00024226399999999898, 0.00024229099999999865...</msg>
<status status="PASS" starttime="20201029 09:35:16.911" endtime="20201029 09:35:16.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.930" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:16.928" endtime="20201029 09:35:16.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.936" level="INFO">VALUE: [0.00024226399999999898, 0.00024240199999999573, 0.00024227799999999855, 0.00024227699999999908, 0.00024231899999999779, 0.00024233299999999736, 0.00024226399999999898, 0.00024229099999999865, 0.00024229199999999812, 0.00024227799999999855, 0.00024229199999999812, 0.0002421939999999942, 0.00024227799999999855, 0.00024223599999999984, 0.00024229099999999865, 0.00024226400000000592, 0.00024229199999999812, 0.00024227799999999855, 0.00024229199999999812, 0.00024230499999999822, 0.0002422629999999995, 0.0002422629999999995, 0.00024231899999999779, 0.0002423059999999977, 0.00024227799999999855, 0.00024233299999999736, 0.00024227799999999855, 0.00024227799999999855, 0.00024238899999999564, 0.00024227699999999908, 0.0002423059999999977, 0.00024227699999999908, 0.00024229199999999812, 0.00024227799999999855, 0.00024226399999999898, 0.00024227699999999908, 0.00024229200000000506, 0.00024229100000000559, 0.0002422780000000055, 0.00024226400000000592, 0.0002422080000000007, 0.0002423479999999964, 0.00024234800000000334, 0.00024227799999999855, 0.00024227800000001243, 0.0002422499999999994, 0.0002422499999999994, 0.00024219400000000113, 0.00024222200000000027, 0.00024227799999999855]</msg>
<status status="PASS" starttime="20201029 09:35:16.933" endtime="20201029 09:35:16.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.921" endtime="20201029 09:35:16.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.418" endtime="20201029 09:35:16.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.388" endtime="20201029 09:35:16.941"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:16.947" endtime="20201029 09:35:16.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.944" endtime="20201029 09:35:16.973"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.999" endtime="20201029 09:35:17.043"></status>
</kw>
<msg timestamp="20201029 09:35:17.044" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:16.995" endtime="20201029 09:35:17.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.051" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:17.047" endtime="20201029 09:35:17.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.053" endtime="20201029 09:35:17.057"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.986" endtime="20201029 09:35:17.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.979" endtime="20201029 09:35:17.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.077" endtime="20201029 09:35:17.426"></status>
</kw>
<msg timestamp="20201029 09:35:17.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042824986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043082972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:17.074" endtime="20201029 09:35:17.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042824986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043082972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:17.435" endtime="20201029 09:35:17.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.453" endtime="20201029 09:35:17.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.067" endtime="20201029 09:35:17.458"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.062" endtime="20201029 09:35:17.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:17.470" level="INFO">${PHILIP_RES} = [{'diff': 0.0002579859999999948}, {'diff': 0.0002583609999999986}, {'diff': 0.00025841600000000436}, {'diff': 0.0002584310000000034}, {'diff': 0.000258445000000003}, {'diff': 0.0002584730000000021}, {...</msg>
<status status="PASS" starttime="20201029 09:35:17.462" endtime="20201029 09:35:17.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:17.479" level="INFO">${RESULT} = {'diff': [0.0002579859999999948, 0.0002583609999999986, 0.00025841600000000436, 0.0002584310000000034, 0.000258445000000003, 0.0002584730000000021, 0.0002583749999999982, 0.00025844499999999604, 0.000...</msg>
<status status="PASS" starttime="20201029 09:35:17.472" endtime="20201029 09:35:17.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.489" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:17.487" endtime="20201029 09:35:17.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.495" level="INFO">VALUE: [0.0002579859999999948, 0.0002583609999999986, 0.00025841600000000436, 0.0002584310000000034, 0.000258445000000003, 0.0002584730000000021, 0.0002583749999999982, 0.00025844499999999604, 0.0002583879999999983, 0.00025840300000000427, 0.00025838899999999776, 0.00025836100000000556, 0.0002584169999999969, 0.00025837500000000513, 0.0002584169999999969, 0.00025843099999999647, 0.00025841600000000436, 0.00025838899999999776, 0.0002584310000000034, 0.0002583890000000047, 0.00025843000000000393, 0.0002584169999999969, 0.0002584169999999969, 0.0002583329999999995, 0.00025838899999999776, 0.00025843099999999647, 0.0002584169999999969, 0.00025841600000000436, 0.00025840299999999733, 0.00025840300000000427, 0.0002584860000000022, 0.00025843000000000393, 0.00025844399999999657, 0.00025840300000000427, 0.00025843099999998953, 0.00025843000000000393, 0.0002584719999999957, 0.0002583619999999981, 0.0002584029999999904, 0.0002584310000000034, 0.00025852800000000786, 0.0002584170000000108, 0.00025847300000000906, 0.0002584159999999974, 0.0002585000000000087, 0.00025845900000000255, 0.00025844400000001044, 0.0002584720000000096, 0.0002584729999999952, 0.00025844399999999657]</msg>
<status status="PASS" starttime="20201029 09:35:17.492" endtime="20201029 09:35:17.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.481" endtime="20201029 09:35:17.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.974" endtime="20201029 09:35:17.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.942" endtime="20201029 09:35:17.500"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:17.506" endtime="20201029 09:35:17.528"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.502" endtime="20201029 09:35:17.530"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.552" endtime="20201029 09:35:17.597"></status>
</kw>
<msg timestamp="20201029 09:35:17.598" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:17.549" endtime="20201029 09:35:17.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.605" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:17.601" endtime="20201029 09:35:17.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.607" endtime="20201029 09:35:17.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.542" endtime="20201029 09:35:17.613"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.536" endtime="20201029 09:35:17.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.631" endtime="20201029 09:35:17.980"></status>
</kw>
<msg timestamp="20201029 09:35:17.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036631861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036905861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:17.628" endtime="20201029 09:35:17.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036631861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036905861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:17.989" endtime="20201029 09:35:18.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.007" endtime="20201029 09:35:18.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.621" endtime="20201029 09:35:18.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.616" endtime="20201029 09:35:18.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:18.024" level="INFO">${PHILIP_RES} = [{'diff': 0.00027399999999999647}, {'diff': 0.000274722000000005}, {'diff': 0.0002747499999999972}, {'diff': 0.0002747499999999972}, {'diff': 0.000274722000000005}, {'diff': 0.0002747219999999981}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:18.016" endtime="20201029 09:35:18.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:18.033" level="INFO">${RESULT} = {'diff': [0.00027399999999999647, 0.000274722000000005, 0.0002747499999999972, 0.0002747499999999972, 0.000274722000000005, 0.0002747219999999981, 0.0002747780000000033, 0.0002747360000000046, 0.00027...</msg>
<status status="PASS" starttime="20201029 09:35:18.026" endtime="20201029 09:35:18.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.044" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:18.041" endtime="20201029 09:35:18.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.051" level="INFO">VALUE: [0.00027399999999999647, 0.000274722000000005, 0.0002747499999999972, 0.0002747499999999972, 0.000274722000000005, 0.0002747219999999981, 0.0002747780000000033, 0.0002747360000000046, 0.000274708999999998, 0.0002747629999999973, 0.000274708999999998, 0.00027479200000000287, 0.0002747639999999968, 0.0002747219999999981, 0.0002747499999999972, 0.00027475000000000416, 0.00027472299999999755, 0.00027473599999999765, 0.00027476400000000373, 0.0002747499999999972, 0.0002747079999999985, 0.00027475000000000416, 0.0002747219999999981, 0.0002747499999999972, 0.0002748340000000016, 0.00027467999999999937, 0.000274820000000002, 0.00027466699999999927, 0.0002747219999999981, 0.0002747219999999981, 0.0002747499999999972, 0.00027473599999999765, 0.0002747079999999985, 0.0002747499999999972, 0.0002747219999999981, 0.0002747639999999968, 0.00027480599999998856, 0.0002748049999999891, 0.0002747639999999968, 0.00027473599999999765, 0.0002747639999999968, 0.0002747639999999968, 0.0002748340000000016, 0.000274722000000005, 0.0002747079999999985, 0.00027473599999999765, 0.00027475000000000416, 0.0002747499999999903, 0.000274722000000005, 0.000274722000000005]</msg>
<status status="PASS" starttime="20201029 09:35:18.046" endtime="20201029 09:35:18.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.035" endtime="20201029 09:35:18.054"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.531" endtime="20201029 09:35:18.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.501" endtime="20201029 09:35:18.056"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:18.062" endtime="20201029 09:35:18.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.058" endtime="20201029 09:35:18.085"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.107" endtime="20201029 09:35:18.153"></status>
</kw>
<msg timestamp="20201029 09:35:18.155" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.103" endtime="20201029 09:35:18.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.161" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.157" endtime="20201029 09:35:18.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.163" endtime="20201029 09:35:18.167"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.096" endtime="20201029 09:35:18.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.091" endtime="20201029 09:35:18.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.187" endtime="20201029 09:35:18.536"></status>
</kw>
<msg timestamp="20201029 09:35:18.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035121528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035412722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:18.184" endtime="20201029 09:35:18.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035121528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035412722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:18.545" endtime="20201029 09:35:18.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.563" endtime="20201029 09:35:18.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.177" endtime="20201029 09:35:18.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.172" endtime="20201029 09:35:18.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:18.579" level="INFO">${PHILIP_RES} = [{'diff': 0.00029119400000000156}, {'diff': 0.00029209700000000505}, {'diff': 0.0002921670000000029}, {'diff': 0.0002921109999999977}, {'diff': 0.0002921389999999968}, {'diff': 0.0002921389999999968},...</msg>
<status status="PASS" starttime="20201029 09:35:18.572" endtime="20201029 09:35:18.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:18.590" level="INFO">${RESULT} = {'diff': [0.00029119400000000156, 0.00029209700000000505, 0.0002921670000000029, 0.0002921109999999977, 0.0002921389999999968, 0.0002921389999999968, 0.0002921670000000029, 0.00029212499999999725, 0.0...</msg>
<status status="PASS" starttime="20201029 09:35:18.582" endtime="20201029 09:35:18.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.600" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:18.598" endtime="20201029 09:35:18.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.605" level="INFO">VALUE: [0.00029119400000000156, 0.00029209700000000505, 0.0002921670000000029, 0.0002921109999999977, 0.0002921389999999968, 0.0002921389999999968, 0.0002921670000000029, 0.00029212499999999725, 0.00029208299999999854, 0.00029208299999999854, 0.0002921530000000033, 0.0002921110000000046, 0.0002921110000000046, 0.0002920830000000055, 0.00029211199999999715, 0.0002921389999999968, 0.0002921529999999964, 0.00029212499999999725, 0.0002921109999999977, 0.00029212499999999725, 0.0002921109999999977, 0.00029209700000000505, 0.00029219500000000204, 0.0002921109999999977, 0.0002921109999999977, 0.0002921250000000042, 0.00029205599999999887, 0.0002920969999999981, 0.0002921109999999977, 0.00029208400000000495, 0.00029205599999999887, 0.00029205599999999887, 0.0002921659999999965, 0.0002921250000000042, 0.0002920969999999981, 0.00029206899999999897, 0.0002921109999999977, 0.00029211100000001156, 0.00029202700000000026, 0.00029205599999999887, 0.00029202799999999973, 0.00029201300000000763, 0.0002921250000000042, 0.00029208299999999854, 0.00029220800000000213, 0.0002921389999999968, 0.0002921389999999968, 0.0002921249999999903, 0.00029215299999998945, 0.00029209700000000505]</msg>
<status status="PASS" starttime="20201029 09:35:18.603" endtime="20201029 09:35:18.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.592" endtime="20201029 09:35:18.608"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.087" endtime="20201029 09:35:18.610"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.057" endtime="20201029 09:35:18.610"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:18.616" endtime="20201029 09:35:18.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.612" endtime="20201029 09:35:18.640"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.660" endtime="20201029 09:35:18.709"></status>
</kw>
<msg timestamp="20201029 09:35:18.710" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.657" endtime="20201029 09:35:18.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.716" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.712" endtime="20201029 09:35:18.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.718" endtime="20201029 09:35:18.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.650" endtime="20201029 09:35:18.724"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.645" endtime="20201029 09:35:18.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.742" endtime="20201029 09:35:19.082"></status>
</kw>
<msg timestamp="20201029 09:35:19.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034199056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034507097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:18.738" endtime="20201029 09:35:19.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034199056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034507097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:19.091" endtime="20201029 09:35:19.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.108" endtime="20201029 09:35:19.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.731" endtime="20201029 09:35:19.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.726" endtime="20201029 09:35:19.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:19.124" level="INFO">${PHILIP_RES} = [{'diff': 0.00030804100000000195}, {'diff': 0.0003093750000000006}, {'diff': 0.00030940299999999976}, {'diff': 0.0003093470000000015}, {'diff': 0.0003093620000000005}, {'diff': 0.00030934699999999454}...</msg>
<status status="PASS" starttime="20201029 09:35:19.116" endtime="20201029 09:35:19.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:19.134" level="INFO">${RESULT} = {'diff': [0.00030804100000000195, 0.0003093750000000006, 0.00030940299999999976, 0.0003093470000000015, 0.0003093620000000005, 0.00030934699999999454, 0.00030936100000000105, 0.0003093890000000002, 0....</msg>
<status status="PASS" starttime="20201029 09:35:19.126" endtime="20201029 09:35:19.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.145" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:19.143" endtime="20201029 09:35:19.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.150" level="INFO">VALUE: [0.00030804100000000195, 0.0003093750000000006, 0.00030940299999999976, 0.0003093470000000015, 0.0003093620000000005, 0.00030934699999999454, 0.00030936100000000105, 0.0003093890000000002, 0.00030941699999999933, 0.0003093200000000018, 0.0003093890000000002, 0.00030936100000000105, 0.00030947199999999814, 0.00030944499999999847, 0.00030940299999999976, 0.0003093750000000006, 0.0003093750000000006, 0.00030933399999999445, 0.0003093750000000006, 0.0003093470000000015, 0.0003093890000000002, 0.0003093330000000019, 0.00030934800000000096, 0.0003093750000000006, 0.0003094020000000003, 0.00030934699999999454, 0.00030936100000000105, 0.0003093750000000006, 0.0003094030000000067, 0.00030934800000000096, 0.0003093200000000018, 0.0003093330000000019, 0.0003093750000000006, 0.00030930499999999583, 0.0003093620000000005, 0.0003093059999999953, 0.0003093200000000018, 0.00030938900000000713, 0.00030940299999999976, 0.0003093470000000015, 0.0003093750000000006, 0.00030938899999999325, 0.00030931900000000234, 0.0003094020000000003, 0.0003094310000000128, 0.0003093470000000015, 0.0003092910000000032, 0.0003093050000000097, 0.0003092920000000027, 0.00030930499999999583]</msg>
<status status="PASS" starttime="20201029 09:35:19.147" endtime="20201029 09:35:19.152"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.136" endtime="20201029 09:35:19.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.641" endtime="20201029 09:35:19.155"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.611" endtime="20201029 09:35:19.155"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:19.161" endtime="20201029 09:35:19.182"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.157" endtime="20201029 09:35:19.184"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.205" endtime="20201029 09:35:19.257"></status>
</kw>
<msg timestamp="20201029 09:35:19.258" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:19.202" endtime="20201029 09:35:19.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.266" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:19.261" endtime="20201029 09:35:19.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.270" endtime="20201029 09:35:19.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.194" endtime="20201029 09:35:19.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.189" endtime="20201029 09:35:19.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.304" endtime="20201029 09:35:19.667"></status>
</kw>
<msg timestamp="20201029 09:35:19.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033957931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034284556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:19.298" endtime="20201029 09:35:19.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033957931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034284556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:19.676" endtime="20201029 09:35:19.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.694" endtime="20201029 09:35:19.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.288" endtime="20201029 09:35:19.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.283" endtime="20201029 09:35:19.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:19.710" level="INFO">${PHILIP_RES} = [{'diff': 0.000326625000000004}, {'diff': 0.0003265969999999979}, {'diff': 0.00032659800000000433}, {'diff': 0.00032662499999999706}, {'diff': 0.00032668099999999534}, {'diff': 0.0003266659999999963},...</msg>
<status status="PASS" starttime="20201029 09:35:19.703" endtime="20201029 09:35:19.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:19.720" level="INFO">${RESULT} = {'diff': [0.000326625000000004, 0.0003265969999999979, 0.00032659800000000433, 0.00032662499999999706, 0.00032668099999999534, 0.0003266659999999963, 0.0003266519999999967, 0.00032665300000000314, 0.0...</msg>
<status status="PASS" starttime="20201029 09:35:19.713" endtime="20201029 09:35:19.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.730" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:19.728" endtime="20201029 09:35:19.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.736" level="INFO">VALUE: [0.000326625000000004, 0.0003265969999999979, 0.00032659800000000433, 0.00032662499999999706, 0.00032668099999999534, 0.0003266659999999963, 0.0003266519999999967, 0.00032665300000000314, 0.0003266800000000028, 0.00032670800000000194, 0.00032666600000000323, 0.0003266810000000023, 0.0003266110000000044, 0.0003266389999999966, 0.00032675000000000065, 0.0003266389999999966, 0.000326625000000004, 0.00032662499999999706, 0.0003266389999999966, 0.0003265689999999988, 0.0003266529999999962, 0.0003267090000000014, 0.0003266800000000028, 0.0003266670000000027, 0.0003265969999999979, 0.0003265969999999979, 0.00032665300000000314, 0.0003265969999999979, 0.0003265559999999987, 0.0003265549999999992, 0.00032658299999999835, 0.0003266109999999975, 0.00032658299999999835, 0.0003265689999999988, 0.0003266529999999962, 0.00032669500000000185, 0.0003265830000000053, 0.00032661099999999055, 0.0003265969999999979, 0.0003265969999999979, 0.00032661099999999055, 0.0003265969999999979, 0.0003265689999999988, 0.0003265830000000053, 0.0003265969999999979, 0.00032662499999999706, 0.0003265689999999988, 0.00032655500000000615, 0.00032656900000001265, 0.0003265829999999914]</msg>
<status status="PASS" starttime="20201029 09:35:19.733" endtime="20201029 09:35:19.742"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.721" endtime="20201029 09:35:19.744"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.185" endtime="20201029 09:35:19.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.156" endtime="20201029 09:35:19.746"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:19.752" endtime="20201029 09:35:19.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.748" endtime="20201029 09:35:19.776"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.798" endtime="20201029 09:35:19.853"></status>
</kw>
<msg timestamp="20201029 09:35:19.854" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:19.794" endtime="20201029 09:35:19.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.861" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:19.856" endtime="20201029 09:35:19.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.863" endtime="20201029 09:35:19.867"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.787" endtime="20201029 09:35:19.868"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.782" endtime="20201029 09:35:19.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.887" endtime="20201029 09:35:20.230"></status>
</kw>
<msg timestamp="20201029 09:35:20.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037080306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037422708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:19.884" endtime="20201029 09:35:20.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037080306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037422708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:20.239" endtime="20201029 09:35:20.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.257" endtime="20201029 09:35:20.260"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.876" endtime="20201029 09:35:20.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.871" endtime="20201029 09:35:20.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:20.272" level="INFO">${PHILIP_RES} = [{'diff': 0.0003424019999999986}, {'diff': 0.000343777999999996}, {'diff': 0.00034383399999999426}, {'diff': 0.0003439020000000001}, {'diff': 0.00034386100000000086}, {'diff': 0.00034390299999999957},...</msg>
<status status="PASS" starttime="20201029 09:35:20.265" endtime="20201029 09:35:20.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:20.281" level="INFO">${RESULT} = {'diff': [0.0003424019999999986, 0.000343777999999996, 0.00034383399999999426, 0.0003439020000000001, 0.00034386100000000086, 0.00034390299999999957, 0.0003438200000000016, 0.00034386100000000086, 0.0...</msg>
<status status="PASS" starttime="20201029 09:35:20.274" endtime="20201029 09:35:20.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.292" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:20.290" endtime="20201029 09:35:20.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.297" level="INFO">VALUE: [0.0003424019999999986, 0.000343777999999996, 0.00034383399999999426, 0.0003439020000000001, 0.00034386100000000086, 0.00034390299999999957, 0.0003438200000000016, 0.00034386100000000086, 0.00034390299999999957, 0.0003438470000000013, 0.000343889, 0.0003438330000000017, 0.0003438609999999939, 0.0003438470000000013, 0.00034387500000000043, 0.0003438470000000013, 0.00034384699999999435, 0.0003438609999999939, 0.00034380499999999564, 0.0003438330000000017, 0.0003438470000000013, 0.0003438330000000017, 0.0003438050000000026, 0.0003438470000000013, 0.00034384800000000076, 0.00034392999999999924, 0.000343889, 0.00034384699999999435, 0.0003438330000000017, 0.0003437639999999964, 0.00034380600000000205, 0.0003438050000000026, 0.00034377799999998904, 0.00034377700000000344, 0.00034377799999998904, 0.0003437500000000038, 0.00034387500000000737, 0.00034386100000000086, 0.00034380600000000205, 0.0003437920000000094, 0.00034386100000000086, 0.0003438050000000026, 0.00034391599999999967, 0.00034384699999999435, 0.00034382000000000856, 0.0003437500000000038, 0.0003437639999999964, 0.0003437639999999964, 0.00034373599999999727, 0.0003437640000000103]</msg>
<status status="PASS" starttime="20201029 09:35:20.294" endtime="20201029 09:35:20.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.283" endtime="20201029 09:35:20.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.777" endtime="20201029 09:35:20.302"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.747" endtime="20201029 09:35:20.302"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:20.308" endtime="20201029 09:35:20.330"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.304" endtime="20201029 09:35:20.331"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.353" endtime="20201029 09:35:20.408"></status>
</kw>
<msg timestamp="20201029 09:35:20.410" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:20.350" endtime="20201029 09:35:20.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.416" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:20.412" endtime="20201029 09:35:20.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.418" endtime="20201029 09:35:20.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.343" endtime="20201029 09:35:20.424"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.338" endtime="20201029 09:35:20.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.442" endtime="20201029 09:35:20.787"></status>
</kw>
<msg timestamp="20201029 09:35:20.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035516278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035877764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:20.438" endtime="20201029 09:35:20.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035516278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035877764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:20.796" endtime="20201029 09:35:20.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.813" endtime="20201029 09:35:20.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.431" endtime="20201029 09:35:20.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.426" endtime="20201029 09:35:20.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:20.829" level="INFO">${PHILIP_RES} = [{'diff': 0.00036148600000000114}, {'diff': 0.00036215300000000394}, {'diff': 0.0003621390000000044}, {'diff': 0.00036215300000000394}, {'diff': 0.00036213899999999744}, {'diff': 0.0003621659999999971...</msg>
<status status="PASS" starttime="20201029 09:35:20.822" endtime="20201029 09:35:20.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:20.838" level="INFO">${RESULT} = {'diff': [0.00036148600000000114, 0.00036215300000000394, 0.0003621390000000044, 0.00036215300000000394, 0.00036213899999999744, 0.0003621659999999971, 0.00036222299999999485, 0.0003620969999999987, 0...</msg>
<status status="PASS" starttime="20201029 09:35:20.831" endtime="20201029 09:35:20.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.848" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:20.846" endtime="20201029 09:35:20.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.855" level="INFO">VALUE: [0.00036148600000000114, 0.00036215300000000394, 0.0003621390000000044, 0.00036215300000000394, 0.00036213899999999744, 0.0003621659999999971, 0.00036222299999999485, 0.0003620969999999987, 0.00036213899999999744, 0.00036217999999999667, 0.0003620969999999987, 0.0003621390000000044, 0.00036213899999999744, 0.00036213899999999744, 0.00036216600000000404, 0.000362152999999997, 0.0003620689999999996, 0.00036212499999999787, 0.0003620689999999996, 0.0003620559999999995, 0.000362055, 0.00036208299999999916, 0.00036212499999999787, 0.0003621670000000035, 0.0003621250000000048, 0.00036206999999999906, 0.0003621109999999983, 0.0003621670000000035, 0.00036213899999999744, 0.00036213799999999796, 0.0003620969999999918, 0.00036213899999999744, 0.0003621109999999983, 0.0003621109999999983, 0.00036215300000000394, 0.0003621810000000031, 0.0003620690000000065, 0.00036213899999999744, 0.00036209800000000514, 0.00036211199999999777, 0.00036208399999999863, 0.00036206899999999265, 0.000362070000000006, 0.0003620559999999995, 0.0003620699999999921, 0.00036201399999999384, 0.0003621250000000048, 0.0003621109999999983, 0.0003621250000000048, 0.0003621109999999983]</msg>
<status status="PASS" starttime="20201029 09:35:20.851" endtime="20201029 09:35:20.857"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.840" endtime="20201029 09:35:20.858"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.332" endtime="20201029 09:35:20.860"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.303" endtime="20201029 09:35:20.860"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:20.866" endtime="20201029 09:35:20.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.862" endtime="20201029 09:35:20.889"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.910" endtime="20201029 09:35:20.967"></status>
</kw>
<msg timestamp="20201029 09:35:20.968" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:20.907" endtime="20201029 09:35:20.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.974" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:20.971" endtime="20201029 09:35:20.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.977" endtime="20201029 09:35:20.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.900" endtime="20201029 09:35:20.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.894" endtime="20201029 09:35:20.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.000" endtime="20201029 09:35:21.345"></status>
</kw>
<msg timestamp="20201029 09:35:21.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034143361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034523583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:20.997" endtime="20201029 09:35:21.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034143361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034523583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:21.353" endtime="20201029 09:35:21.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.371" endtime="20201029 09:35:21.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.990" endtime="20201029 09:35:21.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.985" endtime="20201029 09:35:21.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:21.386" level="INFO">${PHILIP_RES} = [{'diff': 0.0003802219999999995}, {'diff': 0.0003804440000000006}, {'diff': 0.0003804440000000006}, {'diff': 0.0003803879999999954}, {'diff': 0.00038043000000000105}, {'diff': 0.0003804580000000002}, ...</msg>
<status status="PASS" starttime="20201029 09:35:21.379" endtime="20201029 09:35:21.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:21.400" level="INFO">${RESULT} = {'diff': [0.0003802219999999995, 0.0003804440000000006, 0.0003804440000000006, 0.0003803879999999954, 0.00038043000000000105, 0.0003804580000000002, 0.00038047199999999975, 0.0003804030000000014, 0.00...</msg>
<status status="PASS" starttime="20201029 09:35:21.388" endtime="20201029 09:35:21.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.411" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:21.409" endtime="20201029 09:35:21.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.416" level="INFO">VALUE: [0.0003802219999999995, 0.0003804440000000006, 0.0003804440000000006, 0.0003803879999999954, 0.00038043000000000105, 0.0003804580000000002, 0.00038047199999999975, 0.0003804030000000014, 0.00038047299999999923, 0.00038047299999999923, 0.00038041700000000095, 0.00038037500000000224, 0.0003804580000000002, 0.0003804310000000005, 0.00038041599999999454, 0.0003804440000000006, 0.00038043000000000105, 0.00038041700000000095, 0.0003804030000000014, 0.00038036099999999573, 0.0003804580000000002, 0.0003804580000000002, 0.0003804999999999989, 0.00038048600000000626, 0.0003803890000000018, 0.00038047300000000617, 0.0003804450000000001, 0.0003804030000000014, 0.00038036100000000267, 0.0003804020000000019, 0.00038044400000000755, 0.0003804859999999993, 0.0003804030000000014, 0.00038044500000000703, 0.00038040199999998803, 0.00038038899999999487, 0.00038043000000000105, 0.00038049999999999196, 0.0003804030000000014, 0.00038043000000000105, 0.0003804170000000079, 0.0003804160000000084, 0.0003804030000000014, 0.0003804170000000079, 0.0003803329999999966, 0.0003804170000000079, 0.00038041599999999454, 0.00038033300000001047, 0.0003804030000000014, 0.0003804439999999937]</msg>
<status status="PASS" starttime="20201029 09:35:21.413" endtime="20201029 09:35:21.418"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.402" endtime="20201029 09:35:21.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.890" endtime="20201029 09:35:21.421"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.861" endtime="20201029 09:35:21.421"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:21.427" endtime="20201029 09:35:21.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.423" endtime="20201029 09:35:21.450"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.471" endtime="20201029 09:35:21.530"></status>
</kw>
<msg timestamp="20201029 09:35:21.532" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:21.468" endtime="20201029 09:35:21.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.538" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:21.534" endtime="20201029 09:35:21.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.540" endtime="20201029 09:35:21.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.461" endtime="20201029 09:35:21.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.455" endtime="20201029 09:35:21.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.563" endtime="20201029 09:35:21.908"></status>
</kw>
<msg timestamp="20201029 09:35:21.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034335653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034734375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:21.560" endtime="20201029 09:35:21.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034335653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034734375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:21.917" endtime="20201029 09:35:21.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.935" endtime="20201029 09:35:21.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.553" endtime="20201029 09:35:21.940"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.548" endtime="20201029 09:35:21.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:21.951" level="INFO">${PHILIP_RES} = [{'diff': 0.0003987219999999972}, {'diff': 0.00039863899999999924}, {'diff': 0.0003986810000000049}, {'diff': 0.0003986110000000001}, {'diff': 0.00039865199999999934}, {'diff': 0.00039873599999999676}...</msg>
<status status="PASS" starttime="20201029 09:35:21.943" endtime="20201029 09:35:21.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:21.961" level="INFO">${RESULT} = {'diff': [0.0003987219999999972, 0.00039863899999999924, 0.0003986810000000049, 0.0003986110000000001, 0.00039865199999999934, 0.00039873599999999676, 0.0003986669999999984, 0.00039869399999999805, 0....</msg>
<status status="PASS" starttime="20201029 09:35:21.953" endtime="20201029 09:35:21.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.972" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:21.969" endtime="20201029 09:35:21.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.977" level="INFO">VALUE: [0.0003987219999999972, 0.00039863899999999924, 0.0003986810000000049, 0.0003986110000000001, 0.00039865199999999934, 0.00039873599999999676, 0.0003986669999999984, 0.00039869399999999805, 0.0003986669999999984, 0.0003986529999999988, 0.0003986799999999985, 0.0003986529999999988, 0.00039863799999999977, 0.00039863899999999924, 0.0003986669999999984, 0.00039863899999999924, 0.0003986249999999997, 0.00039865199999999934, 0.0003986670000000053, 0.00039863899999999924, 0.00039869399999999805, 0.00039858400000000044, 0.0003987360000000037, 0.00039869399999999805, 0.00039858400000000044, 0.0003986799999999985, 0.0003986799999999985, 0.00039863899999999924, 0.000398694000000005, 0.0003986390000000062, 0.000398598, 0.00039859700000000053, 0.00039866699999999144, 0.0003986529999999988, 0.0003986670000000053, 0.0003986529999999988, 0.000398582999999994, 0.0003986389999999923, 0.0003986670000000053, 0.00039866599999999197, 0.00039859700000000053, 0.00039866699999999144, 0.0003986799999999985, 0.000398694000000005, 0.0003986670000000053, 0.0003986530000000127, 0.0003986390000000062, 0.00039859700000000053, 0.0003986389999999923, 0.00039861099999999317]</msg>
<status status="PASS" starttime="20201029 09:35:21.974" endtime="20201029 09:35:21.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.963" endtime="20201029 09:35:21.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.452" endtime="20201029 09:35:21.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.422" endtime="20201029 09:35:21.982"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:21.993" endtime="20201029 09:35:22.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.985" endtime="20201029 09:35:22.024"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.052" endtime="20201029 09:35:22.115"></status>
</kw>
<msg timestamp="20201029 09:35:22.116" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:22.048" endtime="20201029 09:35:22.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.122" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:22.118" endtime="20201029 09:35:22.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.125" endtime="20201029 09:35:22.128"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.039" endtime="20201029 09:35:22.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.032" endtime="20201029 09:35:22.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.149" endtime="20201029 09:35:22.502"></status>
</kw>
<msg timestamp="20201029 09:35:22.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049150028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049566083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:22.146" endtime="20201029 09:35:22.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049150028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049566083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:22.511" endtime="20201029 09:35:22.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.529" endtime="20201029 09:35:22.533"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.138" endtime="20201029 09:35:22.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.133" endtime="20201029 09:35:22.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:22.545" level="INFO">${PHILIP_RES} = [{'diff': 0.0004160549999999985}, {'diff': 0.0004168199999999983}, {'diff': 0.0004170000000000007}, {'diff': 0.0004169169999999958}, {'diff': 0.00041693100000000233}, {'diff': 0.00041698600000000113},...</msg>
<status status="PASS" starttime="20201029 09:35:22.538" endtime="20201029 09:35:22.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:22.555" level="INFO">${RESULT} = {'diff': [0.0004160549999999985, 0.0004168199999999983, 0.0004170000000000007, 0.0004169169999999958, 0.00041693100000000233, 0.00041698600000000113, 0.00041697200000000156, 0.0004170140000000003, 0.0...</msg>
<status status="PASS" starttime="20201029 09:35:22.548" endtime="20201029 09:35:22.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.565" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:22.563" endtime="20201029 09:35:22.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.571" level="INFO">VALUE: [0.0004160549999999985, 0.0004168199999999983, 0.0004170000000000007, 0.0004169169999999958, 0.00041693100000000233, 0.00041698600000000113, 0.00041697200000000156, 0.0004170140000000003, 0.0004169019999999968, 0.000416958000000002, 0.0004169870000000006, 0.00041694499999999496, 0.00041690299999999625, 0.0004169450000000019, 0.0004169159999999894, 0.0004169440000000024, 0.0004169450000000019, 0.0004169030000000101, 0.0004168890000000036, 0.00041695800000000893, 0.0004169859999999942, 0.0004169440000000024, 0.0004169309999999954, 0.0004169309999999954, 0.0004168890000000036, 0.0004169019999999968, 0.0004168890000000036, 0.0004169590000000084, 0.0004169030000000101, 0.00041695799999999505, 0.0004169309999999954, 0.0004169160000000033, 0.00041690299999999625, 0.00041695800000000893, 0.00041695799999999505, 0.00041688899999998974, 0.00041694399999998855, 0.00041694399999998855, 0.00041697200000000156, 0.0004169030000000101, 0.00041691700000000276, 0.00041690299999999625, 0.0004168610000000045, 0.0004169160000000033, 0.00041690299999999625, 0.0004169450000000019, 0.00041690299999999625, 0.0004168890000000036, 0.0004169440000000024, 0.00041683299999999146]</msg>
<status status="PASS" starttime="20201029 09:35:22.568" endtime="20201029 09:35:22.572"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.556" endtime="20201029 09:35:22.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.025" endtime="20201029 09:35:22.575"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.983" endtime="20201029 09:35:22.576"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:22.582" endtime="20201029 09:35:22.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.578" endtime="20201029 09:35:22.606"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.627" endtime="20201029 09:35:22.693"></status>
</kw>
<msg timestamp="20201029 09:35:22.694" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:22.624" endtime="20201029 09:35:22.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.700" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:22.696" endtime="20201029 09:35:22.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.703" endtime="20201029 09:35:22.707"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.616" endtime="20201029 09:35:22.708"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.611" endtime="20201029 09:35:22.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.727" endtime="20201029 09:35:23.074"></status>
</kw>
<msg timestamp="20201029 09:35:23.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036753583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037188403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:22.723" endtime="20201029 09:35:23.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036753583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037188403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:23.084" endtime="20201029 09:35:23.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.102" endtime="20201029 09:35:23.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.716" endtime="20201029 09:35:23.107"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.711" endtime="20201029 09:35:23.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:23.118" level="INFO">${PHILIP_RES} = [{'diff': 0.0004348200000000024}, {'diff': 0.0004363189999999975}, {'diff': 0.0004362909999999984}, {'diff': 0.00043626400000000565}, {'diff': 0.00043618100000000076}, {'diff': 0.0004361800000000013},...</msg>
<status status="PASS" starttime="20201029 09:35:23.110" endtime="20201029 09:35:23.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:23.128" level="INFO">${RESULT} = {'diff': [0.0004348200000000024, 0.0004363189999999975, 0.0004362909999999984, 0.00043626400000000565, 0.00043618100000000076, 0.0004361800000000013, 0.0004361250000000025, 0.00043617999999999435, 0.0...</msg>
<status status="PASS" starttime="20201029 09:35:23.120" endtime="20201029 09:35:23.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.139" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:23.137" endtime="20201029 09:35:23.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.145" level="INFO">VALUE: [0.0004348200000000024, 0.0004363189999999975, 0.0004362909999999984, 0.00043626400000000565, 0.00043618100000000076, 0.0004361800000000013, 0.0004361250000000025, 0.00043617999999999435, 0.0004361809999999938, 0.00043620800000000043, 0.00043631900000000445, 0.0004363059999999974, 0.00043623599999999957, 0.0004362639999999987, 0.00043618100000000076, 0.000436222, 0.00043618100000000076, 0.00043624999999999914, 0.00043608299999999683, 0.00043623599999999957, 0.00043623599999999957, 0.00043624999999999914, 0.0004361800000000013, 0.0004362920000000048, 0.00043626399999999177, 0.00043640300000000187, 0.00043624999999999914, 0.00043624999999999914, 0.00043620800000000737, 0.00043620800000000737, 0.0004362360000000065, 0.00043622299999999947, 0.00043613900000000205, 0.0004361519999999952, 0.0004361660000000017, 0.0004361809999999938, 0.00043619400000000086, 0.0004361809999999938, 0.00043619400000000086, 0.000436222, 0.000436222, 0.00043620800000000737, 0.0004361809999999938, 0.0004362769999999988, 0.00043619500000000033, 0.00043620899999999296, 0.00043619400000000086, 0.0004361670000000012, 0.0004362079999999935, 0.00043630499999999794]</msg>
<status status="PASS" starttime="20201029 09:35:23.142" endtime="20201029 09:35:23.147"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.130" endtime="20201029 09:35:23.149"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.607" endtime="20201029 09:35:23.150"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.577" endtime="20201029 09:35:23.151"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:23.157" endtime="20201029 09:35:23.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.153" endtime="20201029 09:35:23.180"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.204" endtime="20201029 09:35:23.270"></status>
</kw>
<msg timestamp="20201029 09:35:23.271" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:23.200" endtime="20201029 09:35:23.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.278" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:23.273" endtime="20201029 09:35:23.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.280" endtime="20201029 09:35:23.284"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.193" endtime="20201029 09:35:23.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.187" endtime="20201029 09:35:23.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.304" endtime="20201029 09:35:23.654"></status>
</kw>
<msg timestamp="20201029 09:35:23.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037064472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037519083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:23.301" endtime="20201029 09:35:23.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037064472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037519083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:23.663" endtime="20201029 09:35:23.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.681" endtime="20201029 09:35:23.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.293" endtime="20201029 09:35:23.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.288" endtime="20201029 09:35:23.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:23.697" level="INFO">${PHILIP_RES} = [{'diff': 0.0004546110000000006}, {'diff': 0.00045555599999999585}, {'diff': 0.0004554580000000058}, {'diff': 0.00045557000000000236}, {'diff': 0.00045558300000000246}, {'diff': 0.0004555829999999955}...</msg>
<status status="PASS" starttime="20201029 09:35:23.689" endtime="20201029 09:35:23.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:23.706" level="INFO">${RESULT} = {'diff': [0.0004546110000000006, 0.00045555599999999585, 0.0004554580000000058, 0.00045557000000000236, 0.00045558300000000246, 0.0004555829999999955, 0.0004555420000000032, 0.000455485999999998, 0.00...</msg>
<status status="PASS" starttime="20201029 09:35:23.699" endtime="20201029 09:35:23.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.717" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:23.715" endtime="20201029 09:35:23.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.724" level="INFO">VALUE: [0.0004546110000000006, 0.00045555599999999585, 0.0004554580000000058, 0.00045557000000000236, 0.00045558300000000246, 0.0004555829999999955, 0.0004555420000000032, 0.000455485999999998, 0.0004555549999999964, 0.00045557000000000236, 0.000455485999999998, 0.0004554729999999979, 0.000455485999999998, 0.00045541699999999963, 0.0004554309999999992, 0.00045540300000000006, 0.00045547199999999843, 0.0004555279999999967, 0.00045541699999999963, 0.00045545799999999886, 0.0004554729999999979, 0.0004554999999999976, 0.0004555000000000045, 0.0004555280000000106, 0.0004554580000000058, 0.00045548600000000494, 0.00045554199999998934, 0.0004555549999999964, 0.0004554580000000058, 0.0004554439999999993, 0.00045536100000000135, 0.00045548699999999054, 0.00045543099999999226, 0.00045552699999999724, 0.00045555600000000973, 0.00045552699999999724, 0.0004555130000000046, 0.00045548599999999106, 0.0004554729999999979, 0.0004554589999999914, 0.0004555140000000041, 0.00045543100000000614, 0.0004554580000000058, 0.00045548600000000494, 0.00045548600000000494, 0.0004554999999999976, 0.0004554580000000058, 0.0004555140000000041, 0.00045547199999999843, 0.0004554999999999976]</msg>
<status status="PASS" starttime="20201029 09:35:23.719" endtime="20201029 09:35:23.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.708" endtime="20201029 09:35:23.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.182" endtime="20201029 09:35:23.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.152" endtime="20201029 09:35:23.729"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:23.735" endtime="20201029 09:35:23.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.731" endtime="20201029 09:35:23.759"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.781" endtime="20201029 09:35:23.849"></status>
</kw>
<msg timestamp="20201029 09:35:23.851" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:23.777" endtime="20201029 09:35:23.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.857" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:23.853" endtime="20201029 09:35:23.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.859" endtime="20201029 09:35:23.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.770" endtime="20201029 09:35:23.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.764" endtime="20201029 09:35:23.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.883" endtime="20201029 09:35:24.234"></status>
</kw>
<msg timestamp="20201029 09:35:24.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035622236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036096222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:23.880" endtime="20201029 09:35:24.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035622236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036096222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:24.243" endtime="20201029 09:35:24.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.261" endtime="20201029 09:35:24.265"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.872" endtime="20201029 09:35:24.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.867" endtime="20201029 09:35:24.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:24.277" level="INFO">${PHILIP_RES} = [{'diff': 0.0004739859999999957}, {'diff': 0.00047461199999999926}, {'diff': 0.0004746389999999989}, {'diff': 0.00047466699999999806}, {'diff': 0.00047466699999999806}, {'diff': 0.000474651999999999},...</msg>
<status status="PASS" starttime="20201029 09:35:24.270" endtime="20201029 09:35:24.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:24.288" level="INFO">${RESULT} = {'diff': [0.0004739859999999957, 0.00047461199999999926, 0.0004746389999999989, 0.00047466699999999806, 0.00047466699999999806, 0.000474651999999999, 0.00047472299999999634, 0.00047462499999999935, 0....</msg>
<status status="PASS" starttime="20201029 09:35:24.280" endtime="20201029 09:35:24.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.299" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:24.297" endtime="20201029 09:35:24.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.304" level="INFO">VALUE: [0.0004739859999999957, 0.00047461199999999926, 0.0004746389999999989, 0.00047466699999999806, 0.00047466699999999806, 0.000474651999999999, 0.00047472299999999634, 0.00047462499999999935, 0.0004745840000000001, 0.0004746109999999998, 0.00047457000000000055, 0.0004746109999999998, 0.00047469399999999773, 0.00047455599999999404, 0.0004747220000000038, 0.00047465300000000543, 0.00047468099999999763, 0.00047473599999999644, 0.0004746949999999972, 0.00047463900000000586, 0.0004746659999999986, 0.00047467999999999816, 0.00047469500000000414, 0.00047465299999999155, 0.00047468100000000457, 0.00047472199999999687, 0.0004746389999999989, 0.00047454199999999447, 0.0004747360000000034, 0.0004746940000000116, 0.0004746389999999989, 0.00047459700000000715, 0.00047459700000000715, 0.00047466699999999806, 0.000474749999999996, 0.0004746389999999989, 0.00047466700000001194, 0.00047466699999999806, 0.00047459700000000715, 0.00047465300000000543, 0.0004746800000000051, 0.000474749999999996, 0.00047466699999999806, 0.0004746659999999986, 0.00047472200000001075, 0.00047472199999999687, 0.00047472199999999687, 0.00047469399999999773, 0.0004747360000000034, 0.000474749999999996]</msg>
<status status="PASS" starttime="20201029 09:35:24.301" endtime="20201029 09:35:24.306"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.290" endtime="20201029 09:35:24.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.760" endtime="20201029 09:35:24.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.730" endtime="20201029 09:35:24.309"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:24.315" endtime="20201029 09:35:24.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.312" endtime="20201029 09:35:24.339"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.360" endtime="20201029 09:35:24.431"></status>
</kw>
<msg timestamp="20201029 09:35:24.432" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:24.357" endtime="20201029 09:35:24.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.439" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:24.435" endtime="20201029 09:35:24.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.441" endtime="20201029 09:35:24.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.350" endtime="20201029 09:35:24.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.344" endtime="20201029 09:35:24.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.465" endtime="20201029 09:35:24.817"></status>
</kw>
<msg timestamp="20201029 09:35:24.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0351805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035673028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:24.462" endtime="20201029 09:35:24.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0351805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035673028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:24.827" endtime="20201029 09:35:24.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.845" endtime="20201029 09:35:24.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.454" endtime="20201029 09:35:24.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.450" endtime="20201029 09:35:24.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:24.861" level="INFO">${PHILIP_RES} = [{'diff': 0.000492527999999999}, {'diff': 0.0004941109999999985}, {'diff': 0.0004941389999999976}, {'diff': 0.0004940689999999998}, {'diff': 0.0004940559999999997}, {'diff': 0.0004940839999999988}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:24.853" endtime="20201029 09:35:24.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:24.872" level="INFO">${RESULT} = {'diff': [0.000492527999999999, 0.0004941109999999985, 0.0004941389999999976, 0.0004940689999999998, 0.0004940559999999997, 0.0004940839999999988, 0.0004940130000000015, 0.0004940420000000001, 0.00049...</msg>
<status status="PASS" starttime="20201029 09:35:24.863" endtime="20201029 09:35:24.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.883" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:24.880" endtime="20201029 09:35:24.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.888" level="INFO">VALUE: [0.000492527999999999, 0.0004941109999999985, 0.0004941389999999976, 0.0004940689999999998, 0.0004940559999999997, 0.0004940839999999988, 0.0004940130000000015, 0.0004940420000000001, 0.0004940000000000014, 0.0004940829999999993, 0.0004940410000000006, 0.000494125000000005, 0.0004940410000000006, 0.0004941109999999985, 0.0004941389999999976, 0.0004940420000000001, 0.0004940979999999984, 0.0004940420000000001, 0.0004940409999999937, 0.0004940410000000006, 0.0004939999999999944, 0.0004940420000000001, 0.0004939999999999944, 0.0004940410000000006, 0.000494014000000001, 0.0004940559999999927, 0.0004939860000000018, 0.000494014000000001, 0.0004940420000000001, 0.0004940550000000071, 0.0004940410000000006, 0.0004939999999999944, 0.0004940280000000075, 0.0004939859999999879, 0.0004939299999999897, 0.000493931000000003, 0.0004937770000000008, 0.0004938750000000047, 0.0004938750000000047, 0.0004938609999999982, 0.0004938619999999977, 0.0004939439999999962, 0.0004938480000000051, 0.0004938609999999982, 0.000493819999999992, 0.0004937910000000073, 0.0004938059999999994, 0.0004938329999999991, 0.0004937780000000003, 0.0004938469999999917]</msg>
<status status="PASS" starttime="20201029 09:35:24.885" endtime="20201029 09:35:24.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.874" endtime="20201029 09:35:24.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.340" endtime="20201029 09:35:24.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.310" endtime="20201029 09:35:24.894"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:24.899" endtime="20201029 09:35:24.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.896" endtime="20201029 09:35:24.923"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.945" endtime="20201029 09:35:25.018"></status>
</kw>
<msg timestamp="20201029 09:35:25.019" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:24.941" endtime="20201029 09:35:25.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.025" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:25.021" endtime="20201029 09:35:25.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.028" endtime="20201029 09:35:25.032"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.934" endtime="20201029 09:35:25.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.928" endtime="20201029 09:35:25.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.052" endtime="20201029 09:35:25.411"></status>
</kw>
<msg timestamp="20201029 09:35:25.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035221417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035734667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:25.048" endtime="20201029 09:35:25.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035221417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035734667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:25.420" endtime="20201029 09:35:25.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.438" endtime="20201029 09:35:25.442"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.041" endtime="20201029 09:35:25.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.036" endtime="20201029 09:35:25.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:25.454" level="INFO">${PHILIP_RES} = [{'diff': 0.0005132499999999998}, {'diff': 0.0005144299999999963}, {'diff': 0.0005143049999999996}, {'diff': 0.0005144029999999966}, {'diff': 0.000514388999999997}, {'diff': 0.0005144720000000019}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:25.446" endtime="20201029 09:35:25.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:25.463" level="INFO">${RESULT} = {'diff': [0.0005132499999999998, 0.0005144299999999963, 0.0005143049999999996, 0.0005144029999999966, 0.000514388999999997, 0.0005144720000000019, 0.0005143189999999992, 0.0005142499999999939, 0.00051...</msg>
<status status="PASS" starttime="20201029 09:35:25.456" endtime="20201029 09:35:25.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.474" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:25.472" endtime="20201029 09:35:25.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.479" level="INFO">VALUE: [0.0005132499999999998, 0.0005144299999999963, 0.0005143049999999996, 0.0005144029999999966, 0.000514388999999997, 0.0005144720000000019, 0.0005143189999999992, 0.0005142499999999939, 0.0005143749999999975, 0.0005143189999999992, 0.0005142919999999995, 0.0005143469999999983, 0.0005143480000000047, 0.0005143199999999987, 0.0005142500000000008, 0.0005143609999999979, 0.0005143749999999975, 0.0005143480000000047, 0.0005143329999999988, 0.0005142360000000012, 0.0005143189999999992, 0.0005143049999999996, 0.0005142370000000007, 0.0005144159999999898, 0.0005143050000000066, 0.000514291, 0.0005142919999999995, 0.0005142229999999942, 0.0005143189999999992, 0.0005144160000000036, 0.0005142640000000004, 0.0005142500000000078, 0.0005143049999999927, 0.000514277999999993, 0.0005142640000000004, 0.0005142640000000004, 0.0005142360000000012, 0.0005143059999999922, 0.0005142919999999995, 0.0005143050000000066, 0.0005141949999999951, 0.0005142360000000012, 0.0005142500000000078, 0.0005141949999999951, 0.0005142229999999942, 0.0005142640000000004, 0.0005141530000000033, 0.0005143339999999913, 0.0005142640000000004, 0.0005142370000000007]</msg>
<status status="PASS" starttime="20201029 09:35:25.476" endtime="20201029 09:35:25.481"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.465" endtime="20201029 09:35:25.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.924" endtime="20201029 09:35:25.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.894" endtime="20201029 09:35:25.484"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:25.491" endtime="20201029 09:35:25.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.487" endtime="20201029 09:35:25.514"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.536" endtime="20201029 09:35:25.613"></status>
</kw>
<msg timestamp="20201029 09:35:25.614" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:25.532" endtime="20201029 09:35:25.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.620" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:25.616" endtime="20201029 09:35:25.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.623" endtime="20201029 09:35:25.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.525" endtime="20201029 09:35:25.628"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.520" endtime="20201029 09:35:25.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.647" endtime="20201029 09:35:25.998"></status>
</kw>
<msg timestamp="20201029 09:35:26.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036757569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037290986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:25.643" endtime="20201029 09:35:26.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036757569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037290986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:26.007" endtime="20201029 09:35:26.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.025" endtime="20201029 09:35:26.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.636" endtime="20201029 09:35:26.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.631" endtime="20201029 09:35:26.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:26.042" level="INFO">${PHILIP_RES} = [{'diff': 0.0005334170000000013}, {'diff': 0.0005345420000000059}, {'diff': 0.0005345139999999998}, {'diff': 0.0005345000000000003}, {'diff': 0.0005345559999999985}, {'diff': 0.0005346249999999969}, {...</msg>
<status status="PASS" starttime="20201029 09:35:26.034" endtime="20201029 09:35:26.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:26.051" level="INFO">${RESULT} = {'diff': [0.0005334170000000013, 0.0005345420000000059, 0.0005345139999999998, 0.0005345000000000003, 0.0005345559999999985, 0.0005346249999999969, 0.000534652999999996, 0.0005345979999999972, 0.00053...</msg>
<status status="PASS" starttime="20201029 09:35:26.044" endtime="20201029 09:35:26.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.061" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:26.059" endtime="20201029 09:35:26.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.067" level="INFO">VALUE: [0.0005334170000000013, 0.0005345420000000059, 0.0005345139999999998, 0.0005345000000000003, 0.0005345559999999985, 0.0005346249999999969, 0.000534652999999996, 0.0005345979999999972, 0.000534541999999999, 0.0005345559999999985, 0.0005345279999999994, 0.0005345000000000003, 0.0005345409999999995, 0.0005344860000000007, 0.0005346110000000043, 0.0005345420000000059, 0.0005345130000000003, 0.0005346250000000038, 0.0005344720000000011, 0.0005344450000000014, 0.0005345130000000003, 0.0005344719999999942, 0.0005344860000000007, 0.0005346249999999969, 0.0005346249999999969, 0.0005345980000000111, 0.0005346940000000022, 0.0005345559999999916, 0.0005345979999999972, 0.000534459000000001, 0.0005345560000000055, 0.0005345699999999981, 0.0005345979999999972, 0.0005346110000000043, 0.0005346120000000038, 0.0005345969999999978, 0.0005345280000000063, 0.0005345840000000046, 0.0005345969999999978, 0.0005346249999999969, 0.0005346249999999969, 0.0005346110000000043, 0.000534443999999995, 0.0005345699999999981, 0.0005345699999999981, 0.000534652999999996, 0.000534541999999999, 0.0005345699999999981, 0.0005345689999999986, 0.0005345840000000046]</msg>
<status status="PASS" starttime="20201029 09:35:26.064" endtime="20201029 09:35:26.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.052" endtime="20201029 09:35:26.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.516" endtime="20201029 09:35:26.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.485" endtime="20201029 09:35:26.072"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:26.078" endtime="20201029 09:35:26.100"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.074" endtime="20201029 09:35:26.101"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.124" endtime="20201029 09:35:26.202"></status>
</kw>
<msg timestamp="20201029 09:35:26.203" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:26.121" endtime="20201029 09:35:26.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.209" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:26.205" endtime="20201029 09:35:26.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.212" endtime="20201029 09:35:26.216"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.114" endtime="20201029 09:35:26.217"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.108" endtime="20201029 09:35:26.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.237" endtime="20201029 09:35:26.588"></status>
</kw>
<msg timestamp="20201029 09:35:26.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036666097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037220861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:26.233" endtime="20201029 09:35:26.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036666097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037220861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:26.598" endtime="20201029 09:35:26.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.615" endtime="20201029 09:35:26.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.226" endtime="20201029 09:35:26.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.220" endtime="20201029 09:35:26.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:26.632" level="INFO">${PHILIP_RES} = [{'diff': 0.0005547639999999993}, {'diff': 0.0005547639999999993}, {'diff': 0.000554723}, {'diff': 0.0005547919999999984}, {'diff': 0.0005546940000000014}, {'diff': 0.0005547499999999997}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:35:26.624" endtime="20201029 09:35:26.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:26.641" level="INFO">${RESULT} = {'diff': [0.0005547639999999993, 0.0005547639999999993, 0.000554723, 0.0005547919999999984, 0.0005546940000000014, 0.0005547499999999997, 0.0005547220000000005, 0.0005546670000000017, 0.00055473600000...</msg>
<status status="PASS" starttime="20201029 09:35:26.634" endtime="20201029 09:35:26.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.652" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:26.649" endtime="20201029 09:35:26.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.659" level="INFO">VALUE: [0.0005547639999999993, 0.0005547639999999993, 0.000554723, 0.0005547919999999984, 0.0005546940000000014, 0.0005547499999999997, 0.0005547220000000005, 0.0005546670000000017, 0.0005547360000000001, 0.0005548189999999981, 0.0005547499999999997, 0.0005547639999999993, 0.0005547909999999989, 0.0005547220000000005, 0.0005548610000000037, 0.0005548749999999963, 0.0005549580000000012, 0.0005548750000000033, 0.0005548749999999963, 0.0005548610000000037, 0.000554917000000002, 0.0005548479999999967, 0.0005549029999999955, 0.0005549580000000082, 0.0005549579999999943, 0.0005549309999999946, 0.0005549309999999946, 0.0005548890000000029, 0.0005549580000000082, 0.0005548890000000029, 0.0005548890000000029, 0.0005548330000000046, 0.0005549440000000017, 0.0005549029999999955, 0.0005550139999999926, 0.0005549299999999951, 0.0005548189999999981, 0.0005549860000000073, 0.0005548610000000037, 0.000554834000000004, 0.000554888999999989, 0.0005548469999999972, 0.0005548339999999902, 0.0005548890000000029, 0.0005549580000000082, 0.000554930000000009, 0.0005549999999999999, 0.0005549450000000011, 0.000554917000000002, 0.0005549310000000085]</msg>
<status status="PASS" starttime="20201029 09:35:26.654" endtime="20201029 09:35:26.660"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.643" endtime="20201029 09:35:26.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.103" endtime="20201029 09:35:26.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.073" endtime="20201029 09:35:26.664"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:26.670" endtime="20201029 09:35:26.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.666" endtime="20201029 09:35:26.694"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.715" endtime="20201029 09:35:26.795"></status>
</kw>
<msg timestamp="20201029 09:35:26.796" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:26.712" endtime="20201029 09:35:26.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.802" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:26.798" endtime="20201029 09:35:26.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.805" endtime="20201029 09:35:26.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.704" endtime="20201029 09:35:26.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.699" endtime="20201029 09:35:26.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.828" endtime="20201029 09:35:27.181"></status>
</kw>
<msg timestamp="20201029 09:35:27.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035214028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035788694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:26.825" endtime="20201029 09:35:27.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035214028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035788694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:27.190" endtime="20201029 09:35:27.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:27.208" endtime="20201029 09:35:27.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.818" endtime="20201029 09:35:27.213"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.813" endtime="20201029 09:35:27.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:27.224" level="INFO">${PHILIP_RES} = [{'diff': 0.0005746660000000015}, {'diff': 0.0005750970000000036}, {'diff': 0.0005751249999999958}, {'diff': 0.000575069999999997}, {'diff': 0.0005750560000000043}, {'diff': 0.0005750559999999974}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:27.217" endtime="20201029 09:35:27.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:27.239" level="INFO">${RESULT} = {'diff': [0.0005746660000000015, 0.0005750970000000036, 0.0005751249999999958, 0.000575069999999997, 0.0005750560000000043, 0.0005750559999999974, 0.0005749999999999991, 0.0005750560000000043, 0.00057...</msg>
<status status="PASS" starttime="20201029 09:35:27.226" endtime="20201029 09:35:27.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.250" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:27.247" endtime="20201029 09:35:27.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.255" level="INFO">VALUE: [0.0005746660000000015, 0.0005750970000000036, 0.0005751249999999958, 0.000575069999999997, 0.0005750560000000043, 0.0005750559999999974, 0.0005749999999999991, 0.0005750560000000043, 0.0005751109999999962, 0.0005750420000000048, 0.0005750689999999975, 0.0005750690000000044, 0.0005750969999999966, 0.0005750550000000049, 0.0005750970000000036, 0.0005751109999999962, 0.0005751530000000019, 0.0005751670000000014, 0.0005752229999999997, 0.0005751939999999942, 0.0005751390000000023, 0.0005751110000000031, 0.0005751249999999958, 0.0005751809999999941, 0.0005752359999999929, 0.0005751389999999884, 0.0005751529999999949, 0.0005751249999999958, 0.0005750840000000035, 0.0005751530000000088, 0.000575069999999997, 0.0005751669999999875, 0.00057509800000001, 0.0005751250000000097, 0.0005751250000000097, 0.0005750419999999978, 0.000575083000000004, 0.0005750979999999961, 0.0005750689999999975, 0.0005749999999999922, 0.0005749859999999996, 0.0005749999999999922, 0.0005750280000000052, 0.0005750140000000126, 0.0005750129999999992, 0.0005749859999999996, 0.000575054999999991, 0.0005750280000000052, 0.0005749589999999999, 0.0005751249999999958]</msg>
<status status="PASS" starttime="20201029 09:35:27.252" endtime="20201029 09:35:27.257"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.240" endtime="20201029 09:35:27.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.695" endtime="20201029 09:35:27.260"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.665" endtime="20201029 09:35:27.261"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:27.267" endtime="20201029 09:35:27.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.263" endtime="20201029 09:35:27.291"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:27.313" endtime="20201029 09:35:27.395"></status>
</kw>
<msg timestamp="20201029 09:35:27.396" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:27.309" endtime="20201029 09:35:27.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.402" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:27.398" endtime="20201029 09:35:27.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:27.405" endtime="20201029 09:35:27.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.302" endtime="20201029 09:35:27.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.296" endtime="20201029 09:35:27.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:27.428" endtime="20201029 09:35:27.780"></status>
</kw>
<msg timestamp="20201029 09:35:27.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035554972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036151097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:27.425" endtime="20201029 09:35:27.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035554972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036151097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:27.789" endtime="20201029 09:35:27.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:27.807" endtime="20201029 09:35:27.812"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.418" endtime="20201029 09:35:27.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.413" endtime="20201029 09:35:27.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:27.826" level="INFO">${PHILIP_RES} = [{'diff': 0.0005961250000000029}, {'diff': 0.0005964029999999954}, {'diff': 0.000596429999999995}, {'diff': 0.0005963889999999958}, {'diff': 0.0005963189999999979}, {'diff': 0.0005963610000000036}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:27.818" endtime="20201029 09:35:27.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:27.837" level="INFO">${RESULT} = {'diff': [0.0005961250000000029, 0.0005964029999999954, 0.000596429999999995, 0.0005963889999999958, 0.0005963189999999979, 0.0005963610000000036, 0.0005963889999999958, 0.0005963059999999978, 0.00059...</msg>
<status status="PASS" starttime="20201029 09:35:27.828" endtime="20201029 09:35:27.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.848" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:27.846" endtime="20201029 09:35:27.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.854" level="INFO">VALUE: [0.0005961250000000029, 0.0005964029999999954, 0.000596429999999995, 0.0005963889999999958, 0.0005963189999999979, 0.0005963610000000036, 0.0005963889999999958, 0.0005963059999999978, 0.0005962920000000052, 0.0005964310000000014, 0.0005963479999999965, 0.0005963340000000039, 0.0005964030000000023, 0.0005963890000000027, 0.0005963890000000027, 0.000596333999999997, 0.000596333999999997, 0.0005962499999999996, 0.0005962910000000057, 0.0005964309999999945, 0.0005962910000000127, 0.0005963469999999971, 0.0005964160000000024, 0.0005963199999999974, 0.0005961800000000017, 0.0005963469999999971, 0.0005964160000000024, 0.0005963749999999962, 0.0005963750000000101, 0.0005962919999999983, 0.0005963890000000027, 0.0005963890000000027, 0.0005963189999999979, 0.0005963880000000032, 0.0005963890000000027, 0.0005964859999999933, 0.0005964029999999954, 0.0005964030000000092, 0.0005964170000000019, 0.0005965140000000063, 0.0005965700000000046, 0.0005965269999999995, 0.0005965420000000055, 0.0005964999999999998, 0.0005964440000000015, 0.000596429999999995, 0.0005964869999999928, 0.0005964720000000007, 0.000596429999999995, 0.0005964719999999868]</msg>
<status status="PASS" starttime="20201029 09:35:27.851" endtime="20201029 09:35:27.855"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.839" endtime="20201029 09:35:27.857"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.292" endtime="20201029 09:35:27.858"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.262" endtime="20201029 09:35:27.859"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:27.865" endtime="20201029 09:35:27.886"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.861" endtime="20201029 09:35:27.888"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:27.910" endtime="20201029 09:35:27.995"></status>
</kw>
<msg timestamp="20201029 09:35:27.996" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:27.906" endtime="20201029 09:35:27.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:28.002" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:27.998" endtime="20201029 09:35:28.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:28.005" endtime="20201029 09:35:28.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.899" endtime="20201029 09:35:28.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.894" endtime="20201029 09:35:28.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:28.029" endtime="20201029 09:35:28.381"></status>
</kw>
<msg timestamp="20201029 09:35:28.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035501903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036119139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:28.025" endtime="20201029 09:35:28.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:28.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035501903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036119139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:28.390" endtime="20201029 09:35:28.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:28.408" endtime="20201029 09:35:28.412"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:28.018" endtime="20201029 09:35:28.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:28.013" endtime="20201029 09:35:28.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:28.424" level="INFO">${PHILIP_RES} = [{'diff': 0.0006172360000000002}, {'diff': 0.0006177779999999994}, {'diff': 0.0006177230000000006}, {'diff': 0.0006176659999999959}, {'diff': 0.000617694000000002}, {'diff': 0.0006176519999999963}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:28.417" endtime="20201029 09:35:28.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:28.433" level="INFO">${RESULT} = {'diff': [0.0006172360000000002, 0.0006177779999999994, 0.0006177230000000006, 0.0006176659999999959, 0.000617694000000002, 0.0006176519999999963, 0.0006176530000000027, 0.0006176530000000027, 0.00061...</msg>
<status status="PASS" starttime="20201029 09:35:28.426" endtime="20201029 09:35:28.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:28.444" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:28.442" endtime="20201029 09:35:28.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:28.450" level="INFO">VALUE: [0.0006172360000000002, 0.0006177779999999994, 0.0006177230000000006, 0.0006176659999999959, 0.000617694000000002, 0.0006176519999999963, 0.0006176530000000027, 0.0006176530000000027, 0.0006177220000000011, 0.0006176670000000023, 0.0006177639999999998, 0.0006178339999999977, 0.0006176670000000023, 0.0006176799999999955, 0.0006176530000000027, 0.0006176810000000019, 0.0006175980000000039, 0.0006176669999999954, 0.0006176660000000028, 0.0006176809999999949, 0.0006176670000000023, 0.000617694000000002, 0.000617791999999992, 0.0006177500000000002, 0.0006177640000000068, 0.0006176379999999898, 0.0006177500000000002, 0.0006176519999999963, 0.000617804999999999, 0.0006177779999999994, 0.0006177639999999929, 0.0006176809999999949, 0.0006178609999999973, 0.0006177500000000002, 0.0006177080000000085, 0.0006177219999999872, 0.0006176800000000093, 0.0006176809999999949, 0.000617694000000002, 0.0006176529999999958, 0.0006176809999999949, 0.000617582999999991, 0.0006175279999999922, 0.0006176249999999966, 0.0006175970000000114, 0.0006176530000000097, 0.0006176109999999901, 0.0006175689999999984, 0.0006176250000000105, 0.0006176670000000023]</msg>
<status status="PASS" starttime="20201029 09:35:28.446" endtime="20201029 09:35:28.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:28.435" endtime="20201029 09:35:28.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.889" endtime="20201029 09:35:28.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.859" endtime="20201029 09:35:28.455"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:28.461" endtime="20201029 09:35:28.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:28.457" endtime="20201029 09:35:28.484"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:28.506" endtime="20201029 09:35:28.594"></status>
</kw>
<msg timestamp="20201029 09:35:28.595" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:28.503" endtime="20201029 09:35:28.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:28.602" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:28.598" endtime="20201029 09:35:28.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:28.605" endtime="20201029 09:35:28.608"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:28.495" endtime="20201029 09:35:28.610"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:28.490" endtime="20201029 09:35:28.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:28.628" endtime="20201029 09:35:28.980"></status>
</kw>
<msg timestamp="20201029 09:35:28.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036857083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037495653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:28.625" endtime="20201029 09:35:28.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:29.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036857083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037495653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:28.989" endtime="20201029 09:35:29.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:29.007" endtime="20201029 09:35:29.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:28.618" endtime="20201029 09:35:29.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:28.613" endtime="20201029 09:35:29.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:29.023" level="INFO">${PHILIP_RES} = [{'diff': 0.000638569999999998}, {'diff': 0.0006389719999999946}, {'diff': 0.0006389720000000015}, {'diff': 0.0006389159999999963}, {'diff': 0.0006389310000000023}, {'diff': 0.0006388330000000053}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:29.016" endtime="20201029 09:35:29.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:29.033" level="INFO">${RESULT} = {'diff': [0.000638569999999998, 0.0006389719999999946, 0.0006389720000000015, 0.0006389159999999963, 0.0006389310000000023, 0.0006388330000000053, 0.0006389720000000015, 0.0006389720000000015, 0.00063...</msg>
<status status="PASS" starttime="20201029 09:35:29.025" endtime="20201029 09:35:29.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:29.043" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:29.041" endtime="20201029 09:35:29.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:29.049" level="INFO">VALUE: [0.000638569999999998, 0.0006389719999999946, 0.0006389720000000015, 0.0006389159999999963, 0.0006389310000000023, 0.0006388330000000053, 0.0006389720000000015, 0.0006389720000000015, 0.0006389299999999959, 0.0006389440000000024, 0.0006389310000000023, 0.0006388609999999975, 0.0006389300000000028, 0.000638875000000004, 0.0006389170000000027, 0.0006387779999999996, 0.0006389310000000023, 0.0006388469999999979, 0.0006388610000000045, 0.0006388610000000045, 0.0006388330000000053, 0.0006389170000000027, 0.000638957999999995, 0.0006388890000000036, 0.0006388469999999979, 0.0006388469999999979, 0.0006389029999999962, 0.0006389029999999962, 0.0006388880000000041, 0.0006388330000000053, 0.0006389299999999959, 0.0006388610000000045, 0.0006389019999999968, 0.0006388890000000036, 0.000638957999999995, 0.0006388329999999914, 0.0006387779999999926, 0.0006388749999999971, 0.0006388469999999979, 0.0006388470000000118, 0.0006388330000000053, 0.0006387080000000017, 0.0006387499999999935, 0.0006387780000000065, 0.0006388060000000056, 0.0006389440000000024, 0.0006388480000000113, 0.0006389719999999877, 0.000638875000000011, 0.0006388890000000036]</msg>
<status status="PASS" starttime="20201029 09:35:29.046" endtime="20201029 09:35:29.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.034" endtime="20201029 09:35:29.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:28.486" endtime="20201029 09:35:29.054"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:28.456" endtime="20201029 09:35:29.054"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:29.060" endtime="20201029 09:35:29.082"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.056" endtime="20201029 09:35:29.084"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:29.107" endtime="20201029 09:35:29.196"></status>
</kw>
<msg timestamp="20201029 09:35:29.198" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:29.103" endtime="20201029 09:35:29.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:29.206" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:29.201" endtime="20201029 09:35:29.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:29.209" endtime="20201029 09:35:29.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.096" endtime="20201029 09:35:29.216"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.090" endtime="20201029 09:35:29.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:29.238" endtime="20201029 09:35:29.591"></status>
</kw>
<msg timestamp="20201029 09:35:29.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036914833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037574042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:29.234" endtime="20201029 09:35:29.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:29.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036914833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037574042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:29.600" endtime="20201029 09:35:29.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:29.618" endtime="20201029 09:35:29.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.226" endtime="20201029 09:35:29.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.219" endtime="20201029 09:35:29.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:29.634" level="INFO">${PHILIP_RES} = [{'diff': 0.0006592090000000009}, {'diff': 0.0006602500000000011}, {'diff': 0.0006602359999999946}, {'diff': 0.0006603049999999999}, {'diff': 0.0006602919999999998}, {'diff': 0.0006602630000000012}, {...</msg>
<status status="PASS" starttime="20201029 09:35:29.626" endtime="20201029 09:35:29.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:29.643" level="INFO">${RESULT} = {'diff': [0.0006592090000000009, 0.0006602500000000011, 0.0006602359999999946, 0.0006603049999999999, 0.0006602919999999998, 0.0006602630000000012, 0.0006602780000000003, 0.0006602360000000015, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:35:29.636" endtime="20201029 09:35:29.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:29.654" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:29.652" endtime="20201029 09:35:29.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:29.661" level="INFO">VALUE: [0.0006592090000000009, 0.0006602500000000011, 0.0006602359999999946, 0.0006603049999999999, 0.0006602919999999998, 0.0006602630000000012, 0.0006602780000000003, 0.0006602360000000015, 0.0006601530000000036, 0.0006601939999999959, 0.000660431000000003, 0.0006601940000000028, 0.0006602780000000003, 0.0006602500000000011, 0.0006602780000000003, 0.0006603059999999994, 0.0006602359999999946, 0.0006603329999999991, 0.0006602909999999934, 0.0006602500000000011, 0.0006603049999999999, 0.0006603189999999926, 0.0006603200000000059, 0.0006603059999999994, 0.0006602089999999949, 0.0006603470000000056, 0.0006602359999999946, 0.000660222000000002, 0.0006602499999999872, 0.0006601799999999963, 0.0006601940000000028, 0.0006602359999999946, 0.0006602230000000014, 0.0006602500000000011, 0.0006601660000000037, 0.0006602500000000011, 0.0006601810000000097, 0.0006601940000000028, 0.0006602920000000068, 0.0006603469999999917, 0.0006603329999999991, 0.0006603329999999991, 0.0006604019999999905, 0.0006601529999999967, 0.0006601529999999967, 0.0006600969999999984, 0.0006600419999999996, 0.0006599440000000095, 0.0006599860000000013, 0.000660110999999991]</msg>
<status status="PASS" starttime="20201029 09:35:29.657" endtime="20201029 09:35:29.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.645" endtime="20201029 09:35:29.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.085" endtime="20201029 09:35:29.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.055" endtime="20201029 09:35:29.666"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:29.672" endtime="20201029 09:35:29.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.668" endtime="20201029 09:35:29.696"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:29.717" endtime="20201029 09:35:29.809"></status>
</kw>
<msg timestamp="20201029 09:35:29.810" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:29.714" endtime="20201029 09:35:29.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:29.816" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:29.812" endtime="20201029 09:35:29.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:29.819" endtime="20201029 09:35:29.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.707" endtime="20201029 09:35:29.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.701" endtime="20201029 09:35:29.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:29.843" endtime="20201029 09:35:30.195"></status>
</kw>
<msg timestamp="20201029 09:35:30.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035327083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036008472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:29.839" endtime="20201029 09:35:30.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:30.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035327083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036008472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:30.205" endtime="20201029 09:35:30.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:30.222" endtime="20201029 09:35:30.226"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.832" endtime="20201029 09:35:30.228"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.827" endtime="20201029 09:35:30.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:30.239" level="INFO">${PHILIP_RES} = [{'diff': 0.0006813889999999975}, {'diff': 0.0006822780000000014}, {'diff': 0.0006823050000000011}, {'diff': 0.0006823190000000007}, {'diff': 0.0006823330000000002}, {'diff': 0.0006823469999999998}, {...</msg>
<status status="PASS" starttime="20201029 09:35:30.231" endtime="20201029 09:35:30.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:30.249" level="INFO">${RESULT} = {'diff': [0.0006813889999999975, 0.0006822780000000014, 0.0006823050000000011, 0.0006823190000000007, 0.0006823330000000002, 0.0006823469999999998, 0.0006823889999999985, 0.0006824310000000042, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:35:30.241" endtime="20201029 09:35:30.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:30.260" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:30.258" endtime="20201029 09:35:30.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:30.266" level="INFO">VALUE: [0.0006813889999999975, 0.0006822780000000014, 0.0006823050000000011, 0.0006823190000000007, 0.0006823330000000002, 0.0006823469999999998, 0.0006823889999999985, 0.0006824310000000042, 0.0006823189999999937, 0.0006823330000000002, 0.0006824159999999982, 0.000682292000000001, 0.0006824169999999977, 0.0006824299999999978, 0.0006823330000000002, 0.0006824870000000025, 0.0006824159999999982, 0.0006824170000000046, 0.000682403000000012, 0.0006823190000000007, 0.0006823889999999916, 0.0006823890000000055, 0.0006823469999999998, 0.0006824029999999981, 0.0006824029999999981, 0.000682374999999999, 0.0006824029999999981, 0.0006824309999999972, 0.0006823610000000063, 0.0006823619999999919, 0.0006824299999999978, 0.0006824589999999964, 0.0006824029999999981, 0.000682485999999996, 0.0006825000000000025, 0.0006824720000000034, 0.000682555999999987, 0.0006825279999999878, 0.0006824719999999895, 0.0006824719999999895, 0.0006826250000000061, 0.0006825830000000005, 0.0006823469999999998, 0.0006823609999999924, 0.0006824309999999972, 0.0006825000000000025, 0.0006822500000000092, 0.0006822640000000019, 0.0006822780000000084, 0.0006821669999999974]</msg>
<status status="PASS" starttime="20201029 09:35:30.263" endtime="20201029 09:35:30.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.251" endtime="20201029 09:35:30.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.697" endtime="20201029 09:35:30.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:29.667" endtime="20201029 09:35:30.276"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:30.282" endtime="20201029 09:35:30.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.278" endtime="20201029 09:35:30.306"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:30.327" endtime="20201029 09:35:30.421"></status>
</kw>
<msg timestamp="20201029 09:35:30.422" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:30.324" endtime="20201029 09:35:30.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:30.428" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:30.424" endtime="20201029 09:35:30.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:30.431" endtime="20201029 09:35:30.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.316" endtime="20201029 09:35:30.436"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.311" endtime="20201029 09:35:30.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:30.454" endtime="20201029 09:35:30.807"></status>
</kw>
<msg timestamp="20201029 09:35:30.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035249694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035954083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:30.451" endtime="20201029 09:35:30.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:30.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035249694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035954083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:30.816" endtime="20201029 09:35:30.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:30.836" endtime="20201029 09:35:30.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.443" endtime="20201029 09:35:30.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.439" endtime="20201029 09:35:30.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:30.852" level="INFO">${PHILIP_RES} = [{'diff': 0.0007043889999999997}, {'diff': 0.0007046659999999996}, {'diff': 0.000704639}, {'diff': 0.0007045279999999959}, {'diff': 0.000704749999999997}, {'diff': 0.0007046380000000005}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 09:35:30.845" endtime="20201029 09:35:30.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:30.863" level="INFO">${RESULT} = {'diff': [0.0007043889999999997, 0.0007046659999999996, 0.000704639, 0.0007045279999999959, 0.000704749999999997, 0.0007046380000000005, 0.0007046809999999987, 0.0007046529999999995, 0.000704832999999...</msg>
<status status="PASS" starttime="20201029 09:35:30.854" endtime="20201029 09:35:30.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:30.874" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:30.872" endtime="20201029 09:35:30.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:30.880" level="INFO">VALUE: [0.0007043889999999997, 0.0007046659999999996, 0.000704639, 0.0007045279999999959, 0.000704749999999997, 0.0007046380000000005, 0.0007046809999999987, 0.0007046529999999995, 0.000704832999999995, 0.000704749999999997, 0.0007046669999999991, 0.0007047089999999978, 0.0007045420000000024, 0.000704667000000006, 0.0007046669999999991, 0.0007047360000000044, 0.0007045559999999951, 0.000704638999999993, 0.0007046659999999927, 0.0007047359999999975, 0.0007047359999999975, 0.000704667000000006, 0.0007046250000000004, 0.0007046809999999987, 0.0007047920000000096, 0.000704750000000004, 0.0007047639999999966, 0.0007048750000000076, 0.0007047639999999966, 0.0007048340000000014, 0.0007047919999999958, 0.0007048200000000088, 0.0007047079999999983, 0.0007046800000000131, 0.000704721999999991, 0.0007046949999999913, 0.0007048340000000014, 0.0007048480000000079, 0.000704832999999988, 0.0007047359999999975, 0.0007047639999999966, 0.0007048750000000076, 0.000704832999999988, 0.0007047359999999975, 0.0007047919999999958, 0.0007047639999999966, 0.0007047639999999966, 0.0007047360000000114, 0.0007047359999999975, 0.0007047779999999892]</msg>
<status status="PASS" starttime="20201029 09:35:30.877" endtime="20201029 09:35:30.881"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.865" endtime="20201029 09:35:30.883"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.307" endtime="20201029 09:35:30.884"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.276" endtime="20201029 09:35:30.885"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:30.891" endtime="20201029 09:35:30.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.887" endtime="20201029 09:35:30.914"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:30.936" endtime="20201029 09:35:31.032"></status>
</kw>
<msg timestamp="20201029 09:35:31.034" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:30.932" endtime="20201029 09:35:31.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:31.040" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:31.036" endtime="20201029 09:35:31.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:31.042" endtime="20201029 09:35:31.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.925" endtime="20201029 09:35:31.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.920" endtime="20201029 09:35:31.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:31.066" endtime="20201029 09:35:31.421"></status>
</kw>
<msg timestamp="20201029 09:35:31.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035158917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035885958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:31.063" endtime="20201029 09:35:31.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:31.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035158917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035885958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:31.431" endtime="20201029 09:35:31.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:31.449" endtime="20201029 09:35:31.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:31.055" endtime="20201029 09:35:31.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:31.050" endtime="20201029 09:35:31.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:31.466" level="INFO">${PHILIP_RES} = [{'diff': 0.0007270410000000047}, {'diff': 0.000727013999999998}, {'diff': 0.0007270840000000028}, {'diff': 0.000727096999999996}, {'diff': 0.0007270279999999976}, {'diff': 0.0007270970000000029}, {'d...</msg>
<status status="PASS" starttime="20201029 09:35:31.458" endtime="20201029 09:35:31.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:31.475" level="INFO">${RESULT} = {'diff': [0.0007270410000000047, 0.000727013999999998, 0.0007270840000000028, 0.000727096999999996, 0.0007270279999999976, 0.0007270970000000029, 0.000727013999999998, 0.0007271250000000021, 0.0007270...</msg>
<status status="PASS" starttime="20201029 09:35:31.468" endtime="20201029 09:35:31.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:31.486" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:31.483" endtime="20201029 09:35:31.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:31.491" level="INFO">VALUE: [0.0007270410000000047, 0.000727013999999998, 0.0007270840000000028, 0.000727096999999996, 0.0007270279999999976, 0.0007270970000000029, 0.000727013999999998, 0.0007271250000000021, 0.0007270549999999973, 0.0007270000000000054, 0.0007269859999999989, 0.0007269719999999993, 0.0007270410000000047, 0.0007269719999999993, 0.0007270689999999969, 0.0007270689999999969, 0.0007269449999999927, 0.0007271249999999951, 0.0007270000000000054, 0.0007270270000000051, 0.0007270140000000119, 0.0007270410000000116, 0.0007270689999999969, 0.0007269859999999989, 0.0007269860000000128, 0.000727013999999998, 0.0007270419999999972, 0.0007270280000000046, 0.0007270560000000037, 0.0007269589999999992, 0.0007269299999999868, 0.000727013999999998, 0.0007270560000000037, 0.0007270419999999972, 0.0007270000000000054, 0.0007270420000000111, 0.0007269719999999924, 0.0007269300000000006, 0.0007270419999999972, 0.000727013999999998, 0.0007270549999999903, 0.000727125000000009, 0.0007270000000000054, 0.0007269719999999924, 0.0007269869999999984, 0.0007269169999999936, 0.0007270130000000125, 0.0007269720000000063, 0.0007269720000000063, 0.0007270689999999969]</msg>
<status status="PASS" starttime="20201029 09:35:31.488" endtime="20201029 09:35:31.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:31.477" endtime="20201029 09:35:31.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.916" endtime="20201029 09:35:31.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:30.886" endtime="20201029 09:35:31.496"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:31.502" endtime="20201029 09:35:31.524"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:31.498" endtime="20201029 09:35:31.526"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:31.547" endtime="20201029 09:35:31.648"></status>
</kw>
<msg timestamp="20201029 09:35:31.649" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:31.544" endtime="20201029 09:35:31.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:31.656" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:31.651" endtime="20201029 09:35:31.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:31.658" endtime="20201029 09:35:31.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:31.536" endtime="20201029 09:35:31.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:31.531" endtime="20201029 09:35:31.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:31.682" endtime="20201029 09:35:32.045"></status>
</kw>
<msg timestamp="20201029 09:35:32.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036933264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037681028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:31.678" endtime="20201029 09:35:32.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:32.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036933264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037681028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:32.053" endtime="20201029 09:35:32.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:32.071" endtime="20201029 09:35:32.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:31.671" endtime="20201029 09:35:32.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:31.666" endtime="20201029 09:35:32.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:32.087" level="INFO">${PHILIP_RES} = [{'diff': 0.000747763999999998}, {'diff': 0.0007492360000000003}, {'diff': 0.0007493190000000052}, {'diff': 0.0007493059999999982}, {'diff': 0.0007492360000000003}, {'diff': 0.0007494590000000009}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:32.079" endtime="20201029 09:35:32.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:32.095" level="INFO">${RESULT} = {'diff': [0.000747763999999998, 0.0007492360000000003, 0.0007493190000000052, 0.0007493059999999982, 0.0007492360000000003, 0.0007494590000000009, 0.0007493339999999973, 0.0007493329999999979, 0.00074...</msg>
<status status="PASS" starttime="20201029 09:35:32.089" endtime="20201029 09:35:32.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:32.106" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:32.104" endtime="20201029 09:35:32.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:32.111" level="INFO">VALUE: [0.000747763999999998, 0.0007492360000000003, 0.0007493190000000052, 0.0007493059999999982, 0.0007492360000000003, 0.0007494590000000009, 0.0007493339999999973, 0.0007493329999999979, 0.0007492639999999995, 0.0007493749999999966, 0.0007493610000000039, 0.0007493330000000048, 0.0007493329999999979, 0.0007493749999999966, 0.0007492639999999995, 0.0007492500000000069, 0.000749263, 0.0007492360000000003, 0.0007491389999999959, 0.0007491940000000086, 0.0007491949999999942, 0.0007491250000000033, 0.0007493049999999918, 0.0007491949999999942, 0.0007492360000000003, 0.0007491530000000024, 0.0007492080000000012, 0.0007490829999999976, 0.0007491810000000015, 0.0007491530000000024, 0.0007492500000000069, 0.0007492919999999986, 0.0007491389999999959, 0.0007491810000000015, 0.0007492360000000003, 0.000749195000000008, 0.0007492500000000069, 0.0007491940000000086, 0.0007491800000000021, 0.0007492360000000003, 0.0007490970000000041, 0.0007491810000000015, 0.000749166999999995, 0.0007492090000000007, 0.0007492919999999986, 0.0007492639999999995, 0.000749249999999993, 0.0007492919999999986, 0.000749249999999993, 0.0007493060000000051]</msg>
<status status="PASS" starttime="20201029 09:35:32.108" endtime="20201029 09:35:32.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.097" endtime="20201029 09:35:32.114"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:31.527" endtime="20201029 09:35:32.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:31.497" endtime="20201029 09:35:32.116"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:32.122" endtime="20201029 09:35:32.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.118" endtime="20201029 09:35:32.145"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:32.168" endtime="20201029 09:35:32.269"></status>
</kw>
<msg timestamp="20201029 09:35:32.270" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:32.164" endtime="20201029 09:35:32.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:32.276" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:32.272" endtime="20201029 09:35:32.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:32.278" endtime="20201029 09:35:32.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.157" endtime="20201029 09:35:32.284"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.152" endtime="20201029 09:35:32.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:32.302" endtime="20201029 09:35:32.652"></status>
</kw>
<msg timestamp="20201029 09:35:32.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036308458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037081, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:35:32.298" endtime="20201029 09:35:32.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:32.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036308458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037081, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:35:32.661" endtime="20201029 09:35:32.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:32.678" endtime="20201029 09:35:32.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.291" endtime="20201029 09:35:32.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.286" endtime="20201029 09:35:32.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:32.694" level="INFO">${PHILIP_RES} = [{'diff': 0.0007725420000000011}, {'diff': 0.0007724870000000023}, {'diff': 0.0007725839999999998}, {'diff': 0.0007725280000000015}, {'diff': 0.0007725979999999993}, {'diff': 0.0007724719999999963}, {...</msg>
<status status="PASS" starttime="20201029 09:35:32.687" endtime="20201029 09:35:32.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:32.703" level="INFO">${RESULT} = {'diff': [0.0007725420000000011, 0.0007724870000000023, 0.0007725839999999998, 0.0007725280000000015, 0.0007725979999999993, 0.0007724719999999963, 0.0007725550000000012, 0.0007725699999999933, 0.0007...</msg>
<status status="PASS" starttime="20201029 09:35:32.696" endtime="20201029 09:35:32.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:32.713" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:32.711" endtime="20201029 09:35:32.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:32.720" level="INFO">VALUE: [0.0007725420000000011, 0.0007724870000000023, 0.0007725839999999998, 0.0007725280000000015, 0.0007725979999999993, 0.0007724719999999963, 0.0007725550000000012, 0.0007725699999999933, 0.0007725560000000006, 0.0007726109999999994, 0.0007727230000000029, 0.0007726669999999977, 0.0007725700000000002, 0.0007725700000000002, 0.0007725560000000006, 0.000772624999999999, 0.0007725559999999937, 0.0007725969999999999, 0.0007726110000000064, 0.0007726660000000052, 0.0007726670000000047, 0.0007727219999999896, 0.0007726809999999973, 0.0007726390000000055, 0.0007726389999999916, 0.0007725690000000007, 0.0007724999999999954, 0.0007725560000000076, 0.0007725700000000002, 0.0007725140000000019, 0.000772624999999999, 0.0007725839999999928, 0.0007726809999999973, 0.0007726529999999981, 0.0007726939999999904, 0.0007726950000000038, 0.0007725969999999999, 0.0007727220000000035, 0.0007725700000000002, 0.0007726529999999981, 0.0007726950000000038, 0.0007727500000000026, 0.0007726529999999981, 0.0007726659999999913, 0.000772624999999999, 0.0007724860000000028, 0.0007725140000000019, 0.0007725410000000016, 0.0007725980000000132, 0.0007726519999999848]</msg>
<status status="PASS" starttime="20201029 09:35:32.716" endtime="20201029 09:35:32.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.705" endtime="20201029 09:35:32.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.146" endtime="20201029 09:35:32.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.117" endtime="20201029 09:35:32.725"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:32.731" endtime="20201029 09:35:32.753"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.727" endtime="20201029 09:35:32.754"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:32.775" endtime="20201029 09:35:32.878"></status>
</kw>
<msg timestamp="20201029 09:35:32.879" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:32.772" endtime="20201029 09:35:32.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:32.886" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:32.882" endtime="20201029 09:35:32.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:32.888" endtime="20201029 09:35:32.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.765" endtime="20201029 09:35:32.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.760" endtime="20201029 09:35:32.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:32.911" endtime="20201029 09:35:33.262"></status>
</kw>
<msg timestamp="20201029 09:35:33.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034335125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0351295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:32.908" endtime="20201029 09:35:33.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:33.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034335125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0351295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:33.271" endtime="20201029 09:35:33.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:33.288" endtime="20201029 09:35:33.292"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.901" endtime="20201029 09:35:33.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.896" endtime="20201029 09:35:33.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:33.304" level="INFO">${PHILIP_RES} = [{'diff': 0.0007943749999999999}, {'diff': 0.0007957919999999966}, {'diff': 0.000795971999999999}, {'diff': 0.0007959030000000006}, {'diff': 0.000795971999999999}, {'diff': 0.000796000000000005}, {'di...</msg>
<status status="PASS" starttime="20201029 09:35:33.296" endtime="20201029 09:35:33.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:33.318" level="INFO">${RESULT} = {'diff': [0.0007943749999999999, 0.0007957919999999966, 0.000795971999999999, 0.0007959030000000006, 0.000795971999999999, 0.000796000000000005, 0.0007960279999999972, 0.0007958620000000013, 0.0007959...</msg>
<status status="PASS" starttime="20201029 09:35:33.306" endtime="20201029 09:35:33.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:33.328" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:33.326" endtime="20201029 09:35:33.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:33.333" level="INFO">VALUE: [0.0007943749999999999, 0.0007957919999999966, 0.000795971999999999, 0.0007959030000000006, 0.000795971999999999, 0.000796000000000005, 0.0007960279999999972, 0.0007958620000000013, 0.0007959309999999997, 0.000795971999999999, 0.000795986999999998, 0.000795986999999998, 0.0007958190000000032, 0.0007958750000000014, 0.0007958880000000015, 0.0007958750000000014, 0.000796000000000005, 0.0007959859999999985, 0.0007959589999999989, 0.0007958199999999888, 0.0007958610000000088, 0.0007958609999999949, 0.0007959579999999994, 0.0007959030000000006, 0.0007958329999999958, 0.0007958749999999876, 0.000795971999999992, 0.0007959300000000002, 0.0007959159999999937, 0.0007959859999999985, 0.0007957640000000044, 0.0007959450000000062, 0.0007959159999999937, 0.0007958609999999949, 0.0007959309999999997, 0.0007959169999999932, 0.0007959439999999929, 0.000796069999999996, 0.0007958609999999949, 0.0007959999999999912, 0.0007958750000000014, 0.0007959589999999989, 0.0007959720000000059, 0.0007959030000000006, 0.0007958339999999953, 0.000795889000000008, 0.0007958190000000032, 0.0007958750000000014, 0.0007959999999999912, 0.0007958469999999884]</msg>
<status status="PASS" starttime="20201029 09:35:33.330" endtime="20201029 09:35:33.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:33.320" endtime="20201029 09:35:33.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.756" endtime="20201029 09:35:33.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:32.726" endtime="20201029 09:35:33.338"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:33.344" endtime="20201029 09:35:33.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:33.341" endtime="20201029 09:35:33.368"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:33.388" endtime="20201029 09:35:33.494"></status>
</kw>
<msg timestamp="20201029 09:35:33.495" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:33.385" endtime="20201029 09:35:33.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:33.501" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:33.497" endtime="20201029 09:35:33.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:33.503" endtime="20201029 09:35:33.507"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:33.378" endtime="20201029 09:35:33.508"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:33.373" endtime="20201029 09:35:33.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:33.526" endtime="20201029 09:35:33.870"></status>
</kw>
<msg timestamp="20201029 09:35:33.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035207292, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:35:33.523" endtime="20201029 09:35:33.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:33.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035207292, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:35:33.880" endtime="20201029 09:35:33.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:33.901" endtime="20201029 09:35:33.906"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:33.516" endtime="20201029 09:35:33.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:33.511" endtime="20201029 09:35:33.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:33.921" level="INFO">${PHILIP_RES} = [{'diff': 0.0008182919999999982}, {'diff': 0.0008189870000000002}, {'diff': 0.0008190279999999994}, {'diff': 0.0008190000000000003}, {'diff': 0.0008188889999999963}, {'diff': 0.0008189999999999933}, {...</msg>
<status status="PASS" starttime="20201029 09:35:33.912" endtime="20201029 09:35:33.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:33.939" level="INFO">${RESULT} = {'diff': [0.0008182919999999982, 0.0008189870000000002, 0.0008190279999999994, 0.0008190000000000003, 0.0008188889999999963, 0.0008189999999999933, 0.0008188749999999967, 0.0008190000000000003, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:35:33.924" endtime="20201029 09:35:33.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:33.952" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:33.949" endtime="20201029 09:35:33.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:33.958" level="INFO">VALUE: [0.0008182919999999982, 0.0008189870000000002, 0.0008190279999999994, 0.0008190000000000003, 0.0008188889999999963, 0.0008189999999999933, 0.0008188749999999967, 0.0008190000000000003, 0.0008189720000000011, 0.000819027, 0.0008188610000000041, 0.0008190279999999994, 0.0008189579999999946, 0.0008189310000000019, 0.0008187360000000005, 0.0008189299999999955, 0.0008187080000000013, 0.0008189029999999958, 0.0008187360000000005, 0.0008188050000000058, 0.0008188059999999914, 0.000818959000000008, 0.0008190140000000068, 0.000818930999999995, 0.0008187919999999987, 0.0008189160000000029, 0.0008188340000000044, 0.0008188750000000106, 0.0008189450000000015, 0.000818930999999995, 0.0008188330000000049, 0.0008187779999999922, 0.0008188749999999967, 0.0008188609999999902, 0.0008188330000000049, 0.000818944000000002, 0.0008188749999999967, 0.0008188610000000041, 0.0008189029999999958, 0.0008188050000000058, 0.0008188610000000041, 0.0008189310000000088, 0.0008189170000000023, 0.0008189450000000015, 0.0008188889999999893, 0.0008189019999999964, 0.0008188610000000041, 0.0008188189999999984, 0.0008189859999999938, 0.0008189580000000085]</msg>
<status status="PASS" starttime="20201029 09:35:33.955" endtime="20201029 09:35:33.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:33.941" endtime="20201029 09:35:33.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:33.369" endtime="20201029 09:35:33.963"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:33.339" endtime="20201029 09:35:33.963"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:33.969" endtime="20201029 09:35:33.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:33.965" endtime="20201029 09:35:33.995"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:34.024" endtime="20201029 09:35:34.135"></status>
</kw>
<msg timestamp="20201029 09:35:34.138" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:34.019" endtime="20201029 09:35:34.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:34.149" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:34.142" endtime="20201029 09:35:34.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:34.152" endtime="20201029 09:35:34.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:34.009" endtime="20201029 09:35:34.158"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:34.002" endtime="20201029 09:35:34.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:34.176" endtime="20201029 09:35:34.535"></status>
</kw>
<msg timestamp="20201029 09:35:34.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045678597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046519181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:34.173" endtime="20201029 09:35:34.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:34.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045678597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046519181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:34.544" endtime="20201029 09:35:34.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:34.562" endtime="20201029 09:35:34.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:34.166" endtime="20201029 09:35:34.567"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:34.161" endtime="20201029 09:35:34.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:34.578" level="INFO">${PHILIP_RES} = [{'diff': 0.0008405839999999984}, {'diff': 0.0008422090000000035}, {'diff': 0.0008421529999999983}, {'diff': 0.0008421810000000043}, {'diff': 0.0008421659999999984}, {'diff': 0.0008422079999999971}, {...</msg>
<status status="PASS" starttime="20201029 09:35:34.571" endtime="20201029 09:35:34.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:34.587" level="INFO">${RESULT} = {'diff': [0.0008405839999999984, 0.0008422090000000035, 0.0008421529999999983, 0.0008421810000000043, 0.0008421659999999984, 0.0008422079999999971, 0.0008422640000000023, 0.0008422219999999966, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:35:34.580" endtime="20201029 09:35:34.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:34.598" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:34.596" endtime="20201029 09:35:34.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:34.603" level="INFO">VALUE: [0.0008405839999999984, 0.0008422090000000035, 0.0008421529999999983, 0.0008421810000000043, 0.0008421659999999984, 0.0008422079999999971, 0.0008422640000000023, 0.0008422219999999966, 0.0008422219999999966, 0.0008420829999999935, 0.0008420829999999935, 0.0008421109999999926, 0.0008421810000000113, 0.0008421670000000048, 0.0008421249999999991, 0.0008420829999999935, 0.0008420700000000003, 0.0008421249999999991, 0.0008421809999999974, 0.0008420700000000003, 0.0008422770000000024, 0.0008419870000000024, 0.0008422220000000036, 0.0008422360000000101, 0.0008423609999999998, 0.0008422639999999953, 0.0008423330000000007, 0.000842277999999988, 0.0008421670000000048, 0.0008421659999999914, 0.0008422079999999971, 0.0008420280000000085, 0.0008422220000000036, 0.000842306000000001, 0.0008422360000000101, 0.0008423330000000007, 0.0008422920000000084, 0.0008423050000000015, 0.0008422910000000089, 0.0008422780000000019, 0.0008423060000000149, 0.0008424860000000034, 0.0008422780000000019, 0.0008422220000000036, 0.0008422220000000036, 0.0008422359999999962, 0.0008422500000000166, 0.0008423050000000154, 0.0008422780000000019, 0.0008421390000000195]</msg>
<status status="PASS" starttime="20201029 09:35:34.600" endtime="20201029 09:35:34.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:34.589" endtime="20201029 09:35:34.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:33.996" endtime="20201029 09:35:34.608"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:33.964" endtime="20201029 09:35:34.608"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:34.615" endtime="20201029 09:35:34.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:34.611" endtime="20201029 09:35:34.638"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:34.660" endtime="20201029 09:35:34.772"></status>
</kw>
<msg timestamp="20201029 09:35:34.774" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:34.656" endtime="20201029 09:35:34.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:34.780" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:34.776" endtime="20201029 09:35:34.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:34.782" endtime="20201029 09:35:34.786"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:34.649" endtime="20201029 09:35:34.788"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:34.643" endtime="20201029 09:35:34.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:34.806" endtime="20201029 09:35:35.153"></status>
</kw>
<msg timestamp="20201029 09:35:35.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036984042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037849153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:34.803" endtime="20201029 09:35:35.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:35.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036984042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037849153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:35.162" endtime="20201029 09:35:35.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:35.180" endtime="20201029 09:35:35.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:34.796" endtime="20201029 09:35:35.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:34.791" endtime="20201029 09:35:35.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:35.199" level="INFO">${PHILIP_RES} = [{'diff': 0.0008651110000000017}, {'diff': 0.0008666670000000015}, {'diff': 0.0008665559999999975}, {'diff': 0.0008665269999999989}, {'diff': 0.0008665829999999972}, {'diff': 0.0008665839999999966}, {...</msg>
<status status="PASS" starttime="20201029 09:35:35.190" endtime="20201029 09:35:35.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:35.208" level="INFO">${RESULT} = {'diff': [0.0008651110000000017, 0.0008666670000000015, 0.0008665559999999975, 0.0008665269999999989, 0.0008665829999999972, 0.0008665839999999966, 0.0008665559999999975, 0.000866653000000002, 0.00086...</msg>
<status status="PASS" starttime="20201029 09:35:35.201" endtime="20201029 09:35:35.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:35.218" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:35.216" endtime="20201029 09:35:35.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:35.224" level="INFO">VALUE: [0.0008651110000000017, 0.0008666670000000015, 0.0008665559999999975, 0.0008665269999999989, 0.0008665829999999972, 0.0008665839999999966, 0.0008665559999999975, 0.000866653000000002, 0.0008665969999999967, 0.0008665139999999988, 0.0008666109999999963, 0.0008666810000000011, 0.0008666949999999937, 0.0008665969999999967, 0.0008665409999999985, 0.0008664160000000087, 0.0008664859999999996, 0.0008665409999999985, 0.0008665419999999979, 0.0008665699999999971, 0.0008665279999999914, 0.0008665549999999911, 0.0008664580000000005, 0.0008665830000000041, 0.0008665270000000058, 0.0008665560000000044, 0.000866666000000002, 0.0008666110000000032, 0.0008666249999999959, 0.0008665560000000044, 0.0008667079999999938, 0.0008665969999999967, 0.0008666670000000015, 0.0008667769999999991, 0.0008668060000000116, 0.0008666670000000015, 0.0008665419999999979, 0.0008665409999999985, 0.0008665689999999976, 0.000866652999999995, 0.000866652999999995, 0.0008665689999999976, 0.0008668200000000043, 0.0008666669999999876, 0.0008666390000000024, 0.00086650000000002, 0.0008666940000000012, 0.0008666519999999955, 0.0008665830000000041, 0.0008666530000000228]</msg>
<status status="PASS" starttime="20201029 09:35:35.221" endtime="20201029 09:35:35.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.210" endtime="20201029 09:35:35.227"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:34.639" endtime="20201029 09:35:35.228"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:34.609" endtime="20201029 09:35:35.229"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:35.234" endtime="20201029 09:35:35.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.231" endtime="20201029 09:35:35.258"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:35.280" endtime="20201029 09:35:35.393"></status>
</kw>
<msg timestamp="20201029 09:35:35.394" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:35.277" endtime="20201029 09:35:35.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:35.400" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:35.396" endtime="20201029 09:35:35.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:35.402" endtime="20201029 09:35:35.406"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.270" endtime="20201029 09:35:35.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.264" endtime="20201029 09:35:35.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:35.425" endtime="20201029 09:35:35.764"></status>
</kw>
<msg timestamp="20201029 09:35:35.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035823792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036713417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:35.422" endtime="20201029 09:35:35.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:35.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035823792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036713417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:35.773" endtime="20201029 09:35:35.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:35.790" endtime="20201029 09:35:35.794"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.415" endtime="20201029 09:35:35.796"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.410" endtime="20201029 09:35:35.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:35.806" level="INFO">${PHILIP_RES} = [{'diff': 0.0008896249999999981}, {'diff': 0.0008910409999999952}, {'diff': 0.0008910140000000025}, {'diff': 0.0008910419999999947}, {'diff': 0.0008910140000000025}, {'diff': 0.0008910830000000008}, {...</msg>
<status status="PASS" starttime="20201029 09:35:35.799" endtime="20201029 09:35:35.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:35.815" level="INFO">${RESULT} = {'diff': [0.0008896249999999981, 0.0008910409999999952, 0.0008910140000000025, 0.0008910419999999947, 0.0008910140000000025, 0.0008910830000000008, 0.0008909589999999967, 0.0008909030000000054, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:35:35.808" endtime="20201029 09:35:35.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:35.825" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:35.823" endtime="20201029 09:35:35.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:35.832" level="INFO">VALUE: [0.0008896249999999981, 0.0008910409999999952, 0.0008910140000000025, 0.0008910419999999947, 0.0008910140000000025, 0.0008910830000000008, 0.0008909589999999967, 0.0008909030000000054, 0.0008909729999999963, 0.0008910000000000029, 0.0008909859999999964, 0.0008910140000000025, 0.0008910550000000017, 0.0008910840000000003, 0.0008910560000000012, 0.000891028000000002, 0.0008910419999999947, 0.000891028000000002, 0.000891111, 0.000891028000000002, 0.000891097999999993, 0.0008910000000000029, 0.0008909169999999911, 0.0008909309999999976, 0.0008910000000000029, 0.0008910139999999955, 0.0008910969999999935, 0.0008910830000000008, 0.000891111, 0.0008910279999999882, 0.0008909440000000046, 0.0008909029999999984, 0.0008911939999999979, 0.0008910550000000017, 0.0008909589999999967, 0.0008909450000000041, 0.0008909309999999976, 0.0008909440000000046, 0.0008908330000000075, 0.000890917000000005, 0.0008909450000000041, 0.0008909450000000041, 0.000890901999999999, 0.0008909170000000188, 0.0008908190000000149, 0.0008909029999999984, 0.0008909579999999973, 0.0008908890000000058, 0.0008909719999999899, 0.0008910139999999955]</msg>
<status status="PASS" starttime="20201029 09:35:35.828" endtime="20201029 09:35:35.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.817" endtime="20201029 09:35:35.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.259" endtime="20201029 09:35:35.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.230" endtime="20201029 09:35:35.842"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:35.848" endtime="20201029 09:35:35.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.844" endtime="20201029 09:35:35.871"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:35.892" endtime="20201029 09:35:36.007"></status>
</kw>
<msg timestamp="20201029 09:35:36.008" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:35.889" endtime="20201029 09:35:36.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:36.014" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:36.010" endtime="20201029 09:35:36.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:36.016" endtime="20201029 09:35:36.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.882" endtime="20201029 09:35:36.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.876" endtime="20201029 09:35:36.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:36.040" endtime="20201029 09:35:36.377"></status>
</kw>
<msg timestamp="20201029 09:35:36.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033856889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034770458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:36.036" endtime="20201029 09:35:36.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:36.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033856889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034770458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:36.386" endtime="20201029 09:35:36.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:36.404" endtime="20201029 09:35:36.407"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:36.029" endtime="20201029 09:35:36.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:36.025" endtime="20201029 09:35:36.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:36.419" level="INFO">${PHILIP_RES} = [{'diff': 0.000913568999999996}, {'diff': 0.0009151670000000015}, {'diff': 0.0009151390000000023}, {'diff': 0.0009151670000000015}, {'diff': 0.0009151390000000023}, {'diff': 0.0009151110000000032}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:36.412" endtime="20201029 09:35:36.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:36.430" level="INFO">${RESULT} = {'diff': [0.000913568999999996, 0.0009151670000000015, 0.0009151390000000023, 0.0009151670000000015, 0.0009151390000000023, 0.0009151110000000032, 0.0009151940000000011, 0.0009151669999999945, 0.00091...</msg>
<status status="PASS" starttime="20201029 09:35:36.422" endtime="20201029 09:35:36.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:36.440" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:36.438" endtime="20201029 09:35:36.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:36.445" level="INFO">VALUE: [0.000913568999999996, 0.0009151670000000015, 0.0009151390000000023, 0.0009151670000000015, 0.0009151390000000023, 0.0009151110000000032, 0.0009151940000000011, 0.0009151669999999945, 0.0009149310000000008, 0.0009151670000000015, 0.0009150969999999967, 0.0009151800000000015, 0.0009151950000000006, 0.000915166000000002, 0.0009151670000000084, 0.0009152219999999933, 0.0009151669999999945, 0.0009152370000000132, 0.0009151530000000019, 0.0009150279999999983, 0.0009151389999999954, 0.0009151250000000027, 0.0009152080000000007, 0.0009152219999999933, 0.000915263999999999, 0.000915181000000001, 0.0009151250000000027, 0.0009151119999999957, 0.0009151389999999954, 0.0009150839999999966, 0.0009150559999999974, 0.0009150690000000045, 0.0009151670000000084, 0.000915181000000001, 0.0009149999999999991, 0.0009150690000000045, 0.0009149860000000065, 0.0009150269999999988, 0.0009150279999999983, 0.0009151669999999945, 0.0009150829999999971, 0.0009150829999999971, 0.0009151950000000075, 0.000915235999999986, 0.0009151389999999815, 0.000915111000000024, 0.0009151670000000223, 0.0009149999999999991, 0.0009150829999999832, 0.0009151109999999962]</msg>
<status status="PASS" starttime="20201029 09:35:36.442" endtime="20201029 09:35:36.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:36.432" endtime="20201029 09:35:36.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.872" endtime="20201029 09:35:36.450"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:35.843" endtime="20201029 09:35:36.450"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:36.456" endtime="20201029 09:35:36.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:36.452" endtime="20201029 09:35:36.479"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:36.500" endtime="20201029 09:35:36.617"></status>
</kw>
<msg timestamp="20201029 09:35:36.618" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:36.496" endtime="20201029 09:35:36.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:36.625" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:36.621" endtime="20201029 09:35:36.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:36.627" endtime="20201029 09:35:36.631"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:36.489" endtime="20201029 09:35:36.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:36.484" endtime="20201029 09:35:36.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:36.650" endtime="20201029 09:35:36.989"></status>
</kw>
<msg timestamp="20201029 09:35:36.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033937944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034877181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:36.647" endtime="20201029 09:35:36.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:37.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033937944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034877181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:36.998" endtime="20201029 09:35:37.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:37.016" endtime="20201029 09:35:37.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:36.640" endtime="20201029 09:35:37.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:36.635" endtime="20201029 09:35:37.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:37.032" level="INFO">${PHILIP_RES} = [{'diff': 0.0009392370000000025}, {'diff': 0.0009391669999999977}, {'diff': 0.0009392780000000017}, {'diff': 0.0009393050000000014}, {'diff': 0.0009394449999999971}, {'diff': 0.0009392219999999965}, {...</msg>
<status status="PASS" starttime="20201029 09:35:37.024" endtime="20201029 09:35:37.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:37.042" level="INFO">${RESULT} = {'diff': [0.0009392370000000025, 0.0009391669999999977, 0.0009392780000000017, 0.0009393050000000014, 0.0009394449999999971, 0.0009392219999999965, 0.0009392370000000025, 0.0009392640000000022, 0.0009...</msg>
<status status="PASS" starttime="20201029 09:35:37.034" endtime="20201029 09:35:37.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:37.053" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:37.051" endtime="20201029 09:35:37.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:37.058" level="INFO">VALUE: [0.0009392370000000025, 0.0009391669999999977, 0.0009392780000000017, 0.0009393050000000014, 0.0009394449999999971, 0.0009392219999999965, 0.0009392370000000025, 0.0009392640000000022, 0.0009393060000000009, 0.0009393470000000001, 0.0009392500000000026, 0.0009392079999999969, 0.000939236000000003, 0.0009392079999999969, 0.0009391519999999987, 0.0009392629999999957, 0.0009392220000000034, 0.0009391109999999925, 0.0009391950000000038, 0.0009392220000000034, 0.0009392500000000026, 0.0009392080000000108, 0.0009391939999999904, 0.0009392359999999961, 0.0009393469999999932, 0.0009392770000000022, 0.0009393199999999935, 0.0009393609999999997, 0.0009393609999999997, 0.0009393330000000005, 0.0009392500000000026, 0.0009392089999999964, 0.0009391810000000111, 0.0009392919999999944, 0.00093923600000001, 0.0009393200000000074, 0.0009392639999999952, 0.0009392910000000088, 0.0009392629999999957, 0.0009392919999999944, 0.0009393190000000079, 0.0009393609999999997, 0.0009392910000000088, 0.0009392500000000026, 0.0009393329999999867, 0.0009393609999999997, 0.0009392779999999878, 0.0009392769999999884, 0.0009392780000000156, 0.0009391940000000043]</msg>
<status status="PASS" starttime="20201029 09:35:37.055" endtime="20201029 09:35:37.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:37.044" endtime="20201029 09:35:37.061"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:36.480" endtime="20201029 09:35:37.063"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:36.451" endtime="20201029 09:35:37.063"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.320" endtime="20201029 09:35:37.063"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:35:06.059" endtime="20201029 09:35:37.065" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:34:36.954" endtime="20201029 09:35:37.087"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:34:32.931" endtime="20201029 09:35:37.168"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_samr21-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
