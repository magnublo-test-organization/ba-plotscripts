<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201029 18:18:20.611" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.930" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:21.946" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:24.024" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:21.925" endtime="20201029 18:18:24.026"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.032" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:18:24.028" endtime="20201029 18:18:24.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.922" endtime="20201029 18:18:24.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:24.039" endtime="20201029 18:18:24.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.036" endtime="20201029 18:18:24.388"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.420" endtime="20201029 18:18:24.437"></status>
</kw>
<msg timestamp="20201029 18:18:24.439" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.416" endtime="20201029 18:18:24.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.445" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.441" endtime="20201029 18:18:24.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.452" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:24.447" endtime="20201029 18:18:24.452"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:24.410" endtime="20201029 18:18:24.454"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:24.403" endtime="20201029 18:18:24.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.401" endtime="20201029 18:18:24.457"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:24.464" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:24.463" endtime="20201029 18:18:24.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.458" endtime="20201029 18:18:24.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.399" endtime="20201029 18:18:24.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.397" endtime="20201029 18:18:24.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.468" endtime="20201029 18:18:24.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.393" endtime="20201029 18:18:24.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.475" endtime="20201029 18:18:24.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.390" endtime="20201029 18:18:24.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.919" endtime="20201029 18:18:24.480"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:24.495" endtime="20201029 18:18:24.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.491" endtime="20201029 18:18:24.518"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.553" endtime="20201029 18:18:24.571"></status>
</kw>
<msg timestamp="20201029 18:18:24.572" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.550" endtime="20201029 18:18:24.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.578" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.574" endtime="20201029 18:18:24.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.584" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:24.580" endtime="20201029 18:18:24.585"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:24.543" endtime="20201029 18:18:24.587"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:24.536" endtime="20201029 18:18:24.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.532" endtime="20201029 18:18:24.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:24.597" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:24.595" endtime="20201029 18:18:24.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.591" endtime="20201029 18:18:24.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.530" endtime="20201029 18:18:24.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.528" endtime="20201029 18:18:24.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.600" endtime="20201029 18:18:24.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.524" endtime="20201029 18:18:24.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.520" endtime="20201029 18:18:24.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.488" endtime="20201029 18:18:24.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.624" endtime="20201029 18:18:24.636"></status>
</kw>
<msg timestamp="20201029 18:18:24.637" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.621" endtime="20201029 18:18:24.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.643" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.639" endtime="20201029 18:18:24.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.645" endtime="20201029 18:18:24.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.614" endtime="20201029 18:18:24.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.609" endtime="20201029 18:18:24.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.662" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:18:24.659" endtime="20201029 18:18:24.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.666" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 18:18:24.664" endtime="20201029 18:18:24.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.653" endtime="20201029 18:18:24.668"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:24.482" endtime="20201029 18:18:24.670" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:18:20.912" endtime="20201029 18:18:24.676"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.809" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:24.824" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:26.865" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:24.805" endtime="20201029 18:18:26.867"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.872" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:18:26.869" endtime="20201029 18:18:26.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.803" endtime="20201029 18:18:26.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:26.879" endtime="20201029 18:18:27.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.876" endtime="20201029 18:18:27.229"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.258" endtime="20201029 18:18:27.273"></status>
</kw>
<msg timestamp="20201029 18:18:27.275" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.254" endtime="20201029 18:18:27.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.281" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.277" endtime="20201029 18:18:27.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.287" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:27.283" endtime="20201029 18:18:27.288"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:27.248" endtime="20201029 18:18:27.290"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:27.243" endtime="20201029 18:18:27.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.240" endtime="20201029 18:18:27.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:27.300" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:27.298" endtime="20201029 18:18:27.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.294" endtime="20201029 18:18:27.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.238" endtime="20201029 18:18:27.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.237" endtime="20201029 18:18:27.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.303" endtime="20201029 18:18:27.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.234" endtime="20201029 18:18:27.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.310" endtime="20201029 18:18:27.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.230" endtime="20201029 18:18:27.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.800" endtime="20201029 18:18:27.317"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.333" endtime="20201029 18:18:27.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.329" endtime="20201029 18:18:27.356"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.450" endtime="20201029 18:18:27.465"></status>
</kw>
<msg timestamp="20201029 18:18:27.466" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.446" endtime="20201029 18:18:27.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.473" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.469" endtime="20201029 18:18:27.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.480" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:27.476" endtime="20201029 18:18:27.481"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:27.439" endtime="20201029 18:18:27.482"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:27.372" endtime="20201029 18:18:27.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.370" endtime="20201029 18:18:27.485"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:27.492" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:27.491" endtime="20201029 18:18:27.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.486" endtime="20201029 18:18:27.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.368" endtime="20201029 18:18:27.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.366" endtime="20201029 18:18:27.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.496" endtime="20201029 18:18:27.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.362" endtime="20201029 18:18:27.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.358" endtime="20201029 18:18:27.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.326" endtime="20201029 18:18:27.503"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.525" endtime="20201029 18:18:27.535"></status>
</kw>
<msg timestamp="20201029 18:18:27.537" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.521" endtime="20201029 18:18:27.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.543" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.539" endtime="20201029 18:18:27.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.545" endtime="20201029 18:18:27.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.514" endtime="20201029 18:18:27.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.510" endtime="20201029 18:18:27.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.570" endtime="20201029 18:18:27.927"></status>
</kw>
<msg timestamp="20201029 18:18:27.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.182040417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.182056653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:27.566" endtime="20201029 18:18:27.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.182040417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.182056653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:27.937" endtime="20201029 18:18:27.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.955" endtime="20201029 18:18:27.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.558" endtime="20201029 18:18:27.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.553" endtime="20201029 18:18:27.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.972" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.73000000...</msg>
<status status="PASS" starttime="20201029 18:18:27.964" endtime="20201029 18:18:27.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:27.983" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07,...</msg>
<status status="PASS" starttime="20201029 18:18:27.975" endtime="20201029 18:18:27.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.993" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:27.991" endtime="20201029 18:18:27.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.998" level="INFO">VALUE: [0, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201029 18:18:27.995" endtime="20201029 18:18:27.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.985" endtime="20201029 18:18:28.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.506" endtime="20201029 18:18:28.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.505" endtime="20201029 18:18:28.003"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.024" endtime="20201029 18:18:28.035"></status>
</kw>
<msg timestamp="20201029 18:18:28.036" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.021" endtime="20201029 18:18:28.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.042" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.038" endtime="20201029 18:18:28.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.044" endtime="20201029 18:18:28.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.012" endtime="20201029 18:18:28.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.008" endtime="20201029 18:18:28.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.069" endtime="20201029 18:18:28.468"></status>
</kw>
<msg timestamp="20201029 18:18:28.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.182609153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.182609625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.064" endtime="20201029 18:18:28.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.182609153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.182609625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.480" endtime="20201029 18:18:28.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.502" endtime="20201029 18:18:28.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.057" endtime="20201029 18:18:28.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.052" endtime="20201029 18:18:28.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.520" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201029 18:18:28.511" endtime="20201029 18:18:28.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:28.532" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 18:18:28.522" endtime="20201029 18:18:28.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.543" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:28.541" endtime="20201029 18:18:28.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.550" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:28.546" endtime="20201029 18:18:28.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.535" endtime="20201029 18:18:28.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.005" endtime="20201029 18:18:28.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.004" endtime="20201029 18:18:28.554"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.575" endtime="20201029 18:18:28.586"></status>
</kw>
<msg timestamp="20201029 18:18:28.587" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.571" endtime="20201029 18:18:28.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.593" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.589" endtime="20201029 18:18:28.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.596" endtime="20201029 18:18:28.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.564" endtime="20201029 18:18:28.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.559" endtime="20201029 18:18:28.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.619" endtime="20201029 18:18:28.975"></status>
</kw>
<msg timestamp="20201029 18:18:28.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.671120347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.671120819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.616" endtime="20201029 18:18:28.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.671120347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.671120819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.986" endtime="20201029 18:18:29.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.009" endtime="20201029 18:18:29.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.608" endtime="20201029 18:18:29.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.604" endtime="20201029 18:18:29.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.027" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000008462695e-...</msg>
<status status="PASS" starttime="20201029 18:18:29.017" endtime="20201029 18:18:29.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:29.039" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07...</msg>
<status status="PASS" starttime="20201029 18:18:29.029" endtime="20201029 18:18:29.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.050" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:29.047" endtime="20201029 18:18:29.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.055" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:29.052" endtime="20201029 18:18:29.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.041" endtime="20201029 18:18:29.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.556" endtime="20201029 18:18:29.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.555" endtime="20201029 18:18:29.059"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.079" endtime="20201029 18:18:29.090"></status>
</kw>
<msg timestamp="20201029 18:18:29.091" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.076" endtime="20201029 18:18:29.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.097" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.094" endtime="20201029 18:18:29.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.100" endtime="20201029 18:18:29.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.069" endtime="20201029 18:18:29.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.064" endtime="20201029 18:18:29.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.123" endtime="20201029 18:18:29.473"></status>
</kw>
<msg timestamp="20201029 18:18:29.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.211890514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.211890986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.120" endtime="20201029 18:18:29.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.211890514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.211890986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.484" endtime="20201029 18:18:29.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.506" endtime="20201029 18:18:29.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.112" endtime="20201029 18:18:29.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.108" endtime="20201029 18:18:29.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.524" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 18:18:29.515" endtime="20201029 18:18:29.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:29.536" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 18:18:29.527" endtime="20201029 18:18:29.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.546" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:29.544" endtime="20201029 18:18:29.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.552" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:29.549" endtime="20201029 18:18:29.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.538" endtime="20201029 18:18:29.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.061" endtime="20201029 18:18:29.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.060" endtime="20201029 18:18:29.556"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.578" endtime="20201029 18:18:29.589"></status>
</kw>
<msg timestamp="20201029 18:18:29.590" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.575" endtime="20201029 18:18:29.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.596" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.592" endtime="20201029 18:18:29.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.598" endtime="20201029 18:18:29.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.566" endtime="20201029 18:18:29.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.562" endtime="20201029 18:18:29.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.622" endtime="20201029 18:18:29.980"></status>
</kw>
<msg timestamp="20201029 18:18:29.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.706495167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.706495639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.618" endtime="20201029 18:18:29.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.706495167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.706495639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.991" endtime="20201029 18:18:30.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.014" endtime="20201029 18:18:30.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.611" endtime="20201029 18:18:30.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.606" endtime="20201029 18:18:30.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.031" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 18:18:30.022" endtime="20201029 18:18:30.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:30.044" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:18:30.034" endtime="20201029 18:18:30.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.054" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:30.052" endtime="20201029 18:18:30.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.060" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07]</msg>
<status status="PASS" starttime="20201029 18:18:30.056" endtime="20201029 18:18:30.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.046" endtime="20201029 18:18:30.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.558" endtime="20201029 18:18:30.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.557" endtime="20201029 18:18:30.064"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.084" endtime="20201029 18:18:30.094"></status>
</kw>
<msg timestamp="20201029 18:18:30.096" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.080" endtime="20201029 18:18:30.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.102" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.098" endtime="20201029 18:18:30.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.104" endtime="20201029 18:18:30.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.073" endtime="20201029 18:18:30.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.069" endtime="20201029 18:18:30.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.127" endtime="20201029 18:18:30.498"></status>
</kw>
<msg timestamp="20201029 18:18:30.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.19429775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.194298222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:30.124" endtime="20201029 18:18:30.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.19429775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.194298222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:30.509" endtime="20201029 18:18:30.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.532" endtime="20201029 18:18:30.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.117" endtime="20201029 18:18:30.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.112" endtime="20201029 18:18:30.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.563" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:30.540" endtime="20201029 18:18:30.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:30.580" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:18:30.567" endtime="20201029 18:18:30.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.595" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:30.592" endtime="20201029 18:18:30.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.602" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:30.598" endtime="20201029 18:18:30.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.583" endtime="20201029 18:18:30.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.066" endtime="20201029 18:18:30.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.065" endtime="20201029 18:18:30.606"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.627" endtime="20201029 18:18:30.638"></status>
</kw>
<msg timestamp="20201029 18:18:30.639" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.623" endtime="20201029 18:18:30.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.645" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.641" endtime="20201029 18:18:30.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.647" endtime="20201029 18:18:30.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.616" endtime="20201029 18:18:30.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.611" endtime="20201029 18:18:30.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.671" endtime="20201029 18:18:31.114"></status>
</kw>
<msg timestamp="20201029 18:18:31.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.689871222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.689871694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.668" endtime="20201029 18:18:31.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.689871222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.689871694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.125" endtime="20201029 18:18:31.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.148" endtime="20201029 18:18:31.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.660" endtime="20201029 18:18:31.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.656" endtime="20201029 18:18:31.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.166" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 18:18:31.156" endtime="20201029 18:18:31.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:31.177" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:18:31.168" endtime="20201029 18:18:31.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.187" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:31.184" endtime="20201029 18:18:31.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.192" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:31.189" endtime="20201029 18:18:31.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.178" endtime="20201029 18:18:31.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.608" endtime="20201029 18:18:31.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.607" endtime="20201029 18:18:31.196"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.218" endtime="20201029 18:18:31.229"></status>
</kw>
<msg timestamp="20201029 18:18:31.230" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.213" endtime="20201029 18:18:31.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.236" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.232" endtime="20201029 18:18:31.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.238" endtime="20201029 18:18:31.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.206" endtime="20201029 18:18:31.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.202" endtime="20201029 18:18:31.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.261" endtime="20201029 18:18:31.627"></status>
</kw>
<msg timestamp="20201029 18:18:31.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.223044986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.223045458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.258" endtime="20201029 18:18:31.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.223044986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.223045458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.638" endtime="20201029 18:18:31.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.660" endtime="20201029 18:18:31.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.251" endtime="20201029 18:18:31.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.246" endtime="20201029 18:18:31.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.679" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 18:18:31.669" endtime="20201029 18:18:31.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:31.691" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:18:31.681" endtime="20201029 18:18:31.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.701" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:31.698" endtime="20201029 18:18:31.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.706" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:31.703" endtime="20201029 18:18:31.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.692" endtime="20201029 18:18:31.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.198" endtime="20201029 18:18:31.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.197" endtime="20201029 18:18:31.711"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.731" endtime="20201029 18:18:31.741"></status>
</kw>
<msg timestamp="20201029 18:18:31.743" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.727" endtime="20201029 18:18:31.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.749" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.745" endtime="20201029 18:18:31.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.751" endtime="20201029 18:18:31.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.720" endtime="20201029 18:18:31.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.716" endtime="20201029 18:18:31.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.774" endtime="20201029 18:18:32.147"></status>
</kw>
<msg timestamp="20201029 18:18:32.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.804372542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.804373014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.771" endtime="20201029 18:18:32.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.804372542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.804373014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.158" endtime="20201029 18:18:32.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.180" endtime="20201029 18:18:32.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.763" endtime="20201029 18:18:32.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.759" endtime="20201029 18:18:32.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.198" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:32.189" endtime="20201029 18:18:32.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:32.214" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:18:32.200" endtime="20201029 18:18:32.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.224" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:32.222" endtime="20201029 18:18:32.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.230" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:18:32.226" endtime="20201029 18:18:32.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.216" endtime="20201029 18:18:32.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.712" endtime="20201029 18:18:32.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.711" endtime="20201029 18:18:32.234"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.254" endtime="20201029 18:18:32.264"></status>
</kw>
<msg timestamp="20201029 18:18:32.266" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.250" endtime="20201029 18:18:32.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.272" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.268" endtime="20201029 18:18:32.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.274" endtime="20201029 18:18:32.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.243" endtime="20201029 18:18:32.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.239" endtime="20201029 18:18:32.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.298" endtime="20201029 18:18:32.675"></status>
</kw>
<msg timestamp="20201029 18:18:32.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.306970569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.306971042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.294" endtime="20201029 18:18:32.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.306970569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.306971042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.686" endtime="20201029 18:18:32.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.720" endtime="20201029 18:18:32.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.287" endtime="20201029 18:18:32.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.282" endtime="20201029 18:18:32.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.738" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:32.728" endtime="20201029 18:18:32.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:32.748" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:18:32.740" endtime="20201029 18:18:32.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.758" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:32.756" endtime="20201029 18:18:32.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.764" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:32.760" endtime="20201029 18:18:32.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.750" endtime="20201029 18:18:32.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.235" endtime="20201029 18:18:32.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.235" endtime="20201029 18:18:32.768"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.788" endtime="20201029 18:18:32.800"></status>
</kw>
<msg timestamp="20201029 18:18:32.801" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.785" endtime="20201029 18:18:32.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.807" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.804" endtime="20201029 18:18:32.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.810" endtime="20201029 18:18:32.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.778" endtime="20201029 18:18:32.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.773" endtime="20201029 18:18:32.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.833" endtime="20201029 18:18:33.206"></status>
</kw>
<msg timestamp="20201029 18:18:33.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.821874625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.821875097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.830" endtime="20201029 18:18:33.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.821874625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.821875097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.218" endtime="20201029 18:18:33.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.241" endtime="20201029 18:18:33.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.822" endtime="20201029 18:18:33.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.818" endtime="20201029 18:18:33.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.259" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 18:18:33.249" endtime="20201029 18:18:33.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:33.270" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:33.261" endtime="20201029 18:18:33.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.280" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:33.278" endtime="20201029 18:18:33.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.286" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:33.283" endtime="20201029 18:18:33.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.272" endtime="20201029 18:18:33.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.770" endtime="20201029 18:18:33.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.769" endtime="20201029 18:18:33.290"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.310" endtime="20201029 18:18:33.321"></status>
</kw>
<msg timestamp="20201029 18:18:33.322" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.307" endtime="20201029 18:18:33.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.328" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.324" endtime="20201029 18:18:33.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.331" endtime="20201029 18:18:33.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.300" endtime="20201029 18:18:33.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.295" endtime="20201029 18:18:33.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.356" endtime="20201029 18:18:33.720"></status>
</kw>
<msg timestamp="20201029 18:18:33.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.347689792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.347690264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.353" endtime="20201029 18:18:33.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.347689792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.347690264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.731" endtime="20201029 18:18:33.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.754" endtime="20201029 18:18:33.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.346" endtime="20201029 18:18:33.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.341" endtime="20201029 18:18:33.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.772" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:33.762" endtime="20201029 18:18:33.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:33.784" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:18:33.774" endtime="20201029 18:18:33.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.794" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:33.792" endtime="20201029 18:18:33.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.800" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:18:33.796" endtime="20201029 18:18:33.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.786" endtime="20201029 18:18:33.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.292" endtime="20201029 18:18:33.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.291" endtime="20201029 18:18:33.804"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.824" endtime="20201029 18:18:33.834"></status>
</kw>
<msg timestamp="20201029 18:18:33.836" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.820" endtime="20201029 18:18:33.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.842" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.838" endtime="20201029 18:18:33.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.844" endtime="20201029 18:18:33.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.813" endtime="20201029 18:18:33.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.809" endtime="20201029 18:18:33.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.867" endtime="20201029 18:18:34.228"></status>
</kw>
<msg timestamp="20201029 18:18:34.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.856824278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.85682475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:33.864" endtime="20201029 18:18:34.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.856824278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.85682475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:34.240" endtime="20201029 18:18:34.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.262" endtime="20201029 18:18:34.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.857" endtime="20201029 18:18:34.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.852" endtime="20201029 18:18:34.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.280" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:18:34.271" endtime="20201029 18:18:34.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:34.291" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 18:18:34.282" endtime="20201029 18:18:34.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.301" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:34.298" endtime="20201029 18:18:34.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.306" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:34.303" endtime="20201029 18:18:34.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.292" endtime="20201029 18:18:34.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.805" endtime="20201029 18:18:34.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.805" endtime="20201029 18:18:34.311"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.331" endtime="20201029 18:18:34.343"></status>
</kw>
<msg timestamp="20201029 18:18:34.344" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.327" endtime="20201029 18:18:34.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.350" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.346" endtime="20201029 18:18:34.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.353" endtime="20201029 18:18:34.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.320" endtime="20201029 18:18:34.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.316" endtime="20201029 18:18:34.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.376" endtime="20201029 18:18:34.746"></status>
</kw>
<msg timestamp="20201029 18:18:34.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.360166639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.360167111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.372" endtime="20201029 18:18:34.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.360166639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.360167111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.759" endtime="20201029 18:18:34.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.786" endtime="20201029 18:18:34.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.365" endtime="20201029 18:18:34.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.361" endtime="20201029 18:18:34.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.807" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 18:18:34.797" endtime="20201029 18:18:34.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:34.819" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 18:18:34.809" endtime="20201029 18:18:34.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.829" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:34.827" endtime="20201029 18:18:34.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.835" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:18:34.831" endtime="20201029 18:18:34.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.821" endtime="20201029 18:18:34.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.313" endtime="20201029 18:18:34.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.312" endtime="20201029 18:18:34.839"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.859" endtime="20201029 18:18:34.870"></status>
</kw>
<msg timestamp="20201029 18:18:34.871" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.856" endtime="20201029 18:18:34.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.877" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.873" endtime="20201029 18:18:34.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.879" endtime="20201029 18:18:34.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.848" endtime="20201029 18:18:34.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.844" endtime="20201029 18:18:34.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.902" endtime="20201029 18:18:35.277"></status>
</kw>
<msg timestamp="20201029 18:18:35.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.857888208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.857888681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.899" endtime="20201029 18:18:35.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.857888208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.857888681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.289" endtime="20201029 18:18:35.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.312" endtime="20201029 18:18:35.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.892" endtime="20201029 18:18:35.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.887" endtime="20201029 18:18:35.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.330" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 18:18:35.320" endtime="20201029 18:18:35.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:35.342" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:18:35.332" endtime="20201029 18:18:35.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.352" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:35.350" endtime="20201029 18:18:35.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.357" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:18:35.354" endtime="20201029 18:18:35.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.344" endtime="20201029 18:18:35.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.841" endtime="20201029 18:18:35.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.840" endtime="20201029 18:18:35.362"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.382" endtime="20201029 18:18:35.393"></status>
</kw>
<msg timestamp="20201029 18:18:35.394" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.378" endtime="20201029 18:18:35.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.400" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.396" endtime="20201029 18:18:35.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.402" endtime="20201029 18:18:35.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.371" endtime="20201029 18:18:35.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.367" endtime="20201029 18:18:35.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.425" endtime="20201029 18:18:35.799"></status>
</kw>
<msg timestamp="20201029 18:18:35.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.373581431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.373581903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.422" endtime="20201029 18:18:35.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.373581431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.373581903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.810" endtime="20201029 18:18:35.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.833" endtime="20201029 18:18:35.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.415" endtime="20201029 18:18:35.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.410" endtime="20201029 18:18:35.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.850" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:35.841" endtime="20201029 18:18:35.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:35.861" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:18:35.852" endtime="20201029 18:18:35.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.871" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:35.869" endtime="20201029 18:18:35.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.877" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:18:35.873" endtime="20201029 18:18:35.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.863" endtime="20201029 18:18:35.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.364" endtime="20201029 18:18:35.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.363" endtime="20201029 18:18:35.881"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.901" endtime="20201029 18:18:35.913"></status>
</kw>
<msg timestamp="20201029 18:18:35.914" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.897" endtime="20201029 18:18:35.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.920" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.916" endtime="20201029 18:18:35.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.923" endtime="20201029 18:18:35.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.890" endtime="20201029 18:18:35.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.886" endtime="20201029 18:18:35.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.946" endtime="20201029 18:18:36.298"></status>
</kw>
<msg timestamp="20201029 18:18:36.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.885663528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.885664, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:35.942" endtime="20201029 18:18:36.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.885663528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.885664, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:36.309" endtime="20201029 18:18:36.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.332" endtime="20201029 18:18:36.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.935" endtime="20201029 18:18:36.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.931" endtime="20201029 18:18:36.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.352" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 18:18:36.340" endtime="20201029 18:18:36.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:36.367" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:36.355" endtime="20201029 18:18:36.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.381" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:36.378" endtime="20201029 18:18:36.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.388" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:36.383" endtime="20201029 18:18:36.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.370" endtime="20201029 18:18:36.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.883" endtime="20201029 18:18:36.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.882" endtime="20201029 18:18:36.394"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.414" endtime="20201029 18:18:36.425"></status>
</kw>
<msg timestamp="20201029 18:18:36.426" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.410" endtime="20201029 18:18:36.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.432" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.428" endtime="20201029 18:18:36.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.434" endtime="20201029 18:18:36.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.403" endtime="20201029 18:18:36.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.399" endtime="20201029 18:18:36.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.458" endtime="20201029 18:18:36.812"></status>
</kw>
<msg timestamp="20201029 18:18:36.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.395231764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.395232236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.455" endtime="20201029 18:18:36.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.395231764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.395232236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.823" endtime="20201029 18:18:36.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.845" endtime="20201029 18:18:36.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.447" endtime="20201029 18:18:36.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.442" endtime="20201029 18:18:36.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.863" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:36.854" endtime="20201029 18:18:36.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:36.879" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:18:36.865" endtime="20201029 18:18:36.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.889" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:36.887" endtime="20201029 18:18:36.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.895" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999982799882e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:36.892" endtime="20201029 18:18:36.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.881" endtime="20201029 18:18:36.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.395" endtime="20201029 18:18:36.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.394" endtime="20201029 18:18:36.899"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.919" endtime="20201029 18:18:36.930"></status>
</kw>
<msg timestamp="20201029 18:18:36.931" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.916" endtime="20201029 18:18:36.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.937" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.933" endtime="20201029 18:18:36.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.939" endtime="20201029 18:18:36.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.909" endtime="20201029 18:18:36.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.904" endtime="20201029 18:18:36.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.963" endtime="20201029 18:18:37.324"></status>
</kw>
<msg timestamp="20201029 18:18:37.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.896832458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.896832931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.960" endtime="20201029 18:18:37.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.896832458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.896832931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.336" endtime="20201029 18:18:37.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.358" endtime="20201029 18:18:37.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.953" endtime="20201029 18:18:37.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.947" endtime="20201029 18:18:37.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.375" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 18:18:37.366" endtime="20201029 18:18:37.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:37.386" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 18:18:37.378" endtime="20201029 18:18:37.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.396" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:37.394" endtime="20201029 18:18:37.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.402" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999982799882e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:37.398" endtime="20201029 18:18:37.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.388" endtime="20201029 18:18:37.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.901" endtime="20201029 18:18:37.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.900" endtime="20201029 18:18:37.406"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.426" endtime="20201029 18:18:37.438"></status>
</kw>
<msg timestamp="20201029 18:18:37.439" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.423" endtime="20201029 18:18:37.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.445" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.442" endtime="20201029 18:18:37.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.448" endtime="20201029 18:18:37.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.416" endtime="20201029 18:18:37.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.411" endtime="20201029 18:18:37.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.472" endtime="20201029 18:18:37.841"></status>
</kw>
<msg timestamp="20201029 18:18:37.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.391281389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.391281861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.468" endtime="20201029 18:18:37.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.391281389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.391281861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.852" endtime="20201029 18:18:37.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.874" endtime="20201029 18:18:37.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.461" endtime="20201029 18:18:37.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.456" endtime="20201029 18:18:37.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.892" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07...</msg>
<status status="PASS" starttime="20201029 18:18:37.883" endtime="20201029 18:18:37.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:37.904" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:18:37.894" endtime="20201029 18:18:37.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.914" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:37.912" endtime="20201029 18:18:37.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.920" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:37.916" endtime="20201029 18:18:37.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.906" endtime="20201029 18:18:37.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.408" endtime="20201029 18:18:37.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.407" endtime="20201029 18:18:37.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.504" endtime="20201029 18:18:37.924"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:27.319" endtime="20201029 18:18:37.926" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.948" endtime="20201029 18:18:37.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.944" endtime="20201029 18:18:37.971"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.005" endtime="20201029 18:18:38.020"></status>
</kw>
<msg timestamp="20201029 18:18:38.021" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.002" endtime="20201029 18:18:38.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.028" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.024" endtime="20201029 18:18:38.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.034" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:38.030" endtime="20201029 18:18:38.035"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:37.994" endtime="20201029 18:18:38.037"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:37.987" endtime="20201029 18:18:38.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.985" endtime="20201029 18:18:38.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:38.047" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:38.045" endtime="20201029 18:18:38.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.041" endtime="20201029 18:18:38.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.983" endtime="20201029 18:18:38.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.981" endtime="20201029 18:18:38.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.050" endtime="20201029 18:18:38.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.977" endtime="20201029 18:18:38.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.973" endtime="20201029 18:18:38.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.942" endtime="20201029 18:18:38.057"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.081" endtime="20201029 18:18:38.093"></status>
</kw>
<msg timestamp="20201029 18:18:38.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.077" endtime="20201029 18:18:38.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.100" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.096" endtime="20201029 18:18:38.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.102" endtime="20201029 18:18:38.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.068" endtime="20201029 18:18:38.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.064" endtime="20201029 18:18:38.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.125" endtime="20201029 18:18:38.476"></status>
</kw>
<msg timestamp="20201029 18:18:38.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123586181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.123595292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.122" endtime="20201029 18:18:38.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123586181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.123595292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.486" endtime="20201029 18:18:38.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.504" endtime="20201029 18:18:38.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.115" endtime="20201029 18:18:38.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.110" endtime="20201029 18:18:38.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:38.522" level="INFO">${RESULT} = [{'diff': 9.110999999992209e-06}, {'diff': 9.611000000006586e-06}, {'diff': 8.931000000003686e-06}, {'diff': 9.26299999999547e-06}, {'diff': 9.110999999992209e-06}, {'diff': 9.610999999992709e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:38.513" endtime="20201029 18:18:38.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:38.531" level="INFO">${OVERHEAD} = {'diff': [9.110999999992209e-06, 9.611000000006586e-06, 8.931000000003686e-06, 9.26299999999547e-06, 9.110999999992209e-06, 9.610999999992709e-06, 9.429999999990835e-06, 9.638999999991849e-06, 9.90300...</msg>
<status status="PASS" starttime="20201029 18:18:38.524" endtime="20201029 18:18:38.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.541" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:38.539" endtime="20201029 18:18:38.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.549" level="INFO">VALUE: [9.110999999992209e-06, 9.611000000006586e-06, 8.931000000003686e-06, 9.26299999999547e-06, 9.110999999992209e-06, 9.610999999992709e-06, 9.429999999990835e-06, 9.638999999991849e-06, 9.903000000005546e-06, 9.306000000000592e-06, 8.943999999996843e-06, 9.777000000002478e-06, 9.3200000000071e-06, 9.597000000000078e-06, 9.597000000000078e-06, 8.999999999995123e-06, 9.76299999999597e-06, 9.222000000003172e-06, 9.624999999999218e-06, 9.58400000000692e-06, 9.444000000011221e-06, 9.02800000000814e-06, 9.263999999994943e-06, 9.931000000004686e-06, 9.096999999999578e-06, 9.26400000000882e-06, 9.096999999999578e-06, 8.930000000004212e-06, 9.111000000006086e-06, 9.110999999992209e-06, 9.124999999998717e-06, 9.778000000001952e-06, 9.277999999987574e-06, 9.791999999994583e-06, 8.930000000004212e-06, 9.263999999994943e-06, 9.610999999992709e-06, 8.931000000003686e-06, 9.624999999999218e-06, 9.944000000011721e-06, 8.930999999989808e-06, 8.929999999990335e-06, 9.278000000001452e-06, 9.263999999994943e-06, 9.110999999992209e-06, 9.806000000001092e-06, 9.250000000002312e-06, 9.346999999992889e-06, 9.26400000000882e-06, 9.111000000006086e-06]</msg>
<status status="PASS" starttime="20201029 18:18:38.545" endtime="20201029 18:18:38.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.533" endtime="20201029 18:18:38.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.060" endtime="20201029 18:18:38.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.059" endtime="20201029 18:18:38.554"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.582" endtime="20201029 18:18:38.602"></status>
</kw>
<msg timestamp="20201029 18:18:38.603" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.574" endtime="20201029 18:18:38.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.612" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.606" endtime="20201029 18:18:38.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.615" endtime="20201029 18:18:38.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.566" endtime="20201029 18:18:38.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.561" endtime="20201029 18:18:38.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.639" endtime="20201029 18:18:39.023"></status>
</kw>
<msg timestamp="20201029 18:18:39.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124199708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.124209319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.636" endtime="20201029 18:18:39.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124199708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.124209319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.034" endtime="20201029 18:18:39.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.056" endtime="20201029 18:18:39.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.628" endtime="20201029 18:18:39.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.624" endtime="20201029 18:18:39.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.075" level="INFO">${RESULT} = [{'diff': 9.610999999992709e-06}, {'diff': 8.931000000003686e-06}, {'diff': 9.624999999999218e-06}, {'diff': 9.944000000011721e-06}, {'diff': 8.930999999989808e-06}, {'diff': 8.929999999990335e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:39.065" endtime="20201029 18:18:39.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:39.086" level="INFO">${OVERHEAD} = {'diff': [9.610999999992709e-06, 8.931000000003686e-06, 9.624999999999218e-06, 9.944000000011721e-06, 8.930999999989808e-06, 8.929999999990335e-06, 9.278000000001452e-06, 9.263999999994943e-06, 9.1109...</msg>
<status status="PASS" starttime="20201029 18:18:39.077" endtime="20201029 18:18:39.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.096" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:39.094" endtime="20201029 18:18:39.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.102" level="INFO">VALUE: [9.610999999992709e-06, 8.931000000003686e-06, 9.624999999999218e-06, 9.944000000011721e-06, 8.930999999989808e-06, 8.929999999990335e-06, 9.278000000001452e-06, 9.263999999994943e-06, 9.110999999992209e-06, 9.806000000001092e-06, 9.250000000002312e-06, 9.346999999992889e-06, 9.26400000000882e-06, 9.111000000006086e-06, 9.819999999938211e-06, 8.97299999991219e-06, 8.915999999969948e-06, 9.610999999964953e-06, 9.444000000025099e-06, 9.096999999957944e-06, 9.097000000068967e-06, 9.444999999996817e-06, 9.431000000059697e-06, 8.985999999988614e-06, 9.417000000011555e-06, 9.082999999909802e-06, 8.917000000052688e-06, 9.431000000059697e-06, 9.610999999964953e-06, 9.26400000000882e-06, 9.304999999959485e-06, 9.236000000023559e-06, 9.416000000039837e-06, 9.444000000025099e-06, 9.555999999966147e-06, 9.750000000030568e-06, 9.763999999967687e-06, 9.111000000006086e-06, 9.26400000000882e-06, 9.181000000024753e-06, 8.95899999997507e-06, 9.790999999981231e-06, 9.263000000037103e-06, 9.597000000027833e-06, 9.582999999979691e-06, 9.610999999964953e-06, 9.27799999994594e-06, 8.93000000001809e-06, 9.610999999964953e-06, 9.597999999999551e-06, 9.111000000006086e-06, 9.417000000011555e-06, 9.15300000003949e-06, 9.26400000000882e-06, 9.305000000070507e-06, 9.77800000001583e-06, 8.916999999941666e-06, 9.596999999916811e-06, 9.597000000027833e-06, 8.94500000003795e-06, 9.790999999981231e-06, 9.750000000030568e-06, 9.111000000006086e-06, 9.430999999948675e-06]</msg>
<status status="PASS" starttime="20201029 18:18:39.099" endtime="20201029 18:18:39.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.088" endtime="20201029 18:18:39.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.557" endtime="20201029 18:18:39.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.556" endtime="20201029 18:18:39.106"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.126" endtime="20201029 18:18:39.138"></status>
</kw>
<msg timestamp="20201029 18:18:39.139" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.123" endtime="20201029 18:18:39.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.145" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.141" endtime="20201029 18:18:39.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.147" endtime="20201029 18:18:39.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.116" endtime="20201029 18:18:39.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.111" endtime="20201029 18:18:39.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.170" endtime="20201029 18:18:39.532"></status>
</kw>
<msg timestamp="20201029 18:18:39.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.61795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.617959111, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:18:39.167" endtime="20201029 18:18:39.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.61795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.617959111, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:18:39.543" endtime="20201029 18:18:39.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.565" endtime="20201029 18:18:39.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.160" endtime="20201029 18:18:39.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.155" endtime="20201029 18:18:39.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.585" level="INFO">${RESULT} = [{'diff': 9.111000000006086e-06}, {'diff': 9.417000000011555e-06}, {'diff': 9.15300000003949e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.305000000070507e-06}, {'diff': 9.77800000001583e-06}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:39.574" endtime="20201029 18:18:39.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:39.596" level="INFO">${OVERHEAD} = {'diff': [9.111000000006086e-06, 9.417000000011555e-06, 9.15300000003949e-06, 9.26400000000882e-06, 9.305000000070507e-06, 9.77800000001583e-06, 8.916999999941666e-06, 9.596999999916811e-06, 9.5970000...</msg>
<status status="PASS" starttime="20201029 18:18:39.587" endtime="20201029 18:18:39.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.606" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:39.604" endtime="20201029 18:18:39.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.612" level="INFO">VALUE: [9.111000000006086e-06, 9.417000000011555e-06, 9.15300000003949e-06, 9.26400000000882e-06, 9.305000000070507e-06, 9.77800000001583e-06, 8.916999999941666e-06, 9.596999999916811e-06, 9.597000000027833e-06, 8.94500000003795e-06, 9.790999999981231e-06, 9.750000000030568e-06, 9.111000000006086e-06, 9.430999999948675e-06, 9.499999999995623e-06, 9.096999999957944e-06, 8.930999999989808e-06, 9.930000000046846e-06, 8.930999999989808e-06, 9.750000000030568e-06, 9.611000000075975e-06, 9.750000000030568e-06, 9.125000000054229e-06, 9.778000000126852e-06, 8.958000000003352e-06, 9.083999999992542e-06, 9.292000000105105e-06, 9.611999999936671e-06, 9.431000000059697e-06, 9.096999999957944e-06, 8.930000000129112e-06, 9.110999999784042e-06, 9.597000000027833e-06, 9.26400000000882e-06, 9.26299999992608e-06, 8.930000000129112e-06, 8.930999999989808e-06, 9.278000000056963e-06, 9.76400000007871e-06, 9.26400000000882e-06, 9.611000000075975e-06, 9.582999999979691e-06, 9.083000000131847e-06, 9.76299999999597e-06, 9.096999999957944e-06, 9.291000000022365e-06, 9.457999999851197e-06, 9.276999999974223e-06, 9.681000000094642e-06, 8.94399999995521e-06, 8.985999999877592e-06, 8.916999999941666e-06, 9.514000000043765e-06, 9.111000000006086e-06, 9.429999999976957e-06, 9.111000000006086e-06, 9.26400000000882e-06, 9.429999999976957e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.444000000025099e-06, 9.195000000072895e-06, 9.638999999950215e-06, 9.431000000059697e-06]</msg>
<status status="PASS" starttime="20201029 18:18:39.608" endtime="20201029 18:18:39.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.598" endtime="20201029 18:18:39.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.108" endtime="20201029 18:18:39.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.107" endtime="20201029 18:18:39.616"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.636" endtime="20201029 18:18:39.648"></status>
</kw>
<msg timestamp="20201029 18:18:39.649" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.633" endtime="20201029 18:18:39.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.655" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.651" endtime="20201029 18:18:39.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.658" endtime="20201029 18:18:39.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.625" endtime="20201029 18:18:39.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.621" endtime="20201029 18:18:39.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.682" endtime="20201029 18:18:40.033"></status>
</kw>
<msg timestamp="20201029 18:18:40.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.148601014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.14861, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:18:39.679" endtime="20201029 18:18:40.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.148601014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.14861, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:18:40.044" endtime="20201029 18:18:40.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.066" endtime="20201029 18:18:40.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.670" endtime="20201029 18:18:40.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.666" endtime="20201029 18:18:40.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.085" level="INFO">${RESULT} = [{'diff': 8.985999999877592e-06}, {'diff': 8.916999999941666e-06}, {'diff': 9.514000000043765e-06}, {'diff': 9.111000000006086e-06}, {'diff': 9.429999999976957e-06}, {'diff': 9.111000000006086e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:40.075" endtime="20201029 18:18:40.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:40.095" level="INFO">${OVERHEAD} = {'diff': [8.985999999877592e-06, 8.916999999941666e-06, 9.514000000043765e-06, 9.111000000006086e-06, 9.429999999976957e-06, 9.111000000006086e-06, 9.26400000000882e-06, 9.429999999976957e-06, 8.93099...</msg>
<status status="PASS" starttime="20201029 18:18:40.087" endtime="20201029 18:18:40.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.105" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:40.103" endtime="20201029 18:18:40.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.111" level="INFO">VALUE: [8.985999999877592e-06, 8.916999999941666e-06, 9.514000000043765e-06, 9.111000000006086e-06, 9.429999999976957e-06, 9.111000000006086e-06, 9.26400000000882e-06, 9.429999999976957e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.444000000025099e-06, 9.195000000072895e-06, 9.638999999950215e-06, 9.431000000059697e-06, 9.79199999995295e-06, 9.305999999931203e-06, 8.930999999989808e-06, 9.458999999933937e-06, 9.625000000124118e-06, 9.584000000062431e-06, 9.611000000075975e-06, 9.415999999928815e-06, 9.263000000148125e-06, 8.930000000129112e-06, 9.111000000006086e-06, 9.098000000040685e-06, 9.431000000059697e-06, 9.417000000011555e-06, 9.597000000027833e-06, 9.111000000006086e-06, 9.458000000073241e-06, 9.735999999982425e-06, 9.611000000075975e-06, 9.111000000006086e-06, 9.763999999856665e-06, 9.250000000182723e-06, 9.098000000040685e-06, 9.417000000011555e-06, 8.875000000019284e-06, 9.44500000010784e-06, 9.208999999898992e-06, 9.61099999985393e-06, 9.096999999957944e-06, 3.22499999998449e-05, 9.76400000007871e-06, 8.94500000003795e-06, 9.777000000044112e-06, 8.929999999907068e-06, 9.098000000040685e-06, 9.125000000054229e-06, 8.916999999941666e-06, 9.429999999976957e-06, 9.26400000000882e-06, 9.431000000059697e-06, 9.430999999837653e-06, 9.26400000000882e-06, 8.94399999995521e-06, 9.458000000073241e-06, 9.598000000110574e-06, 9.249999999960679e-06, 9.597000000027833e-06, 9.402999999963413e-06, 8.930999999989808e-06, 9.76400000007871e-06]</msg>
<status status="PASS" starttime="20201029 18:18:40.107" endtime="20201029 18:18:40.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.097" endtime="20201029 18:18:40.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.618" endtime="20201029 18:18:40.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.617" endtime="20201029 18:18:40.115"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.136" endtime="20201029 18:18:40.148"></status>
</kw>
<msg timestamp="20201029 18:18:40.149" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.133" endtime="20201029 18:18:40.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.155" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.152" endtime="20201029 18:18:40.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.158" endtime="20201029 18:18:40.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.126" endtime="20201029 18:18:40.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.120" endtime="20201029 18:18:40.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.181" endtime="20201029 18:18:40.530"></status>
</kw>
<msg timestamp="20201029 18:18:40.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.648689444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.648698361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.177" endtime="20201029 18:18:40.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.648689444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.648698361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.541" endtime="20201029 18:18:40.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.563" endtime="20201029 18:18:40.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.170" endtime="20201029 18:18:40.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.166" endtime="20201029 18:18:40.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.581" level="INFO">${RESULT} = [{'diff': 8.916999999941666e-06}, {'diff': 9.429999999976957e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.431000000059697e-06}, {'diff': 9.430999999837653e-06}, {'diff': 9.26400000000882e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:40.572" endtime="20201029 18:18:40.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:40.593" level="INFO">${OVERHEAD} = {'diff': [8.916999999941666e-06, 9.429999999976957e-06, 9.26400000000882e-06, 9.431000000059697e-06, 9.430999999837653e-06, 9.26400000000882e-06, 8.94399999995521e-06, 9.458000000073241e-06, 9.5980000...</msg>
<status status="PASS" starttime="20201029 18:18:40.583" endtime="20201029 18:18:40.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.603" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:40.601" endtime="20201029 18:18:40.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.609" level="INFO">VALUE: [8.916999999941666e-06, 9.429999999976957e-06, 9.26400000000882e-06, 9.431000000059697e-06, 9.430999999837653e-06, 9.26400000000882e-06, 8.94399999995521e-06, 9.458000000073241e-06, 9.598000000110574e-06, 9.249999999960679e-06, 9.597000000027833e-06, 9.402999999963413e-06, 8.930999999989808e-06, 9.76400000007871e-06, 9.1670000004207e-06, 9.41600000015086e-06, 9.431000000059697e-06, 9.0699999999444e-06, 9.806000000001092e-06, 9.792000000174994e-06, 9.277999999834918e-06, 9.26400000000882e-06, 9.444000000247144e-06, 9.111000000228131e-06, 8.889000000067426e-06, 9.597000000027833e-06, 8.930999999989808e-06, 9.76400000007871e-06, 9.638999999950215e-06, 8.944000000177255e-06, 9.61099999985393e-06, 8.91700000016371e-06, 9.776999999822067e-06, 9.111000000228131e-06, 9.26400000000882e-06, 9.597000000027833e-06, 9.138999999880326e-06, 9.236000000356626e-06, 9.431000000059697e-06, 9.597000000027833e-06, 9.278000000279008e-06, 9.26400000000882e-06, 8.930999999989808e-06, 9.431000000059697e-06, 9.458000000073241e-06, 9.777999999904807e-06, 9.235999999912536e-06, 9.444999999885795e-06, 9.931000000129586e-06, 9.777999999904807e-06, 8.916999999719621e-06, 9.777999999904807e-06, 9.332999999944747e-06, 8.943999999733165e-06, 9.125000000054229e-06, 9.277999999834918e-06, 9.625000000124118e-06, 9.208999999898992e-06, 9.443999999803054e-06, 9.429999999976957e-06, 9.597000000027833e-06, 8.958000000003352e-06, 9.444999999885795e-06, 9.277000000196267e-06]</msg>
<status status="PASS" starttime="20201029 18:18:40.606" endtime="20201029 18:18:40.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.595" endtime="20201029 18:18:40.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.117" endtime="20201029 18:18:40.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.116" endtime="20201029 18:18:40.613"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.633" endtime="20201029 18:18:40.645"></status>
</kw>
<msg timestamp="20201029 18:18:40.646" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.630" endtime="20201029 18:18:40.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.652" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.648" endtime="20201029 18:18:40.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.655" endtime="20201029 18:18:40.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.623" endtime="20201029 18:18:40.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.618" endtime="20201029 18:18:40.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.677" endtime="20201029 18:18:41.041"></status>
</kw>
<msg timestamp="20201029 18:18:41.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.137173514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.137182431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.674" endtime="20201029 18:18:41.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.137173514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.137182431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.053" endtime="20201029 18:18:41.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.081" endtime="20201029 18:18:41.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.667" endtime="20201029 18:18:41.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.663" endtime="20201029 18:18:41.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.107" level="INFO">${RESULT} = [{'diff': 8.916999999719621e-06}, {'diff': 9.777999999904807e-06}, {'diff': 9.332999999944747e-06}, {'diff': 8.943999999733165e-06}, {'diff': 9.125000000054229e-06}, {'diff': 9.277999999834918e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:41.095" endtime="20201029 18:18:41.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:41.120" level="INFO">${OVERHEAD} = {'diff': [8.916999999719621e-06, 9.777999999904807e-06, 9.332999999944747e-06, 8.943999999733165e-06, 9.125000000054229e-06, 9.277999999834918e-06, 9.625000000124118e-06, 9.208999999898992e-06, 9.4439...</msg>
<status status="PASS" starttime="20201029 18:18:41.110" endtime="20201029 18:18:41.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.130" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:41.128" endtime="20201029 18:18:41.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.136" level="INFO">VALUE: [8.916999999719621e-06, 9.777999999904807e-06, 9.332999999944747e-06, 8.943999999733165e-06, 9.125000000054229e-06, 9.277999999834918e-06, 9.625000000124118e-06, 9.208999999898992e-06, 9.443999999803054e-06, 9.429999999976957e-06, 9.597000000027833e-06, 8.958000000003352e-06, 9.444999999885795e-06, 9.277000000196267e-06, 9.276999999752178e-06, 9.110999999784042e-06, 9.429999999976957e-06, 9.458999999711892e-06, 9.541999999918005e-06, 9.445000000329884e-06, 9.61100000029802e-06, 9.096999999957944e-06, 9.777999999904807e-06, 9.111000000228131e-06, 9.292000000105105e-06, 9.096999999957944e-06, 9.110999999784042e-06, 8.943999999733165e-06, 9.777999999904807e-06, 9.278000000279008e-06, 9.125000000054229e-06, 9.76400000007871e-06, 9.125000000054229e-06, 9.777999999904807e-06, 9.708999999968881e-06, 9.277999999834918e-06, 9.26400000000882e-06, 9.76400000007871e-06, 9.582999999757646e-06, 9.76399999963462e-06, 9.055000000035562e-06, 9.444000000247144e-06, 9.291999999661016e-06, 9.76400000007871e-06, 9.26400000000882e-06, 9.278000000279008e-06, 9.51299999973898e-06, 9.943999999872943e-06, 9.429999999976957e-06, 9.76400000007871e-06, 8.930999999989808e-06, 9.431000000059697e-06, 9.846999999840733e-06, 9.778000000348896e-06, 9.791999999730905e-06, 9.12499999961014e-06, 9.444999999885795e-06, 9.096999999957944e-06, 9.430999999615608e-06, 9.431000000059697e-06, 9.138999999880326e-06, 9.111000000228131e-06, 9.792000000174994e-06, 9.431000000059697e-06]</msg>
<status status="PASS" starttime="20201029 18:18:41.132" endtime="20201029 18:18:41.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.122" endtime="20201029 18:18:41.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.615" endtime="20201029 18:18:41.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.614" endtime="20201029 18:18:41.140"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.161" endtime="20201029 18:18:41.173"></status>
</kw>
<msg timestamp="20201029 18:18:41.174" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.158" endtime="20201029 18:18:41.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.180" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.176" endtime="20201029 18:18:41.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.183" endtime="20201029 18:18:41.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.151" endtime="20201029 18:18:41.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.146" endtime="20201029 18:18:41.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.206" endtime="20201029 18:18:41.580"></status>
</kw>
<msg timestamp="20201029 18:18:41.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.622162819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.62217175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:41.202" endtime="20201029 18:18:41.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.622162819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.62217175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:41.592" endtime="20201029 18:18:41.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.614" endtime="20201029 18:18:41.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.195" endtime="20201029 18:18:41.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.191" endtime="20201029 18:18:41.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.632" level="INFO">${RESULT} = [{'diff': 8.930999999989808e-06}, {'diff': 9.431000000059697e-06}, {'diff': 9.846999999840733e-06}, {'diff': 9.778000000348896e-06}, {'diff': 9.791999999730905e-06}, {'diff': 9.12499999961014e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:41.623" endtime="20201029 18:18:41.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:41.643" level="INFO">${OVERHEAD} = {'diff': [8.930999999989808e-06, 9.431000000059697e-06, 9.846999999840733e-06, 9.778000000348896e-06, 9.791999999730905e-06, 9.12499999961014e-06, 9.444999999885795e-06, 9.096999999957944e-06, 9.43099...</msg>
<status status="PASS" starttime="20201029 18:18:41.634" endtime="20201029 18:18:41.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.653" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:41.650" endtime="20201029 18:18:41.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.658" level="INFO">VALUE: [8.930999999989808e-06, 9.431000000059697e-06, 9.846999999840733e-06, 9.778000000348896e-06, 9.791999999730905e-06, 9.12499999961014e-06, 9.444999999885795e-06, 9.096999999957944e-06, 9.430999999615608e-06, 9.431000000059697e-06, 9.138999999880326e-06, 9.111000000228131e-06, 9.792000000174994e-06, 9.431000000059697e-06, 8.930999999989808e-06, 9.277999999834918e-06, 9.111000000228131e-06, 9.597000000027833e-06, 9.76299999999597e-06, 8.91600000008097e-06, 9.153000000150513e-06, 8.929999999907068e-06, 9.276999999752178e-06, 9.429999999976957e-06, 9.292000000105105e-06, 9.096999999957944e-06, 9.291000000022365e-06, 9.083000000131847e-06, 9.277000000196267e-06, 9.944000000317033e-06, 9.26400000000882e-06, 9.6670000000465e-06, 9.818999999744449e-06, 9.61099999985393e-06, 9.61099999985393e-06, 9.597000000027833e-06, 9.235999999912536e-06, 9.444999999885795e-06, 9.098000000040685e-06, 9.499999999995623e-06, 8.902999999893524e-06, 9.777999999904807e-06, 9.111000000228131e-06, 8.930999999989808e-06, 9.776999999822067e-06, 9.458000000073241e-06, 8.944000000177255e-06, 9.277999999834918e-06, 9.26400000000882e-06, 9.638999999950215e-06, 9.443999999803054e-06, 9.61099999985393e-06, 8.847999999783696e-06, 9.597000000027833e-06, 8.959000000086093e-06, 9.638999999950215e-06, 8.930000000351157e-06, 9.263999999564732e-06, 9.722000000156328e-06, 9.278000000279008e-06, 9.083999999770498e-06, 9.096999999957944e-06, 9.41699999978951e-06, 9.944999999955684e-06]</msg>
<status status="PASS" starttime="20201029 18:18:41.655" endtime="20201029 18:18:41.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.644" endtime="20201029 18:18:41.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.142" endtime="20201029 18:18:41.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.141" endtime="20201029 18:18:41.663"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.684" endtime="20201029 18:18:41.697"></status>
</kw>
<msg timestamp="20201029 18:18:41.698" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.679" endtime="20201029 18:18:41.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.705" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.701" endtime="20201029 18:18:41.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.707" endtime="20201029 18:18:41.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.672" endtime="20201029 18:18:41.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.667" endtime="20201029 18:18:41.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.730" endtime="20201029 18:18:42.109"></status>
</kw>
<msg timestamp="20201029 18:18:42.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.139227528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.139236972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.726" endtime="20201029 18:18:42.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.139227528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.139236972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.121" endtime="20201029 18:18:42.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.143" endtime="20201029 18:18:42.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.719" endtime="20201029 18:18:42.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.715" endtime="20201029 18:18:42.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.161" level="INFO">${RESULT} = [{'diff': 9.443999999803054e-06}, {'diff': 9.61099999985393e-06}, {'diff': 8.847999999783696e-06}, {'diff': 9.597000000027833e-06}, {'diff': 8.959000000086093e-06}, {'diff': 9.638999999950215e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:42.151" endtime="20201029 18:18:42.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:42.172" level="INFO">${OVERHEAD} = {'diff': [9.443999999803054e-06, 9.61099999985393e-06, 8.847999999783696e-06, 9.597000000027833e-06, 8.959000000086093e-06, 9.638999999950215e-06, 8.930000000351157e-06, 9.263999999564732e-06, 9.72200...</msg>
<status status="PASS" starttime="20201029 18:18:42.163" endtime="20201029 18:18:42.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.182" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:42.180" endtime="20201029 18:18:42.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.188" level="INFO">VALUE: [9.443999999803054e-06, 9.61099999985393e-06, 8.847999999783696e-06, 9.597000000027833e-06, 8.959000000086093e-06, 9.638999999950215e-06, 8.930000000351157e-06, 9.263999999564732e-06, 9.722000000156328e-06, 9.278000000279008e-06, 9.083999999770498e-06, 9.096999999957944e-06, 9.41699999978951e-06, 9.944999999955684e-06, 9.111000000228131e-06, 9.26400000000882e-06, 9.277000000196267e-06, 9.292000000105105e-06, 9.111000000228131e-06, 9.597000000027833e-06, 9.125000000054229e-06, 9.791000000092254e-06, 9.568999999931549e-06, 9.61100000029802e-06, 9.9169999998594e-06, 9.597000000027833e-06, 9.110999999784042e-06, 9.332999999944747e-06, 9.777999999904807e-06, 9.777999999904807e-06, 9.110999999784042e-06, 9.111000000228131e-06, 9.638999999950215e-06, 8.930999999989808e-06, 9.276999999752178e-06, 9.76399999963462e-06, 9.584000000284476e-06, 9.444000000247144e-06, 9.777000000266156e-06, 9.096999999957944e-06, 9.332999999944747e-06, 9.26400000000882e-06, 9.26400000000882e-06, 9.444000000247144e-06, 9.096999999957944e-06, 8.902999999893524e-06, 9.76400000007871e-06, 9.125000000054229e-06, 9.277999999834918e-06, 9.445000000329884e-06, 9.055000000035562e-06, 9.568999999931549e-06, 9.097000000402033e-06, 9.278000000279008e-06, 8.929999999907068e-06, 9.111000000228131e-06, 9.76299999999597e-06, 9.444999999885795e-06, 9.111000000228131e-06, 9.76400000007871e-06, 9.777999999904807e-06, 9.458000000073241e-06, 9.277999999834918e-06, 9.625000000124118e-06]</msg>
<status status="PASS" starttime="20201029 18:18:42.184" endtime="20201029 18:18:42.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.174" endtime="20201029 18:18:42.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.664" endtime="20201029 18:18:42.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.663" endtime="20201029 18:18:42.192"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.212" endtime="20201029 18:18:42.224"></status>
</kw>
<msg timestamp="20201029 18:18:42.225" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.209" endtime="20201029 18:18:42.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.232" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.228" endtime="20201029 18:18:42.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.234" endtime="20201029 18:18:42.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.202" endtime="20201029 18:18:42.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.197" endtime="20201029 18:18:42.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.257" endtime="20201029 18:18:42.644"></status>
</kw>
<msg timestamp="20201029 18:18:42.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.653030653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.653039708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.253" endtime="20201029 18:18:42.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.653030653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.653039708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.655" endtime="20201029 18:18:42.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.677" endtime="20201029 18:18:42.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.246" endtime="20201029 18:18:42.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.242" endtime="20201029 18:18:42.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.695" level="INFO">${RESULT} = [{'diff': 9.055000000035562e-06}, {'diff': 9.568999999931549e-06}, {'diff': 9.097000000402033e-06}, {'diff': 9.278000000279008e-06}, {'diff': 8.929999999907068e-06}, {'diff': 9.111000000228131e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:42.686" endtime="20201029 18:18:42.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:42.707" level="INFO">${OVERHEAD} = {'diff': [9.055000000035562e-06, 9.568999999931549e-06, 9.097000000402033e-06, 9.278000000279008e-06, 8.929999999907068e-06, 9.111000000228131e-06, 9.76299999999597e-06, 9.444999999885795e-06, 9.11100...</msg>
<status status="PASS" starttime="20201029 18:18:42.697" endtime="20201029 18:18:42.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.717" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:42.715" endtime="20201029 18:18:42.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.723" level="INFO">VALUE: [9.055000000035562e-06, 9.568999999931549e-06, 9.097000000402033e-06, 9.278000000279008e-06, 8.929999999907068e-06, 9.111000000228131e-06, 9.76299999999597e-06, 9.444999999885795e-06, 9.111000000228131e-06, 9.76400000007871e-06, 9.777999999904807e-06, 9.458000000073241e-06, 9.277999999834918e-06, 9.625000000124118e-06, 9.777999999904807e-06, 9.291999999661016e-06, 9.26400000000882e-06, 9.250000000626812e-06, 9.444999999885795e-06, 9.11100000067222e-06, 9.277999999390829e-06, 9.61100000029802e-06, 9.459000000155982e-06, 9.110999999784042e-06, 9.777999999904807e-06, 8.944000000177255e-06, 9.083000000131847e-06, 9.083000000131847e-06, 9.236000000356626e-06, 9.110999999784042e-06, 9.597000000027833e-06, 9.375000000311218e-06, 9.110999999784042e-06, 9.110999999784042e-06, 8.889000000067426e-06, 8.944999999371817e-06, 9.735999999982425e-06, 9.763000000440059e-06, 9.610999999409842e-06, 9.430999999615608e-06, 9.26400000000882e-06, 9.792000000174994e-06, 8.944000000177255e-06, 9.277000000196267e-06, 9.679999999789857e-06, 9.597000000027833e-06, 9.4170000002336e-06, 9.749999999364434e-06, 9.278000000279008e-06, 9.777999999904807e-06, 9.11100000067222e-06, 8.929999999907068e-06, 8.958999999642003e-06, 9.249999999738634e-06, 8.930999999989808e-06, 9.431000000503786e-06, 9.653000000220402e-06, 9.097999999596595e-06, 9.444999999885795e-06, 9.402999999963413e-06, 9.597000000027833e-06, 9.61100000029802e-06, 9.444999999885795e-06, 9.444999999885795e-06]</msg>
<status status="PASS" starttime="20201029 18:18:42.720" endtime="20201029 18:18:42.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.709" endtime="20201029 18:18:42.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.194" endtime="20201029 18:18:42.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.193" endtime="20201029 18:18:42.727"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.747" endtime="20201029 18:18:42.759"></status>
</kw>
<msg timestamp="20201029 18:18:42.760" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.744" endtime="20201029 18:18:42.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.766" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.762" endtime="20201029 18:18:42.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.768" endtime="20201029 18:18:42.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.737" endtime="20201029 18:18:42.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.732" endtime="20201029 18:18:42.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.792" endtime="20201029 18:18:43.162"></status>
</kw>
<msg timestamp="20201029 18:18:43.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.172030861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.172039972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.788" endtime="20201029 18:18:43.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.172030861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.172039972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.174" endtime="20201029 18:18:43.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.196" endtime="20201029 18:18:43.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.781" endtime="20201029 18:18:43.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.776" endtime="20201029 18:18:43.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.214" level="INFO">${RESULT} = [{'diff': 9.11100000067222e-06}, {'diff': 8.929999999907068e-06}, {'diff': 8.958999999642003e-06}, {'diff': 9.249999999738634e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.431000000503786e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:43.204" endtime="20201029 18:18:43.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:43.224" level="INFO">${OVERHEAD} = {'diff': [9.11100000067222e-06, 8.929999999907068e-06, 8.958999999642003e-06, 9.249999999738634e-06, 8.930999999989808e-06, 9.431000000503786e-06, 9.653000000220402e-06, 9.097999999596595e-06, 9.44499...</msg>
<status status="PASS" starttime="20201029 18:18:43.216" endtime="20201029 18:18:43.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.234" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:43.232" endtime="20201029 18:18:43.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.239" level="INFO">VALUE: [9.11100000067222e-06, 8.929999999907068e-06, 8.958999999642003e-06, 9.249999999738634e-06, 8.930999999989808e-06, 9.431000000503786e-06, 9.653000000220402e-06, 9.097999999596595e-06, 9.444999999885795e-06, 9.402999999963413e-06, 9.597000000027833e-06, 9.61100000029802e-06, 9.444999999885795e-06, 9.444999999885795e-06, 9.319000000118649e-06, 9.763000000440059e-06, 9.361000000041031e-06, 8.930999999989808e-06, 9.722999999794979e-06, 9.388999999693226e-06, 9.777999999904807e-06, 9.110999999784042e-06, 9.598000000110574e-06, 9.597000000027833e-06, 9.764000000522799e-06, 9.26299999992608e-06, 9.278000000279008e-06, 9.277999999390829e-06, 9.776999999822067e-06, 9.096999999513855e-06, 9.61100000029802e-06, 9.26299999992608e-06, 9.76399999963462e-06, 9.042000000292205e-06, 9.76399999963462e-06, 8.958999999642003e-06, 9.76399999963462e-06, 9.443999999803054e-06, 9.277000000196267e-06, 9.444999999885795e-06, 9.430000000421046e-06, 9.61100000029802e-06, 9.610999999409842e-06, 9.610999999409842e-06, 9.528000000535997e-06, 9.610999999409842e-06, 9.624999999680028e-06, 9.042000000292205e-06, 9.277999999390829e-06, 9.81999999982719e-06, 9.26400000000882e-06, 9.151999999623683e-06, 9.443999999803054e-06, 9.429999999532868e-06, 8.957999999559263e-06, 9.444999999885795e-06, 9.444000000691233e-06, 9.792000000174994e-06, 9.430999999615608e-06, 9.098000000484774e-06, 9.388999999693226e-06, 9.236000000356626e-06, 8.930999999989808e-06, 9.332999999500657e-06]</msg>
<status status="PASS" starttime="20201029 18:18:43.236" endtime="20201029 18:18:43.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.226" endtime="20201029 18:18:43.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.729" endtime="20201029 18:18:43.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.728" endtime="20201029 18:18:43.244"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.264" endtime="20201029 18:18:43.277"></status>
</kw>
<msg timestamp="20201029 18:18:43.278" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.261" endtime="20201029 18:18:43.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.284" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.280" endtime="20201029 18:18:43.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.287" endtime="20201029 18:18:43.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.253" endtime="20201029 18:18:43.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.249" endtime="20201029 18:18:43.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.311" endtime="20201029 18:18:43.684"></status>
</kw>
<msg timestamp="20201029 18:18:43.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.697282972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.697292236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.307" endtime="20201029 18:18:43.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.697282972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.697292236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.696" endtime="20201029 18:18:43.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.717" endtime="20201029 18:18:43.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.300" endtime="20201029 18:18:43.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.295" endtime="20201029 18:18:43.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.735" level="INFO">${RESULT} = [{'diff': 9.26400000000882e-06}, {'diff': 9.151999999623683e-06}, {'diff': 9.443999999803054e-06}, {'diff': 9.429999999532868e-06}, {'diff': 8.957999999559263e-06}, {'diff': 9.444999999885795e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:43.726" endtime="20201029 18:18:43.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:43.747" level="INFO">${OVERHEAD} = {'diff': [9.26400000000882e-06, 9.151999999623683e-06, 9.443999999803054e-06, 9.429999999532868e-06, 8.957999999559263e-06, 9.444999999885795e-06, 9.444000000691233e-06, 9.792000000174994e-06, 9.43099...</msg>
<status status="PASS" starttime="20201029 18:18:43.737" endtime="20201029 18:18:43.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.757" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:43.755" endtime="20201029 18:18:43.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.763" level="INFO">VALUE: [9.26400000000882e-06, 9.151999999623683e-06, 9.443999999803054e-06, 9.429999999532868e-06, 8.957999999559263e-06, 9.444999999885795e-06, 9.444000000691233e-06, 9.792000000174994e-06, 9.430999999615608e-06, 9.098000000484774e-06, 9.388999999693226e-06, 9.236000000356626e-06, 8.930999999989808e-06, 9.332999999500657e-06, 9.763000000440059e-06, 9.61100000029802e-06, 9.429999999532868e-06, 9.653000000220402e-06, 9.444000000691233e-06, 8.945000000259995e-06, 9.097999999596595e-06, 9.638999999950215e-06, 9.416999999345421e-06, 9.26400000000882e-06, 8.915999999636881e-06, 8.943999999289076e-06, 9.833000000014636e-06, 9.110999999784042e-06, 9.610999999409842e-06, 9.222000000086439e-06, 9.110999999784042e-06, 9.777999999904807e-06, 9.153000000594602e-06, 9.291999999661016e-06, 8.944000000177255e-06, 9.110999999784042e-06, 9.777999999904807e-06, 8.929999999907068e-06, 9.76299999955188e-06, 9.735999999982425e-06, 8.929999999907068e-06, 8.944999999371817e-06, 9.097000000402033e-06, 9.792000000174994e-06, 9.846999999396644e-06, 9.61100000029802e-06, 9.805999999557002e-06, 9.277999999390829e-06, 8.889000000067426e-06, 8.862000000497972e-06, 9.195000000516984e-06, 8.957999999559263e-06, 9.680999999872597e-06, 8.929999999907068e-06, 9.125000000054229e-06, 9.26400000000882e-06, 9.638999999950215e-06, 9.16699999997661e-06, 9.11100000067222e-06, 9.278000000279008e-06, 9.110999999784042e-06, 9.222000000086439e-06, 9.249999999738634e-06, 9.61100000029802e-06]</msg>
<status status="PASS" starttime="20201029 18:18:43.759" endtime="20201029 18:18:43.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.749" endtime="20201029 18:18:43.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.245" endtime="20201029 18:18:43.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.245" endtime="20201029 18:18:43.767"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.787" endtime="20201029 18:18:43.800"></status>
</kw>
<msg timestamp="20201029 18:18:43.801" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.783" endtime="20201029 18:18:43.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.807" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.804" endtime="20201029 18:18:43.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.810" endtime="20201029 18:18:43.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.776" endtime="20201029 18:18:43.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.772" endtime="20201029 18:18:43.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.834" endtime="20201029 18:18:44.272"></status>
</kw>
<msg timestamp="20201029 18:18:44.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.205399694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.205408889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.830" endtime="20201029 18:18:44.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.205399694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.205408889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.283" endtime="20201029 18:18:44.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.306" endtime="20201029 18:18:44.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.822" endtime="20201029 18:18:44.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.818" endtime="20201029 18:18:44.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.324" level="INFO">${RESULT} = [{'diff': 9.195000000516984e-06}, {'diff': 8.957999999559263e-06}, {'diff': 9.680999999872597e-06}, {'diff': 8.929999999907068e-06}, {'diff': 9.125000000054229e-06}, {'diff': 9.26400000000882e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:44.315" endtime="20201029 18:18:44.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:44.337" level="INFO">${OVERHEAD} = {'diff': [9.195000000516984e-06, 8.957999999559263e-06, 9.680999999872597e-06, 8.929999999907068e-06, 9.125000000054229e-06, 9.26400000000882e-06, 9.638999999950215e-06, 9.16699999997661e-06, 9.111000...</msg>
<status status="PASS" starttime="20201029 18:18:44.327" endtime="20201029 18:18:44.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.347" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:44.345" endtime="20201029 18:18:44.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.353" level="INFO">VALUE: [9.195000000516984e-06, 8.957999999559263e-06, 9.680999999872597e-06, 8.929999999907068e-06, 9.125000000054229e-06, 9.26400000000882e-06, 9.638999999950215e-06, 9.16699999997661e-06, 9.11100000067222e-06, 9.278000000279008e-06, 9.110999999784042e-06, 9.222000000086439e-06, 9.249999999738634e-06, 9.61100000029802e-06, 9.76299999955188e-06, 9.443999999803054e-06, 9.333999999583398e-06, 9.444999999885795e-06, 9.597000000027833e-06, 8.930999999989808e-06, 9.76399999963462e-06, 9.76399999963462e-06, 9.597000000027833e-06, 9.76399999963462e-06, 8.944000000177255e-06, 9.249999999738634e-06, 9.083000000131847e-06, 9.110999999784042e-06, 8.930999999989808e-06, 9.250000000626812e-06, 9.459000000155982e-06, 8.944000000177255e-06, 9.125000000054229e-06, 9.776999999822067e-06, 8.945000000259995e-06, 8.958999999642003e-06, 9.777999999904807e-06, 9.792000000174994e-06, 9.47199999945525e-06, 9.278000000279008e-06, 8.930000000795246e-06, 8.930999999989808e-06, 9.193999999546065e-06, 9.444999999885795e-06, 9.26400000000882e-06, 9.097000000402033e-06, 9.61100000029802e-06, 9.334000000471576e-06, 9.430999999615608e-06, 9.097000000402033e-06, 9.278000000279008e-06, 9.097999999596595e-06, 8.929999999907068e-06, 9.778000000792986e-06, 9.430999999615608e-06, 9.76399999963462e-06, 9.76299999955188e-06, 9.26400000000882e-06, 9.443999999803054e-06, 8.930000000795246e-06, 9.098000000484774e-06, 9.26400000000882e-06, 9.097000000402033e-06, 8.944000000177255e-06]</msg>
<status status="PASS" starttime="20201029 18:18:44.350" endtime="20201029 18:18:44.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.339" endtime="20201029 18:18:44.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.768" endtime="20201029 18:18:44.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.768" endtime="20201029 18:18:44.357"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.378" endtime="20201029 18:18:44.392"></status>
</kw>
<msg timestamp="20201029 18:18:44.393" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.374" endtime="20201029 18:18:44.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.400" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.395" endtime="20201029 18:18:44.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.402" endtime="20201029 18:18:44.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.367" endtime="20201029 18:18:44.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.363" endtime="20201029 18:18:44.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.428" endtime="20201029 18:18:44.794"></status>
</kw>
<msg timestamp="20201029 18:18:44.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.717967708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.717976986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.424" endtime="20201029 18:18:44.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.717967708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.717976986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.806" endtime="20201029 18:18:44.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.828" endtime="20201029 18:18:44.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.417" endtime="20201029 18:18:44.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.411" endtime="20201029 18:18:44.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.847" level="INFO">${RESULT} = [{'diff': 9.278000000279008e-06}, {'diff': 9.097999999596595e-06}, {'diff': 8.929999999907068e-06}, {'diff': 9.778000000792986e-06}, {'diff': 9.430999999615608e-06}, {'diff': 9.76399999963462e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:44.837" endtime="20201029 18:18:44.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:44.858" level="INFO">${OVERHEAD} = {'diff': [9.278000000279008e-06, 9.097999999596595e-06, 8.929999999907068e-06, 9.778000000792986e-06, 9.430999999615608e-06, 9.76399999963462e-06, 9.76299999955188e-06, 9.26400000000882e-06, 9.4439999...</msg>
<status status="PASS" starttime="20201029 18:18:44.849" endtime="20201029 18:18:44.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.868" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:44.866" endtime="20201029 18:18:44.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.874" level="INFO">VALUE: [9.278000000279008e-06, 9.097999999596595e-06, 8.929999999907068e-06, 9.778000000792986e-06, 9.430999999615608e-06, 9.76399999963462e-06, 9.76299999955188e-06, 9.26400000000882e-06, 9.443999999803054e-06, 8.930000000795246e-06, 9.098000000484774e-06, 9.26400000000882e-06, 9.097000000402033e-06, 8.944000000177255e-06, 9.249999999738634e-06, 9.375000000311218e-06, 9.61100000029802e-06, 9.110999999784042e-06, 9.305999999931203e-06, 9.11100000067222e-06, 9.764000000522799e-06, 9.443999999803054e-06, 9.26400000000882e-06, 9.597000000027833e-06, 9.443999999803054e-06, 9.416999999345421e-06, 8.929999999907068e-06, 9.250000000626812e-06, 8.929999999907068e-06, 9.763000000440059e-06, 9.443999999803054e-06, 8.930999999989808e-06, 9.431000000503786e-06, 9.430999999615608e-06, 9.597000000027833e-06, 9.125000000054229e-06, 9.764000000522799e-06, 9.430999999615608e-06, 9.944999999511595e-06, 9.777999999904807e-06, 9.76399999963462e-06, 9.750000000252612e-06, 9.610999999409842e-06, 9.06899999986166e-06, 9.792000000174994e-06, 9.084000000214587e-06, 9.763000000440059e-06, 9.444999999885795e-06, 8.944000000177255e-06, 9.16699999997661e-06, 9.249999999738634e-06, 9.61100000029802e-06, 9.26400000000882e-06, 9.152999999706424e-06, 9.444000000691233e-06, 9.652000000137662e-06, 9.611999999492582e-06, 9.597000000027833e-06, 9.236000000356626e-06, 9.749999999364434e-06, 9.777999999904807e-06, 9.12499999916605e-06, 9.139000000324415e-06, 9.4170000002336e-06]</msg>
<status status="PASS" starttime="20201029 18:18:44.870" endtime="20201029 18:18:44.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.859" endtime="20201029 18:18:44.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.359" endtime="20201029 18:18:44.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.358" endtime="20201029 18:18:44.878"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.899" endtime="20201029 18:18:44.914"></status>
</kw>
<msg timestamp="20201029 18:18:44.915" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.895" endtime="20201029 18:18:44.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.922" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.918" endtime="20201029 18:18:44.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.924" endtime="20201029 18:18:44.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.888" endtime="20201029 18:18:44.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.883" endtime="20201029 18:18:44.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.949" endtime="20201029 18:18:45.326"></status>
</kw>
<msg timestamp="20201029 18:18:45.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.300020861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.300030111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.945" endtime="20201029 18:18:45.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.300020861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.300030111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.337" endtime="20201029 18:18:45.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.360" endtime="20201029 18:18:45.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.938" endtime="20201029 18:18:45.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.933" endtime="20201029 18:18:45.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.378" level="INFO">${RESULT} = [{'diff': 9.249999999738634e-06}, {'diff': 9.61100000029802e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.152999999706424e-06}, {'diff': 9.444000000691233e-06}, {'diff': 9.652000000137662e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:45.369" endtime="20201029 18:18:45.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:45.393" level="INFO">${OVERHEAD} = {'diff': [9.249999999738634e-06, 9.61100000029802e-06, 9.26400000000882e-06, 9.152999999706424e-06, 9.444000000691233e-06, 9.652000000137662e-06, 9.611999999492582e-06, 9.597000000027833e-06, 9.236000...</msg>
<status status="PASS" starttime="20201029 18:18:45.381" endtime="20201029 18:18:45.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.404" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:45.402" endtime="20201029 18:18:45.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.410" level="INFO">VALUE: [9.249999999738634e-06, 9.61100000029802e-06, 9.26400000000882e-06, 9.152999999706424e-06, 9.444000000691233e-06, 9.652000000137662e-06, 9.611999999492582e-06, 9.597000000027833e-06, 9.236000000356626e-06, 9.749999999364434e-06, 9.777999999904807e-06, 9.12499999916605e-06, 9.139000000324415e-06, 9.4170000002336e-06, 9.277000000196267e-06, 8.97199999982945e-06, 9.429999999532868e-06, 9.139000000324415e-06, 9.597000000027833e-06, 9.125000000054229e-06, 9.097999999596595e-06, 9.444999999885795e-06, 9.76399999963462e-06, 9.430000000421046e-06, 9.278000000279008e-06, 8.929999999907068e-06, 9.931000000129586e-06, 9.444999999885795e-06, 8.944000000177255e-06, 9.5699999995702e-06, 9.624999999680028e-06, 9.083000000131847e-06, 9.098000000484774e-06, 9.444999999885795e-06, 9.597000000027833e-06, 8.944000000177255e-06, 9.721999999712239e-06, 9.278000000279008e-06, 9.902999999589213e-06, 9.082999999243668e-06, 9.999999999621423e-06, 9.125000000054229e-06, 9.597000000027833e-06, 9.319000000118649e-06, 9.26299999992608e-06, 9.443999999803054e-06, 8.930999999989808e-06, 9.792000000174994e-06, 9.26400000000882e-06, 9.097000000402033e-06, 9.097000000402033e-06, 9.096999999513855e-06, 9.777999999904807e-06, 9.375000000311218e-06, 9.0699999999444e-06, 9.624999999680028e-06, 9.598000000110574e-06, 8.915999999636881e-06, 9.097000000402033e-06, 9.097000000402033e-06, 9.110999999784042e-06, 9.596999999139655e-06, 8.915999999636881e-06, 9.5699999995702e-06]</msg>
<status status="PASS" starttime="20201029 18:18:45.406" endtime="20201029 18:18:45.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.395" endtime="20201029 18:18:45.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.880" endtime="20201029 18:18:45.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.879" endtime="20201029 18:18:45.414"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.435" endtime="20201029 18:18:45.449"></status>
</kw>
<msg timestamp="20201029 18:18:45.451" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.431" endtime="20201029 18:18:45.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.457" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.453" endtime="20201029 18:18:45.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.460" endtime="20201029 18:18:45.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.424" endtime="20201029 18:18:45.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.419" endtime="20201029 18:18:45.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.485" endtime="20201029 18:18:45.872"></status>
</kw>
<msg timestamp="20201029 18:18:45.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.813370181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.813379278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.482" endtime="20201029 18:18:45.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.813370181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.813379278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.884" endtime="20201029 18:18:45.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.906" endtime="20201029 18:18:45.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.475" endtime="20201029 18:18:45.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.469" endtime="20201029 18:18:45.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.925" level="INFO">${RESULT} = [{'diff': 9.097000000402033e-06}, {'diff': 9.096999999513855e-06}, {'diff': 9.777999999904807e-06}, {'diff': 9.375000000311218e-06}, {'diff': 9.0699999999444e-06}, {'diff': 9.624999999680028e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:45.915" endtime="20201029 18:18:45.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:45.937" level="INFO">${OVERHEAD} = {'diff': [9.097000000402033e-06, 9.096999999513855e-06, 9.777999999904807e-06, 9.375000000311218e-06, 9.0699999999444e-06, 9.624999999680028e-06, 9.598000000110574e-06, 8.915999999636881e-06, 9.097000...</msg>
<status status="PASS" starttime="20201029 18:18:45.927" endtime="20201029 18:18:45.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.948" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:45.945" endtime="20201029 18:18:45.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.954" level="INFO">VALUE: [9.097000000402033e-06, 9.096999999513855e-06, 9.777999999904807e-06, 9.375000000311218e-06, 9.0699999999444e-06, 9.624999999680028e-06, 9.598000000110574e-06, 8.915999999636881e-06, 9.097000000402033e-06, 9.097000000402033e-06, 9.110999999784042e-06, 9.596999999139655e-06, 8.915999999636881e-06, 9.5699999995702e-06, 8.930999999989808e-06, 9.361000000041031e-06, 8.861000000415231e-06, 8.930000000795246e-06, 8.929999999907068e-06, 9.61100000029802e-06, 9.278000000279008e-06, 9.083999999326409e-06, 9.097000000402033e-06, 9.083000000131847e-06, 9.278000000279008e-06, 9.597000000027833e-06, 9.61100000029802e-06, 9.583999999840387e-06, 9.61100000029802e-06, 9.61100000029802e-06, 9.750000000252612e-06, 9.597000000027833e-06, 9.971999999969228e-06, 9.41600000015086e-06, 9.097999999596595e-06, 9.26299999992608e-06, 9.277000000196267e-06, 9.931000000129586e-06, 9.597000000027833e-06, 9.597000000027833e-06, 9.624999999680028e-06, 9.597000000027833e-06, 9.555000000105451e-06, 9.443999999803054e-06, 9.11100000067222e-06, 9.082999999243668e-06, 9.430000000421046e-06, 9.431000000503786e-06, 9.443999999803054e-06, 9.401999999880672e-06, 8.930999999989808e-06, 9.61100000029802e-06, 9.527999999647818e-06, 9.402999999963413e-06, 9.319000000118649e-06, 9.597000000027833e-06, 9.597000000027833e-06, 9.332999999500657e-06, 9.610999999409842e-06, 9.666000000407848e-06, 9.76399999963462e-06, 9.764000000522799e-06, 8.945000000259995e-06, 9.362000000123771e-06]</msg>
<status status="PASS" starttime="20201029 18:18:45.950" endtime="20201029 18:18:45.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.939" endtime="20201029 18:18:45.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.416" endtime="20201029 18:18:45.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.415" endtime="20201029 18:18:45.958"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.979" endtime="20201029 18:18:45.995"></status>
</kw>
<msg timestamp="20201029 18:18:45.996" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.975" endtime="20201029 18:18:45.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.002" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.998" endtime="20201029 18:18:46.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.005" endtime="20201029 18:18:46.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.968" endtime="20201029 18:18:46.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.963" endtime="20201029 18:18:46.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.029" endtime="20201029 18:18:46.432"></status>
</kw>
<msg timestamp="20201029 18:18:46.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.338145694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.338154625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.026" endtime="20201029 18:18:46.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.338145694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.338154625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.443" endtime="20201029 18:18:46.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.466" endtime="20201029 18:18:46.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.018" endtime="20201029 18:18:46.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.014" endtime="20201029 18:18:46.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:46.485" level="INFO">${RESULT} = [{'diff': 8.930999999989808e-06}, {'diff': 9.61100000029802e-06}, {'diff': 9.527999999647818e-06}, {'diff': 9.402999999963413e-06}, {'diff': 9.319000000118649e-06}, {'diff': 9.597000000027833e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:46.475" endtime="20201029 18:18:46.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:46.496" level="INFO">${OVERHEAD} = {'diff': [8.930999999989808e-06, 9.61100000029802e-06, 9.527999999647818e-06, 9.402999999963413e-06, 9.319000000118649e-06, 9.597000000027833e-06, 9.597000000027833e-06, 9.332999999500657e-06, 9.61099...</msg>
<status status="PASS" starttime="20201029 18:18:46.487" endtime="20201029 18:18:46.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.507" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:46.505" endtime="20201029 18:18:46.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.513" level="INFO">VALUE: [8.930999999989808e-06, 9.61100000029802e-06, 9.527999999647818e-06, 9.402999999963413e-06, 9.319000000118649e-06, 9.597000000027833e-06, 9.597000000027833e-06, 9.332999999500657e-06, 9.610999999409842e-06, 9.666000000407848e-06, 9.76399999963462e-06, 9.764000000522799e-06, 8.945000000259995e-06, 9.362000000123771e-06, 9.61100000029802e-06, 9.26400000000882e-06, 9.750000000252612e-06, 8.930999999989808e-06, 9.750000000252612e-06, 9.16599999989387e-06, 9.097000000402033e-06, 8.929999999907068e-06, 9.096999999513855e-06, 9.26400000000882e-06, 9.111999999866782e-06, 9.76299999955188e-06, 9.096999999513855e-06, 9.207999999816252e-06, 9.777999999904807e-06, 9.389000000581404e-06, 9.624999999680028e-06, 9.278000000279008e-06, 9.26400000000882e-06, 8.930999999989808e-06, 9.431000000503786e-06, 8.944000000177255e-06, 9.291999999661016e-06, 9.26400000000882e-06, 9.624999999680028e-06, 9.457999999185063e-06, 9.597000000027833e-06, 9.083000000131847e-06, 9.750000000252612e-06, 9.277000000196267e-06, 9.097000000402033e-06, 9.26400000000882e-06, 9.597000000027833e-06, 9.61100000029802e-06, 9.430999999615608e-06, 9.764000000522799e-06, 9.110999999784042e-06, 9.097000000402033e-06, 9.76399999963462e-06, 9.750000000252612e-06, 9.277999999390829e-06, 9.791000000092254e-06, 9.083000000131847e-06, 9.429999999532868e-06, 9.249999999738634e-06, 9.792000000174994e-06, 9.277000000196267e-06, 9.237000000439366e-06, 9.598000000110574e-06, 9.610999999409842e-06]</msg>
<status status="PASS" starttime="20201029 18:18:46.510" endtime="20201029 18:18:46.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.498" endtime="20201029 18:18:46.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.960" endtime="20201029 18:18:46.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.959" endtime="20201029 18:18:46.518"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.538" endtime="20201029 18:18:46.555"></status>
</kw>
<msg timestamp="20201029 18:18:46.556" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.535" endtime="20201029 18:18:46.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.563" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.559" endtime="20201029 18:18:46.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.566" endtime="20201029 18:18:46.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.527" endtime="20201029 18:18:46.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.523" endtime="20201029 18:18:46.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.590" endtime="20201029 18:18:46.986"></status>
</kw>
<msg timestamp="20201029 18:18:46.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.871211542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.871220653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.586" endtime="20201029 18:18:46.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.871211542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.871220653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.997" endtime="20201029 18:18:47.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.020" endtime="20201029 18:18:47.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.579" endtime="20201029 18:18:47.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.574" endtime="20201029 18:18:47.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.038" level="INFO">${RESULT} = [{'diff': 9.110999999784042e-06}, {'diff': 9.097000000402033e-06}, {'diff': 9.76399999963462e-06}, {'diff': 9.750000000252612e-06}, {'diff': 9.277999999390829e-06}, {'diff': 9.791000000092254e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:47.028" endtime="20201029 18:18:47.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:47.049" level="INFO">${OVERHEAD} = {'diff': [9.110999999784042e-06, 9.097000000402033e-06, 9.76399999963462e-06, 9.750000000252612e-06, 9.277999999390829e-06, 9.791000000092254e-06, 9.083000000131847e-06, 9.429999999532868e-06, 9.24999...</msg>
<status status="PASS" starttime="20201029 18:18:47.040" endtime="20201029 18:18:47.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.060" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:47.057" endtime="20201029 18:18:47.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.065" level="INFO">VALUE: [9.110999999784042e-06, 9.097000000402033e-06, 9.76399999963462e-06, 9.750000000252612e-06, 9.277999999390829e-06, 9.791000000092254e-06, 9.083000000131847e-06, 9.429999999532868e-06, 9.249999999738634e-06, 9.792000000174994e-06, 9.277000000196267e-06, 9.237000000439366e-06, 9.598000000110574e-06, 9.610999999409842e-06, 9.777999999016629e-06, 9.416999999345421e-06, 9.097999999596595e-06, 9.638999999950215e-06, 8.944999999371817e-06, 9.472000000343428e-06, 9.778000000792986e-06, 9.11100000067222e-06, 8.958000000447441e-06, 9.125000000054229e-06, 8.943999999289076e-06, 9.11100000067222e-06, 9.527000001341435e-06, 9.431000000503786e-06, 9.777000000710245e-06, 9.610999999409842e-06, 9.778000000792986e-06, 9.750000000252612e-06, 9.444000001579411e-06, 9.443999999803054e-06, 8.930999999989808e-06, 9.11100000067222e-06, 9.430000000421046e-06, 9.777999999016629e-06, 9.777999999016629e-06, 9.278000000279008e-06, 8.9170000006078e-06, 9.278000000279008e-06, 9.597000000027833e-06, 9.610999999409842e-06, 9.43099999872743e-06, 9.083000000131847e-06, 8.943999999289076e-06, 9.666999998714232e-06, 9.416999999345421e-06, 9.610999999409842e-06, 9.236000000356626e-06, 9.096999999513855e-06, 9.43099999872743e-06, 9.37499999942304e-06, 9.263999999120642e-06, 9.401999999880672e-06, 9.777999999016629e-06, 8.958000000447441e-06, 9.444999999885795e-06, 9.431000000503786e-06, 9.778000000792986e-06, 9.291999999661016e-06, 9.611000001186198e-06, 9.278000000279008e-06]</msg>
<status status="PASS" starttime="20201029 18:18:47.062" endtime="20201029 18:18:47.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.051" endtime="20201029 18:18:47.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.519" endtime="20201029 18:18:47.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.518" endtime="20201029 18:18:47.070"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.090" endtime="20201029 18:18:47.102"></status>
</kw>
<msg timestamp="20201029 18:18:47.103" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.086" endtime="20201029 18:18:47.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.110" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.105" endtime="20201029 18:18:47.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.112" endtime="20201029 18:18:47.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.079" endtime="20201029 18:18:47.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.075" endtime="20201029 18:18:47.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.136" endtime="20201029 18:18:47.513"></status>
</kw>
<msg timestamp="20201029 18:18:47.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.421990889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.422000125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.132" endtime="20201029 18:18:47.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.421990889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.422000125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.524" endtime="20201029 18:18:47.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.547" endtime="20201029 18:18:47.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.125" endtime="20201029 18:18:47.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.121" endtime="20201029 18:18:47.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.565" level="INFO">${RESULT} = [{'diff': 9.236000000356626e-06}, {'diff': 9.096999999513855e-06}, {'diff': 9.43099999872743e-06}, {'diff': 9.37499999942304e-06}, {'diff': 9.263999999120642e-06}, {'diff': 9.401999999880672e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:47.555" endtime="20201029 18:18:47.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:47.577" level="INFO">${OVERHEAD} = {'diff': [9.236000000356626e-06, 9.096999999513855e-06, 9.43099999872743e-06, 9.37499999942304e-06, 9.263999999120642e-06, 9.401999999880672e-06, 9.777999999016629e-06, 8.958000000447441e-06, 9.444999...</msg>
<status status="PASS" starttime="20201029 18:18:47.567" endtime="20201029 18:18:47.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.587" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:47.585" endtime="20201029 18:18:47.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.593" level="INFO">VALUE: [9.236000000356626e-06, 9.096999999513855e-06, 9.43099999872743e-06, 9.37499999942304e-06, 9.263999999120642e-06, 9.401999999880672e-06, 9.777999999016629e-06, 8.958000000447441e-06, 9.444999999885795e-06, 9.431000000503786e-06, 9.778000000792986e-06, 9.291999999661016e-06, 9.611000001186198e-06, 9.278000000279008e-06, 9.402999999963413e-06, 9.638999999950215e-06, 9.597000000027833e-06, 8.930999999989808e-06, 9.791000000092254e-06, 9.625000000568207e-06, 9.41599999926268e-06, 9.111999998978604e-06, 9.443999999803054e-06, 9.959000001558138e-06, 9.362000000123771e-06, 9.110999998895863e-06, 9.444999999885795e-06, 9.638999999950215e-06, 8.930999999989808e-06, 9.11100000067222e-06, 9.778000000792986e-06, 9.417000001121778e-06, 9.597000000027833e-06, 9.750000000252612e-06, 8.959000000530182e-06, 8.930999999989808e-06, 9.110999998895863e-06, 9.777999999016629e-06, 9.792000000174994e-06, 9.096999999513855e-06, 9.610999999409842e-06, 9.263999999120642e-06, 9.776999998933888e-06, 9.76399999963462e-06, 9.249999999738634e-06, 8.929999999907068e-06, 9.45900000104416e-06, 9.76399999963462e-06, 9.097999999596595e-06, 9.083000000131847e-06, 9.944000000317033e-06, 9.443999999803054e-06, 9.264000000897e-06, 9.402999999963413e-06, 9.416999999345421e-06, 9.777999999016629e-06, 9.263999999120642e-06, 9.443999999803054e-06, 9.597000000027833e-06, 9.083000000131847e-06, 9.11100000067222e-06, 9.76399999963462e-06, 9.42999999864469e-06, 9.11100000067222e-06]</msg>
<status status="PASS" starttime="20201029 18:18:47.589" endtime="20201029 18:18:47.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.579" endtime="20201029 18:18:47.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.071" endtime="20201029 18:18:47.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.070" endtime="20201029 18:18:47.597"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.617" endtime="20201029 18:18:47.630"></status>
</kw>
<msg timestamp="20201029 18:18:47.631" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.613" endtime="20201029 18:18:47.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.638" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.634" endtime="20201029 18:18:47.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.640" endtime="20201029 18:18:47.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.606" endtime="20201029 18:18:47.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.602" endtime="20201029 18:18:47.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.663" endtime="20201029 18:18:48.051"></status>
</kw>
<msg timestamp="20201029 18:18:48.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.963982375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.963992319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.660" endtime="20201029 18:18:48.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.963982375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.963992319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.062" endtime="20201029 18:18:48.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.084" endtime="20201029 18:18:48.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.653" endtime="20201029 18:18:48.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.648" endtime="20201029 18:18:48.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.101" level="INFO">${RESULT} = [{'diff': 9.944000000317033e-06}, {'diff': 9.443999999803054e-06}, {'diff': 9.264000000897e-06}, {'diff': 9.402999999963413e-06}, {'diff': 9.416999999345421e-06}, {'diff': 9.777999999016629e-06}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:48.092" endtime="20201029 18:18:48.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:48.112" level="INFO">${OVERHEAD} = {'diff': [9.944000000317033e-06, 9.443999999803054e-06, 9.264000000897e-06, 9.402999999963413e-06, 9.416999999345421e-06, 9.777999999016629e-06, 9.263999999120642e-06, 9.443999999803054e-06, 9.5970000...</msg>
<status status="PASS" starttime="20201029 18:18:48.103" endtime="20201029 18:18:48.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.122" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:48.120" endtime="20201029 18:18:48.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.127" level="INFO">VALUE: [9.944000000317033e-06, 9.443999999803054e-06, 9.264000000897e-06, 9.402999999963413e-06, 9.416999999345421e-06, 9.777999999016629e-06, 9.263999999120642e-06, 9.443999999803054e-06, 9.597000000027833e-06, 9.083000000131847e-06, 9.11100000067222e-06, 9.76399999963462e-06, 9.42999999864469e-06, 9.11100000067222e-06, 8.97299999991219e-06, 9.76399999963462e-06, 9.458999999267803e-06, 9.181000001134976e-06, 9.277000000196267e-06, 8.959000000530182e-06, 9.138999999436237e-06, 9.472000000343428e-06, 9.096999999513855e-06, 9.305999999043024e-06, 8.930999999989808e-06, 9.597000000027833e-06, 9.263999999120642e-06, 9.569000001263817e-06, 9.042000000292205e-06, 9.444999999885795e-06, 9.76399999963462e-06, 9.11100000067222e-06, 9.097999999596595e-06, 9.41599999926268e-06, 9.278000000279008e-06, 9.430000000421046e-06, 9.444999999885795e-06, 9.76399999963462e-06, 8.944999999371817e-06, 9.76399999963462e-06, 9.76399999963462e-06, 9.332999999500657e-06, 9.792000000174994e-06, 9.096999999513855e-06, 9.833000000014636e-06, 9.264000000897e-06, 9.638999999950215e-06, 9.097000001290212e-06, 9.097999999596595e-06, 9.277000000196267e-06, 9.263999999120642e-06, 9.776999998933888e-06, 8.930999999989808e-06, 9.264000000897e-06, 9.264000000897e-06, 8.944000001065433e-06, 9.264000000897e-06, 9.444000001579411e-06, 9.152999998818245e-06, 9.11100000067222e-06, 9.597000000027833e-06, 9.430000000421046e-06, 8.958000000447441e-06, 9.929999999158667e-06]</msg>
<status status="PASS" starttime="20201029 18:18:48.124" endtime="20201029 18:18:48.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.114" endtime="20201029 18:18:48.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.599" endtime="20201029 18:18:48.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.598" endtime="20201029 18:18:48.132"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.152" endtime="20201029 18:18:48.166"></status>
</kw>
<msg timestamp="20201029 18:18:48.168" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.148" endtime="20201029 18:18:48.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.174" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.170" endtime="20201029 18:18:48.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.177" endtime="20201029 18:18:48.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.141" endtime="20201029 18:18:48.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.136" endtime="20201029 18:18:48.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.199" endtime="20201029 18:18:48.578"></status>
</kw>
<msg timestamp="20201029 18:18:48.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.481831542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.481840806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.196" endtime="20201029 18:18:48.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.481831542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.481840806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.589" endtime="20201029 18:18:48.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.611" endtime="20201029 18:18:48.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.189" endtime="20201029 18:18:48.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.185" endtime="20201029 18:18:48.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.629" level="INFO">${RESULT} = [{'diff': 9.263999999120642e-06}, {'diff': 9.776999998933888e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.264000000897e-06}, {'diff': 9.264000000897e-06}, {'diff': 8.944000001065433e-06}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:18:48.620" endtime="20201029 18:18:48.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:48.641" level="INFO">${OVERHEAD} = {'diff': [9.263999999120642e-06, 9.776999998933888e-06, 8.930999999989808e-06, 9.264000000897e-06, 9.264000000897e-06, 8.944000001065433e-06, 9.264000000897e-06, 9.444000001579411e-06, 9.1529999988182...</msg>
<status status="PASS" starttime="20201029 18:18:48.631" endtime="20201029 18:18:48.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.651" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:48.649" endtime="20201029 18:18:48.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.656" level="INFO">VALUE: [9.263999999120642e-06, 9.776999998933888e-06, 8.930999999989808e-06, 9.264000000897e-06, 9.264000000897e-06, 8.944000001065433e-06, 9.264000000897e-06, 9.444000001579411e-06, 9.152999998818245e-06, 9.11100000067222e-06, 9.597000000027833e-06, 9.430000000421046e-06, 8.958000000447441e-06, 9.929999999158667e-06, 9.735999999094247e-06, 9.791000000092254e-06, 9.110999998895863e-06, 9.443999999803054e-06, 8.959000000530182e-06, 8.915999998748703e-06, 9.431000000503786e-06, 9.804999999474262e-06, 9.263000000814259e-06, 9.597000000027833e-06, 9.80600000133336e-06, 9.443999999803054e-06, 9.597000000027833e-06, 9.125000000054229e-06, 8.930999999989808e-06, 9.958000001475398e-06, 8.944999999371817e-06, 9.375000001199396e-06, 9.278000000279008e-06, 9.76299999955188e-06, 9.444999999885795e-06, 9.778000000792986e-06, 9.083000000131847e-06, 9.151999998735505e-06, 9.110999998895863e-06, 9.263999999120642e-06, 9.152999998818245e-06, 8.91600000052506e-06, 9.11100000067222e-06, 9.444999999885795e-06, 9.361000000041031e-06, 9.930000000935024e-06, 9.263999999120642e-06, 9.179999999275879e-06, 9.791000000092254e-06, 9.430000000421046e-06, 9.722000001488595e-06, 8.945000001148173e-06, 9.11100000067222e-06, 9.722999999794979e-06, 9.598000000110574e-06, 9.262999999037902e-06, 9.444999999885795e-06, 9.263999999120642e-06, 9.097000001290212e-06, 9.097999999596595e-06, 9.610999999409842e-06, 9.402999999963413e-06, 9.43099999872743e-06, 9.444999999885795e-06]</msg>
<status status="PASS" starttime="20201029 18:18:48.653" endtime="20201029 18:18:48.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.643" endtime="20201029 18:18:48.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.133" endtime="20201029 18:18:48.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.132" endtime="20201029 18:18:48.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.058" endtime="20201029 18:18:48.661"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:37.935" endtime="20201029 18:18:48.663" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.680" endtime="20201029 18:18:48.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.676" endtime="20201029 18:18:48.704"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.736" endtime="20201029 18:18:48.751"></status>
</kw>
<msg timestamp="20201029 18:18:48.752" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.733" endtime="20201029 18:18:48.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.759" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.755" endtime="20201029 18:18:48.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.771" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:48.762" endtime="20201029 18:18:48.772"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:48.726" endtime="20201029 18:18:48.775"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:48.719" endtime="20201029 18:18:48.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.717" endtime="20201029 18:18:48.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:48.790" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:48.787" endtime="20201029 18:18:48.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.781" endtime="20201029 18:18:48.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.715" endtime="20201029 18:18:48.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.713" endtime="20201029 18:18:48.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.796" endtime="20201029 18:18:48.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.709" endtime="20201029 18:18:48.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.705" endtime="20201029 18:18:48.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.673" endtime="20201029 18:18:48.806"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.832" endtime="20201029 18:18:48.860"></status>
</kw>
<msg timestamp="20201029 18:18:48.861" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.828" endtime="20201029 18:18:48.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.867" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.863" endtime="20201029 18:18:48.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.870" endtime="20201029 18:18:48.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.819" endtime="20201029 18:18:48.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.813" endtime="20201029 18:18:48.877"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.881" endtime="20201029 18:18:48.886"></status>
</kw>
<msg timestamp="20201029 18:18:48.887" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:48.878" endtime="20201029 18:18:48.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.898" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:48.895" endtime="20201029 18:18:48.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.903" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:48.901" endtime="20201029 18:18:48.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.889" endtime="20201029 18:18:48.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.915" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:48.913" endtime="20201029 18:18:48.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.920" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:48.917" endtime="20201029 18:18:48.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.907" endtime="20201029 18:18:48.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.939" endtime="20201029 18:18:49.311"></status>
</kw>
<msg timestamp="20201029 18:18:49.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143628458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143651653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.935" endtime="20201029 18:18:49.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143628458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143651653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.321" endtime="20201029 18:18:49.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.340" endtime="20201029 18:18:49.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.928" endtime="20201029 18:18:49.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.923" endtime="20201029 18:18:49.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.357" level="INFO">${RESULT} = [{'diff': 2.319500000000363e-05}, {'diff': 2.484800000002174e-05}, {'diff': 2.5680000000000147e-05}, {'diff': 2.459700000001508e-05}, {'diff': 2.4943999999998967e-05}, {'diff': 2.5332999999988504e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:49.348" endtime="20201029 18:18:49.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:49.368" level="INFO">${OVERHEAD} = {'diff': [2.319500000000363e-05, 2.484800000002174e-05, 2.5680000000000147e-05, 2.459700000001508e-05, 2.4943999999998967e-05, 2.5332999999988504e-05, 2.5028000000010264e-05, 2.5471999999998607e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:49.360" endtime="20201029 18:18:49.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.380" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:18:49.378" endtime="20201029 18:18:49.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.385" level="INFO">VALUE: [2.319500000000363e-05, 2.484800000002174e-05, 2.5680000000000147e-05, 2.459700000001508e-05, 2.4943999999998967e-05, 2.5332999999988504e-05, 2.5028000000010264e-05, 2.5471999999998607e-05, 2.48610000000149e-05, 2.481999999998097e-05, 2.483300000000188e-05, 2.534700000000889e-05, 2.4930999999978054e-05, 2.449999999998287e-05, 2.4652999999985603e-05, 2.4834000000001355e-05, 2.5652999999986603e-05, 2.4208000000025542e-05, 2.4791999999995706e-05, 2.5165999999993138e-05, 2.5334000000015733e-05, 2.4847000000022268e-05, 2.5514000000004255e-05, 2.4847999999993986e-05, 2.536100000000152e-05, 2.48610000000149e-05, 2.4679999999999147e-05, 2.4167000000019367e-05, 2.4791999999995706e-05, 2.449999999998287e-05, 2.4485999999990238e-05, 2.4222000000018173e-05, 2.5013999999989878e-05, 2.4333999999986977e-05, 2.5332999999988504e-05, 2.4999999999997247e-05, 2.513900000000735e-05, 2.504100000000342e-05, 2.5332999999988504e-05, 2.5583999999995166e-05, 2.4181000000012e-05, 2.483300000000188e-05, 2.4846999999994512e-05, 2.4986000000004616e-05, 2.484800000002174e-05, 2.5638999999993972e-05, 2.4318999999994872e-05, 2.5180999999985243e-05, 2.549999999998387e-05, 2.468099999999862e-05]</msg>
<status status="PASS" starttime="20201029 18:18:49.382" endtime="20201029 18:18:49.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.370" endtime="20201029 18:18:49.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.807" endtime="20201029 18:18:49.389"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:48.667" endtime="20201029 18:18:49.391" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.408" endtime="20201029 18:18:49.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.405" endtime="20201029 18:18:49.433"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.468" endtime="20201029 18:18:49.488"></status>
</kw>
<msg timestamp="20201029 18:18:49.489" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.465" endtime="20201029 18:18:49.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.495" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.491" endtime="20201029 18:18:49.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.502" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:49.498" endtime="20201029 18:18:49.503"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:49.458" endtime="20201029 18:18:49.505"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:49.451" endtime="20201029 18:18:49.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.448" endtime="20201029 18:18:49.507"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:49.515" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:49.514" endtime="20201029 18:18:49.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.509" endtime="20201029 18:18:49.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.446" endtime="20201029 18:18:49.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.445" endtime="20201029 18:18:49.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.519" endtime="20201029 18:18:49.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.441" endtime="20201029 18:18:49.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.435" endtime="20201029 18:18:49.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.402" endtime="20201029 18:18:49.526"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.551" endtime="20201029 18:18:49.637"></status>
</kw>
<msg timestamp="20201029 18:18:49.638" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.547" endtime="20201029 18:18:49.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.644" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.640" endtime="20201029 18:18:49.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.647" endtime="20201029 18:18:49.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.540" endtime="20201029 18:18:49.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.532" endtime="20201029 18:18:49.654"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.658" endtime="20201029 18:18:49.663"></status>
</kw>
<msg timestamp="20201029 18:18:49.664" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:49.656" endtime="20201029 18:18:49.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.674" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:49.672" endtime="20201029 18:18:49.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.680" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:49.677" endtime="20201029 18:18:49.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.666" endtime="20201029 18:18:49.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.692" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:49.690" endtime="20201029 18:18:49.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.696" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:49.694" endtime="20201029 18:18:49.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.684" endtime="20201029 18:18:49.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.716" endtime="20201029 18:18:50.080"></status>
</kw>
<msg timestamp="20201029 18:18:50.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135258375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135283569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.712" endtime="20201029 18:18:50.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135258375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135283569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.091" endtime="20201029 18:18:50.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.113" endtime="20201029 18:18:50.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.705" endtime="20201029 18:18:50.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.700" endtime="20201029 18:18:50.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.134" level="INFO">${RESULT} = [{'diff': 2.5194000000006156e-05}, {'diff': 3.430599999998396e-05}, {'diff': 3.42779999999987e-05}, {'diff': 3.431900000000487e-05}, {'diff': 3.415300000000898e-05}, {'diff': 3.4124999999995964e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:50.123" endtime="20201029 18:18:50.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:50.148" level="INFO">${OVERHEAD} = {'diff': [2.5194000000006156e-05, 3.430599999998396e-05, 3.42779999999987e-05, 3.431900000000487e-05, 3.415300000000898e-05, 3.4124999999995964e-05, 3.415200000000951e-05, 3.4124999999995964e-05, 3.41...</msg>
<status status="PASS" starttime="20201029 18:18:50.137" endtime="20201029 18:18:50.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.160" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:18:50.157" endtime="20201029 18:18:50.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.165" level="INFO">VALUE: [2.5194000000006156e-05, 3.430599999998396e-05, 3.42779999999987e-05, 3.431900000000487e-05, 3.415300000000898e-05, 3.4124999999995964e-05, 3.415200000000951e-05, 3.4124999999995964e-05, 3.4138999999988595e-05, 3.4152999999981226e-05, 3.415300000000898e-05, 3.4306000000011716e-05, 3.4138999999988595e-05, 3.413900000001635e-05, 3.4138999999988595e-05, 3.415200000000951e-05, 3.415200000000951e-05, 3.415300000000898e-05, 3.41939999999874e-05, 3.413900000001635e-05, 3.415300000000898e-05, 3.4152999999981226e-05, 3.4138999999988595e-05, 3.4138999999988595e-05, 3.4290999999991856e-05, 3.4082999999990315e-05, 3.4138999999988595e-05, 3.416700000000161e-05, 3.415300000000898e-05, 3.4096999999982947e-05, 3.415300000000898e-05, 3.4180999999994244e-05, 3.431900000000487e-05, 3.432000000000435e-05, 3.416700000000161e-05, 3.415300000000898e-05, 3.431899999997712e-05, 3.4334000000024734e-05, 3.42779999999987e-05, 3.430499999998449e-05, 3.430499999998449e-05, 3.4194999999986875e-05, 3.432000000000435e-05, 3.431900000000487e-05, 3.4124999999995964e-05, 3.4138999999988595e-05, 3.416600000000214e-05, 3.411199999997505e-05, 3.4138999999988595e-05, 3.416700000000161e-05]</msg>
<status status="PASS" starttime="20201029 18:18:50.162" endtime="20201029 18:18:50.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.150" endtime="20201029 18:18:50.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.527" endtime="20201029 18:18:50.169"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:49.395" endtime="20201029 18:18:50.171" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.188" endtime="20201029 18:18:50.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.185" endtime="20201029 18:18:50.212"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.247" endtime="20201029 18:18:50.268"></status>
</kw>
<msg timestamp="20201029 18:18:50.269" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.243" endtime="20201029 18:18:50.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.276" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.271" endtime="20201029 18:18:50.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.282" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:50.278" endtime="20201029 18:18:50.283"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:50.236" endtime="20201029 18:18:50.285"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:50.229" endtime="20201029 18:18:50.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.227" endtime="20201029 18:18:50.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:50.295" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:50.294" endtime="20201029 18:18:50.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.289" endtime="20201029 18:18:50.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.225" endtime="20201029 18:18:50.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.223" endtime="20201029 18:18:50.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.301" endtime="20201029 18:18:50.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.218" endtime="20201029 18:18:50.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.214" endtime="20201029 18:18:50.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.182" endtime="20201029 18:18:50.308"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.330" endtime="20201029 18:18:50.530"></status>
</kw>
<msg timestamp="20201029 18:18:50.531" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.327" endtime="20201029 18:18:50.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.537" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.533" endtime="20201029 18:18:50.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.540" endtime="20201029 18:18:50.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.320" endtime="20201029 18:18:50.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.314" endtime="20201029 18:18:50.547"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.551" endtime="20201029 18:18:50.556"></status>
</kw>
<msg timestamp="20201029 18:18:50.557" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:50.548" endtime="20201029 18:18:50.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.567" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:50.565" endtime="20201029 18:18:50.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.572" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:50.570" endtime="20201029 18:18:50.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.559" endtime="20201029 18:18:50.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.585" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:50.583" endtime="20201029 18:18:50.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.590" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:50.587" endtime="20201029 18:18:50.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.577" endtime="20201029 18:18:50.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.609" endtime="20201029 18:18:50.990"></status>
</kw>
<msg timestamp="20201029 18:18:50.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136167944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136205278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.605" endtime="20201029 18:18:50.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136167944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136205278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.999" endtime="20201029 18:18:51.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.017" endtime="20201029 18:18:51.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.598" endtime="20201029 18:18:51.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.593" endtime="20201029 18:18:51.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.034" level="INFO">${RESULT} = [{'diff': 3.733399999999998e-05}, {'diff': 5.534800000001061e-05}, {'diff': 5.440200000000894e-05}, {'diff': 5.534700000001114e-05}, {'diff': 5.515299999997447e-05}, {'diff': 5.516699999999486e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:51.026" endtime="20201029 18:18:51.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:51.049" level="INFO">${OVERHEAD} = {'diff': [3.733399999999998e-05, 5.534800000001061e-05, 5.440200000000894e-05, 5.534700000001114e-05, 5.515299999997447e-05, 5.516699999999486e-05, 5.5237000000013525e-05, 5.519499999998012e-05, 5.520...</msg>
<status status="PASS" starttime="20201029 18:18:51.036" endtime="20201029 18:18:51.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.060" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:18:51.058" endtime="20201029 18:18:51.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.065" level="INFO">VALUE: [3.733399999999998e-05, 5.534800000001061e-05, 5.440200000000894e-05, 5.534700000001114e-05, 5.515299999997447e-05, 5.516699999999486e-05, 5.5237000000013525e-05, 5.519499999998012e-05, 5.5208000000001034e-05, 5.536099999997601e-05, 5.516699999999486e-05, 5.519500000000788e-05, 5.433299999998975e-05, 5.51940000000084e-05, 5.430500000000449e-05, 5.436100000000277e-05, 5.51940000000084e-05, 5.518000000001577e-05, 5.515300000000223e-05, 5.51390000000096e-05, 5.5165999999995385e-05, 5.536200000000324e-05, 5.51940000000084e-05, 5.5235999999986296e-05, 5.51390000000096e-05, 5.532000000002535e-05, 5.433299999998975e-05, 5.5167000000022615e-05, 5.434700000001014e-05, 5.515300000000223e-05, 5.5179999999988016e-05, 5.5181000000015246e-05, 5.519500000000788e-05, 5.5374999999968644e-05, 5.5194999999952365e-05, 5.424999999997793e-05, 5.509700000000395e-05, 5.5166999999967103e-05, 5.5181000000015246e-05, 5.519399999998065e-05, 5.5375000000024155e-05, 5.5153000000029984e-05, 5.536200000000324e-05, 5.5165999999995385e-05, 5.513800000001012e-05, 5.42780000000187e-05, 5.5180999999959734e-05, 5.5167000000022615e-05, 5.5166999999967103e-05, 5.434700000001014e-05]</msg>
<status status="PASS" starttime="20201029 18:18:51.062" endtime="20201029 18:18:51.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.051" endtime="20201029 18:18:51.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.309" endtime="20201029 18:18:51.069"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:50.175" endtime="20201029 18:18:51.071" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.088" endtime="20201029 18:18:51.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.084" endtime="20201029 18:18:51.111"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.156" endtime="20201029 18:18:51.180"></status>
</kw>
<msg timestamp="20201029 18:18:51.181" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.150" endtime="20201029 18:18:51.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.188" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.183" endtime="20201029 18:18:51.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.195" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:51.190" endtime="20201029 18:18:51.196"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:51.141" endtime="20201029 18:18:51.198"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:51.131" endtime="20201029 18:18:51.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.127" endtime="20201029 18:18:51.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:51.208" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:51.207" endtime="20201029 18:18:51.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.202" endtime="20201029 18:18:51.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.123" endtime="20201029 18:18:51.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.121" endtime="20201029 18:18:51.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.212" endtime="20201029 18:18:51.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.117" endtime="20201029 18:18:51.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.113" endtime="20201029 18:18:51.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.082" endtime="20201029 18:18:51.219"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.241" endtime="20201029 18:18:51.264"></status>
</kw>
<msg timestamp="20201029 18:18:51.265" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.238" endtime="20201029 18:18:51.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.272" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.267" endtime="20201029 18:18:51.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.274" endtime="20201029 18:18:51.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.231" endtime="20201029 18:18:51.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.225" endtime="20201029 18:18:51.281"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.285" endtime="20201029 18:18:51.290"></status>
</kw>
<msg timestamp="20201029 18:18:51.291" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:51.283" endtime="20201029 18:18:51.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.301" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:51.299" endtime="20201029 18:18:51.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.306" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:51.303" endtime="20201029 18:18:51.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.293" endtime="20201029 18:18:51.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.318" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:51.316" endtime="20201029 18:18:51.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.323" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:51.321" endtime="20201029 18:18:51.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.310" endtime="20201029 18:18:51.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.342" endtime="20201029 18:18:51.723"></status>
</kw>
<msg timestamp="20201029 18:18:51.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.145726819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.14575175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:51.338" endtime="20201029 18:18:51.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.145726819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.14575175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:51.733" endtime="20201029 18:18:51.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.753" endtime="20201029 18:18:51.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.331" endtime="20201029 18:18:51.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.326" endtime="20201029 18:18:51.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.770" level="INFO">${RESULT} = [{'diff': 2.493100000000581e-05}, {'diff': 2.497199999998423e-05}, {'diff': 2.5013999999989878e-05}, {'diff': 2.4972000000011985e-05}, {'diff': 2.5999999999998247e-05}, {'diff': 2.588900000000116e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:51.761" endtime="20201029 18:18:51.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:51.781" level="INFO">${OVERHEAD} = {'diff': [2.493100000000581e-05, 2.497199999998423e-05, 2.5013999999989878e-05, 2.4972000000011985e-05, 2.5999999999998247e-05, 2.588900000000116e-05, 2.5820000000009724e-05, 2.4986000000004616e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:51.772" endtime="20201029 18:18:51.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.802" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:18:51.797" endtime="20201029 18:18:51.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.809" level="INFO">VALUE: [2.493100000000581e-05, 2.497199999998423e-05, 2.5013999999989878e-05, 2.4972000000011985e-05, 2.5999999999998247e-05, 2.588900000000116e-05, 2.5820000000009724e-05, 2.4986000000004616e-05, 2.576399999998369e-05, 2.488900000000016e-05, 2.4943999999998967e-05, 2.5862000000015373e-05, 2.583300000000288e-05, 2.5846999999995512e-05, 2.5916999999986423e-05, 2.6013999999990878e-05, 2.5846999999995512e-05, 2.4973000000011458e-05, 2.588900000000116e-05, 2.5943999999999967e-05, 2.5986000000005616e-05, 2.594499999999944e-05, 2.5902999999993792e-05, 2.5861999999987617e-05, 2.4972000000011985e-05, 2.587500000000853e-05, 2.588900000000116e-05, 2.5903000000021548e-05, 2.5930999999979054e-05, 2.587500000000853e-05, 2.5834000000002355e-05, 2.587500000000853e-05, 2.5847999999994986e-05, 2.4958000000019354e-05, 2.5860999999988143e-05, 2.583300000000288e-05, 2.588900000000116e-05, 2.5902999999993792e-05, 2.587500000000853e-05, 2.4972999999983703e-05, 2.5902999999993792e-05, 2.591700000001418e-05, 2.5902999999993792e-05, 2.594499999999944e-05, 2.5930000000007336e-05, 2.587500000000853e-05, 2.591700000001418e-05, 2.5930000000007336e-05, 2.5834000000002355e-05, 2.5903000000021548e-05]</msg>
<status status="PASS" starttime="20201029 18:18:51.804" endtime="20201029 18:18:51.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.784" endtime="20201029 18:18:51.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.220" endtime="20201029 18:18:51.817"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:51.075" endtime="20201029 18:18:51.819" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.840" endtime="20201029 18:18:51.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.837" endtime="20201029 18:18:51.864"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.899" endtime="20201029 18:18:51.914"></status>
</kw>
<msg timestamp="20201029 18:18:51.916" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.896" endtime="20201029 18:18:51.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.918" endtime="20201029 18:18:51.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.928" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:51.924" endtime="20201029 18:18:51.929"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:51.888" endtime="20201029 18:18:51.931"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:51.881" endtime="20201029 18:18:51.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.877" endtime="20201029 18:18:51.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:51.941" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:51.940" endtime="20201029 18:18:51.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.935" endtime="20201029 18:18:51.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.875" endtime="20201029 18:18:51.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.874" endtime="20201029 18:18:51.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.945" endtime="20201029 18:18:51.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.870" endtime="20201029 18:18:51.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.865" endtime="20201029 18:18:51.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.834" endtime="20201029 18:18:51.952"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.974" endtime="20201029 18:18:52.057"></status>
</kw>
<msg timestamp="20201029 18:18:52.058" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.970" endtime="20201029 18:18:52.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.064" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.060" endtime="20201029 18:18:52.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.066" endtime="20201029 18:18:52.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.963" endtime="20201029 18:18:52.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.957" endtime="20201029 18:18:52.073"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.078" endtime="20201029 18:18:52.082"></status>
</kw>
<msg timestamp="20201029 18:18:52.083" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:52.075" endtime="20201029 18:18:52.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.093" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:52.091" endtime="20201029 18:18:52.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.097" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:52.095" endtime="20201029 18:18:52.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.085" endtime="20201029 18:18:52.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.110" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:52.108" endtime="20201029 18:18:52.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.115" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:52.112" endtime="20201029 18:18:52.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.101" endtime="20201029 18:18:52.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.135" endtime="20201029 18:18:52.501"></status>
</kw>
<msg timestamp="20201029 18:18:52.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126523111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126554639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.132" endtime="20201029 18:18:52.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126523111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126554639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.513" endtime="20201029 18:18:52.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.534" endtime="20201029 18:18:52.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.123" endtime="20201029 18:18:52.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.118" endtime="20201029 18:18:52.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.557" level="INFO">${RESULT} = [{'diff': 3.152800000000289e-05}, {'diff': 3.1388999999992784e-05}, {'diff': 3.1554999999988675e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.142999999999896e-05}, {'diff': 3.144399999999159e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:52.546" endtime="20201029 18:18:52.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:52.566" level="INFO">${OVERHEAD} = {'diff': [3.152800000000289e-05, 3.1388999999992784e-05, 3.1554999999988675e-05, 3.137500000000015e-05, 3.142999999999896e-05, 3.144399999999159e-05, 3.1527000000003413e-05, 3.1388999999992784e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:18:52.559" endtime="20201029 18:18:52.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.577" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:18:52.575" endtime="20201029 18:18:52.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.583" level="INFO">VALUE: [3.152800000000289e-05, 3.1388999999992784e-05, 3.1554999999988675e-05, 3.137500000000015e-05, 3.142999999999896e-05, 3.144399999999159e-05, 3.1527000000003413e-05, 3.1388999999992784e-05, 3.138799999999331e-05, 3.1332999999994504e-05, 3.154199999999552e-05, 3.137500000000015e-05, 3.152800000000289e-05, 3.1388999999992784e-05, 3.134799999998661e-05, 3.1388999999992784e-05, 3.1332999999994504e-05, 3.137500000000015e-05, 3.152800000000289e-05, 3.133300000002226e-05, 3.137500000000015e-05, 3.1596999999994324e-05, 3.1388999999992784e-05, 3.1362000000006995e-05, 3.134799999998661e-05, 3.147200000000461e-05, 3.154199999999552e-05, 3.137500000000015e-05, 3.154199999999552e-05, 3.1570000000008536e-05, 3.1332999999994504e-05, 3.154199999999552e-05, 3.158400000000117e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.1346999999987135e-05, 3.154199999999552e-05, 3.1360999999979766e-05, 3.1348000000014364e-05, 3.1540999999996044e-05, 3.137500000000015e-05, 3.1306000000008716e-05, 3.136100000000752e-05, 3.147200000000461e-05, 3.154199999999552e-05, 3.1402999999985415e-05, 3.15139999999825e-05, 3.137500000000015e-05, 3.1348000000014364e-05, 3.1348000000014364e-05]</msg>
<status status="PASS" starttime="20201029 18:18:52.580" endtime="20201029 18:18:52.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.568" endtime="20201029 18:18:52.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.953" endtime="20201029 18:18:52.587"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:51.825" endtime="20201029 18:18:52.588" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.606" endtime="20201029 18:18:52.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.602" endtime="20201029 18:18:52.629"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.664" endtime="20201029 18:18:52.682"></status>
</kw>
<msg timestamp="20201029 18:18:52.683" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.660" endtime="20201029 18:18:52.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.689" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.685" endtime="20201029 18:18:52.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.696" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:52.692" endtime="20201029 18:18:52.697"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:52.653" endtime="20201029 18:18:52.699"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:52.646" endtime="20201029 18:18:52.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.644" endtime="20201029 18:18:52.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:52.710" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:52.708" endtime="20201029 18:18:52.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.703" endtime="20201029 18:18:52.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.642" endtime="20201029 18:18:52.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.640" endtime="20201029 18:18:52.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.713" endtime="20201029 18:18:52.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.635" endtime="20201029 18:18:52.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.631" endtime="20201029 18:18:52.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.599" endtime="20201029 18:18:52.721"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.743" endtime="20201029 18:18:52.943"></status>
</kw>
<msg timestamp="20201029 18:18:52.944" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.739" endtime="20201029 18:18:52.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.950" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.946" endtime="20201029 18:18:52.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.952" endtime="20201029 18:18:52.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.732" endtime="20201029 18:18:52.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.726" endtime="20201029 18:18:52.959"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.964" endtime="20201029 18:18:52.968"></status>
</kw>
<msg timestamp="20201029 18:18:52.969" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:52.961" endtime="20201029 18:18:52.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.979" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:52.977" endtime="20201029 18:18:52.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.984" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:52.982" endtime="20201029 18:18:52.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.971" endtime="20201029 18:18:52.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.996" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:52.993" endtime="20201029 18:18:52.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.001" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:52.999" endtime="20201029 18:18:53.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.987" endtime="20201029 18:18:53.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.022" endtime="20201029 18:18:53.445"></status>
</kw>
<msg timestamp="20201029 18:18:53.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131540333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131581222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.018" endtime="20201029 18:18:53.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131540333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131581222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.455" endtime="20201029 18:18:53.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.473" endtime="20201029 18:18:53.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.011" endtime="20201029 18:18:53.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.007" endtime="20201029 18:18:53.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.490" level="INFO">${RESULT} = [{'diff': 4.088899999998841e-05}, {'diff': 3.990300000000779e-05}, {'diff': 4.0874999999995776e-05}, {'diff': 4.088899999998841e-05}, {'diff': 4.004199999999014e-05}, {'diff': 4.004099999999067e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:53.481" endtime="20201029 18:18:53.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:53.500" level="INFO">${OVERHEAD} = {'diff': [4.088899999998841e-05, 3.990300000000779e-05, 4.0874999999995776e-05, 4.088899999998841e-05, 4.004199999999014e-05, 4.004099999999067e-05, 4.088899999998841e-05, 4.088900000001616e-05, 4.090...</msg>
<status status="PASS" starttime="20201029 18:18:53.492" endtime="20201029 18:18:53.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.511" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:18:53.508" endtime="20201029 18:18:53.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.516" level="INFO">VALUE: [4.088899999998841e-05, 3.990300000000779e-05, 4.0874999999995776e-05, 4.088899999998841e-05, 4.004199999999014e-05, 4.004099999999067e-05, 4.088899999998841e-05, 4.088900000001616e-05, 4.0903000000008793e-05, 4.086099999997539e-05, 4.088899999998841e-05, 4.088899999998841e-05, 4.004099999999067e-05, 4.004199999999014e-05, 3.988900000001516e-05, 3.983299999998913e-05, 4.0874999999995776e-05, 4.0874999999995776e-05, 4.086099999997539e-05, 4.088899999998841e-05, 4.088899999998841e-05, 4.0042000000017897e-05, 4.0874999999995776e-05, 4.0055000000011054e-05, 4.088899999998841e-05, 4.0055000000011054e-05, 4.087500000002353e-05, 4.004199999999014e-05, 4.088900000001616e-05, 4.0903000000008793e-05, 4.002799999999751e-05, 4.0026999999998036e-05, 4.0055000000011054e-05, 4.007000000000316e-05, 4.0874999999995776e-05, 4.091699999997367e-05, 4.00970000000167e-05, 4.0861000000003145e-05, 3.98610000000299e-05, 4.0874999999995776e-05, 4.0028000000025266e-05, 4.092999999999458e-05, 4.005500000003881e-05, 4.00549999999833e-05, 4.0027999999969754e-05, 3.988799999998793e-05, 4.0861000000003145e-05, 4.088899999998841e-05, 4.0874999999995776e-05, 4.090299999998104e-05]</msg>
<status status="PASS" starttime="20201029 18:18:53.513" endtime="20201029 18:18:53.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.501" endtime="20201029 18:18:53.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.722" endtime="20201029 18:18:53.520"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:52.593" endtime="20201029 18:18:53.522" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.547" endtime="20201029 18:18:53.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.540" endtime="20201029 18:18:53.574"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.619" endtime="20201029 18:18:53.638"></status>
</kw>
<msg timestamp="20201029 18:18:53.639" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.616" endtime="20201029 18:18:53.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.645" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.641" endtime="20201029 18:18:53.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.652" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:53.648" endtime="20201029 18:18:53.653"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:53.607" endtime="20201029 18:18:53.655"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:53.598" endtime="20201029 18:18:53.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.593" endtime="20201029 18:18:53.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:53.665" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:53.663" endtime="20201029 18:18:53.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.659" endtime="20201029 18:18:53.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.590" endtime="20201029 18:18:53.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.588" endtime="20201029 18:18:53.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.668" endtime="20201029 18:18:53.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.583" endtime="20201029 18:18:53.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.576" endtime="20201029 18:18:53.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.537" endtime="20201029 18:18:53.675"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.685" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:53.700" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:55.743" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:53.681" endtime="20201029 18:18:55.745"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.751" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:18:55.748" endtime="20201029 18:18:55.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.677" endtime="20201029 18:18:55.755"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.764" endtime="20201029 18:18:55.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.760" endtime="20201029 18:18:55.789"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.818" endtime="20201029 18:18:55.829"></status>
</kw>
<msg timestamp="20201029 18:18:55.830" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.814" endtime="20201029 18:18:55.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.836" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.832" endtime="20201029 18:18:55.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.839" endtime="20201029 18:18:55.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.804" endtime="20201029 18:18:55.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.794" endtime="20201029 18:18:55.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.862" endtime="20201029 18:18:56.210"></status>
</kw>
<msg timestamp="20201029 18:18:56.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042913375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.042939472, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:55.859" endtime="20201029 18:18:56.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042913375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.042939472, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:56.221" endtime="20201029 18:18:56.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.239" endtime="20201029 18:18:56.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.852" endtime="20201029 18:18:56.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.847" endtime="20201029 18:18:56.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:56.255" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 2.4000000000003185e-05}, {'diff': 2.3986000000003616e-05}, {'diff': 2.3972000000004046e-05}, {'diff': 2.3986000000003616e-05}, {'diff': 2.4014000000002755e-05}, {'diff': 2.39860...</msg>
<status status="PASS" starttime="20201029 18:18:56.248" endtime="20201029 18:18:56.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.265" level="INFO">${RESULT} = {'diff': [0, 2.4000000000003185e-05, 2.3986000000003616e-05, 2.3972000000004046e-05, 2.3986000000003616e-05, 2.4014000000002755e-05, 2.3986000000003616e-05, 2.4000000000003185e-05, 2.395899999999701e-...</msg>
<status status="PASS" starttime="20201029 18:18:56.257" endtime="20201029 18:18:56.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.275" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:56.273" endtime="20201029 18:18:56.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.282" level="INFO">VALUE: [0, 2.4000000000003185e-05, 2.3986000000003616e-05, 2.3972000000004046e-05, 2.3986000000003616e-05, 2.4014000000002755e-05, 2.3986000000003616e-05, 2.4000000000003185e-05, 2.395899999999701e-05, 2.3985999999996677e-05, 2.398699999999615e-05, 2.3985999999996677e-05, 2.3971999999997107e-05, 2.4013999999995816e-05, 2.4027999999995386e-05, 2.4040999999995483e-05, 2.4028000000002325e-05, 2.4014000000002755e-05, 2.408300000000113e-05, 2.4013000000003282e-05, 2.4000000000003185e-05, 2.4000000000003185e-05, 2.4014000000002755e-05, 2.4014000000002755e-05, 2.3986000000003616e-05, 2.3971999999997107e-05, 2.3986000000003616e-05, 2.4000000000003185e-05, 2.4013999999995816e-05, 2.4028000000002325e-05, 2.4013999999995816e-05, 2.3999999999996247e-05, 2.395899999999701e-05, 2.3985999999996677e-05, 2.3999999999996247e-05, 2.3971999999997107e-05, 2.3999999999996247e-05, 2.405500000000199e-05, 2.4042000000001895e-05, 2.3986000000003616e-05, 2.4056000000001465e-05, 2.405500000000199e-05, 2.3986000000003616e-05, 2.4000000000003185e-05, 2.3958000000004476e-05, 2.397300000000352e-05, 2.4000000000003185e-05, 2.3957999999997537e-05, 2.398699999999615e-05, 2.3985999999996677e-05]</msg>
<status status="PASS" starttime="20201029 18:18:56.279" endtime="20201029 18:18:56.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.267" endtime="20201029 18:18:56.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.790" endtime="20201029 18:18:56.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.758" endtime="20201029 18:18:56.287"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.292" endtime="20201029 18:18:56.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.289" endtime="20201029 18:18:56.316"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.336" endtime="20201029 18:18:56.349"></status>
</kw>
<msg timestamp="20201029 18:18:56.350" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.333" endtime="20201029 18:18:56.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.356" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.352" endtime="20201029 18:18:56.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.358" endtime="20201029 18:18:56.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.326" endtime="20201029 18:18:56.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.321" endtime="20201029 18:18:56.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.382" endtime="20201029 18:18:56.783"></status>
</kw>
<msg timestamp="20201029 18:18:56.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033968083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034007222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.378" endtime="20201029 18:18:56.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033968083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034007222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.792" endtime="20201029 18:18:56.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.811" endtime="20201029 18:18:56.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.371" endtime="20201029 18:18:56.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.366" endtime="20201029 18:18:56.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:56.827" level="INFO">${PHILIP_RES} = [{'diff': 3.9138999999993596e-05}, {'diff': 3.8847000000001575e-05}, {'diff': 3.883400000000148e-05}, {'diff': 3.8902999999999854e-05}, {'diff': 3.8847000000001575e-05}, {'diff': 3.8860999999994206e-0...</msg>
<status status="PASS" starttime="20201029 18:18:56.820" endtime="20201029 18:18:56.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.848" level="INFO">${RESULT} = {'diff': [3.9138999999993596e-05, 3.8847000000001575e-05, 3.883400000000148e-05, 3.8902999999999854e-05, 3.8847000000001575e-05, 3.8860999999994206e-05, 3.8847000000001575e-05, 3.8833000000002005e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:56.830" endtime="20201029 18:18:56.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.859" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:56.857" endtime="20201029 18:18:56.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.865" level="INFO">VALUE: [3.9138999999993596e-05, 3.8847000000001575e-05, 3.883400000000148e-05, 3.8902999999999854e-05, 3.8847000000001575e-05, 3.8860999999994206e-05, 3.8847000000001575e-05, 3.8833000000002005e-05, 3.883400000000148e-05, 3.8860999999994206e-05, 3.8847000000001575e-05, 3.8875000000000715e-05, 3.8847000000001575e-05, 3.8902999999999854e-05, 3.8875000000000715e-05, 3.8833000000002005e-05, 3.8805000000002865e-05, 3.8847000000001575e-05, 3.8846999999994636e-05, 3.8889000000000284e-05, 3.8847000000001575e-05, 3.8875000000000715e-05, 3.876400000000363e-05, 3.8846999999994636e-05, 3.8875000000000715e-05, 3.884800000000105e-05, 3.8861000000001145e-05, 3.8860999999994206e-05, 3.8875000000000715e-05, 3.8847000000001575e-05, 3.8847000000001575e-05, 3.8861000000001145e-05, 3.88059999999954e-05, 3.886200000000062e-05, 3.8833000000002005e-05, 3.8847000000001575e-05, 3.8874999999993776e-05, 3.8889000000000284e-05, 3.8847000000001575e-05, 3.8861000000001145e-05, 3.8861000000001145e-05, 3.8847000000001575e-05, 3.8861000000001145e-05, 3.8847000000001575e-05, 3.8875000000000715e-05, 3.884800000000105e-05, 3.8861000000001145e-05, 3.8847000000001575e-05, 3.8875000000000715e-05, 3.8833000000002005e-05]</msg>
<status status="PASS" starttime="20201029 18:18:56.862" endtime="20201029 18:18:56.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.850" endtime="20201029 18:18:56.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.317" endtime="20201029 18:18:56.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.287" endtime="20201029 18:18:56.869"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.875" endtime="20201029 18:18:56.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.872" endtime="20201029 18:18:56.898"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.919" endtime="20201029 18:18:56.933"></status>
</kw>
<msg timestamp="20201029 18:18:56.934" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.916" endtime="20201029 18:18:56.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.940" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.936" endtime="20201029 18:18:56.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.942" endtime="20201029 18:18:56.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.909" endtime="20201029 18:18:56.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.904" endtime="20201029 18:18:56.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.967" endtime="20201029 18:18:57.312"></status>
</kw>
<msg timestamp="20201029 18:18:57.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033933694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033984472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.964" endtime="20201029 18:18:57.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033933694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033984472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.321" endtime="20201029 18:18:57.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.339" endtime="20201029 18:18:57.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.955" endtime="20201029 18:18:57.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.950" endtime="20201029 18:18:57.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:57.355" level="INFO">${PHILIP_RES} = [{'diff': 5.077800000000132e-05}, {'diff': 5.181899999999462e-05}, {'diff': 5.1887999999999934e-05}, {'diff': 5.190299999999898e-05}, {'diff': 5.186100000000027e-05}, {'diff': 5.191699999999855e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:57.348" endtime="20201029 18:18:57.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.367" level="INFO">${RESULT} = {'diff': [5.077800000000132e-05, 5.181899999999462e-05, 5.1887999999999934e-05, 5.190299999999898e-05, 5.186100000000027e-05, 5.191699999999855e-05, 5.187499999999984e-05, 5.182000000000103e-05, 5.187...</msg>
<status status="PASS" starttime="20201029 18:18:57.358" endtime="20201029 18:18:57.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.377" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:57.375" endtime="20201029 18:18:57.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.382" level="INFO">VALUE: [5.077800000000132e-05, 5.181899999999462e-05, 5.1887999999999934e-05, 5.190299999999898e-05, 5.186100000000027e-05, 5.191699999999855e-05, 5.187499999999984e-05, 5.182000000000103e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.190299999999898e-05, 5.190200000000644e-05, 5.187499999999984e-05, 5.186100000000027e-05, 5.188899999999941e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.1887999999999934e-05, 5.1915999999999074e-05, 5.188899999999941e-05, 5.187499999999984e-05, 5.186100000000027e-05, 5.1901999999999504e-05, 5.1901999999999504e-05, 5.1929999999998644e-05, 5.190299999999898e-05, 5.1931000000005056e-05, 5.190299999999898e-05, 5.188899999999941e-05, 5.1887999999999934e-05, 5.188899999999941e-05, 5.191699999999855e-05, 5.188899999999941e-05, 5.187499999999984e-05, 5.1901999999999504e-05, 5.191699999999855e-05, 5.193099999999812e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.181900000000156e-05, 5.193000000000558e-05, 5.188899999999941e-05, 5.1901999999999504e-05, 5.186100000000027e-05, 5.193099999999812e-05, 5.186100000000027e-05, 5.186199999999974e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.187499999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:18:57.379" endtime="20201029 18:18:57.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.368" endtime="20201029 18:18:57.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.900" endtime="20201029 18:18:57.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.870" endtime="20201029 18:18:57.387"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.392" endtime="20201029 18:18:57.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.389" endtime="20201029 18:18:57.416"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.438" endtime="20201029 18:18:57.454"></status>
</kw>
<msg timestamp="20201029 18:18:57.455" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.434" endtime="20201029 18:18:57.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.461" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.457" endtime="20201029 18:18:57.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.464" endtime="20201029 18:18:57.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.426" endtime="20201029 18:18:57.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.421" endtime="20201029 18:18:57.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.488" endtime="20201029 18:18:57.831"></status>
</kw>
<msg timestamp="20201029 18:18:57.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036054444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0361185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:57.484" endtime="20201029 18:18:57.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036054444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0361185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:57.840" endtime="20201029 18:18:57.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.858" endtime="20201029 18:18:57.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.477" endtime="20201029 18:18:57.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.472" endtime="20201029 18:18:57.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:57.875" level="INFO">${PHILIP_RES} = [{'diff': 6.405599999999984e-05}, {'diff': 6.515299999999835e-05}, {'diff': 6.515299999999835e-05}, {'diff': 6.515299999999835e-05}, {'diff': 6.515299999999835e-05}, {'diff': 6.513899999999878e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:57.867" endtime="20201029 18:18:57.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.885" level="INFO">${RESULT} = {'diff': [6.405599999999984e-05, 6.515299999999835e-05, 6.515299999999835e-05, 6.515299999999835e-05, 6.515299999999835e-05, 6.513899999999878e-05, 6.516599999999845e-05, 6.516699999999792e-05, 6.5138...</msg>
<status status="PASS" starttime="20201029 18:18:57.877" endtime="20201029 18:18:57.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.896" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:57.893" endtime="20201029 18:18:57.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.901" level="INFO">VALUE: [6.405599999999984e-05, 6.515299999999835e-05, 6.515299999999835e-05, 6.515299999999835e-05, 6.515299999999835e-05, 6.513899999999878e-05, 6.516599999999845e-05, 6.516699999999792e-05, 6.513899999999878e-05, 6.52080000000041e-05, 6.517999999999802e-05, 6.516599999999845e-05, 6.515299999999835e-05, 6.513900000000572e-05, 6.518099999999749e-05, 6.512499999999921e-05, 6.515299999999835e-05, 6.512500000000615e-05, 6.515299999999835e-05, 6.516599999999845e-05, 6.515299999999835e-05, 6.5195000000004e-05, 6.519399999999759e-05, 6.515199999999888e-05, 6.513899999999878e-05, 6.509700000000007e-05, 6.515299999999835e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.513799999999931e-05, 6.512499999999921e-05, 6.516599999999845e-05, 6.5195000000004e-05, 6.513899999999878e-05, 6.516699999999792e-05, 6.516600000000539e-05, 6.509700000000007e-05, 6.516699999999792e-05, 6.516700000000486e-05, 6.509799999999955e-05, 6.519399999999759e-05, 6.515199999999888e-05, 6.509700000000007e-05, 6.511199999999912e-05, 6.509700000000007e-05, 6.517999999999802e-05, 6.513899999999878e-05, 6.516699999999792e-05, 6.516700000000486e-05]</msg>
<status status="PASS" starttime="20201029 18:18:57.898" endtime="20201029 18:18:57.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.887" endtime="20201029 18:18:57.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.417" endtime="20201029 18:18:57.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.387" endtime="20201029 18:18:57.906"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.911" endtime="20201029 18:18:57.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.908" endtime="20201029 18:18:57.935"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.955" endtime="20201029 18:18:57.974"></status>
</kw>
<msg timestamp="20201029 18:18:57.976" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.952" endtime="20201029 18:18:57.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.982" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.978" endtime="20201029 18:18:57.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.984" endtime="20201029 18:18:57.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.945" endtime="20201029 18:18:57.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.940" endtime="20201029 18:18:57.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.008" endtime="20201029 18:18:58.346"></status>
</kw>
<msg timestamp="20201029 18:18:58.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035156417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035234181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.005" endtime="20201029 18:18:58.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035156417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035234181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.356" endtime="20201029 18:18:58.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.374" endtime="20201029 18:18:58.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.997" endtime="20201029 18:18:58.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.993" endtime="20201029 18:18:58.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:58.390" level="INFO">${PHILIP_RES} = [{'diff': 7.7764000000001e-05}, {'diff': 7.830500000000074e-05}, {'diff': 7.834699999999944e-05}, {'diff': 7.831999999999978e-05}, {'diff': 7.829100000000117e-05}, {'diff': 7.83190000000003e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:58.382" endtime="20201029 18:18:58.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.399" level="INFO">${RESULT} = {'diff': [7.7764000000001e-05, 7.830500000000074e-05, 7.834699999999944e-05, 7.831999999999978e-05, 7.829100000000117e-05, 7.83190000000003e-05, 7.831999999999978e-05, 7.830600000000021e-05, 7.8334000...</msg>
<status status="PASS" starttime="20201029 18:18:58.392" endtime="20201029 18:18:58.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.409" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:58.407" endtime="20201029 18:18:58.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.415" level="INFO">VALUE: [7.7764000000001e-05, 7.830500000000074e-05, 7.834699999999944e-05, 7.831999999999978e-05, 7.829100000000117e-05, 7.83190000000003e-05, 7.831999999999978e-05, 7.830600000000021e-05, 7.833400000000629e-05, 7.833299999999987e-05, 7.834699999999944e-05, 7.83190000000003e-05, 7.836099999999901e-05, 7.833299999999987e-05, 7.836099999999901e-05, 7.836199999999849e-05, 7.833299999999987e-05, 7.836100000000595e-05, 7.834700000000638e-05, 7.834699999999944e-05, 7.834699999999944e-05, 7.834699999999944e-05, 7.833299999999987e-05, 7.833399999999935e-05, 7.836099999999901e-05, 7.836099999999901e-05, 7.830600000000021e-05, 7.836099999999901e-05, 7.836099999999901e-05, 7.834699999999944e-05, 7.833299999999987e-05, 7.833399999999935e-05, 7.829200000000064e-05, 7.834699999999944e-05, 7.833299999999987e-05, 7.837499999999858e-05, 7.834799999999892e-05, 7.831999999999978e-05, 7.836099999999901e-05, 7.831999999999978e-05, 7.834699999999944e-05, 7.837499999999858e-05, 7.836099999999901e-05, 7.83190000000003e-05, 7.830600000000021e-05, 7.833299999999987e-05, 7.833299999999987e-05, 7.838899999999815e-05, 7.836099999999901e-05, 7.833299999999987e-05]</msg>
<status status="PASS" starttime="20201029 18:18:58.412" endtime="20201029 18:18:58.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.401" endtime="20201029 18:18:58.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.936" endtime="20201029 18:18:58.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.906" endtime="20201029 18:18:58.419"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.425" endtime="20201029 18:18:58.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.421" endtime="20201029 18:18:58.448"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.471" endtime="20201029 18:18:58.491"></status>
</kw>
<msg timestamp="20201029 18:18:58.492" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.468" endtime="20201029 18:18:58.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.498" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.494" endtime="20201029 18:18:58.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.500" endtime="20201029 18:18:58.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.461" endtime="20201029 18:18:58.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.455" endtime="20201029 18:18:58.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.524" endtime="20201029 18:18:58.858"></status>
</kw>
<msg timestamp="20201029 18:18:58.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036171306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036261458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.521" endtime="20201029 18:18:58.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036171306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036261458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.867" endtime="20201029 18:18:58.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.885" endtime="20201029 18:18:58.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.514" endtime="20201029 18:18:58.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.509" endtime="20201029 18:18:58.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:58.901" level="INFO">${PHILIP_RES} = [{'diff': 9.015200000000306e-05}, {'diff': 9.163899999999753e-05}, {'diff': 9.161099999999839e-05}, {'diff': 9.163899999999753e-05}, {'diff': 9.159700000000576e-05}, {'diff': 9.162499999999796e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:58.893" endtime="20201029 18:18:58.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.911" level="INFO">${RESULT} = {'diff': [9.015200000000306e-05, 9.163899999999753e-05, 9.161099999999839e-05, 9.163899999999753e-05, 9.159700000000576e-05, 9.162499999999796e-05, 9.163899999999753e-05, 9.158299999999925e-05, 9.1610...</msg>
<status status="PASS" starttime="20201029 18:18:58.903" endtime="20201029 18:18:58.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.922" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:58.919" endtime="20201029 18:18:58.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.929" level="INFO">VALUE: [9.015200000000306e-05, 9.163899999999753e-05, 9.161099999999839e-05, 9.163899999999753e-05, 9.159700000000576e-05, 9.162499999999796e-05, 9.163899999999753e-05, 9.158299999999925e-05, 9.161099999999839e-05, 9.159700000000576e-05, 9.159799999999829e-05, 9.159699999999882e-05, 9.162499999999796e-05, 9.159699999999882e-05, 9.16250000000049e-05, 9.163900000000447e-05, 9.159699999999882e-05, 9.161099999999839e-05, 9.162499999999796e-05, 9.162499999999796e-05, 9.161099999999839e-05, 9.158299999999925e-05, 9.168100000000318e-05, 9.16250000000049e-05, 9.163799999999805e-05, 9.159699999999882e-05, 9.16529999999971e-05, 9.16659999999972e-05, 9.161099999999839e-05, 9.163899999999753e-05, 9.159700000000576e-05, 9.163900000000447e-05, 9.161099999999839e-05, 9.161099999999839e-05, 9.16529999999971e-05, 9.162499999999796e-05, 9.161199999999786e-05, 9.159699999999882e-05, 9.161099999999839e-05, 9.161099999999839e-05, 9.158299999999925e-05, 9.161100000000533e-05, 9.161100000000533e-05, 9.159699999999882e-05, 9.162499999999796e-05, 9.162499999999796e-05, 9.16250000000049e-05, 9.16250000000049e-05, 9.161199999999786e-05, 9.159699999999882e-05]</msg>
<status status="PASS" starttime="20201029 18:18:58.924" endtime="20201029 18:18:58.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.913" endtime="20201029 18:18:58.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.450" endtime="20201029 18:18:58.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.420" endtime="20201029 18:18:58.934"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.940" endtime="20201029 18:18:58.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.936" endtime="20201029 18:18:58.963"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.985" endtime="20201029 18:18:59.007"></status>
</kw>
<msg timestamp="20201029 18:18:59.008" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.982" endtime="20201029 18:18:59.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.014" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.010" endtime="20201029 18:18:59.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.017" endtime="20201029 18:18:59.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.973" endtime="20201029 18:18:59.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.968" endtime="20201029 18:18:59.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.041" endtime="20201029 18:18:59.394"></status>
</kw>
<msg timestamp="20201029 18:18:59.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035367667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035473431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.037" endtime="20201029 18:18:59.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035367667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035473431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.403" endtime="20201029 18:18:59.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.423" endtime="20201029 18:18:59.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.030" endtime="20201029 18:18:59.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.026" endtime="20201029 18:18:59.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:59.439" level="INFO">${PHILIP_RES} = [{'diff': 0.00010576400000000125}, {'diff': 0.00010594499999999618}, {'diff': 0.00010597200000000279}, {'diff': 0.00010597200000000279}, {'diff': 0.00010591699999999704}, {'diff': 0.000105986000000002...</msg>
<status status="PASS" starttime="20201029 18:18:59.431" endtime="20201029 18:18:59.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.451" level="INFO">${RESULT} = {'diff': [0.00010576400000000125, 0.00010594499999999618, 0.00010597200000000279, 0.00010597200000000279, 0.00010591699999999704, 0.00010598600000000236, 0.00010597200000000279, 0.00010597199999999585...</msg>
<status status="PASS" starttime="20201029 18:18:59.441" endtime="20201029 18:18:59.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.461" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:59.459" endtime="20201029 18:18:59.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.466" level="INFO">VALUE: [0.00010576400000000125, 0.00010594499999999618, 0.00010597200000000279, 0.00010597200000000279, 0.00010591699999999704, 0.00010598600000000236, 0.00010597200000000279, 0.00010597199999999585, 0.00010597200000000279, 0.00010597299999999532, 0.00010595799999999628, 0.00010598600000000236, 0.00010598600000000236, 0.00010595900000000269, 0.00010592999999999714, 0.00010597300000000226, 0.00010591699999999704, 0.00010595899999999575, 0.00010598600000000236, 0.00010594499999999618, 0.00010600000000000193, 0.00010598599999999542, 0.00010600000000000193, 0.00010598599999999542, 0.00010595900000000269, 0.00010597199999999585, 0.00010595900000000269, 0.00010597200000000279, 0.00010590299999999747, 0.00010595800000000322, 0.00010595900000000269, 0.00010594500000000312, 0.00010591599999999757, 0.00010590299999999747, 0.00010597300000000226, 0.00010595900000000269, 0.00010595799999999628, 0.00010595799999999628, 0.00010595800000000322, 0.00010595800000000322, 0.00010595799999999628, 0.00010595800000000322, 0.00010594500000000312, 0.00010595900000000269, 0.00010597199999999585, 0.00010595900000000269, 0.00010602800000000107, 0.00010599999999999499, 0.00010595800000000322, 0.00010594500000000312]</msg>
<status status="PASS" starttime="20201029 18:18:59.463" endtime="20201029 18:18:59.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.452" endtime="20201029 18:18:59.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.964" endtime="20201029 18:18:59.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.935" endtime="20201029 18:18:59.471"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.476" endtime="20201029 18:18:59.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.473" endtime="20201029 18:18:59.500"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.520" endtime="20201029 18:18:59.544"></status>
</kw>
<msg timestamp="20201029 18:18:59.545" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.517" endtime="20201029 18:18:59.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.552" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.547" endtime="20201029 18:18:59.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.554" endtime="20201029 18:18:59.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.510" endtime="20201029 18:18:59.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.505" endtime="20201029 18:18:59.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.577" endtime="20201029 18:18:59.911"></status>
</kw>
<msg timestamp="20201029 18:18:59.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033762722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033882889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.574" endtime="20201029 18:18:59.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033762722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033882889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.920" endtime="20201029 18:18:59.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.938" endtime="20201029 18:18:59.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.567" endtime="20201029 18:18:59.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.562" endtime="20201029 18:18:59.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:59.954" level="INFO">${PHILIP_RES} = [{'diff': 0.00012016699999999741}, {'diff': 0.00012013800000000574}, {'diff': 0.00012026299999999546}, {'diff': 0.00012022200000000316}, {'diff': 0.00012019400000000402}, {'diff': 0.000120194999999996...</msg>
<status status="PASS" starttime="20201029 18:18:59.947" endtime="20201029 18:18:59.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.966" level="INFO">${RESULT} = {'diff': [0.00012016699999999741, 0.00012013800000000574, 0.00012026299999999546, 0.00012022200000000316, 0.00012019400000000402, 0.00012019499999999655, 0.00012023600000000273, 0.00012023600000000273...</msg>
<status status="PASS" starttime="20201029 18:18:59.957" endtime="20201029 18:18:59.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.977" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:59.974" endtime="20201029 18:18:59.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.982" level="INFO">VALUE: [0.00012016699999999741, 0.00012013800000000574, 0.00012026299999999546, 0.00012022200000000316, 0.00012019400000000402, 0.00012019499999999655, 0.00012023600000000273, 0.00012023600000000273, 0.00012020799999999665, 0.00012022200000000316, 0.00012020800000000359, 0.00012020899999999612, 0.00012020800000000359, 0.00012020899999999612, 0.00012029200000000101, 0.0001202500000000023, 0.00012020899999999612, 0.00012018100000000392, 0.00012023600000000273, 0.00012015299999999784, 0.00012024999999999536, 0.00012020899999999612, 0.00012023600000000273, 0.00012019400000000402, 0.00012022199999999622, 0.00012023599999999579, 0.00012022199999999622, 0.00012023600000000273, 0.00012020800000000359, 0.00012018099999999698, 0.00012023600000000273, 0.0001202500000000023, 0.00012022199999999622, 0.00012023599999999579, 0.00012022199999999622, 0.00012018099999999698, 0.00012022200000000316, 0.00012022200000000316, 0.00012020799999999665, 0.00012015300000000478, 0.00012020799999999665, 0.00012023599999999579, 0.00012020800000000359, 0.00012023600000000273, 0.00012023600000000273, 0.00012027700000000197, 0.00012023600000000273, 0.00012023599999999579, 0.00012023599999999579, 0.0001202500000000023]</msg>
<status status="PASS" starttime="20201029 18:18:59.979" endtime="20201029 18:18:59.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.968" endtime="20201029 18:18:59.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.501" endtime="20201029 18:18:59.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.472" endtime="20201029 18:18:59.986"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.992" endtime="20201029 18:19:00.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.989" endtime="20201029 18:19:00.016"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.036" endtime="20201029 18:19:00.062"></status>
</kw>
<msg timestamp="20201029 18:19:00.063" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.033" endtime="20201029 18:19:00.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.070" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.066" endtime="20201029 18:19:00.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.072" endtime="20201029 18:19:00.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.026" endtime="20201029 18:19:00.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.021" endtime="20201029 18:19:00.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.095" endtime="20201029 18:19:00.431"></status>
</kw>
<msg timestamp="20201029 18:19:00.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033910819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034045236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.092" endtime="20201029 18:19:00.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033910819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034045236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.440" endtime="20201029 18:19:00.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.460" endtime="20201029 18:19:00.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.084" endtime="20201029 18:19:00.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.080" endtime="20201029 18:19:00.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:00.475" level="INFO">${PHILIP_RES} = [{'diff': 0.0001344169999999978}, {'diff': 0.00013441700000000473}, {'diff': 0.00013443000000000482}, {'diff': 0.0001344169999999978}, {'diff': 0.00013438899999999865}, {'diff': 0.00013444399999999745...</msg>
<status status="PASS" starttime="20201029 18:19:00.468" endtime="20201029 18:19:00.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.485" level="INFO">${RESULT} = {'diff': [0.0001344169999999978, 0.00013441700000000473, 0.00013443000000000482, 0.0001344169999999978, 0.00013438899999999865, 0.00013444399999999745, 0.00013437499999999908, 0.0001344169999999978, 0...</msg>
<status status="PASS" starttime="20201029 18:19:00.478" endtime="20201029 18:19:00.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.495" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:00.493" endtime="20201029 18:19:00.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.500" level="INFO">VALUE: [0.0001344169999999978, 0.00013441700000000473, 0.00013443000000000482, 0.0001344169999999978, 0.00013438899999999865, 0.00013444399999999745, 0.00013437499999999908, 0.0001344169999999978, 0.00013438899999999865, 0.00013438899999999865, 0.00013437499999999908, 0.0001343890000000056, 0.00013438899999999865, 0.0001344169999999978, 0.00013440299999999822, 0.00013434699999999994, 0.00013438899999999865, 0.0001343609999999995, 0.00013429200000000113, 0.00013438899999999865, 0.00013440300000000516, 0.00013440300000000516, 0.0001344169999999978, 0.00013438899999999865, 0.0001344169999999978, 0.00013434699999999994, 0.0001344169999999978, 0.00013433399999999984, 0.00013438899999999865, 0.00013443099999999736, 0.00013437499999999908, 0.00013440299999999822, 0.00013440299999999822, 0.00013438899999999865, 0.00013438899999999865, 0.0001343609999999995, 0.00013437499999999908, 0.00013440299999999822, 0.00013440299999999822, 0.0001344440000000044, 0.00013442999999999788, 0.00013440299999999822, 0.00013441600000000525, 0.00013443099999999736, 0.00013442999999999788, 0.00013443000000000482, 0.0001344169999999978, 0.0001344589999999965, 0.00013440299999999822, 0.00013432000000000027]</msg>
<status status="PASS" starttime="20201029 18:19:00.497" endtime="20201029 18:19:00.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.486" endtime="20201029 18:19:00.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.017" endtime="20201029 18:19:00.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.987" endtime="20201029 18:19:00.505"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.511" endtime="20201029 18:19:00.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.507" endtime="20201029 18:19:00.534"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.555" endtime="20201029 18:19:00.583"></status>
</kw>
<msg timestamp="20201029 18:19:00.584" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.551" endtime="20201029 18:19:00.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.590" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.586" endtime="20201029 18:19:00.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.592" endtime="20201029 18:19:00.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.544" endtime="20201029 18:19:00.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.539" endtime="20201029 18:19:00.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.617" endtime="20201029 18:19:00.959"></status>
</kw>
<msg timestamp="20201029 18:19:00.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034705889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034854833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.614" endtime="20201029 18:19:00.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034705889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034854833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.968" endtime="20201029 18:19:00.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.986" endtime="20201029 18:19:00.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.607" endtime="20201029 18:19:00.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.602" endtime="20201029 18:19:00.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:01.003" level="INFO">${PHILIP_RES} = [{'diff': 0.00014894400000000502}, {'diff': 0.0001487220000000039}, {'diff': 0.00014865199999999912}, {'diff': 0.0001487079999999974}, {'diff': 0.00014870899999999687}, {'diff': 0.00014870899999999687...</msg>
<status status="PASS" starttime="20201029 18:19:00.995" endtime="20201029 18:19:01.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.012" level="INFO">${RESULT} = {'diff': [0.00014894400000000502, 0.0001487220000000039, 0.00014865199999999912, 0.0001487079999999974, 0.00014870899999999687, 0.00014870899999999687, 0.00014870800000000434, 0.00014873600000000348, ...</msg>
<status status="PASS" starttime="20201029 18:19:01.005" endtime="20201029 18:19:01.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.023" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:01.020" endtime="20201029 18:19:01.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.028" level="INFO">VALUE: [0.00014894400000000502, 0.0001487220000000039, 0.00014865199999999912, 0.0001487079999999974, 0.00014870899999999687, 0.00014870899999999687, 0.00014870800000000434, 0.00014873600000000348, 0.00014869399999999783, 0.00014869400000000477, 0.00014872199999999697, 0.00014872199999999697, 0.0001487079999999974, 0.00014868100000000467, 0.00014869500000000424, 0.00014873600000000348, 0.00014872299999999644, 0.00014870800000000434, 0.0001486800000000052, 0.00014870800000000434, 0.00014869500000000424, 0.00014868099999999773, 0.0001486949999999973, 0.0001487079999999974, 0.00014873599999999654, 0.0001487079999999974, 0.00014865300000000553, 0.00014872300000000338, 0.0001487079999999974, 0.0001486949999999973, 0.00014875000000000305, 0.00014869400000000477, 0.00014875000000000305, 0.0001487499999999961, 0.00014873700000000295, 0.00014869399999999783, 0.00014873599999999654, 0.00014868100000000467, 0.0001486670000000051, 0.0001487220000000039, 0.00014873599999999654, 0.00014873599999999654, 0.0001487079999999974, 0.00014869400000000477, 0.00014872199999999697, 0.00014872199999999697, 0.0001487220000000039, 0.00014870899999999687, 0.00014873599999999654, 0.00014870800000000434]</msg>
<status status="PASS" starttime="20201029 18:19:01.025" endtime="20201029 18:19:01.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.014" endtime="20201029 18:19:01.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.535" endtime="20201029 18:19:01.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.506" endtime="20201029 18:19:01.032"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.038" endtime="20201029 18:19:01.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.034" endtime="20201029 18:19:01.061"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.084" endtime="20201029 18:19:01.114"></status>
</kw>
<msg timestamp="20201029 18:19:01.115" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.081" endtime="20201029 18:19:01.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.122" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.117" endtime="20201029 18:19:01.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.124" endtime="20201029 18:19:01.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.073" endtime="20201029 18:19:01.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.068" endtime="20201029 18:19:01.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.147" endtime="20201029 18:19:01.497"></status>
</kw>
<msg timestamp="20201029 18:19:01.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036151167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036314569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.144" endtime="20201029 18:19:01.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036151167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036314569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.506" endtime="20201029 18:19:01.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.523" endtime="20201029 18:19:01.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.137" endtime="20201029 18:19:01.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.132" endtime="20201029 18:19:01.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:01.539" level="INFO">${PHILIP_RES} = [{'diff': 0.000163402}, {'diff': 0.00016411099999999457}, {'diff': 0.00016406999999999533}, {'diff': 0.00016407000000000227}, {'diff': 0.00016412500000000108}, {'diff': 0.0001641110000000015}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:19:01.532" endtime="20201029 18:19:01.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.548" level="INFO">${RESULT} = {'diff': [0.000163402, 0.00016411099999999457, 0.00016406999999999533, 0.00016407000000000227, 0.00016412500000000108, 0.0001641110000000015, 0.00016411099999999457, 0.000164096999999995, 0.0001640969...</msg>
<status status="PASS" starttime="20201029 18:19:01.541" endtime="20201029 18:19:01.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.559" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:01.557" endtime="20201029 18:19:01.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.566" level="INFO">VALUE: [0.000163402, 0.00016411099999999457, 0.00016406999999999533, 0.00016407000000000227, 0.00016412500000000108, 0.0001641110000000015, 0.00016411099999999457, 0.000164096999999995, 0.000164096999999995, 0.00016411099999999457, 0.00016412499999999414, 0.00016404200000000313, 0.00016406899999999586, 0.00016408300000000237, 0.000164014000000004, 0.000164096999999995, 0.00016406899999999586, 0.00016408299999999543, 0.00016411199999999404, 0.0001641389999999937, 0.00016406899999999586, 0.00016405599999999576, 0.00016408300000000237, 0.00016407000000000227, 0.00016405599999999576, 0.00016408300000000237, 0.0001640560000000027, 0.00016407000000000227, 0.0001640839999999949, 0.0001640549999999963, 0.0001640549999999963, 0.00016409700000000194, 0.0001640980000000014, 0.00016408300000000237, 0.00016408400000000184, 0.0001640690000000028, 0.0001641110000000015, 0.00016409700000000194, 0.00016408300000000237, 0.00016413900000000065, 0.0001641110000000015, 0.00016411099999999457, 0.00016405599999999576, 0.0001640980000000014, 0.00016408300000000237, 0.00016406899999999586, 0.000164096999999995, 0.00016401399999999705, 0.00016404200000000313, 0.00016402700000000409]</msg>
<status status="PASS" starttime="20201029 18:19:01.561" endtime="20201029 18:19:01.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.550" endtime="20201029 18:19:01.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.062" endtime="20201029 18:19:01.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.033" endtime="20201029 18:19:01.570"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.576" endtime="20201029 18:19:01.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.572" endtime="20201029 18:19:01.599"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.621" endtime="20201029 18:19:01.653"></status>
</kw>
<msg timestamp="20201029 18:19:01.654" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.618" endtime="20201029 18:19:01.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.660" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.656" endtime="20201029 18:19:01.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.663" endtime="20201029 18:19:01.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.610" endtime="20201029 18:19:01.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.604" endtime="20201029 18:19:01.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.686" endtime="20201029 18:19:02.033"></status>
</kw>
<msg timestamp="20201029 18:19:02.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035120167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035299361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.683" endtime="20201029 18:19:02.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035120167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035299361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.043" endtime="20201029 18:19:02.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.060" endtime="20201029 18:19:02.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.675" endtime="20201029 18:19:02.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.671" endtime="20201029 18:19:02.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:02.076" level="INFO">${PHILIP_RES} = [{'diff': 0.00017919400000000058}, {'diff': 0.00017929199999999756}, {'diff': 0.0001792920000000045}, {'diff': 0.00017930499999999766}, {'diff': 0.00017936100000000288}, {'diff': 0.000179277999999998}...</msg>
<status status="PASS" starttime="20201029 18:19:02.068" endtime="20201029 18:19:02.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.086" level="INFO">${RESULT} = {'diff': [0.00017919400000000058, 0.00017929199999999756, 0.0001792920000000045, 0.00017930499999999766, 0.00017936100000000288, 0.000179277999999998, 0.00017923599999999928, 0.0001792909999999981, 0....</msg>
<status status="PASS" starttime="20201029 18:19:02.078" endtime="20201029 18:19:02.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.097" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:02.094" endtime="20201029 18:19:02.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.102" level="INFO">VALUE: [0.00017919400000000058, 0.00017929199999999756, 0.0001792920000000045, 0.00017930499999999766, 0.00017936100000000288, 0.000179277999999998, 0.00017923599999999928, 0.0001792909999999981, 0.0001792909999999981, 0.0001792920000000045, 0.00017931899999999723, 0.0001792909999999981, 0.00017926399999999842, 0.00017929100000000503, 0.00017930599999999713, 0.00017923599999999928, 0.00017927800000000493, 0.00017929199999999756, 0.0001793329999999968, 0.00017926399999999842, 0.00017926400000000536, 0.00017926299999999895, 0.00017936100000000288, 0.00017920800000000014, 0.00017929199999999756, 0.00017924999999999885, 0.00017930499999999766, 0.00017931900000000417, 0.00017926399999999842, 0.00017924999999999885, 0.00017927800000000493, 0.00017924999999999885, 0.00017924999999999885, 0.00017922199999999971, 0.00017938900000000202, 0.00017927699999999852, 0.0001792500000000058, 0.00017930499999999766, 0.00017929199999999756, 0.000179277999999998, 0.00017920800000000014, 0.00017926399999999842, 0.0001792500000000058, 0.00017930600000000407, 0.00017924999999999885, 0.00017926399999999842, 0.00017927800000000493, 0.000179277999999998, 0.0001793050000000046, 0.00017930599999999713]</msg>
<status status="PASS" starttime="20201029 18:19:02.099" endtime="20201029 18:19:02.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.088" endtime="20201029 18:19:02.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.600" endtime="20201029 18:19:02.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.571" endtime="20201029 18:19:02.106"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.112" endtime="20201029 18:19:02.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.108" endtime="20201029 18:19:02.136"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.157" endtime="20201029 18:19:02.191"></status>
</kw>
<msg timestamp="20201029 18:19:02.192" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.153" endtime="20201029 18:19:02.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.198" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.194" endtime="20201029 18:19:02.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.201" endtime="20201029 18:19:02.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.146" endtime="20201029 18:19:02.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.141" endtime="20201029 18:19:02.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.224" endtime="20201029 18:19:02.579"></status>
</kw>
<msg timestamp="20201029 18:19:02.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034961528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035154861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.220" endtime="20201029 18:19:02.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034961528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035154861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.588" endtime="20201029 18:19:02.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.610" endtime="20201029 18:19:02.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.213" endtime="20201029 18:19:02.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.208" endtime="20201029 18:19:02.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:02.627" level="INFO">${PHILIP_RES} = [{'diff': 0.00019333300000000386}, {'diff': 0.0001945269999999999}, {'diff': 0.00019458299999999817}, {'diff': 0.0001945689999999986}, {'diff': 0.00019448600000000066}, {'diff': 0.00019447199999999415...</msg>
<status status="PASS" starttime="20201029 18:19:02.619" endtime="20201029 18:19:02.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.639" level="INFO">${RESULT} = {'diff': [0.00019333300000000386, 0.0001945269999999999, 0.00019458299999999817, 0.0001945689999999986, 0.00019448600000000066, 0.00019447199999999415, 0.0001944720000000011, 0.0001944720000000011, 0....</msg>
<status status="PASS" starttime="20201029 18:19:02.630" endtime="20201029 18:19:02.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.652" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:02.649" endtime="20201029 18:19:02.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.657" level="INFO">VALUE: [0.00019333300000000386, 0.0001945269999999999, 0.00019458299999999817, 0.0001945689999999986, 0.00019448600000000066, 0.00019447199999999415, 0.0001944720000000011, 0.0001944720000000011, 0.0001945139999999998, 0.00019448600000000066, 0.0001945139999999998, 0.00019455499999999903, 0.00019450000000000023, 0.00019450000000000023, 0.00019450000000000023, 0.0001945139999999998, 0.00019454199999999894, 0.00019454199999999894, 0.0001945139999999998, 0.00019450000000000023, 0.0001945139999999998, 0.00019450000000000023, 0.00019450000000000023, 0.00019450000000000023, 0.0001945139999999998, 0.00019450000000000023, 0.00019448600000000066, 0.0001944720000000011, 0.00019444500000000142, 0.00019454099999999946, 0.0001945139999999998, 0.00019445899999999405, 0.0001944720000000011, 0.00019458399999999765, 0.00019448600000000066, 0.0001945689999999986, 0.00019447300000000056, 0.00019448600000000066, 0.0001945139999999998, 0.0001945139999999998, 0.0001945280000000063, 0.00019448600000000066, 0.0001945139999999998, 0.00019445800000000152, 0.00019458299999999817, 0.000194443999999995, 0.0001945139999999998, 0.00019448600000000066, 0.00019452799999999937, 0.00019444400000000195]</msg>
<status status="PASS" starttime="20201029 18:19:02.654" endtime="20201029 18:19:02.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.641" endtime="20201029 18:19:02.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.137" endtime="20201029 18:19:02.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.107" endtime="20201029 18:19:02.661"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.668" endtime="20201029 18:19:02.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.664" endtime="20201029 18:19:02.692"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.712" endtime="20201029 18:19:02.748"></status>
</kw>
<msg timestamp="20201029 18:19:02.749" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.709" endtime="20201029 18:19:02.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.755" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.751" endtime="20201029 18:19:02.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.757" endtime="20201029 18:19:02.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.702" endtime="20201029 18:19:02.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.697" endtime="20201029 18:19:02.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.781" endtime="20201029 18:19:03.118"></status>
</kw>
<msg timestamp="20201029 18:19:03.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034580014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034789431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.777" endtime="20201029 18:19:03.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034580014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034789431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.127" endtime="20201029 18:19:03.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.144" endtime="20201029 18:19:03.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.770" endtime="20201029 18:19:03.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.766" endtime="20201029 18:19:03.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:03.160" level="INFO">${PHILIP_RES} = [{'diff': 0.0002094170000000034}, {'diff': 0.0002096950000000028}, {'diff': 0.0002097500000000016}, {'diff': 0.00020974999999999466}, {'diff': 0.00020977800000000074}, {'diff': 0.00020973600000000203}...</msg>
<status status="PASS" starttime="20201029 18:19:03.153" endtime="20201029 18:19:03.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.169" level="INFO">${RESULT} = {'diff': [0.0002094170000000034, 0.0002096950000000028, 0.0002097500000000016, 0.00020974999999999466, 0.00020977800000000074, 0.00020973600000000203, 0.00020970799999999595, 0.0002096799999999968, 0....</msg>
<status status="PASS" starttime="20201029 18:19:03.162" endtime="20201029 18:19:03.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.180" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:03.177" endtime="20201029 18:19:03.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.185" level="INFO">VALUE: [0.0002094170000000034, 0.0002096950000000028, 0.0002097500000000016, 0.00020974999999999466, 0.00020977800000000074, 0.00020973600000000203, 0.00020970799999999595, 0.0002096799999999968, 0.00020977700000000127, 0.00020973600000000203, 0.00020977800000000074, 0.0002097500000000016, 0.0002097500000000016, 0.00020974999999999466, 0.0002097080000000029, 0.00020976400000000117, 0.00020977800000000074, 0.00020972199999999552, 0.0002097500000000016, 0.00020977800000000074, 0.00020976399999999423, 0.00020973600000000203, 0.0002097920000000003, 0.0002097500000000016, 0.00020980599999999988, 0.00020977800000000074, 0.00020972199999999552, 0.00020973600000000203, 0.00020977800000000074, 0.00020976400000000117, 0.00020974999999999466, 0.00020970799999999595, 0.0002097500000000016, 0.0002097500000000016, 0.00020976400000000117, 0.0002097500000000016, 0.00020972200000000246, 0.00020972199999999552, 0.00020976400000000117, 0.00020973600000000203, 0.0002097500000000016, 0.00020976400000000117, 0.00020976400000000117, 0.00020983399999999902, 0.00020972200000000246, 0.00020977800000000074, 0.0002097920000000003, 0.0002097920000000003, 0.0002097630000000017, 0.00020977800000000074]</msg>
<status status="PASS" starttime="20201029 18:19:03.182" endtime="20201029 18:19:03.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.171" endtime="20201029 18:19:03.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.693" endtime="20201029 18:19:03.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.663" endtime="20201029 18:19:03.190"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.196" endtime="20201029 18:19:03.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.192" endtime="20201029 18:19:03.219"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.239" endtime="20201029 18:19:03.277"></status>
</kw>
<msg timestamp="20201029 18:19:03.278" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.236" endtime="20201029 18:19:03.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.284" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.280" endtime="20201029 18:19:03.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.286" endtime="20201029 18:19:03.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.229" endtime="20201029 18:19:03.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.224" endtime="20201029 18:19:03.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.311" endtime="20201029 18:19:03.648"></status>
</kw>
<msg timestamp="20201029 18:19:03.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033715208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033939889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.308" endtime="20201029 18:19:03.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033715208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033939889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.656" endtime="20201029 18:19:03.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.674" endtime="20201029 18:19:03.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.301" endtime="20201029 18:19:03.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.296" endtime="20201029 18:19:03.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:03.689" level="INFO">${PHILIP_RES} = [{'diff': 0.0002246809999999974}, {'diff': 0.0002260970000000015}, {'diff': 0.00022616599999999987}, {'diff': 0.00022609800000000096}, {'diff': 0.00022611100000000106}, {'diff': 0.00022616699999999934...</msg>
<status status="PASS" starttime="20201029 18:19:03.682" endtime="20201029 18:19:03.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.698" level="INFO">${RESULT} = {'diff': [0.0002246809999999974, 0.0002260970000000015, 0.00022616599999999987, 0.00022609800000000096, 0.00022611100000000106, 0.00022616699999999934, 0.00022612500000000063, 0.00022612500000000063, ...</msg>
<status status="PASS" starttime="20201029 18:19:03.691" endtime="20201029 18:19:03.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.709" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:03.706" endtime="20201029 18:19:03.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.714" level="INFO">VALUE: [0.0002246809999999974, 0.0002260970000000015, 0.00022616599999999987, 0.00022609800000000096, 0.00022611100000000106, 0.00022616699999999934, 0.00022612500000000063, 0.00022612500000000063, 0.00022611200000000053, 0.00022611100000000106, 0.0002261390000000002, 0.00022615299999999977, 0.00022612500000000063, 0.0002260970000000015, 0.0002260970000000015, 0.00022609699999999455, 0.00022612500000000063, 0.00022622299999999762, 0.00022611200000000053, 0.0002261249999999937, 0.0002261390000000002, 0.00022611100000000106, 0.0002261520000000003, 0.00022609800000000096, 0.00022609699999999455, 0.00022615299999999977, 0.0002261379999999938, 0.0002260840000000014, 0.0002261249999999937, 0.00022616700000000628, 0.0002260970000000015, 0.00022612500000000063, 0.0002261809999999989, 0.0002260840000000014, 0.00022613800000000073, 0.00022611099999999412, 0.00022609699999999455, 0.00022615299999999977, 0.0002261249999999937, 0.00022608299999999498, 0.00022615299999999977, 0.00022612500000000063, 0.000226193999999999, 0.00022605599999999532, 0.0002260840000000014, 0.0002261390000000002, 0.00022612500000000063, 0.0002260970000000015, 0.00022608300000000192, 0.00022606999999999489]</msg>
<status status="PASS" starttime="20201029 18:19:03.711" endtime="20201029 18:19:03.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.700" endtime="20201029 18:19:03.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.220" endtime="20201029 18:19:03.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.191" endtime="20201029 18:19:03.719"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.725" endtime="20201029 18:19:03.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.721" endtime="20201029 18:19:03.748"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.770" endtime="20201029 18:19:03.810"></status>
</kw>
<msg timestamp="20201029 18:19:03.811" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.767" endtime="20201029 18:19:03.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.817" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.813" endtime="20201029 18:19:03.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.819" endtime="20201029 18:19:03.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.760" endtime="20201029 18:19:03.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.754" endtime="20201029 18:19:03.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.842" endtime="20201029 18:19:04.179"></status>
</kw>
<msg timestamp="20201029 18:19:04.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035407319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035649333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.839" endtime="20201029 18:19:04.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035407319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035649333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.188" endtime="20201029 18:19:04.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.205" endtime="20201029 18:19:04.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.832" endtime="20201029 18:19:04.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.827" endtime="20201029 18:19:04.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:04.221" level="INFO">${PHILIP_RES} = [{'diff': 0.00024201399999999873}, {'diff': 0.00024241700000000171}, {'diff': 0.00024240300000000214}, {'diff': 0.0002424159999999953}, {'diff': 0.00024240300000000214}, {'diff': 0.0002423890000000025...</msg>
<status status="PASS" starttime="20201029 18:19:04.213" endtime="20201029 18:19:04.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.230" level="INFO">${RESULT} = {'diff': [0.00024201399999999873, 0.00024241700000000171, 0.00024240300000000214, 0.0002424159999999953, 0.00024240300000000214, 0.00024238900000000257, 0.00024238799999999616, 0.0002424159999999953, ...</msg>
<status status="PASS" starttime="20201029 18:19:04.223" endtime="20201029 18:19:04.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.240" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:04.238" endtime="20201029 18:19:04.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.247" level="INFO">VALUE: [0.00024201399999999873, 0.00024241700000000171, 0.00024240300000000214, 0.0002424159999999953, 0.00024240300000000214, 0.00024238900000000257, 0.00024238799999999616, 0.0002424159999999953, 0.00024244500000000085, 0.00024244400000000138, 0.00024244500000000085, 0.0002424300000000018, 0.00024240300000000214, 0.00024242999999999487, 0.00024245800000000095, 0.00024244500000000085, 0.00024240300000000214, 0.0002423330000000043, 0.00024240200000000267, 0.00024242999999999487, 0.00024238900000000257, 0.00024243100000000128, 0.00024242999999999487, 0.00024251400000000617, 0.0002424300000000018, 0.00024244400000000138, 0.00024244499999999392, 0.00024244400000000138, 0.00024242999999999487, 0.00024243100000000128, 0.0002424159999999953, 0.0002423880000000031, 0.00024243099999999435, 0.00024243100000000128, 0.00024243100000000128, 0.00024241700000000171, 0.00024244400000000138, 0.00024238899999999564, 0.0002424300000000018, 0.00024240300000000214, 0.00024241700000000171, 0.00024238900000000257, 0.00024234699999999693, 0.00024240300000000214, 0.0002424019999999888, 0.00024241700000000865, 0.00024244400000000832, 0.00024240299999998827, 0.00024244499999999392, 0.000242375000000003]</msg>
<status status="PASS" starttime="20201029 18:19:04.242" endtime="20201029 18:19:04.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.231" endtime="20201029 18:19:04.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.749" endtime="20201029 18:19:04.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.720" endtime="20201029 18:19:04.258"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.264" endtime="20201029 18:19:04.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.260" endtime="20201029 18:19:04.287"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.307" endtime="20201029 18:19:04.349"></status>
</kw>
<msg timestamp="20201029 18:19:04.350" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.304" endtime="20201029 18:19:04.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.356" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.353" endtime="20201029 18:19:04.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.359" endtime="20201029 18:19:04.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.297" endtime="20201029 18:19:04.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.292" endtime="20201029 18:19:04.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.382" endtime="20201029 18:19:04.724"></status>
</kw>
<msg timestamp="20201029 18:19:04.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033780583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034038208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.378" endtime="20201029 18:19:04.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033780583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034038208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.733" endtime="20201029 18:19:04.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.751" endtime="20201029 18:19:04.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.371" endtime="20201029 18:19:04.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.367" endtime="20201029 18:19:04.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:04.766" level="INFO">${PHILIP_RES} = [{'diff': 0.00025762499999999744}, {'diff': 0.00025858299999999973}, {'diff': 0.00025861099999999887}, {'diff': 0.00025861099999999887}, {'diff': 0.0002585550000000006}, {'diff': 0.0002585829999999997...</msg>
<status status="PASS" starttime="20201029 18:19:04.759" endtime="20201029 18:19:04.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.777" level="INFO">${RESULT} = {'diff': [0.00025762499999999744, 0.00025858299999999973, 0.00025861099999999887, 0.00025861099999999887, 0.0002585550000000006, 0.00025858299999999973, 0.00025856900000000016, 0.00025858299999999973,...</msg>
<status status="PASS" starttime="20201029 18:19:04.768" endtime="20201029 18:19:04.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.787" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:04.785" endtime="20201029 18:19:04.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.792" level="INFO">VALUE: [0.00025762499999999744, 0.00025858299999999973, 0.00025861099999999887, 0.00025861099999999887, 0.0002585550000000006, 0.00025858299999999973, 0.00025856900000000016, 0.00025858299999999973, 0.00025856900000000016, 0.0002585969999999993, 0.00025856999999999963, 0.00025858400000000614, 0.0002585550000000006, 0.0002586529999999976, 0.00025858299999999973, 0.000258638999999998, 0.00025858299999999973, 0.000258638999999998, 0.0002585969999999993, 0.00025861199999999834, 0.00025862499999999844, 0.00025855600000000006, 0.0002586670000000041, 0.0002585969999999993, 0.0002585969999999993, 0.000258638999999998, 0.00025858299999999973, 0.00025869400000000375, 0.0002585979999999988, 0.00025859700000000624, 0.0002585969999999993, 0.0002585969999999993, 0.00025862499999999844, 0.0002585979999999988, 0.0002585979999999988, 0.000258638999999998, 0.00025856999999999963, 0.0002585969999999993, 0.00025856999999999963, 0.0002585839999999992, 0.00025856999999999963, 0.0002585139999999944, 0.000258556000000007, 0.00025855500000000753, 0.0002585969999999993, 0.00025865300000001146, 0.00025856999999999963, 0.00025863900000000495, 0.0002585969999999993, 0.0002585969999999993]</msg>
<status status="PASS" starttime="20201029 18:19:04.789" endtime="20201029 18:19:04.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.779" endtime="20201029 18:19:04.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.288" endtime="20201029 18:19:04.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.259" endtime="20201029 18:19:04.797"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.803" endtime="20201029 18:19:04.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.799" endtime="20201029 18:19:04.826"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.847" endtime="20201029 18:19:04.891"></status>
</kw>
<msg timestamp="20201029 18:19:04.892" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.844" endtime="20201029 18:19:04.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.898" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.894" endtime="20201029 18:19:04.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.900" endtime="20201029 18:19:04.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.837" endtime="20201029 18:19:04.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.831" endtime="20201029 18:19:04.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.923" endtime="20201029 18:19:05.259"></status>
</kw>
<msg timestamp="20201029 18:19:05.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033908236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034183194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.920" endtime="20201029 18:19:05.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033908236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034183194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.267" endtime="20201029 18:19:05.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.285" endtime="20201029 18:19:05.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.913" endtime="20201029 18:19:05.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.908" endtime="20201029 18:19:05.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:05.300" level="INFO">${PHILIP_RES} = [{'diff': 0.00027495799999999876}, {'diff': 0.0002748890000000004}, {'diff': 0.0002749729999999978}, {'diff': 0.0002748470000000017}, {'diff': 0.0002749309999999991}, {'diff': 0.0002748470000000017}, ...</msg>
<status status="PASS" starttime="20201029 18:19:05.293" endtime="20201029 18:19:05.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.311" level="INFO">${RESULT} = {'diff': [0.00027495799999999876, 0.0002748890000000004, 0.0002749729999999978, 0.0002748470000000017, 0.0002749309999999991, 0.0002748470000000017, 0.00027481900000000253, 0.00027491600000000005, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:05.302" endtime="20201029 18:19:05.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.321" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:05.319" endtime="20201029 18:19:05.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.327" level="INFO">VALUE: [0.00027495799999999876, 0.0002748890000000004, 0.0002749729999999978, 0.0002748470000000017, 0.0002749309999999991, 0.0002748470000000017, 0.00027481900000000253, 0.00027491600000000005, 0.00027490299999999995, 0.0002748330000000021, 0.00027483399999999464, 0.0002747780000000033, 0.0002748330000000021, 0.0002747780000000033, 0.0002748609999999943, 0.0002748750000000008, 0.0002748890000000004, 0.00027486100000000124, 0.0002749020000000005, 0.0002748470000000017, 0.00027486100000000124, 0.00027486100000000124, 0.00027481999999999507, 0.00027486100000000124, 0.00027486100000000124, 0.0002748750000000008, 0.0002748750000000008, 0.00027481900000000253, 0.00027486100000000124, 0.00027486100000000124, 0.00027490299999999995, 0.0002748890000000004, 0.0002747629999999973, 0.0002748470000000017, 0.0002748750000000008, 0.0002748750000000008, 0.0002748470000000017, 0.0002748890000000004, 0.00027484699999999473, 0.0002748750000000008, 0.0002748890000000004, 0.00027491600000000005, 0.00027487500000000775, 0.0002748330000000021, 0.00027486100000000124, 0.0002748330000000021, 0.0002749169999999995, 0.00027486100000000124, 0.0002748330000000021, 0.0002748340000000016]</msg>
<status status="PASS" starttime="20201029 18:19:05.324" endtime="20201029 18:19:05.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.313" endtime="20201029 18:19:05.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.828" endtime="20201029 18:19:05.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.798" endtime="20201029 18:19:05.332"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.337" endtime="20201029 18:19:05.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.334" endtime="20201029 18:19:05.361"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.381" endtime="20201029 18:19:05.427"></status>
</kw>
<msg timestamp="20201029 18:19:05.428" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.378" endtime="20201029 18:19:05.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.434" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.430" endtime="20201029 18:19:05.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.437" endtime="20201029 18:19:05.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.371" endtime="20201029 18:19:05.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.366" endtime="20201029 18:19:05.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.461" endtime="20201029 18:19:05.797"></status>
</kw>
<msg timestamp="20201029 18:19:05.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033838056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034129958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.458" endtime="20201029 18:19:05.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033838056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034129958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.806" endtime="20201029 18:19:05.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.823" endtime="20201029 18:19:05.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.451" endtime="20201029 18:19:05.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.446" endtime="20201029 18:19:05.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:05.839" level="INFO">${PHILIP_RES} = [{'diff': 0.0002919020000000036}, {'diff': 0.00029220800000000213}, {'diff': 0.000292278}, {'diff': 0.0002922639999999935}, {'diff': 0.00029223600000000127}, {'diff': 0.0002922220000000017}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 18:19:05.831" endtime="20201029 18:19:05.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.848" level="INFO">${RESULT} = {'diff': [0.0002919020000000036, 0.00029220800000000213, 0.000292278, 0.0002922639999999935, 0.00029223600000000127, 0.0002922220000000017, 0.00029223700000000075, 0.00029225000000000084, 0.0002922220...</msg>
<status status="PASS" starttime="20201029 18:19:05.841" endtime="20201029 18:19:05.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.858" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:05.856" endtime="20201029 18:19:05.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.863" level="INFO">VALUE: [0.0002919020000000036, 0.00029220800000000213, 0.000292278, 0.0002922639999999935, 0.00029223600000000127, 0.0002922220000000017, 0.00029223700000000075, 0.00029225000000000084, 0.0002922220000000017, 0.00029229199999999955, 0.0002922640000000004, 0.00029229199999999955, 0.00029226300000000094, 0.0002922770000000005, 0.0002922220000000017, 0.0002922369999999938, 0.000292278, 0.00029225000000000084, 0.0002922230000000012, 0.00029223600000000127, 0.0002922640000000004, 0.00029225000000000084, 0.00029220800000000213, 0.00029222199999999476, 0.00029223600000000127, 0.000292278, 0.0002922079999999952, 0.0002921660000000034, 0.00029223600000000127, 0.00029233399999999826, 0.000292278, 0.00029229199999999955, 0.00029220800000000213, 0.0002922640000000004, 0.0002922499999999939, 0.00029223599999999433, 0.0002922079999999952, 0.00029225000000000084, 0.0002921949999999951, 0.00029222199999999476, 0.0002922499999999939, 0.0002922640000000004, 0.0002923059999999922, 0.0002922780000000069, 0.0002923199999999987, 0.00029227799999999304, 0.0002922780000000069, 0.0002922640000000004, 0.0002923189999999992, 0.0002923199999999987]</msg>
<status status="PASS" starttime="20201029 18:19:05.860" endtime="20201029 18:19:05.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.849" endtime="20201029 18:19:05.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.362" endtime="20201029 18:19:05.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.333" endtime="20201029 18:19:05.868"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.874" endtime="20201029 18:19:05.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.870" endtime="20201029 18:19:05.897"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.918" endtime="20201029 18:19:05.966"></status>
</kw>
<msg timestamp="20201029 18:19:05.967" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.915" endtime="20201029 18:19:05.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.973" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.969" endtime="20201029 18:19:05.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.976" endtime="20201029 18:19:05.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.907" endtime="20201029 18:19:05.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.902" endtime="20201029 18:19:05.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.001" endtime="20201029 18:19:06.336"></status>
</kw>
<msg timestamp="20201029 18:19:06.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03391325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034222736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:05.997" endtime="20201029 18:19:06.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03391325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034222736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:06.345" endtime="20201029 18:19:06.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.362" endtime="20201029 18:19:06.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.990" endtime="20201029 18:19:06.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.986" endtime="20201029 18:19:06.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:06.378" level="INFO">${PHILIP_RES} = [{'diff': 0.0003094859999999977}, {'diff': 0.000309459000000005}, {'diff': 0.00030952699999999694}, {'diff': 0.0003095129999999974}, {'diff': 0.0003094859999999977}, {'diff': 0.0003094859999999977}, {...</msg>
<status status="PASS" starttime="20201029 18:19:06.371" endtime="20201029 18:19:06.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.387" level="INFO">${RESULT} = {'diff': [0.0003094859999999977, 0.000309459000000005, 0.00030952699999999694, 0.0003095129999999974, 0.0003094859999999977, 0.0003094859999999977, 0.0003095420000000029, 0.0003095000000000042, 0.0003...</msg>
<status status="PASS" starttime="20201029 18:19:06.380" endtime="20201029 18:19:06.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.397" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:06.395" endtime="20201029 18:19:06.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.403" level="INFO">VALUE: [0.0003094859999999977, 0.000309459000000005, 0.00030952699999999694, 0.0003095129999999974, 0.0003094859999999977, 0.0003094859999999977, 0.0003095420000000029, 0.0003095000000000042, 0.0003095279999999964, 0.0003094999999999973, 0.0003095560000000025, 0.00030955599999999556, 0.0003095560000000025, 0.00030951399999999685, 0.000309555000000003, 0.0003095839999999947, 0.00030957000000000207, 0.000309541999999996, 0.00030958300000000216, 0.0003094999999999973, 0.0003095420000000029, 0.00030952800000000336, 0.0003095140000000038, 0.00030958400000000164, 0.0003095279999999964, 0.0003095270000000039, 0.0003095140000000038, 0.0003094450000000054, 0.000309555000000003, 0.00030951399999999685, 0.0003095560000000025, 0.00030952699999999694, 0.00030951399999999685, 0.00030954100000000345, 0.00030945799999999857, 0.00030952800000000336, 0.00030945899999999804, 0.0003095560000000025, 0.0003094859999999977, 0.000309555000000003, 0.0003094860000000116, 0.0003094869999999972, 0.0003094859999999977, 0.00030956899999999565, 0.00030952800000000336, 0.00030958300000000216, 0.00030947299999999067, 0.00030951399999999685, 0.0003095000000000042, 0.000309570000000009]</msg>
<status status="PASS" starttime="20201029 18:19:06.400" endtime="20201029 18:19:06.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.389" endtime="20201029 18:19:06.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.898" endtime="20201029 18:19:06.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.869" endtime="20201029 18:19:06.407"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.413" endtime="20201029 18:19:06.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.410" endtime="20201029 18:19:06.436"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.459" endtime="20201029 18:19:06.510"></status>
</kw>
<msg timestamp="20201029 18:19:06.511" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.456" endtime="20201029 18:19:06.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.518" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.513" endtime="20201029 18:19:06.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.520" endtime="20201029 18:19:06.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.448" endtime="20201029 18:19:06.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.443" endtime="20201029 18:19:06.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.543" endtime="20201029 18:19:06.877"></status>
</kw>
<msg timestamp="20201029 18:19:06.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036417514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036743625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.540" endtime="20201029 18:19:06.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036417514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036743625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.888" endtime="20201029 18:19:06.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.908" endtime="20201029 18:19:06.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.533" endtime="20201029 18:19:06.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.528" endtime="20201029 18:19:06.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:06.927" level="INFO">${PHILIP_RES} = [{'diff': 0.0003261110000000039}, {'diff': 0.0003266670000000027}, {'diff': 0.00032663900000000357}, {'diff': 0.00032668099999999534}, {'diff': 0.0003266529999999962}, {'diff': 0.00032662499999999706}...</msg>
<status status="PASS" starttime="20201029 18:19:06.918" endtime="20201029 18:19:06.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.937" level="INFO">${RESULT} = {'diff': [0.0003261110000000039, 0.0003266670000000027, 0.00032663900000000357, 0.00032668099999999534, 0.0003266529999999962, 0.00032662499999999706, 0.0003265830000000053, 0.00032665300000000314, 0....</msg>
<status status="PASS" starttime="20201029 18:19:06.929" endtime="20201029 18:19:06.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.949" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:06.947" endtime="20201029 18:19:06.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.956" level="INFO">VALUE: [0.0003261110000000039, 0.0003266670000000027, 0.00032663900000000357, 0.00032668099999999534, 0.0003266529999999962, 0.00032662499999999706, 0.0003265830000000053, 0.00032665300000000314, 0.0003266670000000027, 0.0003266810000000023, 0.00032668099999999534, 0.000326707999999995, 0.0003265969999999979, 0.00032666699999999577, 0.000326625000000004, 0.00032666600000000323, 0.00032665200000000366, 0.000326625000000004, 0.00032652799999999954, 0.0003266109999999975, 0.00032663900000000357, 0.00032669400000000237, 0.00032669400000000237, 0.00032669400000000237, 0.0003266800000000028, 0.000326625000000004, 0.000326625000000004, 0.00032658400000000476, 0.00032669400000000237, 0.0003265969999999979, 0.00032663900000000357, 0.00032666600000000323, 0.00032675000000000065, 0.0003266670000000027, 0.00032666600000000323, 0.00032669400000000237, 0.00032662499999999706, 0.0003266530000000101, 0.00032663900000000357, 0.00032666599999998935, 0.0003266529999999962, 0.0003266939999999885, 0.00032661099999999055, 0.00032658400000000476, 0.0003266110000000044, 0.00032656999999999825, 0.00032662499999999706, 0.000326707999999995, 0.0003266670000000027, 0.0003266530000000101]</msg>
<status status="PASS" starttime="20201029 18:19:06.952" endtime="20201029 18:19:06.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.939" endtime="20201029 18:19:06.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.438" endtime="20201029 18:19:06.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.408" endtime="20201029 18:19:06.961"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.967" endtime="20201029 18:19:06.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.963" endtime="20201029 18:19:06.990"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.011" endtime="20201029 18:19:07.063"></status>
</kw>
<msg timestamp="20201029 18:19:07.064" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.008" endtime="20201029 18:19:07.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.071" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.067" endtime="20201029 18:19:07.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.073" endtime="20201029 18:19:07.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.000" endtime="20201029 18:19:07.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.995" endtime="20201029 18:19:07.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.096" endtime="20201029 18:19:07.430"></status>
</kw>
<msg timestamp="20201029 18:19:07.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034133653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034477361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.093" endtime="20201029 18:19:07.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034133653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034477361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.438" endtime="20201029 18:19:07.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.457" endtime="20201029 18:19:07.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.085" endtime="20201029 18:19:07.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.081" endtime="20201029 18:19:07.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:07.473" level="INFO">${PHILIP_RES} = [{'diff': 0.0003437079999999981}, {'diff': 0.000344000000000004}, {'diff': 0.00034402800000000316}, {'diff': 0.0003439579999999984}, {'diff': 0.00034391699999999914}, {'diff': 0.00034402800000000316},...</msg>
<status status="PASS" starttime="20201029 18:19:07.465" endtime="20201029 18:19:07.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:07.483" level="INFO">${RESULT} = {'diff': [0.0003437079999999981, 0.000344000000000004, 0.00034402800000000316, 0.0003439579999999984, 0.00034391699999999914, 0.00034402800000000316, 0.0003439999999999971, 0.000343889, 0.000343958000...</msg>
<status status="PASS" starttime="20201029 18:19:07.475" endtime="20201029 18:19:07.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.494" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:07.491" endtime="20201029 18:19:07.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.499" level="INFO">VALUE: [0.0003437079999999981, 0.000344000000000004, 0.00034402800000000316, 0.0003439579999999984, 0.00034391699999999914, 0.00034402800000000316, 0.0003439999999999971, 0.000343889, 0.0003439580000000053, 0.00034397199999999795, 0.0003439859999999975, 0.0003439579999999984, 0.00034397199999999795, 0.0003439020000000001, 0.0003439309999999987, 0.000344000000000004, 0.0003439449999999983, 0.00034391699999999914, 0.000343889, 0.000344000000000004, 0.00034393100000000565, 0.0003439449999999983, 0.0003439579999999984, 0.0003439720000000049, 0.00034408400000000144, 0.00034398600000000445, 0.00034404200000000273, 0.0003440700000000019, 0.00034405500000000283, 0.0003440690000000024, 0.0003440690000000024, 0.00034408300000000197, 0.0003439999999999971, 0.0003439999999999971, 0.00034400000000001096, 0.0003439999999999971, 0.0003440140000000036, 0.0003439999999999971, 0.00034402699999999675, 0.00034411100000000805, 0.0003440690000000024, 0.0003439999999999971, 0.0003440140000000036, 0.00034409699999998766, 0.0003440549999999959, 0.0003440549999999959, 0.0003440279999999962, 0.00034405500000000977, 0.00034408299999999503, 0.0003440700000000019]</msg>
<status status="PASS" starttime="20201029 18:19:07.496" endtime="20201029 18:19:07.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.485" endtime="20201029 18:19:07.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.991" endtime="20201029 18:19:07.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.962" endtime="20201029 18:19:07.504"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:07.509" endtime="20201029 18:19:07.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.506" endtime="20201029 18:19:07.533"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.553" endtime="20201029 18:19:07.607"></status>
</kw>
<msg timestamp="20201029 18:19:07.609" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.550" endtime="20201029 18:19:07.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.615" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.611" endtime="20201029 18:19:07.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.617" endtime="20201029 18:19:07.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.543" endtime="20201029 18:19:07.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.538" endtime="20201029 18:19:07.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.640" endtime="20201029 18:19:07.974"></status>
</kw>
<msg timestamp="20201029 18:19:07.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033682431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034043472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.637" endtime="20201029 18:19:07.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033682431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034043472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.983" endtime="20201029 18:19:07.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.000" endtime="20201029 18:19:08.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.630" endtime="20201029 18:19:08.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.625" endtime="20201029 18:19:08.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:08.016" level="INFO">${PHILIP_RES} = [{'diff': 0.00036104099999999945}, {'diff': 0.0003622230000000018}, {'diff': 0.00036229200000000017}, {'diff': 0.0003623199999999993}, {'diff': 0.00036234799999999845}, {'diff': 0.0003623339999999989}...</msg>
<status status="PASS" starttime="20201029 18:19:08.009" endtime="20201029 18:19:08.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.027" level="INFO">${RESULT} = {'diff': [0.00036104099999999945, 0.0003622230000000018, 0.00036229200000000017, 0.0003623199999999993, 0.00036234799999999845, 0.0003623339999999989, 0.00036229200000000017, 0.0003623470000000059, 0....</msg>
<status status="PASS" starttime="20201029 18:19:08.018" endtime="20201029 18:19:08.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.037" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:08.035" endtime="20201029 18:19:08.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.043" level="INFO">VALUE: [0.00036104099999999945, 0.0003622230000000018, 0.00036229200000000017, 0.0003623199999999993, 0.00036234799999999845, 0.0003623339999999989, 0.00036229200000000017, 0.0003623470000000059, 0.00036229200000000017, 0.000362346999999999, 0.0003622770000000011, 0.00036226400000000103, 0.0003623329999999994, 0.00036229200000000017, 0.00036230500000000027, 0.00036219500000000265, 0.0003621940000000032, 0.0003621670000000035, 0.000362152999999997, 0.00036229200000000017, 0.0003622360000000019, 0.00036233300000000634, 0.00036236099999999855, 0.000362346999999999, 0.00036225000000000146, 0.00036229200000000017, 0.0003622360000000019, 0.0003622780000000006, 0.0003622780000000006, 0.0003622360000000019, 0.0003623339999999989, 0.00036226399999998715, 0.00036227800000000754, 0.0003623199999999993, 0.00036233299999999247, 0.0003622910000000007, 0.0003622369999999875, 0.00036229200000000017, 0.00036234799999999845, 0.00036227700000000806, 0.00036240299999999726, 0.0003623610000000055, 0.0003623749999999981, 0.0003623609999999916, 0.0003623610000000055, 0.0003623749999999981, 0.0003623199999999993, 0.00036227799999999366, 0.00036227800000000754, 0.00036227800000000754]</msg>
<status status="PASS" starttime="20201029 18:19:08.040" endtime="20201029 18:19:08.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.029" endtime="20201029 18:19:08.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.534" endtime="20201029 18:19:08.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.504" endtime="20201029 18:19:08.047"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.053" endtime="20201029 18:19:08.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.050" endtime="20201029 18:19:08.077"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.097" endtime="20201029 18:19:08.154"></status>
</kw>
<msg timestamp="20201029 18:19:08.155" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.094" endtime="20201029 18:19:08.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.161" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.157" endtime="20201029 18:19:08.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.163" endtime="20201029 18:19:08.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.087" endtime="20201029 18:19:08.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.082" endtime="20201029 18:19:08.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.187" endtime="20201029 18:19:08.527"></status>
</kw>
<msg timestamp="20201029 18:19:08.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033987014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034367764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.183" endtime="20201029 18:19:08.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033987014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034367764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.536" endtime="20201029 18:19:08.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.553" endtime="20201029 18:19:08.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.176" endtime="20201029 18:19:08.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.172" endtime="20201029 18:19:08.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:08.569" level="INFO">${PHILIP_RES} = [{'diff': 0.00038074999999999914}, {'diff': 0.00038065200000000216}, {'diff': 0.000380610999999996}, {'diff': 0.00038058299999999684}, {'diff': 0.00038065300000000163}, {'diff': 0.000380610999999996},...</msg>
<status status="PASS" starttime="20201029 18:19:08.561" endtime="20201029 18:19:08.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.578" level="INFO">${RESULT} = {'diff': [0.00038074999999999914, 0.00038065200000000216, 0.000380610999999996, 0.00038058299999999684, 0.00038065300000000163, 0.000380610999999996, 0.0003806110000000029, 0.00038062499999999555, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:08.571" endtime="20201029 18:19:08.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.588" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:08.586" endtime="20201029 18:19:08.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.594" level="INFO">VALUE: [0.00038074999999999914, 0.00038065200000000216, 0.000380610999999996, 0.00038058299999999684, 0.00038065300000000163, 0.000380610999999996, 0.0003806110000000029, 0.00038062499999999555, 0.00038055500000000464, 0.00038062499999999555, 0.00038065300000000163, 0.00038056999999999674, 0.00038065300000000163, 0.0003806110000000029, 0.00038067999999999436, 0.0003806939999999939, 0.0003806519999999952, 0.00038068100000000077, 0.0003806670000000012, 0.00038065300000000163, 0.00038063900000000206, 0.00038069500000000034, 0.00038065300000000163, 0.00038058299999999684, 0.0003806110000000029, 0.0003805560000000041, 0.00038058299999999684, 0.00038056899999999727, 0.0003805559999999972, 0.00038056999999999674, 0.0003805970000000103, 0.00038061099999998904, 0.0003806670000000012, 0.00038068000000000823, 0.0003806110000000029, 0.0003805969999999964, 0.00038063900000000206, 0.0003805979999999959, 0.00038065300000000857, 0.00038070899999999297, 0.00038051399999999846, 0.0003806670000000012, 0.0003806110000000029, 0.0003806519999999952, 0.00038062499999999555, 0.00038063900000000206, 0.000380737000000006, 0.00038056899999999727, 0.00038063900000000206, 0.0003805970000000103]</msg>
<status status="PASS" starttime="20201029 18:19:08.591" endtime="20201029 18:19:08.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.580" endtime="20201029 18:19:08.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.078" endtime="20201029 18:19:08.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.048" endtime="20201029 18:19:08.598"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.604" endtime="20201029 18:19:08.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.601" endtime="20201029 18:19:08.627"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.648" endtime="20201029 18:19:08.707"></status>
</kw>
<msg timestamp="20201029 18:19:08.708" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.645" endtime="20201029 18:19:08.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.714" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.710" endtime="20201029 18:19:08.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.717" endtime="20201029 18:19:08.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.638" endtime="20201029 18:19:08.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.633" endtime="20201029 18:19:08.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.740" endtime="20201029 18:19:09.074"></status>
</kw>
<msg timestamp="20201029 18:19:09.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033932722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034331264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.736" endtime="20201029 18:19:09.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033932722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034331264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.083" endtime="20201029 18:19:09.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.100" endtime="20201029 18:19:09.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.729" endtime="20201029 18:19:09.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.725" endtime="20201029 18:19:09.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:09.115" level="INFO">${PHILIP_RES} = [{'diff': 0.00039854200000000173}, {'diff': 0.0003988199999999942}, {'diff': 0.00039881900000000164}, {'diff': 0.0003987629999999964}, {'diff': 0.00039886100000000035}, {'diff': 0.0003988330000000012}...</msg>
<status status="PASS" starttime="20201029 18:19:09.108" endtime="20201029 18:19:09.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.124" level="INFO">${RESULT} = {'diff': [0.00039854200000000173, 0.0003988199999999942, 0.00039881900000000164, 0.0003987629999999964, 0.00039886100000000035, 0.0003988330000000012, 0.00039886199999999983, 0.00039881900000000164, 0...</msg>
<status status="PASS" starttime="20201029 18:19:09.117" endtime="20201029 18:19:09.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.135" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:09.132" endtime="20201029 18:19:09.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.140" level="INFO">VALUE: [0.00039854200000000173, 0.0003988199999999942, 0.00039881900000000164, 0.0003987629999999964, 0.00039886100000000035, 0.0003988330000000012, 0.00039886199999999983, 0.00039881900000000164, 0.0003988050000000021, 0.0003988889999999995, 0.00039886100000000035, 0.0003988200000000011, 0.0003988330000000012, 0.00039886199999999983, 0.0003988189999999947, 0.00039891699999999863, 0.00039875000000000327, 0.00039884699999999385, 0.00039886100000000035, 0.0003988200000000011, 0.00039877799999999547, 0.000398776999999996, 0.0003988330000000012, 0.0003988200000000011, 0.00039886100000000035, 0.0003988470000000008, 0.00039891699999999863, 0.0003988050000000021, 0.00039880600000000155, 0.00039890200000000653, 0.00039880599999998767, 0.0003988470000000077, 0.0003988470000000077, 0.0003988340000000007, 0.0003988470000000077, 0.000398874999999993, 0.0003989299999999918, 0.0003988330000000012, 0.0003988889999999995, 0.0003987639999999959, 0.0003987639999999959, 0.0003987780000000024, 0.00039879199999999504, 0.00039880600000000155, 0.0003988330000000012, 0.00039880600000000155, 0.00039879099999999557, 0.00039870900000001097, 0.00039870900000001097, 0.00039873600000001064]</msg>
<status status="PASS" starttime="20201029 18:19:09.137" endtime="20201029 18:19:09.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.126" endtime="20201029 18:19:09.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.629" endtime="20201029 18:19:09.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.599" endtime="20201029 18:19:09.145"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.151" endtime="20201029 18:19:09.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.147" endtime="20201029 18:19:09.174"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.196" endtime="20201029 18:19:09.257"></status>
</kw>
<msg timestamp="20201029 18:19:09.258" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.193" endtime="20201029 18:19:09.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.265" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.260" endtime="20201029 18:19:09.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.267" endtime="20201029 18:19:09.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.186" endtime="20201029 18:19:09.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.180" endtime="20201029 18:19:09.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.291" endtime="20201029 18:19:09.637"></status>
</kw>
<msg timestamp="20201029 18:19:09.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035301667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035717458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.288" endtime="20201029 18:19:09.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035301667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035717458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.649" endtime="20201029 18:19:09.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.678" endtime="20201029 18:19:09.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.281" endtime="20201029 18:19:09.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.276" endtime="20201029 18:19:09.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:09.694" level="INFO">${PHILIP_RES} = [{'diff': 0.0004157909999999987}, {'diff': 0.00041711100000000473}, {'diff': 0.00041706999999999855}, {'diff': 0.00041708400000000506}, {'diff': 0.0004170560000000059}, {'diff': 0.000417055999999999},...</msg>
<status status="PASS" starttime="20201029 18:19:09.687" endtime="20201029 18:19:09.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.703" level="INFO">${RESULT} = {'diff': [0.0004157909999999987, 0.00041711100000000473, 0.00041706999999999855, 0.00041708400000000506, 0.0004170560000000059, 0.000417055999999999, 0.0004170969999999982, 0.0004170130000000008, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:09.696" endtime="20201029 18:19:09.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.714" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:09.711" endtime="20201029 18:19:09.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.720" level="INFO">VALUE: [0.0004157909999999987, 0.00041711100000000473, 0.00041706999999999855, 0.00041708400000000506, 0.0004170560000000059, 0.000417055999999999, 0.0004170969999999982, 0.0004170130000000008, 0.00041709700000000516, 0.0004171529999999965, 0.00041713899999999693, 0.00041706999999999855, 0.00041713899999999693, 0.00041712499999999736, 0.0004171250000000043, 0.00041715300000000344, 0.0004171800000000031, 0.00041716699999999607, 0.0004171109999999978, 0.00041716699999999607, 0.00041713900000000387, 0.0004171109999999978, 0.00041711100000000473, 0.00041715300000000344, 0.00041718099999999564, 0.0004171800000000031, 0.0004171249999999904, 0.0004171250000000043, 0.00041716600000001047, 0.00041708299999999865, 0.0004170699999999916, 0.00041715299999998956, 0.0004170839999999981, 0.0004171249999999904, 0.0004170419999999925, 0.0004170699999999916, 0.0004170549999999995, 0.00041708299999999865, 0.0004170700000000055, 0.00041715299999998956, 0.00041709799999999075, 0.00041709700000000516, 0.00041701399999999333, 0.0004170699999999916, 0.00041701399999999333, 0.00041715300000000344, 0.00041713799999999746, 0.00041709800000000463, 0.00041716700000000995, 0.00041719399999999573]</msg>
<status status="PASS" starttime="20201029 18:19:09.716" endtime="20201029 18:19:09.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.705" endtime="20201029 18:19:09.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.175" endtime="20201029 18:19:09.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.146" endtime="20201029 18:19:09.725"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.731" endtime="20201029 18:19:09.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.727" endtime="20201029 18:19:09.754"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.791" endtime="20201029 18:19:09.856"></status>
</kw>
<msg timestamp="20201029 18:19:09.857" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.786" endtime="20201029 18:19:09.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.867" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.861" endtime="20201029 18:19:09.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.871" endtime="20201029 18:19:09.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.776" endtime="20201029 18:19:09.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.768" endtime="20201029 18:19:09.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.907" endtime="20201029 18:19:10.262"></status>
</kw>
<msg timestamp="20201029 18:19:10.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051231903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051667806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.902" endtime="20201029 18:19:10.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051231903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051667806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.271" endtime="20201029 18:19:10.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.288" endtime="20201029 18:19:10.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.891" endtime="20201029 18:19:10.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.884" endtime="20201029 18:19:10.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:10.305" level="INFO">${PHILIP_RES} = [{'diff': 0.00043590299999999443}, {'diff': 0.00043645799999999374}, {'diff': 0.0004363609999999962}, {'diff': 0.0004362909999999984}, {'diff': 0.0004363470000000036}, {'diff': 0.00043633399999999656}...</msg>
<status status="PASS" starttime="20201029 18:19:10.297" endtime="20201029 18:19:10.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.316" level="INFO">${RESULT} = {'diff': [0.00043590299999999443, 0.00043645799999999374, 0.0004363609999999962, 0.0004362909999999984, 0.0004363470000000036, 0.00043633399999999656, 0.00043630600000000436, 0.0004363059999999974, 0....</msg>
<status status="PASS" starttime="20201029 18:19:10.307" endtime="20201029 18:19:10.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.326" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:10.324" endtime="20201029 18:19:10.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.332" level="INFO">VALUE: [0.00043590299999999443, 0.00043645799999999374, 0.0004363609999999962, 0.0004362909999999984, 0.0004363470000000036, 0.00043633399999999656, 0.00043630600000000436, 0.0004363059999999974, 0.00043630499999999794, 0.00043630499999999794, 0.0004363609999999962, 0.0004362779999999983, 0.00043637500000000273, 0.0004363609999999962, 0.00043637500000000273, 0.0004363609999999962, 0.000436431000000001, 0.00043633400000001044, 0.00043633400000001044, 0.0004365279999999916, 0.0004364720000000072, 0.00043643000000000154, 0.0004364719999999933, 0.00043644400000000805, 0.00043652800000000547, 0.00043644399999999417, 0.0004363879999999959, 0.00043643000000000154, 0.00043642999999998766, 0.0004363469999999897, 0.00043643000000000154, 0.00043643000000000154, 0.0004364580000000007, 0.00043651399999999896, 0.0004364580000000007, 0.00043656999999999724, 0.00043655500000000513, 0.00043645900000000015, 0.0004365419999999981, 0.00043644499999999364, 0.0004364170000000084, 0.0004364450000000075, 0.00043638899999999536, 0.00043637500000000273, 0.000436402999999988, 0.0004364580000000007, 0.00043640300000000187, 0.00043644399999999417, 0.00043644399999999417, 0.00043645900000000015]</msg>
<status status="PASS" starttime="20201029 18:19:10.329" endtime="20201029 18:19:10.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.318" endtime="20201029 18:19:10.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.756" endtime="20201029 18:19:10.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.726" endtime="20201029 18:19:10.337"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.343" endtime="20201029 18:19:10.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.339" endtime="20201029 18:19:10.366"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.387" endtime="20201029 18:19:10.452"></status>
</kw>
<msg timestamp="20201029 18:19:10.453" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.383" endtime="20201029 18:19:10.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.459" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.456" endtime="20201029 18:19:10.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.462" endtime="20201029 18:19:10.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.376" endtime="20201029 18:19:10.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.371" endtime="20201029 18:19:10.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.485" endtime="20201029 18:19:10.820"></status>
</kw>
<msg timestamp="20201029 18:19:10.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0341775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034632583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:10.482" endtime="20201029 18:19:10.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0341775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034632583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:10.829" endtime="20201029 18:19:10.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.846" endtime="20201029 18:19:10.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.474" endtime="20201029 18:19:10.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.470" endtime="20201029 18:19:10.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:10.862" level="INFO">${PHILIP_RES} = [{'diff': 0.00045508300000000196}, {'diff': 0.0004557079999999991}, {'diff': 0.0004557220000000056}, {'diff': 0.0004557089999999986}, {'diff': 0.0004557639999999974}, {'diff': 0.0004557499999999978}, ...</msg>
<status status="PASS" starttime="20201029 18:19:10.854" endtime="20201029 18:19:10.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.873" level="INFO">${RESULT} = {'diff': [0.00045508300000000196, 0.0004557079999999991, 0.0004557220000000056, 0.0004557089999999986, 0.0004557639999999974, 0.0004557499999999978, 0.0004557499999999978, 0.00045575000000000476, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:10.864" endtime="20201029 18:19:10.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.883" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:10.881" endtime="20201029 18:19:10.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.888" level="INFO">VALUE: [0.00045508300000000196, 0.0004557079999999991, 0.0004557220000000056, 0.0004557089999999986, 0.0004557639999999974, 0.0004557499999999978, 0.0004557499999999978, 0.00045575000000000476, 0.00045573599999999825, 0.00045573599999999825, 0.00045583299999999577, 0.0004558200000000026, 0.0004558340000000022, 0.0004557639999999974, 0.00045583299999999577, 0.0004558200000000026, 0.00045573599999999825, 0.0004558340000000022, 0.00045580500000000357, 0.00045577799999999696, 0.00045576400000000433, 0.0004557219999999987, 0.00045576300000000486, 0.00045573599999999825, 0.00045575000000000476, 0.00045579199999999653, 0.00045579199999999653, 0.0004557629999999979, 0.0004557079999999991, 0.00045575000000000476, 0.00045573599999999825, 0.00045575000000000476, 0.00045575000000000476, 0.0004557780000000039, 0.00045579199999999653, 0.0004558199999999957, 0.00045580600000000304, 0.00045573599999999825, 0.0004557220000000056, 0.0004557629999999979, 0.00045580599999998916, 0.0004557780000000039, 0.0004556940000000065, 0.00045582000000000955, 0.00045573599999999825, 0.00045570900000001247, 0.0004557499999999909, 0.0004556530000000003, 0.00045568099999999945, 0.00045573599999999825]</msg>
<status status="PASS" starttime="20201029 18:19:10.885" endtime="20201029 18:19:10.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.874" endtime="20201029 18:19:10.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.367" endtime="20201029 18:19:10.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.338" endtime="20201029 18:19:10.893"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.899" endtime="20201029 18:19:10.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.895" endtime="20201029 18:19:10.923"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.943" endtime="20201029 18:19:11.011"></status>
</kw>
<msg timestamp="20201029 18:19:11.012" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.940" endtime="20201029 18:19:11.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.018" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.014" endtime="20201029 18:19:11.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.020" endtime="20201029 18:19:11.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.933" endtime="20201029 18:19:11.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.927" endtime="20201029 18:19:11.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.044" endtime="20201029 18:19:11.381"></status>
</kw>
<msg timestamp="20201029 18:19:11.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033787361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034262444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.040" endtime="20201029 18:19:11.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033787361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034262444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.390" endtime="20201029 18:19:11.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.407" endtime="20201029 18:19:11.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.033" endtime="20201029 18:19:11.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.028" endtime="20201029 18:19:11.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:11.423" level="INFO">${PHILIP_RES} = [{'diff': 0.00047508300000000114}, {'diff': 0.00047483400000000037}, {'diff': 0.00047483400000000037}, {'diff': 0.0004748060000000012}, {'diff': 0.00047493000000000535}, {'diff': 0.0004748059999999943...</msg>
<status status="PASS" starttime="20201029 18:19:11.416" endtime="20201029 18:19:11.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.432" level="INFO">${RESULT} = {'diff': [0.00047508300000000114, 0.00047483400000000037, 0.00047483400000000037, 0.0004748060000000012, 0.00047493000000000535, 0.0004748059999999943, 0.0004749169999999983, 0.0004749719999999971, 0....</msg>
<status status="PASS" starttime="20201029 18:19:11.425" endtime="20201029 18:19:11.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.442" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:11.440" endtime="20201029 18:19:11.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.448" level="INFO">VALUE: [0.00047508300000000114, 0.00047483400000000037, 0.00047483400000000037, 0.0004748060000000012, 0.00047493000000000535, 0.0004748059999999943, 0.0004749169999999983, 0.0004749719999999971, 0.00047498600000000363, 0.0004749299999999984, 0.00047484700000000046, 0.00047495799999999755, 0.00047494499999999745, 0.0004748889999999992, 0.00047490299999999874, 0.0004748889999999992, 0.0004748330000000009, 0.0004748749999999996, 0.0004748889999999992, 0.00047481999999999386, 0.0004748889999999992, 0.0004749030000000057, 0.00047486100000000003, 0.0004747769999999957, 0.00047490299999999874, 0.00047490299999999874, 0.00047483299999999395, 0.0004749169999999914, 0.00047486100000000697, 0.0004748749999999996, 0.0004748609999999931, 0.00047484799999999994, 0.00047479200000000166, 0.00047479200000000166, 0.00047479200000000166, 0.0004748200000000008, 0.00047479200000000166, 0.00047481899999998745, 0.0004748190000000013, 0.0004747360000000034, 0.0004747640000000025, 0.0004747640000000025, 0.0004748059999999943, 0.0004748340000000073, 0.00047479200000000166, 0.0004748049999999948, 0.0004747910000000022, 0.00047477799999999515, 0.0004748609999999931, 0.00047484700000000046]</msg>
<status status="PASS" starttime="20201029 18:19:11.445" endtime="20201029 18:19:11.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.434" endtime="20201029 18:19:11.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.924" endtime="20201029 18:19:11.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.894" endtime="20201029 18:19:11.453"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.458" endtime="20201029 18:19:11.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.455" endtime="20201029 18:19:11.482"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.502" endtime="20201029 18:19:11.573"></status>
</kw>
<msg timestamp="20201029 18:19:11.575" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.499" endtime="20201029 18:19:11.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.581" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.577" endtime="20201029 18:19:11.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.583" endtime="20201029 18:19:11.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.492" endtime="20201029 18:19:11.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.487" endtime="20201029 18:19:11.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.606" endtime="20201029 18:19:11.945"></status>
</kw>
<msg timestamp="20201029 18:19:11.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035364625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035858278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.603" endtime="20201029 18:19:11.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035364625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035858278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.954" endtime="20201029 18:19:11.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.971" endtime="20201029 18:19:11.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.596" endtime="20201029 18:19:11.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.591" endtime="20201029 18:19:11.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:11.987" level="INFO">${PHILIP_RES} = [{'diff': 0.0004936530000000036}, {'diff': 0.0004941950000000028}, {'diff': 0.0004942089999999955}, {'diff': 0.0004942780000000008}, {'diff': 0.0004942780000000008}, {'diff': 0.000494222999999995}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:11.980" endtime="20201029 18:19:11.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.996" level="INFO">${RESULT} = {'diff': [0.0004936530000000036, 0.0004941950000000028, 0.0004942089999999955, 0.0004942780000000008, 0.0004942780000000008, 0.000494222999999995, 0.0004942640000000012, 0.000494207999999996, 0.000494...</msg>
<status status="PASS" starttime="20201029 18:19:11.989" endtime="20201029 18:19:11.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.007" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:12.005" endtime="20201029 18:19:12.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.012" level="INFO">VALUE: [0.0004936530000000036, 0.0004941950000000028, 0.0004942089999999955, 0.0004942780000000008, 0.0004942780000000008, 0.000494222999999995, 0.0004942640000000012, 0.000494207999999996, 0.0004942640000000012, 0.0004941389999999976, 0.0004942360000000021, 0.0004941940000000034, 0.0004942500000000016, 0.000494207999999996, 0.0004941949999999959, 0.0004942919999999934, 0.0004942500000000016, 0.0004941529999999972, 0.0004942500000000016, 0.0004942780000000008, 0.0004942089999999955, 0.0004942910000000009, 0.0004942220000000025, 0.0004942499999999878, 0.0004941809999999963, 0.0004941529999999972, 0.0004941810000000102, 0.000494124999999998, 0.000494124999999998, 0.0004940839999999919, 0.000494207999999996, 0.0004941659999999903, 0.0004941390000000045, 0.0004941519999999977, 0.0004941940000000034, 0.0004942500000000016, 0.0004941529999999972, 0.0004941810000000102, 0.0004942080000000099, 0.0004941390000000045, 0.0004941939999999895, 0.0004941529999999972, 0.0004941110000000054, 0.0004941950000000028, 0.0004942500000000016, 0.0004941519999999977, 0.0004941390000000045, 0.0004940689999999998, 0.0004942220000000025, 0.0004941940000000034]</msg>
<status status="PASS" starttime="20201029 18:19:12.009" endtime="20201029 18:19:12.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.998" endtime="20201029 18:19:12.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.483" endtime="20201029 18:19:12.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.453" endtime="20201029 18:19:12.017"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.023" endtime="20201029 18:19:12.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.020" endtime="20201029 18:19:12.047"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.069" endtime="20201029 18:19:12.142"></status>
</kw>
<msg timestamp="20201029 18:19:12.143" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.066" endtime="20201029 18:19:12.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.149" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.145" endtime="20201029 18:19:12.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.151" endtime="20201029 18:19:12.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.059" endtime="20201029 18:19:12.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.054" endtime="20201029 18:19:12.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.175" endtime="20201029 18:19:12.515"></status>
</kw>
<msg timestamp="20201029 18:19:12.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036052389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036566319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.171" endtime="20201029 18:19:12.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036052389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036566319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.523" endtime="20201029 18:19:12.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.541" endtime="20201029 18:19:12.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.164" endtime="20201029 18:19:12.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.160" endtime="20201029 18:19:12.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:12.557" level="INFO">${PHILIP_RES} = [{'diff': 0.0005139300000000027}, {'diff': 0.0005145559999999993}, {'diff': 0.0005144730000000014}, {'diff': 0.0005144720000000019}, {'diff': 0.0005145419999999998}, {'diff': 0.0005144720000000019}, {...</msg>
<status status="PASS" starttime="20201029 18:19:12.549" endtime="20201029 18:19:12.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.566" level="INFO">${RESULT} = {'diff': [0.0005139300000000027, 0.0005145559999999993, 0.0005144730000000014, 0.0005144720000000019, 0.0005145419999999998, 0.0005144720000000019, 0.0005145549999999999, 0.000514471999999995, 0.00051...</msg>
<status status="PASS" starttime="20201029 18:19:12.559" endtime="20201029 18:19:12.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.576" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:12.574" endtime="20201029 18:19:12.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.583" level="INFO">VALUE: [0.0005139300000000027, 0.0005145559999999993, 0.0005144730000000014, 0.0005144720000000019, 0.0005145419999999998, 0.0005144720000000019, 0.0005145549999999999, 0.000514471999999995, 0.0005144720000000019, 0.000514471999999995, 0.0005144450000000023, 0.0005144590000000018, 0.0005145280000000002, 0.0005144440000000028, 0.0005145000000000011, 0.0005144299999999963, 0.0005144300000000032, 0.0005144579999999954, 0.000514471999999995, 0.0005145000000000011, 0.0005143609999999979, 0.0005144720000000019, 0.0005144580000000093, 0.0005144450000000023, 0.0005145280000000002, 0.0005144440000000028, 0.0005145130000000081, 0.0005145559999999993, 0.0005144580000000093, 0.0005145280000000002, 0.0005145280000000002, 0.0005145000000000011, 0.0005145000000000011, 0.0005144589999999949, 0.0005145690000000064, 0.0005145419999999928, 0.0005145130000000081, 0.0005145549999999999, 0.0005145139999999937, 0.0005144860000000084, 0.0005145559999999993, 0.0005145690000000064, 0.0005145559999999993, 0.0005146109999999982, 0.0005145549999999999, 0.0005145559999999993, 0.0005145839999999985, 0.0005145840000000124, 0.0005145839999999985, 0.000514582999999999]</msg>
<status status="PASS" starttime="20201029 18:19:12.578" endtime="20201029 18:19:12.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.567" endtime="20201029 18:19:12.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.048" endtime="20201029 18:19:12.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.018" endtime="20201029 18:19:12.588"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.594" endtime="20201029 18:19:12.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.590" endtime="20201029 18:19:12.617"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.638" endtime="20201029 18:19:12.712"></status>
</kw>
<msg timestamp="20201029 18:19:12.713" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.634" endtime="20201029 18:19:12.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.719" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.715" endtime="20201029 18:19:12.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.722" endtime="20201029 18:19:12.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.627" endtime="20201029 18:19:12.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.622" endtime="20201029 18:19:12.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.745" endtime="20201029 18:19:13.090"></status>
</kw>
<msg timestamp="20201029 18:19:13.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034173625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034707417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.741" endtime="20201029 18:19:13.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034173625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034707417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.099" endtime="20201029 18:19:13.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.116" endtime="20201029 18:19:13.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.734" endtime="20201029 18:19:13.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.730" endtime="20201029 18:19:13.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:13.132" level="INFO">${PHILIP_RES} = [{'diff': 0.0005337919999999982}, {'diff': 0.0005348610000000045}, {'diff': 0.0005347779999999996}, {'diff': 0.0005348749999999972}, {'diff': 0.0005348890000000037}, {'diff': 0.0005348890000000037}, {...</msg>
<status status="PASS" starttime="20201029 18:19:13.124" endtime="20201029 18:19:13.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.142" level="INFO">${RESULT} = {'diff': [0.0005337919999999982, 0.0005348610000000045, 0.0005347779999999996, 0.0005348749999999972, 0.0005348890000000037, 0.0005348890000000037, 0.000534846999999998, 0.0005348189999999989, 0.00053...</msg>
<status status="PASS" starttime="20201029 18:19:13.134" endtime="20201029 18:19:13.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.153" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:13.151" endtime="20201029 18:19:13.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.158" level="INFO">VALUE: [0.0005337919999999982, 0.0005348610000000045, 0.0005347779999999996, 0.0005348749999999972, 0.0005348890000000037, 0.0005348890000000037, 0.000534846999999998, 0.0005348189999999989, 0.0005349160000000033, 0.0005348609999999976, 0.0005349170000000028, 0.000534846999999998, 0.0005348059999999988, 0.0005347630000000006, 0.0005347500000000005, 0.0005347919999999992, 0.0005347779999999996, 0.0005347500000000005, 0.0005347500000000005, 0.0005347640000000001, 0.0005347779999999996, 0.0005348330000000054, 0.0005348609999999976, 0.0005348889999999967, 0.0005349439999999955, 0.0005349169999999959, 0.0005349720000000086, 0.0005349439999999955, 0.000534944999999995, 0.0005349999999999938, 0.0005349030000000032, 0.0005349719999999947, 0.0005349300000000029, 0.0005349450000000089, 0.0005349439999999955, 0.0005349590000000015, 0.0005349170000000097, 0.0005348889999999967, 0.0005349030000000032, 0.0005348880000000111, 0.0005348059999999988, 0.0005348609999999976, 0.0005349860000000012, 0.0005349860000000012, 0.0005349029999999894, 0.000534847000000005, 0.0005348609999999976, 0.0005349439999999955, 0.0005349160000000103, 0.0005349030000000032]</msg>
<status status="PASS" starttime="20201029 18:19:13.155" endtime="20201029 18:19:13.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.144" endtime="20201029 18:19:13.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.618" endtime="20201029 18:19:13.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.589" endtime="20201029 18:19:13.163"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.169" endtime="20201029 18:19:13.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.165" endtime="20201029 18:19:13.192"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.213" endtime="20201029 18:19:13.289"></status>
</kw>
<msg timestamp="20201029 18:19:13.291" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.209" endtime="20201029 18:19:13.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.297" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.293" endtime="20201029 18:19:13.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.299" endtime="20201029 18:19:13.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.202" endtime="20201029 18:19:13.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.197" endtime="20201029 18:19:13.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.322" endtime="20201029 18:19:13.660"></status>
</kw>
<msg timestamp="20201029 18:19:13.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033759306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034313236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.319" endtime="20201029 18:19:13.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033759306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034313236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.669" endtime="20201029 18:19:13.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.686" endtime="20201029 18:19:13.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.312" endtime="20201029 18:19:13.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.307" endtime="20201029 18:19:13.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:13.702" level="INFO">${PHILIP_RES} = [{'diff': 0.0005539299999999941}, {'diff': 0.0005550559999999982}, {'diff': 0.0005550559999999982}, {'diff': 0.0005550279999999991}, {'diff': 0.0005551119999999965}, {'diff': 0.0005550699999999978}, {...</msg>
<status status="PASS" starttime="20201029 18:19:13.695" endtime="20201029 18:19:13.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.713" level="INFO">${RESULT} = {'diff': [0.0005539299999999941, 0.0005550559999999982, 0.0005550559999999982, 0.0005550279999999991, 0.0005551119999999965, 0.0005550699999999978, 0.0005551390000000031, 0.0005550559999999982, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:19:13.704" endtime="20201029 18:19:13.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.723" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:13.721" endtime="20201029 18:19:13.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.728" level="INFO">VALUE: [0.0005539299999999941, 0.0005550559999999982, 0.0005550559999999982, 0.0005550279999999991, 0.0005551119999999965, 0.0005550699999999978, 0.0005551390000000031, 0.0005550559999999982, 0.0005550279999999991, 0.0005550969999999975, 0.0005550839999999974, 0.0005550419999999986, 0.0005549720000000008, 0.0005550970000000044, 0.0005550699999999978, 0.0005550549999999987, 0.0005550700000000047, 0.0005550409999999992, 0.0005550829999999979, 0.0005550279999999991, 0.0005550839999999974, 0.0005551389999999962, 0.0005550140000000064, 0.0005550559999999982, 0.0005550970000000044, 0.0005551389999999962, 0.0005549999999999999, 0.0005550839999999974, 0.000555110999999997, 0.0005550549999999987, 0.0005550839999999974, 0.0005551249999999897, 0.0005550829999999979, 0.0005550969999999905, 0.0005549860000000073, 0.0005550690000000053, 0.0005550970000000044, 0.0005551250000000035, 0.0005551389999999962, 0.0005551530000000027, 0.0005550409999999922, 0.0005550690000000053, 0.0005551800000000023, 0.0005552359999999867, 0.000555209000000001, 0.0005550969999999905, 0.0005550970000000044, 0.0005550839999999974, 0.0005550970000000044, 0.0005550279999999991]</msg>
<status status="PASS" starttime="20201029 18:19:13.725" endtime="20201029 18:19:13.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.715" endtime="20201029 18:19:13.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.193" endtime="20201029 18:19:13.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.164" endtime="20201029 18:19:13.733"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.739" endtime="20201029 18:19:13.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.735" endtime="20201029 18:19:13.763"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.783" endtime="20201029 18:19:13.863"></status>
</kw>
<msg timestamp="20201029 18:19:13.864" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.780" endtime="20201029 18:19:13.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.870" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.866" endtime="20201029 18:19:13.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.872" endtime="20201029 18:19:13.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.773" endtime="20201029 18:19:13.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.768" endtime="20201029 18:19:13.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.895" endtime="20201029 18:19:14.261"></status>
</kw>
<msg timestamp="20201029 18:19:14.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034013944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034589417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.892" endtime="20201029 18:19:14.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034013944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034589417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.270" endtime="20201029 18:19:14.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.288" endtime="20201029 18:19:14.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.885" endtime="20201029 18:19:14.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.880" endtime="20201029 18:19:14.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:14.304" level="INFO">${PHILIP_RES} = [{'diff': 0.000575473}, {'diff': 0.0005753190000000047}, {'diff': 0.0005754170000000017}, {'diff': 0.0005753199999999972}, {'diff': 0.000575374999999996}, {'diff': 0.0005755139999999992}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:14.297" endtime="20201029 18:19:14.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:14.314" level="INFO">${RESULT} = {'diff': [0.000575473, 0.0005753190000000047, 0.0005754170000000017, 0.0005753199999999972, 0.000575374999999996, 0.0005755139999999992, 0.0005754300000000018, 0.0005753609999999965, 0.000575319000000...</msg>
<status status="PASS" starttime="20201029 18:19:14.306" endtime="20201029 18:19:14.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.324" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:14.322" endtime="20201029 18:19:14.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.330" level="INFO">VALUE: [0.000575473, 0.0005753190000000047, 0.0005754170000000017, 0.0005753199999999972, 0.000575374999999996, 0.0005755139999999992, 0.0005754300000000018, 0.0005753609999999965, 0.0005753190000000047, 0.0005754029999999952, 0.0005753610000000034, 0.000575374999999996, 0.0005753610000000034, 0.000575374999999996, 0.0005753329999999973, 0.0005753469999999969, 0.0005754300000000018, 0.000575457999999994, 0.0005753339999999968, 0.0005754590000000004, 0.0005754300000000018, 0.0005753470000000038, 0.0005753889999999956, 0.0005753890000000095, 0.0005753339999999968, 0.0005754020000000026, 0.0005753609999999965, 0.0005754169999999947, 0.0005754300000000018, 0.0005753889999999956, 0.000575486, 0.0005754590000000004, 0.0005754030000000021, 0.0005754580000000009, 0.0005753610000000103, 0.0005752919999999911, 0.0005754160000000091, 0.0005753190000000047, 0.0005754439999999944, 0.000575375000000003, 0.0005752089999999932, 0.00057534699999999, 0.0005753470000000038, 0.0005753480000000033, 0.0005754720000000074, 0.000575486, 0.0005753889999999956, 0.0005754580000000009, 0.0005754580000000009, 0.0005753889999999956]</msg>
<status status="PASS" starttime="20201029 18:19:14.327" endtime="20201029 18:19:14.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.315" endtime="20201029 18:19:14.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.764" endtime="20201029 18:19:14.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.734" endtime="20201029 18:19:14.335"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:14.340" endtime="20201029 18:19:14.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.337" endtime="20201029 18:19:14.365"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.386" endtime="20201029 18:19:14.470"></status>
</kw>
<msg timestamp="20201029 18:19:14.471" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.382" endtime="20201029 18:19:14.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.477" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.473" endtime="20201029 18:19:14.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.479" endtime="20201029 18:19:14.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.375" endtime="20201029 18:19:14.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.370" endtime="20201029 18:19:14.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.503" endtime="20201029 18:19:14.857"></status>
</kw>
<msg timestamp="20201029 18:19:14.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036516792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037113681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.500" endtime="20201029 18:19:14.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036516792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037113681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.866" endtime="20201029 18:19:14.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.884" endtime="20201029 18:19:14.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.493" endtime="20201029 18:19:14.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.488" endtime="20201029 18:19:14.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:14.900" level="INFO">${PHILIP_RES} = [{'diff': 0.0005968890000000032}, {'diff': 0.0005968049999999989}, {'diff': 0.0005966940000000018}, {'diff': 0.0005967779999999992}, {'diff': 0.0005967080000000013}, {'diff': 0.0005967230000000004}, {...</msg>
<status status="PASS" starttime="20201029 18:19:14.893" endtime="20201029 18:19:14.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:14.910" level="INFO">${RESULT} = {'diff': [0.0005968890000000032, 0.0005968049999999989, 0.0005966940000000018, 0.0005967779999999992, 0.0005967080000000013, 0.0005967230000000004, 0.0005967639999999996, 0.0005967090000000008, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:19:14.903" endtime="20201029 18:19:14.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.920" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:14.918" endtime="20201029 18:19:14.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.926" level="INFO">VALUE: [0.0005968890000000032, 0.0005968049999999989, 0.0005966940000000018, 0.0005967779999999992, 0.0005967080000000013, 0.0005967230000000004, 0.0005967639999999996, 0.0005967090000000008, 0.0005967910000000062, 0.0005967909999999993, 0.0005967780000000061, 0.0005967779999999992, 0.0005967639999999996, 0.0005967360000000005, 0.0005966529999999956, 0.0005966940000000018, 0.0005967220000000009, 0.0005966950000000013, 0.000596750000000007, 0.000596721999999994, 0.000596638999999996, 0.0005965690000000051, 0.0005966659999999957, 0.0005967080000000013, 0.0005966810000000017, 0.0005968340000000044, 0.0005966949999999943, 0.0005966939999999948, 0.000596750000000007, 0.0005967639999999996, 0.0005967499999999931, 0.0005967360000000005, 0.0005966939999999948, 0.0005967360000000005, 0.0005968189999999984, 0.0005968330000000049, 0.000596721999999994, 0.000596750000000007, 0.0005966800000000022, 0.0005967080000000013, 0.0005967770000000067, 0.000596721999999994, 0.0005967090000000008, 0.000596750000000007, 0.0005968059999999914, 0.0005968059999999914, 0.0005968470000000115, 0.0005968060000000053, 0.0005967499999999931, 0.0005968060000000053]</msg>
<status status="PASS" starttime="20201029 18:19:14.923" endtime="20201029 18:19:14.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.911" endtime="20201029 18:19:14.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.366" endtime="20201029 18:19:14.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.335" endtime="20201029 18:19:14.935"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:14.941" endtime="20201029 18:19:14.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.937" endtime="20201029 18:19:14.965"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.988" endtime="20201029 18:19:15.073"></status>
</kw>
<msg timestamp="20201029 18:19:15.074" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.984" endtime="20201029 18:19:15.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.081" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.076" endtime="20201029 18:19:15.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.083" endtime="20201029 18:19:15.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.977" endtime="20201029 18:19:15.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.972" endtime="20201029 18:19:15.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.107" endtime="20201029 18:19:15.459"></status>
</kw>
<msg timestamp="20201029 18:19:15.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036917778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037535278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.104" endtime="20201029 18:19:15.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036917778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037535278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.468" endtime="20201029 18:19:15.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.486" endtime="20201029 18:19:15.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.096" endtime="20201029 18:19:15.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.091" endtime="20201029 18:19:15.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:15.506" level="INFO">${PHILIP_RES} = [{'diff': 0.0006175}, {'diff': 0.0006181950000000019}, {'diff': 0.0006182220000000016}, {'diff': 0.0006180829999999984}, {'diff': 0.0006182090000000015}, {'diff': 0.0006182089999999946}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:15.497" endtime="20201029 18:19:15.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.515" level="INFO">${RESULT} = {'diff': [0.0006175, 0.0006181950000000019, 0.0006182220000000016, 0.0006180829999999984, 0.0006182090000000015, 0.0006182089999999946, 0.0006181670000000028, 0.0006181810000000024, 0.0006181390000000...</msg>
<status status="PASS" starttime="20201029 18:19:15.508" endtime="20201029 18:19:15.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.526" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:15.523" endtime="20201029 18:19:15.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.533" level="INFO">VALUE: [0.0006175, 0.0006181950000000019, 0.0006182220000000016, 0.0006180829999999984, 0.0006182090000000015, 0.0006182089999999946, 0.0006181670000000028, 0.0006181810000000024, 0.0006181390000000037, 0.0006180839999999979, 0.0006180979999999975, 0.0006181110000000045, 0.0006180419999999992, 0.000618096999999998, 0.0006180559999999988, 0.0006180840000000049, 0.0006181110000000045, 0.0006181390000000037, 0.0006180550000000062, 0.0006179439999999953, 0.0006180549999999924, 0.0006180700000000122, 0.0006180689999999989, 0.0006180560000000057, 0.0006181109999999906, 0.0006181249999999971, 0.0006181249999999971, 0.0006180689999999989, 0.0006180980000000114, 0.0006180560000000057, 0.0006180699999999983, 0.0006180559999999918, 0.0006181249999999971, 0.0006181390000000037, 0.0006181390000000037, 0.0006181110000000045, 0.0006182079999999951, 0.0006181390000000037, 0.0006181249999999971, 0.0006181110000000045, 0.0006181670000000028, 0.0006182079999999951, 0.0006181389999999898, 0.0006181809999999954, 0.0006181249999999971, 0.0006181390000000037, 0.0006180700000000122, 0.0006180830000000054, 0.0006180559999999918, 0.0006179720000000083]</msg>
<status status="PASS" starttime="20201029 18:19:15.528" endtime="20201029 18:19:15.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.517" endtime="20201029 18:19:15.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.966" endtime="20201029 18:19:15.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.936" endtime="20201029 18:19:15.538"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.544" endtime="20201029 18:19:15.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.540" endtime="20201029 18:19:15.568"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.589" endtime="20201029 18:19:15.676"></status>
</kw>
<msg timestamp="20201029 18:19:15.677" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.586" endtime="20201029 18:19:15.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.684" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.680" endtime="20201029 18:19:15.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.686" endtime="20201029 18:19:15.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.578" endtime="20201029 18:19:15.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.573" endtime="20201029 18:19:15.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.710" endtime="20201029 18:19:16.062"></status>
</kw>
<msg timestamp="20201029 18:19:16.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035122264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035761389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.707" endtime="20201029 18:19:16.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035122264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035761389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.071" endtime="20201029 18:19:16.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.089" endtime="20201029 18:19:16.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.699" endtime="20201029 18:19:16.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.694" endtime="20201029 18:19:16.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:16.105" level="INFO">${PHILIP_RES} = [{'diff': 0.0006391249999999973}, {'diff': 0.0006391389999999969}, {'diff': 0.0006391389999999969}, {'diff': 0.0006392220000000018}, {'diff': 0.0006392360000000014}, {'diff': 0.0006392230000000013}, {...</msg>
<status status="PASS" starttime="20201029 18:19:16.097" endtime="20201029 18:19:16.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.116" level="INFO">${RESULT} = {'diff': [0.0006391249999999973, 0.0006391389999999969, 0.0006391389999999969, 0.0006392220000000018, 0.0006392360000000014, 0.0006392230000000013, 0.000639263000000001, 0.0006393339999999983, 0.00063...</msg>
<status status="PASS" starttime="20201029 18:19:16.107" endtime="20201029 18:19:16.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.126" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:16.124" endtime="20201029 18:19:16.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.132" level="INFO">VALUE: [0.0006391249999999973, 0.0006391389999999969, 0.0006391389999999969, 0.0006392220000000018, 0.0006392360000000014, 0.0006392230000000013, 0.000639263000000001, 0.0006393339999999983, 0.0006392919999999996, 0.000639360999999998, 0.0006394029999999967, 0.0006393049999999997, 0.0006393199999999988, 0.0006393189999999993, 0.0006392360000000014, 0.0006393059999999992, 0.0006393199999999988, 0.0006394580000000025, 0.0006393749999999976, 0.0006393469999999984, 0.0006393469999999984, 0.0006392910000000002, 0.0006392919999999996, 0.0006393189999999993, 0.0006393060000000061, 0.0006393049999999928, 0.0006392500000000079, 0.0006392640000000005, 0.0006391800000000031, 0.000639249999999994, 0.0006393330000000058, 0.0006392910000000002, 0.0006393199999999988, 0.0006392779999999931, 0.0006393050000000067, 0.0006393340000000053, 0.0006394160000000038, 0.0006392779999999931, 0.0006393469999999984, 0.0006393469999999984, 0.0006393199999999988, 0.0006392500000000079, 0.0006392640000000005, 0.0006392779999999931, 0.000639249999999994, 0.0006392910000000002, 0.0006393329999999919, 0.0006393340000000053, 0.0006392779999999931, 0.0006393200000000127]</msg>
<status status="PASS" starttime="20201029 18:19:16.129" endtime="20201029 18:19:16.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.118" endtime="20201029 18:19:16.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.569" endtime="20201029 18:19:16.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.539" endtime="20201029 18:19:16.137"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.143" endtime="20201029 18:19:16.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.139" endtime="20201029 18:19:16.166"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.187" endtime="20201029 18:19:16.277"></status>
</kw>
<msg timestamp="20201029 18:19:16.278" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.184" endtime="20201029 18:19:16.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.284" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.280" endtime="20201029 18:19:16.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.287" endtime="20201029 18:19:16.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.177" endtime="20201029 18:19:16.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.172" endtime="20201029 18:19:16.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.311" endtime="20201029 18:19:16.665"></status>
</kw>
<msg timestamp="20201029 18:19:16.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034952069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035611708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.307" endtime="20201029 18:19:16.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034952069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035611708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.674" endtime="20201029 18:19:16.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.692" endtime="20201029 18:19:16.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.300" endtime="20201029 18:19:16.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.295" endtime="20201029 18:19:16.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:16.708" level="INFO">${PHILIP_RES} = [{'diff': 0.0006596389999999966}, {'diff': 0.0006606669999999967}, {'diff': 0.0006607090000000024}, {'diff': 0.0006606390000000045}, {'diff': 0.0006606939999999964}, {'diff': 0.0006606670000000037}, {...</msg>
<status status="PASS" starttime="20201029 18:19:16.700" endtime="20201029 18:19:16.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.719" level="INFO">${RESULT} = {'diff': [0.0006596389999999966, 0.0006606669999999967, 0.0006607090000000024, 0.0006606390000000045, 0.0006606939999999964, 0.0006606670000000037, 0.0006606670000000037, 0.0006606669999999967, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:19:16.710" endtime="20201029 18:19:16.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.730" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:16.727" endtime="20201029 18:19:16.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.735" level="INFO">VALUE: [0.0006596389999999966, 0.0006606669999999967, 0.0006607090000000024, 0.0006606390000000045, 0.0006606939999999964, 0.0006606670000000037, 0.0006606670000000037, 0.0006606669999999967, 0.0006606670000000037, 0.0006607640000000012, 0.0006606109999999984, 0.000660625000000005, 0.0006606660000000042, 0.0006605689999999997, 0.0006606799999999968, 0.0006605980000000053, 0.0006606810000000032, 0.0006605689999999997, 0.0006605699999999992, 0.0006605550000000071, 0.000660527000000008, 0.0006605420000000001, 0.0006605279999999936, 0.0006605829999999924, 0.0006605000000000083, 0.0006605140000000009, 0.0006604580000000027, 0.0006605700000000131, 0.0006604860000000018, 0.0006604999999999944, 0.0006604860000000018, 0.0006605689999999997, 0.0006604719999999953, 0.0006605410000000006, 0.0006604719999999953, 0.0006605699999999992, 0.0006605279999999936, 0.0006604720000000092, 0.0006604870000000013, 0.0006604020000000044, 0.0006604030000000038, 0.0006604439999999961, 0.0006604439999999961, 0.0006604580000000027, 0.0006603749999999908, 0.0006604720000000092, 0.0006605140000000009, 0.0006605560000000066, 0.0006605420000000001, 0.0006605979999999984]</msg>
<status status="PASS" starttime="20201029 18:19:16.732" endtime="20201029 18:19:16.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.721" endtime="20201029 18:19:16.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.168" endtime="20201029 18:19:16.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.138" endtime="20201029 18:19:16.740"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.746" endtime="20201029 18:19:16.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.742" endtime="20201029 18:19:16.772"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.807" endtime="20201029 18:19:16.900"></status>
</kw>
<msg timestamp="20201029 18:19:16.901" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.802" endtime="20201029 18:19:16.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.907" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.903" endtime="20201029 18:19:16.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.909" endtime="20201029 18:19:16.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.790" endtime="20201029 18:19:16.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.783" endtime="20201029 18:19:16.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.932" endtime="20201029 18:19:17.287"></status>
</kw>
<msg timestamp="20201029 18:19:17.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052272681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052955306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.929" endtime="20201029 18:19:17.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052272681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052955306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.295" endtime="20201029 18:19:17.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.313" endtime="20201029 18:19:17.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.922" endtime="20201029 18:19:17.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.917" endtime="20201029 18:19:17.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:17.328" level="INFO">${PHILIP_RES} = [{'diff': 0.0006826249999999992}, {'diff': 0.0006829310000000047}, {'diff': 0.0006829029999999986}, {'diff': 0.0006829029999999986}, {'diff': 0.0006828470000000003}, {'diff': 0.0006828470000000003}, {...</msg>
<status status="PASS" starttime="20201029 18:19:17.321" endtime="20201029 18:19:17.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:17.337" level="INFO">${RESULT} = {'diff': [0.0006826249999999992, 0.0006829310000000047, 0.0006829029999999986, 0.0006829029999999986, 0.0006828470000000003, 0.0006828470000000003, 0.0006828330000000007, 0.0006829159999999918, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:19:17.331" endtime="20201029 18:19:17.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.348" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:17.345" endtime="20201029 18:19:17.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.353" level="INFO">VALUE: [0.0006826249999999992, 0.0006829310000000047, 0.0006829029999999986, 0.0006829029999999986, 0.0006828470000000003, 0.0006828470000000003, 0.0006828330000000007, 0.0006829159999999918, 0.0006827919999999876, 0.0006828610000000068, 0.0006829170000000051, 0.0006828330000000077, 0.0006829450000000042, 0.0006830139999999957, 0.0006829300000000121, 0.0006830270000000027, 0.000683000000000003, 0.0006829159999999918, 0.0006829440000000048, 0.0006828889999999921, 0.0006829859999999965, 0.0006829859999999965, 0.0006831939999999981, 0.0006830270000000027, 0.0006830689999999945, 0.0006830970000000075, 0.0006830410000000092, 0.000683000000000003, 0.000683000000000003, 0.0006828339999999933, 0.0006830270000000027, 0.000682889000000006, 0.0006828200000000006, 0.0006829299999999983, 0.00068297199999999, 0.0006829450000000042, 0.0006829170000000051, 0.0006828200000000006, 0.0006829720000000039, 0.0006829159999999918, 0.0006829720000000039, 0.000682889000000006, 0.0006828749999999995, 0.0006829160000000056, 0.0006829449999999904, 0.0006829439999999909, 0.0006828889999999921, 0.0006829719999999762, 0.0006829590000000108, 0.0006829449999999904]</msg>
<status status="PASS" starttime="20201029 18:19:17.350" endtime="20201029 18:19:17.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.339" endtime="20201029 18:19:17.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.776" endtime="20201029 18:19:17.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.741" endtime="20201029 18:19:17.358"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:17.364" endtime="20201029 18:19:17.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.360" endtime="20201029 18:19:17.387"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.408" endtime="20201029 18:19:17.502"></status>
</kw>
<msg timestamp="20201029 18:19:17.504" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.405" endtime="20201029 18:19:17.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.510" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.506" endtime="20201029 18:19:17.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.512" endtime="20201029 18:19:17.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.397" endtime="20201029 18:19:17.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.392" endtime="20201029 18:19:17.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.536" endtime="20201029 18:19:17.875"></status>
</kw>
<msg timestamp="20201029 18:19:17.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035665292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036370194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.532" endtime="20201029 18:19:17.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035665292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036370194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.884" endtime="20201029 18:19:17.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.901" endtime="20201029 18:19:17.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.525" endtime="20201029 18:19:17.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.520" endtime="20201029 18:19:17.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:17.917" level="INFO">${PHILIP_RES} = [{'diff': 0.0007049020000000003}, {'diff': 0.0007050970000000018}, {'diff': 0.0007052640000000041}, {'diff': 0.000705235999999998}, {'diff': 0.000705235999999998}, {'diff': 0.0007053480000000015}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:17.910" endtime="20201029 18:19:17.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:17.926" level="INFO">${RESULT} = {'diff': [0.0007049020000000003, 0.0007050970000000018, 0.0007052640000000041, 0.000705235999999998, 0.000705235999999998, 0.0007053480000000015, 0.0007053200000000023, 0.0007053610000000016, 0.000705...</msg>
<status status="PASS" starttime="20201029 18:19:17.919" endtime="20201029 18:19:17.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.936" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:17.934" endtime="20201029 18:19:17.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.942" level="INFO">VALUE: [0.0007049020000000003, 0.0007050970000000018, 0.0007052640000000041, 0.000705235999999998, 0.000705235999999998, 0.0007053480000000015, 0.0007053200000000023, 0.0007053610000000016, 0.0007052639999999971, 0.0007051939999999993, 0.0007052919999999963, 0.0007053330000000024, 0.0007052640000000041, 0.0007052499999999975, 0.0007051110000000013, 0.0007052780000000036, 0.0007053189999999959, 0.0007053340000000019, 0.0007052780000000036, 0.0007052920000000101, 0.0007052910000000107, 0.0007053749999999942, 0.0007054309999999925, 0.0007054169999999998, 0.0007053610000000016, 0.0007053890000000007, 0.0007053880000000012, 0.0007055419999999896, 0.0007054169999999998, 0.0007054439999999995, 0.0007054859999999913, 0.0007053610000000016, 0.0007054310000000064, 0.0007053610000000016, 0.0007053469999999951, 0.000705429999999993, 0.0007054030000000072, 0.0007053880000000012, 0.0007053749999999942, 0.0007053890000000007, 0.0007053619999999872, 0.0007054030000000072, 0.0007053190000000098, 0.0007053469999999951, 0.0007054169999999998, 0.0007054309999999925, 0.0007053189999999959, 0.0007053340000000019, 0.0007054030000000072, 0.0007053890000000007]</msg>
<status status="PASS" starttime="20201029 18:19:17.939" endtime="20201029 18:19:17.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.928" endtime="20201029 18:19:17.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.388" endtime="20201029 18:19:17.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.359" endtime="20201029 18:19:17.946"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:17.952" endtime="20201029 18:19:17.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.949" endtime="20201029 18:19:17.977"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.000" endtime="20201029 18:19:18.095"></status>
</kw>
<msg timestamp="20201029 18:19:18.096" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.996" endtime="20201029 18:19:18.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.103" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.098" endtime="20201029 18:19:18.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.105" endtime="20201029 18:19:18.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.989" endtime="20201029 18:19:18.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.984" endtime="20201029 18:19:18.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.128" endtime="20201029 18:19:18.483"></status>
</kw>
<msg timestamp="20201029 18:19:18.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037342375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038069542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.125" endtime="20201029 18:19:18.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037342375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038069542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.491" endtime="20201029 18:19:18.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.511" endtime="20201029 18:19:18.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.118" endtime="20201029 18:19:18.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.113" endtime="20201029 18:19:18.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:18.528" level="INFO">${PHILIP_RES} = [{'diff': 0.0007271670000000008}, {'diff': 0.0007275830000000039}, {'diff': 0.0007275839999999964}, {'diff': 0.0007275689999999974}, {'diff': 0.0007275829999999969}, {'diff': 0.0007275559999999973}, {...</msg>
<status status="PASS" starttime="20201029 18:19:18.520" endtime="20201029 18:19:18.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.537" level="INFO">${RESULT} = {'diff': [0.0007271670000000008, 0.0007275830000000039, 0.0007275839999999964, 0.0007275689999999974, 0.0007275829999999969, 0.0007275559999999973, 0.0007274719999999998, 0.0007275689999999974, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:19:18.530" endtime="20201029 18:19:18.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.547" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:18.545" endtime="20201029 18:19:18.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.555" level="INFO">VALUE: [0.0007271670000000008, 0.0007275830000000039, 0.0007275839999999964, 0.0007275689999999974, 0.0007275829999999969, 0.0007275559999999973, 0.0007274719999999998, 0.0007275689999999974, 0.0007274859999999994, 0.0007275830000000039, 0.0007275139999999986, 0.0007276390000000021, 0.0007276670000000013, 0.0007274859999999994, 0.0007275689999999974, 0.0007274169999999941, 0.0007275969999999965, 0.0007275840000000033, 0.0007275279999999912, 0.0007276389999999883, 0.0007275139999999986, 0.0007276249999999956, 0.0007276250000000095, 0.0007274580000000003, 0.0007274720000000068, 0.0007274440000000076, 0.0007275139999999986, 0.0007274580000000003, 0.0007274859999999994, 0.0007275139999999986, 0.0007274580000000003, 0.0007275000000000059, 0.0007275560000000042, 0.0007275980000000098, 0.0007273339999999962, 0.0007273749999999884, 0.0007274310000000006, 0.0007274719999999929, 0.0007275550000000047, 0.0007273750000000023, 0.0007273750000000023, 0.0007273329999999967, 0.0007274030000000015, 0.0007275000000000059, 0.0007274019999999881, 0.0007274030000000015, 0.0007274450000000071, 0.000727499999999992, 0.0007273200000000035, 0.0007274450000000071]</msg>
<status status="PASS" starttime="20201029 18:19:18.550" endtime="20201029 18:19:18.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.539" endtime="20201029 18:19:18.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.978" endtime="20201029 18:19:18.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.947" endtime="20201029 18:19:18.560"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.566" endtime="20201029 18:19:18.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.562" endtime="20201029 18:19:18.591"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.613" endtime="20201029 18:19:18.712"></status>
</kw>
<msg timestamp="20201029 18:19:18.713" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.609" endtime="20201029 18:19:18.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.720" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.715" endtime="20201029 18:19:18.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.722" endtime="20201029 18:19:18.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.602" endtime="20201029 18:19:18.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.596" endtime="20201029 18:19:18.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.746" endtime="20201029 18:19:19.109"></status>
</kw>
<msg timestamp="20201029 18:19:19.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036172083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036921847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.742" endtime="20201029 18:19:19.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036172083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036921847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.118" endtime="20201029 18:19:19.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.136" endtime="20201029 18:19:19.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.735" endtime="20201029 18:19:19.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.730" endtime="20201029 18:19:19.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:19.152" level="INFO">${PHILIP_RES} = [{'diff': 0.000749764}, {'diff': 0.0007496800000000026}, {'diff': 0.0007498200000000052}, {'diff': 0.0007497919999999991}, {'diff': 0.0007498329999999984}, {'diff': 0.0007497090000000012}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 18:19:19.145" endtime="20201029 18:19:19.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:19.163" level="INFO">${RESULT} = {'diff': [0.000749764, 0.0007496800000000026, 0.0007498200000000052, 0.0007497919999999991, 0.0007498329999999984, 0.0007497090000000012, 0.000749681000000002, 0.0007497500000000004, 0.000749750000000...</msg>
<status status="PASS" starttime="20201029 18:19:19.154" endtime="20201029 18:19:19.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.174" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:19.172" endtime="20201029 18:19:19.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.179" level="INFO">VALUE: [0.000749764, 0.0007496800000000026, 0.0007498200000000052, 0.0007497919999999991, 0.0007498329999999984, 0.0007497090000000012, 0.000749681000000002, 0.0007497500000000004, 0.0007497500000000004, 0.0007497779999999996, 0.0007498329999999984, 0.0007497630000000005, 0.0007498049999999992, 0.000749764, 0.0007496949999999947, 0.0007497500000000074, 0.0007496249999999899, 0.0007495839999999976, 0.0007497360000000008, 0.0007496949999999947, 0.0007496939999999952, 0.0007496950000000085, 0.0007497080000000017, 0.0007495969999999907, 0.0007497080000000017, 0.0007496669999999955, 0.0007497360000000008, 0.000749652999999989, 0.0007496669999999955, 0.0007496659999999961, 0.0007496670000000094, 0.0007496249999999899, 0.0007498189999999988, 0.0007496250000000038, 0.0007496389999999964, 0.0007496940000000091, 0.0007497919999999991, 0.0007498060000000056, 0.0007496669999999955, 0.0007497499999999935, 0.0007496669999999955, 0.0007495970000000046, 0.0007497080000000017, 0.0007497360000000008, 0.0007497219999999943, 0.0007496109999999973, 0.0007496109999999973, 0.0007496950000000085, 0.0007497360000000008, 0.0007495980000000041]</msg>
<status status="PASS" starttime="20201029 18:19:19.176" endtime="20201029 18:19:19.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.165" endtime="20201029 18:19:19.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.592" endtime="20201029 18:19:19.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.561" endtime="20201029 18:19:19.184"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.190" endtime="20201029 18:19:19.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.186" endtime="20201029 18:19:19.214"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.235" endtime="20201029 18:19:19.337"></status>
</kw>
<msg timestamp="20201029 18:19:19.338" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.232" endtime="20201029 18:19:19.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.344" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.340" endtime="20201029 18:19:19.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.346" endtime="20201029 18:19:19.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.224" endtime="20201029 18:19:19.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.219" endtime="20201029 18:19:19.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.371" endtime="20201029 18:19:19.736"></status>
</kw>
<msg timestamp="20201029 18:19:19.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03502275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035794097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:19.367" endtime="20201029 18:19:19.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03502275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035794097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:19.745" endtime="20201029 18:19:19.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.763" endtime="20201029 18:19:19.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.360" endtime="20201029 18:19:19.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.355" endtime="20201029 18:19:19.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:19.780" level="INFO">${PHILIP_RES} = [{'diff': 0.0007713469999999986}, {'diff': 0.0007729159999999985}, {'diff': 0.0007731109999999999}, {'diff': 0.0007731109999999999}, {'diff': 0.0007731950000000043}, {'diff': 0.0007728889999999988}, {...</msg>
<status status="PASS" starttime="20201029 18:19:19.772" endtime="20201029 18:19:19.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:19.791" level="INFO">${RESULT} = {'diff': [0.0007713469999999986, 0.0007729159999999985, 0.0007731109999999999, 0.0007731109999999999, 0.0007731950000000043, 0.0007728889999999988, 0.000772819000000001, 0.0007729029999999984, 0.00077...</msg>
<status status="PASS" starttime="20201029 18:19:19.782" endtime="20201029 18:19:19.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.801" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:19.799" endtime="20201029 18:19:19.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.807" level="INFO">VALUE: [0.0007713469999999986, 0.0007729159999999985, 0.0007731109999999999, 0.0007731109999999999, 0.0007731950000000043, 0.0007728889999999988, 0.000772819000000001, 0.0007729029999999984, 0.000772916999999998, 0.0007728330000000005, 0.0007729449999999971, 0.0007729170000000049, 0.0007728470000000001, 0.0007729440000000046, 0.000772930000000005, 0.0007730410000000021, 0.000773013000000003, 0.0007730699999999868, 0.000773027999999995, 0.0007729580000000041, 0.0007728749999999923, 0.0007729020000000059, 0.0007730129999999891, 0.0007729859999999894, 0.0007728889999999988, 0.0007729439999999976, 0.0007729590000000036, 0.0007728749999999923, 0.0007727219999999896, 0.0007729860000000033, 0.0007729030000000053, 0.0007728750000000062, 0.0007729859999999894, 0.0007730140000000024, 0.0007729860000000033, 0.0007730280000000089, 0.0007728479999999927, 0.0007728750000000062, 0.0007727369999999956, 0.000772901999999992, 0.0007728330000000005, 0.0007729030000000053, 0.0007729159999999985, 0.0007727640000000091, 0.0007728889999999988, 0.0007729030000000053, 0.0007728469999999932, 0.0007728609999999997, 0.0007730140000000024, 0.0007730280000000089]</msg>
<status status="PASS" starttime="20201029 18:19:19.804" endtime="20201029 18:19:19.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.792" endtime="20201029 18:19:19.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.215" endtime="20201029 18:19:19.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.185" endtime="20201029 18:19:19.812"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.818" endtime="20201029 18:19:19.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.814" endtime="20201029 18:19:19.841"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.863" endtime="20201029 18:19:19.967"></status>
</kw>
<msg timestamp="20201029 18:19:19.969" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.860" endtime="20201029 18:19:19.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.975" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.971" endtime="20201029 18:19:19.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.977" endtime="20201029 18:19:19.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.852" endtime="20201029 18:19:19.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.847" endtime="20201029 18:19:19.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.001" endtime="20201029 18:19:20.371"></status>
</kw>
<msg timestamp="20201029 18:19:20.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035787639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036582722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.998" endtime="20201029 18:19:20.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035787639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036582722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.381" endtime="20201029 18:19:20.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.398" endtime="20201029 18:19:20.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.990" endtime="20201029 18:19:20.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.986" endtime="20201029 18:19:20.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:20.415" level="INFO">${PHILIP_RES} = [{'diff': 0.000795082999999995}, {'diff': 0.0007962219999999992}, {'diff': 0.0007963049999999972}, {'diff': 0.0007961670000000004}, {'diff': 0.0007961940000000001}, {'diff': 0.0007963049999999972}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:20.407" endtime="20201029 18:19:20.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.424" level="INFO">${RESULT} = {'diff': [0.000795082999999995, 0.0007962219999999992, 0.0007963049999999972, 0.0007961670000000004, 0.0007961940000000001, 0.0007963049999999972, 0.0007963470000000028, 0.0007962499999999983, 0.00079...</msg>
<status status="PASS" starttime="20201029 18:19:20.417" endtime="20201029 18:19:20.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.435" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:20.432" endtime="20201029 18:19:20.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.440" level="INFO">VALUE: [0.000795082999999995, 0.0007962219999999992, 0.0007963049999999972, 0.0007961670000000004, 0.0007961940000000001, 0.0007963049999999972, 0.0007963470000000028, 0.0007962499999999983, 0.0007961800000000005, 0.0007962359999999988, 0.0007964310000000002, 0.0007963610000000024, 0.000796485999999999, 0.0007965559999999969, 0.0007963609999999954, 0.000796276999999998, 0.0007964030000000011, 0.0007962909999999906, 0.0007963609999999954, 0.0007964169999999937, 0.0007964869999999985, 0.0007963059999999966, 0.0007963329999999963, 0.0007963480000000023, 0.0007963060000000105, 0.000796180999999993, 0.0007963329999999963, 0.0007962919999999901, 0.0007963889999999946, 0.0007963049999999972, 0.0007963890000000085, 0.0007963750000000019, 0.0007964310000000002, 0.0007963200000000031, 0.0007963890000000085, 0.0007964030000000011, 0.0007964589999999994, 0.0007963470000000028, 0.0007962779999999975, 0.0007961940000000001, 0.0007961799999999936, 0.0007963329999999963, 0.000796292000000004, 0.0007963339999999958, 0.0007964310000000002, 0.0007964720000000064, 0.000796485999999999, 0.0007964309999999863, 0.0007963189999999898, 0.0007963189999999898]</msg>
<status status="PASS" starttime="20201029 18:19:20.437" endtime="20201029 18:19:20.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.426" endtime="20201029 18:19:20.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.843" endtime="20201029 18:19:20.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.813" endtime="20201029 18:19:20.450"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:20.456" endtime="20201029 18:19:20.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.452" endtime="20201029 18:19:20.480"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.501" endtime="20201029 18:19:20.609"></status>
</kw>
<msg timestamp="20201029 18:19:20.610" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.497" endtime="20201029 18:19:20.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.616" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.612" endtime="20201029 18:19:20.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.619" endtime="20201029 18:19:20.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.490" endtime="20201029 18:19:20.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.485" endtime="20201029 18:19:20.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.643" endtime="20201029 18:19:20.997"></status>
</kw>
<msg timestamp="20201029 18:19:21.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036606139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037424542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.639" endtime="20201029 18:19:21.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036606139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037424542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.006" endtime="20201029 18:19:21.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.024" endtime="20201029 18:19:21.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.632" endtime="20201029 18:19:21.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.627" endtime="20201029 18:19:21.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:21.040" level="INFO">${PHILIP_RES} = [{'diff': 0.0008184029999999953}, {'diff': 0.000819556000000006}, {'diff': 0.0008195549999999996}, {'diff': 0.000819541}, {'diff': 0.0008196249999999974}, {'diff': 0.0008195419999999995}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:21.032" endtime="20201029 18:19:21.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.048" level="INFO">${RESULT} = {'diff': [0.0008184029999999953, 0.000819556000000006, 0.0008195549999999996, 0.000819541, 0.0008196249999999974, 0.0008195419999999995, 0.0008195419999999995, 0.000819556000000006, 0.0008195279999999...</msg>
<status status="PASS" starttime="20201029 18:19:21.042" endtime="20201029 18:19:21.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.059" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:21.057" endtime="20201029 18:19:21.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.064" level="INFO">VALUE: [0.0008184029999999953, 0.000819556000000006, 0.0008195549999999996, 0.000819541, 0.0008196249999999974, 0.0008195419999999995, 0.0008195419999999995, 0.000819556000000006, 0.0008195279999999999, 0.0008194590000000015, 0.000819541, 0.0008195549999999996, 0.0008192779999999997, 0.0008193609999999976, 0.000819346999999998, 0.0008194440000000025, 0.0008194309999999955, 0.0008194579999999951, 0.0008195699999999917, 0.000819445000000002, 0.000819458000000009, 0.000819346999999998, 0.000819445000000002, 0.000819416999999989, 0.0008193479999999975, 0.0008193750000000111, 0.0008194720000000016, 0.0008194859999999943, 0.0008195139999999934, 0.0008195279999999999, 0.0008195969999999914, 0.0008195279999999999, 0.0008193750000000111, 0.0008194859999999943, 0.0008195419999999926, 0.0008196250000000044, 0.0008195969999999914, 0.0008194720000000016, 0.0008195140000000073, 0.0008194579999999951, 0.0008195829999999987, 0.0008195549999999996, 0.0008195700000000056, 0.0008195559999999991, 0.0008195559999999991, 0.0008195549999999996, 0.0008196249999999905, 0.0008196659999999967, 0.000819652000000004, 0.000819541000000007]</msg>
<status status="PASS" starttime="20201029 18:19:21.061" endtime="20201029 18:19:21.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.050" endtime="20201029 18:19:21.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.481" endtime="20201029 18:19:21.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.451" endtime="20201029 18:19:21.069"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.075" endtime="20201029 18:19:21.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.071" endtime="20201029 18:19:21.098"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.121" endtime="20201029 18:19:21.228"></status>
</kw>
<msg timestamp="20201029 18:19:21.229" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.117" endtime="20201029 18:19:21.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.236" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.232" endtime="20201029 18:19:21.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.238" endtime="20201029 18:19:21.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.110" endtime="20201029 18:19:21.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.105" endtime="20201029 18:19:21.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.261" endtime="20201029 18:19:21.632"></status>
</kw>
<msg timestamp="20201029 18:19:21.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035704569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036545653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.258" endtime="20201029 18:19:21.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035704569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036545653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.641" endtime="20201029 18:19:21.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.659" endtime="20201029 18:19:21.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.251" endtime="20201029 18:19:21.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.246" endtime="20201029 18:19:21.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:21.676" level="INFO">${PHILIP_RES} = [{'diff': 0.0008410839999999989}, {'diff': 0.0008427499999999963}, {'diff': 0.0008428889999999994}, {'diff': 0.0008428890000000064}, {'diff': 0.0008427780000000024}, {'diff': 0.0008428330000000012}, {...</msg>
<status status="PASS" starttime="20201029 18:19:21.668" endtime="20201029 18:19:21.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.685" level="INFO">${RESULT} = {'diff': [0.0008410839999999989, 0.0008427499999999963, 0.0008428889999999994, 0.0008428890000000064, 0.0008427780000000024, 0.0008428330000000012, 0.0008428060000000015, 0.0008427079999999976, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:19:21.678" endtime="20201029 18:19:21.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.697" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:21.694" endtime="20201029 18:19:21.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.704" level="INFO">VALUE: [0.0008410839999999989, 0.0008427499999999963, 0.0008428889999999994, 0.0008428890000000064, 0.0008427780000000024, 0.0008428330000000012, 0.0008428060000000015, 0.0008427079999999976, 0.0008428470000000007, 0.0008427920000000019, 0.0008428330000000012, 0.0008427770000000029, 0.0008427640000000028, 0.0008428480000000002, 0.0008426939999999911, 0.0008425700000000008, 0.0008426809999999979, 0.0008426940000000049, 0.0008427500000000032, 0.0008427500000000032, 0.0008426949999999905, 0.0008427220000000041, 0.0008426529999999988, 0.0008427639999999958, 0.0008426669999999914, 0.000842805000000002, 0.0008426109999999931, 0.0008426529999999988, 0.0008428479999999933, 0.0008429029999999921, 0.0008428190000000085, 0.0008428190000000085, 0.0008429439999999983, 0.0008429580000000048, 0.0008428480000000071, 0.0008428480000000071, 0.0008428199999999941, 0.0008428610000000003, 0.000842805000000002, 0.0008427080000000114, 0.0008426809999999979, 0.0008428199999999941, 0.0008426390000000061, 0.0008427500000000032, 0.0008428330000000012, 0.0008429029999999782, 0.0008428749999999929, 0.0008428060000000015, 0.0008428339999999868, 0.0008428890000000133]</msg>
<status status="PASS" starttime="20201029 18:19:21.699" endtime="20201029 18:19:21.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.687" endtime="20201029 18:19:21.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.099" endtime="20201029 18:19:21.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.070" endtime="20201029 18:19:21.709"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.715" endtime="20201029 18:19:21.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.712" endtime="20201029 18:19:21.739"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.760" endtime="20201029 18:19:21.872"></status>
</kw>
<msg timestamp="20201029 18:19:21.873" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.757" endtime="20201029 18:19:21.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.880" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.876" endtime="20201029 18:19:21.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.882" endtime="20201029 18:19:21.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.750" endtime="20201029 18:19:21.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.744" endtime="20201029 18:19:21.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.906" endtime="20201029 18:19:22.271"></status>
</kw>
<msg timestamp="20201029 18:19:22.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035425153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036291056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.903" endtime="20201029 18:19:22.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035425153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036291056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.280" endtime="20201029 18:19:22.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.298" endtime="20201029 18:19:22.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.895" endtime="20201029 18:19:22.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.891" endtime="20201029 18:19:22.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:22.315" level="INFO">${PHILIP_RES} = [{'diff': 0.0008659030000000012}, {'diff': 0.0008670699999999976}, {'diff': 0.0008670689999999981}, {'diff': 0.0008671940000000017}, {'diff': 0.0008672359999999935}, {'diff': 0.0008671950000000012}, {...</msg>
<status status="PASS" starttime="20201029 18:19:22.307" endtime="20201029 18:19:22.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.325" level="INFO">${RESULT} = {'diff': [0.0008659030000000012, 0.0008670699999999976, 0.0008670689999999981, 0.0008671940000000017, 0.0008672359999999935, 0.0008671950000000012, 0.0008672779999999991, 0.0008671950000000012, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:19:22.317" endtime="20201029 18:19:22.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.336" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:22.334" endtime="20201029 18:19:22.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.342" level="INFO">VALUE: [0.0008659030000000012, 0.0008670699999999976, 0.0008670689999999981, 0.0008671940000000017, 0.0008672359999999935, 0.0008671950000000012, 0.0008672779999999991, 0.0008671950000000012, 0.0008670830000000046, 0.0008671810000000016, 0.0008670980000000036, 0.0008671249999999964, 0.0008672639999999995, 0.0008671669999999951, 0.0008671249999999964, 0.0008669720000000075, 0.0008670559999999911, 0.0008669719999999936, 0.0008670559999999911, 0.0008670000000000067, 0.000867040999999999, 0.0008670700000000114, 0.0008671249999999964, 0.0008671529999999955, 0.00086725, 0.0008671249999999964, 0.0008670280000000058, 0.0008671940000000017, 0.0008669999999999928, 0.0008671529999999955, 0.0008670000000000067, 0.0008671799999999952, 0.0008671799999999952, 0.0008673469999999905, 0.000867069000000012, 0.0008670830000000046, 0.0008671110000000037, 0.0008671109999999899, 0.000867167000000002, 0.0008671799999999952, 0.0008672360000000073, 0.0008671810000000085, 0.0008671659999999887, 0.0008669450000000078, 0.0008669999999999789, 0.0008670699999999976, 0.000867138999999989, 0.0008670689999999981, 0.0008670550000000055, 0.0008671530000000094]</msg>
<status status="PASS" starttime="20201029 18:19:22.338" endtime="20201029 18:19:22.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.327" endtime="20201029 18:19:22.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.740" endtime="20201029 18:19:22.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.710" endtime="20201029 18:19:22.346"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.352" endtime="20201029 18:19:22.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.349" endtime="20201029 18:19:22.376"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.397" endtime="20201029 18:19:22.512"></status>
</kw>
<msg timestamp="20201029 18:19:22.513" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.394" endtime="20201029 18:19:22.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.519" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.515" endtime="20201029 18:19:22.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.522" endtime="20201029 18:19:22.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.387" endtime="20201029 18:19:22.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.382" endtime="20201029 18:19:22.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.545" endtime="20201029 18:19:22.905"></status>
</kw>
<msg timestamp="20201029 18:19:22.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035247833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036138917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.542" endtime="20201029 18:19:22.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035247833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036138917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.914" endtime="20201029 18:19:22.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.932" endtime="20201029 18:19:22.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.535" endtime="20201029 18:19:22.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.530" endtime="20201029 18:19:22.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:22.948" level="INFO">${PHILIP_RES} = [{'diff': 0.0008910840000000003}, {'diff': 0.0008913619999999997}, {'diff': 0.0008915829999999944}, {'diff': 0.0008913470000000007}, {'diff': 0.0008912640000000027}, {'diff': 0.0008913329999999942}, {...</msg>
<status status="PASS" starttime="20201029 18:19:22.941" endtime="20201029 18:19:22.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.960" level="INFO">${RESULT} = {'diff': [0.0008910840000000003, 0.0008913619999999997, 0.0008915829999999944, 0.0008913470000000007, 0.0008912640000000027, 0.0008913329999999942, 0.0008912640000000027, 0.0008913059999999945, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:19:22.951" endtime="20201029 18:19:22.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.971" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:22.968" endtime="20201029 18:19:22.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.976" level="INFO">VALUE: [0.0008910840000000003, 0.0008913619999999997, 0.0008915829999999944, 0.0008913470000000007, 0.0008912640000000027, 0.0008913329999999942, 0.0008912640000000027, 0.0008913059999999945, 0.0008912920000000019, 0.0008912359999999966, 0.0008914309999999981, 0.0008913470000000007, 0.0008914719999999973, 0.0008913060000000014, 0.0008913059999999945, 0.0008915280000000025, 0.0008914719999999904, 0.0008914579999999978, 0.0008914170000000055, 0.0008913880000000068, 0.0008914309999999981, 0.0008912230000000104, 0.0008912920000000019, 0.0008913749999999998, 0.0008912910000000024, 0.0008913749999999998, 0.0008913060000000084, 0.0008913889999999924, 0.0008914579999999978, 0.0008912640000000027, 0.0008914719999999904, 0.0008913749999999998, 0.0008914580000000116, 0.0008912499999999962, 0.0008913749999999998, 0.0008913470000000007, 0.0008912780000000092, 0.0008913190000000015, 0.0008913470000000007, 0.0008914169999999916, 0.0008912639999999888, 0.0008913339999999936, 0.0008912219999999971, 0.0008914029999999851, 0.0008915280000000025, 0.0008913050000000089, 0.0008913469999999868, 0.0008914999999999895, 0.0008914859999999969, 0.0008914299999999986]</msg>
<status status="PASS" starttime="20201029 18:19:22.973" endtime="20201029 18:19:22.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.962" endtime="20201029 18:19:22.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.377" endtime="20201029 18:19:22.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.347" endtime="20201029 18:19:22.981"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.987" endtime="20201029 18:19:23.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.983" endtime="20201029 18:19:23.011"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.032" endtime="20201029 18:19:23.148"></status>
</kw>
<msg timestamp="20201029 18:19:23.149" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.029" endtime="20201029 18:19:23.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.156" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.152" endtime="20201029 18:19:23.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.158" endtime="20201029 18:19:23.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.022" endtime="20201029 18:19:23.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.016" endtime="20201029 18:19:23.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.182" endtime="20201029 18:19:23.539"></status>
</kw>
<msg timestamp="20201029 18:19:23.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035250319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036166125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.179" endtime="20201029 18:19:23.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035250319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036166125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.548" endtime="20201029 18:19:23.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.566" endtime="20201029 18:19:23.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.171" endtime="20201029 18:19:23.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.166" endtime="20201029 18:19:23.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:23.583" level="INFO">${PHILIP_RES} = [{'diff': 0.0009158059999999982}, {'diff': 0.0009155829999999976}, {'diff': 0.0009155970000000041}, {'diff': 0.000915667000000002}, {'diff': 0.000915651999999996}, {'diff': 0.0009156520000000029}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:23.575" endtime="20201029 18:19:23.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.592" level="INFO">${RESULT} = {'diff': [0.0009158059999999982, 0.0009155829999999976, 0.0009155970000000041, 0.000915667000000002, 0.000915651999999996, 0.0009156520000000029, 0.0009155839999999971, 0.0009156110000000037, 0.000915...</msg>
<status status="PASS" starttime="20201029 18:19:23.585" endtime="20201029 18:19:23.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.603" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:23.600" endtime="20201029 18:19:23.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.608" level="INFO">VALUE: [0.0009158059999999982, 0.0009155829999999976, 0.0009155970000000041, 0.000915667000000002, 0.000915651999999996, 0.0009156520000000029, 0.0009155839999999971, 0.0009156110000000037, 0.0009157639999999995, 0.0009159309999999948, 0.0009158889999999961, 0.0009157080000000012, 0.000915972000000001, 0.0009157500000000068, 0.0009158199999999977, 0.0009158050000000056, 0.0009158749999999966, 0.0009158330000000048, 0.0009158879999999897, 0.0009158469999999974, 0.0009157919999999986, 0.0009159299999999954, 0.0009159590000000079, 0.0009157770000000065, 0.0009158469999999974, 0.0009158049999999918, 0.0009155829999999976, 0.0009156389999999959, 0.0009157500000000068, 0.0009156949999999942, 0.0009156389999999959, 0.0009156530000000024, 0.0009157500000000068, 0.0009158189999999983, 0.000915749999999993, 0.000915749999999993, 0.0009159300000000092, 0.0009157639999999995, 0.0009157360000000003, 0.0009155829999999976, 0.0009155970000000041, 0.0009157220000000077, 0.0009155700000000044, 0.0009155420000000192, 0.0009155830000000253, 0.0009154439999999875, 0.0009155140000000062, 0.0009154309999999943, 0.0009154999999999858, 0.000915569000000005]</msg>
<status status="PASS" starttime="20201029 18:19:23.605" endtime="20201029 18:19:23.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.594" endtime="20201029 18:19:23.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.012" endtime="20201029 18:19:23.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.982" endtime="20201029 18:19:23.613"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.619" endtime="20201029 18:19:23.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.615" endtime="20201029 18:19:23.643"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.664" endtime="20201029 18:19:23.784"></status>
</kw>
<msg timestamp="20201029 18:19:23.786" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.661" endtime="20201029 18:19:23.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.792" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.788" endtime="20201029 18:19:23.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.794" endtime="20201029 18:19:23.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.654" endtime="20201029 18:19:23.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.648" endtime="20201029 18:19:23.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.818" endtime="20201029 18:19:24.173"></status>
</kw>
<msg timestamp="20201029 18:19:24.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036662903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037602403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.815" endtime="20201029 18:19:24.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036662903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037602403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.182" endtime="20201029 18:19:24.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.200" endtime="20201029 18:19:24.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.807" endtime="20201029 18:19:24.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.803" endtime="20201029 18:19:24.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:24.216" level="INFO">${PHILIP_RES} = [{'diff': 0.0009395000000000028}, {'diff': 0.0009400280000000025}, {'diff': 0.0009399160000000059}, {'diff': 0.0009399169999999984}, {'diff': 0.0009398889999999993}, {'diff': 0.0009398480000000001}, {...</msg>
<status status="PASS" starttime="20201029 18:19:24.209" endtime="20201029 18:19:24.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.226" level="INFO">${RESULT} = {'diff': [0.0009395000000000028, 0.0009400280000000025, 0.0009399160000000059, 0.0009399169999999984, 0.0009398889999999993, 0.0009398480000000001, 0.0009399579999999977, 0.0009398610000000002, 0.0009...</msg>
<status status="PASS" starttime="20201029 18:19:24.219" endtime="20201029 18:19:24.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.236" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:24.234" endtime="20201029 18:19:24.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.242" level="INFO">VALUE: [0.0009395000000000028, 0.0009400280000000025, 0.0009399160000000059, 0.0009399169999999984, 0.0009398889999999993, 0.0009398480000000001, 0.0009399579999999977, 0.0009398610000000002, 0.0009398469999999937, 0.0009398610000000002, 0.000939930999999998, 0.0009397640000000027, 0.0009398610000000002, 0.0009399999999999964, 0.0009399999999999964, 0.0009399169999999984, 0.0009399030000000058, 0.0009397639999999957, 0.0009398889999999993, 0.0009399580000000046, 0.0009398610000000002, 0.0009399299999999916, 0.0009398610000000002, 0.0009399999999999964, 0.0009398469999999937, 0.0009398889999999993, 0.0009398889999999993, 0.0009399169999999984, 0.0009399999999999964, 0.000940042000000002, 0.0009399719999999973, 0.0009400270000000099, 0.0009400410000000026, 0.0009400000000000103, 0.000939833000000001, 0.0009399719999999973, 0.0009399860000000038, 0.0009400279999999955, 0.0009400690000000017, 0.0009397780000000022, 0.0009398750000000067, 0.000939861000000014, 0.0009397359999999966, 0.0009398609999999863, 0.0009399439999999981, 0.0009399999999999964, 0.0009399030000000197, 0.0009399579999999907, 0.000939931000000005, 0.0009400840000000077]</msg>
<status status="PASS" starttime="20201029 18:19:24.239" endtime="20201029 18:19:24.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.228" endtime="20201029 18:19:24.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.644" endtime="20201029 18:19:24.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.614" endtime="20201029 18:19:24.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.756" endtime="20201029 18:19:24.247"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:53.531" endtime="20201029 18:19:24.249" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:18:24.689" endtime="20201029 18:19:24.272"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.455" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:19:24.471" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:19:26.435" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:19:24.451" endtime="20201029 18:19:26.436"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.442" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:19:26.439" endtime="20201029 18:19:26.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.449" endtime="20201029 18:19:26.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.449" endtime="20201029 18:19:26.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.446" endtime="20201029 18:19:26.790"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.819" endtime="20201029 18:19:26.838"></status>
</kw>
<msg timestamp="20201029 18:19:26.839" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.816" endtime="20201029 18:19:26.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.846" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.842" endtime="20201029 18:19:26.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.855" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:26.849" endtime="20201029 18:19:26.856"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:26.810" endtime="20201029 18:19:26.858"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:26.804" endtime="20201029 18:19:26.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.801" endtime="20201029 18:19:26.861"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:26.869" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:26.867" endtime="20201029 18:19:26.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.862" endtime="20201029 18:19:26.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.799" endtime="20201029 18:19:26.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.798" endtime="20201029 18:19:26.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.873" endtime="20201029 18:19:26.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.794" endtime="20201029 18:19:26.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.880" endtime="20201029 18:19:26.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.791" endtime="20201029 18:19:26.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.446" endtime="20201029 18:19:26.886"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.900" endtime="20201029 18:19:26.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.897" endtime="20201029 18:19:26.924"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.959" endtime="20201029 18:19:26.978"></status>
</kw>
<msg timestamp="20201029 18:19:26.979" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.955" endtime="20201029 18:19:26.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.986" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.981" endtime="20201029 18:19:26.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.992" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:26.988" endtime="20201029 18:19:26.993"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:26.948" endtime="20201029 18:19:26.995"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:26.942" endtime="20201029 18:19:26.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.939" endtime="20201029 18:19:26.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:27.005" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:27.004" endtime="20201029 18:19:27.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.999" endtime="20201029 18:19:27.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.937" endtime="20201029 18:19:27.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.935" endtime="20201029 18:19:27.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.016" endtime="20201029 18:19:27.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.931" endtime="20201029 18:19:27.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.926" endtime="20201029 18:19:27.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.894" endtime="20201029 18:19:27.026"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.062" endtime="20201029 18:19:27.081"></status>
</kw>
<msg timestamp="20201029 18:19:27.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.058" endtime="20201029 18:19:27.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.085" endtime="20201029 18:19:27.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.091" endtime="20201029 18:19:27.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.049" endtime="20201029 18:19:27.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.039" endtime="20201029 18:19:27.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.115" endtime="20201029 18:19:27.485"></status>
</kw>
<msg timestamp="20201029 18:19:27.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.153831333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.153864111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:19:27.112" endtime="20201029 18:19:27.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.153831333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.153864111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:19:27.496" endtime="20201029 18:19:27.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.515" endtime="20201029 18:19:27.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.104" endtime="20201029 18:19:27.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.099" endtime="20201029 18:19:27.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.533" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.932000000000935e-05}, {'diff': 3.98339999999886e-05}, {'diff': 3.976399999999769e-05}, {'diff': 4.048600000000624e-05}, {'diff': 3.922200000000542e-05}, {'diff': 4.05140000000...</msg>
<status status="PASS" starttime="20201029 18:19:27.524" endtime="20201029 18:19:27.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:27.547" level="INFO">${ACCURACY} = {'diff': [0, 3.932000000000935e-05, 3.98339999999886e-05, 3.976399999999769e-05, 4.048600000000624e-05, 3.922200000000542e-05, 4.051400000001926e-05, 3.977799999999032e-05, 4.0402999999994416e-05, 4.0...</msg>
<status status="PASS" starttime="20201029 18:19:27.536" endtime="20201029 18:19:27.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.559" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:19:27.557" endtime="20201029 18:19:27.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.565" level="INFO">VALUE: [0, 3.932000000000935e-05, 3.98339999999886e-05, 3.976399999999769e-05, 4.048600000000624e-05, 3.922200000000542e-05, 4.051400000001926e-05, 3.977799999999032e-05, 4.0402999999994416e-05, 4.002799999999751e-05, 3.956899999998931e-05, 3.8986999999990335e-05, 3.9610999999994956e-05, 3.91939999999924e-05, 4.00549999999833e-05, 4.04020000000227e-05, 3.995900000000607e-05, 4.015300000001498e-05, 4.001400000000488e-05, 4.052800000001189e-05, 3.951299999999103e-05, 4.051400000001926e-05, 4.040300000002217e-05, 4.0069000000003685e-05, 4.051299999999203e-05, 3.9861000000002145e-05, 4.0458999999992695e-05, 3.975000000000506e-05, 4.0389000000001785e-05, 4.000000000001225e-05, 3.976399999999769e-05, 3.965200000000113e-05, 3.97370000000119e-05, 4.036100000001652e-05, 3.973599999998467e-05, 4.058400000001017e-05, 4.043100000000743e-05, 4.047199999998585e-05, 3.9818999999996496e-05, 4.041599999998757e-05, 4.048700000000571e-05, 3.9972999999998704e-05, 3.9708999999998884e-05, 4.023599999999905e-05, 4.030499999999049e-05, 3.991600000000095e-05, 4.056899999999031e-05, 4.0042000000017897e-05, 3.976399999999769e-05, 4.026399999998431e-05]</msg>
<status status="PASS" starttime="20201029 18:19:27.562" endtime="20201029 18:19:27.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.550" endtime="20201029 18:19:27.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:27.577" endtime="20201029 18:19:27.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.572" endtime="20201029 18:19:27.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.570" endtime="20201029 18:19:27.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.033" endtime="20201029 18:19:27.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.031" endtime="20201029 18:19:27.602"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.625" endtime="20201029 18:19:27.644"></status>
</kw>
<msg timestamp="20201029 18:19:27.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.622" endtime="20201029 18:19:27.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.648" endtime="20201029 18:19:27.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.654" endtime="20201029 18:19:27.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.615" endtime="20201029 18:19:27.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.609" endtime="20201029 18:19:27.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.680" endtime="20201029 18:19:28.035"></status>
</kw>
<msg timestamp="20201029 18:19:28.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040394986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040434361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.674" endtime="20201029 18:19:28.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040394986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040434361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.045" endtime="20201029 18:19:28.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.064" endtime="20201029 18:19:28.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.667" endtime="20201029 18:19:28.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.662" endtime="20201029 18:19:28.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.083" level="INFO">${RESULT} = [{'diff': 3.9375000000001215e-05}, {'diff': 3.9791000000004295e-05}, {'diff': 3.97780000000042e-05}, {'diff': 4.0332999999996566e-05}, {'diff': 4.0360999999995706e-05}, {'diff': 3.9222999999997954e-05...</msg>
<status status="PASS" starttime="20201029 18:19:28.073" endtime="20201029 18:19:28.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.097" level="INFO">${ACCURACY} = {'diff': [3.9375000000001215e-05, 3.9791000000004295e-05, 3.97780000000042e-05, 4.0332999999996566e-05, 4.0360999999995706e-05, 3.9222999999997954e-05, 4.0445000000000064e-05, 3.9818999999996496e-05, ...</msg>
<status status="PASS" starttime="20201029 18:19:28.086" endtime="20201029 18:19:28.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.112" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.109" endtime="20201029 18:19:28.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.118" level="INFO">VALUE: [3.9375000000001215e-05, 3.9791000000004295e-05, 3.97780000000042e-05, 4.0332999999996566e-05, 4.0360999999995706e-05, 3.9222999999997954e-05, 4.0445000000000064e-05, 3.9818999999996496e-05, 3.9916999999993485e-05, 3.9403000000000354e-05, 3.919399999999934e-05, 4.0431000000000494e-05, 3.974999999999812e-05, 4.0597000000003325e-05, 3.974999999999812e-05, 4.0375000000002215e-05, 4.033399999999604e-05, 3.977799999999726e-05, 4.024999999999862e-05, 4.0125000000001965e-05, 3.9776999999997786e-05, 4.045800000000016e-05, 4.005599999999665e-05, 3.9875000000001715e-05, 4.0319000000003935e-05, 4.001399999999794e-05, 3.968000000000027e-05, 4.0332999999996566e-05, 3.990200000000138e-05, 4.0097000000002825e-05, 4.015199999999469e-05, 3.958400000000223e-05, 3.9986999999998274e-05, 3.995799999999966e-05, 4.049999999999887e-05, 4.0360999999995706e-05, 3.974999999999812e-05, 3.9986999999998274e-05, 4.011200000000187e-05, 3.9389000000000784e-05, 4.02780000000047e-05, 3.994400000000009e-05, 3.9069000000002685e-05, 4.007000000000316e-05, 4.030600000000384e-05, 3.973599999999855e-05, 3.9875000000001715e-05, 3.9389000000000784e-05, 3.9889000000001285e-05, 4.0583000000003755e-05]</msg>
<status status="PASS" starttime="20201029 18:19:28.115" endtime="20201029 18:19:28.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.100" endtime="20201029 18:19:28.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.136" endtime="20201029 18:19:28.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.129" endtime="20201029 18:19:28.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.125" endtime="20201029 18:19:28.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.604" endtime="20201029 18:19:28.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.603" endtime="20201029 18:19:28.165"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.196" endtime="20201029 18:19:28.217"></status>
</kw>
<msg timestamp="20201029 18:19:28.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.191" endtime="20201029 18:19:28.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.222" endtime="20201029 18:19:28.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.230" endtime="20201029 18:19:28.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.182" endtime="20201029 18:19:28.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.174" endtime="20201029 18:19:28.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.263" endtime="20201029 18:19:28.635"></status>
</kw>
<msg timestamp="20201029 18:19:28.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051776917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051816111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.258" endtime="20201029 18:19:28.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051776917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051816111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.646" endtime="20201029 18:19:28.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.666" endtime="20201029 18:19:28.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.249" endtime="20201029 18:19:28.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.243" endtime="20201029 18:19:28.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.684" level="INFO">${RESULT} = [{'diff': 3.919399999999934e-05}, {'diff': 4.0068999999996746e-05}, {'diff': 3.968000000000027e-05}, {'diff': 4.032000000000341e-05}, {'diff': 3.9639000000001035e-05}, {'diff': 4.0347000000003075e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:28.675" endtime="20201029 18:19:28.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.693" level="INFO">${ACCURACY} = {'diff': [3.919399999999934e-05, 4.0068999999996746e-05, 3.968000000000027e-05, 4.032000000000341e-05, 3.9639000000001035e-05, 4.0347000000003075e-05, 3.970799999999941e-05, 4.049999999999887e-05, 3.9...</msg>
<status status="PASS" starttime="20201029 18:19:28.686" endtime="20201029 18:19:28.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.704" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.702" endtime="20201029 18:19:28.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.710" level="INFO">VALUE: [3.919399999999934e-05, 4.0068999999996746e-05, 3.968000000000027e-05, 4.032000000000341e-05, 3.9639000000001035e-05, 4.0347000000003075e-05, 3.970799999999941e-05, 4.049999999999887e-05, 3.9583000000002755e-05, 4.0041000000004545e-05, 4.031999999999647e-05, 3.974999999999812e-05, 3.974999999999812e-05, 4.045800000000016e-05, 4.0097000000002825e-05, 4.0403000000001354e-05, 4.0125000000001965e-05, 4.002799999999751e-05, 3.973700000000496e-05, 3.9861000000002145e-05, 3.975000000000506e-05, 4.025000000000556e-05, 4.0139000000001535e-05, 3.97780000000042e-05, 4.001400000000488e-05, 4.041599999999451e-05, 3.994400000000009e-05, 4.0486999999998774e-05, 4.0153000000001104e-05, 3.9597000000002325e-05, 4.022199999999948e-05, 3.9611000000001895e-05, 3.982000000000291e-05, 4.025000000000556e-05, 3.9389000000000784e-05, 3.968000000000027e-05, 3.869399999999884e-05, 4.0083000000003255e-05, 4.050000000000581e-05, 3.9569000000003185e-05, 3.872199999999798e-05, 4.051399999999844e-05, 3.954200000000352e-05, 3.975000000000506e-05, 4.033400000000298e-05, 3.920799999999891e-05, 3.969399999999984e-05, 3.902799999999651e-05, 3.929200000000327e-05, 3.975000000000506e-05]</msg>
<status status="PASS" starttime="20201029 18:19:28.707" endtime="20201029 18:19:28.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.695" endtime="20201029 18:19:28.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.722" endtime="20201029 18:19:28.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.717" endtime="20201029 18:19:28.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.715" endtime="20201029 18:19:28.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.168" endtime="20201029 18:19:28.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.166" endtime="20201029 18:19:28.747"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.770" endtime="20201029 18:19:28.791"></status>
</kw>
<msg timestamp="20201029 18:19:28.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.767" endtime="20201029 18:19:28.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.794" endtime="20201029 18:19:28.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.802" endtime="20201029 18:19:28.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.760" endtime="20201029 18:19:28.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.754" endtime="20201029 18:19:28.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.828" endtime="20201029 18:19:29.180"></status>
</kw>
<msg timestamp="20201029 18:19:29.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041823486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041863458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.825" endtime="20201029 18:19:29.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041823486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041863458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.191" endtime="20201029 18:19:29.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.213" endtime="20201029 18:19:29.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.817" endtime="20201029 18:19:29.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.811" endtime="20201029 18:19:29.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.231" level="INFO">${RESULT} = [{'diff': 3.997199999999923e-05}, {'diff': 4.027799999999776e-05}, {'diff': 4.007000000000316e-05}, {'diff': 4.0153000000001104e-05}, {'diff': 3.9694999999999314e-05}, {'diff': 4.022199999999948e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:29.222" endtime="20201029 18:19:29.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.241" level="INFO">${ACCURACY} = {'diff': [3.997199999999923e-05, 4.027799999999776e-05, 4.007000000000316e-05, 4.0153000000001104e-05, 3.9694999999999314e-05, 4.022199999999948e-05, 4.051399999999844e-05, 4.0305000000004365e-05, 4.0...</msg>
<status status="PASS" starttime="20201029 18:19:29.233" endtime="20201029 18:19:29.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.252" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.250" endtime="20201029 18:19:29.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.258" level="INFO">VALUE: [3.997199999999923e-05, 4.027799999999776e-05, 4.007000000000316e-05, 4.0153000000001104e-05, 3.9694999999999314e-05, 4.022199999999948e-05, 4.051399999999844e-05, 4.0305000000004365e-05, 4.0111000000002395e-05, 4.0082999999996316e-05, 4.0138999999994596e-05, 3.984800000000205e-05, 4.0041000000004545e-05, 3.9583000000002755e-05, 3.966599999999376e-05, 4.0139000000001535e-05, 3.955599999999615e-05, 4.055599999999715e-05, 4.015200000000163e-05, 4.0361000000002645e-05, 4.0445000000000064e-05, 4.0431000000000494e-05, 4.0152999999994166e-05, 3.955599999999615e-05, 4.058399999999629e-05, 3.954200000000352e-05, 3.9860999999995206e-05, 4.030600000000384e-05, 3.9861000000002145e-05, 3.9375000000001215e-05, 3.9582999999995816e-05, 4.020799999999991e-05, 4.0290999999997856e-05, 4.0472999999999204e-05, 4.044400000000059e-05, 4.0194999999999814e-05, 3.9097000000001825e-05, 3.9639000000001035e-05, 4.0361000000002645e-05, 3.973599999999855e-05, 3.99859999999988e-05, 3.872199999999798e-05, 4.026399999999819e-05, 4.047199999999973e-05, 3.9625000000001465e-05, 4.0181000000000244e-05, 3.9596999999995386e-05, 4.029199999999733e-05, 3.9777000000004725e-05, 3.9222999999997954e-05]</msg>
<status status="PASS" starttime="20201029 18:19:29.254" endtime="20201029 18:19:29.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.243" endtime="20201029 18:19:29.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.271" endtime="20201029 18:19:29.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.265" endtime="20201029 18:19:29.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.263" endtime="20201029 18:19:29.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.750" endtime="20201029 18:19:29.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.748" endtime="20201029 18:19:29.297"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.320" endtime="20201029 18:19:29.339"></status>
</kw>
<msg timestamp="20201029 18:19:29.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.316" endtime="20201029 18:19:29.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.343" endtime="20201029 18:19:29.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.349" endtime="20201029 18:19:29.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.309" endtime="20201029 18:19:29.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.303" endtime="20201029 18:19:29.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.373" endtime="20201029 18:19:29.724"></status>
</kw>
<msg timestamp="20201029 18:19:29.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040192597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040233069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.369" endtime="20201029 18:19:29.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040192597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040233069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.733" endtime="20201029 18:19:29.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.752" endtime="20201029 18:19:29.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.362" endtime="20201029 18:19:29.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.357" endtime="20201029 18:19:29.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.770" level="INFO">${RESULT} = [{'diff': 4.047200000000667e-05}, {'diff': 3.9889000000001285e-05}, {'diff': 3.976399999999769e-05}, {'diff': 4.0124999999995026e-05}, {'diff': 3.9583000000002755e-05}, {'diff': 4.050000000000581e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:29.761" endtime="20201029 18:19:29.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.781" level="INFO">${ACCURACY} = {'diff': [4.047200000000667e-05, 3.9889000000001285e-05, 3.976399999999769e-05, 4.0124999999995026e-05, 3.9583000000002755e-05, 4.050000000000581e-05, 4.0403000000001354e-05, 4.040200000000188e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:19:29.772" endtime="20201029 18:19:29.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.792" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.790" endtime="20201029 18:19:29.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.798" level="INFO">VALUE: [4.047200000000667e-05, 3.9889000000001285e-05, 3.976399999999769e-05, 4.0124999999995026e-05, 3.9583000000002755e-05, 4.050000000000581e-05, 4.0403000000001354e-05, 4.040200000000188e-05, 3.9375000000001215e-05, 4.0375000000002215e-05, 3.997200000000617e-05, 4.034799999999561e-05, 3.999999999999837e-05, 4.0582999999996816e-05, 4.0167000000000674e-05, 4.03059999999969e-05, 3.955600000000309e-05, 3.9611000000001895e-05, 4.0054999999997176e-05, 3.905599999999565e-05, 4.0417000000000924e-05, 3.9903000000000854e-05, 4.0124999999995026e-05, 4.023599999999905e-05, 3.9832999999996066e-05, 3.9111000000001395e-05, 4.0375000000002215e-05, 4.0347000000003075e-05, 3.949999999999787e-05, 4.0388999999994846e-05, 4.004200000000402e-05, 3.9917000000000424e-05, 4.022199999999948e-05, 3.9874999999994776e-05, 4.050000000000581e-05, 4.000000000000531e-05, 4.008399999999579e-05, 3.9625000000001465e-05, 4.0403000000001354e-05, 3.994400000000009e-05, 4.0526999999998536e-05, 4.0304999999997426e-05, 3.974999999999812e-05, 3.9930999999999994e-05, 3.9389000000000784e-05, 3.986199999999468e-05, 4.03059999999969e-05, 3.9097000000001825e-05, 4.0110999999995456e-05, 3.870800000000535e-05]</msg>
<status status="PASS" starttime="20201029 18:19:29.795" endtime="20201029 18:19:29.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.783" endtime="20201029 18:19:29.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.810" endtime="20201029 18:19:29.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.805" endtime="20201029 18:19:29.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.803" endtime="20201029 18:19:29.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.299" endtime="20201029 18:19:29.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.298" endtime="20201029 18:19:29.838"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.870" endtime="20201029 18:19:29.890"></status>
</kw>
<msg timestamp="20201029 18:19:29.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.866" endtime="20201029 18:19:29.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.894" endtime="20201029 18:19:29.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.900" endtime="20201029 18:19:29.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.856" endtime="20201029 18:19:29.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.847" endtime="20201029 18:19:29.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.924" endtime="20201029 18:19:30.276"></status>
</kw>
<msg timestamp="20201029 18:19:30.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053527056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053567306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.921" endtime="20201029 18:19:30.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053527056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053567306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.286" endtime="20201029 18:19:30.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.305" endtime="20201029 18:19:30.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.913" endtime="20201029 18:19:30.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.908" endtime="20201029 18:19:30.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.322" level="INFO">${RESULT} = [{'diff': 4.024999999999862e-05}, {'diff': 3.9708999999998884e-05}, {'diff': 3.973599999999855e-05}, {'diff': 3.872199999999798e-05}, {'diff': 3.9847000000002575e-05}, {'diff': 4.051399999999844e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:30.313" endtime="20201029 18:19:30.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.334" level="INFO">${ACCURACY} = {'diff': [4.024999999999862e-05, 3.9708999999998884e-05, 3.973599999999855e-05, 3.872199999999798e-05, 3.9847000000002575e-05, 4.051399999999844e-05, 4.052799999999801e-05, 4.024999999999862e-05, 3.95...</msg>
<status status="PASS" starttime="20201029 18:19:30.325" endtime="20201029 18:19:30.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.345" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.343" endtime="20201029 18:19:30.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.351" level="INFO">VALUE: [4.024999999999862e-05, 3.9708999999998884e-05, 3.973599999999855e-05, 3.872199999999798e-05, 3.9847000000002575e-05, 4.051399999999844e-05, 4.052799999999801e-05, 4.024999999999862e-05, 3.95980000000018e-05, 4.0375000000002215e-05, 4.029199999999733e-05, 4.0083000000003255e-05, 3.954200000000352e-05, 3.9972999999998704e-05, 3.999999999999837e-05, 3.872199999999798e-05, 3.9903000000000854e-05, 4.047199999999973e-05, 3.973599999999855e-05, 3.970799999999941e-05, 3.9652999999993666e-05, 3.9944999999999564e-05, 4.047199999999973e-05, 4.054200000000452e-05, 4.0167000000000674e-05, 3.86659999999997e-05, 3.975000000000506e-05, 4.0389000000001785e-05, 4.052800000000495e-05, 4.0374999999995276e-05, 3.968000000000027e-05, 3.965200000000113e-05, 3.965200000000113e-05, 4.03059999999969e-05, 3.995799999999966e-05, 4.0096999999995886e-05, 3.994400000000009e-05, 4.044400000000059e-05, 3.8875000000000715e-05, 3.972199999999898e-05, 3.973599999999855e-05, 4.0361000000002645e-05, 4.049999999999887e-05, 4.0332999999996566e-05, 4.029199999999733e-05, 3.973599999999855e-05, 3.995799999999966e-05, 4.055600000000409e-05, 3.9917000000000424e-05, 3.9930999999999994e-05]</msg>
<status status="PASS" starttime="20201029 18:19:30.347" endtime="20201029 18:19:30.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.336" endtime="20201029 18:19:30.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.363" endtime="20201029 18:19:30.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.358" endtime="20201029 18:19:30.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.356" endtime="20201029 18:19:30.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.842" endtime="20201029 18:19:30.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.840" endtime="20201029 18:19:30.388"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.412" endtime="20201029 18:19:30.430"></status>
</kw>
<msg timestamp="20201029 18:19:30.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.408" endtime="20201029 18:19:30.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.434" endtime="20201029 18:19:30.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.440" endtime="20201029 18:19:30.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.401" endtime="20201029 18:19:30.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.395" endtime="20201029 18:19:30.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.464" endtime="20201029 18:19:30.822"></status>
</kw>
<msg timestamp="20201029 18:19:30.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040716569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040756181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.460" endtime="20201029 18:19:30.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040716569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040756181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.832" endtime="20201029 18:19:30.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.851" endtime="20201029 18:19:30.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.453" endtime="20201029 18:19:30.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.448" endtime="20201029 18:19:30.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.869" level="INFO">${RESULT} = [{'diff': 3.961200000000137e-05}, {'diff': 3.997199999999923e-05}, {'diff': 3.9736999999998024e-05}, {'diff': 4.049999999999887e-05}, {'diff': 3.8889000000000284e-05}, {'diff': 4.040200000000188e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:30.860" endtime="20201029 18:19:30.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.879" level="INFO">${ACCURACY} = {'diff': [3.961200000000137e-05, 3.997199999999923e-05, 3.9736999999998024e-05, 4.049999999999887e-05, 3.8889000000000284e-05, 4.040200000000188e-05, 3.977799999999726e-05, 3.8889000000000284e-05, 4.0...</msg>
<status status="PASS" starttime="20201029 18:19:30.871" endtime="20201029 18:19:30.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.890" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.888" endtime="20201029 18:19:30.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.895" level="INFO">VALUE: [3.961200000000137e-05, 3.997199999999923e-05, 3.9736999999998024e-05, 4.049999999999887e-05, 3.8889000000000284e-05, 4.040200000000188e-05, 3.977799999999726e-05, 3.8889000000000284e-05, 4.000000000000531e-05, 3.9861000000002145e-05, 3.956999999999572e-05, 4.029199999999733e-05, 4.023599999999905e-05, 4.0181000000000244e-05, 4.029199999999733e-05, 3.9861000000002145e-05, 3.995799999999966e-05, 3.9639000000001035e-05, 4.0568999999997246e-05, 3.995799999999966e-05, 4.0110999999995456e-05, 3.9596999999995386e-05, 4.052800000000495e-05, 3.9055000000003115e-05, 3.9833000000003005e-05, 4.0318999999996996e-05, 4.051400000000538e-05, 4.045800000000016e-05, 3.8804999999995926e-05, 3.9639000000001035e-05, 4.047199999999973e-05, 4.0096999999995886e-05, 4.049999999999887e-05, 4.0346999999996136e-05, 3.9597000000002325e-05, 3.981999999999597e-05, 4.018000000000077e-05, 3.994400000000009e-05, 3.9874999999994776e-05, 3.8875000000000715e-05, 4.033400000000298e-05, 3.999999999999837e-05, 4.033399999999604e-05, 4.0208999999999384e-05, 3.976400000000463e-05, 4.0374999999995276e-05, 4.023599999999905e-05, 4.0318999999996996e-05, 4.004199999999708e-05, 4.045800000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:19:30.892" endtime="20201029 18:19:30.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.881" endtime="20201029 18:19:30.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.908" endtime="20201029 18:19:30.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.904" endtime="20201029 18:19:30.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.901" endtime="20201029 18:19:30.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.391" endtime="20201029 18:19:30.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.390" endtime="20201029 18:19:30.934"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.957" endtime="20201029 18:19:30.976"></status>
</kw>
<msg timestamp="20201029 18:19:30.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.954" endtime="20201029 18:19:30.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.979" endtime="20201029 18:19:30.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.986" endtime="20201029 18:19:30.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.946" endtime="20201029 18:19:30.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.941" endtime="20201029 18:19:30.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.013" endtime="20201029 18:19:31.362"></status>
</kw>
<msg timestamp="20201029 18:19:31.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040235403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040275694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.010" endtime="20201029 18:19:31.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040235403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040275694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.372" endtime="20201029 18:19:31.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.391" endtime="20201029 18:19:31.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.002" endtime="20201029 18:19:31.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.997" endtime="20201029 18:19:31.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.409" level="INFO">${RESULT} = [{'diff': 4.0290999999997856e-05}, {'diff': 3.999999999999837e-05}, {'diff': 4.044400000000059e-05}, {'diff': 3.995799999999966e-05}, {'diff': 4.0181000000000244e-05}, {'diff': 4.001399999999794e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:31.400" endtime="20201029 18:19:31.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.419" level="INFO">${ACCURACY} = {'diff': [4.0290999999997856e-05, 3.999999999999837e-05, 4.044400000000059e-05, 3.995799999999966e-05, 4.0181000000000244e-05, 4.001399999999794e-05, 4.02780000000047e-05, 4.045800000000016e-05, 4.013...</msg>
<status status="PASS" starttime="20201029 18:19:31.411" endtime="20201029 18:19:31.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.430" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.428" endtime="20201029 18:19:31.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.435" level="INFO">VALUE: [4.0290999999997856e-05, 3.999999999999837e-05, 4.044400000000059e-05, 3.995799999999966e-05, 4.0181000000000244e-05, 4.001399999999794e-05, 4.02780000000047e-05, 4.045800000000016e-05, 4.0138999999994596e-05, 3.998600000000574e-05, 4.044400000000059e-05, 3.969399999999984e-05, 4.04859999999993e-05, 4.0111000000002395e-05, 4.027799999999776e-05, 3.9861000000002145e-05, 3.974999999999812e-05, 4.0431000000000494e-05, 3.9917000000000424e-05, 4.0431000000000494e-05, 3.976400000000463e-05, 4.045900000000657e-05, 3.920799999999891e-05, 3.9875000000001715e-05, 3.980600000000334e-05, 3.99859999999988e-05, 4.0554999999997676e-05, 4.047199999999973e-05, 4.026400000000513e-05, 4.026399999999819e-05, 4.0526999999998536e-05, 3.865200000000013e-05, 3.976399999999769e-05, 4.052799999999801e-05, 3.9639000000001035e-05, 3.8708999999997884e-05, 3.973599999999855e-05, 3.976399999999769e-05, 4.0526999999998536e-05, 4.054200000000452e-05, 4.0139000000001535e-05, 3.872199999999798e-05, 3.8875000000000715e-05, 4.0111000000002395e-05, 4.023599999999905e-05, 4.0333000000003505e-05, 3.997199999999923e-05, 4.0304999999997426e-05, 4.01660000000012e-05, 4.0417000000000924e-05]</msg>
<status status="PASS" starttime="20201029 18:19:31.432" endtime="20201029 18:19:31.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.421" endtime="20201029 18:19:31.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.449" endtime="20201029 18:19:31.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.444" endtime="20201029 18:19:31.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.441" endtime="20201029 18:19:31.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.936" endtime="20201029 18:19:31.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.935" endtime="20201029 18:19:31.475"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.498" endtime="20201029 18:19:31.517"></status>
</kw>
<msg timestamp="20201029 18:19:31.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.495" endtime="20201029 18:19:31.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.520" endtime="20201029 18:19:31.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.527" endtime="20201029 18:19:31.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.487" endtime="20201029 18:19:31.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.482" endtime="20201029 18:19:31.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.551" endtime="20201029 18:19:31.905"></status>
</kw>
<msg timestamp="20201029 18:19:31.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040265611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040305569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.547" endtime="20201029 18:19:31.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040265611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040305569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.915" endtime="20201029 18:19:31.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.934" endtime="20201029 18:19:31.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.540" endtime="20201029 18:19:31.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.535" endtime="20201029 18:19:31.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.951" level="INFO">${RESULT} = [{'diff': 3.995799999999966e-05}, {'diff': 3.95980000000018e-05}, {'diff': 3.9930999999999994e-05}, {'diff': 3.98059999999964e-05}, {'diff': 3.976399999999769e-05}, {'diff': 3.8875000000000715e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:31.942" endtime="20201029 18:19:31.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.962" level="INFO">${ACCURACY} = {'diff': [3.995799999999966e-05, 3.95980000000018e-05, 3.9930999999999994e-05, 3.98059999999964e-05, 3.976399999999769e-05, 3.8875000000000715e-05, 3.9763000000005155e-05, 3.9875000000001715e-05, 4.04...</msg>
<status status="PASS" starttime="20201029 18:19:31.953" endtime="20201029 18:19:31.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.973" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.971" endtime="20201029 18:19:31.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.979" level="INFO">VALUE: [3.995799999999966e-05, 3.95980000000018e-05, 3.9930999999999994e-05, 3.98059999999964e-05, 3.976399999999769e-05, 3.8875000000000715e-05, 3.9763000000005155e-05, 3.9875000000001715e-05, 4.0416999999993986e-05, 3.9874999999994776e-05, 3.974999999999812e-05, 4.033400000000298e-05, 4.024999999999862e-05, 4.052799999999801e-05, 3.9625000000001465e-05, 3.9597000000002325e-05, 4.04859999999993e-05, 4.0569000000004185e-05, 4.054200000000452e-05, 4.0318999999996996e-05, 4.001400000000488e-05, 3.9625000000001465e-05, 3.973599999999855e-05, 3.9624999999994526e-05, 4.018000000000077e-05, 3.9917000000000424e-05, 3.991600000000095e-05, 3.958400000000223e-05, 4.0181000000000244e-05, 3.9917000000000424e-05, 4.0472999999999204e-05, 4.0167000000000674e-05, 4.001400000000488e-05, 3.9111000000001395e-05, 4.032000000000341e-05, 3.972199999999898e-05, 3.995799999999966e-05, 3.9694999999999314e-05, 3.9889000000001285e-05, 3.999999999999837e-05, 3.917999999999977e-05, 4.033399999999604e-05, 3.984800000000205e-05, 4.006999999999622e-05, 3.976399999999769e-05, 4.043000000000102e-05, 3.9569000000003185e-05, 4.029200000000427e-05, 4.0125000000001965e-05, 3.9596999999995386e-05]</msg>
<status status="PASS" starttime="20201029 18:19:31.976" endtime="20201029 18:19:31.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.964" endtime="20201029 18:19:31.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.998" endtime="20201029 18:19:32.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.994" endtime="20201029 18:19:32.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.991" endtime="20201029 18:19:32.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.477" endtime="20201029 18:19:32.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.476" endtime="20201029 18:19:32.024"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.048" endtime="20201029 18:19:32.068"></status>
</kw>
<msg timestamp="20201029 18:19:32.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.045" endtime="20201029 18:19:32.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.071" endtime="20201029 18:19:32.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.078" endtime="20201029 18:19:32.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.037" endtime="20201029 18:19:32.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.031" endtime="20201029 18:19:32.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.102" endtime="20201029 18:19:32.451"></status>
</kw>
<msg timestamp="20201029 18:19:32.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042699208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042739708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.098" endtime="20201029 18:19:32.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042699208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042739708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.461" endtime="20201029 18:19:32.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.480" endtime="20201029 18:19:32.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.091" endtime="20201029 18:19:32.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.086" endtime="20201029 18:19:32.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:32.498" level="INFO">${RESULT} = [{'diff': 4.049999999999887e-05}, {'diff': 3.968000000000027e-05}, {'diff': 3.9861000000002145e-05}, {'diff': 4.026399999999819e-05}, {'diff': 3.9596999999995386e-05}, {'diff': 3.9804999999996926e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:32.489" endtime="20201029 18:19:32.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:32.509" level="INFO">${ACCURACY} = {'diff': [4.049999999999887e-05, 3.968000000000027e-05, 3.9861000000002145e-05, 4.026399999999819e-05, 3.9596999999995386e-05, 3.9804999999996926e-05, 3.99859999999988e-05, 3.9582999999995816e-05, 3.9...</msg>
<status status="PASS" starttime="20201029 18:19:32.500" endtime="20201029 18:19:32.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.520" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:19:32.518" endtime="20201029 18:19:32.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.526" level="INFO">VALUE: [4.049999999999887e-05, 3.968000000000027e-05, 3.9861000000002145e-05, 4.026399999999819e-05, 3.9596999999995386e-05, 3.9804999999996926e-05, 3.99859999999988e-05, 3.9582999999995816e-05, 3.902800000000345e-05, 3.9944999999999564e-05, 3.9944999999999564e-05, 3.9846999999995636e-05, 3.9819000000003435e-05, 3.9790999999997356e-05, 4.0068999999996746e-05, 3.954199999999658e-05, 4.048700000000571e-05, 4.0167000000000674e-05, 3.9903000000000854e-05, 4.025000000000556e-05, 3.9597000000002325e-05, 3.9639000000001035e-05, 4.01660000000012e-05, 4.013800000000206e-05, 4.051399999999844e-05, 4.0347000000003075e-05, 3.9639000000001035e-05, 3.9917000000000424e-05, 4.0347000000003075e-05, 4.023599999999905e-05, 3.973599999999855e-05, 3.9375000000001215e-05, 3.97780000000042e-05, 3.920799999999891e-05, 3.995799999999966e-05, 4.045800000000016e-05, 3.96660000000007e-05, 4.0276999999998286e-05, 3.9569000000003185e-05, 3.920900000000532e-05, 4.0152999999994166e-05, 4.0167000000000674e-05, 3.9583000000002755e-05, 4.051400000000538e-05, 4.00980000000023e-05, 3.975000000000506e-05, 3.997199999999923e-05, 4.0389000000001785e-05, 3.920799999999891e-05, 3.993000000000052e-05]</msg>
<status status="PASS" starttime="20201029 18:19:32.523" endtime="20201029 18:19:32.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.511" endtime="20201029 18:19:32.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:32.539" endtime="20201029 18:19:32.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.534" endtime="20201029 18:19:32.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.532" endtime="20201029 18:19:32.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.026" endtime="20201029 18:19:32.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.025" endtime="20201029 18:19:32.564"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.587" endtime="20201029 18:19:32.607"></status>
</kw>
<msg timestamp="20201029 18:19:32.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.584" endtime="20201029 18:19:32.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.610" endtime="20201029 18:19:32.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.616" endtime="20201029 18:19:32.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.576" endtime="20201029 18:19:32.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.571" endtime="20201029 18:19:32.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.640" endtime="20201029 18:19:33.002"></status>
</kw>
<msg timestamp="20201029 18:19:33.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040506736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040547583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.637" endtime="20201029 18:19:33.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040506736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040547583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.012" endtime="20201029 18:19:33.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.031" endtime="20201029 18:19:33.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.629" endtime="20201029 18:19:33.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.625" endtime="20201029 18:19:33.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:33.049" level="INFO">${RESULT} = [{'diff': 4.0846999999996636e-05}, {'diff': 4.094400000000109e-05}, {'diff': 4.143000000000202e-05}, {'diff': 4.131999999999747e-05}, {'diff': 4.1473000000000204e-05}, {'diff': 4.1125000000002965e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:33.040" endtime="20201029 18:19:33.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:33.059" level="INFO">${ACCURACY} = {'diff': [4.0846999999996636e-05, 4.094400000000109e-05, 4.143000000000202e-05, 4.131999999999747e-05, 4.1473000000000204e-05, 4.1125000000002965e-05, 4.13059999999979e-05, 4.076399999999869e-05, 4.07...</msg>
<status status="PASS" starttime="20201029 18:19:33.051" endtime="20201029 18:19:33.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.071" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:19:33.068" endtime="20201029 18:19:33.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.076" level="INFO">VALUE: [4.0846999999996636e-05, 4.094400000000109e-05, 4.143000000000202e-05, 4.131999999999747e-05, 4.1473000000000204e-05, 4.1125000000002965e-05, 4.13059999999979e-05, 4.076399999999869e-05, 4.074999999999912e-05, 4.076399999999869e-05, 4.14860000000003e-05, 3.9875000000001715e-05, 4.0611000000002895e-05, 4.14860000000003e-05, 4.0208999999999384e-05, 4.0695000000000314e-05, 4.151399999999944e-05, 4.0667000000001174e-05, 4.124999999999962e-05, 4.126399999999919e-05, 4.13059999999979e-05, 4.0583000000003755e-05, 4.0403000000001354e-05, 4.144399999999465e-05, 4.14860000000003e-05, 4.1068999999997746e-05, 4.0832999999997066e-05, 4.0861000000003145e-05, 4.099999999999937e-05, 4.0902999999994916e-05, 4.1152999999995166e-05, 4.107000000000416e-05, 4.1403000000002355e-05, 4.0403000000001354e-05, 4.1388999999995846e-05, 4.1125000000002965e-05, 4.0610999999995956e-05, 4.134799999999661e-05, 4.0889000000002285e-05, 4.0680999999993805e-05, 4.151399999999944e-05, 4.1153000000002105e-05, 4.131999999999747e-05, 4.1209000000000384e-05, 4.1402999999995416e-05, 4.117999999999483e-05, 4.126399999999919e-05, 4.0582999999996816e-05, 4.1139000000002535e-05, 4.14860000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:19:33.073" endtime="20201029 18:19:33.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.061" endtime="20201029 18:19:33.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.090" endtime="20201029 18:19:33.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.086" endtime="20201029 18:19:33.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.083" endtime="20201029 18:19:33.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.566" endtime="20201029 18:19:33.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.565" endtime="20201029 18:19:33.116"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.139" endtime="20201029 18:19:33.160"></status>
</kw>
<msg timestamp="20201029 18:19:33.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.135" endtime="20201029 18:19:33.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.163" endtime="20201029 18:19:33.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.170" endtime="20201029 18:19:33.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.128" endtime="20201029 18:19:33.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.122" endtime="20201029 18:19:33.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.193" endtime="20201029 18:19:33.543"></status>
</kw>
<msg timestamp="20201029 18:19:33.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041949486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041991361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.190" endtime="20201029 18:19:33.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041949486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041991361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.553" endtime="20201029 18:19:33.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.574" endtime="20201029 18:19:33.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.183" endtime="20201029 18:19:33.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.178" endtime="20201029 18:19:33.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:33.592" level="INFO">${RESULT} = [{'diff': 4.1874999999996776e-05}, {'diff': 4.2096999999997886e-05}, {'diff': 4.2096999999997886e-05}, {'diff': 4.1625000000003465e-05}, {'diff': 4.0875000000002715e-05}, {'diff': 4.1597000000004325e-...</msg>
<status status="PASS" starttime="20201029 18:19:33.583" endtime="20201029 18:19:33.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:33.602" level="INFO">${ACCURACY} = {'diff': [4.1874999999996776e-05, 4.2096999999997886e-05, 4.2096999999997886e-05, 4.1625000000003465e-05, 4.0875000000002715e-05, 4.1597000000004325e-05, 4.198599999999386e-05, 4.2388999999996846e-05,...</msg>
<status status="PASS" starttime="20201029 18:19:33.594" endtime="20201029 18:19:33.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.613" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:19:33.611" endtime="20201029 18:19:33.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.619" level="INFO">VALUE: [4.1874999999996776e-05, 4.2096999999997886e-05, 4.2096999999997886e-05, 4.1625000000003465e-05, 4.0875000000002715e-05, 4.1597000000004325e-05, 4.198599999999386e-05, 4.2388999999996846e-05, 4.176399999999969e-05, 4.2596999999998386e-05, 4.229199999999933e-05, 4.0889000000002285e-05, 4.18059999999984e-05, 4.120799999999397e-05, 4.2417000000002925e-05, 4.2124999999997026e-05, 4.1611000000003895e-05, 4.1639000000003035e-05, 4.194400000000209e-05, 4.1861000000004145e-05, 4.0861000000003145e-05, 4.242999999999608e-05, 4.250000000000087e-05, 4.2305000000006365e-05, 4.1611000000003895e-05, 4.173600000000055e-05, 4.16660000000027e-05, 4.124999999999962e-05, 4.2124999999997026e-05, 4.158400000000423e-05, 4.2473000000001204e-05, 4.211200000000387e-05, 4.0736999999999024e-05, 4.175000000000012e-05, 4.1695000000001314e-05, 4.200000000000037e-05, 4.2167000000002675e-05, 4.198599999999386e-05, 4.227799999999976e-05, 4.1638999999996096e-05, 4.2444999999995126e-05, 4.208400000000473e-05, 4.226399999999325e-05, 4.173600000000055e-05, 4.206999999999822e-05, 4.2125000000003965e-05, 4.1332999999997566e-05, 4.2097000000004825e-05, 4.241600000000345e-05, 4.1596999999997386e-05]</msg>
<status status="PASS" starttime="20201029 18:19:33.616" endtime="20201029 18:19:33.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.604" endtime="20201029 18:19:33.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.633" endtime="20201029 18:19:33.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.627" endtime="20201029 18:19:33.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.625" endtime="20201029 18:19:33.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.118" endtime="20201029 18:19:33.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.116" endtime="20201029 18:19:33.658"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.682" endtime="20201029 18:19:33.701"></status>
</kw>
<msg timestamp="20201029 18:19:33.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.678" endtime="20201029 18:19:33.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.704" endtime="20201029 18:19:33.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.711" endtime="20201029 18:19:33.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.671" endtime="20201029 18:19:33.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.665" endtime="20201029 18:19:33.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.734" endtime="20201029 18:19:34.090"></status>
</kw>
<msg timestamp="20201029 18:19:34.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040260597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040303167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.731" endtime="20201029 18:19:34.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040260597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040303167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.100" endtime="20201029 18:19:34.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.120" endtime="20201029 18:19:34.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.723" endtime="20201029 18:19:34.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.719" endtime="20201029 18:19:34.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:34.138" level="INFO">${RESULT} = [{'diff': 4.256999999999872e-05}, {'diff': 4.2860999999998206e-05}, {'diff': 4.31939999999964e-05}, {'diff': 4.2624999999997526e-05}, {'diff': 4.3152999999997166e-05}, {'diff': 4.2374999999997276e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:34.129" endtime="20201029 18:19:34.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:34.149" level="INFO">${ACCURACY} = {'diff': [4.256999999999872e-05, 4.2860999999998206e-05, 4.31939999999964e-05, 4.2624999999997526e-05, 4.3152999999997166e-05, 4.2374999999997276e-05, 4.329200000000033e-05, 4.2861000000005145e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:19:34.140" endtime="20201029 18:19:34.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.160" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:19:34.158" endtime="20201029 18:19:34.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.166" level="INFO">VALUE: [4.256999999999872e-05, 4.2860999999998206e-05, 4.31939999999964e-05, 4.2624999999997526e-05, 4.3152999999997166e-05, 4.2374999999997276e-05, 4.329200000000033e-05, 4.2861000000005145e-05, 4.2624999999997526e-05, 4.2931000000002995e-05, 4.276400000000069e-05, 4.301400000000094e-05, 4.300000000000137e-05, 4.301400000000094e-05, 4.3125000000004965e-05, 4.351400000000144e-05, 4.344400000000359e-05, 4.345799999999622e-05, 4.2916999999996486e-05, 4.2624999999997526e-05, 4.2638999999997096e-05, 4.325000000000162e-05, 4.2388999999996846e-05, 4.281999999999897e-05, 4.256999999999872e-05, 4.3374999999998276e-05, 4.277700000000079e-05, 4.347199999999579e-05, 4.3374999999998276e-05, 4.2610999999997956e-05, 4.345800000000316e-05, 4.3416999999996986e-05, 4.2680999999995806e-05, 4.2917000000003425e-05, 4.345800000000316e-05, 4.3459000000002634e-05, 4.355599999999321e-05, 4.2666999999996236e-05, 4.1902999999995916e-05, 4.2695000000002314e-05, 4.352800000000101e-05, 4.3138999999997596e-05, 4.2625000000004465e-05, 4.2666999999996236e-05, 4.295800000000266e-05, 4.240199999999694e-05, 4.277800000000026e-05, 4.1931000000001994e-05, 4.2638999999997096e-05, 4.309799999999836e-05]</msg>
<status status="PASS" starttime="20201029 18:19:34.162" endtime="20201029 18:19:34.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.151" endtime="20201029 18:19:34.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:34.178" endtime="20201029 18:19:34.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.174" endtime="20201029 18:19:34.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.172" endtime="20201029 18:19:34.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.661" endtime="20201029 18:19:34.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.659" endtime="20201029 18:19:34.204"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.227" endtime="20201029 18:19:34.246"></status>
</kw>
<msg timestamp="20201029 18:19:34.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.223" endtime="20201029 18:19:34.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.250" endtime="20201029 18:19:34.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.256" endtime="20201029 18:19:34.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.216" endtime="20201029 18:19:34.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.210" endtime="20201029 18:19:34.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.280" endtime="20201029 18:19:34.629"></status>
</kw>
<msg timestamp="20201029 18:19:34.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040089528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040132569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.276" endtime="20201029 18:19:34.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040089528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040132569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.639" endtime="20201029 18:19:34.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.658" endtime="20201029 18:19:34.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.269" endtime="20201029 18:19:34.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.264" endtime="20201029 18:19:34.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:34.676" level="INFO">${RESULT} = [{'diff': 4.3041000000000607e-05}, {'diff': 4.457000000000072e-05}, {'diff': 4.2888999999997346e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.3958999999996196e-05}, {'diff': 4.4180999999997306e-0...</msg>
<status status="PASS" starttime="20201029 18:19:34.667" endtime="20201029 18:19:34.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:34.687" level="INFO">${ACCURACY} = {'diff': [4.3041000000000607e-05, 4.457000000000072e-05, 4.2888999999997346e-05, 4.3638999999998096e-05, 4.3958999999996196e-05, 4.4180999999997306e-05, 4.4152999999998166e-05, 4.375000000000212e-05, ...</msg>
<status status="PASS" starttime="20201029 18:19:34.678" endtime="20201029 18:19:34.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.698" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:19:34.696" endtime="20201029 18:19:34.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.704" level="INFO">VALUE: [4.3041000000000607e-05, 4.457000000000072e-05, 4.2888999999997346e-05, 4.3638999999998096e-05, 4.3958999999996196e-05, 4.4180999999997306e-05, 4.4152999999998166e-05, 4.375000000000212e-05, 4.454200000000158e-05, 4.379199999999389e-05, 4.44860000000033e-05, 4.379200000000083e-05, 4.4360999999999706e-05, 4.4444999999997126e-05, 4.4138999999998596e-05, 4.402799999999457e-05, 4.3987000000002274e-05, 4.401299999999553e-05, 4.4569000000001247e-05, 4.4069000000000746e-05, 4.3819000000000496e-05, 4.4124999999999026e-05, 4.44860000000033e-05, 4.277800000000026e-05, 4.450000000000287e-05, 4.402799999999457e-05, 4.451400000000244e-05, 4.4402999999998416e-05, 4.3667000000004175e-05, 4.4138999999998596e-05, 4.355600000000015e-05, 4.4166999999997736e-05, 4.450000000000287e-05, 4.458299999999388e-05, 4.372200000000298e-05, 4.4347000000000136e-05, 4.381999999999997e-05, 4.3638999999998096e-05, 4.4360999999999706e-05, 4.3874999999998776e-05, 4.441599999999851e-05, 4.4166999999997736e-05, 4.4166999999997736e-05, 4.39860000000028e-05, 4.4096999999999886e-05, 4.407000000000022e-05, 4.323600000000205e-05, 4.3833000000000066e-05, 4.448599999999636e-05, 4.3833000000000066e-05]</msg>
<status status="PASS" starttime="20201029 18:19:34.701" endtime="20201029 18:19:34.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.689" endtime="20201029 18:19:34.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:34.717" endtime="20201029 18:19:34.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.712" endtime="20201029 18:19:34.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.710" endtime="20201029 18:19:34.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.206" endtime="20201029 18:19:34.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.205" endtime="20201029 18:19:34.742"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.765" endtime="20201029 18:19:34.784"></status>
</kw>
<msg timestamp="20201029 18:19:34.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.762" endtime="20201029 18:19:34.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.788" endtime="20201029 18:19:34.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.794" endtime="20201029 18:19:34.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.754" endtime="20201029 18:19:34.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.749" endtime="20201029 18:19:34.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.818" endtime="20201029 18:19:35.170"></status>
</kw>
<msg timestamp="20201029 18:19:35.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040071111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040116444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.815" endtime="20201029 18:19:35.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040071111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040116444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.180" endtime="20201029 18:19:35.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.199" endtime="20201029 18:19:35.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.807" endtime="20201029 18:19:35.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.803" endtime="20201029 18:19:35.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:35.216" level="INFO">${RESULT} = [{'diff': 4.5333000000001566e-05}, {'diff': 4.48060000000014e-05}, {'diff': 4.550000000000387e-05}, {'diff': 4.49860000000038e-05}, {'diff': 4.4833000000001066e-05}, {'diff': 4.555499999999574e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:35.207" endtime="20201029 18:19:35.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:35.226" level="INFO">${ACCURACY} = {'diff': [4.5333000000001566e-05, 4.48060000000014e-05, 4.550000000000387e-05, 4.49860000000038e-05, 4.4833000000001066e-05, 4.555499999999574e-05, 4.526400000000319e-05, 4.5111000000000456e-05, 4.502...</msg>
<status status="PASS" starttime="20201029 18:19:35.219" endtime="20201029 18:19:35.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.237" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:19:35.235" endtime="20201029 18:19:35.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.243" level="INFO">VALUE: [4.5333000000001566e-05, 4.48060000000014e-05, 4.550000000000387e-05, 4.49860000000038e-05, 4.4833000000001066e-05, 4.555499999999574e-05, 4.526400000000319e-05, 4.5111000000000456e-05, 4.502800000000251e-05, 4.530500000000243e-05, 4.422200000000348e-05, 4.4610999999999956e-05, 4.467999999999833e-05, 4.5097000000000886e-05, 4.461199999999943e-05, 4.3723000000002454e-05, 4.5111000000000456e-05, 4.480599999999446e-05, 4.395799999999672e-05, 4.4624999999999526e-05, 4.549999999999693e-05, 4.484800000000011e-05, 4.4945000000004565e-05, 4.500000000000337e-05, 4.4973000000003704e-05, 4.48060000000014e-05, 4.529200000000233e-05, 4.4944999999997626e-05, 4.480599999999446e-05, 4.5167000000005675e-05, 4.4388999999998846e-05, 4.508400000000079e-05, 4.470799999999747e-05, 4.532000000000147e-05, 4.4694999999997376e-05, 4.5430999999998556e-05, 4.4374999999999276e-05, 4.548599999999736e-05, 4.51660000000062e-05, 4.4819000000001497e-05, 4.5194999999997876e-05, 4.455599999999421e-05, 4.529199999999539e-05, 4.5013999999996e-05, 4.5097000000000886e-05, 4.557000000000172e-05, 4.5402999999999416e-05, 4.5361000000000706e-05, 4.525000000000362e-05, 4.555500000000268e-05]</msg>
<status status="PASS" starttime="20201029 18:19:35.240" endtime="20201029 18:19:35.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.228" endtime="20201029 18:19:35.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:35.256" endtime="20201029 18:19:35.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.251" endtime="20201029 18:19:35.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.249" endtime="20201029 18:19:35.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.744" endtime="20201029 18:19:35.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.743" endtime="20201029 18:19:35.281"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.304" endtime="20201029 18:19:35.324"></status>
</kw>
<msg timestamp="20201029 18:19:35.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.301" endtime="20201029 18:19:35.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.327" endtime="20201029 18:19:35.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.333" endtime="20201029 18:19:35.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.293" endtime="20201029 18:19:35.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.287" endtime="20201029 18:19:35.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.359" endtime="20201029 18:19:35.718"></status>
</kw>
<msg timestamp="20201029 18:19:35.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040437556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040483444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.356" endtime="20201029 18:19:35.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040437556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040483444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.727" endtime="20201029 18:19:35.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.746" endtime="20201029 18:19:35.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.348" endtime="20201029 18:19:35.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.344" endtime="20201029 18:19:35.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:35.764" level="INFO">${RESULT} = [{'diff': 4.588800000000087e-05}, {'diff': 4.609800000000136e-05}, {'diff': 4.607000000000222e-05}, {'diff': 4.6153000000000166e-05}, {'diff': 4.641600000000051e-05}, {'diff': 4.576399999999675e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:35.755" endtime="20201029 18:19:35.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:35.773" level="INFO">${ACCURACY} = {'diff': [4.588800000000087e-05, 4.609800000000136e-05, 4.607000000000222e-05, 4.6153000000000166e-05, 4.641600000000051e-05, 4.576399999999675e-05, 4.61939999999994e-05, 4.505500000000218e-05, 4.6360...</msg>
<status status="PASS" starttime="20201029 18:19:35.766" endtime="20201029 18:19:35.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.784" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:19:35.782" endtime="20201029 18:19:35.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.789" level="INFO">VALUE: [4.588800000000087e-05, 4.609800000000136e-05, 4.607000000000222e-05, 4.6153000000000166e-05, 4.641600000000051e-05, 4.576399999999675e-05, 4.61939999999994e-05, 4.505500000000218e-05, 4.636099999999477e-05, 4.623599999999811e-05, 4.5861000000001206e-05, 4.602799999999657e-05, 4.5611000000000956e-05, 4.587499999999384e-05, 4.638800000000137e-05, 4.555600000000215e-05, 4.6403000000000416e-05, 4.5930999999999056e-05, 4.645799999999922e-05, 4.623599999999811e-05, 4.606899999999581e-05, 4.566599999999976e-05, 4.576299999999728e-05, 4.611099999999452e-05, 4.55139999999965e-05, 4.5917000000006425e-05, 4.652799999999707e-05, 4.6333000000002567e-05, 4.6416999999999986e-05, 4.577799999999632e-05, 4.5597000000001386e-05, 4.5931000000005995e-05, 4.652799999999707e-05, 4.555600000000215e-05, 4.6416999999999986e-05, 4.5931000000005995e-05, 4.6375000000001276e-05, 4.586099999999427e-05, 4.575000000000412e-05, 4.601400000000394e-05, 4.61939999999994e-05, 4.629100000000386e-05, 4.574999999999718e-05, 4.632000000000247e-05, 4.5375000000000276e-05, 4.6153000000000166e-05, 4.577799999999632e-05, 4.576399999999675e-05, 4.5375000000000276e-05, 4.595799999999872e-05]</msg>
<status status="PASS" starttime="20201029 18:19:35.786" endtime="20201029 18:19:35.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.775" endtime="20201029 18:19:35.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:35.805" endtime="20201029 18:19:35.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.798" endtime="20201029 18:19:35.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.795" endtime="20201029 18:19:35.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.283" endtime="20201029 18:19:35.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.282" endtime="20201029 18:19:35.832"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.860" endtime="20201029 18:19:35.879"></status>
</kw>
<msg timestamp="20201029 18:19:35.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.855" endtime="20201029 18:19:35.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.883" endtime="20201029 18:19:35.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.891" endtime="20201029 18:19:35.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.847" endtime="20201029 18:19:35.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.840" endtime="20201029 18:19:35.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.920" endtime="20201029 18:19:36.262"></status>
</kw>
<msg timestamp="20201029 18:19:36.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046912806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046960333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.916" endtime="20201029 18:19:36.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046912806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046960333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.271" endtime="20201029 18:19:36.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.290" endtime="20201029 18:19:36.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.907" endtime="20201029 18:19:36.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.901" endtime="20201029 18:19:36.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:36.307" level="INFO">${RESULT} = [{'diff': 4.75269999999986e-05}, {'diff': 4.756899999999731e-05}, {'diff': 4.7139000000001596e-05}, {'diff': 4.733299999999663e-05}, {'diff': 4.747199999999979e-05}, {'diff': 4.755599999999721e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:36.298" endtime="20201029 18:19:36.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:36.317" level="INFO">${ACCURACY} = {'diff': [4.75269999999986e-05, 4.756899999999731e-05, 4.7139000000001596e-05, 4.733299999999663e-05, 4.747199999999979e-05, 4.755599999999721e-05, 4.7361000000002706e-05, 4.7013999999998e-05, 4.71810...</msg>
<status status="PASS" starttime="20201029 18:19:36.309" endtime="20201029 18:19:36.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.328" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:19:36.326" endtime="20201029 18:19:36.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.333" level="INFO">VALUE: [4.75269999999986e-05, 4.756899999999731e-05, 4.7139000000001596e-05, 4.733299999999663e-05, 4.747199999999979e-05, 4.755599999999721e-05, 4.7361000000002706e-05, 4.7013999999998e-05, 4.7181000000000306e-05, 4.6972999999998766e-05, 4.688899999999441e-05, 4.605599999999571e-05, 4.7403000000001416e-05, 4.679200000000383e-05, 4.708299999999638e-05, 4.5861000000001206e-05, 4.751400000000544e-05, 4.6667000000000236e-05, 4.622199999999854e-05, 4.6931000000000056e-05, 4.722199999999954e-05, 4.68469999999957e-05, 4.6583000000002817e-05, 4.643000000000008e-05, 4.663899999999416e-05, 4.6875000000001776e-05, 4.7389000000001846e-05, 4.733400000000304e-05, 4.73060000000039e-05, 4.730599999999696e-05, 4.752799999999807e-05, 4.754100000000511e-05, 4.68060000000034e-05, 4.656900000000325e-05, 4.626399999999725e-05, 4.722199999999954e-05, 4.676399999999775e-05, 4.716600000000126e-05, 4.683299999999613e-05, 4.698599999999886e-05, 4.7403000000001416e-05, 4.622199999999854e-05, 4.748599999999936e-05, 4.573599999999761e-05, 4.690200000000144e-05, 4.741600000000151e-05, 4.655600000000315e-05, 4.7347000000003137e-05, 4.5889000000000346e-05, 4.755499999999774e-05]</msg>
<status status="PASS" starttime="20201029 18:19:36.330" endtime="20201029 18:19:36.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.319" endtime="20201029 18:19:36.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:36.346" endtime="20201029 18:19:36.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.342" endtime="20201029 18:19:36.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.339" endtime="20201029 18:19:36.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.835" endtime="20201029 18:19:36.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.833" endtime="20201029 18:19:36.371"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.393" endtime="20201029 18:19:36.411"></status>
</kw>
<msg timestamp="20201029 18:19:36.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.390" endtime="20201029 18:19:36.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.414" endtime="20201029 18:19:36.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.420" endtime="20201029 18:19:36.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.383" endtime="20201029 18:19:36.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.377" endtime="20201029 18:19:36.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.443" endtime="20201029 18:19:36.780"></status>
</kw>
<msg timestamp="20201029 18:19:36.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039114333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039162431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.440" endtime="20201029 18:19:36.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039114333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039162431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.789" endtime="20201029 18:19:36.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.808" endtime="20201029 18:19:36.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.433" endtime="20201029 18:19:36.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.428" endtime="20201029 18:19:36.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:36.825" level="INFO">${RESULT} = [{'diff': 4.809799999999642e-05}, {'diff': 4.8195000000000876e-05}, {'diff': 4.805500000000518e-05}, {'diff': 4.802700000000604e-05}, {'diff': 4.768000000000133e-05}, {'diff': 4.858300000000482e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:36.816" endtime="20201029 18:19:36.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:36.836" level="INFO">${ACCURACY} = {'diff': [4.809799999999642e-05, 4.8195000000000876e-05, 4.805500000000518e-05, 4.802700000000604e-05, 4.768000000000133e-05, 4.858300000000482e-05, 4.830500000000543e-05, 4.823600000000011e-05, 4.738...</msg>
<status status="PASS" starttime="20201029 18:19:36.827" endtime="20201029 18:19:36.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.847" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:19:36.845" endtime="20201029 18:19:36.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.852" level="INFO">VALUE: [4.809799999999642e-05, 4.8195000000000876e-05, 4.805500000000518e-05, 4.802700000000604e-05, 4.768000000000133e-05, 4.858300000000482e-05, 4.830500000000543e-05, 4.823600000000011e-05, 4.7389000000001846e-05, 4.768000000000133e-05, 4.8415999999995574e-05, 4.8111000000003457e-05, 4.824999999999968e-05, 4.808299999999738e-05, 4.795800000000072e-05, 4.863899999999616e-05, 4.8167000000001736e-05, 4.8459000000000696e-05, 4.808400000000379e-05, 4.85269999999996e-05, 4.795800000000072e-05, 4.826399999999925e-05, 4.7931000000001056e-05, 4.831899999999806e-05, 4.7903000000001916e-05, 4.824999999999968e-05, 4.8111000000003457e-05, 4.779099999999842e-05, 4.809699999999695e-05, 4.7375000000002276e-05, 4.8473000000000266e-05, 4.773599999999961e-05, 4.824999999999968e-05, 4.823600000000011e-05, 4.774999999999918e-05, 4.827799999999882e-05, 4.826399999999925e-05, 4.787499999999584e-05, 4.795800000000072e-05, 4.786099999999627e-05, 4.724999999999868e-05, 4.761200000000243e-05, 4.7875000000002776e-05, 4.78060000000044e-05, 4.7945000000000626e-05, 4.840299999999548e-05, 4.722199999999954e-05, 4.809700000000389e-05, 4.762499999999559e-05, 4.844400000000165e-05]</msg>
<status status="PASS" starttime="20201029 18:19:36.849" endtime="20201029 18:19:36.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.838" endtime="20201029 18:19:36.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:36.864" endtime="20201029 18:19:36.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.860" endtime="20201029 18:19:36.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.858" endtime="20201029 18:19:36.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.373" endtime="20201029 18:19:36.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.372" endtime="20201029 18:19:36.889"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.912" endtime="20201029 18:19:36.929"></status>
</kw>
<msg timestamp="20201029 18:19:36.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.908" endtime="20201029 18:19:36.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.932" endtime="20201029 18:19:36.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.939" endtime="20201029 18:19:36.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.901" endtime="20201029 18:19:36.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.896" endtime="20201029 18:19:36.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.962" endtime="20201029 18:19:37.297"></status>
</kw>
<msg timestamp="20201029 18:19:37.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039054014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039103625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.958" endtime="20201029 18:19:37.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039054014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039103625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.306" endtime="20201029 18:19:37.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.325" endtime="20201029 18:19:37.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.951" endtime="20201029 18:19:37.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.947" endtime="20201029 18:19:37.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:37.342" level="INFO">${RESULT} = [{'diff': 4.961100000000496e-05}, {'diff': 4.918000000000283e-05}, {'diff': 4.894400000000215e-05}, {'diff': 4.898600000000086e-05}, {'diff': 4.8943999999995214e-05}, {'diff': 4.937499999999734e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:37.333" endtime="20201029 18:19:37.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:37.351" level="INFO">${ACCURACY} = {'diff': [4.961100000000496e-05, 4.918000000000283e-05, 4.894400000000215e-05, 4.898600000000086e-05, 4.8943999999995214e-05, 4.937499999999734e-05, 4.911100000000446e-05, 4.893000000000258e-05, 4.900...</msg>
<status status="PASS" starttime="20201029 18:19:37.344" endtime="20201029 18:19:37.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.362" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:19:37.360" endtime="20201029 18:19:37.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.367" level="INFO">VALUE: [4.961100000000496e-05, 4.918000000000283e-05, 4.894400000000215e-05, 4.898600000000086e-05, 4.8943999999995214e-05, 4.937499999999734e-05, 4.911100000000446e-05, 4.893000000000258e-05, 4.900000000000043e-05, 4.931999999999853e-05, 4.931999999999853e-05, 4.926400000000025e-05, 4.841699999999505e-05, 4.815299999999523e-05, 4.909799999999742e-05, 4.890299999999598e-05, 4.925000000000068e-05, 4.898600000000086e-05, 4.876300000000028e-05, 4.908300000000532e-05, 4.898600000000086e-05, 4.911100000000446e-05, 4.9179999999995894e-05, 4.959699999999845e-05, 4.861099999999702e-05, 4.894400000000215e-05, 4.948600000000136e-05, 4.9014e-05, 4.886099999999727e-05, 4.915299999999623e-05, 4.927700000000035e-05, 4.861099999999702e-05, 4.909699999999795e-05, 4.937499999999734e-05, 4.911099999999752e-05, 4.859700000000439e-05, 4.937499999999734e-05, 4.918099999999537e-05, 4.9375000000004277e-05, 4.95140000000005e-05, 4.927799999999982e-05, 4.948600000000136e-05, 4.8959000000001196e-05, 4.880599999999846e-05, 4.8375000000003276e-05, 4.954199999999964e-05, 4.8625000000003527e-05, 4.807000000000422e-05, 4.926399999999331e-05, 4.906899999999881e-05]</msg>
<status status="PASS" starttime="20201029 18:19:37.364" endtime="20201029 18:19:37.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.353" endtime="20201029 18:19:37.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:37.384" endtime="20201029 18:19:37.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.380" endtime="20201029 18:19:37.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.377" endtime="20201029 18:19:37.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.891" endtime="20201029 18:19:37.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.890" endtime="20201029 18:19:37.409"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.431" endtime="20201029 18:19:37.450"></status>
</kw>
<msg timestamp="20201029 18:19:37.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.428" endtime="20201029 18:19:37.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.454" endtime="20201029 18:19:37.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.460" endtime="20201029 18:19:37.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.421" endtime="20201029 18:19:37.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.415" endtime="20201029 18:19:37.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.483" endtime="20201029 18:19:37.827"></status>
</kw>
<msg timestamp="20201029 18:19:37.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039155972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039206222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.480" endtime="20201029 18:19:37.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039155972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039206222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.836" endtime="20201029 18:19:37.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.855" endtime="20201029 18:19:37.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.472" endtime="20201029 18:19:37.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.468" endtime="20201029 18:19:37.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:37.872" level="INFO">${RESULT} = [{'diff': 5.025000000000168e-05}, {'diff': 5.0417000000003986e-05}, {'diff': 4.977800000000032e-05}, {'diff': 5.000000000000143e-05}, {'diff': 5.030599999999996e-05}, {'diff': 4.990299999999698e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:37.863" endtime="20201029 18:19:37.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:37.881" level="INFO">${ACCURACY} = {'diff': [5.025000000000168e-05, 5.0417000000003986e-05, 4.977800000000032e-05, 5.000000000000143e-05, 5.030599999999996e-05, 4.990299999999698e-05, 5.056999999999978e-05, 4.923600000000111e-05, 4.926...</msg>
<status status="PASS" starttime="20201029 18:19:37.874" endtime="20201029 18:19:37.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.892" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:19:37.889" endtime="20201029 18:19:37.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.897" level="INFO">VALUE: [5.025000000000168e-05, 5.0417000000003986e-05, 4.977800000000032e-05, 5.000000000000143e-05, 5.030599999999996e-05, 4.990299999999698e-05, 5.056999999999978e-05, 4.923600000000111e-05, 4.926299999999384e-05, 5.040200000000494e-05, 5.045800000000322e-05, 5.044499999999619e-05, 4.9693999999995964e-05, 5.027700000000135e-05, 4.96940000000029e-05, 5.004100000000067e-05, 5.0457999999996284e-05, 4.938899999999691e-05, 4.9971999999995353e-05, 5.0471999999995854e-05, 5.0457999999996284e-05, 5.005599999999971e-05, 4.958299999999888e-05, 5.033299999999963e-05, 5.045800000000322e-05, 4.974999999999424e-05, 4.904199999999914e-05, 4.979199999999989e-05, 5.006999999999928e-05, 5.027800000000082e-05, 5.045899999999576e-05, 5.004100000000067e-05, 5.0457999999996284e-05, 5.025000000000168e-05, 4.99869999999944e-05, 4.905599999999871e-05, 5.0207999999996034e-05, 5.016600000000426e-05, 4.963899999999716e-05, 4.956899999999931e-05, 4.87219999999941e-05, 5.005599999999971e-05, 4.958399999999835e-05, 4.937499999999734e-05, 5.036100000000571e-05, 5.052800000000107e-05, 5.008399999999885e-05, 5.045800000000322e-05, 5.012500000000503e-05, 4.983299999999913e-05]</msg>
<status status="PASS" starttime="20201029 18:19:37.894" endtime="20201029 18:19:37.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.883" endtime="20201029 18:19:37.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:37.915" endtime="20201029 18:19:37.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.905" endtime="20201029 18:19:37.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.903" endtime="20201029 18:19:37.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.411" endtime="20201029 18:19:37.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.410" endtime="20201029 18:19:37.940"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.962" endtime="20201029 18:19:37.980"></status>
</kw>
<msg timestamp="20201029 18:19:37.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.959" endtime="20201029 18:19:37.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.983" endtime="20201029 18:19:37.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.989" endtime="20201029 18:19:37.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.952" endtime="20201029 18:19:37.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.946" endtime="20201029 18:19:37.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.013" endtime="20201029 18:19:38.347"></status>
</kw>
<msg timestamp="20201029 18:19:38.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039118194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039168986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.009" endtime="20201029 18:19:38.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039118194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039168986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.356" endtime="20201029 18:19:38.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.374" endtime="20201029 18:19:38.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.002" endtime="20201029 18:19:38.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.997" endtime="20201029 18:19:38.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:38.391" level="INFO">${RESULT} = [{'diff': 5.079200000000089e-05}, {'diff': 5.116600000000526e-05}, {'diff': 5.056900000000031e-05}, {'diff': 5.0985999999995923e-05}, {'diff': 5.0651999999998254e-05}, {'diff': 5.099999999999549e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:38.383" endtime="20201029 18:19:38.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:38.402" level="INFO">${ACCURACY} = {'diff': [5.079200000000089e-05, 5.116600000000526e-05, 5.056900000000031e-05, 5.0985999999995923e-05, 5.0651999999998254e-05, 5.099999999999549e-05, 5.106900000000081e-05, 5.0653000000004667e-05, 5.0...</msg>
<status status="PASS" starttime="20201029 18:19:38.394" endtime="20201029 18:19:38.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.413" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:19:38.411" endtime="20201029 18:19:38.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.418" level="INFO">VALUE: [5.079200000000089e-05, 5.116600000000526e-05, 5.056900000000031e-05, 5.0985999999995923e-05, 5.0651999999998254e-05, 5.099999999999549e-05, 5.106900000000081e-05, 5.0653000000004667e-05, 5.091699999999755e-05, 5.025000000000168e-05, 5.159700000000045e-05, 5.119499999999694e-05, 5.108399999999985e-05, 5.065299999999773e-05, 5.065299999999773e-05, 5.137499999999934e-05, 4.9721999999995103e-05, 4.988899999999741e-05, 5.119499999999694e-05, 4.998600000000186e-05, 5.0931000000004056e-05, 5.094499999999669e-05, 5.132000000000053e-05, 5.1153000000005167e-05, 5.040299999999748e-05, 5.018099999999637e-05, 5.033299999999963e-05, 5.1403000000005417e-05, 5.158300000000088e-05, 5.152799999999513e-05, 5.080600000000046e-05, 5.0415999999997574e-05, 5.1137999999999184e-05, 5.098600000000286e-05, 5.130500000000149e-05, 5.148600000000336e-05, 5.076399999999481e-05, 4.994499999999569e-05, 5.1181000000004306e-05, 5.1179999999997894e-05, 5.076400000000175e-05, 5.105500000000124e-05, 5.127699999999541e-05, 5.08469999999997e-05, 5.15270000000026e-05, 5.136099999999977e-05, 5.13470000000002e-05, 5.152799999999513e-05, 5.131900000000106e-05, 4.991699999999655e-05]</msg>
<status status="PASS" starttime="20201029 18:19:38.415" endtime="20201029 18:19:38.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.404" endtime="20201029 18:19:38.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:38.430" endtime="20201029 18:19:38.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.426" endtime="20201029 18:19:38.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.424" endtime="20201029 18:19:38.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.942" endtime="20201029 18:19:38.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.941" endtime="20201029 18:19:38.455"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.478" endtime="20201029 18:19:38.495"></status>
</kw>
<msg timestamp="20201029 18:19:38.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.474" endtime="20201029 18:19:38.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.499" endtime="20201029 18:19:38.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.505" endtime="20201029 18:19:38.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.467" endtime="20201029 18:19:38.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.462" endtime="20201029 18:19:38.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.528" endtime="20201029 18:19:38.862"></status>
</kw>
<msg timestamp="20201029 18:19:38.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03901825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039070139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:38.524" endtime="20201029 18:19:38.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03901825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039070139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:38.872" endtime="20201029 18:19:38.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.890" endtime="20201029 18:19:38.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.517" endtime="20201029 18:19:38.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.513" endtime="20201029 18:19:38.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:38.907" level="INFO">${RESULT} = [{'diff': 5.188899999999941e-05}, {'diff': 5.259700000000145e-05}, {'diff': 5.186100000000027e-05}, {'diff': 5.2429999999999144e-05}, {'diff': 5.1665999999998824e-05}, {'diff': 5.202799999999563e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:38.899" endtime="20201029 18:19:38.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:38.918" level="INFO">${ACCURACY} = {'diff': [5.188899999999941e-05, 5.259700000000145e-05, 5.186100000000027e-05, 5.2429999999999144e-05, 5.1665999999998824e-05, 5.202799999999563e-05, 5.2499999999996994e-05, 5.179200000000189e-05, 5.2...</msg>
<status status="PASS" starttime="20201029 18:19:38.910" endtime="20201029 18:19:38.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.929" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:19:38.927" endtime="20201029 18:19:38.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.935" level="INFO">VALUE: [5.188899999999941e-05, 5.259700000000145e-05, 5.186100000000027e-05, 5.2429999999999144e-05, 5.1665999999998824e-05, 5.202799999999563e-05, 5.2499999999996994e-05, 5.179200000000189e-05, 5.233300000000163e-05, 5.245800000000522e-05, 5.212500000000009e-05, 5.1681000000004806e-05, 5.255600000000221e-05, 5.243099999999862e-05, 5.226400000000325e-05, 5.190299999999898e-05, 5.2457999999998284e-05, 5.227800000000282e-05, 5.21669999999988e-05, 5.179199999999495e-05, 5.190299999999898e-05, 5.086099999999927e-05, 5.173600000000361e-05, 5.238899999999991e-05, 5.15270000000026e-05, 5.16669999999983e-05, 5.236099999999383e-05, 5.1999999999996493e-05, 5.161100000000002e-05, 5.23749999999934e-05, 5.165299999999873e-05, 5.237500000000034e-05, 5.2445000000005126e-05, 5.1971999999997354e-05, 5.226400000000325e-05, 5.173600000000361e-05, 5.220800000000497e-05, 5.211100000000052e-05, 5.1721999999997104e-05, 5.168099999999787e-05, 5.137499999999934e-05, 5.211100000000052e-05, 5.1929999999998644e-05, 5.1985999999996924e-05, 5.1679999999998394e-05, 5.252799999999613e-05, 5.247299999999733e-05, 5.219499999999794e-05, 5.2014000000003e-05, 5.182000000000103e-05]</msg>
<status status="PASS" starttime="20201029 18:19:38.932" endtime="20201029 18:19:38.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.920" endtime="20201029 18:19:38.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:38.947" endtime="20201029 18:19:38.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.943" endtime="20201029 18:19:38.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.940" endtime="20201029 18:19:38.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.457" endtime="20201029 18:19:38.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.456" endtime="20201029 18:19:38.972"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.994" endtime="20201029 18:19:39.012"></status>
</kw>
<msg timestamp="20201029 18:19:39.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.991" endtime="20201029 18:19:39.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.015" endtime="20201029 18:19:39.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.022" endtime="20201029 18:19:39.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.984" endtime="20201029 18:19:39.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.978" endtime="20201029 18:19:39.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.045" endtime="20201029 18:19:39.383"></status>
</kw>
<msg timestamp="20201029 18:19:39.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039262792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039316236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.041" endtime="20201029 18:19:39.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039262792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039316236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.393" endtime="20201029 18:19:39.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.411" endtime="20201029 18:19:39.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.034" endtime="20201029 18:19:39.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.030" endtime="20201029 18:19:39.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:39.428" level="INFO">${RESULT} = [{'diff': 5.3443999999999714e-05}, {'diff': 5.309700000000195e-05}, {'diff': 5.329099999999698e-05}, {'diff': 5.2665999999999824e-05}, {'diff': 5.205500000000224e-05}, {'diff': 5.345899999999876e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:39.420" endtime="20201029 18:19:39.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:39.438" level="INFO">${ACCURACY} = {'diff': [5.3443999999999714e-05, 5.309700000000195e-05, 5.329099999999698e-05, 5.2665999999999824e-05, 5.205500000000224e-05, 5.345899999999876e-05, 5.2735999999997674e-05, 5.283299999999519e-05, 5.2...</msg>
<status status="PASS" starttime="20201029 18:19:39.430" endtime="20201029 18:19:39.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.448" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:19:39.446" endtime="20201029 18:19:39.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.454" level="INFO">VALUE: [5.3443999999999714e-05, 5.309700000000195e-05, 5.329099999999698e-05, 5.2665999999999824e-05, 5.205500000000224e-05, 5.345899999999876e-05, 5.2735999999997674e-05, 5.283299999999519e-05, 5.282000000000203e-05, 5.326300000000478e-05, 5.312500000000109e-05, 5.2445000000005126e-05, 5.331900000000306e-05, 5.2235999999997174e-05, 5.3457999999999284e-05, 5.256900000000231e-05, 5.327800000000382e-05, 5.3513999999997564e-05, 5.3471999999998854e-05, 5.359700000000245e-05, 5.262500000000059e-05, 5.3527999999997133e-05, 5.28340000000016e-05, 5.329100000000392e-05, 5.2209000000004446e-05, 5.333399999999516e-05, 5.3235999999998174e-05, 5.3277999999996883e-05, 5.313900000000066e-05, 5.201399999999606e-05, 5.361099999999508e-05, 5.3431000000006557e-05, 5.291699999999955e-05, 5.272200000000504e-05, 5.302799999999663e-05, 5.2985999999997924e-05, 5.3443999999999714e-05, 5.23470000000012e-05, 5.35419999999967e-05, 5.238899999999991e-05, 5.305600000000271e-05, 5.279200000000289e-05, 5.3195000000005876e-05, 5.336200000000124e-05, 5.3443999999999714e-05, 5.3207999999999034e-05, 5.2721999999998104e-05, 5.3443999999999714e-05, 5.2652000000000254e-05, 5.3207999999999034e-05]</msg>
<status status="PASS" starttime="20201029 18:19:39.451" endtime="20201029 18:19:39.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.439" endtime="20201029 18:19:39.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:39.466" endtime="20201029 18:19:39.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.462" endtime="20201029 18:19:39.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.459" endtime="20201029 18:19:39.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.974" endtime="20201029 18:19:39.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.973" endtime="20201029 18:19:39.491"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.513" endtime="20201029 18:19:39.533"></status>
</kw>
<msg timestamp="20201029 18:19:39.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.510" endtime="20201029 18:19:39.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.536" endtime="20201029 18:19:39.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.542" endtime="20201029 18:19:39.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.503" endtime="20201029 18:19:39.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.497" endtime="20201029 18:19:39.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.565" endtime="20201029 18:19:39.910"></status>
</kw>
<msg timestamp="20201029 18:19:39.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040557361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040611583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.562" endtime="20201029 18:19:39.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040557361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040611583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.920" endtime="20201029 18:19:39.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.938" endtime="20201029 18:19:39.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.555" endtime="20201029 18:19:39.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.550" endtime="20201029 18:19:39.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:39.955" level="INFO">${RESULT} = [{'diff': 5.4221999999999604e-05}, {'diff': 5.4513999999998564e-05}, {'diff': 5.4485999999999424e-05}, {'diff': 5.433300000000363e-05}, {'diff': 5.3707999999999534e-05}, {'diff': 5.412499999999515e-05...</msg>
<status status="PASS" starttime="20201029 18:19:39.947" endtime="20201029 18:19:39.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:39.965" level="INFO">${ACCURACY} = {'diff': [5.4221999999999604e-05, 5.4513999999998564e-05, 5.4485999999999424e-05, 5.433300000000363e-05, 5.3707999999999534e-05, 5.412499999999515e-05, 5.3749999999998244e-05, 5.397299999999883e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:19:39.957" endtime="20201029 18:19:39.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.976" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:19:39.973" endtime="20201029 18:19:39.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.981" level="INFO">VALUE: [5.4221999999999604e-05, 5.4513999999998564e-05, 5.4485999999999424e-05, 5.433300000000363e-05, 5.3707999999999534e-05, 5.412499999999515e-05, 5.3749999999998244e-05, 5.397299999999883e-05, 5.4430000000001144e-05, 5.418100000000037e-05, 5.458299999999694e-05, 5.431899999999712e-05, 5.462500000000259e-05, 5.393100000000012e-05, 5.4291999999997453e-05, 5.443099999999368e-05, 5.388900000000141e-05, 5.388899999999447e-05, 5.455599999999727e-05, 5.40419999999972e-05, 5.4499999999998994e-05, 5.444500000000019e-05, 5.4221999999999604e-05, 5.4471999999999854e-05, 5.4444000000000714e-05, 5.38470000000027e-05, 5.4513999999998564e-05, 5.288900000000041e-05, 5.463899999999522e-05, 5.3666000000000824e-05, 5.359699999999551e-05, 5.4485999999999424e-05, 5.387500000000184e-05, 5.376400000000475e-05, 5.375000000000518e-05, 5.405599999999677e-05, 5.4027999999997633e-05, 5.305600000000271e-05, 5.2735999999997674e-05, 5.3916000000001074e-05, 5.362500000000159e-05, 5.43340000000031e-05, 5.3777999999997383e-05, 5.44869999999989e-05, 5.355600000000321e-05, 5.336100000000177e-05, 5.447299999999933e-05, 5.438900000000191e-05, 5.358299999999594e-05, 5.380599999999652e-05]</msg>
<status status="PASS" starttime="20201029 18:19:39.978" endtime="20201029 18:19:39.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.966" endtime="20201029 18:19:39.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:39.995" endtime="20201029 18:19:40.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.989" endtime="20201029 18:19:40.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.987" endtime="20201029 18:19:40.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.493" endtime="20201029 18:19:40.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.492" endtime="20201029 18:19:40.020"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.042" endtime="20201029 18:19:40.062"></status>
</kw>
<msg timestamp="20201029 18:19:40.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.039" endtime="20201029 18:19:40.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.065" endtime="20201029 18:19:40.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.071" endtime="20201029 18:19:40.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.032" endtime="20201029 18:19:40.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.026" endtime="20201029 18:19:40.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.094" endtime="20201029 18:19:40.441"></status>
</kw>
<msg timestamp="20201029 18:19:40.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039434361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039489292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.091" endtime="20201029 18:19:40.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039434361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039489292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.451" endtime="20201029 18:19:40.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.470" endtime="20201029 18:19:40.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.084" endtime="20201029 18:19:40.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.079" endtime="20201029 18:19:40.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:40.486" level="INFO">${RESULT} = [{'diff': 5.493100000000112e-05}, {'diff': 5.520900000000051e-05}, {'diff': 5.537500000000334e-05}, {'diff': 5.5555999999998273e-05}, {'diff': 5.5137999999996246e-05}, {'diff': 5.4416000000001574e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:40.478" endtime="20201029 18:19:40.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:40.497" level="INFO">${ACCURACY} = {'diff': [5.493100000000112e-05, 5.520900000000051e-05, 5.537500000000334e-05, 5.5555999999998273e-05, 5.5137999999996246e-05, 5.4416000000001574e-05, 5.431899999999712e-05, 5.547300000000033e-05, 5.4...</msg>
<status status="PASS" starttime="20201029 18:19:40.488" endtime="20201029 18:19:40.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.508" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:19:40.506" endtime="20201029 18:19:40.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.513" level="INFO">VALUE: [5.493100000000112e-05, 5.520900000000051e-05, 5.537500000000334e-05, 5.5555999999998273e-05, 5.5137999999996246e-05, 5.4416000000001574e-05, 5.431899999999712e-05, 5.547300000000033e-05, 5.408300000000338e-05, 5.406900000000381e-05, 5.5208000000001034e-05, 5.5041999999998203e-05, 5.5222000000000604e-05, 5.465300000000173e-05, 5.4249999999998744e-05, 5.506999999999734e-05, 5.4957999999993845e-05, 5.5027999999998634e-05, 5.468100000000087e-05, 5.537500000000334e-05, 5.4999999999999494e-05, 5.518100000000137e-05, 5.5472000000000854e-05, 5.486099999999633e-05, 5.512499999999615e-05, 5.5041999999998203e-05, 5.509699999999701e-05, 5.462500000000259e-05, 5.513900000000266e-05, 5.4735999999999674e-05, 5.38749999999949e-05, 5.497299999999983e-05, 5.533299999999769e-05, 5.506999999999734e-05, 5.53749999999964e-05, 5.4777999999998384e-05, 5.508299999999744e-05, 5.465300000000173e-05, 5.4999999999999494e-05, 5.48749999999959e-05, 5.375000000000518e-05, 5.4777999999998384e-05, 5.441700000000105e-05, 5.40549999999973e-05, 5.458300000000388e-05, 5.4944000000001214e-05, 5.5013999999999064e-05, 5.5180000000001894e-05, 5.5166000000002324e-05, 5.530499999999855e-05]</msg>
<status status="PASS" starttime="20201029 18:19:40.510" endtime="20201029 18:19:40.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.499" endtime="20201029 18:19:40.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:40.526" endtime="20201029 18:19:40.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.521" endtime="20201029 18:19:40.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.519" endtime="20201029 18:19:40.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.022" endtime="20201029 18:19:40.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.021" endtime="20201029 18:19:40.551"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.573" endtime="20201029 18:19:40.592"></status>
</kw>
<msg timestamp="20201029 18:19:40.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.570" endtime="20201029 18:19:40.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.596" endtime="20201029 18:19:40.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.602" endtime="20201029 18:19:40.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.563" endtime="20201029 18:19:40.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.557" endtime="20201029 18:19:40.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.625" endtime="20201029 18:19:40.971"></status>
</kw>
<msg timestamp="20201029 18:19:40.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039348653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039404917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.622" endtime="20201029 18:19:40.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039348653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039404917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.981" endtime="20201029 18:19:40.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.999" endtime="20201029 18:19:41.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.615" endtime="20201029 18:19:41.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.610" endtime="20201029 18:19:41.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:41.017" level="INFO">${RESULT} = [{'diff': 5.6264000000000314e-05}, {'diff': 5.6291999999999454e-05}, {'diff': 5.584800000000417e-05}, {'diff': 5.61670000000028e-05}, {'diff': 5.6236000000001174e-05}, {'diff': 5.615300000000323e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:41.008" endtime="20201029 18:19:41.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:41.028" level="INFO">${ACCURACY} = {'diff': [5.6264000000000314e-05, 5.6291999999999454e-05, 5.584800000000417e-05, 5.61670000000028e-05, 5.6236000000001174e-05, 5.615300000000323e-05, 5.6027999999999634e-05, 5.520900000000051e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 18:19:41.019" endtime="20201029 18:19:41.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.041" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:19:41.038" endtime="20201029 18:19:41.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.047" level="INFO">VALUE: [5.6264000000000314e-05, 5.6291999999999454e-05, 5.584800000000417e-05, 5.61670000000028e-05, 5.6236000000001174e-05, 5.615300000000323e-05, 5.6027999999999634e-05, 5.520900000000051e-05, 5.6000000000000494e-05, 5.641700000000305e-05, 5.590300000000298e-05, 5.59870000000004e-05, 5.584799999999723e-05, 5.5763999999999814e-05, 5.65549999999998e-05, 5.568100000000187e-05, 5.476299999999934e-05, 5.568100000000187e-05, 5.595900000000126e-05, 5.6014000000000064e-05, 5.506999999999734e-05, 5.577699999999991e-05, 5.506999999999734e-05, 5.5555999999998273e-05, 5.563900000000316e-05, 5.619500000000194e-05, 5.6264000000000314e-05, 5.561099999999708e-05, 5.6014000000000064e-05, 5.6249999999993805e-05, 5.632000000000553e-05, 5.4735999999999674e-05, 5.594499999999475e-05, 5.577800000000632e-05, 5.6264000000000314e-05, 5.634699999999826e-05, 5.588899999999647e-05, 5.579100000000642e-05, 5.6027999999999634e-05, 5.508399999999691e-05, 5.6014000000000064e-05, 5.5986000000000924e-05, 5.6165999999996385e-05, 5.491699999999461e-05, 5.630600000000596e-05, 5.569500000000144e-05, 5.509699999999701e-05, 5.5722000000001104e-05, 5.587500000000384e-05, 5.572300000000058e-05]</msg>
<status status="PASS" starttime="20201029 18:19:41.043" endtime="20201029 18:19:41.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.029" endtime="20201029 18:19:41.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:41.060" endtime="20201029 18:19:41.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.056" endtime="20201029 18:19:41.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.054" endtime="20201029 18:19:41.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.553" endtime="20201029 18:19:41.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.552" endtime="20201029 18:19:41.086"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.108" endtime="20201029 18:19:41.127"></status>
</kw>
<msg timestamp="20201029 18:19:41.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.105" endtime="20201029 18:19:41.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.131" endtime="20201029 18:19:41.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.137" endtime="20201029 18:19:41.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.098" endtime="20201029 18:19:41.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.092" endtime="20201029 18:19:41.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.160" endtime="20201029 18:19:41.509"></status>
</kw>
<msg timestamp="20201029 18:19:41.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039398972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039454986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.157" endtime="20201029 18:19:41.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039398972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039454986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.519" endtime="20201029 18:19:41.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.537" endtime="20201029 18:19:41.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.150" endtime="20201029 18:19:41.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.145" endtime="20201029 18:19:41.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:41.555" level="INFO">${RESULT} = [{'diff': 5.6014000000000064e-05}, {'diff': 5.737500000000534e-05}, {'diff': 5.716699999999686e-05}, {'diff': 5.7528000000001134e-05}, {'diff': 5.690299999999704e-05}, {'diff': 5.6401999999997066e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:41.546" endtime="20201029 18:19:41.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:41.564" level="INFO">${ACCURACY} = {'diff': [5.6014000000000064e-05, 5.737500000000534e-05, 5.716699999999686e-05, 5.7528000000001134e-05, 5.690299999999704e-05, 5.6401999999997066e-05, 5.6986000000001924e-05, 5.6250000000000744e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:19:41.557" endtime="20201029 18:19:41.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.575" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:19:41.573" endtime="20201029 18:19:41.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.580" level="INFO">VALUE: [5.6014000000000064e-05, 5.737500000000534e-05, 5.716699999999686e-05, 5.7528000000001134e-05, 5.690299999999704e-05, 5.6401999999997066e-05, 5.6986000000001924e-05, 5.6250000000000744e-05, 5.688899999999747e-05, 5.7472000000002854e-05, 5.6221999999994665e-05, 5.6805999999999524e-05, 5.683399999999866e-05, 5.718099999999643e-05, 5.7500000000001994e-05, 5.7486000000002424e-05, 5.7236000000002174e-05, 5.745900000000276e-05, 5.683299999999919e-05, 5.688900000000441e-05, 5.686099999999833e-05, 5.665300000000373e-05, 5.606999999999834e-05, 5.7027999999993695e-05, 5.736099999999883e-05, 5.7306000000000024e-05, 5.6778000000000384e-05, 5.7028000000000634e-05, 5.7306000000000024e-05, 5.7194999999996e-05, 5.643100000000262e-05, 5.713900000000466e-05, 5.744499999999625e-05, 5.722300000000208e-05, 5.7264000000001314e-05, 5.683300000000613e-05, 5.711099999999858e-05, 5.75550000000008e-05, 5.7083999999998913e-05, 5.7152000000004755e-05, 5.7499999999995055e-05, 5.6958000000002784e-05, 5.733299999999969e-05, 5.6708000000002534e-05, 5.665299999999679e-05, 5.606899999999887e-05, 5.7306000000000024e-05, 5.7264000000001314e-05, 5.661099999999808e-05, 5.732000000000653e-05]</msg>
<status status="PASS" starttime="20201029 18:19:41.577" endtime="20201029 18:19:41.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.566" endtime="20201029 18:19:41.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:41.592" endtime="20201029 18:19:41.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.588" endtime="20201029 18:19:41.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.586" endtime="20201029 18:19:41.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.088" endtime="20201029 18:19:41.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.086" endtime="20201029 18:19:41.618"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.640" endtime="20201029 18:19:41.660"></status>
</kw>
<msg timestamp="20201029 18:19:41.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.637" endtime="20201029 18:19:41.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.663" endtime="20201029 18:19:41.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.669" endtime="20201029 18:19:41.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.630" endtime="20201029 18:19:41.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.624" endtime="20201029 18:19:41.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.692" endtime="20201029 18:19:42.028"></status>
</kw>
<msg timestamp="20201029 18:19:42.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041001333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041059292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.689" endtime="20201029 18:19:42.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041001333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041059292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.037" endtime="20201029 18:19:42.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.056" endtime="20201029 18:19:42.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.682" endtime="20201029 18:19:42.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.677" endtime="20201029 18:19:42.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:42.073" level="INFO">${RESULT} = [{'diff': 5.795899999999632e-05}, {'diff': 5.709699999999901e-05}, {'diff': 5.8179999999997956e-05}, {'diff': 5.7750000000002244e-05}, {'diff': 5.811099999999958e-05}, {'diff': 5.7749999999995305e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:42.064" endtime="20201029 18:19:42.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:42.082" level="INFO">${ACCURACY} = {'diff': [5.795899999999632e-05, 5.709699999999901e-05, 5.8179999999997956e-05, 5.7750000000002244e-05, 5.811099999999958e-05, 5.7749999999995305e-05, 5.80550000000013e-05, 5.7250000000001744e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 18:19:42.075" endtime="20201029 18:19:42.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.093" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:19:42.090" endtime="20201029 18:19:42.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.098" level="INFO">VALUE: [5.795899999999632e-05, 5.709699999999901e-05, 5.8179999999997956e-05, 5.7750000000002244e-05, 5.811099999999958e-05, 5.7749999999995305e-05, 5.80550000000013e-05, 5.7250000000001744e-05, 5.8500000000002994e-05, 5.8264000000002314e-05, 5.7820000000000094e-05, 5.7651999999998316e-05, 5.7736000000002674e-05, 5.836099999999983e-05, 5.7236000000002174e-05, 5.8651999999999316e-05, 5.844500000000419e-05, 5.8416000000005575e-05, 5.786099999999933e-05, 5.8443999999997776e-05, 5.78749999999989e-05, 5.779100000000148e-05, 5.811099999999958e-05, 5.815299999999829e-05, 5.7986000000002924e-05, 5.797300000000283e-05, 5.812499999999915e-05, 5.7986000000002924e-05, 5.765300000000473e-05, 5.7735999999995735e-05, 5.8542000000001704e-05, 5.722299999999514e-05, 5.838899999999897e-05, 5.8013999999995125e-05, 5.766699999999736e-05, 5.7750000000002244e-05, 5.78619999999988e-05, 5.779100000000148e-05, 5.830500000000155e-05, 5.861100000000008e-05, 5.6750000000001244e-05, 5.8152000000005755e-05, 5.786099999999933e-05, 5.818100000000437e-05, 5.772299999999564e-05, 5.858300000000094e-05, 5.8443999999997776e-05, 5.7778000000001384e-05, 5.78749999999989e-05, 5.7791999999994015e-05]</msg>
<status status="PASS" starttime="20201029 18:19:42.095" endtime="20201029 18:19:42.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.084" endtime="20201029 18:19:42.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:42.112" endtime="20201029 18:19:42.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.106" endtime="20201029 18:19:42.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.104" endtime="20201029 18:19:42.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.620" endtime="20201029 18:19:42.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.619" endtime="20201029 18:19:42.137"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.159" endtime="20201029 18:19:42.178"></status>
</kw>
<msg timestamp="20201029 18:19:42.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.156" endtime="20201029 18:19:42.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.182" endtime="20201029 18:19:42.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.188" endtime="20201029 18:19:42.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.149" endtime="20201029 18:19:42.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.143" endtime="20201029 18:19:42.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.211" endtime="20201029 18:19:42.564"></status>
</kw>
<msg timestamp="20201029 18:19:42.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039050958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039109792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.208" endtime="20201029 18:19:42.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039050958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039109792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.576" endtime="20201029 18:19:42.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.596" endtime="20201029 18:19:42.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.201" endtime="20201029 18:19:42.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.196" endtime="20201029 18:19:42.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:42.613" level="INFO">${RESULT} = [{'diff': 5.8834000000000664e-05}, {'diff': 5.8721999999997165e-05}, {'diff': 5.9098000000000483e-05}, {'diff': 5.909700000000101e-05}, {'diff': 5.937499999999346e-05}, {'diff': 5.8651999999999316e-05...</msg>
<status status="PASS" starttime="20201029 18:19:42.605" endtime="20201029 18:19:42.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:42.624" level="INFO">${ACCURACY} = {'diff': [5.8834000000000664e-05, 5.8721999999997165e-05, 5.9098000000000483e-05, 5.909700000000101e-05, 5.937499999999346e-05, 5.8651999999999316e-05, 5.9151999999999816e-05, 5.9263999999996375e-05, ...</msg>
<status status="PASS" starttime="20201029 18:19:42.615" endtime="20201029 18:19:42.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.635" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:19:42.633" endtime="20201029 18:19:42.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.640" level="INFO">VALUE: [5.8834000000000664e-05, 5.8721999999997165e-05, 5.9098000000000483e-05, 5.909700000000101e-05, 5.937499999999346e-05, 5.8651999999999316e-05, 5.9151999999999816e-05, 5.9263999999996375e-05, 5.9208000000005034e-05, 5.8651999999999316e-05, 5.9443999999998776e-05, 5.9277999999995945e-05, 5.938899999999997e-05, 5.95550000000028e-05, 5.888899999999947e-05, 5.9014000000003064e-05, 5.9221999999997665e-05, 5.8513999999995625e-05, 5.9278000000002884e-05, 5.8778000000002384e-05, 5.943099999999868e-05, 5.8651999999999316e-05, 5.9151999999999816e-05, 5.9472000000004854e-05, 5.8679999999998456e-05, 5.8791999999995015e-05, 5.7721999999996165e-05, 5.916699999999886e-05, 5.841700000000505e-05, 5.8778000000002384e-05, 5.8833999999993725e-05, 5.911100000000058e-05, 5.922299999999714e-05, 5.934700000000126e-05, 5.8764000000002814e-05, 5.8735999999996735e-05, 5.919500000000494e-05, 5.9070000000001344e-05, 5.859700000000051e-05, 5.8735999999996735e-05, 5.8972000000004354e-05, 5.891699999999861e-05, 5.9028000000002634e-05, 5.8584000000000414e-05, 5.880500000000205e-05, 5.7944000000004214e-05, 5.9499999999997055e-05, 5.904099999999579e-05, 5.9402000000000066e-05, 5.913899999999972e-05]</msg>
<status status="PASS" starttime="20201029 18:19:42.637" endtime="20201029 18:19:42.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.626" endtime="20201029 18:19:42.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:42.653" endtime="20201029 18:19:42.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.649" endtime="20201029 18:19:42.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.646" endtime="20201029 18:19:42.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.139" endtime="20201029 18:19:42.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.138" endtime="20201029 18:19:42.678"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.700" endtime="20201029 18:19:42.718"></status>
</kw>
<msg timestamp="20201029 18:19:42.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.697" endtime="20201029 18:19:42.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.722" endtime="20201029 18:19:42.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.728" endtime="20201029 18:19:42.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.690" endtime="20201029 18:19:42.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.684" endtime="20201029 18:19:42.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.751" endtime="20201029 18:19:43.086"></status>
</kw>
<msg timestamp="20201029 18:19:43.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039275292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039334917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.748" endtime="20201029 18:19:43.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039275292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039334917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.095" endtime="20201029 18:19:43.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.114" endtime="20201029 18:19:43.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.741" endtime="20201029 18:19:43.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.736" endtime="20201029 18:19:43.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:43.131" level="INFO">${RESULT} = [{'diff': 5.962499999999371e-05}, {'diff': 5.9763999999996875e-05}, {'diff': 6.058300000000294e-05}, {'diff': 6.0499999999998055e-05}, {'diff': 6.0541999999996765e-05}, {'diff': 6.001300000000459e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:43.122" endtime="20201029 18:19:43.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:43.146" level="INFO">${ACCURACY} = {'diff': [5.962499999999371e-05, 5.9763999999996875e-05, 6.058300000000294e-05, 6.0499999999998055e-05, 6.0541999999996765e-05, 6.001300000000459e-05, 6.058300000000294e-05, 5.9194999999998e-05, 6.000...</msg>
<status status="PASS" starttime="20201029 18:19:43.133" endtime="20201029 18:19:43.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.156" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:19:43.154" endtime="20201029 18:19:43.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.162" level="INFO">VALUE: [5.962499999999371e-05, 5.9763999999996875e-05, 6.058300000000294e-05, 6.0499999999998055e-05, 6.0541999999996765e-05, 6.001300000000459e-05, 6.058300000000294e-05, 5.9194999999998e-05, 6.0000000000004494e-05, 5.9721999999998165e-05, 5.990300000000004e-05, 6.03750000000014e-05, 5.9707999999998596e-05, 5.9834000000001664e-05, 6.00550000000033e-05, 5.943099999999868e-05, 6.0556000000003274e-05, 6.006900000000287e-05, 6.0570000000002844e-05, 5.9584000000001414e-05, 5.9291999999995515e-05, 6.0513999999997625e-05, 6.0179999999999956e-05, 5.963900000000022e-05, 5.9862000000000803e-05, 5.9485999999997485e-05, 6.033300000000269e-05, 6.018099999999943e-05, 5.9778000000003384e-05, 6.012500000000115e-05, 5.9763999999996875e-05, 5.9848000000001234e-05, 6.0430000000000206e-05, 6.0305999999996085e-05, 5.920900000000451e-05, 5.9693999999999026e-05, 6.027700000000441e-05, 6.0499999999998055e-05, 6.008300000000244e-05, 6.044499999999925e-05, 6.018099999999943e-05, 6.0166000000000386e-05, 6.016699999999986e-05, 6.040300000000054e-05, 6.0236000000005174e-05, 6.0513999999997625e-05, 5.9999999999997555e-05, 6.0207999999999096e-05, 6.018099999999943e-05, 6.034700000000226e-05]</msg>
<status status="PASS" starttime="20201029 18:19:43.159" endtime="20201029 18:19:43.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.147" endtime="20201029 18:19:43.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:43.174" endtime="20201029 18:19:43.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.170" endtime="20201029 18:19:43.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.167" endtime="20201029 18:19:43.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.680" endtime="20201029 18:19:43.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.679" endtime="20201029 18:19:43.199"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.222" endtime="20201029 18:19:43.239"></status>
</kw>
<msg timestamp="20201029 18:19:43.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.218" endtime="20201029 18:19:43.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.243" endtime="20201029 18:19:43.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.249" endtime="20201029 18:19:43.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.211" endtime="20201029 18:19:43.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.205" endtime="20201029 18:19:43.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.272" endtime="20201029 18:19:43.608"></status>
</kw>
<msg timestamp="20201029 18:19:43.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038861931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038922611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.269" endtime="20201029 18:19:43.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038861931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038922611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.617" endtime="20201029 18:19:43.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.636" endtime="20201029 18:19:43.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.262" endtime="20201029 18:19:43.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.257" endtime="20201029 18:19:43.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:43.653" level="INFO">${RESULT} = [{'diff': 6.0680000000000456e-05}, {'diff': 6.134699999999632e-05}, {'diff': 6.066700000000036e-05}, {'diff': 6.0902000000001566e-05}, {'diff': 6.0028000000003634e-05}, {'diff': 6.14029999999946e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:43.644" endtime="20201029 18:19:43.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:43.662" level="INFO">${ACCURACY} = {'diff': [6.0680000000000456e-05, 6.134699999999632e-05, 6.066700000000036e-05, 6.0902000000001566e-05, 6.0028000000003634e-05, 6.14029999999946e-05, 6.070899999999907e-05, 6.118000000000096e-05, 6.09...</msg>
<status status="PASS" starttime="20201029 18:19:43.655" endtime="20201029 18:19:43.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.673" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:19:43.671" endtime="20201029 18:19:43.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.678" level="INFO">VALUE: [6.0680000000000456e-05, 6.134699999999632e-05, 6.066700000000036e-05, 6.0902000000001566e-05, 6.0028000000003634e-05, 6.14029999999946e-05, 6.070899999999907e-05, 6.118000000000096e-05, 6.0971999999999416e-05, 6.122199999999967e-05, 6.0819999999996155e-05, 6.0763999999997875e-05, 6.080500000000405e-05, 6.136099999999589e-05, 6.140300000000154e-05, 6.145800000000035e-05, 6.0957999999999846e-05, 6.1027999999997695e-05, 6.062500000000165e-05, 6.138900000000197e-05, 6.08750000000019e-05, 6.0222000000005604e-05, 6.111100000000258e-05, 6.130600000000402e-05, 6.027700000000441e-05, 6.0612000000001554e-05, 6.149999999999906e-05, 6.0707999999999596e-05, 6.06949999999995e-05, 6.15699999999969e-05, 6.13479999999958e-05, 6.131900000000412e-05, 6.118100000000043e-05, 6.133400000000316e-05, 6.0736000000005674e-05, 6.136100000000283e-05, 6.138900000000197e-05, 6.0736000000005674e-05, 6.13200000000036e-05, 6.0957999999999846e-05, 6.118100000000043e-05, 6.091700000000061e-05, 6.109699999999607e-05, 6.0792000000003954e-05, 6.119400000000053e-05, 6.133299999999675e-05, 6.0777999999997445e-05, 6.093100000000018e-05, 6.144500000000025e-05, 6.161100000000308e-05]</msg>
<status status="PASS" starttime="20201029 18:19:43.675" endtime="20201029 18:19:43.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.664" endtime="20201029 18:19:43.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:43.691" endtime="20201029 18:19:43.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.686" endtime="20201029 18:19:43.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.684" endtime="20201029 18:19:43.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.201" endtime="20201029 18:19:43.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.200" endtime="20201029 18:19:43.716"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.738" endtime="20201029 18:19:43.758"></status>
</kw>
<msg timestamp="20201029 18:19:43.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.735" endtime="20201029 18:19:43.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.761" endtime="20201029 18:19:43.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.767" endtime="20201029 18:19:43.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.728" endtime="20201029 18:19:43.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.722" endtime="20201029 18:19:43.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.790" endtime="20201029 18:19:44.124"></status>
</kw>
<msg timestamp="20201029 18:19:44.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040570736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040633153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.787" endtime="20201029 18:19:44.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040570736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040633153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.133" endtime="20201029 18:19:44.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.152" endtime="20201029 18:19:44.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.780" endtime="20201029 18:19:44.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.775" endtime="20201029 18:19:44.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:44.169" level="INFO">${RESULT} = [{'diff': 6.241699999999517e-05}, {'diff': 6.180599999999759e-05}, {'diff': 6.22080000000011e-05}, {'diff': 6.186099999999639e-05}, {'diff': 6.238899999999603e-05}, {'diff': 6.17080000000006e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:44.160" endtime="20201029 18:19:44.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:44.178" level="INFO">${ACCURACY} = {'diff': [6.241699999999517e-05, 6.180599999999759e-05, 6.22080000000011e-05, 6.186099999999639e-05, 6.238899999999603e-05, 6.17080000000006e-05, 6.18750000000029e-05, 6.259700000000451e-05, 6.1403000...</msg>
<status status="PASS" starttime="20201029 18:19:44.171" endtime="20201029 18:19:44.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.189" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:19:44.187" endtime="20201029 18:19:44.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.194" level="INFO">VALUE: [6.241699999999517e-05, 6.180599999999759e-05, 6.22080000000011e-05, 6.186099999999639e-05, 6.238899999999603e-05, 6.17080000000006e-05, 6.18750000000029e-05, 6.259700000000451e-05, 6.140300000000154e-05, 6.12499999999988e-05, 6.192999999999477e-05, 6.227799999999895e-05, 6.14300000000012e-05, 6.218000000000196e-05, 6.236099999999689e-05, 6.226399999999938e-05, 6.198599999999999e-05, 6.225000000000674e-05, 6.187499999999596e-05, 6.188899999999553e-05, 6.248599999999355e-05, 6.180599999999759e-05, 6.231999999999766e-05, 6.251300000000015e-05, 6.240300000000254e-05, 6.179199999999802e-05, 6.255599999999834e-05, 6.16950000000005e-05, 6.201399999999913e-05, 6.213899999999578e-05, 6.213899999999578e-05, 6.25699999999979e-05, 6.251399999999963e-05, 6.234699999999732e-05, 6.254099999999929e-05, 6.126399999999838e-05, 6.215300000000229e-05, 6.183299999999725e-05, 6.22499999999998e-05, 6.247200000000092e-05, 6.177800000000538e-05, 6.233300000000469e-05, 6.248600000000049e-05, 6.162500000000265e-05, 6.195900000000032e-05, 6.186100000000333e-05, 6.17080000000006e-05, 6.176399999999888e-05, 6.220900000000057e-05, 6.161100000000308e-05]</msg>
<status status="PASS" starttime="20201029 18:19:44.191" endtime="20201029 18:19:44.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.180" endtime="20201029 18:19:44.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:44.208" endtime="20201029 18:19:44.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.202" endtime="20201029 18:19:44.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.200" endtime="20201029 18:19:44.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.718" endtime="20201029 18:19:44.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.717" endtime="20201029 18:19:44.233"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.255" endtime="20201029 18:19:44.273"></status>
</kw>
<msg timestamp="20201029 18:19:44.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.252" endtime="20201029 18:19:44.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.276" endtime="20201029 18:19:44.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.283" endtime="20201029 18:19:44.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.245" endtime="20201029 18:19:44.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.239" endtime="20201029 18:19:44.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.306" endtime="20201029 18:19:44.640"></status>
</kw>
<msg timestamp="20201029 18:19:44.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038966736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039029667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.302" endtime="20201029 18:19:44.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038966736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039029667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.650" endtime="20201029 18:19:44.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.668" endtime="20201029 18:19:44.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.295" endtime="20201029 18:19:44.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.291" endtime="20201029 18:19:44.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:44.685" level="INFO">${RESULT} = [{'diff': 6.293099999999524e-05}, {'diff': 6.359699999999857e-05}, {'diff': 6.280499999999911e-05}, {'diff': 6.318100000000243e-05}, {'diff': 6.29159999999962e-05}, {'diff': 6.340300000000354e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:44.676" endtime="20201029 18:19:44.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:44.695" level="INFO">${ACCURACY} = {'diff': [6.293099999999524e-05, 6.359699999999857e-05, 6.280499999999911e-05, 6.318100000000243e-05, 6.29159999999962e-05, 6.340300000000354e-05, 6.280599999999859e-05, 6.288900000000347e-05, 6.35689...</msg>
<status status="PASS" starttime="20201029 18:19:44.687" endtime="20201029 18:19:44.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.706" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:19:44.704" endtime="20201029 18:19:44.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.712" level="INFO">VALUE: [6.293099999999524e-05, 6.359699999999857e-05, 6.280499999999911e-05, 6.318100000000243e-05, 6.29159999999962e-05, 6.340300000000354e-05, 6.280599999999859e-05, 6.288900000000347e-05, 6.356899999999943e-05, 6.276399999999988e-05, 6.341700000000311e-05, 6.333299999999875e-05, 6.283399999999773e-05, 6.308399999999798e-05, 6.326400000000038e-05, 6.329100000000004e-05, 6.173599999999974e-05, 6.295800000000185e-05, 6.322200000000167e-05, 6.345799999999541e-05, 6.315299999999635e-05, 6.341700000000311e-05, 6.35280000000002e-05, 6.32500000000008e-05, 6.34300000000032e-05, 6.355499999999986e-05, 6.263899999999628e-05, 6.263900000000322e-05, 6.312499999999721e-05, 6.3195000000002e-05, 6.20829999999975e-05, 6.28750000000039e-05, 6.316600000000339e-05, 6.209700000000401e-05, 6.268100000000193e-05, 6.293100000000218e-05, 6.298700000000046e-05, 6.348599999999455e-05, 6.2582999999998e-05, 6.295800000000185e-05, 6.28750000000039e-05, 6.304199999999927e-05, 6.286100000000433e-05, 6.34300000000032e-05, 6.350000000000106e-05, 6.338899999999703e-05, 6.338899999999703e-05, 6.327799999999995e-05, 6.301400000000013e-05, 6.345799999999541e-05]</msg>
<status status="PASS" starttime="20201029 18:19:44.708" endtime="20201029 18:19:44.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.697" endtime="20201029 18:19:44.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:44.724" endtime="20201029 18:19:44.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.720" endtime="20201029 18:19:44.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.717" endtime="20201029 18:19:44.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.235" endtime="20201029 18:19:44.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.234" endtime="20201029 18:19:44.749"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.771" endtime="20201029 18:19:44.790"></status>
</kw>
<msg timestamp="20201029 18:19:44.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.768" endtime="20201029 18:19:44.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.793" endtime="20201029 18:19:44.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.799" endtime="20201029 18:19:44.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.761" endtime="20201029 18:19:44.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.755" endtime="20201029 18:19:44.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.822" endtime="20201029 18:19:45.156"></status>
</kw>
<msg timestamp="20201029 18:19:45.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039289722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039354083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.819" endtime="20201029 18:19:45.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039289722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039354083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.166" endtime="20201029 18:19:45.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.184" endtime="20201029 18:19:45.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.812" endtime="20201029 18:19:45.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.807" endtime="20201029 18:19:45.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:45.201" level="INFO">${RESULT} = [{'diff': 6.436099999999889e-05}, {'diff': 6.447200000000292e-05}, {'diff': 6.409799999999855e-05}, {'diff': 6.394499999999581e-05}, {'diff': 6.37080000000026e-05}, {'diff': 6.450000000000206e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:45.193" endtime="20201029 18:19:45.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:45.212" level="INFO">${ACCURACY} = {'diff': [6.436099999999889e-05, 6.447200000000292e-05, 6.409799999999855e-05, 6.394499999999581e-05, 6.37080000000026e-05, 6.450000000000206e-05, 6.359699999999857e-05, 6.420799999999616e-05, 6.39579...</msg>
<status status="PASS" starttime="20201029 18:19:45.203" endtime="20201029 18:19:45.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.223" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:19:45.221" endtime="20201029 18:19:45.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.228" level="INFO">VALUE: [6.436099999999889e-05, 6.447200000000292e-05, 6.409799999999855e-05, 6.394499999999581e-05, 6.37080000000026e-05, 6.450000000000206e-05, 6.359699999999857e-05, 6.420799999999616e-05, 6.395799999999591e-05, 6.445800000000335e-05, 6.45699999999999e-05, 6.415299999999735e-05, 6.441699999999717e-05, 6.430600000000009e-05, 6.429200000000052e-05, 6.450000000000206e-05, 6.395900000000232e-05, 6.409699999999907e-05, 6.397200000000242e-05, 6.412499999999821e-05, 6.362499999999771e-05, 6.355599999999934e-05, 6.418099999999649e-05, 6.381899999999968e-05, 6.456900000000043e-05, 6.32500000000008e-05, 6.412499999999821e-05, 6.386099999999839e-05, 6.362500000000465e-05, 6.404200000000027e-05, 6.438899999999803e-05, 6.401399999999419e-05, 6.340300000000354e-05, 6.309700000000501e-05, 6.384699999999882e-05, 6.459799999999905e-05, 6.426400000000138e-05, 6.450000000000206e-05, 6.38620000000048e-05, 6.42500000000018e-05, 6.380500000000011e-05, 6.366599999999695e-05, 6.3582999999999e-05, 6.419400000000353e-05, 6.415299999999735e-05, 6.362499999999771e-05, 6.39029999999971e-05, 6.444499999999631e-05, 6.4195000000003e-05, 6.443100000000368e-05]</msg>
<status status="PASS" starttime="20201029 18:19:45.225" endtime="20201029 18:19:45.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.214" endtime="20201029 18:19:45.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:45.241" endtime="20201029 18:19:45.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.237" endtime="20201029 18:19:45.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.234" endtime="20201029 18:19:45.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.751" endtime="20201029 18:19:45.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.750" endtime="20201029 18:19:45.266"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.288" endtime="20201029 18:19:45.308"></status>
</kw>
<msg timestamp="20201029 18:19:45.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.285" endtime="20201029 18:19:45.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.311" endtime="20201029 18:19:45.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.317" endtime="20201029 18:19:45.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.278" endtime="20201029 18:19:45.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.272" endtime="20201029 18:19:45.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.340" endtime="20201029 18:19:45.690"></status>
</kw>
<msg timestamp="20201029 18:19:45.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039080319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039144917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.337" endtime="20201029 18:19:45.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039080319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039144917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.700" endtime="20201029 18:19:45.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.718" endtime="20201029 18:19:45.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.330" endtime="20201029 18:19:45.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.325" endtime="20201029 18:19:45.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:45.735" level="INFO">${RESULT} = [{'diff': 6.459799999999905e-05}, {'diff': 6.469499999999656e-05}, {'diff': 6.50280000000017e-05}, {'diff': 6.522199999999673e-05}, {'diff': 6.401400000000113e-05}, {'diff': 6.472199999999623e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:45.727" endtime="20201029 18:19:45.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:45.745" level="INFO">${ACCURACY} = {'diff': [6.459799999999905e-05, 6.469499999999656e-05, 6.50280000000017e-05, 6.522199999999673e-05, 6.401400000000113e-05, 6.472199999999623e-05, 6.480500000000111e-05, 6.37080000000026e-05, 6.416599...</msg>
<status status="PASS" starttime="20201029 18:19:45.737" endtime="20201029 18:19:45.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.755" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:19:45.753" endtime="20201029 18:19:45.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.761" level="INFO">VALUE: [6.459799999999905e-05, 6.469499999999656e-05, 6.50280000000017e-05, 6.522199999999673e-05, 6.401400000000113e-05, 6.472199999999623e-05, 6.480500000000111e-05, 6.37080000000026e-05, 6.416599999999745e-05, 6.40829999999995e-05, 6.480500000000111e-05, 6.50830000000005e-05, 6.559700000000057e-05, 6.549999999999612e-05, 6.541700000000511e-05, 6.440300000000454e-05, 6.52229999999962e-05, 6.534700000000032e-05, 6.461099999999914e-05, 6.54029999999986e-05, 6.547199999999698e-05, 6.504199999999433e-05, 6.529200000000152e-05, 6.550000000000306e-05, 6.463899999999828e-05, 6.538899999999903e-05, 6.558400000000048e-05, 6.513899999999878e-05, 6.53479999999998e-05, 6.504200000000127e-05, 6.522199999999673e-05, 6.473600000000274e-05, 6.501400000000213e-05, 6.486099999999939e-05, 6.548600000000349e-05, 6.47500000000023e-05, 6.465299999999785e-05, 6.463900000000522e-05, 6.459699999999957e-05, 6.501400000000213e-05, 6.512499999999921e-05, 6.550000000000306e-05, 6.54029999999986e-05, 6.497200000000342e-05, 6.522199999999673e-05, 6.495800000000385e-05, 6.49300000000047e-05, 6.536099999999989e-05, 6.50830000000005e-05, 6.466599999999795e-05]</msg>
<status status="PASS" starttime="20201029 18:19:45.758" endtime="20201029 18:19:45.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.746" endtime="20201029 18:19:45.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:45.773" endtime="20201029 18:19:45.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.769" endtime="20201029 18:19:45.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.766" endtime="20201029 18:19:45.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.268" endtime="20201029 18:19:45.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.267" endtime="20201029 18:19:45.801"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.827" endtime="20201029 18:19:45.848"></status>
</kw>
<msg timestamp="20201029 18:19:45.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.823" endtime="20201029 18:19:45.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.851" endtime="20201029 18:19:45.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.858" endtime="20201029 18:19:45.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.815" endtime="20201029 18:19:45.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.808" endtime="20201029 18:19:45.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.881" endtime="20201029 18:19:46.214"></status>
</kw>
<msg timestamp="20201029 18:19:46.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047996125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048062069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.877" endtime="20201029 18:19:46.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047996125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048062069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.224" endtime="20201029 18:19:46.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.242" endtime="20201029 18:19:46.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.870" endtime="20201029 18:19:46.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.866" endtime="20201029 18:19:46.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:46.259" level="INFO">${RESULT} = [{'diff': 6.594399999999834e-05}, {'diff': 6.588899999999953e-05}, {'diff': 6.645799999999841e-05}, {'diff': 6.601400000000313e-05}, {'diff': 6.64029999999996e-05}, {'diff': 6.652799999999626e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:46.251" endtime="20201029 18:19:46.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:46.269" level="INFO">${ACCURACY} = {'diff': [6.594399999999834e-05, 6.588899999999953e-05, 6.645799999999841e-05, 6.601400000000313e-05, 6.64029999999996e-05, 6.652799999999626e-05, 6.55700000000009e-05, 6.604099999999585e-05, 6.619499...</msg>
<status status="PASS" starttime="20201029 18:19:46.261" endtime="20201029 18:19:46.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.279" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:19:46.277" endtime="20201029 18:19:46.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.285" level="INFO">VALUE: [6.594399999999834e-05, 6.588899999999953e-05, 6.645799999999841e-05, 6.601400000000313e-05, 6.64029999999996e-05, 6.652799999999626e-05, 6.55700000000009e-05, 6.604099999999585e-05, 6.619499999999806e-05, 6.632000000000166e-05, 6.605600000000184e-05, 6.612500000000021e-05, 6.656899999999549e-05, 6.616699999999892e-05, 6.601399999999619e-05, 6.633400000000123e-05, 6.580499999999517e-05, 6.604100000000279e-05, 6.644400000000578e-05, 6.595899999999738e-05, 6.60280000000027e-05, 6.587499999999996e-05, 6.634700000000132e-05, 6.655500000000286e-05, 6.492999999999777e-05, 6.587499999999996e-05, 6.57359999999968e-05, 6.562499999999971e-05, 6.65280000000032e-05, 6.654100000000329e-05, 6.615299999999935e-05, 6.591699999999867e-05, 6.631900000000218e-05, 6.612500000000021e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.598599999999705e-05, 6.563899999999928e-05, 6.579100000000254e-05, 6.580600000000159e-05, 6.655600000000234e-05, 6.634700000000132e-05, 6.472200000000317e-05, 6.654099999999635e-05, 6.634700000000132e-05, 6.583300000000125e-05, 6.572199999999723e-05, 6.562499999999971e-05, 6.52500000000028e-05, 6.618099999999849e-05]</msg>
<status status="PASS" starttime="20201029 18:19:46.282" endtime="20201029 18:19:46.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.270" endtime="20201029 18:19:46.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:46.298" endtime="20201029 18:19:46.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.293" endtime="20201029 18:19:46.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.290" endtime="20201029 18:19:46.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.803" endtime="20201029 18:19:46.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.802" endtime="20201029 18:19:46.323"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.346" endtime="20201029 18:19:46.364"></status>
</kw>
<msg timestamp="20201029 18:19:46.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.343" endtime="20201029 18:19:46.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.367" endtime="20201029 18:19:46.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.374" endtime="20201029 18:19:46.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.335" endtime="20201029 18:19:46.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.330" endtime="20201029 18:19:46.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.397" endtime="20201029 18:19:46.732"></status>
</kw>
<msg timestamp="20201029 18:19:46.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038943819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039010861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.393" endtime="20201029 18:19:46.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038943819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039010861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.741" endtime="20201029 18:19:46.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.759" endtime="20201029 18:19:46.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.386" endtime="20201029 18:19:46.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.382" endtime="20201029 18:19:46.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:46.776" level="INFO">${RESULT} = [{'diff': 6.704200000000327e-05}, {'diff': 6.74030000000006e-05}, {'diff': 6.731899999999624e-05}, {'diff': 6.695799999999891e-05}, {'diff': 6.761100000000214e-05}, {'diff': 6.737499999999452e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:46.768" endtime="20201029 18:19:46.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:46.787" level="INFO">${ACCURACY} = {'diff': [6.704200000000327e-05, 6.74030000000006e-05, 6.731899999999624e-05, 6.695799999999891e-05, 6.761100000000214e-05, 6.737499999999452e-05, 6.741700000000017e-05, 6.683300000000225e-05, 6.67079...</msg>
<status status="PASS" starttime="20201029 18:19:46.778" endtime="20201029 18:19:46.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.798" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:19:46.795" endtime="20201029 18:19:46.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.803" level="INFO">VALUE: [6.704200000000327e-05, 6.74030000000006e-05, 6.731899999999624e-05, 6.695799999999891e-05, 6.761100000000214e-05, 6.737499999999452e-05, 6.741700000000017e-05, 6.683300000000225e-05, 6.670799999999866e-05, 6.737500000000146e-05, 6.64029999999996e-05, 6.751399999999769e-05, 6.718000000000002e-05, 6.69030000000001e-05, 6.694399999999934e-05, 6.734700000000232e-05, 6.697199999999848e-05, 6.701400000000413e-05, 6.72909999999971e-05, 6.690200000000063e-05, 6.699999999999762e-05, 6.747199999999898e-05, 6.71109999999947e-05, 6.733300000000275e-05, 6.677700000000397e-05, 6.731900000000318e-05, 6.713899999999384e-05, 6.738900000000103e-05, 6.715200000000088e-05, 6.716600000000045e-05, 6.7583000000003e-05, 6.752700000000472e-05, 6.67359999999978e-05, 6.698599999999805e-05, 6.667999999999952e-05, 6.709700000000207e-05, 6.736100000000189e-05, 6.687499999999402e-05, 6.709699999999513e-05, 6.57359999999968e-05, 6.624999999999687e-05, 6.713900000000078e-05, 6.733300000000275e-05, 6.67500000000043e-05, 6.693099999999924e-05, 6.69030000000001e-05, 6.699999999999762e-05, 6.761100000000214e-05, 6.745799999999941e-05, 6.702699999999728e-05]</msg>
<status status="PASS" starttime="20201029 18:19:46.800" endtime="20201029 18:19:46.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.789" endtime="20201029 18:19:46.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:46.815" endtime="20201029 18:19:46.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.811" endtime="20201029 18:19:46.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.809" endtime="20201029 18:19:46.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.326" endtime="20201029 18:19:46.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.324" endtime="20201029 18:19:46.840"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.863" endtime="20201029 18:19:46.881"></status>
</kw>
<msg timestamp="20201029 18:19:46.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.859" endtime="20201029 18:19:46.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.884" endtime="20201029 18:19:46.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.891" endtime="20201029 18:19:46.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.852" endtime="20201029 18:19:46.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.847" endtime="20201029 18:19:46.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.914" endtime="20201029 18:19:47.248"></status>
</kw>
<msg timestamp="20201029 18:19:47.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039117403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039185306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.910" endtime="20201029 18:19:47.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039117403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039185306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.258" endtime="20201029 18:19:47.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.276" endtime="20201029 18:19:47.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.903" endtime="20201029 18:19:47.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.899" endtime="20201029 18:19:47.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:47.293" level="INFO">${RESULT} = [{'diff': 6.79030000000011e-05}, {'diff': 6.799999999999862e-05}, {'diff': 6.848599999999955e-05}, {'diff': 6.794400000000034e-05}, {'diff': 6.769499999999956e-05}, {'diff': 6.845800000000041e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:47.284" endtime="20201029 18:19:47.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:47.304" level="INFO">${ACCURACY} = {'diff': [6.79030000000011e-05, 6.799999999999862e-05, 6.848599999999955e-05, 6.794400000000034e-05, 6.769499999999956e-05, 6.845800000000041e-05, 6.84439999999939e-05, 6.822300000000614e-05, 6.768000...</msg>
<status status="PASS" starttime="20201029 18:19:47.295" endtime="20201029 18:19:47.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.315" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:19:47.313" endtime="20201029 18:19:47.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.320" level="INFO">VALUE: [6.79030000000011e-05, 6.799999999999862e-05, 6.848599999999955e-05, 6.794400000000034e-05, 6.769499999999956e-05, 6.845800000000041e-05, 6.84439999999939e-05, 6.822300000000614e-05, 6.768000000000052e-05, 6.804199999999733e-05, 6.765300000000085e-05, 6.86109999999962e-05, 6.822199999999973e-05, 6.847199999999998e-05, 6.799999999999862e-05, 6.824999999999887e-05, 6.806899999999699e-05, 6.859699999999663e-05, 6.782000000000316e-05, 6.773700000000521e-05, 6.822199999999973e-05, 6.830599999999715e-05, 6.744399999999984e-05, 6.843100000000074e-05, 6.818100000000049e-05, 6.761100000000214e-05, 6.724999999999787e-05, 6.830499999999767e-05, 6.805600000000384e-05, 6.84030000000016e-05, 6.7583000000003e-05, 6.822199999999973e-05, 6.847299999999945e-05, 6.862500000000271e-05, 6.797199999999948e-05, 6.822199999999973e-05, 6.861100000000314e-05, 6.763899999999434e-05, 6.831899999999724e-05, 6.834699999999638e-05, 6.78480000000023e-05, 6.836099999999595e-05, 6.806899999999699e-05, 6.852700000000572e-05, 6.809700000000307e-05, 6.848599999999955e-05, 6.768099999999999e-05, 6.784699999999588e-05, 6.788900000000153e-05, 6.801399999999819e-05]</msg>
<status status="PASS" starttime="20201029 18:19:47.317" endtime="20201029 18:19:47.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.306" endtime="20201029 18:19:47.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:47.333" endtime="20201029 18:19:47.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.328" endtime="20201029 18:19:47.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.326" endtime="20201029 18:19:47.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.842" endtime="20201029 18:19:47.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.841" endtime="20201029 18:19:47.358"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.380" endtime="20201029 18:19:47.398"></status>
</kw>
<msg timestamp="20201029 18:19:47.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.377" endtime="20201029 18:19:47.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.402" endtime="20201029 18:19:47.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.408" endtime="20201029 18:19:47.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.370" endtime="20201029 18:19:47.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.364" endtime="20201029 18:19:47.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.431" endtime="20201029 18:19:47.768"></status>
</kw>
<msg timestamp="20201029 18:19:47.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039144139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039212514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.428" endtime="20201029 18:19:47.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039144139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039212514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.777" endtime="20201029 18:19:47.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.796" endtime="20201029 18:19:47.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.421" endtime="20201029 18:19:47.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.416" endtime="20201029 18:19:47.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:47.813" level="INFO">${RESULT} = [{'diff': 6.837499999999552e-05}, {'diff': 6.951399999999969e-05}, {'diff': 6.956999999999797e-05}, {'diff': 6.868100000000099e-05}, {'diff': 6.826299999999896e-05}, {'diff': 6.90700000000044e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:47.804" endtime="20201029 18:19:47.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:47.822" level="INFO">${ACCURACY} = {'diff': [6.837499999999552e-05, 6.951399999999969e-05, 6.956999999999797e-05, 6.868100000000099e-05, 6.826299999999896e-05, 6.90700000000044e-05, 6.895800000000091e-05, 6.958399999999754e-05, 6.77639...</msg>
<status status="PASS" starttime="20201029 18:19:47.815" endtime="20201029 18:19:47.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.833" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:19:47.831" endtime="20201029 18:19:47.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.838" level="INFO">VALUE: [6.837499999999552e-05, 6.951399999999969e-05, 6.956999999999797e-05, 6.868100000000099e-05, 6.826299999999896e-05, 6.90700000000044e-05, 6.895800000000091e-05, 6.958399999999754e-05, 6.776399999999794e-05, 6.93480000000038e-05, 6.895800000000091e-05, 6.865299999999491e-05, 6.948600000000055e-05, 6.913900000000278e-05, 6.826399999999844e-05, 6.954099999999935e-05, 6.902799999999876e-05, 6.933399999999729e-05, 6.870800000000066e-05, 6.870800000000066e-05, 6.813900000000178e-05, 6.929200000000552e-05, 6.930599999999815e-05, 6.938900000000303e-05, 6.830499999999767e-05, 6.931900000000518e-05, 6.933299999999781e-05, 6.895800000000091e-05, 6.94160000000027e-05, 6.897200000000048e-05, 6.920800000000116e-05, 6.809700000000307e-05, 6.862499999999577e-05, 6.862500000000271e-05, 6.929199999999858e-05, 6.92909999999991e-05, 6.883299999999731e-05, 6.922200000000073e-05, 6.863900000000228e-05, 6.958399999999754e-05, 6.954199999999883e-05, 6.884699999999688e-05, 6.945800000000141e-05, 6.899999999999962e-05, 6.826399999999844e-05, 6.902799999999876e-05, 6.96109999999972e-05, 6.941700000000217e-05, 6.919400000000159e-05, 6.894500000000081e-05]</msg>
<status status="PASS" starttime="20201029 18:19:47.835" endtime="20201029 18:19:47.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.824" endtime="20201029 18:19:47.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:47.855" endtime="20201029 18:19:47.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.851" endtime="20201029 18:19:47.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.848" endtime="20201029 18:19:47.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.360" endtime="20201029 18:19:47.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.358" endtime="20201029 18:19:47.880"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.902" endtime="20201029 18:19:47.927"></status>
</kw>
<msg timestamp="20201029 18:19:47.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.899" endtime="20201029 18:19:47.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.930" endtime="20201029 18:19:47.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.936" endtime="20201029 18:19:47.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.892" endtime="20201029 18:19:47.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.886" endtime="20201029 18:19:47.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.959" endtime="20201029 18:19:48.293"></status>
</kw>
<msg timestamp="20201029 18:19:48.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044842792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04491325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:47.956" endtime="20201029 18:19:48.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044842792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04491325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:48.302" endtime="20201029 18:19:48.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.321" endtime="20201029 18:19:48.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.949" endtime="20201029 18:19:48.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.944" endtime="20201029 18:19:48.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:48.338" level="INFO">${RESULT} = [{'diff': 7.045800000000241e-05}, {'diff': 6.965300000000285e-05}, {'diff': 6.983399999999779e-05}, {'diff': 7.001400000000019e-05}, {'diff': 7.051300000000121e-05}, {'diff': 7.040199999999719e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:48.329" endtime="20201029 18:19:48.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:48.347" level="INFO">${ACCURACY} = {'diff': [7.045800000000241e-05, 6.965300000000285e-05, 6.983399999999779e-05, 7.001400000000019e-05, 7.051300000000121e-05, 7.040199999999719e-05, 6.963900000000328e-05, 7.055499999999992e-05, 7.0568...</msg>
<status status="PASS" starttime="20201029 18:19:48.340" endtime="20201029 18:19:48.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.358" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:19:48.356" endtime="20201029 18:19:48.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.363" level="INFO">VALUE: [7.045800000000241e-05, 6.965300000000285e-05, 6.983399999999779e-05, 7.001400000000019e-05, 7.051300000000121e-05, 7.040199999999719e-05, 6.963900000000328e-05, 7.055499999999992e-05, 7.05689999999995e-05, 7.029199999999958e-05, 6.979200000000602e-05, 6.99030000000031e-05, 7.01109999999977e-05, 6.988899999999659e-05, 7.00559999999989e-05, 7.012499999999727e-05, 7.051400000000069e-05, 7.062499999999777e-05, 6.998700000000052e-05, 6.979199999999908e-05, 7.051400000000069e-05, 7.037499999999752e-05, 7.043100000000274e-05, 6.968100000000199e-05, 7.016700000000292e-05, 6.979199999999908e-05, 6.991700000000267e-05, 7.044500000000231e-05, 6.968099999999505e-05, 6.987500000000396e-05, 6.984700000000482e-05, 6.984700000000482e-05, 7.034699999999838e-05, 7.037500000000446e-05, 6.998600000000105e-05, 7.034699999999838e-05, 6.887500000000296e-05, 6.906999999999747e-05, 7.009699999999813e-05, 7.048600000000155e-05, 6.995799999999497e-05, 7.011100000000464e-05, 7.045800000000241e-05, 6.962500000000371e-05, 6.995800000000191e-05, 6.968100000000199e-05, 6.90559999999979e-05, 7.027800000000001e-05, 6.941699999999523e-05, 7.00559999999989e-05]</msg>
<status status="PASS" starttime="20201029 18:19:48.360" endtime="20201029 18:19:48.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.349" endtime="20201029 18:19:48.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:48.377" endtime="20201029 18:19:48.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.371" endtime="20201029 18:19:48.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.369" endtime="20201029 18:19:48.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.882" endtime="20201029 18:19:48.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.881" endtime="20201029 18:19:48.402"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.424" endtime="20201029 18:19:48.444"></status>
</kw>
<msg timestamp="20201029 18:19:48.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.421" endtime="20201029 18:19:48.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.447" endtime="20201029 18:19:48.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.454" endtime="20201029 18:19:48.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.414" endtime="20201029 18:19:48.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.408" endtime="20201029 18:19:48.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.477" endtime="20201029 18:19:48.825"></status>
</kw>
<msg timestamp="20201029 18:19:48.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039015847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039086833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.473" endtime="20201029 18:19:48.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039015847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039086833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.834" endtime="20201029 18:19:48.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.853" endtime="20201029 18:19:48.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.466" endtime="20201029 18:19:48.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.462" endtime="20201029 18:19:48.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:48.870" level="INFO">${RESULT} = [{'diff': 7.098600000000205e-05}, {'diff': 7.101400000000119e-05}, {'diff': 7.151400000000169e-05}, {'diff': 7.01109999999977e-05}, {'diff': 7.07360000000018e-05}, {'diff': 7.148599999999561e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:48.861" endtime="20201029 18:19:48.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:48.880" level="INFO">${ACCURACY} = {'diff': [7.098600000000205e-05, 7.101400000000119e-05, 7.151400000000169e-05, 7.01109999999977e-05, 7.07360000000018e-05, 7.148599999999561e-05, 7.075000000000137e-05, 7.07910000000006e-05, 7.1360999...</msg>
<status status="PASS" starttime="20201029 18:19:48.872" endtime="20201029 18:19:48.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.891" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:19:48.889" endtime="20201029 18:19:48.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.897" level="INFO">VALUE: [7.098600000000205e-05, 7.101400000000119e-05, 7.151400000000169e-05, 7.01109999999977e-05, 7.07360000000018e-05, 7.148599999999561e-05, 7.075000000000137e-05, 7.07910000000006e-05, 7.136099999999895e-05, 7.115199999999794e-05, 7.076400000000094e-05, 7.140299999999766e-05, 7.069500000000256e-05, 7.07230000000017e-05, 7.109699999999913e-05, 7.065199999999744e-05, 7.144500000000331e-05, 7.158300000000006e-05, 7.076400000000094e-05, 7.044400000000284e-05, 7.116699999999698e-05, 7.137499999999852e-05, 7.094500000000281e-05, 7.126400000000144e-05, 7.042999999999633e-05, 7.109699999999913e-05, 7.1069e-05, 7.115299999999741e-05, 7.02910000000001e-05, 7.10559999999999e-05, 7.098600000000205e-05, 7.131900000000024e-05, 7.088899999999759e-05, 7.00979999999976e-05, 7.131900000000024e-05, 7.06109999999982e-05, 7.100000000000162e-05, 7.069499999999562e-05, 7.097199999999554e-05, 7.113899999999784e-05, 7.1069e-05, 7.134699999999938e-05, 7.031899999999924e-05, 7.118100000000349e-05, 7.088800000000506e-05, 7.130600000000015e-05, 7.041699999999623e-05, 7.134799999999886e-05, 7.026400000000044e-05, 7.105500000000042e-05]</msg>
<status status="PASS" starttime="20201029 18:19:48.894" endtime="20201029 18:19:48.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.882" endtime="20201029 18:19:48.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:48.909" endtime="20201029 18:19:48.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.905" endtime="20201029 18:19:48.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.902" endtime="20201029 18:19:48.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.404" endtime="20201029 18:19:48.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.403" endtime="20201029 18:19:48.934"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.957" endtime="20201029 18:19:48.977"></status>
</kw>
<msg timestamp="20201029 18:19:48.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.953" endtime="20201029 18:19:48.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.980" endtime="20201029 18:19:48.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.986" endtime="20201029 18:19:48.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.946" endtime="20201029 18:19:48.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.941" endtime="20201029 18:19:48.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.009" endtime="20201029 18:19:49.356"></status>
</kw>
<msg timestamp="20201029 18:19:49.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039294306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039366792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.006" endtime="20201029 18:19:49.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039294306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039366792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.365" endtime="20201029 18:19:49.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.384" endtime="20201029 18:19:49.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.999" endtime="20201029 18:19:49.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.994" endtime="20201029 18:19:49.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:49.401" level="INFO">${RESULT} = [{'diff': 7.248599999999661e-05}, {'diff': 7.106999999999947e-05}, {'diff': 7.172200000000323e-05}, {'diff': 7.241599999999876e-05}, {'diff': 7.220800000000416e-05}, {'diff': 7.201400000000219e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:49.392" endtime="20201029 18:19:49.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:49.412" level="INFO">${ACCURACY} = {'diff': [7.248599999999661e-05, 7.106999999999947e-05, 7.172200000000323e-05, 7.241599999999876e-05, 7.220800000000416e-05, 7.201400000000219e-05, 7.169399999999715e-05, 7.248599999999661e-05, 7.2180...</msg>
<status status="PASS" starttime="20201029 18:19:49.403" endtime="20201029 18:19:49.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.423" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:19:49.421" endtime="20201029 18:19:49.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.428" level="INFO">VALUE: [7.248599999999661e-05, 7.106999999999947e-05, 7.172200000000323e-05, 7.241599999999876e-05, 7.220800000000416e-05, 7.201400000000219e-05, 7.169399999999715e-05, 7.248599999999661e-05, 7.218099999999755e-05, 7.237499999999952e-05, 7.126400000000144e-05, 7.201400000000219e-05, 7.24309999999978e-05, 7.162499999999877e-05, 7.238799999999962e-05, 7.230600000000115e-05, 7.127800000000101e-05, 7.255500000000192e-05, 7.231900000000124e-05, 7.173599999999586e-05, 7.074999999999443e-05, 7.194499999999687e-05, 7.211100000000664e-05, 7.222199999999679e-05, 7.220800000000416e-05, 7.186100000000639e-05, 7.207000000000047e-05, 7.122199999999579e-05, 7.075000000000137e-05, 7.155599999999346e-05, 7.169400000000409e-05, 7.237499999999952e-05, 7.093100000000324e-05, 7.180600000000065e-05, 7.170899999999619e-05, 7.216700000000492e-05, 7.251399999999575e-05, 7.213899999999884e-05, 7.230500000000167e-05, 7.144500000000331e-05, 7.177800000000151e-05, 7.21109999999997e-05, 7.072200000000223e-05, 7.16109999999992e-05, 7.216700000000492e-05, 7.184699999999988e-05, 7.186099999999945e-05, 7.215299999999841e-05, 7.257000000000097e-05, 7.250000000000312e-05]</msg>
<status status="PASS" starttime="20201029 18:19:49.425" endtime="20201029 18:19:49.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.414" endtime="20201029 18:19:49.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:49.441" endtime="20201029 18:19:49.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.436" endtime="20201029 18:19:49.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.434" endtime="20201029 18:19:49.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.936" endtime="20201029 18:19:49.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.935" endtime="20201029 18:19:49.466"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.488" endtime="20201029 18:19:49.508"></status>
</kw>
<msg timestamp="20201029 18:19:49.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.485" endtime="20201029 18:19:49.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.511" endtime="20201029 18:19:49.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.517" endtime="20201029 18:19:49.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.478" endtime="20201029 18:19:49.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.472" endtime="20201029 18:19:49.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.540" endtime="20201029 18:19:49.885"></status>
</kw>
<msg timestamp="20201029 18:19:49.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039370264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039443333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.537" endtime="20201029 18:19:49.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039370264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039443333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.894" endtime="20201029 18:19:49.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.913" endtime="20201029 18:19:49.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.530" endtime="20201029 18:19:49.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.526" endtime="20201029 18:19:49.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:49.930" level="INFO">${RESULT} = [{'diff': 7.306899999999505e-05}, {'diff': 7.299999999999668e-05}, {'diff': 7.290199999999969e-05}, {'diff': 7.316599999999951e-05}, {'diff': 7.269399999999815e-05}, {'diff': 7.175000000000237e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:49.921" endtime="20201029 18:19:49.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:49.940" level="INFO">${ACCURACY} = {'diff': [7.306899999999505e-05, 7.299999999999668e-05, 7.290199999999969e-05, 7.316599999999951e-05, 7.269399999999815e-05, 7.175000000000237e-05, 7.176300000000246e-05, 7.226400000000244e-05, 7.2888...</msg>
<status status="PASS" starttime="20201029 18:19:49.932" endtime="20201029 18:19:49.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.950" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:19:49.948" endtime="20201029 18:19:49.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.955" level="INFO">VALUE: [7.306899999999505e-05, 7.299999999999668e-05, 7.290199999999969e-05, 7.316599999999951e-05, 7.269399999999815e-05, 7.175000000000237e-05, 7.176300000000246e-05, 7.226400000000244e-05, 7.288899999999959e-05, 7.298599999999711e-05, 7.227700000000253e-05, 7.324999999999693e-05, 7.354100000000335e-05, 7.358300000000206e-05, 7.316699999999898e-05, 7.291699999999873e-05, 7.320799999999822e-05, 7.358300000000206e-05, 7.345900000000488e-05, 7.241699999999823e-05, 7.302799999999582e-05, 7.295799999999797e-05, 7.329200000000258e-05, 7.287500000000002e-05, 7.330500000000267e-05, 7.35839999999946e-05, 7.272199999999729e-05, 7.32360000000043e-05, 7.276400000000294e-05, 7.225000000000287e-05, 7.338900000000009e-05, 7.348600000000455e-05, 7.330600000000215e-05, 7.355500000000292e-05, 7.308300000000156e-05, 7.301400000000319e-05, 7.287500000000002e-05, 7.358300000000206e-05, 7.316699999999898e-05, 7.355499999999598e-05, 7.318099999999855e-05, 7.320899999999769e-05, 7.36110000000012e-05, 7.295799999999797e-05, 7.34439999999989e-05, 7.363900000000034e-05, 7.329199999999564e-05, 7.263899999999934e-05, 7.265200000000638e-05, 7.229200000000158e-05]</msg>
<status status="PASS" starttime="20201029 18:19:49.952" endtime="20201029 18:19:49.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.941" endtime="20201029 18:19:49.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:49.968" endtime="20201029 18:19:49.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.964" endtime="20201029 18:19:49.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.961" endtime="20201029 18:19:49.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.468" endtime="20201029 18:19:49.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.467" endtime="20201029 18:19:49.993"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.015" endtime="20201029 18:19:50.036"></status>
</kw>
<msg timestamp="20201029 18:19:50.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.012" endtime="20201029 18:19:50.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.039" endtime="20201029 18:19:50.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.045" endtime="20201029 18:19:50.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.005" endtime="20201029 18:19:50.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.999" endtime="20201029 18:19:50.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.068" endtime="20201029 18:19:50.401"></status>
</kw>
<msg timestamp="20201029 18:19:50.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040782722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040856847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.065" endtime="20201029 18:19:50.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040782722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040856847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.411" endtime="20201029 18:19:50.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.429" endtime="20201029 18:19:50.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.058" endtime="20201029 18:19:50.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.053" endtime="20201029 18:19:50.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:50.446" level="INFO">${RESULT} = [{'diff': 7.412500000000127e-05}, {'diff': 7.395800000000591e-05}, {'diff': 7.44439999999999e-05}, {'diff': 7.375000000000437e-05}, {'diff': 7.27769999999961e-05}, {'diff': 7.452799999999732e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:50.438" endtime="20201029 18:19:50.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:50.456" level="INFO">${ACCURACY} = {'diff': [7.412500000000127e-05, 7.395800000000591e-05, 7.44439999999999e-05, 7.375000000000437e-05, 7.27769999999961e-05, 7.452799999999732e-05, 7.462500000000177e-05, 7.424999999999793e-05, 7.401399...</msg>
<status status="PASS" starttime="20201029 18:19:50.448" endtime="20201029 18:19:50.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.466" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:19:50.464" endtime="20201029 18:19:50.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.472" level="INFO">VALUE: [7.412500000000127e-05, 7.395800000000591e-05, 7.44439999999999e-05, 7.375000000000437e-05, 7.27769999999961e-05, 7.452799999999732e-05, 7.462500000000177e-05, 7.424999999999793e-05, 7.401399999999725e-05, 7.424999999999793e-05, 7.432000000000272e-05, 7.34439999999989e-05, 7.340200000000019e-05, 7.35969999999947e-05, 7.416699999999998e-05, 7.452799999999732e-05, 7.39439999999994e-05, 7.372199999999829e-05, 7.416600000000051e-05, 7.386200000000093e-05, 7.447199999999904e-05, 7.413900000000084e-05, 7.452800000000426e-05, 7.398599999999811e-05, 7.458300000000306e-05, 7.422199999999879e-05, 7.277800000000251e-05, 7.418099999999955e-05, 7.402800000000376e-05, 7.397199999999854e-05, 7.406899999999605e-05, 7.293100000000524e-05, 7.381900000000274e-05, 7.426400000000444e-05, 7.416699999999998e-05, 7.401399999999725e-05, 7.45969999999957e-05, 7.327800000000301e-05, 7.455500000000392e-05, 7.427799999999707e-05, 7.427800000000401e-05, 7.40560000000029e-05, 7.363900000000034e-05, 7.367999999999958e-05, 7.434700000000238e-05, 7.374999999999743e-05, 7.452800000000426e-05, 7.395899999999844e-05, 7.388800000000112e-05, 7.452799999999732e-05]</msg>
<status status="PASS" starttime="20201029 18:19:50.468" endtime="20201029 18:19:50.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.457" endtime="20201029 18:19:50.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:50.485" endtime="20201029 18:19:50.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.480" endtime="20201029 18:19:50.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.477" endtime="20201029 18:19:50.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.995" endtime="20201029 18:19:50.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.994" endtime="20201029 18:19:50.510"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.533" endtime="20201029 18:19:50.552"></status>
</kw>
<msg timestamp="20201029 18:19:50.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.530" endtime="20201029 18:19:50.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.555" endtime="20201029 18:19:50.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.561" endtime="20201029 18:19:50.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.522" endtime="20201029 18:19:50.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.517" endtime="20201029 18:19:50.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.584" endtime="20201029 18:19:50.920"></status>
</kw>
<msg timestamp="20201029 18:19:50.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039128722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039203444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.581" endtime="20201029 18:19:50.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039128722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039203444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.930" endtime="20201029 18:19:50.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.948" endtime="20201029 18:19:50.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.574" endtime="20201029 18:19:50.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.569" endtime="20201029 18:19:50.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:50.965" level="INFO">${RESULT} = [{'diff': 7.472199999999929e-05}, {'diff': 7.561099999999626e-05}, {'diff': 7.50969999999962e-05}, {'diff': 7.486100000000245e-05}, {'diff': 7.490300000000116e-05}, {'diff': 7.527700000000553e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:50.957" endtime="20201029 18:19:50.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:50.976" level="INFO">${ACCURACY} = {'diff': [7.472199999999929e-05, 7.561099999999626e-05, 7.50969999999962e-05, 7.486100000000245e-05, 7.490300000000116e-05, 7.527700000000553e-05, 7.529199999999764e-05, 7.557000000000397e-05, 7.51250...</msg>
<status status="PASS" starttime="20201029 18:19:50.967" endtime="20201029 18:19:50.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.987" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:19:50.985" endtime="20201029 18:19:50.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.993" level="INFO">VALUE: [7.472199999999929e-05, 7.561099999999626e-05, 7.50969999999962e-05, 7.486100000000245e-05, 7.490300000000116e-05, 7.527700000000553e-05, 7.529199999999764e-05, 7.557000000000397e-05, 7.512500000000227e-05, 7.512499999999533e-05, 7.555499999999798e-05, 7.50560000000039e-05, 7.390300000000016e-05, 7.562499999999583e-05, 7.511199999999524e-05, 7.465300000000091e-05, 7.408299999999562e-05, 7.483300000000331e-05, 7.515299999999447e-05, 7.531999999999678e-05, 7.465300000000091e-05, 7.519400000000065e-05, 7.536099999999601e-05, 7.548599999999961e-05, 7.477800000000451e-05, 7.540300000000166e-05, 7.430600000000315e-05, 7.513800000000237e-05, 7.540299999999472e-05, 7.56389999999954e-05, 7.480600000000365e-05, 7.530599999999721e-05, 7.55839999999966e-05, 7.488900000000159e-05, 7.398599999999811e-05, 7.504199999999739e-05, 7.486100000000245e-05, 7.440200000000119e-05, 7.506899999999705e-05, 7.51389999999949e-05, 7.530499999999773e-05, 7.465300000000091e-05, 7.534699999999644e-05, 7.552699999999885e-05, 7.552800000000526e-05, 7.474999999999843e-05, 7.495799999999997e-05, 7.547200000000004e-05, 7.523599999999936e-05, 7.426300000000496e-05]</msg>
<status status="PASS" starttime="20201029 18:19:50.990" endtime="20201029 18:19:50.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.978" endtime="20201029 18:19:50.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:51.005" endtime="20201029 18:19:51.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.001" endtime="20201029 18:19:51.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.998" endtime="20201029 18:19:51.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.513" endtime="20201029 18:19:51.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.511" endtime="20201029 18:19:51.030"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.053" endtime="20201029 18:19:51.073"></status>
</kw>
<msg timestamp="20201029 18:19:51.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.049" endtime="20201029 18:19:51.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.076" endtime="20201029 18:19:51.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.082" endtime="20201029 18:19:51.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.042" endtime="20201029 18:19:51.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.037" endtime="20201029 18:19:51.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.105" endtime="20201029 18:19:51.453"></status>
</kw>
<msg timestamp="20201029 18:19:51.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039423583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039499694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.102" endtime="20201029 18:19:51.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039423583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039499694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.462" endtime="20201029 18:19:51.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.481" endtime="20201029 18:19:51.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.095" endtime="20201029 18:19:51.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.091" endtime="20201029 18:19:51.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:51.498" level="INFO">${RESULT} = [{'diff': 7.61110000000037e-05}, {'diff': 7.554199999999789e-05}, {'diff': 7.634699999999744e-05}, {'diff': 7.661099999999726e-05}, {'diff': 7.558300000000406e-05}, {'diff': 7.574999999999943e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:51.489" endtime="20201029 18:19:51.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:51.509" level="INFO">${ACCURACY} = {'diff': [7.61110000000037e-05, 7.554199999999789e-05, 7.634699999999744e-05, 7.661099999999726e-05, 7.558300000000406e-05, 7.574999999999943e-05, 7.598600000000011e-05, 7.579099999999866e-05, 7.60689...</msg>
<status status="PASS" starttime="20201029 18:19:51.500" endtime="20201029 18:19:51.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.520" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:19:51.517" endtime="20201029 18:19:51.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.525" level="INFO">VALUE: [7.61110000000037e-05, 7.554199999999789e-05, 7.634699999999744e-05, 7.661099999999726e-05, 7.558300000000406e-05, 7.574999999999943e-05, 7.598600000000011e-05, 7.579099999999866e-05, 7.606899999999805e-05, 7.629099999999917e-05, 7.513900000000184e-05, 7.620800000000122e-05, 7.59719999999936e-05, 7.590299999999522e-05, 7.636099999999701e-05, 7.623600000000036e-05, 7.57769999999991e-05, 7.622200000000079e-05, 7.573599999999986e-05, 7.575000000000637e-05, 7.645900000000094e-05, 7.52769999999986e-05, 7.584699999999694e-05, 7.662499999999683e-05, 7.590300000000216e-05, 7.620900000000069e-05, 7.641600000000276e-05, 7.62639999999995e-05, 7.584699999999694e-05, 7.632000000000472e-05, 7.529099999999816e-05, 7.652699999999985e-05, 7.59440000000014e-05, 7.559700000000363e-05, 7.566699999999454e-05, 7.607000000000447e-05, 7.632000000000472e-05, 7.581999999999728e-05, 7.591599999999532e-05, 7.57769999999991e-05, 7.613900000000284e-05, 7.659799999999717e-05, 7.611099999999676e-05, 7.655499999999898e-05, 7.638899999999615e-05, 7.52639999999985e-05, 7.615299999999547e-05, 7.498600000000605e-05, 7.637499999999658e-05, 7.615299999999547e-05]</msg>
<status status="PASS" starttime="20201029 18:19:51.522" endtime="20201029 18:19:51.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.511" endtime="20201029 18:19:51.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:51.537" endtime="20201029 18:19:51.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.533" endtime="20201029 18:19:51.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.531" endtime="20201029 18:19:51.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.032" endtime="20201029 18:19:51.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.031" endtime="20201029 18:19:51.562"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.585" endtime="20201029 18:19:51.605"></status>
</kw>
<msg timestamp="20201029 18:19:51.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.581" endtime="20201029 18:19:51.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.608" endtime="20201029 18:19:51.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.614" endtime="20201029 18:19:51.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.574" endtime="20201029 18:19:51.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.569" endtime="20201029 18:19:51.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.640" endtime="20201029 18:19:51.992"></status>
</kw>
<msg timestamp="20201029 18:19:51.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039235167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039311778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.637" endtime="20201029 18:19:51.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039235167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039311778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.001" endtime="20201029 18:19:52.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.020" endtime="20201029 18:19:52.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.630" endtime="20201029 18:19:52.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.625" endtime="20201029 18:19:52.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:52.037" level="INFO">${RESULT} = [{'diff': 7.661099999999726e-05}, {'diff': 7.723600000000136e-05}, {'diff': 7.756999999999903e-05}, {'diff': 7.572200000000029e-05}, {'diff': 7.704199999999939e-05}, {'diff': 7.711200000000418e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:52.028" endtime="20201029 18:19:52.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:52.046" level="INFO">${ACCURACY} = {'diff': [7.661099999999726e-05, 7.723600000000136e-05, 7.756999999999903e-05, 7.572200000000029e-05, 7.704199999999939e-05, 7.711200000000418e-05, 7.701400000000025e-05, 7.623600000000036e-05, 7.7583...</msg>
<status status="PASS" starttime="20201029 18:19:52.039" endtime="20201029 18:19:52.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.057" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:19:52.055" endtime="20201029 18:19:52.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.062" level="INFO">VALUE: [7.661099999999726e-05, 7.723600000000136e-05, 7.756999999999903e-05, 7.572200000000029e-05, 7.704199999999939e-05, 7.711200000000418e-05, 7.701400000000025e-05, 7.623600000000036e-05, 7.75839999999986e-05, 7.744499999999543e-05, 7.701300000000078e-05, 7.737499999999758e-05, 7.717999999999614e-05, 7.737499999999758e-05, 7.686099999999751e-05, 7.730499999999974e-05, 7.668000000000258e-05, 7.695800000000197e-05, 7.658299999999812e-05, 7.5763999999999e-05, 7.662500000000377e-05, 7.63890000000031e-05, 7.748600000000161e-05, 7.715300000000341e-05, 7.747200000000204e-05, 7.695800000000197e-05, 7.677799999999957e-05, 7.720800000000222e-05, 7.699999999999374e-05, 7.683300000000531e-05, 7.755499999999999e-05, 7.698600000000111e-05, 7.734699999999844e-05, 7.729199999999964e-05, 7.663900000000334e-05, 7.75969999999987e-05, 7.76389999999974e-05, 7.695900000000144e-05, 7.659700000000463e-05, 7.700000000000068e-05, 7.666600000000301e-05, 7.71389999999969e-05, 7.727800000000007e-05, 7.6764e-05, 7.734699999999844e-05, 7.71389999999969e-05, 7.715299999999647e-05, 7.661099999999726e-05, 7.679199999999914e-05, 7.697300000000101e-05]</msg>
<status status="PASS" starttime="20201029 18:19:52.059" endtime="20201029 18:19:52.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.048" endtime="20201029 18:19:52.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:52.075" endtime="20201029 18:19:52.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.071" endtime="20201029 18:19:52.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.068" endtime="20201029 18:19:52.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.564" endtime="20201029 18:19:52.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.563" endtime="20201029 18:19:52.100"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.122" endtime="20201029 18:19:52.144"></status>
</kw>
<msg timestamp="20201029 18:19:52.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.119" endtime="20201029 18:19:52.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.147" endtime="20201029 18:19:52.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.154" endtime="20201029 18:19:52.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.112" endtime="20201029 18:19:52.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.106" endtime="20201029 18:19:52.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.177" endtime="20201029 18:19:52.521"></status>
</kw>
<msg timestamp="20201029 18:19:52.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040822375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040900028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.173" endtime="20201029 18:19:52.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040822375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040900028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.531" endtime="20201029 18:19:52.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.549" endtime="20201029 18:19:52.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.166" endtime="20201029 18:19:52.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.162" endtime="20201029 18:19:52.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:52.566" level="INFO">${RESULT} = [{'diff': 7.765299999999697e-05}, {'diff': 7.836099999999901e-05}, {'diff': 7.837499999999858e-05}, {'diff': 7.816699999999704e-05}, {'diff': 7.766700000000348e-05}, {'diff': 7.830600000000021e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:52.557" endtime="20201029 18:19:52.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:52.575" level="INFO">${ACCURACY} = {'diff': [7.765299999999697e-05, 7.836099999999901e-05, 7.837499999999858e-05, 7.816699999999704e-05, 7.766700000000348e-05, 7.830600000000021e-05, 7.790299999999722e-05, 7.761099999999826e-05, 7.7666...</msg>
<status status="PASS" starttime="20201029 18:19:52.568" endtime="20201029 18:19:52.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.586" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:19:52.584" endtime="20201029 18:19:52.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.591" level="INFO">VALUE: [7.765299999999697e-05, 7.836099999999901e-05, 7.837499999999858e-05, 7.816699999999704e-05, 7.766700000000348e-05, 7.830600000000021e-05, 7.790299999999722e-05, 7.761099999999826e-05, 7.766699999999654e-05, 7.79440000000034e-05, 7.784699999999894e-05, 7.800000000000168e-05, 7.837500000000552e-05, 7.787499999999808e-05, 7.784699999999894e-05, 7.815299999999747e-05, 7.820799999999628e-05, 7.767999999999664e-05, 7.793000000000383e-05, 7.83190000000003e-05, 7.787499999999808e-05, 7.85839999999996e-05, 7.861099999999926e-05, 7.786100000000545e-05, 7.70969999999982e-05, 7.845799999999653e-05, 7.825000000000193e-05, 7.844500000000337e-05, 7.744399999999596e-05, 7.820799999999628e-05, 7.805599999999996e-05, 7.782000000000622e-05, 7.811099999999876e-05, 7.840299999999772e-05, 7.851399999999481e-05, 7.826399999999456e-05, 7.767999999999664e-05, 7.816700000000398e-05, 7.830600000000021e-05, 7.788899999999765e-05, 7.822200000000279e-05, 7.777800000000057e-05, 7.865299999999797e-05, 7.813800000000537e-05, 7.79169999999968e-05, 7.78890000000046e-05, 7.847200000000304e-05, 7.833299999999987e-05, 7.768000000000358e-05, 7.762499999999783e-05]</msg>
<status status="PASS" starttime="20201029 18:19:52.588" endtime="20201029 18:19:52.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.577" endtime="20201029 18:19:52.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:52.605" endtime="20201029 18:19:52.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.600" endtime="20201029 18:19:52.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.597" endtime="20201029 18:19:52.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.102" endtime="20201029 18:19:52.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.101" endtime="20201029 18:19:52.630"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.653" endtime="20201029 18:19:52.672"></status>
</kw>
<msg timestamp="20201029 18:19:52.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.650" endtime="20201029 18:19:52.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.675" endtime="20201029 18:19:52.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.681" endtime="20201029 18:19:52.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.642" endtime="20201029 18:19:52.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.636" endtime="20201029 18:19:52.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.704" endtime="20201029 18:19:53.040"></status>
</kw>
<msg timestamp="20201029 18:19:53.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039339958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039419194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.701" endtime="20201029 18:19:53.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039339958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039419194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.049" endtime="20201029 18:19:53.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.068" endtime="20201029 18:19:53.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.694" endtime="20201029 18:19:53.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.689" endtime="20201029 18:19:53.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:53.085" level="INFO">${RESULT} = [{'diff': 7.923599999999642e-05}, {'diff': 7.938899999999915e-05}, {'diff': 7.924999999999599e-05}, {'diff': 7.949999999999624e-05}, {'diff': 7.916599999999857e-05}, {'diff': 7.923600000000336e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:53.076" endtime="20201029 18:19:53.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:53.099" level="INFO">${ACCURACY} = {'diff': [7.923599999999642e-05, 7.938899999999915e-05, 7.924999999999599e-05, 7.949999999999624e-05, 7.916599999999857e-05, 7.923600000000336e-05, 7.872200000000329e-05, 7.947200000000404e-05, 7.8292...</msg>
<status status="PASS" starttime="20201029 18:19:53.087" endtime="20201029 18:19:53.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.110" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:19:53.108" endtime="20201029 18:19:53.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.115" level="INFO">VALUE: [7.923599999999642e-05, 7.938899999999915e-05, 7.924999999999599e-05, 7.949999999999624e-05, 7.916599999999857e-05, 7.923600000000336e-05, 7.872200000000329e-05, 7.947200000000404e-05, 7.829200000000064e-05, 7.884699999999994e-05, 7.907000000000053e-05, 7.902700000000235e-05, 7.82640000000015e-05, 7.933299999999394e-05, 7.920799999999728e-05, 7.868099999999711e-05, 7.956900000000156e-05, 7.809700000000613e-05, 7.813900000000484e-05, 7.90970000000002e-05, 7.906900000000106e-05, 7.877799999999463e-05, 7.873600000000286e-05, 7.880600000000071e-05, 7.954099999999548e-05, 7.925000000000293e-05, 7.888799999999918e-05, 7.809700000000613e-05, 7.923599999999642e-05, 7.966699999999854e-05, 7.779100000000067e-05, 7.933400000000035e-05, 7.898599999999617e-05, 7.940299999999872e-05, 7.872199999999635e-05, 7.925000000000293e-05, 7.904200000000139e-05, 7.911099999999976e-05, 7.933400000000035e-05, 7.898599999999617e-05, 7.861099999999926e-05, 7.955500000000199e-05, 7.929100000000217e-05, 7.961199999999974e-05, 7.945900000000394e-05, 7.955600000000146e-05, 7.866600000000501e-05, 7.951399999999581e-05, 7.955600000000146e-05, 7.870900000000319e-05]</msg>
<status status="PASS" starttime="20201029 18:19:53.112" endtime="20201029 18:19:53.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.101" endtime="20201029 18:19:53.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:53.132" endtime="20201029 18:19:53.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.128" endtime="20201029 18:19:53.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.125" endtime="20201029 18:19:53.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.632" endtime="20201029 18:19:53.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.631" endtime="20201029 18:19:53.157"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.179" endtime="20201029 18:19:53.198"></status>
</kw>
<msg timestamp="20201029 18:19:53.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.176" endtime="20201029 18:19:53.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.202" endtime="20201029 18:19:53.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.208" endtime="20201029 18:19:53.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.169" endtime="20201029 18:19:53.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.163" endtime="20201029 18:19:53.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.231" endtime="20201029 18:19:53.566"></status>
</kw>
<msg timestamp="20201029 18:19:53.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039260833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039341292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.227" endtime="20201029 18:19:53.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039260833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039341292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.576" endtime="20201029 18:19:53.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.595" endtime="20201029 18:19:53.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.221" endtime="20201029 18:19:53.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.216" endtime="20201029 18:19:53.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:53.612" level="INFO">${RESULT} = [{'diff': 8.0458999999998e-05}, {'diff': 7.961100000000026e-05}, {'diff': 7.995799999999803e-05}, {'diff': 7.973599999999692e-05}, {'diff': 7.962499999999983e-05}, {'diff': 7.976399999999606e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:53.603" endtime="20201029 18:19:53.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:53.622" level="INFO">${ACCURACY} = {'diff': [8.0458999999998e-05, 7.961100000000026e-05, 7.995799999999803e-05, 7.973599999999692e-05, 7.962499999999983e-05, 7.976399999999606e-05, 8.026399999999656e-05, 7.973600000000386e-05, 8.063900...</msg>
<status status="PASS" starttime="20201029 18:19:53.614" endtime="20201029 18:19:53.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.633" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:19:53.631" endtime="20201029 18:19:53.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.639" level="INFO">VALUE: [8.0458999999998e-05, 7.961100000000026e-05, 7.995799999999803e-05, 7.973599999999692e-05, 7.962499999999983e-05, 7.976399999999606e-05, 8.026399999999656e-05, 7.973600000000386e-05, 8.06390000000004e-05, 7.998599999999717e-05, 8.022199999999785e-05, 8.048599999999767e-05, 8.016699999999904e-05, 7.994399999999846e-05, 8.017999999999914e-05, 7.970799999999778e-05, 8.036200000000049e-05, 7.880500000000124e-05, 8.022200000000479e-05, 8.002799999999588e-05, 7.987500000000008e-05, 7.983300000000138e-05, 8.055600000000246e-05, 8.042999999999939e-05, 7.958300000000113e-05, 8.040299999999972e-05, 7.972200000000429e-05, 7.972200000000429e-05, 7.883300000000037e-05, 7.96519999999995e-05, 7.970799999999778e-05, 7.972300000000376e-05, 7.927799999999513e-05, 8.023599999999742e-05, 7.986199999999999e-05, 8.042999999999939e-05, 8.020899999999775e-05, 8.052800000000332e-05, 8.055600000000246e-05, 8.006900000000206e-05, 8.061200000000074e-05, 8.055500000000299e-05, 7.990299999999922e-05, 8.04169999999993e-05, 8.016599999999957e-05, 8.05970000000017e-05, 8.048599999999767e-05, 7.99719999999976e-05, 8.023599999999742e-05, 8.051399999999681e-05]</msg>
<status status="PASS" starttime="20201029 18:19:53.635" endtime="20201029 18:19:53.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.624" endtime="20201029 18:19:53.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:53.651" endtime="20201029 18:19:53.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.647" endtime="20201029 18:19:53.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.644" endtime="20201029 18:19:53.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.159" endtime="20201029 18:19:53.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.158" endtime="20201029 18:19:53.676"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.698" endtime="20201029 18:19:53.719"></status>
</kw>
<msg timestamp="20201029 18:19:53.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.695" endtime="20201029 18:19:53.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.722" endtime="20201029 18:19:53.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.728" endtime="20201029 18:19:53.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.688" endtime="20201029 18:19:53.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.682" endtime="20201029 18:19:53.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.752" endtime="20201029 18:19:54.102"></status>
</kw>
<msg timestamp="20201029 18:19:54.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039108486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039189944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.749" endtime="20201029 18:19:54.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039108486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039189944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.112" endtime="20201029 18:19:54.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.130" endtime="20201029 18:19:54.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.741" endtime="20201029 18:19:54.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.736" endtime="20201029 18:19:54.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:54.147" level="INFO">${RESULT} = [{'diff': 8.145799999999953e-05}, {'diff': 8.147200000000604e-05}, {'diff': 7.988899999999965e-05}, {'diff': 8.144499999999943e-05}, {'diff': 8.093099999999936e-05}, {'diff': 8.124999999999799e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:54.139" endtime="20201029 18:19:54.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:54.156" level="INFO">${ACCURACY} = {'diff': [8.145799999999953e-05, 8.147200000000604e-05, 7.988899999999965e-05, 8.144499999999943e-05, 8.093099999999936e-05, 8.124999999999799e-05, 8.152799999999738e-05, 8.059800000000117e-05, 8.1332...</msg>
<status status="PASS" starttime="20201029 18:19:54.149" endtime="20201029 18:19:54.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.167" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:19:54.165" endtime="20201029 18:19:54.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.173" level="INFO">VALUE: [8.145799999999953e-05, 8.147200000000604e-05, 7.988899999999965e-05, 8.144499999999943e-05, 8.093099999999936e-05, 8.124999999999799e-05, 8.152799999999738e-05, 8.059800000000117e-05, 8.133299999999594e-05, 8.107000000000253e-05, 8.101399999999731e-05, 8.081999999999534e-05, 8.123599999999842e-05, 8.073599999999792e-05, 8.13049999999968e-05, 8.122199999999885e-05, 8.08190000000028e-05, 8.029200000000264e-05, 8.133300000000288e-05, 8.108399999999516e-05, 8.101400000000425e-05, 7.977800000000257e-05, 8.108399999999516e-05, 8.087500000000108e-05, 8.087500000000108e-05, 8.097200000000554e-05, 8.105600000000296e-05, 8.012500000000033e-05, 8.087499999999415e-05, 8.084700000000195e-05, 8.15970000000027e-05, 8.086100000000151e-05, 8.138900000000115e-05, 8.104099999999698e-05, 8.09589999999985e-05, 8.13190000000033e-05, 8.119499999999918e-05, 8.072199999999835e-05, 8.090300000000022e-05, 8.027799999999613e-05, 8.14170000000003e-05, 8.05970000000017e-05, 8.008399999999416e-05, 8.029200000000264e-05, 8.124999999999799e-05, 8.13049999999968e-05, 8.140300000000072e-05, 8.130500000000374e-05, 8.073599999999792e-05, 8.152799999999738e-05]</msg>
<status status="PASS" starttime="20201029 18:19:54.170" endtime="20201029 18:19:54.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.158" endtime="20201029 18:19:54.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:54.185" endtime="20201029 18:19:54.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.181" endtime="20201029 18:19:54.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.178" endtime="20201029 18:19:54.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.678" endtime="20201029 18:19:54.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.677" endtime="20201029 18:19:54.210"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.232" endtime="20201029 18:19:54.254"></status>
</kw>
<msg timestamp="20201029 18:19:54.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.229" endtime="20201029 18:19:54.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.258" endtime="20201029 18:19:54.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.264" endtime="20201029 18:19:54.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.222" endtime="20201029 18:19:54.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.216" endtime="20201029 18:19:54.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.287" endtime="20201029 18:19:54.630"></status>
</kw>
<msg timestamp="20201029 18:19:54.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040704528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040786236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.283" endtime="20201029 18:19:54.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040704528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040786236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.641" endtime="20201029 18:19:54.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.660" endtime="20201029 18:19:54.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.276" endtime="20201029 18:19:54.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.272" endtime="20201029 18:19:54.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:54.677" level="INFO">${RESULT} = [{'diff': 8.170799999999978e-05}, {'diff': 8.13190000000033e-05}, {'diff': 8.165300000000097e-05}, {'diff': 8.1764000000005e-05}, {'diff': 8.202799999999788e-05}, {'diff': 8.094399999999946e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:19:54.668" endtime="20201029 18:19:54.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:54.686" level="INFO">${ACCURACY} = {'diff': [8.170799999999978e-05, 8.13190000000033e-05, 8.165300000000097e-05, 8.1764000000005e-05, 8.202799999999788e-05, 8.094399999999946e-05, 8.18049999999973e-05, 8.172199999999935e-05, 8.19160000...</msg>
<status status="PASS" starttime="20201029 18:19:54.679" endtime="20201029 18:19:54.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.697" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:19:54.695" endtime="20201029 18:19:54.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.703" level="INFO">VALUE: [8.170799999999978e-05, 8.13190000000033e-05, 8.165300000000097e-05, 8.1764000000005e-05, 8.202799999999788e-05, 8.094399999999946e-05, 8.18049999999973e-05, 8.172199999999935e-05, 8.191600000000132e-05, 8.194499999999993e-05, 8.226299999999909e-05, 8.223599999999942e-05, 8.219500000000018e-05, 8.209699999999626e-05, 8.237500000000259e-05, 8.258300000000413e-05, 8.201399999999831e-05, 8.220800000000028e-05, 8.18190000000038e-05, 8.19170000000008e-05, 8.206899999999712e-05, 8.176399999999806e-05, 8.193100000000036e-05, 8.243000000000139e-05, 8.240300000000172e-05, 8.199999999999874e-05, 8.198599999999917e-05, 8.243099999999393e-05, 8.255600000000446e-05, 8.23469999999965e-05, 8.226399999999856e-05, 8.25970000000037e-05, 8.244400000000096e-05, 8.255499999999805e-05, 8.225000000000593e-05, 8.227699999999866e-05, 8.212500000000234e-05, 8.208299999999669e-05, 8.174999999999849e-05, 8.254099999999848e-05, 8.190300000000122e-05, 8.195800000000003e-05, 8.223599999999942e-05, 8.252699999999891e-05, 8.205599999999702e-05, 8.219399999999377e-05, 8.244400000000096e-05, 8.216600000000157e-05, 8.21390000000019e-05, 8.181899999999687e-05]</msg>
<status status="PASS" starttime="20201029 18:19:54.699" endtime="20201029 18:19:54.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.688" endtime="20201029 18:19:54.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:54.716" endtime="20201029 18:19:54.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.711" endtime="20201029 18:19:54.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.708" endtime="20201029 18:19:54.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.212" endtime="20201029 18:19:54.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.211" endtime="20201029 18:19:54.741"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.764" endtime="20201029 18:19:54.783"></status>
</kw>
<msg timestamp="20201029 18:19:54.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.761" endtime="20201029 18:19:54.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.787" endtime="20201029 18:19:54.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.793" endtime="20201029 18:19:54.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.753" endtime="20201029 18:19:54.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.748" endtime="20201029 18:19:54.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.817" endtime="20201029 18:19:55.151"></status>
</kw>
<msg timestamp="20201029 18:19:55.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039208278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039291736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.814" endtime="20201029 18:19:55.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039208278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039291736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.161" endtime="20201029 18:19:55.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.179" endtime="20201029 18:19:55.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.807" endtime="20201029 18:19:55.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.802" endtime="20201029 18:19:55.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:55.196" level="INFO">${RESULT} = [{'diff': 8.345800000000153e-05}, {'diff': 8.280500000000524e-05}, {'diff': 8.211100000000277e-05}, {'diff': 8.34720000000011e-05}, {'diff': 8.21390000000019e-05}, {'diff': 8.187500000000208e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:55.187" endtime="20201029 18:19:55.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:55.207" level="INFO">${ACCURACY} = {'diff': [8.345800000000153e-05, 8.280500000000524e-05, 8.211100000000277e-05, 8.34720000000011e-05, 8.21390000000019e-05, 8.187500000000208e-05, 8.355499999999905e-05, 8.333299999999794e-05, 8.263899...</msg>
<status status="PASS" starttime="20201029 18:19:55.198" endtime="20201029 18:19:55.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.217" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:19:55.215" endtime="20201029 18:19:55.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.223" level="INFO">VALUE: [8.345800000000153e-05, 8.280500000000524e-05, 8.211100000000277e-05, 8.34720000000011e-05, 8.21390000000019e-05, 8.187500000000208e-05, 8.355499999999905e-05, 8.333299999999794e-05, 8.263899999999547e-05, 8.26520000000025e-05, 8.358399999999766e-05, 8.293099999999443e-05, 8.34720000000011e-05, 8.299999999999974e-05, 8.27770000000061e-05, 8.266700000000154e-05, 8.302799999999888e-05, 8.336099999999708e-05, 8.273599999999992e-05, 8.269399999999427e-05, 8.320800000000128e-05, 8.284700000000395e-05, 8.351399999999981e-05, 8.294400000000146e-05, 8.28049999999983e-05, 8.284700000000395e-05, 8.295800000000103e-05, 8.356899999999862e-05, 8.322300000000032e-05, 8.293000000000189e-05, 8.322200000000085e-05, 8.281899999999787e-05, 8.352799999999938e-05, 8.293100000000136e-05, 8.327799999999913e-05, 8.33190000000053e-05, 8.277799999999863e-05, 8.34170000000023e-05, 8.31390000000029e-05, 8.25840000000036e-05, 8.277800000000557e-05, 8.356899999999862e-05, 8.281999999999734e-05, 8.341600000000282e-05, 8.274999999999949e-05, 8.29720000000006e-05, 8.208299999999669e-05, 8.320900000000075e-05, 8.34720000000011e-05, 8.306999999999759e-05]</msg>
<status status="PASS" starttime="20201029 18:19:55.220" endtime="20201029 18:19:55.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.208" endtime="20201029 18:19:55.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:55.235" endtime="20201029 18:19:55.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.231" endtime="20201029 18:19:55.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.228" endtime="20201029 18:19:55.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.743" endtime="20201029 18:19:55.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.742" endtime="20201029 18:19:55.260"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.282" endtime="20201029 18:19:55.303"></status>
</kw>
<msg timestamp="20201029 18:19:55.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.279" endtime="20201029 18:19:55.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.306" endtime="20201029 18:19:55.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.312" endtime="20201029 18:19:55.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.272" endtime="20201029 18:19:55.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.266" endtime="20201029 18:19:55.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.335" endtime="20201029 18:19:55.682"></status>
</kw>
<msg timestamp="20201029 18:19:55.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039171833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039255528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.332" endtime="20201029 18:19:55.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039171833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039255528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.692" endtime="20201029 18:19:55.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.710" endtime="20201029 18:19:55.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.325" endtime="20201029 18:19:55.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.320" endtime="20201029 18:19:55.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:55.727" level="INFO">${RESULT} = [{'diff': 8.369499999999475e-05}, {'diff': 8.447300000000157e-05}, {'diff': 8.412500000000434e-05}, {'diff': 8.35970000000047e-05}, {'diff': 8.436099999999808e-05}, {'diff': 8.422199999999491e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:55.719" endtime="20201029 18:19:55.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:55.738" level="INFO">${ACCURACY} = {'diff': [8.369499999999475e-05, 8.447300000000157e-05, 8.412500000000434e-05, 8.35970000000047e-05, 8.436099999999808e-05, 8.422199999999491e-05, 8.447199999999516e-05, 8.393100000000236e-05, 8.46249...</msg>
<status status="PASS" starttime="20201029 18:19:55.729" endtime="20201029 18:19:55.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.749" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:19:55.747" endtime="20201029 18:19:55.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.754" level="INFO">VALUE: [8.369499999999475e-05, 8.447300000000157e-05, 8.412500000000434e-05, 8.35970000000047e-05, 8.436099999999808e-05, 8.422199999999491e-05, 8.447199999999516e-05, 8.393100000000236e-05, 8.46249999999979e-05, 8.425000000000099e-05, 8.398600000000117e-05, 8.405599999999902e-05, 8.465299999999704e-05, 8.404199999999945e-05, 8.370900000000125e-05, 8.376400000000006e-05, 8.426400000000056e-05, 8.419500000000218e-05, 8.454100000000048e-05, 8.45840000000056e-05, 8.404199999999945e-05, 8.386099999999758e-05, 8.440299999999679e-05, 8.386099999999758e-05, 8.323600000000042e-05, 8.390300000000323e-05, 8.418100000000261e-05, 8.386100000000452e-05, 8.440299999999679e-05, 8.41669999999961e-05, 8.455500000000005e-05, 8.404199999999945e-05, 8.375000000000049e-05, 8.438899999999722e-05, 8.43469999999985e-05, 8.418099999999568e-05, 8.423600000000142e-05, 8.405599999999902e-05, 8.447299999999464e-05, 8.418100000000261e-05, 8.38049999999993e-05, 8.461100000000527e-05, 8.405499999999955e-05, 8.422200000000185e-05, 8.406900000000606e-05, 8.422300000000132e-05, 8.368000000000264e-05, 8.400000000000074e-05, 8.370900000000125e-05, 8.372200000000135e-05]</msg>
<status status="PASS" starttime="20201029 18:19:55.751" endtime="20201029 18:19:55.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.740" endtime="20201029 18:19:55.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:55.767" endtime="20201029 18:19:55.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.763" endtime="20201029 18:19:55.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.760" endtime="20201029 18:19:55.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.262" endtime="20201029 18:19:55.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.261" endtime="20201029 18:19:55.792"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.815" endtime="20201029 18:19:55.835"></status>
</kw>
<msg timestamp="20201029 18:19:55.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.811" endtime="20201029 18:19:55.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.839" endtime="20201029 18:19:55.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.846" endtime="20201029 18:19:55.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.804" endtime="20201029 18:19:55.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.798" endtime="20201029 18:19:55.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.869" endtime="20201029 18:19:56.218"></status>
</kw>
<msg timestamp="20201029 18:19:56.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039876347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039961833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.865" endtime="20201029 18:19:56.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039876347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039961833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.227" endtime="20201029 18:19:56.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.246" endtime="20201029 18:19:56.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.858" endtime="20201029 18:19:56.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.854" endtime="20201029 18:19:56.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:56.263" level="INFO">${RESULT} = [{'diff': 8.548600000000267e-05}, {'diff': 8.395800000000203e-05}, {'diff': 8.513799999999849e-05}, {'diff': 8.505500000000055e-05}, {'diff': 8.470899999999532e-05}, {'diff': 8.536099999999908e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:56.254" endtime="20201029 18:19:56.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:56.272" level="INFO">${ACCURACY} = {'diff': [8.548600000000267e-05, 8.395800000000203e-05, 8.513799999999849e-05, 8.505500000000055e-05, 8.470899999999532e-05, 8.536099999999908e-05, 8.523600000000242e-05, 8.502700000000141e-05, 8.5305...</msg>
<status status="PASS" starttime="20201029 18:19:56.265" endtime="20201029 18:19:56.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.283" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:19:56.280" endtime="20201029 18:19:56.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.288" level="INFO">VALUE: [8.548600000000267e-05, 8.395800000000203e-05, 8.513799999999849e-05, 8.505500000000055e-05, 8.470899999999532e-05, 8.536099999999908e-05, 8.523600000000242e-05, 8.502700000000141e-05, 8.53050000000008e-05, 8.519500000000318e-05, 8.473699999999446e-05, 8.48050000000003e-05, 8.470800000000278e-05, 8.46249999999979e-05, 8.46390000000044e-05, 8.49999999999948e-05, 8.548600000000267e-05, 8.498600000000217e-05, 8.545800000000353e-05, 8.512500000000534e-05, 8.52920000000007e-05, 8.540199999999831e-05, 8.493000000000389e-05, 8.476400000000106e-05, 8.47920000000002e-05, 8.459799999999823e-05, 8.48050000000003e-05, 8.46669999999966e-05, 8.548599999999573e-05, 8.512500000000534e-05, 8.524999999999505e-05, 8.5459000000003e-05, 8.550000000000224e-05, 8.550000000000224e-05, 8.559699999999976e-05, 8.500000000000174e-05, 8.476400000000106e-05, 8.469400000000321e-05, 8.544500000000343e-05, 8.533399999999941e-05, 8.477800000000063e-05, 8.468000000000364e-05, 8.526400000000156e-05, 8.474999999999455e-05, 8.558399999999966e-05, 8.49720000000026e-05, 8.483399999999891e-05, 8.493000000000389e-05, 8.554200000000095e-05, 8.51669999999971e-05]</msg>
<status status="PASS" starttime="20201029 18:19:56.285" endtime="20201029 18:19:56.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.274" endtime="20201029 18:19:56.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:56.301" endtime="20201029 18:19:56.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.296" endtime="20201029 18:19:56.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.294" endtime="20201029 18:19:56.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.794" endtime="20201029 18:19:56.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.793" endtime="20201029 18:19:56.326"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.348" endtime="20201029 18:19:56.370"></status>
</kw>
<msg timestamp="20201029 18:19:56.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.345" endtime="20201029 18:19:56.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.374" endtime="20201029 18:19:56.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.380" endtime="20201029 18:19:56.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.338" endtime="20201029 18:19:56.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.332" endtime="20201029 18:19:56.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.403" endtime="20201029 18:19:56.752"></status>
</kw>
<msg timestamp="20201029 18:19:56.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041129181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041215111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.400" endtime="20201029 18:19:56.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041129181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041215111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.761" endtime="20201029 18:19:56.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.780" endtime="20201029 18:19:56.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.393" endtime="20201029 18:19:56.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.388" endtime="20201029 18:19:56.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:56.797" level="INFO">${RESULT} = [{'diff': 8.592999999999795e-05}, {'diff': 8.583300000000044e-05}, {'diff': 8.609799999999973e-05}, {'diff': 8.586099999999958e-05}, {'diff': 8.623599999999648e-05}, {'diff': 8.611099999999983e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:56.788" endtime="20201029 18:19:56.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:56.806" level="INFO">${ACCURACY} = {'diff': [8.592999999999795e-05, 8.583300000000044e-05, 8.609799999999973e-05, 8.586099999999958e-05, 8.623599999999648e-05, 8.611099999999983e-05, 8.51249999999984e-05, 8.61390000000059e-05, 8.632000...</msg>
<status status="PASS" starttime="20201029 18:19:56.799" endtime="20201029 18:19:56.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.817" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:19:56.815" endtime="20201029 18:19:56.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.822" level="INFO">VALUE: [8.592999999999795e-05, 8.583300000000044e-05, 8.609799999999973e-05, 8.586099999999958e-05, 8.623599999999648e-05, 8.611099999999983e-05, 8.51249999999984e-05, 8.61390000000059e-05, 8.632000000000084e-05, 8.623600000000342e-05, 8.586099999999958e-05, 8.529100000000123e-05, 8.641599999999888e-05, 8.590299999999829e-05, 8.543000000000439e-05, 8.574999999999555e-05, 8.62370000000029e-05, 8.638899999999922e-05, 8.593000000000489e-05, 8.658300000000119e-05, 8.609700000000026e-05, 8.54999999999953e-05, 8.627800000000213e-05, 8.570900000000325e-05, 8.651400000000281e-05, 8.563799999999899e-05, 8.626400000000256e-05, 8.580499999999436e-05, 8.658300000000119e-05, 8.608299999999375e-05, 8.636100000000008e-05, 8.575000000000249e-05, 8.572200000000335e-05, 8.637499999999965e-05, 8.483299999999944e-05, 8.625000000000299e-05, 8.623600000000342e-05, 8.600000000000274e-05, 8.48050000000003e-05, 8.637499999999965e-05, 8.576300000000259e-05, 8.623600000000342e-05, 8.56669999999976e-05, 8.523599999999548e-05, 8.580600000000077e-05, 8.63470000000005e-05, 8.651400000000281e-05, 8.652800000000238e-05, 8.665299999999904e-05, 8.637500000000659e-05]</msg>
<status status="PASS" starttime="20201029 18:19:56.819" endtime="20201029 18:19:56.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.808" endtime="20201029 18:19:56.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:56.836" endtime="20201029 18:19:56.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.830" endtime="20201029 18:19:56.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.828" endtime="20201029 18:19:56.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.328" endtime="20201029 18:19:56.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.327" endtime="20201029 18:19:56.862"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.885" endtime="20201029 18:19:56.906"></status>
</kw>
<msg timestamp="20201029 18:19:56.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.882" endtime="20201029 18:19:56.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.909" endtime="20201029 18:19:56.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.915" endtime="20201029 18:19:56.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.874" endtime="20201029 18:19:56.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.868" endtime="20201029 18:19:56.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.938" endtime="20201029 18:19:57.284"></status>
</kw>
<msg timestamp="20201029 18:19:57.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040730069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04081675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:56.935" endtime="20201029 18:19:57.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040730069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04081675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:57.293" endtime="20201029 18:19:57.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.312" endtime="20201029 18:19:57.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.928" endtime="20201029 18:19:57.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.923" endtime="20201029 18:19:57.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:57.329" level="INFO">${RESULT} = [{'diff': 8.668099999999818e-05}, {'diff': 8.71799999999992e-05}, {'diff': 8.670799999999784e-05}, {'diff': 8.708399999999422e-05}, {'diff': 8.733300000000194e-05}, {'diff': 8.595799999999709e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:57.320" endtime="20201029 18:19:57.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:57.339" level="INFO">${ACCURACY} = {'diff': [8.668099999999818e-05, 8.71799999999992e-05, 8.670799999999784e-05, 8.708399999999422e-05, 8.733300000000194e-05, 8.595799999999709e-05, 8.724999999999705e-05, 8.706900000000212e-05, 8.70840...</msg>
<status status="PASS" starttime="20201029 18:19:57.331" endtime="20201029 18:19:57.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.350" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:19:57.348" endtime="20201029 18:19:57.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.355" level="INFO">VALUE: [8.668099999999818e-05, 8.71799999999992e-05, 8.670799999999784e-05, 8.708399999999422e-05, 8.733300000000194e-05, 8.595799999999709e-05, 8.724999999999705e-05, 8.706900000000212e-05, 8.708400000000116e-05, 8.613899999999897e-05, 8.71799999999992e-05, 8.670799999999784e-05, 8.661100000000033e-05, 8.684800000000048e-05, 8.575000000000249e-05, 8.688899999999972e-05, 8.577800000000163e-05, 8.752799999999644e-05, 8.644399999999802e-05, 8.609700000000026e-05, 8.719500000000519e-05, 8.761099999999439e-05, 8.677800000000263e-05, 8.674999999999655e-05, 8.740299999999979e-05, 8.704200000000245e-05, 8.736100000000108e-05, 8.665300000000598e-05, 8.677799999999569e-05, 8.751400000000381e-05, 8.71669999999991e-05, 8.690299999999929e-05, 8.669399999999827e-05, 8.66249999999999e-05, 8.668099999999818e-05, 8.742999999999945e-05, 8.708400000000116e-05, 8.663899999999947e-05, 8.74999999999973e-05, 8.732000000000184e-05, 8.644399999999802e-05, 8.695799999999809e-05, 8.6944999999998e-05, 8.754100000000348e-05, 8.740299999999979e-05, 8.707000000000159e-05, 8.73470000000015e-05, 8.654200000000195e-05, 8.738900000000022e-05, 8.759700000000176e-05]</msg>
<status status="PASS" starttime="20201029 18:19:57.352" endtime="20201029 18:19:57.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.341" endtime="20201029 18:19:57.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:57.368" endtime="20201029 18:19:57.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.363" endtime="20201029 18:19:57.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.361" endtime="20201029 18:19:57.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.864" endtime="20201029 18:19:57.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.863" endtime="20201029 18:19:57.393"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.415" endtime="20201029 18:19:57.434"></status>
</kw>
<msg timestamp="20201029 18:19:57.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.412" endtime="20201029 18:19:57.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.438" endtime="20201029 18:19:57.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.444" endtime="20201029 18:19:57.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.405" endtime="20201029 18:19:57.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.399" endtime="20201029 18:19:57.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.467" endtime="20201029 18:19:57.800"></status>
</kw>
<msg timestamp="20201029 18:19:57.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039065319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039153639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.464" endtime="20201029 18:19:57.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039065319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039153639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.810" endtime="20201029 18:19:57.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.829" endtime="20201029 18:19:57.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.456" endtime="20201029 18:19:57.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.452" endtime="20201029 18:19:57.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:57.846" level="INFO">${RESULT} = [{'diff': 8.83199999999959e-05}, {'diff': 8.86800000000007e-05}, {'diff': 8.71250000000004e-05}, {'diff': 8.78879999999943e-05}, {'diff': 8.761100000000133e-05}, {'diff': 8.768100000000612e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:19:57.837" endtime="20201029 18:19:57.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:57.857" level="INFO">${ACCURACY} = {'diff': [8.83199999999959e-05, 8.86800000000007e-05, 8.71250000000004e-05, 8.78879999999943e-05, 8.761100000000133e-05, 8.768100000000612e-05, 8.806900000000312e-05, 8.850000000000524e-05, 8.79580000...</msg>
<status status="PASS" starttime="20201029 18:19:57.848" endtime="20201029 18:19:57.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.868" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:19:57.866" endtime="20201029 18:19:57.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.874" level="INFO">VALUE: [8.83199999999959e-05, 8.86800000000007e-05, 8.71250000000004e-05, 8.78879999999943e-05, 8.761100000000133e-05, 8.768100000000612e-05, 8.806900000000312e-05, 8.850000000000524e-05, 8.795800000000603e-05, 8.772299999999789e-05, 8.809699999999532e-05, 8.856899999999668e-05, 8.86670000000006e-05, 8.805499999999661e-05, 8.820799999999934e-05, 8.7944999999999e-05, 8.84999999999983e-05, 8.76250000000009e-05, 8.798600000000517e-05, 8.802800000000388e-05, 8.798599999999823e-05, 8.832000000000284e-05, 8.779099999999679e-05, 8.7944999999999e-05, 8.81800000000002e-05, 8.858400000000266e-05, 8.847199999999916e-05, 8.791699999999986e-05, 8.790199999999387e-05, 8.730600000000227e-05, 8.711100000000083e-05, 8.84999999999983e-05, 8.695899999999757e-05, 8.820800000000628e-05, 8.831899999999643e-05, 8.784699999999507e-05, 8.763900000000047e-05, 8.8332999999996e-05, 8.847199999999916e-05, 8.858399999999572e-05, 8.77920000000032e-05, 8.841700000000036e-05, 8.84999999999983e-05, 8.76669999999996e-05, 8.822199999999891e-05, 8.730599999999533e-05, 8.780599999999583e-05, 8.848599999999873e-05, 8.815300000000054e-05, 8.822199999999891e-05]</msg>
<status status="PASS" starttime="20201029 18:19:57.870" endtime="20201029 18:19:57.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.859" endtime="20201029 18:19:57.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:57.887" endtime="20201029 18:19:57.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.882" endtime="20201029 18:19:57.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.879" endtime="20201029 18:19:57.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.395" endtime="20201029 18:19:57.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.393" endtime="20201029 18:19:57.912"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.935" endtime="20201029 18:19:57.954"></status>
</kw>
<msg timestamp="20201029 18:19:57.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.931" endtime="20201029 18:19:57.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.957" endtime="20201029 18:19:57.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.964" endtime="20201029 18:19:57.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.924" endtime="20201029 18:19:57.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.918" endtime="20201029 18:19:57.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.987" endtime="20201029 18:19:58.328"></status>
</kw>
<msg timestamp="20201029 18:19:58.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039710472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039799472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.984" endtime="20201029 18:19:58.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039710472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039799472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:58.338" endtime="20201029 18:19:58.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.356" endtime="20201029 18:19:58.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.976" endtime="20201029 18:19:58.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.972" endtime="20201029 18:19:58.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:58.373" level="INFO">${RESULT} = [{'diff': 8.900000000000574e-05}, {'diff': 8.943100000000093e-05}, {'diff': 8.829100000000423e-05}, {'diff': 8.940300000000179e-05}, {'diff': 8.898599999999923e-05}, {'diff': 8.920899999999982e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:58.364" endtime="20201029 18:19:58.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:58.382" level="INFO">${ACCURACY} = {'diff': [8.900000000000574e-05, 8.943100000000093e-05, 8.829100000000423e-05, 8.940300000000179e-05, 8.898599999999923e-05, 8.920899999999982e-05, 8.94999999999993e-05, 8.919400000000077e-05, 8.92639...</msg>
<status status="PASS" starttime="20201029 18:19:58.375" endtime="20201029 18:19:58.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.393" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:19:58.391" endtime="20201029 18:19:58.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.398" level="INFO">VALUE: [8.900000000000574e-05, 8.943100000000093e-05, 8.829100000000423e-05, 8.940300000000179e-05, 8.898599999999923e-05, 8.920899999999982e-05, 8.94999999999993e-05, 8.919400000000077e-05, 8.926399999999862e-05, 8.898599999999923e-05, 8.870899999999932e-05, 8.941600000000188e-05, 8.883300000000344e-05, 8.919500000000025e-05, 8.952799999999844e-05, 8.894400000000052e-05, 8.91670000000011e-05, 8.922199999999991e-05, 8.852800000000438e-05, 8.943000000000145e-05, 8.951399999999887e-05, 8.96670000000016e-05, 8.873599999999898e-05, 8.908399999999622e-05, 8.874999999999855e-05, 8.884699999999607e-05, 8.941700000000136e-05, 8.877800000000463e-05, 8.929199999999776e-05, 8.877800000000463e-05, 8.931899999999743e-05, 8.872299999999889e-05, 8.91800000000012e-05, 8.922199999999991e-05, 8.930599999999733e-05, 8.945799999999365e-05, 8.894400000000052e-05, 8.887499999999521e-05, 8.845899999999907e-05, 8.927799999999819e-05, 8.904099999999804e-05, 8.923599999999948e-05, 8.958299999999725e-05, 8.918100000000068e-05, 8.924999999999905e-05, 8.959800000000323e-05, 8.958300000000419e-05, 8.897199999999966e-05, 8.894400000000052e-05, 8.923599999999948e-05]</msg>
<status status="PASS" starttime="20201029 18:19:58.395" endtime="20201029 18:19:58.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.384" endtime="20201029 18:19:58.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:58.415" endtime="20201029 18:19:58.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.410" endtime="20201029 18:19:58.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.408" endtime="20201029 18:19:58.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.914" endtime="20201029 18:19:58.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.913" endtime="20201029 18:19:58.439"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.462" endtime="20201029 18:19:58.483"></status>
</kw>
<msg timestamp="20201029 18:19:58.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.459" endtime="20201029 18:19:58.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.486" endtime="20201029 18:19:58.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.492" endtime="20201029 18:19:58.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.452" endtime="20201029 18:19:58.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.446" endtime="20201029 18:19:58.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.515" endtime="20201029 18:19:58.849"></status>
</kw>
<msg timestamp="20201029 18:19:58.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0406155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040706139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:58.512" endtime="20201029 18:19:58.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0406155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040706139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:58.859" endtime="20201029 18:19:58.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.877" endtime="20201029 18:19:58.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.505" endtime="20201029 18:19:58.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.500" endtime="20201029 18:19:58.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:58.894" level="INFO">${RESULT} = [{'diff': 9.063900000000347e-05}, {'diff': 8.926399999999862e-05}, {'diff': 9.05000000000003e-05}, {'diff': 9.001399999999937e-05}, {'diff': 9.005599999999808e-05}, {'diff': 9.051399999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:58.886" endtime="20201029 18:19:58.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:58.904" level="INFO">${ACCURACY} = {'diff': [9.063900000000347e-05, 8.926399999999862e-05, 9.05000000000003e-05, 9.001399999999937e-05, 9.005599999999808e-05, 9.051399999999987e-05, 8.981899999999793e-05, 9.034799999999704e-05, 8.96110...</msg>
<status status="PASS" starttime="20201029 18:19:58.896" endtime="20201029 18:19:58.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.915" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:19:58.912" endtime="20201029 18:19:58.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.920" level="INFO">VALUE: [9.063900000000347e-05, 8.926399999999862e-05, 9.05000000000003e-05, 9.001399999999937e-05, 9.005599999999808e-05, 9.051399999999987e-05, 8.981899999999793e-05, 9.034799999999704e-05, 8.961100000000333e-05, 8.993100000000143e-05, 9.056899999999868e-05, 8.966699999999467e-05, 9.020900000000082e-05, 8.997199999999372e-05, 8.998600000000023e-05, 8.99999999999998e-05, 9.041700000000236e-05, 8.948599999999973e-05, 8.893100000000043e-05, 9.052799999999944e-05, 8.983399999999697e-05, 9.01800000000022e-05, 9.018100000000168e-05, 9.013899999999603e-05, 9.05000000000003e-05, 9.019500000000125e-05, 9.008299999999775e-05, 9.030599999999833e-05, 9.038899999999628e-05, 9.051399999999987e-05, 9.004199999999851e-05, 8.944400000000102e-05, 9.040299999999585e-05, 8.898599999999923e-05, 9.045800000000159e-05, 8.97920000000052e-05, 8.911100000000283e-05, 9.019400000000177e-05, 8.984799999999654e-05, 8.96800000000017e-05, 9.045900000000107e-05, 9.047200000000116e-05, 9.037499999999671e-05, 9.026399999999962e-05, 9.008299999999775e-05, 8.963900000000247e-05, 8.969400000000127e-05, 9.05000000000003e-05, 9.048600000000073e-05, 8.991599999999544e-05]</msg>
<status status="PASS" starttime="20201029 18:19:58.917" endtime="20201029 18:19:58.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.905" endtime="20201029 18:19:58.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:58.935" endtime="20201029 18:19:58.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.929" endtime="20201029 18:19:58.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.926" endtime="20201029 18:19:58.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.442" endtime="20201029 18:19:58.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.440" endtime="20201029 18:19:58.960"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.983" endtime="20201029 18:19:59.003"></status>
</kw>
<msg timestamp="20201029 18:19:59.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.980" endtime="20201029 18:19:59.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.006" endtime="20201029 18:19:59.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.013" endtime="20201029 18:19:59.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.972" endtime="20201029 18:19:59.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.966" endtime="20201029 18:19:59.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.036" endtime="20201029 18:19:59.381"></status>
</kw>
<msg timestamp="20201029 18:19:59.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040039306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040130764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.032" endtime="20201029 18:19:59.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040039306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040130764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.390" endtime="20201029 18:19:59.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.408" endtime="20201029 18:19:59.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.025" endtime="20201029 18:19:59.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.021" endtime="20201029 18:19:59.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:59.425" level="INFO">${RESULT} = [{'diff': 9.145800000000259e-05}, {'diff': 9.080600000000577e-05}, {'diff': 9.081900000000587e-05}, {'diff': 9.130599999999933e-05}, {'diff': 9.159699999999882e-05}, {'diff': 9.104100000000004e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:59.417" endtime="20201029 18:19:59.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:59.436" level="INFO">${ACCURACY} = {'diff': [9.145800000000259e-05, 9.080600000000577e-05, 9.081900000000587e-05, 9.130599999999933e-05, 9.159699999999882e-05, 9.104100000000004e-05, 9.075000000000055e-05, 9.106900000000612e-05, 9.0916...</msg>
<status status="PASS" starttime="20201029 18:19:59.427" endtime="20201029 18:19:59.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.447" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:19:59.445" endtime="20201029 18:19:59.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.452" level="INFO">VALUE: [9.145800000000259e-05, 9.080600000000577e-05, 9.081900000000587e-05, 9.130599999999933e-05, 9.159699999999882e-05, 9.104100000000004e-05, 9.075000000000055e-05, 9.106900000000612e-05, 9.091699999999592e-05, 9.11529999999966e-05, 9.140299999999685e-05, 9.101400000000037e-05, 9.163899999999753e-05, 9.090200000000381e-05, 9.107000000000559e-05, 8.995800000000109e-05, 9.134700000000551e-05, 9.113899999999703e-05, 9.136100000000508e-05, 9.148600000000173e-05, 9.105599999999908e-05, 9.073600000000098e-05, 9.105599999999908e-05, 9.047199999999422e-05, 9.118100000000268e-05, 9.086100000000458e-05, 9.140299999999685e-05, 9.112499999999746e-05, 9.16120000000048e-05, 9.063899999999653e-05, 9.136099999999814e-05, 9.134800000000498e-05, 9.151399999999393e-05, 9.06670000000026e-05, 9.108300000000569e-05, 9.045899999999413e-05, 9.108299999999875e-05, 9.06670000000026e-05, 9.080600000000577e-05, 9.129100000000029e-05, 9.118100000000268e-05, 9.101400000000037e-05, 9.113899999999703e-05, 9.108399999999822e-05, 9.072200000000141e-05, 9.158399999999872e-05, 9.143000000000345e-05, 9.070900000000132e-05, 9.087500000000415e-05, 9.130599999999933e-05]</msg>
<status status="PASS" starttime="20201029 18:19:59.449" endtime="20201029 18:19:59.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.438" endtime="20201029 18:19:59.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:59.465" endtime="20201029 18:19:59.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.460" endtime="20201029 18:19:59.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.458" endtime="20201029 18:19:59.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.962" endtime="20201029 18:19:59.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.961" endtime="20201029 18:19:59.490"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.512" endtime="20201029 18:19:59.533"></status>
</kw>
<msg timestamp="20201029 18:19:59.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.509" endtime="20201029 18:19:59.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.536" endtime="20201029 18:19:59.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.543" endtime="20201029 18:19:59.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.502" endtime="20201029 18:19:59.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.496" endtime="20201029 18:19:59.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.566" endtime="20201029 18:19:59.913"></status>
</kw>
<msg timestamp="20201029 18:19:59.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039301361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039393528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.562" endtime="20201029 18:19:59.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039301361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039393528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.924" endtime="20201029 18:19:59.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.948" endtime="20201029 18:19:59.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.555" endtime="20201029 18:19:59.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.551" endtime="20201029 18:19:59.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:59.984" level="INFO">${RESULT} = [{'diff': 9.216699999999717e-05}, {'diff': 9.166600000000413e-05}, {'diff': 9.179200000000026e-05}, {'diff': 9.204100000000104e-05}, {'diff': 9.226400000000162e-05}, {'diff': 9.184799999999854e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:59.960" endtime="20201029 18:19:59.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:59.998" level="INFO">${ACCURACY} = {'diff': [9.216699999999717e-05, 9.166600000000413e-05, 9.179200000000026e-05, 9.204100000000104e-05, 9.226400000000162e-05, 9.184799999999854e-05, 9.237500000000565e-05, 9.204200000000051e-05, 9.1860...</msg>
<status status="PASS" starttime="20201029 18:19:59.987" endtime="20201029 18:19:59.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.009" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:20:00.007" endtime="20201029 18:20:00.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.014" level="INFO">VALUE: [9.216699999999717e-05, 9.166600000000413e-05, 9.179200000000026e-05, 9.204100000000104e-05, 9.226400000000162e-05, 9.184799999999854e-05, 9.237500000000565e-05, 9.204200000000051e-05, 9.186099999999864e-05, 9.129199999999976e-05, 9.166699999999667e-05, 9.163900000000447e-05, 9.113900000000397e-05, 9.174999999999461e-05, 9.223599999999554e-05, 9.184699999999907e-05, 9.193100000000343e-05, 9.168099999999624e-05, 9.125000000000105e-05, 9.236099999999914e-05, 9.19859999999953e-05, 9.208399999999922e-05, 9.186099999999864e-05, 9.173600000000198e-05, 9.201400000000137e-05, 9.234799999999904e-05, 9.222199999999597e-05, 9.193100000000343e-05, 9.208399999999922e-05, 9.172200000000241e-05, 9.201400000000137e-05, 9.21670000000041e-05, 9.162499999999796e-05, 9.247199999999622e-05, 9.248600000000273e-05, 9.175000000000155e-05, 9.220800000000334e-05, 9.222199999999597e-05, 9.205499999999367e-05, 9.249999999999536e-05, 9.218100000000368e-05, 9.211099999999889e-05, 9.177800000000069e-05, 9.127700000000072e-05, 9.18199999999994e-05, 9.113900000000397e-05, 9.222200000000291e-05, 9.21670000000041e-05, 9.244399999999708e-05, 9.147199999999522e-05]</msg>
<status status="PASS" starttime="20201029 18:20:00.011" endtime="20201029 18:20:00.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.000" endtime="20201029 18:20:00.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:00.027" endtime="20201029 18:20:00.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.022" endtime="20201029 18:20:00.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.020" endtime="20201029 18:20:00.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.492" endtime="20201029 18:20:00.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.491" endtime="20201029 18:20:00.073"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.153" endtime="20201029 18:20:00.174"></status>
</kw>
<msg timestamp="20201029 18:20:00.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.146" endtime="20201029 18:20:00.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.178" endtime="20201029 18:20:00.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.184" endtime="20201029 18:20:00.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.122" endtime="20201029 18:20:00.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.102" endtime="20201029 18:20:00.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.207" endtime="20201029 18:20:00.560"></status>
</kw>
<msg timestamp="20201029 18:20:00.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.118534306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.118627097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:00.204" endtime="20201029 18:20:00.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.118534306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.118627097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:00.570" endtime="20201029 18:20:00.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.588" endtime="20201029 18:20:00.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.197" endtime="20201029 18:20:00.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.192" endtime="20201029 18:20:00.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:00.605" level="INFO">${RESULT} = [{'diff': 9.279099999999485e-05}, {'diff': 9.320800000001128e-05}, {'diff': 9.316700000000511e-05}, {'diff': 9.309700000000032e-05}, {'diff': 9.307000000000065e-05}, {'diff': 9.340300000000579e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:00.597" endtime="20201029 18:20:00.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:00.615" level="INFO">${ACCURACY} = {'diff': [9.279099999999485e-05, 9.320800000001128e-05, 9.316700000000511e-05, 9.309700000000032e-05, 9.307000000000065e-05, 9.340300000000579e-05, 9.334700000000751e-05, 9.270899999999638e-05, 9.3179...</msg>
<status status="PASS" starttime="20201029 18:20:00.608" endtime="20201029 18:20:00.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.625" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:20:00.623" endtime="20201029 18:20:00.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.631" level="INFO">VALUE: [9.279099999999485e-05, 9.320800000001128e-05, 9.316700000000511e-05, 9.309700000000032e-05, 9.307000000000065e-05, 9.340300000000579e-05, 9.334700000000751e-05, 9.270899999999638e-05, 9.317999999999826e-05, 9.288899999999878e-05, 9.304100000000204e-05, 9.227800000000119e-05, 9.308299999999381e-05, 9.330500000000186e-05, 9.355600000000852e-05, 9.357000000000115e-05, 9.267999999999776e-05, 9.275000000000255e-05, 9.205599999999314e-05, 9.322200000000391e-05, 9.322200000000391e-05, 9.291699999999792e-05, 9.351400000000287e-05, 9.26529999999981e-05, 9.336100000000014e-05, 9.307000000000065e-05, 9.227700000000172e-05, 9.208299999999281e-05, 9.316699999999123e-05, 9.313899999999209e-05, 9.309700000000032e-05, 9.283399999999997e-05, 9.336199999999961e-05, 9.298600000000323e-05, 9.26529999999981e-05, 9.293100000000443e-05, 9.343100000000493e-05, 9.34720000000111e-05, 9.284700000000701e-05, 9.311100000000683e-05, 9.347199999999722e-05, 9.322199999999004e-05, 9.194500000000994e-05, 9.333400000000047e-05, 9.327800000000219e-05, 9.355599999999464e-05, 9.208299999999281e-05, 9.352699999999603e-05, 9.305499999999467e-05, 9.304100000000204e-05]</msg>
<status status="PASS" starttime="20201029 18:20:00.628" endtime="20201029 18:20:00.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.616" endtime="20201029 18:20:00.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:00.643" endtime="20201029 18:20:00.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.639" endtime="20201029 18:20:00.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.636" endtime="20201029 18:20:00.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.083" endtime="20201029 18:20:00.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.076" endtime="20201029 18:20:00.668"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.691" endtime="20201029 18:20:00.712"></status>
</kw>
<msg timestamp="20201029 18:20:00.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.688" endtime="20201029 18:20:00.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.716" endtime="20201029 18:20:00.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.722" endtime="20201029 18:20:00.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.681" endtime="20201029 18:20:00.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.675" endtime="20201029 18:20:00.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.745" endtime="20201029 18:20:01.084"></status>
</kw>
<msg timestamp="20201029 18:20:01.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041090806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041185236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:00.742" endtime="20201029 18:20:01.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041090806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041185236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:01.094" endtime="20201029 18:20:01.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.113" endtime="20201029 18:20:01.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.735" endtime="20201029 18:20:01.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.730" endtime="20201029 18:20:01.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:01.131" level="INFO">${RESULT} = [{'diff': 9.442999999999951e-05}, {'diff': 9.44859999999978e-05}, {'diff': 9.419399999999883e-05}, {'diff': 9.313899999999903e-05}, {'diff': 9.462500000000096e-05}, {'diff': 9.409699999999438e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:01.122" endtime="20201029 18:20:01.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:01.141" level="INFO">${ACCURACY} = {'diff': [9.442999999999951e-05, 9.44859999999978e-05, 9.419399999999883e-05, 9.313899999999903e-05, 9.462500000000096e-05, 9.409699999999438e-05, 9.323599999999654e-05, 9.408299999999481e-05, 9.44579...</msg>
<status status="PASS" starttime="20201029 18:20:01.133" endtime="20201029 18:20:01.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.151" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:20:01.149" endtime="20201029 18:20:01.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.157" level="INFO">VALUE: [9.442999999999951e-05, 9.44859999999978e-05, 9.419399999999883e-05, 9.313899999999903e-05, 9.462500000000096e-05, 9.409699999999438e-05, 9.323599999999654e-05, 9.408299999999481e-05, 9.445799999999865e-05, 9.426399999999668e-05, 9.43880000000008e-05, 9.408299999999481e-05, 9.43200000000019e-05, 9.311099999999989e-05, 9.436100000000114e-05, 9.452800000000344e-05, 9.416699999999917e-05, 9.455500000000311e-05, 9.375000000000355e-05, 9.449999999999736e-05, 9.275000000000255e-05, 9.379200000000226e-05, 9.455500000000311e-05, 9.362499999999996e-05, 9.449999999999736e-05, 9.436100000000114e-05, 9.431999999999496e-05, 9.423599999999754e-05, 9.36659999999992e-05, 9.384699999999413e-05, 9.384700000000107e-05, 9.452699999999703e-05, 9.379100000000279e-05, 9.454100000000354e-05, 9.384700000000107e-05, 9.454200000000301e-05, 9.431999999999496e-05, 9.437499999999377e-05, 9.40409999999961e-05, 9.397200000000466e-05, 9.386100000000064e-05, 9.443099999999899e-05, 9.309700000000032e-05, 9.455499999999617e-05, 9.427800000000319e-05, 9.379199999999532e-05, 9.361100000000039e-05, 9.329200000000176e-05, 9.379200000000226e-05, 9.41659999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:20:01.154" endtime="20201029 18:20:01.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.142" endtime="20201029 18:20:01.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:01.171" endtime="20201029 18:20:01.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.165" endtime="20201029 18:20:01.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.163" endtime="20201029 18:20:01.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.671" endtime="20201029 18:20:01.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.669" endtime="20201029 18:20:01.196"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.218" endtime="20201029 18:20:01.238"></status>
</kw>
<msg timestamp="20201029 18:20:01.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.215" endtime="20201029 18:20:01.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.242" endtime="20201029 18:20:01.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.248" endtime="20201029 18:20:01.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.208" endtime="20201029 18:20:01.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.202" endtime="20201029 18:20:01.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.271" endtime="20201029 18:20:01.617"></status>
</kw>
<msg timestamp="20201029 18:20:01.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039447403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039541528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:01.267" endtime="20201029 18:20:01.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039447403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039541528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:01.627" endtime="20201029 18:20:01.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.646" endtime="20201029 18:20:01.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.260" endtime="20201029 18:20:01.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.256" endtime="20201029 18:20:01.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:01.663" level="INFO">${RESULT} = [{'diff': 9.412500000000046e-05}, {'diff': 9.508300000000275e-05}, {'diff': 9.501399999999743e-05}, {'diff': 9.49859999999983e-05}, {'diff': 9.474999999999761e-05}, {'diff': 9.555599999999664e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:01.654" endtime="20201029 18:20:01.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:01.674" level="INFO">${ACCURACY} = {'diff': [9.412500000000046e-05, 9.508300000000275e-05, 9.501399999999743e-05, 9.49859999999983e-05, 9.474999999999761e-05, 9.555599999999664e-05, 9.379100000000279e-05, 9.563800000000205e-05, 9.46530...</msg>
<status status="PASS" starttime="20201029 18:20:01.665" endtime="20201029 18:20:01.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.685" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:20:01.682" endtime="20201029 18:20:01.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.690" level="INFO">VALUE: [9.412500000000046e-05, 9.508300000000275e-05, 9.501399999999743e-05, 9.49859999999983e-05, 9.474999999999761e-05, 9.555599999999664e-05, 9.379100000000279e-05, 9.563800000000205e-05, 9.46530000000001e-05, 9.481900000000293e-05, 9.501400000000437e-05, 9.551399999999793e-05, 9.55279999999975e-05, 9.511100000000189e-05, 9.541700000000042e-05, 9.547199999999922e-05, 9.552699999999803e-05, 9.484800000000154e-05, 9.522199999999897e-05, 9.522300000000539e-05, 9.524999999999811e-05, 9.559700000000282e-05, 9.48200000000024e-05, 9.542999999999358e-05, 9.530499999999692e-05, 9.540300000000085e-05, 9.511100000000189e-05, 9.523600000000548e-05, 9.545799999999965e-05, 9.472200000000541e-05, 9.529199999999682e-05, 9.394400000000552e-05, 9.488900000000078e-05, 9.504100000000404e-05, 9.481900000000293e-05, 9.549999999999836e-05, 9.505599999999614e-05, 9.46530000000001e-05, 9.411100000000089e-05, 9.536100000000214e-05, 9.476399999999718e-05, 9.518099999999974e-05, 9.545899999999913e-05, 9.409699999999438e-05, 9.54859999999988e-05, 9.506899999999624e-05, 9.377800000000269e-05, 9.505599999999614e-05, 9.48330000000025e-05, 9.49859999999983e-05]</msg>
<status status="PASS" starttime="20201029 18:20:01.687" endtime="20201029 18:20:01.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.676" endtime="20201029 18:20:01.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:01.702" endtime="20201029 18:20:01.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.698" endtime="20201029 18:20:01.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.696" endtime="20201029 18:20:01.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.198" endtime="20201029 18:20:01.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.197" endtime="20201029 18:20:01.727"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.750" endtime="20201029 18:20:01.770"></status>
</kw>
<msg timestamp="20201029 18:20:01.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.746" endtime="20201029 18:20:01.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.773" endtime="20201029 18:20:01.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.779" endtime="20201029 18:20:01.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.739" endtime="20201029 18:20:01.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.734" endtime="20201029 18:20:01.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.802" endtime="20201029 18:20:02.137"></status>
</kw>
<msg timestamp="20201029 18:20:02.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039214333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039310583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:01.799" endtime="20201029 18:20:02.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039214333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039310583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.146" endtime="20201029 18:20:02.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.165" endtime="20201029 18:20:02.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.792" endtime="20201029 18:20:02.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.787" endtime="20201029 18:20:02.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:02.182" level="INFO">${RESULT} = [{'diff': 9.625000000000605e-05}, {'diff': 9.634699999999663e-05}, {'diff': 9.6415999999995e-05}, {'diff': 9.608300000000375e-05}, {'diff': 9.622199999999997e-05}, {'diff': 9.6027999999998e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:20:02.173" endtime="20201029 18:20:02.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:02.193" level="INFO">${ACCURACY} = {'diff': [9.625000000000605e-05, 9.634699999999663e-05, 9.6415999999995e-05, 9.608300000000375e-05, 9.622199999999997e-05, 9.6027999999998e-05, 9.61660000000017e-05, 9.545900000000607e-05, 9.594500000...</msg>
<status status="PASS" starttime="20201029 18:20:02.184" endtime="20201029 18:20:02.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.204" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:20:02.201" endtime="20201029 18:20:02.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.209" level="INFO">VALUE: [9.625000000000605e-05, 9.634699999999663e-05, 9.6415999999995e-05, 9.608300000000375e-05, 9.622199999999997e-05, 9.6027999999998e-05, 9.61660000000017e-05, 9.545900000000607e-05, 9.594500000000006e-05, 9.599999999999886e-05, 9.641700000000142e-05, 9.616599999999476e-05, 9.669400000000133e-05, 9.62080000000004e-05, 9.616700000000117e-05, 9.601400000000537e-05, 9.590300000000135e-05, 9.618000000000126e-05, 9.588900000000178e-05, 9.634700000000357e-05, 9.572199999999947e-05, 9.656899999999774e-05, 9.662500000000296e-05, 9.597199999999972e-05, 9.631999999999696e-05, 9.574999999999861e-05, 9.56530000000011e-05, 9.60409999999981e-05, 9.576399999999818e-05, 9.512500000000146e-05, 9.587500000000221e-05, 9.561100000000239e-05, 9.570899999999938e-05, 9.577800000000469e-05, 9.608299999999681e-05, 9.590200000000187e-05, 9.538900000000128e-05, 9.634700000000357e-05, 9.479099999999685e-05, 9.584700000000307e-05, 9.56530000000011e-05, 9.66530000000021e-05, 9.658399999999678e-05, 9.649999999999936e-05, 9.6333000000004e-05, 9.572299999999895e-05, 9.618000000000126e-05, 9.624999999999911e-05, 9.629199999999782e-05, 9.581899999999699e-05]</msg>
<status status="PASS" starttime="20201029 18:20:02.206" endtime="20201029 18:20:02.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.195" endtime="20201029 18:20:02.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:02.221" endtime="20201029 18:20:02.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.217" endtime="20201029 18:20:02.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.215" endtime="20201029 18:20:02.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.730" endtime="20201029 18:20:02.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.728" endtime="20201029 18:20:02.246"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.269" endtime="20201029 18:20:02.290"></status>
</kw>
<msg timestamp="20201029 18:20:02.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.265" endtime="20201029 18:20:02.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.293" endtime="20201029 18:20:02.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.300" endtime="20201029 18:20:02.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.258" endtime="20201029 18:20:02.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.253" endtime="20201029 18:20:02.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.323" endtime="20201029 18:20:02.668"></status>
</kw>
<msg timestamp="20201029 18:20:02.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039191694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039288625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.319" endtime="20201029 18:20:02.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039191694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039288625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.677" endtime="20201029 18:20:02.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.696" endtime="20201029 18:20:02.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.312" endtime="20201029 18:20:02.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.308" endtime="20201029 18:20:02.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:02.713" level="INFO">${RESULT} = [{'diff': 9.693100000000149e-05}, {'diff': 9.741600000000294e-05}, {'diff': 9.75279999999995e-05}, {'diff': 9.74730000000007e-05}, {'diff': 9.672200000000047e-05}, {'diff': 9.663900000000253e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:02.704" endtime="20201029 18:20:02.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:02.722" level="INFO">${ACCURACY} = {'diff': [9.693100000000149e-05, 9.741600000000294e-05, 9.75279999999995e-05, 9.74730000000007e-05, 9.672200000000047e-05, 9.663900000000253e-05, 9.745800000000165e-05, 9.750000000000036e-05, 9.759799...</msg>
<status status="PASS" starttime="20201029 18:20:02.715" endtime="20201029 18:20:02.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.733" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:20:02.731" endtime="20201029 18:20:02.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.738" level="INFO">VALUE: [9.693100000000149e-05, 9.741600000000294e-05, 9.75279999999995e-05, 9.74730000000007e-05, 9.672200000000047e-05, 9.663900000000253e-05, 9.745800000000165e-05, 9.750000000000036e-05, 9.759799999999735e-05, 9.766599999999626e-05, 9.643100000000099e-05, 9.699999999999986e-05, 9.580600000000383e-05, 9.695900000000063e-05, 9.61530000000016e-05, 9.751399999999993e-05, 9.666700000000167e-05, 9.741600000000294e-05, 9.677799999999875e-05, 9.681999999999746e-05, 9.75279999999995e-05, 9.761099999999745e-05, 9.76530000000031e-05, 9.770899999999444e-05, 9.695800000000115e-05, 9.759799999999735e-05, 9.674999999999961e-05, 9.699999999999986e-05, 9.665299999999516e-05, 9.766699999999573e-05, 9.69730000000002e-05, 9.690300000000235e-05, 9.704199999999857e-05, 9.695800000000115e-05, 9.756999999999821e-05, 9.750000000000036e-05, 9.733299999999806e-05, 9.741700000000242e-05, 9.726399999999968e-05, 9.756899999999874e-05, 9.686100000000364e-05, 9.729199999999882e-05, 9.718100000000174e-05, 9.669500000000081e-05, 9.673600000000004e-05, 9.684700000000407e-05, 9.674999999999961e-05, 9.737499999999677e-05, 9.716599999999576e-05, 9.67080000000009e-05]</msg>
<status status="PASS" starttime="20201029 18:20:02.735" endtime="20201029 18:20:02.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.724" endtime="20201029 18:20:02.741"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:02.751" endtime="20201029 18:20:02.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.746" endtime="20201029 18:20:02.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.744" endtime="20201029 18:20:02.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.248" endtime="20201029 18:20:02.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.247" endtime="20201029 18:20:02.775"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.798" endtime="20201029 18:20:02.820"></status>
</kw>
<msg timestamp="20201029 18:20:02.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.795" endtime="20201029 18:20:02.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.823" endtime="20201029 18:20:02.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.829" endtime="20201029 18:20:02.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.788" endtime="20201029 18:20:02.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.782" endtime="20201029 18:20:02.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.852" endtime="20201029 18:20:03.196"></status>
</kw>
<msg timestamp="20201029 18:20:03.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040722597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040820944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.849" endtime="20201029 18:20:03.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040722597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040820944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:03.206" endtime="20201029 18:20:03.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.224" endtime="20201029 18:20:03.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.842" endtime="20201029 18:20:03.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.837" endtime="20201029 18:20:03.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:03.241" level="INFO">${RESULT} = [{'diff': 9.834699999999863e-05}, {'diff': 9.793099999999555e-05}, {'diff': 9.826400000000068e-05}, {'diff': 9.822299999999451e-05}, {'diff': 9.851400000000093e-05}, {'diff': 9.794500000000206e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:03.233" endtime="20201029 18:20:03.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:03.250" level="INFO">${ACCURACY} = {'diff': [9.834699999999863e-05, 9.793099999999555e-05, 9.826400000000068e-05, 9.822299999999451e-05, 9.851400000000093e-05, 9.794500000000206e-05, 9.776400000000018e-05, 9.779099999999985e-05, 9.8555...</msg>
<status status="PASS" starttime="20201029 18:20:03.243" endtime="20201029 18:20:03.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.261" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:20:03.259" endtime="20201029 18:20:03.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.267" level="INFO">VALUE: [9.834699999999863e-05, 9.793099999999555e-05, 9.826400000000068e-05, 9.822299999999451e-05, 9.851400000000093e-05, 9.794500000000206e-05, 9.776400000000018e-05, 9.779099999999985e-05, 9.855599999999964e-05, 9.801400000000043e-05, 9.787499999999727e-05, 9.859700000000582e-05, 9.800000000000086e-05, 9.851400000000093e-05, 9.823600000000154e-05, 9.795900000000163e-05, 9.77080000000019e-05, 9.786100000000464e-05, 9.836199999999767e-05, 9.781899999999899e-05, 9.73059999999984e-05, 9.729200000000576e-05, 9.798700000000077e-05, 9.844400000000308e-05, 9.866700000000367e-05, 9.76809999999953e-05, 9.816700000000317e-05, 9.863900000000453e-05, 9.834699999999863e-05, 9.791700000000292e-05, 9.85410000000006e-05, 9.755600000000558e-05, 9.772200000000147e-05, 9.844500000000256e-05, 9.838899999999734e-05, 9.79860000000013e-05, 9.83609999999982e-05, 9.795799999999522e-05, 9.852799999999357e-05, 9.773699999999358e-05, 9.851400000000093e-05, 9.854200000000007e-05, 9.849999999999443e-05, 9.816699999999623e-05, 9.83609999999982e-05, 9.68059999999979e-05, 9.688900000000278e-05, 9.82359999999946e-05, 9.697200000000072e-05, 9.783400000000497e-05]</msg>
<status status="PASS" starttime="20201029 18:20:03.264" endtime="20201029 18:20:03.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.252" endtime="20201029 18:20:03.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:03.285" endtime="20201029 18:20:03.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.275" endtime="20201029 18:20:03.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.272" endtime="20201029 18:20:03.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.778" endtime="20201029 18:20:03.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.776" endtime="20201029 18:20:03.310"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.333" endtime="20201029 18:20:03.355"></status>
</kw>
<msg timestamp="20201029 18:20:03.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.329" endtime="20201029 18:20:03.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.358" endtime="20201029 18:20:03.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.365" endtime="20201029 18:20:03.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.322" endtime="20201029 18:20:03.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.316" endtime="20201029 18:20:03.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.387" endtime="20201029 18:20:03.727"></status>
</kw>
<msg timestamp="20201029 18:20:03.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039723181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039821889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:03.384" endtime="20201029 18:20:03.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039723181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039821889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:03.737" endtime="20201029 18:20:03.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.756" endtime="20201029 18:20:03.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.377" endtime="20201029 18:20:03.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.373" endtime="20201029 18:20:03.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:03.773" level="INFO">${RESULT} = [{'diff': 9.870799999999597e-05}, {'diff': 9.916599999999776e-05}, {'diff': 9.943100000000399e-05}, {'diff': 9.95410000000016e-05}, {'diff': 9.783399999999803e-05}, {'diff': 9.945800000000365e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:03.764" endtime="20201029 18:20:03.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:03.784" level="INFO">${ACCURACY} = {'diff': [9.870799999999597e-05, 9.916599999999776e-05, 9.943100000000399e-05, 9.95410000000016e-05, 9.783399999999803e-05, 9.945800000000365e-05, 9.92080000000034e-05, 9.927700000000178e-05, 9.924999...</msg>
<status status="PASS" starttime="20201029 18:20:03.775" endtime="20201029 18:20:03.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.795" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:20:03.793" endtime="20201029 18:20:03.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.800" level="INFO">VALUE: [9.870799999999597e-05, 9.916599999999776e-05, 9.943100000000399e-05, 9.95410000000016e-05, 9.783399999999803e-05, 9.945800000000365e-05, 9.92080000000034e-05, 9.927700000000178e-05, 9.924999999999518e-05, 9.891700000000392e-05, 9.904200000000057e-05, 9.954200000000107e-05, 9.884699999999913e-05, 9.870900000000238e-05, 9.883299999999956e-05, 9.937499999999877e-05, 9.865299999999716e-05, 9.933399999999953e-05, 9.916700000000417e-05, 9.951400000000193e-05, 9.959699999999988e-05, 9.95280000000015e-05, 9.962499999999902e-05, 9.954200000000107e-05, 9.793000000000301e-05, 9.876400000000118e-05, 9.86939999999964e-05, 9.937499999999877e-05, 9.868100000000324e-05, 9.876300000000171e-05, 9.906999999999971e-05, 9.959799999999935e-05, 9.869400000000333e-05, 9.881999999999946e-05, 9.944399999999715e-05, 9.909699999999938e-05, 9.875000000000161e-05, 9.951400000000193e-05, 9.934700000000657e-05, 9.812499999999752e-05, 9.958399999999978e-05, 9.920799999999647e-05, 9.958300000000031e-05, 9.813900000000403e-05, 9.811099999999795e-05, 9.861199999999792e-05, 9.87080000000029e-05, 9.93060000000004e-05, 9.955500000000117e-05, 9.916700000000417e-05]</msg>
<status status="PASS" starttime="20201029 18:20:03.797" endtime="20201029 18:20:03.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.786" endtime="20201029 18:20:03.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:03.813" endtime="20201029 18:20:03.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.809" endtime="20201029 18:20:03.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.806" endtime="20201029 18:20:03.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.312" endtime="20201029 18:20:03.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.311" endtime="20201029 18:20:03.838"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.861" endtime="20201029 18:20:03.881"></status>
</kw>
<msg timestamp="20201029 18:20:03.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.857" endtime="20201029 18:20:03.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.884" endtime="20201029 18:20:03.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.890" endtime="20201029 18:20:03.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.850" endtime="20201029 18:20:03.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.844" endtime="20201029 18:20:03.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.914" endtime="20201029 18:20:04.259"></status>
</kw>
<msg timestamp="20201029 18:20:04.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039486694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039586153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:03.910" endtime="20201029 18:20:04.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039486694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039586153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.268" endtime="20201029 18:20:04.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.286" endtime="20201029 18:20:04.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.903" endtime="20201029 18:20:04.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.899" endtime="20201029 18:20:04.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:04.303" level="INFO">${RESULT} = [{'diff': 9.945899999999619e-05}, {'diff': 0.00010041699999999848}, {'diff': 0.00010005499999999473}, {'diff': 0.0001001809999999978}, {'diff': 0.00010012499999999952}, {'diff': 0.00010034700000000063...</msg>
<status status="PASS" starttime="20201029 18:20:04.295" endtime="20201029 18:20:04.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:04.314" level="INFO">${ACCURACY} = {'diff': [9.945899999999619e-05, 0.00010041699999999848, 0.00010005499999999473, 0.0001001809999999978, 0.00010012499999999952, 0.00010034700000000063, 9.98609999999997e-05, 0.00010030499999999498, 0....</msg>
<status status="PASS" starttime="20201029 18:20:04.306" endtime="20201029 18:20:04.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.325" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:20:04.323" endtime="20201029 18:20:04.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.331" level="INFO">VALUE: [9.945899999999619e-05, 0.00010041699999999848, 0.00010005499999999473, 0.0001001809999999978, 0.00010012499999999952, 0.00010034700000000063, 9.98609999999997e-05, 0.00010030499999999498, 0.00010022300000000345, 9.897199999999579e-05, 0.00010000000000000286, 0.0001003610000000002, 9.96809999999973e-05, 0.00010012499999999952, 0.0001000139999999955, 9.98609999999997e-05, 9.983400000000003e-05, 0.00010016699999999823, 9.975000000000261e-05, 9.966699999999773e-05, 0.00010061100000000045, 0.00010063800000000012, 0.0001003610000000002, 0.00010042999999999858, 0.00010027800000000225, 9.988899999999884e-05, 0.00010004200000000157, 0.00010033300000000106, 0.00010061100000000045, 0.00010025000000000311, 9.98060000000009e-05, 9.966699999999773e-05, 0.00010013899999999909, 0.00010013899999999909, 0.00010033300000000106, 0.0001002359999999966, 9.995800000000415e-05, 0.00010048599999999686, 9.929200000000082e-05, 0.00010058300000000131, 0.000100028000000002, 0.00010020799999999747, 0.00010038900000000628, 9.880500000000042e-05, 0.000100028000000002, 0.00010020799999999747, 9.984700000000013e-05, 9.987499999999927e-05, 0.00010009700000000038, 0.00010038899999999934]</msg>
<status status="PASS" starttime="20201029 18:20:04.328" endtime="20201029 18:20:04.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.316" endtime="20201029 18:20:04.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:04.343" endtime="20201029 18:20:04.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.339" endtime="20201029 18:20:04.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.336" endtime="20201029 18:20:04.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.840" endtime="20201029 18:20:04.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.839" endtime="20201029 18:20:04.368"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.391" endtime="20201029 18:20:04.412"></status>
</kw>
<msg timestamp="20201029 18:20:04.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.387" endtime="20201029 18:20:04.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.415" endtime="20201029 18:20:04.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.422" endtime="20201029 18:20:04.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.380" endtime="20201029 18:20:04.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.375" endtime="20201029 18:20:04.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.444" endtime="20201029 18:20:04.794"></status>
</kw>
<msg timestamp="20201029 18:20:04.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039333528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039434625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.441" endtime="20201029 18:20:04.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039333528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039434625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.803" endtime="20201029 18:20:04.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.822" endtime="20201029 18:20:04.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.434" endtime="20201029 18:20:04.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.430" endtime="20201029 18:20:04.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:04.840" level="INFO">${RESULT} = [{'diff': 0.00010109700000000138}, {'diff': 0.00010044399999999815}, {'diff': 0.00010099999999999693}, {'diff': 0.00010165300000000016}, {'diff': 0.00010012499999999952}, {'diff': 0.000101389000000000...</msg>
<status status="PASS" starttime="20201029 18:20:04.831" endtime="20201029 18:20:04.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:04.849" level="INFO">${ACCURACY} = {'diff': [0.00010109700000000138, 0.00010044399999999815, 0.00010099999999999693, 0.00010165300000000016, 0.00010012499999999952, 0.00010138900000000034, 0.00010080599999999496, 0.00010140299999999991...</msg>
<status status="PASS" starttime="20201029 18:20:04.842" endtime="20201029 18:20:04.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.860" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:20:04.858" endtime="20201029 18:20:04.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.865" level="INFO">VALUE: [0.00010109700000000138, 0.00010044399999999815, 0.00010099999999999693, 0.00010165300000000016, 0.00010012499999999952, 0.00010138900000000034, 0.00010080599999999496, 0.00010140299999999991, 0.0001003060000000014, 0.00010152799999999657, 0.0001010410000000031, 9.999999999999593e-05, 0.00010095799999999822, 0.00010013799999999962, 0.00010080599999999496, 0.00010109700000000138, 0.00010163900000000059, 0.00010134700000000163, 0.00010101400000000343, 0.00010076400000000318, 0.00010102799999999607, 0.0001009159999999995, 0.00010132000000000196, 0.00010016699999999823, 0.00010117999999999933, 0.00010027799999999532, 0.00010076400000000318, 0.00010154199999999614, 0.00010099999999999693, 0.00010122299999999751, 0.0001006939999999984, 0.00010084700000000113, 0.00010154199999999614, 0.00010137500000000077, 0.00010029100000000235, 0.00010094500000000506, 0.00010144499999999862, 0.00010087500000000027, 0.00010118100000000574, 0.00010015299999999866, 0.00010140299999999991, 0.00010062500000000002, 0.00010088899999999984, 0.00010077800000000275, 0.00010083300000000156, 0.00010133400000000153, 0.00010094399999999865, 0.00010162500000000102, 0.00010061100000000045, 0.00010081900000000199]</msg>
<status status="PASS" starttime="20201029 18:20:04.862" endtime="20201029 18:20:04.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.851" endtime="20201029 18:20:04.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:04.878" endtime="20201029 18:20:04.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.874" endtime="20201029 18:20:04.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.871" endtime="20201029 18:20:04.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.371" endtime="20201029 18:20:04.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.369" endtime="20201029 18:20:04.904"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.927" endtime="20201029 18:20:04.952"></status>
</kw>
<msg timestamp="20201029 18:20:04.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.924" endtime="20201029 18:20:04.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.955" endtime="20201029 18:20:04.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.962" endtime="20201029 18:20:04.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.916" endtime="20201029 18:20:04.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.910" endtime="20201029 18:20:04.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.986" endtime="20201029 18:20:05.347"></status>
</kw>
<msg timestamp="20201029 18:20:05.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042217486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042319583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.982" endtime="20201029 18:20:05.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042217486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042319583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:05.357" endtime="20201029 18:20:05.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.375" endtime="20201029 18:20:05.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.975" endtime="20201029 18:20:05.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.970" endtime="20201029 18:20:05.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:05.393" level="INFO">${RESULT} = [{'diff': 0.00010209700000000238}, {'diff': 0.00010236099999999526}, {'diff': 0.00010188900000000084}, {'diff': 0.00010268000000000083}, {'diff': 0.00010194499999999912}, {'diff': 0.000102624999999995...</msg>
<status status="PASS" starttime="20201029 18:20:05.384" endtime="20201029 18:20:05.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:05.402" level="INFO">${ACCURACY} = {'diff': [0.00010209700000000238, 0.00010236099999999526, 0.00010188900000000084, 0.00010268000000000083, 0.00010194499999999912, 0.00010262499999999508, 0.00010172199999999854, 0.00010187500000000127...</msg>
<status status="PASS" starttime="20201029 18:20:05.395" endtime="20201029 18:20:05.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.413" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:20:05.411" endtime="20201029 18:20:05.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.419" level="INFO">VALUE: [0.00010209700000000238, 0.00010236099999999526, 0.00010188900000000084, 0.00010268000000000083, 0.00010194499999999912, 0.00010262499999999508, 0.00010172199999999854, 0.00010187500000000127, 0.00010200000000000486, 0.00010184700000000213, 0.00010254099999999766, 0.00010130599999999546, 0.00010194399999999965, 0.00010212500000000152, 0.0001020689999999963, 0.00010172199999999854, 0.00010206900000000324, 0.0001023889999999944, 0.00010238900000000134, 0.00010180500000000342, 0.00010184699999999519, 0.00010254099999999766, 0.0001017359999999981, 0.000102416000000001, 0.00010258300000000331, 0.00010115299999999966, 0.00010209700000000238, 0.0001018339999999951, 0.00010172199999999854, 0.00010172199999999854, 0.00010079200000000232, 0.0001008060000000019, 0.00010183299999999562, 0.00010262499999999508, 0.00010177799999999682, 0.00010165300000000016, 0.00010243100000000005, 0.0001021809999999998, 0.00010256900000000374, 0.00010254099999999766, 0.000102028000000004, 0.00010198599999999836, 0.00010222199999999904, 0.00010263900000000159, 0.0001021939999999999, 0.00010227700000000478, 0.00010209700000000238, 0.00010222199999999904, 0.00010170899999999844, 0.00010218000000000033]</msg>
<status status="PASS" starttime="20201029 18:20:05.416" endtime="20201029 18:20:05.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.404" endtime="20201029 18:20:05.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:05.433" endtime="20201029 18:20:05.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.427" endtime="20201029 18:20:05.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.425" endtime="20201029 18:20:05.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.906" endtime="20201029 18:20:05.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.905" endtime="20201029 18:20:05.459"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.482" endtime="20201029 18:20:05.505"></status>
</kw>
<msg timestamp="20201029 18:20:05.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:05.479" endtime="20201029 18:20:05.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:05.509" endtime="20201029 18:20:05.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.515" endtime="20201029 18:20:05.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.471" endtime="20201029 18:20:05.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.465" endtime="20201029 18:20:05.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.539" endtime="20201029 18:20:05.899"></status>
</kw>
<msg timestamp="20201029 18:20:05.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040456236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040559806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:05.536" endtime="20201029 18:20:05.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040456236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040559806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:05.908" endtime="20201029 18:20:05.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.927" endtime="20201029 18:20:05.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.528" endtime="20201029 18:20:05.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.523" endtime="20201029 18:20:05.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:05.944" level="INFO">${RESULT} = [{'diff': 0.00010356999999999728}, {'diff': 0.00010348599999999986}, {'diff': 0.00010270799999999997}, {'diff': 0.00010343000000000158}, {'diff': 0.00010352799999999857}, {'diff': 0.000103638999999995...</msg>
<status status="PASS" starttime="20201029 18:20:05.935" endtime="20201029 18:20:05.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:05.955" level="INFO">${ACCURACY} = {'diff': [0.00010356999999999728, 0.00010348599999999986, 0.00010270799999999997, 0.00010343000000000158, 0.00010352799999999857, 0.00010363899999999565, 0.00010291700000000098, 0.00010324999999999918...</msg>
<status status="PASS" starttime="20201029 18:20:05.946" endtime="20201029 18:20:05.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.966" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:20:05.964" endtime="20201029 18:20:05.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.972" level="INFO">VALUE: [0.00010356999999999728, 0.00010348599999999986, 0.00010270799999999997, 0.00010343000000000158, 0.00010352799999999857, 0.00010363899999999565, 0.00010291700000000098, 0.00010324999999999918, 0.00010290300000000141, 0.00010349999999999943, 0.00010342999999999464, 0.00010311100000000295, 0.00010293100000000055, 0.00010354199999999814, 0.0001029160000000015, 0.00010343100000000105, 0.00010327799999999832, 0.00010365300000000216, 0.00010354200000000507, 0.00010333300000000406, 0.00010357000000000421, 0.0001030139999999985, 0.00010234699999999569, 0.0001026810000000003, 0.00010283299999999662, 0.00010198599999999836, 0.00010294399999999371, 0.00010311100000000295, 0.0001030559999999972, 0.00010275000000000561, 0.00010318000000000133, 0.00010337500000000277, 0.00010294500000000012, 0.00010288900000000184, 0.00010270799999999997, 0.00010326399999999875, 0.00010334699999999669, 0.00010361099999999651, 0.00010293100000000055, 0.00010343100000000105, 0.00010311100000000295, 0.00010318000000000133, 0.00010324999999999918, 0.00010267999999999389, 0.00010281899999999705, 0.00010290299999999447, 0.0001030139999999985, 0.00010281899999999705, 0.00010341700000000148, 0.00010193000000000008]</msg>
<status status="PASS" starttime="20201029 18:20:05.968" endtime="20201029 18:20:05.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.957" endtime="20201029 18:20:05.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:05.985" endtime="20201029 18:20:06.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.980" endtime="20201029 18:20:06.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.978" endtime="20201029 18:20:06.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.461" endtime="20201029 18:20:06.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.460" endtime="20201029 18:20:06.010"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.034" endtime="20201029 18:20:06.057"></status>
</kw>
<msg timestamp="20201029 18:20:06.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:06.030" endtime="20201029 18:20:06.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:06.060" endtime="20201029 18:20:06.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.067" endtime="20201029 18:20:06.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.023" endtime="20201029 18:20:06.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.017" endtime="20201029 18:20:06.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.091" endtime="20201029 18:20:06.436"></status>
</kw>
<msg timestamp="20201029 18:20:06.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040726708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040830653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:06.087" endtime="20201029 18:20:06.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040726708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040830653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:06.446" endtime="20201029 18:20:06.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.464" endtime="20201029 18:20:06.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.080" endtime="20201029 18:20:06.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.075" endtime="20201029 18:20:06.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:06.481" level="INFO">${RESULT} = [{'diff': 0.00010394500000000112}, {'diff': 0.00010418000000000233}, {'diff': 0.0001045559999999987}, {'diff': 0.0001038339999999971}, {'diff': 0.00010416599999999582}, {'diff': 0.00010445800000000172...</msg>
<status status="PASS" starttime="20201029 18:20:06.472" endtime="20201029 18:20:06.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:06.492" level="INFO">${ACCURACY} = {'diff': [0.00010394500000000112, 0.00010418000000000233, 0.0001045559999999987, 0.0001038339999999971, 0.00010416599999999582, 0.00010445800000000172, 0.00010330499999999798, 0.00010461099999999751, ...</msg>
<status status="PASS" starttime="20201029 18:20:06.483" endtime="20201029 18:20:06.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.503" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:20:06.501" endtime="20201029 18:20:06.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.508" level="INFO">VALUE: [0.00010394500000000112, 0.00010418000000000233, 0.0001045559999999987, 0.0001038339999999971, 0.00010416599999999582, 0.00010445800000000172, 0.00010330499999999798, 0.00010461099999999751, 0.00010377699999999934, 0.00010363899999999565, 0.00010377699999999934, 0.00010448600000000086, 0.00010274999999999868, 0.00010384699999999719, 0.00010312499999999558, 0.0001038610000000037, 0.00010329200000000482, 0.00010437500000000377, 0.00010425000000000018, 0.00010433299999999812, 0.00010370800000000097, 0.0001043889999999964, 0.0001043480000000041, 0.00010455499999999923, 0.00010456999999999828, 0.00010402799999999907, 0.00010380599999999796, 0.00010399999999999993, 0.00010412500000000352, 0.0001036810000000013, 0.00010404099999999916, 0.00010463899999999665, 0.00010281900000000399, 0.00010416599999999582, 0.00010390299999999547, 0.00010388800000000337, 0.00010398600000000036, 0.00010298599999999936, 0.00010436099999999726, 0.00010347200000000029, 0.0001045689999999988, 0.00010452799999999957, 0.0001043889999999964, 0.00010429199999999889, 0.00010406999999999778, 0.00010368000000000183, 0.00010456999999999828, 0.00010416599999999582, 0.00010422200000000104, 0.000104514]</msg>
<status status="PASS" starttime="20201029 18:20:06.505" endtime="20201029 18:20:06.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.494" endtime="20201029 18:20:06.511"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:06.521" endtime="20201029 18:20:06.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.516" endtime="20201029 18:20:06.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.514" endtime="20201029 18:20:06.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.012" endtime="20201029 18:20:06.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.011" endtime="20201029 18:20:06.546"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.568" endtime="20201029 18:20:06.589"></status>
</kw>
<msg timestamp="20201029 18:20:06.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:06.565" endtime="20201029 18:20:06.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:06.592" endtime="20201029 18:20:06.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.599" endtime="20201029 18:20:06.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.558" endtime="20201029 18:20:06.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.552" endtime="20201029 18:20:06.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.632" endtime="20201029 18:20:06.977"></status>
</kw>
<msg timestamp="20201029 18:20:06.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039711639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039817347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:06.625" endtime="20201029 18:20:06.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039711639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039817347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:06.987" endtime="20201029 18:20:07.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.005" endtime="20201029 18:20:07.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.612" endtime="20201029 18:20:07.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.607" endtime="20201029 18:20:07.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:07.022" level="INFO">${RESULT} = [{'diff': 0.00010570800000000297}, {'diff': 0.00010491599999999657}, {'diff': 0.00010536099999999826}, {'diff': 0.0001050140000000005}, {'diff': 0.00010495799999999528}, {'diff': 0.0001041109999999970...</msg>
<status status="PASS" starttime="20201029 18:20:07.013" endtime="20201029 18:20:07.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:07.031" level="INFO">${ACCURACY} = {'diff': [0.00010570800000000297, 0.00010491599999999657, 0.00010536099999999826, 0.0001050140000000005, 0.00010495799999999528, 0.00010411099999999701, 0.00010508299999999887, 0.00010431999999999803,...</msg>
<status status="PASS" starttime="20201029 18:20:07.024" endtime="20201029 18:20:07.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.042" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:20:07.040" endtime="20201029 18:20:07.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.047" level="INFO">VALUE: [0.00010570800000000297, 0.00010491599999999657, 0.00010536099999999826, 0.0001050140000000005, 0.00010495799999999528, 0.00010411099999999701, 0.00010508299999999887, 0.00010431999999999803, 0.00010544400000000315, 0.00010377799999999882, 0.00010466600000000326, 0.00010544500000000262, 0.00010563899999999765, 0.00010447200000000129, 0.00010529199999999989, 0.00010529199999999989, 0.00010511099999999801, 0.00010524999999999424, 0.0001050140000000005, 0.00010554100000000066, 0.00010432000000000496, 0.00010569399999999646, 0.00010480599999999896, 0.00010520800000000247, 0.00010561099999999851, 0.00010542999999999664, 0.00010487499999999733, 0.00010476400000000025, 0.00010493000000000308, 0.00010536099999999826, 0.00010463899999999665, 0.00010550000000000143, 0.00010486099999999776, 0.00010480499999999948, 0.00010512500000000452, 0.00010470900000000144, 0.00010527800000000032, 0.00010522300000000151, 0.00010544399999999621, 0.00010469500000000187, 0.00010541700000000348, 0.00010495800000000222, 0.00010547200000000229, 0.00010563800000000512, 0.00010559799999999842, 0.00010470799999999503, 0.00010525000000000118, 0.00010463900000000359, 0.00010559699999999894, 0.00010515300000000366]</msg>
<status status="PASS" starttime="20201029 18:20:07.044" endtime="20201029 18:20:07.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.033" endtime="20201029 18:20:07.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:07.059" endtime="20201029 18:20:07.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.055" endtime="20201029 18:20:07.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.053" endtime="20201029 18:20:07.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.548" endtime="20201029 18:20:07.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.547" endtime="20201029 18:20:07.084"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.107" endtime="20201029 18:20:07.129"></status>
</kw>
<msg timestamp="20201029 18:20:07.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.103" endtime="20201029 18:20:07.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.132" endtime="20201029 18:20:07.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.138" endtime="20201029 18:20:07.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.096" endtime="20201029 18:20:07.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.091" endtime="20201029 18:20:07.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.161" endtime="20201029 18:20:07.496"></status>
</kw>
<msg timestamp="20201029 18:20:07.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040648361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040754, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:20:07.158" endtime="20201029 18:20:07.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040648361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040754, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:20:07.505" endtime="20201029 18:20:07.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.523" endtime="20201029 18:20:07.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.151" endtime="20201029 18:20:07.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.146" endtime="20201029 18:20:07.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:07.540" level="INFO">${RESULT} = [{'diff': 0.00010563899999999765}, {'diff': 0.00010600000000000193}, {'diff': 0.00010590300000000441}, {'diff': 0.0001058889999999979}, {'diff': 0.00010583299999999962}, {'diff': 0.0001059299999999971...</msg>
<status status="PASS" starttime="20201029 18:20:07.532" endtime="20201029 18:20:07.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:07.549" level="INFO">${ACCURACY} = {'diff': [0.00010563899999999765, 0.00010600000000000193, 0.00010590300000000441, 0.0001058889999999979, 0.00010583299999999962, 0.00010592999999999714, 0.00010625000000000218, 0.00010615299999999772,...</msg>
<status status="PASS" starttime="20201029 18:20:07.542" endtime="20201029 18:20:07.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.560" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:20:07.558" endtime="20201029 18:20:07.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.565" level="INFO">VALUE: [0.00010563899999999765, 0.00010600000000000193, 0.00010590300000000441, 0.0001058889999999979, 0.00010583299999999962, 0.00010592999999999714, 0.00010625000000000218, 0.00010615299999999772, 0.00010591699999999704, 0.00010645800000000372, 0.00010609699999999944, 0.00010531899999999955, 0.00010586099999999876, 0.00010611099999999901, 0.00010587499999999833, 0.0001060560000000002, 0.00010576399999999431, 0.00010563799999999818, 0.00010597200000000279, 0.00010601399999999456, 0.00010613900000000509, 0.00010620900000000294, 0.0001065690000000008, 0.0001062360000000026, 0.00010531899999999955, 0.00010625000000000218, 0.00010643099999999711, 0.00010652800000000157, 0.0001061940000000039, 0.00010665299999999822, 0.00010613799999999868, 0.00010584799999999867, 0.00010648599999999592, 0.00010598599999999542, 0.00010604100000000116, 0.00010484699999999819, 0.0001057360000000021, 0.00010619499999999643, 0.000106208999999996, 0.00010572300000000201, 0.00010577800000000082, 0.00010629200000000089, 0.00010615300000000466, 0.00010657000000000028, 0.00010652799999999463, 0.00010550000000000143, 0.00010520799999999553, 0.0001060140000000015, 0.00010661099999999951, 0.00010625000000000218]</msg>
<status status="PASS" starttime="20201029 18:20:07.562" endtime="20201029 18:20:07.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.551" endtime="20201029 18:20:07.568"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:07.579" endtime="20201029 18:20:07.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.573" endtime="20201029 18:20:07.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.571" endtime="20201029 18:20:07.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.086" endtime="20201029 18:20:07.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.085" endtime="20201029 18:20:07.604"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.627" endtime="20201029 18:20:07.647"></status>
</kw>
<msg timestamp="20201029 18:20:07.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.623" endtime="20201029 18:20:07.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.650" endtime="20201029 18:20:07.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.657" endtime="20201029 18:20:07.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.616" endtime="20201029 18:20:07.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.611" endtime="20201029 18:20:07.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.680" endtime="20201029 18:20:08.014"></status>
</kw>
<msg timestamp="20201029 18:20:08.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039248611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039356042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:07.677" endtime="20201029 18:20:08.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039248611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039356042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:08.023" endtime="20201029 18:20:08.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.041" endtime="20201029 18:20:08.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.669" endtime="20201029 18:20:08.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.665" endtime="20201029 18:20:08.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:08.058" level="INFO">${RESULT} = [{'diff': 0.00010743099999999811}, {'diff': 0.00010740299999999897}, {'diff': 0.0001070140000000025}, {'diff': 0.00010691699999999804}, {'diff': 0.00010687499999999933}, {'diff': 0.0001069439999999977...</msg>
<status status="PASS" starttime="20201029 18:20:08.050" endtime="20201029 18:20:08.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:08.069" level="INFO">${ACCURACY} = {'diff': [0.00010743099999999811, 0.00010740299999999897, 0.0001070140000000025, 0.00010691699999999804, 0.00010687499999999933, 0.00010694399999999771, 0.00010736100000000026, 0.00010669399999999746,...</msg>
<status status="PASS" starttime="20201029 18:20:08.060" endtime="20201029 18:20:08.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.079" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:20:08.077" endtime="20201029 18:20:08.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.085" level="INFO">VALUE: [0.00010743099999999811, 0.00010740299999999897, 0.0001070140000000025, 0.00010691699999999804, 0.00010687499999999933, 0.00010694399999999771, 0.00010736100000000026, 0.00010669399999999746, 0.00010665299999999822, 0.00010749999999999649, 0.00010631900000000055, 0.00010668099999999736, 0.00010766599999999932, 0.00010716699999999829, 0.00010727800000000232, 0.00010759700000000094, 0.00010673599999999617, 0.00010577700000000134, 0.00010726400000000275, 0.00010738799999999993, 0.00010640300000000491, 0.00010737499999999983, 0.00010677800000000182, 0.00010666600000000526, 0.0001070419999999947, 0.00010755500000000223, 0.00010723599999999667, 0.00010740299999999897, 0.00010734800000000017, 0.00010740299999999897, 0.00010683300000000062, 0.00010683300000000062, 0.00010756899999999486, 0.0001068889999999989, 0.00010709700000000044, 0.00010727800000000232, 0.00010676400000000225, 0.00010662499999999908, 0.00010748600000000386, 0.00010720799999999753, 0.0001070690000000013, 0.00010698599999999642, 0.00010684700000000019, 0.00010637499999999883, 0.00010594400000000365, 0.00010698600000000336, 0.00010668000000000483, 0.00010762500000000008, 0.00010712499999999958, 0.00010736100000000026]</msg>
<status status="PASS" starttime="20201029 18:20:08.082" endtime="20201029 18:20:08.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.070" endtime="20201029 18:20:08.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:08.097" endtime="20201029 18:20:08.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.093" endtime="20201029 18:20:08.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.090" endtime="20201029 18:20:08.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.606" endtime="20201029 18:20:08.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.605" endtime="20201029 18:20:08.122"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.145" endtime="20201029 18:20:08.166"></status>
</kw>
<msg timestamp="20201029 18:20:08.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:08.141" endtime="20201029 18:20:08.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:08.170" endtime="20201029 18:20:08.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.176" endtime="20201029 18:20:08.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.134" endtime="20201029 18:20:08.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.128" endtime="20201029 18:20:08.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.199" endtime="20201029 18:20:08.546"></status>
</kw>
<msg timestamp="20201029 18:20:08.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039162292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039270083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:08.196" endtime="20201029 18:20:08.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039162292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039270083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:08.555" endtime="20201029 18:20:08.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.573" endtime="20201029 18:20:08.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.188" endtime="20201029 18:20:08.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.184" endtime="20201029 18:20:08.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:08.590" level="INFO">${RESULT} = [{'diff': 0.00010779099999999597}, {'diff': 0.00010832000000000203}, {'diff': 0.00010837500000000083}, {'diff': 0.0001085419999999962}, {'diff': 0.00010804200000000264}, {'diff': 0.0001079439999999987...</msg>
<status status="PASS" starttime="20201029 18:20:08.581" endtime="20201029 18:20:08.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:08.605" level="INFO">${ACCURACY} = {'diff': [0.00010779099999999597, 0.00010832000000000203, 0.00010837500000000083, 0.0001085419999999962, 0.00010804200000000264, 0.00010794399999999871, 0.00010861100000000151, 0.00010798599999999742,...</msg>
<status status="PASS" starttime="20201029 18:20:08.592" endtime="20201029 18:20:08.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.615" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:20:08.613" endtime="20201029 18:20:08.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.621" level="INFO">VALUE: [0.00010779099999999597, 0.00010832000000000203, 0.00010837500000000083, 0.0001085419999999962, 0.00010804200000000264, 0.00010794399999999871, 0.00010861100000000151, 0.00010798599999999742, 0.00010713899999999915, 0.00010865200000000075, 0.00010790299999999947, 0.00010783299999999468, 0.00010802799999999613, 0.00010811100000000101, 0.00010838800000000093, 0.00010763899999999965, 0.00010807000000000178, 0.00010777799999999588, 0.00010859800000000142, 0.0001085419999999962, 0.00010783300000000162, 0.00010695800000000422, 0.00010861099999999457, 0.00010825000000000418, 0.00010804200000000264, 0.00010842999999999964, 0.00010787500000000033, 0.00010772300000000401, 0.00010841600000000007, 0.00010862499999999414, 0.00010807000000000178, 0.00010808300000000187, 0.00010877799999999688, 0.00010787500000000033, 0.00010834700000000169, 0.00010833300000000212, 0.00010791700000000598, 0.00010790299999999947, 0.00010777800000000282, 0.00010808300000000187, 0.0001085549999999963, 0.00010836100000000126, 0.00010852799999999663, 0.00010794499999999818, 0.00010697200000000379, 0.00010712499999999958, 0.0001083890000000004, 0.00010833399999999466, 0.00010813900000000015, 0.00010825000000000418]</msg>
<status status="PASS" starttime="20201029 18:20:08.618" endtime="20201029 18:20:08.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.606" endtime="20201029 18:20:08.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:08.633" endtime="20201029 18:20:08.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.629" endtime="20201029 18:20:08.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.626" endtime="20201029 18:20:08.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.124" endtime="20201029 18:20:08.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.123" endtime="20201029 18:20:08.658"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.681" endtime="20201029 18:20:08.702"></status>
</kw>
<msg timestamp="20201029 18:20:08.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:08.677" endtime="20201029 18:20:08.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:08.706" endtime="20201029 18:20:08.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.712" endtime="20201029 18:20:08.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.670" endtime="20201029 18:20:08.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.665" endtime="20201029 18:20:08.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.735" endtime="20201029 18:20:09.084"></status>
</kw>
<msg timestamp="20201029 18:20:09.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039378861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039488486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:08.732" endtime="20201029 18:20:09.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039378861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039488486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:09.093" endtime="20201029 18:20:09.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.111" endtime="20201029 18:20:09.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.725" endtime="20201029 18:20:09.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.720" endtime="20201029 18:20:09.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:09.128" level="INFO">${RESULT} = [{'diff': 0.00010962500000000208}, {'diff': 0.00010881900000000305}, {'diff': 0.0001085560000000027}, {'diff': 0.00010886200000000124}, {'diff': 0.00010961100000000251}, {'diff': 0.0001088750000000013...</msg>
<status status="PASS" starttime="20201029 18:20:09.120" endtime="20201029 18:20:09.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:09.137" level="INFO">${ACCURACY} = {'diff': [0.00010962500000000208, 0.00010881900000000305, 0.0001085560000000027, 0.00010886200000000124, 0.00010961100000000251, 0.00010887500000000133, 0.00010872300000000501, 0.00010887499999999439,...</msg>
<status status="PASS" starttime="20201029 18:20:09.130" endtime="20201029 18:20:09.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.148" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:20:09.146" endtime="20201029 18:20:09.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.153" level="INFO">VALUE: [0.00010962500000000208, 0.00010881900000000305, 0.0001085560000000027, 0.00010886200000000124, 0.00010961100000000251, 0.00010887500000000133, 0.00010872300000000501, 0.00010887499999999439, 0.00010941700000000054, 0.00010941700000000054, 0.0001093890000000014, 0.00010913900000000115, 0.00010874999999999774, 0.00010915300000000072, 0.00010963900000000165, 0.00010948599999999892, 0.00010961200000000199, 0.00010936099999999532, 0.00010904099999999722, 0.00010902699999999765, 0.00010873599999999817, 0.00010908400000000235, 0.00010781900000000205, 0.00010941600000000107, 0.00010941600000000107, 0.00010897200000000579, 0.00010881899999999611, 0.00010877800000000382, 0.00010944400000000021, 0.00010815299999999972, 0.00010966699999999385, 0.00010897199999999885, 0.00010963899999999471, 0.00010926399999999781, 0.00010902799999999713, 0.00010873599999999817, 0.00010929199999999695, 0.00010895799999999928, 0.00010908300000000287, 0.00010911100000000201, 0.0001092219999999991, 0.00010887500000000133, 0.00010877800000000382, 0.00010848599999999792, 0.00010887500000000133, 0.0001095419999999972, 0.00010948599999999892, 0.00010937500000000183, 0.00010833299999999518, 0.00010866699999999979]</msg>
<status status="PASS" starttime="20201029 18:20:09.150" endtime="20201029 18:20:09.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.139" endtime="20201029 18:20:09.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:09.170" endtime="20201029 18:20:09.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.165" endtime="20201029 18:20:09.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.163" endtime="20201029 18:20:09.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.660" endtime="20201029 18:20:09.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.659" endtime="20201029 18:20:09.195"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.217" endtime="20201029 18:20:09.240"></status>
</kw>
<msg timestamp="20201029 18:20:09.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:09.214" endtime="20201029 18:20:09.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:09.244" endtime="20201029 18:20:09.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.250" endtime="20201029 18:20:09.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.207" endtime="20201029 18:20:09.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.201" endtime="20201029 18:20:09.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.274" endtime="20201029 18:20:09.622"></status>
</kw>
<msg timestamp="20201029 18:20:09.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040685694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040795667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:09.270" endtime="20201029 18:20:09.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040685694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040795667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:09.631" endtime="20201029 18:20:09.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.649" endtime="20201029 18:20:09.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.263" endtime="20201029 18:20:09.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.258" endtime="20201029 18:20:09.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:09.666" level="INFO">${RESULT} = [{'diff': 0.00010997299999999932}, {'diff': 0.00011012499999999564}, {'diff': 0.00011052799999999863}, {'diff': 0.000110209}, {'diff': 0.00010984700000000319}, {'diff': 0.00011016700000000129}, {'diff...</msg>
<status status="PASS" starttime="20201029 18:20:09.657" endtime="20201029 18:20:09.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:09.675" level="INFO">${ACCURACY} = {'diff': [0.00010997299999999932, 0.00011012499999999564, 0.00011052799999999863, 0.000110209, 0.00010984700000000319, 0.00011016700000000129, 0.00010999999999999899, 0.0001097089999999995, 0.00011040...</msg>
<status status="PASS" starttime="20201029 18:20:09.668" endtime="20201029 18:20:09.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.688" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:20:09.685" endtime="20201029 18:20:09.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.693" level="INFO">VALUE: [0.00010997299999999932, 0.00011012499999999564, 0.00011052799999999863, 0.000110209, 0.00010984700000000319, 0.00011016700000000129, 0.00010999999999999899, 0.0001097089999999995, 0.00011040300000000197, 0.0001100969999999965, 0.0001105419999999982, 0.00011024999999999924, 0.00011005599999999727, 0.00011008299999999693, 0.00011005599999999727, 0.00011056899999999786, 0.00011002799999999813, 0.00010970800000000003, 0.00010957000000000328, 0.00010901399999999756, 0.00011037500000000283, 0.00011037499999999589, 0.00011043000000000164, 0.00011065300000000222, 0.00010966700000000079, 0.00011030500000000498, 0.00010995899999999975, 0.00010990299999999453, 0.00010947199999999935, 0.00010965300000000122, 0.0001102220000000001, 0.00010931900000000355, 0.00010948599999999892, 0.00011054099999999872, 0.0001100690000000043, 0.00011063900000000265, 0.00010986099999999582, 0.00010994399999999377, 0.00010930500000000398, 0.00010945899999999925, 0.00011030500000000498, 0.00011018100000000086, 0.00010883399999999516, 0.00011029199999999795, 0.00011017999999999445, 0.00010968100000000036, 0.00011049999999999949, 0.00010986100000000276, 0.00011018000000000139, 0.00010884800000000167]</msg>
<status status="PASS" starttime="20201029 18:20:09.690" endtime="20201029 18:20:09.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.677" endtime="20201029 18:20:09.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:09.707" endtime="20201029 18:20:09.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.701" endtime="20201029 18:20:09.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.699" endtime="20201029 18:20:09.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.197" endtime="20201029 18:20:09.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.196" endtime="20201029 18:20:09.732"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.755" endtime="20201029 18:20:09.777"></status>
</kw>
<msg timestamp="20201029 18:20:09.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:09.752" endtime="20201029 18:20:09.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:09.780" endtime="20201029 18:20:09.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.787" endtime="20201029 18:20:09.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.744" endtime="20201029 18:20:09.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.739" endtime="20201029 18:20:09.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.810" endtime="20201029 18:20:10.157"></status>
</kw>
<msg timestamp="20201029 18:20:10.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039476667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039588292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:09.806" endtime="20201029 18:20:10.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039476667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039588292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:10.166" endtime="20201029 18:20:10.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.184" endtime="20201029 18:20:10.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.799" endtime="20201029 18:20:10.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.795" endtime="20201029 18:20:10.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:10.201" level="INFO">${RESULT} = [{'diff': 0.00011162499999999714}, {'diff': 0.00011151400000000006}, {'diff': 0.00011157000000000528}, {'diff': 0.00010998599999999942}, {'diff': 0.00011141700000000254}, {'diff': 0.000111374999999996...</msg>
<status status="PASS" starttime="20201029 18:20:10.192" endtime="20201029 18:20:10.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:10.211" level="INFO">${ACCURACY} = {'diff': [0.00011162499999999714, 0.00011151400000000006, 0.00011157000000000528, 0.00010998599999999942, 0.00011141700000000254, 0.00011137499999999689, 0.00011065300000000222, 0.00011158299999999843...</msg>
<status status="PASS" starttime="20201029 18:20:10.203" endtime="20201029 18:20:10.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.222" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:20:10.219" endtime="20201029 18:20:10.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.227" level="INFO">VALUE: [0.00011162499999999714, 0.00011151400000000006, 0.00011157000000000528, 0.00010998599999999942, 0.00011141700000000254, 0.00011137499999999689, 0.00011065300000000222, 0.00011158299999999843, 0.00011033300000000412, 0.00011115199999999631, 0.00011088899999999596, 0.00011099999999999999, 0.00011091700000000204, 0.00011115300000000272, 0.00011150000000000049, 0.00011073600000000017, 0.00011165300000000322, 0.00011112500000000358, 0.00011165299999999628, 0.00011140300000000297, 0.00011084700000000419, 0.00011068000000000189, 0.00011159700000000494, 0.00011080499999999854, 0.00011126300000000033, 0.00011113899999999621, 0.00011140299999999603, 0.00011125000000000024, 0.00011013799999999574, 0.00011149999999999355, 0.000110596999999997, 0.00011123600000000067, 0.00011151400000000006, 0.00011127800000000632, 0.00011144400000000221, 0.00011088899999999596, 0.00011127799999999938, 0.00011086100000000376, 0.00011069500000000093, 0.00011069400000000146, 0.00011074999999999974, 0.00011134699999999775, 0.00011165300000000322, 0.00011143100000000211, 0.00011073600000000017, 0.00011105500000000573, 0.00011129199999999895, 0.00011161099999999757, 0.00011090300000000247, 0.00011079199999999845]</msg>
<status status="PASS" starttime="20201029 18:20:10.224" endtime="20201029 18:20:10.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.213" endtime="20201029 18:20:10.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:10.239" endtime="20201029 18:20:10.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.235" endtime="20201029 18:20:10.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.233" endtime="20201029 18:20:10.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.735" endtime="20201029 18:20:10.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.733" endtime="20201029 18:20:10.264"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.287" endtime="20201029 18:20:10.307"></status>
</kw>
<msg timestamp="20201029 18:20:10.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:10.283" endtime="20201029 18:20:10.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:10.311" endtime="20201029 18:20:10.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.317" endtime="20201029 18:20:10.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.276" endtime="20201029 18:20:10.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.271" endtime="20201029 18:20:10.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.341" endtime="20201029 18:20:10.675"></status>
</kw>
<msg timestamp="20201029 18:20:10.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039049181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03916125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:10.338" endtime="20201029 18:20:10.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039049181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03916125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:10.684" endtime="20201029 18:20:10.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.702" endtime="20201029 18:20:10.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.331" endtime="20201029 18:20:10.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.326" endtime="20201029 18:20:10.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:10.719" level="INFO">${RESULT} = [{'diff': 0.00011206899999999936}, {'diff': 0.0001127220000000026}, {'diff': 0.00011263899999999771}, {'diff': 0.00011233299999999918}, {'diff': 0.00011222199999999516}, {'diff': 0.0001118059999999990...</msg>
<status status="PASS" starttime="20201029 18:20:10.710" endtime="20201029 18:20:10.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:10.730" level="INFO">${ACCURACY} = {'diff': [0.00011206899999999936, 0.0001127220000000026, 0.00011263899999999771, 0.00011233299999999918, 0.00011222199999999516, 0.00011180599999999902, 0.00011184699999999825, 0.00011137500000000383,...</msg>
<status status="PASS" starttime="20201029 18:20:10.721" endtime="20201029 18:20:10.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.740" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:20:10.738" endtime="20201029 18:20:10.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.746" level="INFO">VALUE: [0.00011206899999999936, 0.0001127220000000026, 0.00011263899999999771, 0.00011233299999999918, 0.00011222199999999516, 0.00011180599999999902, 0.00011184699999999825, 0.00011137500000000383, 0.00011255599999999977, 0.0001120969999999985, 0.00011231999999999909, 0.00011104099999999922, 0.00011177799999999988, 0.0001122220000000021, 0.00011119400000000196, 0.00011119400000000196, 0.00011220899999999506, 0.00011230500000000004, 0.0001124020000000045, 0.00011152700000000015, 0.00011231899999999961, 0.00011226400000000081, 0.00011200000000000099, 0.0001124299999999967, 0.00011081899999999811, 0.00011265300000000422, 0.00011187500000000433, 0.00011241700000000354, 0.00011245900000000225, 0.00011197300000000132, 0.00011137499999999689, 0.00011165199999999681, 0.00011149999999999355, 0.00011226399999999387, 0.00011244400000000321, 0.0001120549999999998, 0.00011263899999999771, 0.00011201400000000056, 0.00011218100000000286, 0.00011193099999999567, 0.00011227800000000038, 0.00011251400000000106, 0.00011212499999999764, 0.00011120800000000153, 0.00011258299999999943, 0.00011170800000000203, 0.0001113890000000034, 0.00011220799999999559, 0.00011186099999999782, 0.000111902000000004]</msg>
<status status="PASS" starttime="20201029 18:20:10.743" endtime="20201029 18:20:10.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.731" endtime="20201029 18:20:10.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:10.758" endtime="20201029 18:20:10.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.754" endtime="20201029 18:20:10.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.751" endtime="20201029 18:20:10.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.266" endtime="20201029 18:20:10.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.265" endtime="20201029 18:20:10.783"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.805" endtime="20201029 18:20:10.826"></status>
</kw>
<msg timestamp="20201029 18:20:10.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:10.802" endtime="20201029 18:20:10.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:10.829" endtime="20201029 18:20:10.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.836" endtime="20201029 18:20:10.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.795" endtime="20201029 18:20:10.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.789" endtime="20201029 18:20:10.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.858" endtime="20201029 18:20:11.195"></status>
</kw>
<msg timestamp="20201029 18:20:11.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038871139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038983306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:10.855" endtime="20201029 18:20:11.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038871139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038983306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:11.205" endtime="20201029 18:20:11.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.223" endtime="20201029 18:20:11.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.848" endtime="20201029 18:20:11.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.844" endtime="20201029 18:20:11.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:11.240" level="INFO">${RESULT} = [{'diff': 0.00011216700000000329}, {'diff': 0.00011313900000000515}, {'diff': 0.00011312499999999864}, {'diff': 0.00011200000000000099}, {'diff': 0.000113597}, {'diff': 0.00011319500000000343}, {'diff...</msg>
<status status="PASS" starttime="20201029 18:20:11.231" endtime="20201029 18:20:11.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:11.249" level="INFO">${ACCURACY} = {'diff': [0.00011216700000000329, 0.00011313900000000515, 0.00011312499999999864, 0.00011200000000000099, 0.000113597, 0.00011319500000000343, 0.00011361099999999957, 0.00011269400000000346, 0.0001135...</msg>
<status status="PASS" starttime="20201029 18:20:11.242" endtime="20201029 18:20:11.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.259" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:20:11.257" endtime="20201029 18:20:11.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.265" level="INFO">VALUE: [0.00011216700000000329, 0.00011313900000000515, 0.00011312499999999864, 0.00011200000000000099, 0.000113597, 0.00011319500000000343, 0.00011361099999999957, 0.00011269400000000346, 0.0001135420000000012, 0.0001125420000000002, 0.00011245900000000225, 0.00011315300000000472, 0.00011284799999999873, 0.00011354100000000172, 0.00011327699999999497, 0.0001134169999999976, 0.00011229199999999995, 0.00011284699999999925, 0.00011308399999999941, 0.00011270799999999609, 0.00011230500000000004, 0.00011323600000000267, 0.00011320799999999659, 0.00011308399999999941, 0.00011295800000000328, 0.00011273600000000217, 0.00011351400000000206, 0.00011323599999999573, 0.00011250000000000149, 0.00011332000000000009, 0.0001133749999999989, 0.00011283299999999968, 0.00011287500000000533, 0.00011323600000000267, 0.00011325000000000224, 0.0001128749999999984, 0.00011330500000000104, 0.00011229199999999995, 0.00011348600000000292, 0.00011344399999999727, 0.00011233300000000612, 0.0001133749999999989, 0.00011275000000000174, 0.0001130550000000008, 0.00011344399999999727, 0.000113597, 0.00011294499999999624, 0.00011327799999999444, 0.00011233299999999918, 0.00011313900000000515]</msg>
<status status="PASS" starttime="20201029 18:20:11.262" endtime="20201029 18:20:11.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.250" endtime="20201029 18:20:11.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:11.277" endtime="20201029 18:20:11.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.273" endtime="20201029 18:20:11.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.270" endtime="20201029 18:20:11.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.785" endtime="20201029 18:20:11.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.784" endtime="20201029 18:20:11.302"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.324" endtime="20201029 18:20:11.347"></status>
</kw>
<msg timestamp="20201029 18:20:11.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:11.321" endtime="20201029 18:20:11.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:11.350" endtime="20201029 18:20:11.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.357" endtime="20201029 18:20:11.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.314" endtime="20201029 18:20:11.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.308" endtime="20201029 18:20:11.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.381" endtime="20201029 18:20:11.715"></status>
</kw>
<msg timestamp="20201029 18:20:11.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040535028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040649708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:11.377" endtime="20201029 18:20:11.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040535028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040649708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:11.725" endtime="20201029 18:20:11.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.743" endtime="20201029 18:20:11.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.370" endtime="20201029 18:20:11.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.365" endtime="20201029 18:20:11.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:11.760" level="INFO">${RESULT} = [{'diff': 0.00011467999999999895}, {'diff': 0.00011368100000000436}, {'diff': 0.00011333399999999966}, {'diff': 0.00011436100000000032}, {'diff': 0.00011401299999999615}, {'diff': 0.000114264000000002...</msg>
<status status="PASS" starttime="20201029 18:20:11.751" endtime="20201029 18:20:11.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:11.769" level="INFO">${ACCURACY} = {'diff': [0.00011467999999999895, 0.00011368100000000436, 0.00011333399999999966, 0.00011436100000000032, 0.00011401299999999615, 0.00011426400000000281, 0.00011434700000000075, 0.00011440300000000597...</msg>
<status status="PASS" starttime="20201029 18:20:11.762" endtime="20201029 18:20:11.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.779" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:20:11.777" endtime="20201029 18:20:11.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.785" level="INFO">VALUE: [0.00011467999999999895, 0.00011368100000000436, 0.00011333399999999966, 0.00011436100000000032, 0.00011401299999999615, 0.00011426400000000281, 0.00011434700000000075, 0.00011440300000000597, 0.00011440299999999903, 0.00011345799999999684, 0.0001143749999999999, 0.0001145550000000023, 0.00011394499999999724, 0.0001140420000000017, 0.00011462500000000014, 0.00011347200000000335, 0.00011417999999999845, 0.00011420800000000453, 0.00011448599999999698, 0.00011406900000000136, 0.000114082999999994, 0.00011408400000000041, 0.00011405600000000127, 0.0001134299999999977, 0.00011459800000000048, 0.00011450000000000349, 0.0001145420000000022, 0.00011318000000000439, 0.00011423600000000367, 0.00011417999999999845, 0.00011283299999999968, 0.00011404100000000222, 0.00011440299999999903, 0.000114597000000001, 0.00011452799999999569, 0.00011380600000000102, 0.00011386099999999982, 0.00011377800000000188, 0.00011430500000000204, 0.00011412499999999964, 0.00011429200000000195, 0.00011283399999999916, 0.00011372199999999666, 0.00011369399999999752, 0.00011448600000000392, 0.00011326399999999487, 0.00011426400000000281, 0.0001139169999999981, 0.00011434700000000075, 0.00011461200000000005]</msg>
<status status="PASS" starttime="20201029 18:20:11.782" endtime="20201029 18:20:11.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.770" endtime="20201029 18:20:11.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:11.798" endtime="20201029 18:20:11.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.793" endtime="20201029 18:20:11.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.790" endtime="20201029 18:20:11.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.304" endtime="20201029 18:20:11.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.303" endtime="20201029 18:20:11.823"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.846" endtime="20201029 18:20:11.867"></status>
</kw>
<msg timestamp="20201029 18:20:11.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:11.843" endtime="20201029 18:20:11.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:11.870" endtime="20201029 18:20:11.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.876" endtime="20201029 18:20:11.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.835" endtime="20201029 18:20:11.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.830" endtime="20201029 18:20:11.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.899" endtime="20201029 18:20:12.235"></status>
</kw>
<msg timestamp="20201029 18:20:12.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039053056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039167778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:11.896" endtime="20201029 18:20:12.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039053056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039167778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:12.245" endtime="20201029 18:20:12.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.263" endtime="20201029 18:20:12.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.889" endtime="20201029 18:20:12.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.884" endtime="20201029 18:20:12.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:12.280" level="INFO">${RESULT} = [{'diff': 0.00011472199999999766}, {'diff': 0.00011501399999999662}, {'diff': 0.00011529199999999601}, {'diff': 0.00011430600000000152}, {'diff': 0.00011495799999999834}, {'diff': 0.000115000000000003...</msg>
<status status="PASS" starttime="20201029 18:20:12.271" endtime="20201029 18:20:12.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:12.290" level="INFO">${ACCURACY} = {'diff': [0.00011472199999999766, 0.00011501399999999662, 0.00011529199999999601, 0.00011430600000000152, 0.00011495799999999834, 0.00011500000000000399, 0.00011493099999999867, 0.00011520899999999806...</msg>
<status status="PASS" starttime="20201029 18:20:12.282" endtime="20201029 18:20:12.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.301" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:20:12.298" endtime="20201029 18:20:12.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.306" level="INFO">VALUE: [0.00011472199999999766, 0.00011501399999999662, 0.00011529199999999601, 0.00011430600000000152, 0.00011495799999999834, 0.00011500000000000399, 0.00011493099999999867, 0.00011520899999999806, 0.00011463899999999971, 0.00011551400000000406, 0.00011523600000000467, 0.0001149169999999991, 0.00011497199999999791, 0.0001147220000000046, 0.00011512500000000064, 0.00011561100000000157, 0.00011449999999999655, 0.0001148750000000004, 0.00011467999999999895, 0.00011475000000000374, 0.00011518100000000586, 0.00011494500000000518, 0.00011527800000000338, 0.00011477799999999594, 0.00011490299999999953, 0.00011502700000000365, 0.00011544499999999874, 0.00011543099999999917, 0.00011556900000000286, 0.00011522199999999816, 0.00011479099999999604, 0.00011504199999999576, 0.00011513900000000021, 0.00011537499999999395, 0.00011508300000000193, 0.00011493099999999867, 0.00011422199999999716, 0.00011495799999999834, 0.00011558300000000243, 0.00011561099999999463, 0.00011491700000000604, 0.0001153750000000009, 0.00011466699999999885, 0.00011473599999999723, 0.0001148750000000004, 0.00011494399999999877, 0.00011507000000000184, 0.00011550000000000449, 0.00011395799999999734, 0.00011550000000000449]</msg>
<status status="PASS" starttime="20201029 18:20:12.303" endtime="20201029 18:20:12.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.292" endtime="20201029 18:20:12.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:12.318" endtime="20201029 18:20:12.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.314" endtime="20201029 18:20:12.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.312" endtime="20201029 18:20:12.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.826" endtime="20201029 18:20:12.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.824" endtime="20201029 18:20:12.343"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.366" endtime="20201029 18:20:12.387"></status>
</kw>
<msg timestamp="20201029 18:20:12.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:12.362" endtime="20201029 18:20:12.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:12.390" endtime="20201029 18:20:12.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.397" endtime="20201029 18:20:12.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.355" endtime="20201029 18:20:12.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.350" endtime="20201029 18:20:12.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.420" endtime="20201029 18:20:12.758"></status>
</kw>
<msg timestamp="20201029 18:20:12.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039405958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039522528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:12.417" endtime="20201029 18:20:12.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039405958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039522528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:12.767" endtime="20201029 18:20:12.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.785" endtime="20201029 18:20:12.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.410" endtime="20201029 18:20:12.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.405" endtime="20201029 18:20:12.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:12.802" level="INFO">${RESULT} = [{'diff': 0.00011657000000000334}, {'diff': 0.00011661099999999563}, {'diff': 0.0001163750000000019}, {'diff': 0.00011641600000000113}, {'diff': 0.00011647199999999941}, {'diff': 0.0001159579999999993...</msg>
<status status="PASS" starttime="20201029 18:20:12.793" endtime="20201029 18:20:12.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:12.812" level="INFO">${ACCURACY} = {'diff': [0.00011657000000000334, 0.00011661099999999563, 0.0001163750000000019, 0.00011641600000000113, 0.00011647199999999941, 0.00011595799999999934, 0.00011594400000000671, 0.00011479199999999551,...</msg>
<status status="PASS" starttime="20201029 18:20:12.804" endtime="20201029 18:20:12.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.823" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:20:12.821" endtime="20201029 18:20:12.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.828" level="INFO">VALUE: [0.00011657000000000334, 0.00011661099999999563, 0.0001163750000000019, 0.00011641600000000113, 0.00011647199999999941, 0.00011595799999999934, 0.00011594400000000671, 0.00011479199999999551, 0.00011565300000000028, 0.00011570899999999856, 0.000115597000000002, 0.00011612500000000164, 0.00011658300000000343, 0.00011651399999999812, 0.00011562500000000114, 0.00011665300000000128, 0.0001164300000000007, 0.00011563900000000071, 0.00011591599999999369, 0.00011612500000000164, 0.0001164170000000006, 0.00011576399999999737, 0.00011620799999999959, 0.00011608399999999547, 0.00011615200000000131, 0.00011593099999999967, 0.00011569499999999899, 0.00011645799999999984, 0.00011601399999999762, 0.00011629200000000395, 0.00011598699999999795, 0.00011636100000000232, 0.00011640300000000103, 0.0001162499999999983, 0.00011579199999999651, 0.00011630500000000404, 0.00011648599999999898, 0.00011649999999999855, 0.00011605499999999686, 0.00011582000000000259, 0.00011649999999999855, 0.0001165420000000042, 0.00011619499999999949, 0.00011620799999999959, 0.00011602699999999772, 0.00011633299999999624, 0.00011512500000000064, 0.0001159170000000001, 0.00011636099999999538, 0.00011566699999999985]</msg>
<status status="PASS" starttime="20201029 18:20:12.825" endtime="20201029 18:20:12.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.814" endtime="20201029 18:20:12.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:12.841" endtime="20201029 18:20:12.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.837" endtime="20201029 18:20:12.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.834" endtime="20201029 18:20:12.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.345" endtime="20201029 18:20:12.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.344" endtime="20201029 18:20:12.866"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.888" endtime="20201029 18:20:12.909"></status>
</kw>
<msg timestamp="20201029 18:20:12.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:12.885" endtime="20201029 18:20:12.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:12.913" endtime="20201029 18:20:12.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.919" endtime="20201029 18:20:12.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.878" endtime="20201029 18:20:12.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.872" endtime="20201029 18:20:12.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.942" endtime="20201029 18:20:13.277"></status>
</kw>
<msg timestamp="20201029 18:20:13.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039167472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039283625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:12.938" endtime="20201029 18:20:13.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039167472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039283625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.287" endtime="20201029 18:20:13.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.305" endtime="20201029 18:20:13.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.931" endtime="20201029 18:20:13.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.927" endtime="20201029 18:20:13.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:13.322" level="INFO">${RESULT} = [{'diff': 0.00011615300000000078}, {'diff': 0.00011722200000000016}, {'diff': 0.00011758300000000443}, {'diff': 0.0001167629999999989}, {'diff': 0.00011744500000000074}, {'diff': 0.0001166380000000022...</msg>
<status status="PASS" starttime="20201029 18:20:13.313" endtime="20201029 18:20:13.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:13.331" level="INFO">${ACCURACY} = {'diff': [0.00011615300000000078, 0.00011722200000000016, 0.00011758300000000443, 0.0001167629999999989, 0.00011744500000000074, 0.00011663800000000224, 0.00011676399999999837, 0.00011698599999999948,...</msg>
<status status="PASS" starttime="20201029 18:20:13.324" endtime="20201029 18:20:13.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.342" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:20:13.340" endtime="20201029 18:20:13.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.347" level="INFO">VALUE: [0.00011615300000000078, 0.00011722200000000016, 0.00011758300000000443, 0.0001167629999999989, 0.00011744500000000074, 0.00011663800000000224, 0.00011676399999999837, 0.00011698599999999948, 0.00011698599999999948, 0.00011715300000000178, 0.00011761099999999663, 0.00011734700000000375, 0.00011719500000000049, 0.00011611100000000207, 0.0001175699999999974, 0.00011648599999999898, 0.00011720900000000006, 0.00011709699999999656, 0.00011688900000000196, 0.00011638899999999452, 0.00011726400000000581, 0.0001173049999999981, 0.00011723599999999973, 0.00011755600000000477, 0.000117597000000004, 0.00011722299999999963, 0.00011683299999999675, 0.00011648599999999898, 0.0001175699999999974, 0.00011737499999999595, 0.00011688900000000196, 0.00011615300000000078, 0.00011726399999999887, 0.00011694500000000024, 0.00011690200000000206, 0.00011684800000000273, 0.0001161249999999947, 0.00011672299999999913, 0.00011745800000000084, 0.00011697199999999991, 0.00011686099999999588, 0.00011702799999999819, 0.00011682000000000359, 0.00011713900000000221, 0.00011595899999999881, 0.00011615300000000078, 0.00011676399999999837, 0.00011752799999999869, 0.00011745800000000084, 0.00011756900000000486]</msg>
<status status="PASS" starttime="20201029 18:20:13.344" endtime="20201029 18:20:13.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.333" endtime="20201029 18:20:13.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:13.360" endtime="20201029 18:20:13.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.355" endtime="20201029 18:20:13.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.353" endtime="20201029 18:20:13.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.868" endtime="20201029 18:20:13.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.867" endtime="20201029 18:20:13.385"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.408" endtime="20201029 18:20:13.435"></status>
</kw>
<msg timestamp="20201029 18:20:13.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.404" endtime="20201029 18:20:13.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.438" endtime="20201029 18:20:13.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.445" endtime="20201029 18:20:13.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.397" endtime="20201029 18:20:13.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.391" endtime="20201029 18:20:13.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.468" endtime="20201029 18:20:13.801"></status>
</kw>
<msg timestamp="20201029 18:20:13.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045776014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045894319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.464" endtime="20201029 18:20:13.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045776014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045894319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.810" endtime="20201029 18:20:13.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.828" endtime="20201029 18:20:13.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.457" endtime="20201029 18:20:13.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.453" endtime="20201029 18:20:13.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:13.845" level="INFO">${RESULT} = [{'diff': 0.00011830500000000604}, {'diff': 0.00011811099999999713}, {'diff': 0.00011770800000000109}, {'diff': 0.00011834699999999782}, {'diff': 0.00011698599999999948}, {'diff': 0.000118387999999997...</msg>
<status status="PASS" starttime="20201029 18:20:13.837" endtime="20201029 18:20:13.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:13.854" level="INFO">${ACCURACY} = {'diff': [0.00011830500000000604, 0.00011811099999999713, 0.00011770800000000109, 0.00011834699999999782, 0.00011698599999999948, 0.00011838799999999705, 0.00011826399999999987, 0.00011801399999999962...</msg>
<status status="PASS" starttime="20201029 18:20:13.847" endtime="20201029 18:20:13.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.865" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:20:13.863" endtime="20201029 18:20:13.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.870" level="INFO">VALUE: [0.00011830500000000604, 0.00011811099999999713, 0.00011770800000000109, 0.00011834699999999782, 0.00011698599999999948, 0.00011838799999999705, 0.00011826399999999987, 0.00011801399999999962, 0.00011829200000000595, 0.00011719500000000049, 0.0001179029999999956, 0.00011777800000000588, 0.00011823600000000073, 0.00011822200000000116, 0.00011840300000000303, 0.0001187370000000007, 0.0001178750000000034, 0.00011845800000000184, 0.00011855599999999883, 0.00011854199999999926, 0.00011795900000000081, 0.00011830599999999858, 0.00011795800000000134, 0.00011794400000000177, 0.00011844400000000227, 0.00011800000000000005, 0.00011769400000000152, 0.00011823599999999379, 0.00011806899999999843, 0.00011729199999999801, 0.0001179170000000021, 0.00011767999999999501, 0.00011841699999999566, 0.0001184579999999949, 0.00011826399999999987, 0.00011733399999999672, 0.00011773600000000023, 0.00011830599999999858, 0.00011865300000000328, 0.00011854199999999926, 0.00011809699999999757, 0.00011777699999999947, 0.0001182500000000003, 0.0001177499999999998, 0.00011773600000000023, 0.00011798600000000048, 0.00011856899999999893, 0.00011827799999999944, 0.0001185699999999984, 0.00011845900000000131]</msg>
<status status="PASS" starttime="20201029 18:20:13.867" endtime="20201029 18:20:13.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.856" endtime="20201029 18:20:13.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:13.884" endtime="20201029 18:20:13.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.878" endtime="20201029 18:20:13.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.876" endtime="20201029 18:20:13.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.387" endtime="20201029 18:20:13.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.386" endtime="20201029 18:20:13.909"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.931" endtime="20201029 18:20:13.952"></status>
</kw>
<msg timestamp="20201029 18:20:13.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.928" endtime="20201029 18:20:13.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.956" endtime="20201029 18:20:13.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.962" endtime="20201029 18:20:13.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.921" endtime="20201029 18:20:13.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.915" endtime="20201029 18:20:13.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.985" endtime="20201029 18:20:14.320"></status>
</kw>
<msg timestamp="20201029 18:20:14.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03892025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039039667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:13.982" endtime="20201029 18:20:14.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03892025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039039667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:14.329" endtime="20201029 18:20:14.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.347" endtime="20201029 18:20:14.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.975" endtime="20201029 18:20:14.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.970" endtime="20201029 18:20:14.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:14.364" level="INFO">${RESULT} = [{'diff': 0.00011941699999999666}, {'diff': 0.00011926400000000087}, {'diff': 0.00011893099999999573}, {'diff': 0.0001183049999999991}, {'diff': 0.00011952799999999375}, {'diff': 0.0001181519999999963...</msg>
<status status="PASS" starttime="20201029 18:20:14.356" endtime="20201029 18:20:14.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:14.375" level="INFO">${ACCURACY} = {'diff': [0.00011941699999999666, 0.00011926400000000087, 0.00011893099999999573, 0.0001183049999999991, 0.00011952799999999375, 0.00011815199999999637, 0.00011900000000000105, 0.00011919400000000302,...</msg>
<status status="PASS" starttime="20201029 18:20:14.366" endtime="20201029 18:20:14.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.385" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:20:14.383" endtime="20201029 18:20:14.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.390" level="INFO">VALUE: [0.00011941699999999666, 0.00011926400000000087, 0.00011893099999999573, 0.0001183049999999991, 0.00011952799999999375, 0.00011815199999999637, 0.00011900000000000105, 0.00011919400000000302, 0.00011950000000000155, 0.0001189029999999966, 0.00011952800000000069, 0.00011902800000000019, 0.0001191950000000025, 0.0001192500000000013, 0.00011869499999999505, 0.00011841599999999619, 0.00011877700000000047, 0.00011927800000000044, 0.00011934699999999882, 0.00011966700000000385, 0.00011888899999999702, 0.00011952800000000069, 0.0001194170000000036, 0.00011926400000000087, 0.0001188049999999996, 0.00011905600000000627, 0.00011956899999999993, 0.00011797300000000038, 0.0001195829999999995, 0.00011902800000000019, 0.00011930599999999958, 0.00011918100000000292, 0.00011949999999999461, 0.00011963900000000471, 0.00011879100000000004, 0.00011872200000000166, 0.0001191249999999977, 0.0001195699999999994, 0.00011936100000000532, 0.00011872300000000113, 0.00011870800000000209, 0.00011813900000000321, 0.00011911099999999814, 0.00011931999999999915, 0.00011870799999999515, 0.00011944500000000274, 0.00011951400000000112, 0.0001184170000000026, 0.00011906899999999943, 0.00011958399999999897]</msg>
<status status="PASS" starttime="20201029 18:20:14.387" endtime="20201029 18:20:14.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.376" endtime="20201029 18:20:14.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:14.408" endtime="20201029 18:20:14.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.403" endtime="20201029 18:20:14.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.401" endtime="20201029 18:20:14.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.911" endtime="20201029 18:20:14.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.910" endtime="20201029 18:20:14.432"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.456" endtime="20201029 18:20:14.477"></status>
</kw>
<msg timestamp="20201029 18:20:14.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.453" endtime="20201029 18:20:14.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.481" endtime="20201029 18:20:14.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.487" endtime="20201029 18:20:14.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.445" endtime="20201029 18:20:14.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.439" endtime="20201029 18:20:14.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.510" endtime="20201029 18:20:14.875"></status>
</kw>
<msg timestamp="20201029 18:20:14.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040507931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040628347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.507" endtime="20201029 18:20:14.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040507931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040628347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.884" endtime="20201029 18:20:14.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.903" endtime="20201029 18:20:14.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.500" endtime="20201029 18:20:14.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.495" endtime="20201029 18:20:14.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:14.920" level="INFO">${RESULT} = [{'diff': 0.00012041600000000513}, {'diff': 0.00012054200000000126}, {'diff': 0.0001197630000000019}, {'diff': 0.00011969499999999605}, {'diff': 0.00012045899999999637}, {'diff': 0.0001192220000000021...</msg>
<status status="PASS" starttime="20201029 18:20:14.912" endtime="20201029 18:20:14.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:14.931" level="INFO">${ACCURACY} = {'diff': [0.00012041600000000513, 0.00012054200000000126, 0.0001197630000000019, 0.00011969499999999605, 0.00012045899999999637, 0.00011922200000000216, 0.00012029200000000101, 0.00011973599999999529,...</msg>
<status status="PASS" starttime="20201029 18:20:14.923" endtime="20201029 18:20:14.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.943" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:20:14.940" endtime="20201029 18:20:14.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.948" level="INFO">VALUE: [0.00012041600000000513, 0.00012054200000000126, 0.0001197630000000019, 0.00011969499999999605, 0.00012045899999999637, 0.00011922200000000216, 0.00012029200000000101, 0.00011973599999999529, 0.0001199029999999976, 0.00011972200000000266, 0.000119695000000003, 0.00011980600000000008, 0.00012063899999999877, 0.00012008399999999947, 0.00011992999999999726, 0.00012059799999999954, 0.0001199170000000041, 0.00011981999999999965, 0.00011974999999999486, 0.00011898600000000148, 0.00011977700000000147, 0.00012031900000000068, 0.00012026400000000187, 0.00012061099999999964, 0.00012040199999999862, 0.00012022199999999622, 0.00012051400000000212, 0.00012043099999999723, 0.00011981900000000018, 0.00012045900000000331, 0.00012029200000000101, 0.00012030600000000058, 0.00011988899999999802, 0.00012043100000000417, 0.00011916700000000335, 0.00012024999999999536, 0.00012026400000000187, 0.00012022200000000316, 0.00012048599999999604, 0.00012023600000000273, 0.00011994400000000377, 0.00012065199999999887, 0.00012027800000000144, 0.00011997200000000291, 0.00012020800000000359, 0.0001197500000000018, 0.0001202630000000024, 0.00012020899999999612, 0.00011970800000000309, 0.00012018000000000445]</msg>
<status status="PASS" starttime="20201029 18:20:14.945" endtime="20201029 18:20:14.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.933" endtime="20201029 18:20:14.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:14.961" endtime="20201029 18:20:14.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.957" endtime="20201029 18:20:14.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.954" endtime="20201029 18:20:14.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.435" endtime="20201029 18:20:14.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.433" endtime="20201029 18:20:14.987"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.010" endtime="20201029 18:20:15.034"></status>
</kw>
<msg timestamp="20201029 18:20:15.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.007" endtime="20201029 18:20:15.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.038" endtime="20201029 18:20:15.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.044" endtime="20201029 18:20:15.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.999" endtime="20201029 18:20:15.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.993" endtime="20201029 18:20:15.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.068" endtime="20201029 18:20:15.430"></status>
</kw>
<msg timestamp="20201029 18:20:15.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040787625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040909139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.065" endtime="20201029 18:20:15.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040787625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040909139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.439" endtime="20201029 18:20:15.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.458" endtime="20201029 18:20:15.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.057" endtime="20201029 18:20:15.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.052" endtime="20201029 18:20:15.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:15.476" level="INFO">${RESULT} = [{'diff': 0.00012151399999999618}, {'diff': 0.00012093099999999773}, {'diff': 0.00012134699999999388}, {'diff': 0.00012108400000000047}, {'diff': 0.0001207500000000028}, {'diff': 0.0001201250000000056...</msg>
<status status="PASS" starttime="20201029 18:20:15.467" endtime="20201029 18:20:15.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:15.486" level="INFO">${ACCURACY} = {'diff': [0.00012151399999999618, 0.00012093099999999773, 0.00012134699999999388, 0.00012108400000000047, 0.0001207500000000028, 0.00012012500000000564, 0.00012067999999999801, 0.00012080600000000108,...</msg>
<status status="PASS" starttime="20201029 18:20:15.478" endtime="20201029 18:20:15.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.498" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:20:15.495" endtime="20201029 18:20:15.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.504" level="INFO">VALUE: [0.00012151399999999618, 0.00012093099999999773, 0.00012134699999999388, 0.00012108400000000047, 0.0001207500000000028, 0.00012012500000000564, 0.00012067999999999801, 0.00012080600000000108, 0.00012070800000000409, 0.00012018000000000445, 0.00012097300000000338, 0.00012158299999999456, 0.00012143099999999823, 0.00012047199999999647, 0.0001214029999999991, 0.00012122199999999722, 0.00012134700000000082, 0.00012152700000000322, 0.00012136100000000039, 0.00012047299999999594, 0.0001210700000000009, 0.00012076400000000237, 0.00012161100000000064, 0.00012081900000000118, 0.00012111199999999961, 0.00012129200000000201, 0.00012095800000000434, 0.00012098599999999654, 0.00012169399999999858, 0.00012091599999999869, 0.00012077800000000194, 0.00012126400000000287, 0.00012138800000000005, 0.0001209029999999986, 0.00012156900000000193, 0.00012134800000000029, 0.00012152699999999628, 0.00012120799999999765, 0.00012145800000000484, 0.00011998600000000248, 0.00012048700000000245, 0.00012166699999999891, 0.00012113900000000621, 0.00012111100000000014, 0.00012141599999999919, 0.00012140199999999962, 0.0001215700000000014, 0.00012144399999999833, 0.00012090199999999912, 0.00012152799999999575]</msg>
<status status="PASS" starttime="20201029 18:20:15.500" endtime="20201029 18:20:15.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.488" endtime="20201029 18:20:15.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:15.517" endtime="20201029 18:20:15.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.512" endtime="20201029 18:20:15.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.510" endtime="20201029 18:20:15.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.989" endtime="20201029 18:20:15.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.988" endtime="20201029 18:20:15.542"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.566" endtime="20201029 18:20:15.591"></status>
</kw>
<msg timestamp="20201029 18:20:15.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.562" endtime="20201029 18:20:15.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.595" endtime="20201029 18:20:15.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.602" endtime="20201029 18:20:15.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.555" endtime="20201029 18:20:15.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.549" endtime="20201029 18:20:15.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.625" endtime="20201029 18:20:15.987"></status>
</kw>
<msg timestamp="20201029 18:20:15.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042338514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042460583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.622" endtime="20201029 18:20:15.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042338514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042460583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.997" endtime="20201029 18:20:16.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.016" endtime="20201029 18:20:16.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.615" endtime="20201029 18:20:16.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.610" endtime="20201029 18:20:16.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:16.033" level="INFO">${RESULT} = [{'diff': 0.00012206900000000243}, {'diff': 0.00012176399999999643}, {'diff': 0.00012170899999999762}, {'diff': 0.00012224999999999736}, {'diff': 0.00012200000000000405}, {'diff': 0.000121902999999999...</msg>
<status status="PASS" starttime="20201029 18:20:16.024" endtime="20201029 18:20:16.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:16.042" level="INFO">${ACCURACY} = {'diff': [0.00012206900000000243, 0.00012176399999999643, 0.00012170899999999762, 0.00012224999999999736, 0.00012200000000000405, 0.0001219029999999996, 0.00012273699999999776, 0.00012263900000000078,...</msg>
<status status="PASS" starttime="20201029 18:20:16.035" endtime="20201029 18:20:16.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.054" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:20:16.051" endtime="20201029 18:20:16.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.059" level="INFO">VALUE: [0.00012206900000000243, 0.00012176399999999643, 0.00012170899999999762, 0.00012224999999999736, 0.00012200000000000405, 0.0001219029999999996, 0.00012273699999999776, 0.00012263900000000078, 0.00012181899999999524, 0.00012263900000000078, 0.00012204099999999635, 0.00012191599999999969, 0.0001223050000000031, 0.00012245899999999837, 0.0001225129999999977, 0.00012252799999999675, 0.0001224160000000002, 0.00012226400000000387, 0.0001218050000000026, 0.0001226250000000012, 0.00012118100000000492, 0.00012118099999999798, 0.0001221799999999995, 0.00012256999999999546, 0.0001224030000000001, 0.00012230600000000258, 0.00012193099999999873, 0.00012187500000000046, 0.0001218050000000026, 0.00012198599999999754, 0.00012169499999999805, 0.00012226399999999693, 0.00012097199999999697, 0.0001221250000000007, 0.00012247199999999847, 0.00012167999999999901, 0.00012224999999999736, 0.00012226399999999693, 0.00012223600000000473, 0.00012256900000000293, 0.00012251399999999718, 0.0001222359999999978, 0.00012169399999999858, 0.0001225700000000024, 0.00012223600000000473, 0.00012168099999999848, 0.00012100000000000305, 0.00012150000000000355, 0.00012184800000000079, 0.00012259700000000207]</msg>
<status status="PASS" starttime="20201029 18:20:16.056" endtime="20201029 18:20:16.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.044" endtime="20201029 18:20:16.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:16.074" endtime="20201029 18:20:16.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.067" endtime="20201029 18:20:16.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.065" endtime="20201029 18:20:16.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.544" endtime="20201029 18:20:16.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.543" endtime="20201029 18:20:16.099"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.122" endtime="20201029 18:20:16.147"></status>
</kw>
<msg timestamp="20201029 18:20:16.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.119" endtime="20201029 18:20:16.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.150" endtime="20201029 18:20:16.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.157" endtime="20201029 18:20:16.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.112" endtime="20201029 18:20:16.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.106" endtime="20201029 18:20:16.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.180" endtime="20201029 18:20:16.542"></status>
</kw>
<msg timestamp="20201029 18:20:16.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040541042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040662875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:16.177" endtime="20201029 18:20:16.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040541042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040662875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:16.552" endtime="20201029 18:20:16.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.570" endtime="20201029 18:20:16.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.170" endtime="20201029 18:20:16.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.165" endtime="20201029 18:20:16.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:16.588" level="INFO">${RESULT} = [{'diff': 0.00012183300000000175}, {'diff': 0.00012305499999999692}, {'diff': 0.000123680000000001}, {'diff': 0.0001233329999999963}, {'diff': 0.00012265199999999393}, {'diff': 0.00012295900000000581}...</msg>
<status status="PASS" starttime="20201029 18:20:16.579" endtime="20201029 18:20:16.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:16.599" level="INFO">${ACCURACY} = {'diff': [0.00012183300000000175, 0.00012305499999999692, 0.000123680000000001, 0.0001233329999999963, 0.00012265199999999393, 0.00012295900000000581, 0.00012370899999999962, 0.00012293000000000026, 0...</msg>
<status status="PASS" starttime="20201029 18:20:16.590" endtime="20201029 18:20:16.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.610" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:20:16.607" endtime="20201029 18:20:16.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.615" level="INFO">VALUE: [0.00012183300000000175, 0.00012305499999999692, 0.000123680000000001, 0.0001233329999999963, 0.00012265199999999393, 0.00012295900000000581, 0.00012370899999999962, 0.00012293000000000026, 0.00012272200000000566, 0.00012270799999999915, 0.00012280599999999614, 0.00012319400000000008, 0.00012286199999999442, 0.00012295899999999887, 0.0001234449999999998, 0.00012318099999999998, 0.000122777999999997, 0.00012329199999999707, 0.00012248599999999804, 0.00012319499999999955, 0.00012276399999999743, 0.00012291599999999375, 0.000123292000000004, 0.00012273600000000523, 0.00012345899999999937, 0.00012336100000000239, 0.00012286100000000189, 0.00012316699999999348, 0.00012315300000000085, 0.00012297199999999897, 0.00012309700000000257, 0.00012297199999999897, 0.00012348599999999904, 0.00012343100000000023, 0.0001230689999999965, 0.00012182000000000165, 0.00012329199999999707, 0.00012247199999999847, 0.0001236529999999944, 0.00012301400000000462, 0.00012197199999999797, 0.00012356900000000393, 0.00012366600000000144, 0.0001233480000000023, 0.00012269400000000652, 0.00012305499999999692, 0.00012311100000000214, 0.0001235559999999969, 0.000123083000000003, 0.0001231380000000018]</msg>
<status status="PASS" starttime="20201029 18:20:16.612" endtime="20201029 18:20:16.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.601" endtime="20201029 18:20:16.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:16.628" endtime="20201029 18:20:16.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.623" endtime="20201029 18:20:16.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.621" endtime="20201029 18:20:16.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.101" endtime="20201029 18:20:16.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.100" endtime="20201029 18:20:16.654"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.676" endtime="20201029 18:20:16.700"></status>
</kw>
<msg timestamp="20201029 18:20:16.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.673" endtime="20201029 18:20:16.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.703" endtime="20201029 18:20:16.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.710" endtime="20201029 18:20:16.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.666" endtime="20201029 18:20:16.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.660" endtime="20201029 18:20:16.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.733" endtime="20201029 18:20:17.084"></status>
</kw>
<msg timestamp="20201029 18:20:17.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040637014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040761306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:16.730" endtime="20201029 18:20:17.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040637014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040761306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:17.093" endtime="20201029 18:20:17.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.112" endtime="20201029 18:20:17.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.723" endtime="20201029 18:20:17.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.718" endtime="20201029 18:20:17.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:17.130" level="INFO">${RESULT} = [{'diff': 0.00012429199999999807}, {'diff': 0.00012404199999999782}, {'diff': 0.0001241800000000015}, {'diff': 0.00012363899999999484}, {'diff': 0.00012436100000000339}, {'diff': 0.0001244450000000008...</msg>
<status status="PASS" starttime="20201029 18:20:17.121" endtime="20201029 18:20:17.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:17.141" level="INFO">${ACCURACY} = {'diff': [0.00012429199999999807, 0.00012404199999999782, 0.0001241800000000015, 0.00012363899999999484, 0.00012436100000000339, 0.0001244450000000008, 0.00012451399999999918, 0.00012402799999999825, ...</msg>
<status status="PASS" starttime="20201029 18:20:17.132" endtime="20201029 18:20:17.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.152" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:20:17.150" endtime="20201029 18:20:17.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.157" level="INFO">VALUE: [0.00012429199999999807, 0.00012404199999999782, 0.0001241800000000015, 0.00012363899999999484, 0.00012436100000000339, 0.0001244450000000008, 0.00012451399999999918, 0.00012402799999999825, 0.00012430600000000458, 0.00012434699999999688, 0.00012366700000000092, 0.00012402799999999825, 0.0001242779999999985, 0.00012395899999999987, 0.00012436100000000339, 0.00012465300000000235, 0.00012400000000000605, 0.00012368100000000048, 0.00012461100000000364, 0.0001240559999999974, 0.00012409699999999663, 0.00012319499999999955, 0.0001246120000000031, 0.00012362499999999527, 0.0001242229999999997, 0.00012411100000000314, 0.00012384799999999585, 0.00012424999999999936, 0.00012419400000000108, 0.00012459700000000407, 0.00012348599999999904, 0.0001237359999999993, 0.00012387500000000246, 0.00012416600000000194, 0.00012418100000000099, 0.00012369500000000005, 0.0001242779999999985, 0.00012415300000000185, 0.0001241800000000015, 0.00012444400000000133, 0.0001242359999999998, 0.0001239999999999991, 0.00012448600000000004, 0.00012458299999999756, 0.00012316700000000042, 0.00012404099999999835, 0.00012461100000000364, 0.00012374999999999886, 0.0001232779999999975, 0.00012397199999999997]</msg>
<status status="PASS" starttime="20201029 18:20:17.154" endtime="20201029 18:20:17.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.142" endtime="20201029 18:20:17.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:17.170" endtime="20201029 18:20:17.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.166" endtime="20201029 18:20:17.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.163" endtime="20201029 18:20:17.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.656" endtime="20201029 18:20:17.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.654" endtime="20201029 18:20:17.195"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.219" endtime="20201029 18:20:17.242"></status>
</kw>
<msg timestamp="20201029 18:20:17.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:17.215" endtime="20201029 18:20:17.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:17.245" endtime="20201029 18:20:17.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.252" endtime="20201029 18:20:17.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.208" endtime="20201029 18:20:17.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.202" endtime="20201029 18:20:17.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.275" endtime="20201029 18:20:17.629"></status>
</kw>
<msg timestamp="20201029 18:20:17.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040415819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040540569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:17.272" endtime="20201029 18:20:17.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040415819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040540569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:17.639" endtime="20201029 18:20:17.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.658" endtime="20201029 18:20:17.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.265" endtime="20201029 18:20:17.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.260" endtime="20201029 18:20:17.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:17.675" level="INFO">${RESULT} = [{'diff': 0.00012474999999999986}, {'diff': 0.0001239999999999991}, {'diff': 0.0001254450000000018}, {'diff': 0.000124680000000002}, {'diff': 0.00012548600000000104}, {'diff': 0.00012476399999999943},...</msg>
<status status="PASS" starttime="20201029 18:20:17.666" endtime="20201029 18:20:17.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:17.684" level="INFO">${ACCURACY} = {'diff': [0.00012474999999999986, 0.0001239999999999991, 0.0001254450000000018, 0.000124680000000002, 0.00012548600000000104, 0.00012476399999999943, 0.0001254580000000019, 0.00012555499999999942, 0.0...</msg>
<status status="PASS" starttime="20201029 18:20:17.677" endtime="20201029 18:20:17.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.696" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:20:17.693" endtime="20201029 18:20:17.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.701" level="INFO">VALUE: [0.00012474999999999986, 0.0001239999999999991, 0.0001254450000000018, 0.000124680000000002, 0.00012548600000000104, 0.00012476399999999943, 0.0001254580000000019, 0.00012555499999999942, 0.00012400000000000605, 0.0001248879999999966, 0.00012561199999999717, 0.00012480599999999814, 0.00012384700000000332, 0.00012484699999999738, 0.0001249450000000013, 0.0001254580000000019, 0.0001253329999999983, 0.00012555499999999942, 0.00012531899999999874, 0.0001255000000000006, 0.00012476399999999943, 0.0001249580000000014, 0.0001246109999999967, 0.00012538900000000353, 0.00012468099999999455, 0.00012504099999999935, 0.0001249450000000013, 0.00012536099999999745, 0.00012515300000000285, 0.00012565300000000335, 0.00012476399999999943, 0.00012525000000000036, 0.00012519500000000156, 0.00012463899999999584, 0.00012465199999999593, 0.00012552799999999975, 0.00012406900000000443, 0.0001247920000000055, 0.00012520800000000165, 0.00012547200000000147, 0.00012516700000000242, 0.00012522200000000122, 0.00012547199999999453, 0.00012559699999999813, 0.00012486200000000336, 0.00012559699999999813, 0.000125568999999999, 0.00012525000000000036, 0.00012545899999999444, 0.0001254580000000019]</msg>
<status status="PASS" starttime="20201029 18:20:17.698" endtime="20201029 18:20:17.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.686" endtime="20201029 18:20:17.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:17.714" endtime="20201029 18:20:17.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.710" endtime="20201029 18:20:17.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.707" endtime="20201029 18:20:17.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.198" endtime="20201029 18:20:17.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.196" endtime="20201029 18:20:17.739"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.763" endtime="20201029 18:20:17.789"></status>
</kw>
<msg timestamp="20201029 18:20:17.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:17.759" endtime="20201029 18:20:17.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:17.792" endtime="20201029 18:20:17.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.799" endtime="20201029 18:20:17.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.752" endtime="20201029 18:20:17.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.746" endtime="20201029 18:20:17.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.823" endtime="20201029 18:20:18.184"></status>
</kw>
<msg timestamp="20201029 18:20:18.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042294389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042419736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:17.819" endtime="20201029 18:20:18.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042294389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042419736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:18.193" endtime="20201029 18:20:18.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.212" endtime="20201029 18:20:18.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.812" endtime="20201029 18:20:18.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.807" endtime="20201029 18:20:18.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:18.229" level="INFO">${RESULT} = [{'diff': 0.00012534699999999788}, {'diff': 0.00012566600000000344}, {'diff': 0.00012576400000000043}, {'diff': 0.00012567999999999607}, {'diff': 0.00012649999999999467}, {'diff': 0.000126152000000004...</msg>
<status status="PASS" starttime="20201029 18:20:18.221" endtime="20201029 18:20:18.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:18.239" level="INFO">${ACCURACY} = {'diff': [0.00012534699999999788, 0.00012566600000000344, 0.00012576400000000043, 0.00012567999999999607, 0.00012649999999999467, 0.00012615200000000437, 0.00012656999999999946, 0.0001255000000000006,...</msg>
<status status="PASS" starttime="20201029 18:20:18.232" endtime="20201029 18:20:18.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.250" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:20:18.247" endtime="20201029 18:20:18.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.255" level="INFO">VALUE: [0.00012534699999999788, 0.00012566600000000344, 0.00012576400000000043, 0.00012567999999999607, 0.00012649999999999467, 0.00012615200000000437, 0.00012656999999999946, 0.0001255000000000006, 0.0001263889999999976, 0.00012613899999999734, 0.00012497200000000097, 0.000125778, 0.00012638900000000453, 0.0001262910000000006, 0.00012654200000000032, 0.00012566699999999598, 0.00012551400000000018, 0.00012609699999999863, 0.0001256529999999964, 0.0001261109999999982, 0.00012643000000000376, 0.00012645899999999544, 0.00012640299999999716, 0.00012613900000000428, 0.00012625000000000136, 0.00012548600000000104, 0.00012643100000000324, 0.00012654200000000032, 0.0001248329999999978, 0.00012531899999999874, 0.00012515300000000285, 0.00012620899999999519, 0.0001265700000000064, 0.00012644499999999587, 0.00012595799999999546, 0.00012655500000000042, 0.00012618099999999605, 0.0001260689999999995, 0.00012611100000000514, 0.00012643000000000376, 0.00012630500000000017, 0.00012606999999999896, 0.00012513900000000328, 0.0001257360000000013, 0.0001263889999999976, 0.0001265559999999999, 0.00012634699999999888, 0.0001259580000000024, 0.00012569500000000206, 0.0001262780000000005]</msg>
<status status="PASS" starttime="20201029 18:20:18.252" endtime="20201029 18:20:18.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.241" endtime="20201029 18:20:18.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:18.270" endtime="20201029 18:20:18.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.264" endtime="20201029 18:20:18.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.261" endtime="20201029 18:20:18.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.741" endtime="20201029 18:20:18.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.740" endtime="20201029 18:20:18.295"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.319" endtime="20201029 18:20:18.343"></status>
</kw>
<msg timestamp="20201029 18:20:18.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:18.315" endtime="20201029 18:20:18.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:18.346" endtime="20201029 18:20:18.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.353" endtime="20201029 18:20:18.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.308" endtime="20201029 18:20:18.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.302" endtime="20201029 18:20:18.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.377" endtime="20201029 18:20:18.733"></status>
</kw>
<msg timestamp="20201029 18:20:18.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04071875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040845625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:18.373" endtime="20201029 18:20:18.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04071875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040845625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:18.742" endtime="20201029 18:20:18.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.761" endtime="20201029 18:20:18.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.366" endtime="20201029 18:20:18.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.361" endtime="20201029 18:20:18.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:18.779" level="INFO">${RESULT} = [{'diff': 0.00012687500000000546}, {'diff': 0.0001276529999999984}, {'diff': 0.00012687500000000546}, {'diff': 0.000127569000000001}, {'diff': 0.0001268889999999981}, {'diff': 0.00012747200000000347},...</msg>
<status status="PASS" starttime="20201029 18:20:18.770" endtime="20201029 18:20:18.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:18.794" level="INFO">${ACCURACY} = {'diff': [0.00012687500000000546, 0.0001276529999999984, 0.00012687500000000546, 0.000127569000000001, 0.0001268889999999981, 0.00012747200000000347, 0.00012694400000000383, 0.00012731900000000074, 0....</msg>
<status status="PASS" starttime="20201029 18:20:18.781" endtime="20201029 18:20:18.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.805" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:20:18.803" endtime="20201029 18:20:18.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.811" level="INFO">VALUE: [0.00012687500000000546, 0.0001276529999999984, 0.00012687500000000546, 0.000127569000000001, 0.0001268889999999981, 0.00012747200000000347, 0.00012694400000000383, 0.00012731900000000074, 0.00012722200000000322, 0.00012676400000000143, 0.00012745900000000338, 0.0001271109999999992, 0.00012758300000000056, 0.0001272910000000016, 0.00012744499999999687, 0.00012654100000000085, 0.00012768099999999755, 0.00012725000000000236, 0.00012759700000000013, 0.00012695899999999594, 0.00012765300000000535, 0.00012669499999999612, 0.00012687500000000546, 0.00012672199999999578, 0.0001269439999999969, 0.0001269439999999969, 0.00012742999999999782, 0.00012654200000000032, 0.0001274859999999961, 0.00012737499999999902, 0.00012692999999999732, 0.00012706999999999996, 0.00012705500000000092, 0.0001270690000000005, 0.00012716699999999748, 0.000127263999999995, 0.00012690299999999766, 0.0001272360000000028, 0.00012729099999999466, 0.00012722199999999628, 0.00012751399999999524, 0.00012717999999999757, 0.0001261250000000047, 0.0001274580000000039, 0.00012713900000000528, 0.00012741700000000467, 0.00012709699999999963, 0.000126680000000004, 0.00012737499999999902, 0.00012747200000000347]</msg>
<status status="PASS" starttime="20201029 18:20:18.807" endtime="20201029 18:20:18.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.795" endtime="20201029 18:20:18.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:18.823" endtime="20201029 18:20:18.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.819" endtime="20201029 18:20:18.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.816" endtime="20201029 18:20:18.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.297" endtime="20201029 18:20:18.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.296" endtime="20201029 18:20:18.849"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.872" endtime="20201029 18:20:18.895"></status>
</kw>
<msg timestamp="20201029 18:20:18.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:18.868" endtime="20201029 18:20:18.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:18.899" endtime="20201029 18:20:18.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.905" endtime="20201029 18:20:18.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.861" endtime="20201029 18:20:18.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.855" endtime="20201029 18:20:18.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.929" endtime="20201029 18:20:19.279"></status>
</kw>
<msg timestamp="20201029 18:20:19.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040459319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040587431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:18.926" endtime="20201029 18:20:19.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040459319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040587431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.288" endtime="20201029 18:20:19.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.307" endtime="20201029 18:20:19.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.918" endtime="20201029 18:20:19.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.914" endtime="20201029 18:20:19.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:19.325" level="INFO">${RESULT} = [{'diff': 0.00012811199999999967}, {'diff': 0.00012795900000000388}, {'diff': 0.00012834700000000088}, {'diff': 0.00012748700000000251}, {'diff': 0.00012838900000000653}, {'diff': 0.000128514000000003...</msg>
<status status="PASS" starttime="20201029 18:20:19.316" endtime="20201029 18:20:19.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:19.336" level="INFO">${ACCURACY} = {'diff': [0.00012811199999999967, 0.00012795900000000388, 0.00012834700000000088, 0.00012748700000000251, 0.00012838900000000653, 0.00012851400000000318, 0.0001287079999999982, 0.00012841699999999873,...</msg>
<status status="PASS" starttime="20201029 18:20:19.327" endtime="20201029 18:20:19.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.347" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:20:19.345" endtime="20201029 18:20:19.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.352" level="INFO">VALUE: [0.00012811199999999967, 0.00012795900000000388, 0.00012834700000000088, 0.00012748700000000251, 0.00012838900000000653, 0.00012851400000000318, 0.0001287079999999982, 0.00012841699999999873, 0.00012791599999999875, 0.00012831900000000174, 0.0001269309999999968, 0.00012826400000000293, 0.00012812499999999977, 0.0001284450000000048, 0.00012820899999999719, 0.00012769500000000406, 0.00012826400000000293, 0.00012863899999999984, 0.0001282079999999977, 0.00012845799999999796, 0.00012844499999999787, 0.0001285980000000006, 0.00012687500000000546, 0.0001280409999999954, 0.00012847199999999753, 0.00012790200000000612, 0.0001282360000000038, 0.00012758300000000056, 0.00012779200000000157, 0.00012836100000000045, 0.0001270000000000021, 0.00012769500000000406, 0.00012848600000000404, 0.00012819499999999762, 0.00012787499999999952, 0.0001268329999999998, 0.00012812499999999977, 0.00012837500000000002, 0.00012818099999999805, 0.00012786199999999942, 0.00012718099999999705, 0.0001285279999999958, 0.00012863899999999984, 0.00012826300000000346, 0.00012862500000000027, 0.00012794499999999737, 0.00012799999999999617, 0.0001279309999999978, 0.00012854199999999538, 0.00012845799999999796]</msg>
<status status="PASS" starttime="20201029 18:20:19.349" endtime="20201029 18:20:19.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.338" endtime="20201029 18:20:19.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:19.365" endtime="20201029 18:20:19.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.361" endtime="20201029 18:20:19.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.358" endtime="20201029 18:20:19.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.851" endtime="20201029 18:20:19.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.850" endtime="20201029 18:20:19.391"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.414" endtime="20201029 18:20:19.437"></status>
</kw>
<msg timestamp="20201029 18:20:19.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.410" endtime="20201029 18:20:19.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.441" endtime="20201029 18:20:19.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.447" endtime="20201029 18:20:19.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.403" endtime="20201029 18:20:19.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.397" endtime="20201029 18:20:19.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.471" endtime="20201029 18:20:19.824"></status>
</kw>
<msg timestamp="20201029 18:20:19.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040354153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040482958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.468" endtime="20201029 18:20:19.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040354153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040482958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.833" endtime="20201029 18:20:19.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.852" endtime="20201029 18:20:19.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.460" endtime="20201029 18:20:19.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.455" endtime="20201029 18:20:19.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:19.870" level="INFO">${RESULT} = [{'diff': 0.00012880500000000267}, {'diff': 0.00012954100000000385}, {'diff': 0.00012917999999999957}, {'diff': 0.0001288330000000018}, {'diff': 0.00012897300000000445}, {'diff': 0.0001289309999999988...</msg>
<status status="PASS" starttime="20201029 18:20:19.861" endtime="20201029 18:20:19.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:19.879" level="INFO">${ACCURACY} = {'diff': [0.00012880500000000267, 0.00012954100000000385, 0.00012917999999999957, 0.0001288330000000018, 0.00012897300000000445, 0.0001289309999999988, 0.00012927799999999656, 0.00012958300000000256, ...</msg>
<status status="PASS" starttime="20201029 18:20:19.872" endtime="20201029 18:20:19.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.890" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:20:19.888" endtime="20201029 18:20:19.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.895" level="INFO">VALUE: [0.00012880500000000267, 0.00012954100000000385, 0.00012917999999999957, 0.0001288330000000018, 0.00012897300000000445, 0.0001289309999999988, 0.00012927799999999656, 0.00012958300000000256, 0.00012941699999999973, 0.00012933299999999537, 0.0001290980000000011, 0.00012957000000000246, 0.0001289309999999988, 0.00012909700000000163, 0.0001296530000000004, 0.00012940300000000016, 0.00012906899999999555, 0.00012954200000000332, 0.00012949999999999767, 0.00012956899999999605, 0.0001287910000000031, 0.0001288200000000017, 0.00012923599999999785, 0.00012890299999999966, 0.00012888899999999315, 0.00012895799999999846, 0.00012941600000000025, 0.00012872199999999778, 0.0001288890000000001, 0.00012958299999999562, 0.00012812499999999977, 0.0001296110000000017, 0.0001290969999999947, 0.00012884699999999444, 0.00012919499999999862, 0.00012919499999999862, 0.00012906999999999502, 0.00012957000000000246, 0.00012881900000000224, 0.00012972299999999826, 0.0001294439999999994, 0.00012898600000000454, 0.0001290969999999947, 0.00012899999999999717, 0.00012866699999999898, 0.0001285279999999958, 0.00012936100000000145, 0.00012904199999999588, 0.00012784700000000038, 0.00012966699999999998]</msg>
<status status="PASS" starttime="20201029 18:20:19.892" endtime="20201029 18:20:19.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.881" endtime="20201029 18:20:19.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:19.908" endtime="20201029 18:20:19.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.904" endtime="20201029 18:20:19.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.901" endtime="20201029 18:20:19.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.393" endtime="20201029 18:20:19.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.391" endtime="20201029 18:20:19.934"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.957" endtime="20201029 18:20:19.982"></status>
</kw>
<msg timestamp="20201029 18:20:19.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.953" endtime="20201029 18:20:19.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.986" endtime="20201029 18:20:19.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.992" endtime="20201029 18:20:19.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.946" endtime="20201029 18:20:19.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.940" endtime="20201029 18:20:19.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.016" endtime="20201029 18:20:20.366"></status>
</kw>
<msg timestamp="20201029 18:20:20.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042070472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042200514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:20.013" endtime="20201029 18:20:20.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042070472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042200514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:20.375" endtime="20201029 18:20:20.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.394" endtime="20201029 18:20:20.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.005" endtime="20201029 18:20:20.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.000" endtime="20201029 18:20:20.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:20.411" level="INFO">${RESULT} = [{'diff': 0.00013004200000000382}, {'diff': 0.00013024999999999842}, {'diff': 0.00013022299999999876}, {'diff': 0.0001300560000000034}, {'diff': 0.0001304859999999991}, {'diff': 0.00013006999999999602...</msg>
<status status="PASS" starttime="20201029 18:20:20.402" endtime="20201029 18:20:20.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:20.421" level="INFO">${ACCURACY} = {'diff': [0.00013004200000000382, 0.00013024999999999842, 0.00013022299999999876, 0.0001300560000000034, 0.0001304859999999991, 0.00013006999999999602, 0.00012952800000000375, 0.00012984700000000238, ...</msg>
<status status="PASS" starttime="20201029 18:20:20.413" endtime="20201029 18:20:20.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.432" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:20:20.429" endtime="20201029 18:20:20.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.437" level="INFO">VALUE: [0.00013004200000000382, 0.00013024999999999842, 0.00013022299999999876, 0.0001300560000000034, 0.0001304859999999991, 0.00013006999999999602, 0.00012952800000000375, 0.00012984700000000238, 0.0001301389999999944, 0.00013063900000000184, 0.00013036100000000245, 0.00012972199999999878, 0.00012886100000000095, 0.00013056899999999705, 0.00012951399999999724, 0.00013024999999999842, 0.00013063800000000236, 0.00013040300000000116, 0.00012997199999999903, 0.00012905500000000292, 0.00013034800000000235, 0.00012886100000000095, 0.00013055599999999695, 0.000130263999999998, 0.0001305279999999978, 0.00012884800000000085, 0.000130263999999998, 0.00013006999999999602, 0.00012916699999999948, 0.00013056999999999652, 0.0001300000000000051, 0.00013037500000000202, 0.00013008400000000253, 0.00013040300000000116, 0.00013027799999999756, 0.00013044499999999987, 0.00013040299999999422, 0.0001303189999999968, 0.00013047199999999953, 0.00013072200000000672, 0.00013005500000000392, 0.0001306660000000015, 0.00013041600000000125, 0.00013055499999999748, 0.00013072199999999978, 0.00012972299999999826, 0.00012951399999999724, 0.0001302079999999997, 0.00013063900000000184, 0.00012919499999999862]</msg>
<status status="PASS" starttime="20201029 18:20:20.434" endtime="20201029 18:20:20.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.422" endtime="20201029 18:20:20.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:20.451" endtime="20201029 18:20:20.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.445" endtime="20201029 18:20:20.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.443" endtime="20201029 18:20:20.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.936" endtime="20201029 18:20:20.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.935" endtime="20201029 18:20:20.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.028" endtime="20201029 18:20:20.477"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:26.887" endtime="20201029 18:20:20.478" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:20.496" endtime="20201029 18:20:20.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.492" endtime="20201029 18:20:20.519"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.553" endtime="20201029 18:20:20.572"></status>
</kw>
<msg timestamp="20201029 18:20:20.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.549" endtime="20201029 18:20:20.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.576" endtime="20201029 18:20:20.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.587" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:20.582" endtime="20201029 18:20:20.587"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:20.542" endtime="20201029 18:20:20.589"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:20.536" endtime="20201029 18:20:20.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.533" endtime="20201029 18:20:20.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:20.599" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:20.598" endtime="20201029 18:20:20.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.593" endtime="20201029 18:20:20.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.531" endtime="20201029 18:20:20.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.529" endtime="20201029 18:20:20.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.603" endtime="20201029 18:20:20.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.525" endtime="20201029 18:20:20.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.521" endtime="20201029 18:20:20.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.489" endtime="20201029 18:20:20.611"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.637" endtime="20201029 18:20:20.658"></status>
</kw>
<msg timestamp="20201029 18:20:20.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.634" endtime="20201029 18:20:20.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.662" endtime="20201029 18:20:20.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.669" endtime="20201029 18:20:20.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.625" endtime="20201029 18:20:20.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.619" endtime="20201029 18:20:20.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.694" endtime="20201029 18:20:21.053"></status>
</kw>
<msg timestamp="20201029 18:20:21.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133750208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133826542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:20.691" endtime="20201029 18:20:21.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133750208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133826542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:21.062" endtime="20201029 18:20:21.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.081" endtime="20201029 18:20:21.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.683" endtime="20201029 18:20:21.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.678" endtime="20201029 18:20:21.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:21.098" level="INFO">${RESULT} = [{'diff': 7.633399999998347e-05}, {'diff': 7.674999999998655e-05}, {'diff': 7.599999999999274e-05}, {'diff': 7.599999999999274e-05}, {'diff': 7.638900000001003e-05}, {'diff': 7.601399999998537e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:21.090" endtime="20201029 18:20:21.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:21.108" level="INFO">${ACCURACY} = {'diff': [7.633399999998347e-05, 7.674999999998655e-05, 7.599999999999274e-05, 7.599999999999274e-05, 7.638900000001003e-05, 7.601399999998537e-05, 7.667999999999564e-05, 7.61669999999881e-05, 7.58060...</msg>
<status status="PASS" starttime="20201029 18:20:21.100" endtime="20201029 18:20:21.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.118" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:20:21.116" endtime="20201029 18:20:21.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.125" level="INFO">VALUE: [7.633399999998347e-05, 7.674999999998655e-05, 7.599999999999274e-05, 7.599999999999274e-05, 7.638900000001003e-05, 7.601399999998537e-05, 7.667999999999564e-05, 7.61669999999881e-05, 7.580600000001159e-05, 7.666700000000248e-05, 7.565199999998162e-05, 7.629199999997782e-05, 7.669399999998827e-05, 7.584699999999e-05, 7.57769999999991e-05, 7.513900000000184e-05, 7.611099999998983e-05, 7.66950000000155e-05, 7.668099999999511e-05, 7.633300000001175e-05, 7.594399999999446e-05, 7.586099999998264e-05, 7.618100000000849e-05, 7.636199999999649e-05, 7.6846999999991e-05, 7.534700000000338e-05, 7.651399999999975e-05, 7.665300000000985e-05, 7.651399999999975e-05, 7.650000000000712e-05, 7.66800000000234e-05, 7.551399999999875e-05, 7.618099999998074e-05, 7.626300000002084e-05, 7.516700000001486e-05, 7.568099999999411e-05, 7.620899999999375e-05, 7.651399999999975e-05, 7.599999999999274e-05, 7.581900000000474e-05, 7.501400000001213e-05, 7.650000000000712e-05, 7.617999999998126e-05, 7.616700000001586e-05, 7.586100000001039e-05, 7.662499999999683e-05, 7.615300000002323e-05, 7.619400000000165e-05, 7.598600000000011e-05, 7.584699999999e-05]</msg>
<status status="PASS" starttime="20201029 18:20:21.122" endtime="20201029 18:20:21.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.109" endtime="20201029 18:20:21.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:21.137" endtime="20201029 18:20:21.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.133" endtime="20201029 18:20:21.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.130" endtime="20201029 18:20:21.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.614" endtime="20201029 18:20:21.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.613" endtime="20201029 18:20:21.162"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.185" endtime="20201029 18:20:21.204"></status>
</kw>
<msg timestamp="20201029 18:20:21.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.182" endtime="20201029 18:20:21.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.208" endtime="20201029 18:20:21.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.214" endtime="20201029 18:20:21.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.174" endtime="20201029 18:20:21.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.168" endtime="20201029 18:20:21.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.237" endtime="20201029 18:20:21.572"></status>
</kw>
<msg timestamp="20201029 18:20:21.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041387958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041464319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:21.234" endtime="20201029 18:20:21.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041387958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041464319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:21.581" endtime="20201029 18:20:21.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.600" endtime="20201029 18:20:21.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.227" endtime="20201029 18:20:21.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.222" endtime="20201029 18:20:21.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:21.617" level="INFO">${RESULT} = [{'diff': 7.636099999999701e-05}, {'diff': 7.624999999999993e-05}, {'diff': 7.584800000000336e-05}, {'diff': 7.619499999999418e-05}, {'diff': 7.618099999999461e-05}, {'diff': 7.636099999999701e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:21.608" endtime="20201029 18:20:21.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:21.628" level="INFO">${ACCURACY} = {'diff': [7.636099999999701e-05, 7.624999999999993e-05, 7.584800000000336e-05, 7.619499999999418e-05, 7.618099999999461e-05, 7.636099999999701e-05, 7.636099999999701e-05, 7.641599999999582e-05, 7.6013...</msg>
<status status="PASS" starttime="20201029 18:20:21.619" endtime="20201029 18:20:21.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.638" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:20:21.636" endtime="20201029 18:20:21.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.644" level="INFO">VALUE: [7.636099999999701e-05, 7.624999999999993e-05, 7.584800000000336e-05, 7.619499999999418e-05, 7.618099999999461e-05, 7.636099999999701e-05, 7.636099999999701e-05, 7.641599999999582e-05, 7.601399999999925e-05, 7.618000000000208e-05, 7.633299999999787e-05, 7.53189999999973e-05, 7.533299999999687e-05, 7.619399999999471e-05, 7.599999999999968e-05, 7.599999999999968e-05, 7.584699999999694e-05, 7.587500000000302e-05, 7.613900000000284e-05, 7.586100000000345e-05, 7.604099999999892e-05, 7.619400000000165e-05, 7.637500000000352e-05, 7.654199999999889e-05, 7.670800000000172e-05, 7.670899999999425e-05, 7.654199999999889e-05, 7.650000000000018e-05, 7.634799999999692e-05, 7.669400000000215e-05, 7.634700000000438e-05, 7.601299999999978e-05, 7.611099999999676e-05, 7.619500000000112e-05, 7.631999999999778e-05, 7.675000000000043e-05, 7.633300000000481e-05, 7.634700000000438e-05, 7.584699999999694e-05, 7.634699999999744e-05, 7.619400000000165e-05, 7.601399999999925e-05, 7.620800000000122e-05, 7.657000000000497e-05, 7.636099999999701e-05, 7.666600000000301e-05, 7.587499999999608e-05, 7.687500000000402e-05, 7.684699999999794e-05, 7.618100000000155e-05]</msg>
<status status="PASS" starttime="20201029 18:20:21.641" endtime="20201029 18:20:21.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.629" endtime="20201029 18:20:21.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:21.655" endtime="20201029 18:20:21.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.651" endtime="20201029 18:20:21.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.649" endtime="20201029 18:20:21.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.164" endtime="20201029 18:20:21.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.163" endtime="20201029 18:20:21.681"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.705" endtime="20201029 18:20:21.724"></status>
</kw>
<msg timestamp="20201029 18:20:21.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.701" endtime="20201029 18:20:21.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.728" endtime="20201029 18:20:21.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.735" endtime="20201029 18:20:21.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.694" endtime="20201029 18:20:21.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.687" endtime="20201029 18:20:21.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.758" endtime="20201029 18:20:22.091"></status>
</kw>
<msg timestamp="20201029 18:20:22.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041642181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041718667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:21.755" endtime="20201029 18:20:22.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041642181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041718667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:22.101" endtime="20201029 18:20:22.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.119" endtime="20201029 18:20:22.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.747" endtime="20201029 18:20:22.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.743" endtime="20201029 18:20:22.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:22.136" level="INFO">${RESULT} = [{'diff': 7.648600000000061e-05}, {'diff': 7.636099999999701e-05}, {'diff': 7.65839999999976e-05}, {'diff': 7.631999999999778e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.601399999999925e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:22.128" endtime="20201029 18:20:22.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:22.147" level="INFO">${ACCURACY} = {'diff': [7.648600000000061e-05, 7.636099999999701e-05, 7.65839999999976e-05, 7.631999999999778e-05, 7.599999999999968e-05, 7.601399999999925e-05, 7.51389999999949e-05, 7.668100000000205e-05, 7.631900...</msg>
<status status="PASS" starttime="20201029 18:20:22.138" endtime="20201029 18:20:22.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.158" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:20:22.156" endtime="20201029 18:20:22.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.164" level="INFO">VALUE: [7.648600000000061e-05, 7.636099999999701e-05, 7.65839999999976e-05, 7.631999999999778e-05, 7.599999999999968e-05, 7.601399999999925e-05, 7.51389999999949e-05, 7.668100000000205e-05, 7.631900000000524e-05, 7.602800000000576e-05, 7.651399999999975e-05, 7.600000000000662e-05, 7.602799999999882e-05, 7.672199999999435e-05, 7.601399999999925e-05, 7.649999999999324e-05, 7.534699999999644e-05, 7.634799999999692e-05, 7.636099999999701e-05, 7.629199999999864e-05, 7.601399999999925e-05, 7.672199999999435e-05, 7.665300000000291e-05, 7.618000000000208e-05, 7.618100000000155e-05, 7.57910000000056e-05, 7.599999999999968e-05, 7.650000000000018e-05, 7.650000000000018e-05, 7.669499999999468e-05, 7.665300000000291e-05, 7.669399999999521e-05, 7.618000000000208e-05, 7.599999999999968e-05, 7.583299999999737e-05, 7.650000000000018e-05, 7.616600000000251e-05, 7.634799999999692e-05, 7.618100000000155e-05, 7.501299999999878e-05, 7.652799999999932e-05, 7.601399999999925e-05, 7.517999999999414e-05, 7.656899999999855e-05, 7.584799999999642e-05, 7.575000000000637e-05, 7.519500000000012e-05, 7.668000000000258e-05, 7.665299999999597e-05, 7.515300000000141e-05]</msg>
<status status="PASS" starttime="20201029 18:20:22.161" endtime="20201029 18:20:22.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.149" endtime="20201029 18:20:22.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:22.176" endtime="20201029 18:20:22.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.171" endtime="20201029 18:20:22.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.169" endtime="20201029 18:20:22.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.683" endtime="20201029 18:20:22.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.682" endtime="20201029 18:20:22.201"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.224" endtime="20201029 18:20:22.241"></status>
</kw>
<msg timestamp="20201029 18:20:22.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:22.220" endtime="20201029 18:20:22.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:22.244" endtime="20201029 18:20:22.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.251" endtime="20201029 18:20:22.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.213" endtime="20201029 18:20:22.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.207" endtime="20201029 18:20:22.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.274" endtime="20201029 18:20:22.611"></status>
</kw>
<msg timestamp="20201029 18:20:22.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039942597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040018597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:22.270" endtime="20201029 18:20:22.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039942597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040018597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:22.621" endtime="20201029 18:20:22.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.639" endtime="20201029 18:20:22.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.263" endtime="20201029 18:20:22.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.259" endtime="20201029 18:20:22.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:22.656" level="INFO">${RESULT} = [{'diff': 7.599999999999968e-05}, {'diff': 7.637499999999658e-05}, {'diff': 7.673600000000086e-05}, {'diff': 7.633299999999787e-05}, {'diff': 7.642999999999539e-05}, {'diff': 7.61389999999959e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:22.648" endtime="20201029 18:20:22.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:22.666" level="INFO">${ACCURACY} = {'diff': [7.599999999999968e-05, 7.637499999999658e-05, 7.673600000000086e-05, 7.633299999999787e-05, 7.642999999999539e-05, 7.61389999999959e-05, 7.577799999999857e-05, 7.669399999999521e-05, 7.63469...</msg>
<status status="PASS" starttime="20201029 18:20:22.658" endtime="20201029 18:20:22.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.676" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:20:22.674" endtime="20201029 18:20:22.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.682" level="INFO">VALUE: [7.599999999999968e-05, 7.637499999999658e-05, 7.673600000000086e-05, 7.633299999999787e-05, 7.642999999999539e-05, 7.61389999999959e-05, 7.577799999999857e-05, 7.669399999999521e-05, 7.634699999999744e-05, 7.633399999999735e-05, 7.619399999999471e-05, 7.667999999999564e-05, 7.551399999999875e-05, 7.58189999999978e-05, 7.587500000000302e-05, 7.652799999999932e-05, 7.675000000000043e-05, 7.619399999999471e-05, 7.633399999999735e-05, 7.602800000000576e-05, 7.634699999999744e-05, 7.577799999999857e-05, 7.501399999999825e-05, 7.601399999999925e-05, 7.540299999999472e-05, 7.583400000000379e-05, 7.604199999999839e-05, 7.63890000000031e-05, 7.590300000000216e-05, 7.587500000000302e-05, 7.584699999999694e-05, 7.619400000000165e-05, 7.640299999999572e-05, 7.669500000000162e-05, 7.501399999999825e-05, 7.602799999999882e-05, 7.691700000000273e-05, 7.501400000000519e-05, 7.632000000000472e-05, 7.666600000000301e-05, 7.650000000000018e-05, 7.501299999999878e-05, 7.633400000000429e-05, 7.650000000000018e-05, 7.669400000000215e-05, 7.602800000000576e-05, 7.599999999999968e-05, 7.637500000000352e-05, 7.666699999999554e-05, 7.537499999999558e-05]</msg>
<status status="PASS" starttime="20201029 18:20:22.678" endtime="20201029 18:20:22.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.667" endtime="20201029 18:20:22.685"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:22.694" endtime="20201029 18:20:22.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.690" endtime="20201029 18:20:22.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.687" endtime="20201029 18:20:22.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.203" endtime="20201029 18:20:22.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.202" endtime="20201029 18:20:22.719"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.743" endtime="20201029 18:20:22.762"></status>
</kw>
<msg timestamp="20201029 18:20:22.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:22.739" endtime="20201029 18:20:22.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:22.766" endtime="20201029 18:20:22.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.772" endtime="20201029 18:20:22.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.732" endtime="20201029 18:20:22.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.726" endtime="20201029 18:20:22.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.795" endtime="20201029 18:20:23.137"></status>
</kw>
<msg timestamp="20201029 18:20:23.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042602931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042679111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:22.792" endtime="20201029 18:20:23.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042602931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042679111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:23.146" endtime="20201029 18:20:23.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.166" endtime="20201029 18:20:23.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.785" endtime="20201029 18:20:23.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.780" endtime="20201029 18:20:23.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:23.183" level="INFO">${RESULT} = [{'diff': 7.618000000000208e-05}, {'diff': 7.61389999999959e-05}, {'diff': 7.666599999999607e-05}, {'diff': 7.651399999999975e-05}, {'diff': 7.613800000000337e-05}, {'diff': 7.650000000000018e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:23.175" endtime="20201029 18:20:23.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:23.193" level="INFO">${ACCURACY} = {'diff': [7.618000000000208e-05, 7.61389999999959e-05, 7.666599999999607e-05, 7.651399999999975e-05, 7.613800000000337e-05, 7.650000000000018e-05, 7.668000000000258e-05, 7.599999999999968e-05, 7.51800...</msg>
<status status="PASS" starttime="20201029 18:20:23.185" endtime="20201029 18:20:23.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.203" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:20:23.201" endtime="20201029 18:20:23.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.208" level="INFO">VALUE: [7.618000000000208e-05, 7.61389999999959e-05, 7.666599999999607e-05, 7.651399999999975e-05, 7.613800000000337e-05, 7.650000000000018e-05, 7.668000000000258e-05, 7.599999999999968e-05, 7.518000000000108e-05, 7.616700000000198e-05, 7.581900000000474e-05, 7.612499999999633e-05, 7.636100000000395e-05, 7.617999999999514e-05, 7.583299999999737e-05, 7.63189999999983e-05, 7.599999999999968e-05, 7.549999999999918e-05, 7.666699999999554e-05, 7.586100000000345e-05, 7.616700000000198e-05, 7.587500000000302e-05, 7.669499999999468e-05, 7.615300000000241e-05, 7.634699999999744e-05, 7.519500000000012e-05, 7.565300000000191e-05, 7.580499999999823e-05, 7.602799999999882e-05, 7.583300000000431e-05, 7.650000000000018e-05, 7.533300000000381e-05, 7.62769999999996e-05, 7.583400000000379e-05, 7.622200000000079e-05, 7.634700000000438e-05, 7.584800000000336e-05, 7.581900000000474e-05, 7.565300000000191e-05, 7.593000000000183e-05, 7.599999999999968e-05, 7.665300000000291e-05, 7.633400000000429e-05, 7.601399999999925e-05, 7.515300000000141e-05, 7.634700000000438e-05, 7.512500000000227e-05, 7.584699999999694e-05, 7.673600000000086e-05, 7.669399999999521e-05]</msg>
<status status="PASS" starttime="20201029 18:20:23.205" endtime="20201029 18:20:23.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.194" endtime="20201029 18:20:23.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:23.223" endtime="20201029 18:20:23.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.217" endtime="20201029 18:20:23.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.214" endtime="20201029 18:20:23.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.722" endtime="20201029 18:20:23.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.720" endtime="20201029 18:20:23.248"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.270" endtime="20201029 18:20:23.290"></status>
</kw>
<msg timestamp="20201029 18:20:23.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:23.267" endtime="20201029 18:20:23.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:23.293" endtime="20201029 18:20:23.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.300" endtime="20201029 18:20:23.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.260" endtime="20201029 18:20:23.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.254" endtime="20201029 18:20:23.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.323" endtime="20201029 18:20:23.672"></status>
</kw>
<msg timestamp="20201029 18:20:23.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039472097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039548597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:23.319" endtime="20201029 18:20:23.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039472097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039548597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:23.681" endtime="20201029 18:20:23.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.700" endtime="20201029 18:20:23.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.312" endtime="20201029 18:20:23.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.308" endtime="20201029 18:20:23.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:23.717" level="INFO">${RESULT} = [{'diff': 7.650000000000018e-05}, {'diff': 7.668100000000205e-05}, {'diff': 7.586100000000345e-05}, {'diff': 7.622300000000026e-05}, {'diff': 7.633399999999735e-05}, {'diff': 7.683299999999837e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:23.708" endtime="20201029 18:20:23.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:23.731" level="INFO">${ACCURACY} = {'diff': [7.650000000000018e-05, 7.668100000000205e-05, 7.586100000000345e-05, 7.622300000000026e-05, 7.633399999999735e-05, 7.683299999999837e-05, 7.586100000000345e-05, 7.633400000000429e-05, 7.6013...</msg>
<status status="PASS" starttime="20201029 18:20:23.719" endtime="20201029 18:20:23.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.742" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:20:23.740" endtime="20201029 18:20:23.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.748" level="INFO">VALUE: [7.650000000000018e-05, 7.668100000000205e-05, 7.586100000000345e-05, 7.622300000000026e-05, 7.633399999999735e-05, 7.683299999999837e-05, 7.586100000000345e-05, 7.633400000000429e-05, 7.601399999999925e-05, 7.601399999999925e-05, 7.583399999999685e-05, 7.577799999999857e-05, 7.602799999999882e-05, 7.519500000000012e-05, 7.672200000000129e-05, 7.665300000000291e-05, 7.588899999999565e-05, 7.651399999999975e-05, 7.636100000000395e-05, 7.602799999999882e-05, 7.618000000000208e-05, 7.618000000000208e-05, 7.601399999999925e-05, 7.684699999999794e-05, 7.652699999999985e-05, 7.670900000000119e-05, 7.602799999999882e-05, 7.66389999999964e-05, 7.636199999999649e-05, 7.619500000000112e-05, 7.634799999999692e-05, 7.618000000000208e-05, 7.652799999999932e-05, 7.66389999999964e-05, 7.652699999999985e-05, 7.601400000000619e-05, 7.669400000000215e-05, 7.586100000000345e-05, 7.602799999999882e-05, 7.652699999999985e-05, 7.566599999999507e-05, 7.634700000000438e-05, 7.668000000000258e-05, 7.616700000000198e-05, 7.665299999999597e-05, 7.587500000000302e-05, 7.584800000000336e-05, 7.499999999999868e-05, 7.583300000000431e-05, 7.577800000000551e-05]</msg>
<status status="PASS" starttime="20201029 18:20:23.745" endtime="20201029 18:20:23.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.733" endtime="20201029 18:20:23.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:23.762" endtime="20201029 18:20:23.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.757" endtime="20201029 18:20:23.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.755" endtime="20201029 18:20:23.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.250" endtime="20201029 18:20:23.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.249" endtime="20201029 18:20:23.788"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.810" endtime="20201029 18:20:23.829"></status>
</kw>
<msg timestamp="20201029 18:20:23.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:23.807" endtime="20201029 18:20:23.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:23.833" endtime="20201029 18:20:23.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.839" endtime="20201029 18:20:23.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.800" endtime="20201029 18:20:23.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.794" endtime="20201029 18:20:23.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.862" endtime="20201029 18:20:24.212"></status>
</kw>
<msg timestamp="20201029 18:20:24.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039640278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039716611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:23.859" endtime="20201029 18:20:24.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039640278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039716611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:24.226" endtime="20201029 18:20:24.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.248" endtime="20201029 18:20:24.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.852" endtime="20201029 18:20:24.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.847" endtime="20201029 18:20:24.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:24.271" level="INFO">${RESULT} = [{'diff': 7.633299999999787e-05}, {'diff': 7.654099999999942e-05}, {'diff': 7.59440000000014e-05}, {'diff': 7.586100000000345e-05}, {'diff': 7.651300000000028e-05}, {'diff': 7.669399999999521e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:24.262" endtime="20201029 18:20:24.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:24.282" level="INFO">${ACCURACY} = {'diff': [7.633299999999787e-05, 7.654099999999942e-05, 7.59440000000014e-05, 7.586100000000345e-05, 7.651300000000028e-05, 7.669399999999521e-05, 7.602799999999882e-05, 7.519400000000065e-05, 7.55139...</msg>
<status status="PASS" starttime="20201029 18:20:24.273" endtime="20201029 18:20:24.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.293" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:20:24.291" endtime="20201029 18:20:24.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.298" level="INFO">VALUE: [7.633299999999787e-05, 7.654099999999942e-05, 7.59440000000014e-05, 7.586100000000345e-05, 7.651300000000028e-05, 7.669399999999521e-05, 7.602799999999882e-05, 7.519400000000065e-05, 7.551399999999875e-05, 7.622200000000079e-05, 7.618000000000208e-05, 7.518100000000055e-05, 7.586100000000345e-05, 7.599999999999968e-05, 7.584799999999642e-05, 7.583299999999737e-05, 7.61389999999959e-05, 7.636199999999649e-05, 7.686100000000445e-05, 7.667999999999564e-05, 7.669399999999521e-05, 7.618100000000155e-05, 7.652799999999932e-05, 7.619500000000112e-05, 7.636099999999701e-05, 7.670799999999478e-05, 7.586099999999651e-05, 7.686100000000445e-05, 7.604100000000585e-05, 7.673599999999392e-05, 7.686100000000445e-05, 7.619400000000165e-05, 7.587500000000302e-05, 7.61389999999959e-05, 7.643099999999486e-05, 7.66389999999964e-05, 7.666700000000248e-05, 7.669399999999521e-05, 7.601399999999925e-05, 7.666599999999607e-05, 7.632000000000472e-05, 7.656899999999855e-05, 7.668100000000205e-05, 7.630500000000567e-05, 7.654099999999942e-05, 7.634699999999744e-05, 7.583399999999685e-05, 7.616599999999557e-05, 7.636199999999649e-05, 7.630599999999821e-05]</msg>
<status status="PASS" starttime="20201029 18:20:24.295" endtime="20201029 18:20:24.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.284" endtime="20201029 18:20:24.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:24.311" endtime="20201029 18:20:24.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.307" endtime="20201029 18:20:24.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.304" endtime="20201029 18:20:24.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.790" endtime="20201029 18:20:24.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.788" endtime="20201029 18:20:24.336"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.358" endtime="20201029 18:20:24.376"></status>
</kw>
<msg timestamp="20201029 18:20:24.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.355" endtime="20201029 18:20:24.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.379" endtime="20201029 18:20:24.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.385" endtime="20201029 18:20:24.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.348" endtime="20201029 18:20:24.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.342" endtime="20201029 18:20:24.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.408" endtime="20201029 18:20:24.752"></status>
</kw>
<msg timestamp="20201029 18:20:24.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039173139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039248972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:24.405" endtime="20201029 18:20:24.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039173139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039248972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:24.761" endtime="20201029 18:20:24.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.780" endtime="20201029 18:20:24.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.398" endtime="20201029 18:20:24.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.394" endtime="20201029 18:20:24.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:24.807" level="INFO">${RESULT} = [{'diff': 7.583299999999737e-05}, {'diff': 7.666699999999554e-05}, {'diff': 7.618000000000208e-05}, {'diff': 7.665300000000291e-05}, {'diff': 7.668099999999511e-05}, {'diff': 7.580600000000465e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:24.798" endtime="20201029 18:20:24.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:24.817" level="INFO">${ACCURACY} = {'diff': [7.583299999999737e-05, 7.666699999999554e-05, 7.618000000000208e-05, 7.665300000000291e-05, 7.668099999999511e-05, 7.580600000000465e-05, 7.665300000000291e-05, 7.633299999999787e-05, 7.6653...</msg>
<status status="PASS" starttime="20201029 18:20:24.809" endtime="20201029 18:20:24.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.828" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:20:24.826" endtime="20201029 18:20:24.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.833" level="INFO">VALUE: [7.583299999999737e-05, 7.666699999999554e-05, 7.618000000000208e-05, 7.665300000000291e-05, 7.668099999999511e-05, 7.580600000000465e-05, 7.665300000000291e-05, 7.633299999999787e-05, 7.665300000000291e-05, 7.620799999999428e-05, 7.616600000000251e-05, 7.583299999999737e-05, 7.616700000000198e-05, 7.549999999999918e-05, 7.599999999999968e-05, 7.668100000000205e-05, 7.651400000000669e-05, 7.598600000000011e-05, 7.598600000000011e-05, 7.598600000000011e-05, 7.666600000000301e-05, 7.651399999999975e-05, 7.616700000000198e-05, 7.583299999999737e-05, 7.497199999999954e-05, 7.580500000000517e-05, 7.62639999999995e-05, 7.631900000000524e-05, 7.652799999999932e-05, 7.602799999999882e-05, 7.516700000000098e-05, 7.583299999999737e-05, 7.540200000000219e-05, 7.668100000000205e-05, 7.618100000000155e-05, 7.612499999999633e-05, 7.584800000000336e-05, 7.633399999999735e-05, 7.633399999999735e-05, 7.634700000000438e-05, 7.652799999999932e-05, 7.60969999999972e-05, 7.666699999999554e-05, 7.666599999999607e-05, 7.650000000000018e-05, 7.504200000000433e-05, 7.651399999999975e-05, 7.598600000000011e-05, 7.601400000000619e-05, 7.647200000000104e-05]</msg>
<status status="PASS" starttime="20201029 18:20:24.830" endtime="20201029 18:20:24.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.819" endtime="20201029 18:20:24.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:24.846" endtime="20201029 18:20:24.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.841" endtime="20201029 18:20:24.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.839" endtime="20201029 18:20:24.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.338" endtime="20201029 18:20:24.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.337" endtime="20201029 18:20:24.871"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.909" endtime="20201029 18:20:24.933"></status>
</kw>
<msg timestamp="20201029 18:20:24.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.905" endtime="20201029 18:20:24.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.936" endtime="20201029 18:20:24.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.943" endtime="20201029 18:20:24.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.893" endtime="20201029 18:20:24.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.881" endtime="20201029 18:20:24.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.966" endtime="20201029 18:20:25.314"></status>
</kw>
<msg timestamp="20201029 18:20:25.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061601014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061676986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:24.963" endtime="20201029 18:20:25.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061601014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061676986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:25.326" endtime="20201029 18:20:25.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.345" endtime="20201029 18:20:25.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.955" endtime="20201029 18:20:25.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.951" endtime="20201029 18:20:25.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:25.363" level="INFO">${RESULT} = [{'diff': 7.597200000000054e-05}, {'diff': 7.502800000000476e-05}, {'diff': 7.648600000000061e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.669499999999468e-05}, {'diff': 7.675000000000043e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:25.354" endtime="20201029 18:20:25.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:25.372" level="INFO">${ACCURACY} = {'diff': [7.597200000000054e-05, 7.502800000000476e-05, 7.648600000000061e-05, 7.599999999999968e-05, 7.669499999999468e-05, 7.675000000000043e-05, 7.61110000000037e-05, 7.636100000000395e-05, 7.63469...</msg>
<status status="PASS" starttime="20201029 18:20:25.365" endtime="20201029 18:20:25.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.383" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:20:25.381" endtime="20201029 18:20:25.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.389" level="INFO">VALUE: [7.597200000000054e-05, 7.502800000000476e-05, 7.648600000000061e-05, 7.599999999999968e-05, 7.669499999999468e-05, 7.675000000000043e-05, 7.61110000000037e-05, 7.636100000000395e-05, 7.634699999999744e-05, 7.622200000000079e-05, 7.597299999999307e-05, 7.647200000000798e-05, 7.618000000000902e-05, 7.615299999999547e-05, 7.654199999999889e-05, 7.652700000000678e-05, 7.584699999999e-05, 7.630599999999821e-05, 7.63469999999905e-05, 7.648600000000061e-05, 7.547200000000698e-05, 7.632000000000472e-05, 7.651399999999975e-05, 7.583299999999737e-05, 7.583399999999685e-05, 7.666700000000248e-05, 7.637499999998965e-05, 7.602800000000576e-05, 7.583399999999685e-05, 7.594400000000834e-05, 7.6151999999996e-05, 7.551399999999875e-05, 7.601399999999925e-05, 7.612499999999633e-05, 7.584800000000336e-05, 7.666599999998913e-05, 7.616700000000198e-05, 7.581899999999087e-05, 7.666700000000248e-05, 7.581900000000474e-05, 7.594500000000781e-05, 7.650000000000712e-05, 7.516600000000151e-05, 7.580599999999771e-05, 7.623599999999342e-05, 7.615299999999547e-05, 7.636099999999701e-05, 7.648600000000061e-05, 7.619400000000165e-05, 7.498599999999911e-05]</msg>
<status status="PASS" starttime="20201029 18:20:25.386" endtime="20201029 18:20:25.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.374" endtime="20201029 18:20:25.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:25.407" endtime="20201029 18:20:25.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.402" endtime="20201029 18:20:25.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.399" endtime="20201029 18:20:25.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.873" endtime="20201029 18:20:25.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.872" endtime="20201029 18:20:25.433"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.455" endtime="20201029 18:20:25.473"></status>
</kw>
<msg timestamp="20201029 18:20:25.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:25.452" endtime="20201029 18:20:25.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:25.477" endtime="20201029 18:20:25.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.483" endtime="20201029 18:20:25.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.445" endtime="20201029 18:20:25.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.439" endtime="20201029 18:20:25.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.506" endtime="20201029 18:20:25.849"></status>
</kw>
<msg timestamp="20201029 18:20:25.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039712208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039788167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:25.503" endtime="20201029 18:20:25.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039712208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039788167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:25.859" endtime="20201029 18:20:25.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.877" endtime="20201029 18:20:25.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.496" endtime="20201029 18:20:25.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.491" endtime="20201029 18:20:25.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:25.894" level="INFO">${RESULT} = [{'diff': 7.595900000000044e-05}, {'diff': 7.49440000000004e-05}, {'diff': 7.602800000000576e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.570800000000072e-05}, {'diff': 7.554199999999789e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:25.886" endtime="20201029 18:20:25.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:25.905" level="INFO">${ACCURACY} = {'diff': [7.595900000000044e-05, 7.49440000000004e-05, 7.602800000000576e-05, 7.599999999999968e-05, 7.570800000000072e-05, 7.554199999999789e-05, 7.666700000000248e-05, 7.616700000000198e-05, 7.50129...</msg>
<status status="PASS" starttime="20201029 18:20:25.896" endtime="20201029 18:20:25.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.916" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:20:25.914" endtime="20201029 18:20:25.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.921" level="INFO">VALUE: [7.595900000000044e-05, 7.49440000000004e-05, 7.602800000000576e-05, 7.599999999999968e-05, 7.570800000000072e-05, 7.554199999999789e-05, 7.666700000000248e-05, 7.616700000000198e-05, 7.501299999999878e-05, 7.501400000000519e-05, 7.570800000000072e-05, 7.601399999999925e-05, 7.669500000000162e-05, 7.651399999999975e-05, 7.601399999999925e-05, 7.659700000000463e-05, 7.666600000000301e-05, 7.58189999999978e-05, 7.595800000000097e-05, 7.651399999999975e-05, 7.551399999999875e-05, 7.654199999999889e-05, 7.568100000000105e-05, 7.599999999999968e-05, 7.584699999999694e-05, 7.601399999999925e-05, 7.668000000000258e-05, 7.599999999999968e-05, 7.566700000000148e-05, 7.601399999999925e-05, 7.669499999999468e-05, 7.604199999999839e-05, 7.598600000000011e-05, 7.672199999999435e-05, 7.604100000000585e-05, 7.619400000000165e-05, 7.634699999999744e-05, 7.597200000000054e-05, 7.630600000000515e-05, 7.651399999999975e-05, 7.666699999999554e-05, 7.652799999999932e-05, 7.601399999999925e-05, 7.616700000000198e-05, 7.616700000000198e-05, 7.568100000000105e-05, 7.648600000000061e-05, 7.648600000000061e-05, 7.580499999999823e-05, 7.602799999999882e-05]</msg>
<status status="PASS" starttime="20201029 18:20:25.918" endtime="20201029 18:20:25.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.907" endtime="20201029 18:20:25.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:25.934" endtime="20201029 18:20:25.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.929" endtime="20201029 18:20:25.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.927" endtime="20201029 18:20:25.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.435" endtime="20201029 18:20:25.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.433" endtime="20201029 18:20:25.958"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.981" endtime="20201029 18:20:25.999"></status>
</kw>
<msg timestamp="20201029 18:20:26.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:25.978" endtime="20201029 18:20:26.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.003" endtime="20201029 18:20:26.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.009" endtime="20201029 18:20:26.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.970" endtime="20201029 18:20:26.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.965" endtime="20201029 18:20:26.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.032" endtime="20201029 18:20:26.385"></status>
</kw>
<msg timestamp="20201029 18:20:26.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03979125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039867583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:26.029" endtime="20201029 18:20:26.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03979125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039867583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:26.397" endtime="20201029 18:20:26.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.417" endtime="20201029 18:20:26.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.022" endtime="20201029 18:20:26.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.017" endtime="20201029 18:20:26.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:26.435" level="INFO">${RESULT} = [{'diff': 7.633299999999787e-05}, {'diff': 7.584699999999694e-05}, {'diff': 7.63189999999983e-05}, {'diff': 7.598600000000011e-05}, {'diff': 7.501400000000519e-05}, {'diff': 7.604200000000533e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:26.426" endtime="20201029 18:20:26.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:26.446" level="INFO">${ACCURACY} = {'diff': [7.633299999999787e-05, 7.584699999999694e-05, 7.63189999999983e-05, 7.598600000000011e-05, 7.501400000000519e-05, 7.604200000000533e-05, 7.636100000000395e-05, 7.583300000000431e-05, 7.61940...</msg>
<status status="PASS" starttime="20201029 18:20:26.437" endtime="20201029 18:20:26.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.457" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:20:26.455" endtime="20201029 18:20:26.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.462" level="INFO">VALUE: [7.633299999999787e-05, 7.584699999999694e-05, 7.63189999999983e-05, 7.598600000000011e-05, 7.501400000000519e-05, 7.604200000000533e-05, 7.636100000000395e-05, 7.583300000000431e-05, 7.619400000000165e-05, 7.587500000000302e-05, 7.650000000000018e-05, 7.584700000000388e-05, 7.652799999999932e-05, 7.651399999999975e-05, 7.567999999999464e-05, 7.616700000000198e-05, 7.599999999999968e-05, 7.534699999999644e-05, 7.650000000000018e-05, 7.616699999999504e-05, 7.623699999999983e-05, 7.666700000000248e-05, 7.587499999999608e-05, 7.602799999999882e-05, 7.618100000000155e-05, 7.534800000000286e-05, 7.636099999999701e-05, 7.654199999999889e-05, 7.625000000000687e-05, 7.654099999999942e-05, 7.617999999999514e-05, 7.652799999999932e-05, 7.619499999999418e-05, 7.667999999999564e-05, 7.651399999999975e-05, 7.668000000000258e-05, 7.654200000000583e-05, 7.669400000000215e-05, 7.673600000000086e-05, 7.597300000000001e-05, 7.583299999999737e-05, 7.666699999999554e-05, 7.633299999999787e-05, 7.601399999999925e-05, 7.599999999999968e-05, 7.633299999999787e-05, 7.619399999999471e-05, 7.668000000000258e-05, 7.597200000000054e-05, 7.584700000000388e-05]</msg>
<status status="PASS" starttime="20201029 18:20:26.459" endtime="20201029 18:20:26.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.448" endtime="20201029 18:20:26.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:26.475" endtime="20201029 18:20:26.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.471" endtime="20201029 18:20:26.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.468" endtime="20201029 18:20:26.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.961" endtime="20201029 18:20:26.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.959" endtime="20201029 18:20:26.500"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.523" endtime="20201029 18:20:26.543"></status>
</kw>
<msg timestamp="20201029 18:20:26.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.520" endtime="20201029 18:20:26.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.546" endtime="20201029 18:20:26.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.553" endtime="20201029 18:20:26.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.513" endtime="20201029 18:20:26.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.507" endtime="20201029 18:20:26.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.596" endtime="20201029 18:20:26.981"></status>
</kw>
<msg timestamp="20201029 18:20:26.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040141514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040217694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.590" endtime="20201029 18:20:26.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040141514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040217694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.991" endtime="20201029 18:20:27.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.010" endtime="20201029 18:20:27.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.577" endtime="20201029 18:20:27.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.568" endtime="20201029 18:20:27.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:27.028" level="INFO">${RESULT} = [{'diff': 7.617999999999514e-05}, {'diff': 7.584800000000336e-05}, {'diff': 7.616700000000198e-05}, {'diff': 7.668100000000205e-05}, {'diff': 7.552799999999832e-05}, {'diff': 7.686099999999751e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:27.019" endtime="20201029 18:20:27.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:27.038" level="INFO">${ACCURACY} = {'diff': [7.617999999999514e-05, 7.584800000000336e-05, 7.616700000000198e-05, 7.668100000000205e-05, 7.552799999999832e-05, 7.686099999999751e-05, 7.669500000000162e-05, 7.630599999999821e-05, 7.5514...</msg>
<status status="PASS" starttime="20201029 18:20:27.030" endtime="20201029 18:20:27.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.049" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:20:27.046" endtime="20201029 18:20:27.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.054" level="INFO">VALUE: [7.617999999999514e-05, 7.584800000000336e-05, 7.616700000000198e-05, 7.668100000000205e-05, 7.552799999999832e-05, 7.686099999999751e-05, 7.669500000000162e-05, 7.630599999999821e-05, 7.551400000000569e-05, 7.652799999999932e-05, 7.584699999999694e-05, 7.601399999999925e-05, 7.651399999999975e-05, 7.662500000000377e-05, 7.636099999999701e-05, 7.587500000000302e-05, 7.594399999999446e-05, 7.658299999999812e-05, 7.619500000000112e-05, 7.601399999999925e-05, 7.666700000000248e-05, 7.651399999999975e-05, 7.597300000000001e-05, 7.634799999999692e-05, 7.617999999999514e-05, 7.599999999999968e-05, 7.554200000000483e-05, 7.66389999999964e-05, 7.654199999999889e-05, 7.669500000000162e-05, 7.583299999999737e-05, 7.618100000000155e-05, 7.618100000000155e-05, 7.584699999999694e-05, 7.618100000000155e-05, 7.604099999999892e-05, 7.633299999999787e-05, 7.652799999999932e-05, 7.670799999999478e-05, 7.601399999999925e-05, 7.601299999999978e-05, 7.654099999999942e-05, 7.630599999999821e-05, 7.62639999999995e-05, 7.666699999999554e-05, 7.583299999999737e-05, 7.634699999999744e-05, 7.584700000000388e-05, 7.669399999999521e-05, 7.651399999999975e-05]</msg>
<status status="PASS" starttime="20201029 18:20:27.051" endtime="20201029 18:20:27.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.039" endtime="20201029 18:20:27.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:27.067" endtime="20201029 18:20:27.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.062" endtime="20201029 18:20:27.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.060" endtime="20201029 18:20:27.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.502" endtime="20201029 18:20:27.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.501" endtime="20201029 18:20:27.097"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.129" endtime="20201029 18:20:27.151"></status>
</kw>
<msg timestamp="20201029 18:20:27.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.125" endtime="20201029 18:20:27.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.154" endtime="20201029 18:20:27.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.161" endtime="20201029 18:20:27.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.117" endtime="20201029 18:20:27.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.109" endtime="20201029 18:20:27.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.184" endtime="20201029 18:20:27.534"></status>
</kw>
<msg timestamp="20201029 18:20:27.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055582403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055658222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:27.181" endtime="20201029 18:20:27.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055582403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055658222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:27.543" endtime="20201029 18:20:27.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.562" endtime="20201029 18:20:27.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.174" endtime="20201029 18:20:27.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.169" endtime="20201029 18:20:27.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:27.580" level="INFO">${RESULT} = [{'diff': 7.58189999999978e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.615299999999547e-05}, {'diff': 7.633299999999787e-05}, {'diff': 7.584700000000388e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:27.571" endtime="20201029 18:20:27.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:27.590" level="INFO">${ACCURACY} = {'diff': [7.58189999999978e-05, 7.599999999999968e-05, 7.599999999999968e-05, 7.615299999999547e-05, 7.633299999999787e-05, 7.584700000000388e-05, 7.618099999999461e-05, 7.668000000000258e-05, 7.65139...</msg>
<status status="PASS" starttime="20201029 18:20:27.582" endtime="20201029 18:20:27.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.601" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:20:27.598" endtime="20201029 18:20:27.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.606" level="INFO">VALUE: [7.58189999999978e-05, 7.599999999999968e-05, 7.599999999999968e-05, 7.615299999999547e-05, 7.633299999999787e-05, 7.584700000000388e-05, 7.618099999999461e-05, 7.668000000000258e-05, 7.651399999999975e-05, 7.599999999999968e-05, 7.618100000000155e-05, 7.666599999999607e-05, 7.667999999999564e-05, 7.634700000000438e-05, 7.636099999999701e-05, 7.618100000000155e-05, 7.618100000000155e-05, 7.518100000000055e-05, 7.620900000000069e-05, 7.682000000000522e-05, 7.662500000000377e-05, 7.580600000000465e-05, 7.519400000000065e-05, 7.668000000000258e-05, 7.618100000000155e-05, 7.619400000000165e-05, 7.63189999999983e-05, 7.616699999999504e-05, 7.622200000000079e-05, 7.584699999999694e-05, 7.602699999999935e-05, 7.601400000000619e-05, 7.618000000000208e-05, 7.66519999999965e-05, 7.59440000000014e-05, 7.631999999999778e-05, 7.663800000000387e-05, 7.533399999999635e-05, 7.636099999999701e-05, 7.620800000000122e-05, 7.597200000000054e-05, 7.618100000000155e-05, 7.648700000000008e-05, 7.601399999999925e-05, 7.58189999999978e-05, 7.668000000000258e-05, 7.515300000000141e-05, 7.618099999999461e-05, 7.584699999999694e-05, 7.629099999999917e-05]</msg>
<status status="PASS" starttime="20201029 18:20:27.603" endtime="20201029 18:20:27.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.591" endtime="20201029 18:20:27.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:27.621" endtime="20201029 18:20:27.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.615" endtime="20201029 18:20:27.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.612" endtime="20201029 18:20:27.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.102" endtime="20201029 18:20:27.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.100" endtime="20201029 18:20:27.646"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.669" endtime="20201029 18:20:27.690"></status>
</kw>
<msg timestamp="20201029 18:20:27.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.666" endtime="20201029 18:20:27.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.693" endtime="20201029 18:20:27.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.699" endtime="20201029 18:20:27.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.658" endtime="20201029 18:20:27.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.653" endtime="20201029 18:20:27.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.723" endtime="20201029 18:20:28.090"></status>
</kw>
<msg timestamp="20201029 18:20:28.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040441931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040518361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:27.720" endtime="20201029 18:20:28.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040441931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040518361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.100" endtime="20201029 18:20:28.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.119" endtime="20201029 18:20:28.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.712" endtime="20201029 18:20:28.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.707" endtime="20201029 18:20:28.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:28.137" level="INFO">${RESULT} = [{'diff': 7.643000000000233e-05}, {'diff': 7.705499999999949e-05}, {'diff': 7.900000000000268e-05}, {'diff': 7.736099999999801e-05}, {'diff': 7.915299999999847e-05}, {'diff': 7.7764000000001e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:28.127" endtime="20201029 18:20:28.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:28.147" level="INFO">${ACCURACY} = {'diff': [7.643000000000233e-05, 7.705499999999949e-05, 7.900000000000268e-05, 7.736099999999801e-05, 7.915299999999847e-05, 7.7764000000001e-05, 7.622200000000079e-05, 7.962499999999983e-05, 7.706899...</msg>
<status status="PASS" starttime="20201029 18:20:28.139" endtime="20201029 18:20:28.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.158" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:20:28.156" endtime="20201029 18:20:28.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.165" level="INFO">VALUE: [7.643000000000233e-05, 7.705499999999949e-05, 7.900000000000268e-05, 7.736099999999801e-05, 7.915299999999847e-05, 7.7764000000001e-05, 7.622200000000079e-05, 7.962499999999983e-05, 7.706899999999905e-05, 7.729100000000017e-05, 7.890300000000516e-05, 7.76519999999975e-05, 7.673600000000086e-05, 7.927800000000207e-05, 7.751400000000075e-05, 7.766599999999707e-05, 7.898600000000311e-05, 7.71110000000047e-05, 7.945799999999753e-05, 7.715200000000394e-05, 7.734699999999844e-05, 7.791700000000373e-05, 7.740199999999725e-05, 7.980599999999477e-05, 7.74440000000029e-05, 7.711099999999776e-05, 7.893099999999736e-05, 7.72640000000005e-05, 7.748600000000161e-05, 7.948599999999667e-05, 7.769400000000315e-05, 7.951299999999634e-05, 7.737499999999758e-05, 7.76389999999974e-05, 7.965299999999897e-05, 7.700000000000068e-05, 7.919399999999771e-05, 7.71389999999969e-05, 7.734700000000538e-05, 7.966599999999907e-05, 7.662500000000377e-05, 7.72640000000005e-05, 7.925000000000293e-05, 7.734699999999844e-05, 7.716700000000298e-05, 7.900000000000268e-05, 7.694399999999546e-05, 7.912499999999933e-05, 7.690299999999622e-05, 7.912499999999933e-05]</msg>
<status status="PASS" starttime="20201029 18:20:28.162" endtime="20201029 18:20:28.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.149" endtime="20201029 18:20:28.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:28.178" endtime="20201029 18:20:28.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.173" endtime="20201029 18:20:28.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.171" endtime="20201029 18:20:28.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.648" endtime="20201029 18:20:28.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.647" endtime="20201029 18:20:28.203"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.226" endtime="20201029 18:20:28.246"></status>
</kw>
<msg timestamp="20201029 18:20:28.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.223" endtime="20201029 18:20:28.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.250" endtime="20201029 18:20:28.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.256" endtime="20201029 18:20:28.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.215" endtime="20201029 18:20:28.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.209" endtime="20201029 18:20:28.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.280" endtime="20201029 18:20:28.632"></status>
</kw>
<msg timestamp="20201029 18:20:28.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040236597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040316639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.277" endtime="20201029 18:20:28.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040236597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040316639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.641" endtime="20201029 18:20:28.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.660" endtime="20201029 18:20:28.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.269" endtime="20201029 18:20:28.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.265" endtime="20201029 18:20:28.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:28.678" level="INFO">${RESULT} = [{'diff': 8.004200000000239e-05}, {'diff': 7.988899999999965e-05}, {'diff': 7.987500000000008e-05}, {'diff': 8.072200000000529e-05}, {'diff': 7.905600000000096e-05}, {'diff': 7.990299999999922e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:28.669" endtime="20201029 18:20:28.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:28.689" level="INFO">${ACCURACY} = {'diff': [8.004200000000239e-05, 7.988899999999965e-05, 7.987500000000008e-05, 8.072200000000529e-05, 7.905600000000096e-05, 7.990299999999922e-05, 8.055599999999552e-05, 8.059699999999476e-05, 8.0222...</msg>
<status status="PASS" starttime="20201029 18:20:28.680" endtime="20201029 18:20:28.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.700" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:20:28.698" endtime="20201029 18:20:28.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.706" level="INFO">VALUE: [8.004200000000239e-05, 7.988899999999965e-05, 7.987500000000008e-05, 8.072200000000529e-05, 7.905600000000096e-05, 7.990299999999922e-05, 8.055599999999552e-05, 8.059699999999476e-05, 8.022299999999732e-05, 8.037500000000058e-05, 8.038900000000015e-05, 8.005499999999555e-05, 8.040299999999972e-05, 8.051399999999681e-05, 8.040299999999972e-05, 8.072199999999835e-05, 7.891599999999832e-05, 8.056900000000256e-05, 8.072199999999835e-05, 7.99440000000054e-05, 8.072199999999835e-05, 8.005500000000249e-05, 8.061100000000126e-05, 8.006900000000206e-05, 8.005600000000196e-05, 8.042999999999939e-05, 7.993099999999836e-05, 7.887499999999908e-05, 8.056900000000256e-05, 8.054099999999648e-05, 7.920799999999728e-05, 7.936199999999949e-05, 7.988899999999965e-05, 8.036100000000101e-05, 7.886099999999951e-05, 8.040200000000025e-05, 8.03469999999945e-05, 8.029099999999623e-05, 7.994499999999793e-05, 8.025000000000393e-05, 8.036100000000101e-05, 8.005600000000196e-05, 8.076399999999706e-05, 8.069499999999868e-05, 8.038900000000015e-05, 8.03190000000023e-05, 8.004200000000239e-05, 8.005600000000196e-05, 8.036100000000101e-05, 8.005600000000196e-05]</msg>
<status status="PASS" starttime="20201029 18:20:28.703" endtime="20201029 18:20:28.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.691" endtime="20201029 18:20:28.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:28.719" endtime="20201029 18:20:28.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.714" endtime="20201029 18:20:28.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.712" endtime="20201029 18:20:28.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.205" endtime="20201029 18:20:28.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.204" endtime="20201029 18:20:28.744"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.767" endtime="20201029 18:20:28.788"></status>
</kw>
<msg timestamp="20201029 18:20:28.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.764" endtime="20201029 18:20:28.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.791" endtime="20201029 18:20:28.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.798" endtime="20201029 18:20:28.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.756" endtime="20201029 18:20:28.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.751" endtime="20201029 18:20:28.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.824" endtime="20201029 18:20:29.190"></status>
</kw>
<msg timestamp="20201029 18:20:29.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040398875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040479125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.819" endtime="20201029 18:20:29.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040398875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040479125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.200" endtime="20201029 18:20:29.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.220" endtime="20201029 18:20:29.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.811" endtime="20201029 18:20:29.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.806" endtime="20201029 18:20:29.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:29.237" level="INFO">${RESULT} = [{'diff': 8.024999999999699e-05}, {'diff': 8.020799999999828e-05}, {'diff': 7.986100000000051e-05}, {'diff': 8.022199999999785e-05}, {'diff': 8.072299999999782e-05}, {'diff': 8.061100000000126e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:29.228" endtime="20201029 18:20:29.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:29.247" level="INFO">${ACCURACY} = {'diff': [8.024999999999699e-05, 8.020799999999828e-05, 7.986100000000051e-05, 8.022199999999785e-05, 8.072299999999782e-05, 8.061100000000126e-05, 8.037500000000058e-05, 8.002700000000335e-05, 8.0512...</msg>
<status status="PASS" starttime="20201029 18:20:29.240" endtime="20201029 18:20:29.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.258" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:20:29.256" endtime="20201029 18:20:29.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.264" level="INFO">VALUE: [8.024999999999699e-05, 8.020799999999828e-05, 7.986100000000051e-05, 8.022199999999785e-05, 8.072299999999782e-05, 8.061100000000126e-05, 8.037500000000058e-05, 8.002700000000335e-05, 8.051299999999734e-05, 8.054199999999595e-05, 7.969399999999821e-05, 7.905500000000149e-05, 8.055600000000246e-05, 7.890199999999875e-05, 8.037500000000058e-05, 7.920800000000422e-05, 8.070799999999878e-05, 8.052799999999638e-05, 7.993099999999836e-05, 8.054099999999648e-05, 7.988899999999965e-05, 7.987500000000008e-05, 8.047200000000504e-05, 7.986100000000051e-05, 8.054099999999648e-05, 8.022200000000479e-05, 7.987500000000008e-05, 8.007000000000153e-05, 8.072199999999835e-05, 8.070899999999825e-05, 7.988899999999965e-05, 8.020799999999828e-05, 7.998599999999717e-05, 8.052800000000332e-05, 7.987500000000008e-05, 8.076399999999706e-05, 8.054199999999595e-05, 8.069499999999868e-05, 7.998699999999664e-05, 8.023599999999742e-05, 7.919500000000412e-05, 8.036200000000049e-05, 8.054200000000289e-05, 8.069499999999868e-05, 7.986100000000051e-05, 8.002800000000282e-05, 8.069499999999868e-05, 7.987500000000008e-05, 8.037500000000058e-05, 7.911099999999976e-05]</msg>
<status status="PASS" starttime="20201029 18:20:29.261" endtime="20201029 18:20:29.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.249" endtime="20201029 18:20:29.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:29.276" endtime="20201029 18:20:29.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.272" endtime="20201029 18:20:29.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.270" endtime="20201029 18:20:29.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.746" endtime="20201029 18:20:29.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.745" endtime="20201029 18:20:29.302"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.325" endtime="20201029 18:20:29.348"></status>
</kw>
<msg timestamp="20201029 18:20:29.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:29.322" endtime="20201029 18:20:29.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:29.351" endtime="20201029 18:20:29.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.357" endtime="20201029 18:20:29.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.314" endtime="20201029 18:20:29.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.308" endtime="20201029 18:20:29.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.383" endtime="20201029 18:20:29.732"></status>
</kw>
<msg timestamp="20201029 18:20:29.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042195222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042282486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.379" endtime="20201029 18:20:29.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042195222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042282486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.742" endtime="20201029 18:20:29.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.761" endtime="20201029 18:20:29.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.372" endtime="20201029 18:20:29.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.367" endtime="20201029 18:20:29.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:29.778" level="INFO">${RESULT} = [{'diff': 8.726400000000356e-05}, {'diff': 8.761100000000133e-05}, {'diff': 8.772199999999841e-05}, {'diff': 8.716599999999963e-05}, {'diff': 8.71250000000004e-05}, {'diff': 8.770899999999832e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:29.770" endtime="20201029 18:20:29.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:29.788" level="INFO">${ACCURACY} = {'diff': [8.726400000000356e-05, 8.761100000000133e-05, 8.772199999999841e-05, 8.716599999999963e-05, 8.71250000000004e-05, 8.770899999999832e-05, 8.740200000000031e-05, 8.769499999999875e-05, 8.68750...</msg>
<status status="PASS" starttime="20201029 18:20:29.781" endtime="20201029 18:20:29.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.799" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:20:29.797" endtime="20201029 18:20:29.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.805" level="INFO">VALUE: [8.726400000000356e-05, 8.761100000000133e-05, 8.772199999999841e-05, 8.716599999999963e-05, 8.71250000000004e-05, 8.770899999999832e-05, 8.740200000000031e-05, 8.769499999999875e-05, 8.687500000000015e-05, 8.72920000000027e-05, 8.756999999999515e-05, 8.731900000000237e-05, 8.698599999999723e-05, 8.723599999999748e-05, 8.598599999999623e-05, 8.702800000000288e-05, 8.702700000000341e-05, 8.734699999999457e-05, 8.695799999999809e-05, 8.776399999999712e-05, 8.6944999999998e-05, 8.72370000000039e-05, 8.738900000000022e-05, 8.783300000000244e-05, 8.715299999999954e-05, 8.63470000000005e-05, 8.724999999999705e-05, 8.71250000000004e-05, 8.72920000000027e-05, 8.745899999999807e-05, 8.600000000000274e-05, 8.748600000000467e-05, 8.727800000000313e-05, 8.786100000000158e-05, 8.772199999999841e-05, 8.741699999999936e-05, 8.702799999999594e-05, 8.755600000000252e-05, 8.761100000000133e-05, 8.720799999999834e-05, 8.709700000000126e-05, 8.761100000000133e-05, 8.73470000000015e-05, 8.690299999999929e-05, 8.765300000000004e-05, 8.738900000000022e-05, 8.740299999999979e-05, 8.615299999999854e-05, 8.736100000000108e-05, 8.766600000000013e-05]</msg>
<status status="PASS" starttime="20201029 18:20:29.802" endtime="20201029 18:20:29.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.790" endtime="20201029 18:20:29.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:29.819" endtime="20201029 18:20:29.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.813" endtime="20201029 18:20:29.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.811" endtime="20201029 18:20:29.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.304" endtime="20201029 18:20:29.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.303" endtime="20201029 18:20:29.844"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.868" endtime="20201029 18:20:29.889"></status>
</kw>
<msg timestamp="20201029 18:20:29.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:29.865" endtime="20201029 18:20:29.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:29.893" endtime="20201029 18:20:29.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.899" endtime="20201029 18:20:29.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.857" endtime="20201029 18:20:29.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.851" endtime="20201029 18:20:29.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.923" endtime="20201029 18:20:30.280"></status>
</kw>
<msg timestamp="20201029 18:20:30.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040941833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041031347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.919" endtime="20201029 18:20:30.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040941833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041031347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:30.290" endtime="20201029 18:20:30.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.309" endtime="20201029 18:20:30.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.912" endtime="20201029 18:20:30.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.907" endtime="20201029 18:20:30.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:30.327" level="INFO">${RESULT} = [{'diff': 8.951400000000581e-05}, {'diff': 8.963900000000247e-05}, {'diff': 8.91670000000011e-05}, {'diff': 8.701400000000331e-05}, {'diff': 8.913799999999555e-05}, {'diff': 8.815300000000054e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:30.318" endtime="20201029 18:20:30.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:30.338" level="INFO">${ACCURACY} = {'diff': [8.951400000000581e-05, 8.963900000000247e-05, 8.91670000000011e-05, 8.701400000000331e-05, 8.913799999999555e-05, 8.815300000000054e-05, 8.881900000000387e-05, 8.94999999999993e-05, 8.918000...</msg>
<status status="PASS" starttime="20201029 18:20:30.329" endtime="20201029 18:20:30.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.349" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:20:30.347" endtime="20201029 18:20:30.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.355" level="INFO">VALUE: [8.951400000000581e-05, 8.963900000000247e-05, 8.91670000000011e-05, 8.701400000000331e-05, 8.913799999999555e-05, 8.815300000000054e-05, 8.881900000000387e-05, 8.94999999999993e-05, 8.91800000000012e-05, 8.752800000000338e-05, 8.929199999999776e-05, 8.81670000000001e-05, 8.951399999999887e-05, 8.802800000000388e-05, 8.838900000000122e-05, 8.895899999999957e-05, 8.734800000000098e-05, 8.844400000000002e-05, 8.941700000000136e-05, 8.856899999999668e-05, 8.877700000000516e-05, 8.902800000000488e-05, 8.918100000000068e-05, 8.836100000000208e-05, 8.895899999999957e-05, 8.912499999999546e-05, 8.891600000000138e-05, 8.822199999999891e-05, 8.824999999999805e-05, 8.881899999999693e-05, 8.919500000000025e-05, 8.875000000000549e-05, 8.870899999999932e-05, 8.854199999999701e-05, 8.96529999999951e-05, 8.873599999999898e-05, 8.96250000000029e-05, 8.941599999999494e-05, 8.805499999999661e-05, 8.922299999999939e-05, 8.915200000000206e-05, 8.736100000000108e-05, 8.808299999999575e-05, 8.969400000000127e-05, 8.924999999999905e-05, 8.805499999999661e-05, 8.911100000000283e-05, 8.71669999999991e-05, 8.869399999999333e-05, 8.886100000000258e-05]</msg>
<status status="PASS" starttime="20201029 18:20:30.352" endtime="20201029 18:20:30.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.340" endtime="20201029 18:20:30.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:30.368" endtime="20201029 18:20:30.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.363" endtime="20201029 18:20:30.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.360" endtime="20201029 18:20:30.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.847" endtime="20201029 18:20:30.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.845" endtime="20201029 18:20:30.393"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.416" endtime="20201029 18:20:30.437"></status>
</kw>
<msg timestamp="20201029 18:20:30.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.413" endtime="20201029 18:20:30.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.441" endtime="20201029 18:20:30.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.447" endtime="20201029 18:20:30.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.405" endtime="20201029 18:20:30.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.400" endtime="20201029 18:20:30.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.471" endtime="20201029 18:20:30.820"></status>
</kw>
<msg timestamp="20201029 18:20:30.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040418542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040508958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:30.467" endtime="20201029 18:20:30.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040418542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040508958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:30.830" endtime="20201029 18:20:30.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.849" endtime="20201029 18:20:30.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.460" endtime="20201029 18:20:30.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.455" endtime="20201029 18:20:30.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:30.867" level="INFO">${RESULT} = [{'diff': 9.041599999999594e-05}, {'diff': 9.070800000000184e-05}, {'diff': 9.020800000000134e-05}, {'diff': 9.001399999999937e-05}, {'diff': 9.06670000000026e-05}, {'diff': 9.070899999999438e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:30.858" endtime="20201029 18:20:30.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:30.878" level="INFO">${ACCURACY} = {'diff': [9.041599999999594e-05, 9.070800000000184e-05, 9.020800000000134e-05, 9.001399999999937e-05, 9.06670000000026e-05, 9.070899999999438e-05, 9.084699999999807e-05, 9.013899999999603e-05, 9.08059...</msg>
<status status="PASS" starttime="20201029 18:20:30.869" endtime="20201029 18:20:30.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.890" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:20:30.887" endtime="20201029 18:20:30.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.895" level="INFO">VALUE: [9.041599999999594e-05, 9.070800000000184e-05, 9.020800000000134e-05, 9.001399999999937e-05, 9.06670000000026e-05, 9.070899999999438e-05, 9.084699999999807e-05, 9.013899999999603e-05, 9.080599999999883e-05, 8.995800000000109e-05, 8.9945000000001e-05, 9.073599999999404e-05, 9.088900000000372e-05, 9.055599999999858e-05, 9.045800000000159e-05, 9.063899999999653e-05, 9.066600000000313e-05, 9.054200000000595e-05, 9.058399999999772e-05, 9.029100000000623e-05, 9.025000000000005e-05, 9.033300000000494e-05, 9.065300000000304e-05, 9.01659999999957e-05, 8.990199999999587e-05, 9.009699999999732e-05, 9.072200000000141e-05, 8.997199999999372e-05, 9.034799999999704e-05, 9.038899999999628e-05, 9.030499999999886e-05, 9.026399999999962e-05, 9.04450000000015e-05, 8.995899999999363e-05, 9.034700000000451e-05, 9.011100000000383e-05, 8.902799999999794e-05, 9.058299999999825e-05, 9.054099999999954e-05, 9.048600000000073e-05, 9.056899999999868e-05, 9.069400000000227e-05, 8.980499999999836e-05, 9.047300000000064e-05, 9.059699999999782e-05, 9.06529999999961e-05, 9.002799999999894e-05, 8.913900000000197e-05, 8.991600000000238e-05, 9.080499999999936e-05]</msg>
<status status="PASS" starttime="20201029 18:20:30.892" endtime="20201029 18:20:30.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.880" endtime="20201029 18:20:30.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:30.909" endtime="20201029 18:20:30.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.904" endtime="20201029 18:20:30.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.901" endtime="20201029 18:20:30.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.395" endtime="20201029 18:20:30.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.394" endtime="20201029 18:20:30.934"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.957" endtime="20201029 18:20:30.979"></status>
</kw>
<msg timestamp="20201029 18:20:30.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.954" endtime="20201029 18:20:30.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.982" endtime="20201029 18:20:30.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.989" endtime="20201029 18:20:30.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.947" endtime="20201029 18:20:30.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.941" endtime="20201029 18:20:30.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.014" endtime="20201029 18:20:31.376"></status>
</kw>
<msg timestamp="20201029 18:20:31.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040578917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04066975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:31.011" endtime="20201029 18:20:31.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040578917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04066975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:31.386" endtime="20201029 18:20:31.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.405" endtime="20201029 18:20:31.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.003" endtime="20201029 18:20:31.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.998" endtime="20201029 18:20:31.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:31.422" level="INFO">${RESULT} = [{'diff': 9.08329999999985e-05}, {'diff': 9.13199999999989e-05}, {'diff': 9.158300000000619e-05}, {'diff': 9.14450000000025e-05}, {'diff': 9.158300000000619e-05}, {'diff': 9.104199999999951e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:20:31.413" endtime="20201029 18:20:31.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:31.432" level="INFO">${ACCURACY} = {'diff': [9.08329999999985e-05, 9.13199999999989e-05, 9.158300000000619e-05, 9.14450000000025e-05, 9.158300000000619e-05, 9.104199999999951e-05, 9.123600000000148e-05, 9.152800000000044e-05, 9.1472000...</msg>
<status status="PASS" starttime="20201029 18:20:31.425" endtime="20201029 18:20:31.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.443" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:20:31.441" endtime="20201029 18:20:31.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.449" level="INFO">VALUE: [9.08329999999985e-05, 9.13199999999989e-05, 9.158300000000619e-05, 9.14450000000025e-05, 9.158300000000619e-05, 9.104199999999951e-05, 9.123600000000148e-05, 9.152800000000044e-05, 9.147200000000216e-05, 9.104199999999951e-05, 9.109699999999832e-05, 9.087500000000415e-05, 9.161099999999839e-05, 9.108299999999875e-05, 9.080600000000577e-05, 9.077799999999969e-05, 9.108299999999875e-05, 9.165300000000404e-05, 9.101400000000037e-05, 9.143000000000345e-05, 9.155599999999958e-05, 9.11800000000032e-05, 9.042999999999551e-05, 9.079199999999926e-05, 9.148600000000173e-05, 9.070800000000184e-05, 8.991700000000186e-05, 9.047200000000116e-05, 9.172200000000241e-05, 9.131899999999943e-05, 9.173600000000198e-05, 9.138900000000422e-05, 9.176400000000112e-05, 9.155599999999958e-05, 9.169400000000327e-05, 9.130599999999933e-05, 9.136099999999814e-05, 9.170900000000232e-05, 9.177800000000069e-05, 9.084699999999807e-05, 9.090200000000381e-05, 9.148600000000173e-05, 9.10000000000008e-05, 9.093000000000295e-05, 9.05000000000003e-05, 9.11250000000044e-05, 9.025000000000005e-05, 9.156899999999968e-05, 9.152800000000044e-05, 9.134699999999857e-05]</msg>
<status status="PASS" starttime="20201029 18:20:31.446" endtime="20201029 18:20:31.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.434" endtime="20201029 18:20:31.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:31.462" endtime="20201029 18:20:31.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.457" endtime="20201029 18:20:31.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.454" endtime="20201029 18:20:31.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.936" endtime="20201029 18:20:31.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.935" endtime="20201029 18:20:31.487"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.510" endtime="20201029 18:20:31.533"></status>
</kw>
<msg timestamp="20201029 18:20:31.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:31.507" endtime="20201029 18:20:31.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:31.536" endtime="20201029 18:20:31.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.543" endtime="20201029 18:20:31.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.500" endtime="20201029 18:20:31.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.494" endtime="20201029 18:20:31.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.567" endtime="20201029 18:20:31.918"></status>
</kw>
<msg timestamp="20201029 18:20:31.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042189125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042281222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:31.563" endtime="20201029 18:20:31.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042189125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042281222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:31.928" endtime="20201029 18:20:31.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.947" endtime="20201029 18:20:31.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.556" endtime="20201029 18:20:31.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.551" endtime="20201029 18:20:31.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:31.964" level="INFO">${RESULT} = [{'diff': 9.209699999999932e-05}, {'diff': 9.184699999999907e-05}, {'diff': 9.25000000000023e-05}, {'diff': 9.261099999999939e-05}, {'diff': 9.25279999999945e-05}, {'diff': 9.226300000000215e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:31.955" endtime="20201029 18:20:31.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:31.974" level="INFO">${ACCURACY} = {'diff': [9.209699999999932e-05, 9.184699999999907e-05, 9.25000000000023e-05, 9.261099999999939e-05, 9.25279999999945e-05, 9.226300000000215e-05, 9.236099999999914e-05, 9.272299999999595e-05, 9.277800...</msg>
<status status="PASS" starttime="20201029 18:20:31.966" endtime="20201029 18:20:31.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.985" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:20:31.983" endtime="20201029 18:20:31.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.991" level="INFO">VALUE: [9.209699999999932e-05, 9.184699999999907e-05, 9.25000000000023e-05, 9.261099999999939e-05, 9.25279999999945e-05, 9.226300000000215e-05, 9.236099999999914e-05, 9.272299999999595e-05, 9.277800000000169e-05, 9.173600000000198e-05, 9.219400000000377e-05, 9.212499999999846e-05, 9.244499999999656e-05, 9.251400000000187e-05, 9.2333e-05, 9.187499999999821e-05, 9.202800000000094e-05, 9.201400000000137e-05, 9.21659999999977e-05, 9.209699999999932e-05, 9.272199999999647e-05, 9.115200000000406e-05, 9.209699999999932e-05, 9.226400000000162e-05, 9.263900000000547e-05, 9.180500000000036e-05, 9.106999999999865e-05, 9.247300000000264e-05, 9.187499999999821e-05, 9.177800000000069e-05, 9.18199999999994e-05, 9.204199999999357e-05, 9.19870000000017e-05, 9.251400000000187e-05, 9.262499999999896e-05, 9.106899999999918e-05, 9.140299999999685e-05, 9.24859999999958e-05, 9.192999999999701e-05, 9.090300000000329e-05, 9.143100000000293e-05, 9.201400000000137e-05, 9.238900000000522e-05, 9.263899999999853e-05, 9.2333e-05, 9.229200000000076e-05, 9.209699999999932e-05, 9.197200000000266e-05, 9.18199999999994e-05, 9.2027999999994e-05]</msg>
<status status="PASS" starttime="20201029 18:20:31.987" endtime="20201029 18:20:31.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.976" endtime="20201029 18:20:31.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:32.005" endtime="20201029 18:20:32.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.999" endtime="20201029 18:20:32.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.996" endtime="20201029 18:20:32.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.489" endtime="20201029 18:20:32.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.488" endtime="20201029 18:20:32.031"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.056" endtime="20201029 18:20:32.077"></status>
</kw>
<msg timestamp="20201029 18:20:32.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:32.052" endtime="20201029 18:20:32.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:32.080" endtime="20201029 18:20:32.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.087" endtime="20201029 18:20:32.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.044" endtime="20201029 18:20:32.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.038" endtime="20201029 18:20:32.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.111" endtime="20201029 18:20:32.462"></status>
</kw>
<msg timestamp="20201029 18:20:32.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042593625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042686667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:32.107" endtime="20201029 18:20:32.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042593625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042686667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:32.472" endtime="20201029 18:20:32.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.490" endtime="20201029 18:20:32.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.100" endtime="20201029 18:20:32.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.095" endtime="20201029 18:20:32.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:32.508" level="INFO">${RESULT} = [{'diff': 9.304199999999457e-05}, {'diff': 9.363899999999953e-05}, {'diff': 9.363800000000005e-05}, {'diff': 9.297200000000366e-05}, {'diff': 9.330600000000133e-05}, {'diff': 9.337499999999971e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:32.499" endtime="20201029 18:20:32.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:32.520" level="INFO">${ACCURACY} = {'diff': [9.304199999999457e-05, 9.363899999999953e-05, 9.363800000000005e-05, 9.297200000000366e-05, 9.330600000000133e-05, 9.337499999999971e-05, 9.375000000000355e-05, 9.369499999999781e-05, 9.3486...</msg>
<status status="PASS" starttime="20201029 18:20:32.511" endtime="20201029 18:20:32.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.531" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:20:32.528" endtime="20201029 18:20:32.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.536" level="INFO">VALUE: [9.304199999999457e-05, 9.363899999999953e-05, 9.363800000000005e-05, 9.297200000000366e-05, 9.330600000000133e-05, 9.337499999999971e-05, 9.375000000000355e-05, 9.369499999999781e-05, 9.348699999999627e-05, 9.366699999999867e-05, 9.288899999999878e-05, 9.349999999999636e-05, 9.34450000000045e-05, 9.329099999999535e-05, 9.280500000000136e-05, 9.302800000000194e-05, 9.376400000000312e-05, 9.204200000000051e-05, 9.322199999999697e-05, 9.294499999999706e-05, 9.318099999999774e-05, 9.308300000000075e-05, 9.317999999999826e-05, 9.287499999999921e-05, 9.205500000000061e-05, 9.336100000000014e-05, 9.311099999999989e-05, 9.255600000000058e-05, 9.355599999999464e-05, 9.304100000000204e-05, 9.22079999999964e-05, 9.356899999999474e-05, 9.295900000000357e-05, 9.312499999999946e-05, 9.330600000000133e-05, 9.313899999999903e-05, 9.237499999999871e-05, 9.295799999999715e-05, 9.368099999999824e-05, 9.277800000000169e-05, 9.351400000000287e-05, 9.31800000000052e-05, 9.269400000000427e-05, 9.358300000000125e-05, 9.340299999999885e-05, 9.286200000000605e-05, 9.330499999999492e-05, 9.288899999999878e-05, 9.291700000000486e-05, 9.334800000000004e-05]</msg>
<status status="PASS" starttime="20201029 18:20:32.533" endtime="20201029 18:20:32.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.521" endtime="20201029 18:20:32.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:32.549" endtime="20201029 18:20:32.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.545" endtime="20201029 18:20:32.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.542" endtime="20201029 18:20:32.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.033" endtime="20201029 18:20:32.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.032" endtime="20201029 18:20:32.574"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.598" endtime="20201029 18:20:32.619"></status>
</kw>
<msg timestamp="20201029 18:20:32.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:32.594" endtime="20201029 18:20:32.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:32.623" endtime="20201029 18:20:32.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.629" endtime="20201029 18:20:32.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.587" endtime="20201029 18:20:32.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.581" endtime="20201029 18:20:32.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.653" endtime="20201029 18:20:33.008"></status>
</kw>
<msg timestamp="20201029 18:20:33.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040860264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040954556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:32.650" endtime="20201029 18:20:33.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040860264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040954556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:33.017" endtime="20201029 18:20:33.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.036" endtime="20201029 18:20:33.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.642" endtime="20201029 18:20:33.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.637" endtime="20201029 18:20:33.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:33.054" level="INFO">${RESULT} = [{'diff': 9.429200000000276e-05}, {'diff': 9.481900000000293e-05}, {'diff': 9.351399999999593e-05}, {'diff': 9.438900000000028e-05}, {'diff': 9.486100000000164e-05}, {'diff': 9.445799999999865e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:33.045" endtime="20201029 18:20:33.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:33.066" level="INFO">${ACCURACY} = {'diff': [9.429200000000276e-05, 9.481900000000293e-05, 9.351399999999593e-05, 9.438900000000028e-05, 9.486100000000164e-05, 9.445799999999865e-05, 9.479199999999632e-05, 9.436100000000114e-05, 9.4125...</msg>
<status status="PASS" starttime="20201029 18:20:33.056" endtime="20201029 18:20:33.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.077" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:20:33.075" endtime="20201029 18:20:33.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.083" level="INFO">VALUE: [9.429200000000276e-05, 9.481900000000293e-05, 9.351399999999593e-05, 9.438900000000028e-05, 9.486100000000164e-05, 9.445799999999865e-05, 9.479199999999632e-05, 9.436100000000114e-05, 9.412500000000046e-05, 9.390299999999935e-05, 9.445800000000559e-05, 9.473599999999804e-05, 9.429200000000276e-05, 9.423599999999754e-05, 9.434700000000157e-05, 9.420800000000534e-05, 9.39859999999973e-05, 9.445799999999865e-05, 9.420899999999788e-05, 9.46530000000001e-05, 9.41659999999997e-05, 9.461100000000139e-05, 9.458299999999531e-05, 9.445900000000507e-05, 9.41529999999996e-05, 9.41800000000062e-05, 9.413900000000003e-05, 9.411100000000089e-05, 9.409700000000132e-05, 9.384800000000054e-05, 9.384699999999413e-05, 9.392999999999901e-05, 9.42079999999984e-05, 9.451400000000387e-05, 9.391699999999892e-05, 9.476399999999718e-05, 9.445799999999865e-05, 9.429200000000276e-05, 9.425000000000405e-05, 9.409699999999438e-05, 9.449999999999736e-05, 9.431900000000243e-05, 9.429200000000276e-05, 9.463799999999412e-05, 9.434700000000157e-05, 9.451399999999693e-05, 9.456900000000268e-05, 9.402800000000294e-05, 9.44859999999978e-05, 9.48330000000025e-05]</msg>
<status status="PASS" starttime="20201029 18:20:33.080" endtime="20201029 18:20:33.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.068" endtime="20201029 18:20:33.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:33.097" endtime="20201029 18:20:33.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.092" endtime="20201029 18:20:33.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.090" endtime="20201029 18:20:33.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.577" endtime="20201029 18:20:33.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.575" endtime="20201029 18:20:33.123"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.146" endtime="20201029 18:20:33.168"></status>
</kw>
<msg timestamp="20201029 18:20:33.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:33.143" endtime="20201029 18:20:33.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:33.172" endtime="20201029 18:20:33.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.178" endtime="20201029 18:20:33.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.135" endtime="20201029 18:20:33.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.129" endtime="20201029 18:20:33.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.202" endtime="20201029 18:20:33.554"></status>
</kw>
<msg timestamp="20201029 18:20:33.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040753764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040850306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:33.198" endtime="20201029 18:20:33.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040753764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040850306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:33.564" endtime="20201029 18:20:33.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.583" endtime="20201029 18:20:33.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.191" endtime="20201029 18:20:33.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.186" endtime="20201029 18:20:33.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:33.600" level="INFO">${RESULT} = [{'diff': 9.654200000000501e-05}, {'diff': 9.581900000000393e-05}, {'diff': 9.590300000000135e-05}, {'diff': 9.588900000000178e-05}, {'diff': 9.586100000000264e-05}, {'diff': 9.686100000000364e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:33.591" endtime="20201029 18:20:33.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:33.610" level="INFO">${ACCURACY} = {'diff': [9.654200000000501e-05, 9.581900000000393e-05, 9.590300000000135e-05, 9.588900000000178e-05, 9.586100000000264e-05, 9.686100000000364e-05, 9.588899999999484e-05, 9.620899999999988e-05, 9.6013...</msg>
<status status="PASS" starttime="20201029 18:20:33.602" endtime="20201029 18:20:33.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.621" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:20:33.619" endtime="20201029 18:20:33.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.627" level="INFO">VALUE: [9.654200000000501e-05, 9.581900000000393e-05, 9.590300000000135e-05, 9.588900000000178e-05, 9.586100000000264e-05, 9.686100000000364e-05, 9.588899999999484e-05, 9.620899999999988e-05, 9.601399999999843e-05, 9.640200000000237e-05, 9.60409999999981e-05, 9.631899999999749e-05, 9.572199999999947e-05, 9.63059999999974e-05, 9.640300000000185e-05, 9.588799999999537e-05, 9.64859999999998e-05, 9.491699999999992e-05, 9.674999999999961e-05, 9.616599999999476e-05, 9.601399999999843e-05, 9.668100000000124e-05, 9.643099999999405e-05, 9.663900000000253e-05, 9.669400000000133e-05, 9.634699999999663e-05, 9.559699999999588e-05, 9.641700000000142e-05, 9.606900000000418e-05, 9.627799999999825e-05, 9.620899999999988e-05, 9.615299999999466e-05, 9.495799999999915e-05, 9.638900000000228e-05, 9.591700000000092e-05, 9.591699999999398e-05, 9.64859999999998e-05, 9.669400000000133e-05, 9.608300000000375e-05, 9.619500000000031e-05, 9.541700000000042e-05, 9.561099999999545e-05, 9.640300000000185e-05, 9.645800000000065e-05, 9.511100000000189e-05, 9.669400000000133e-05, 9.640300000000185e-05, 9.655600000000458e-05, 9.594500000000006e-05, 9.641600000000194e-05]</msg>
<status status="PASS" starttime="20201029 18:20:33.623" endtime="20201029 18:20:33.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.612" endtime="20201029 18:20:33.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:33.639" endtime="20201029 18:20:33.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.635" endtime="20201029 18:20:33.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.632" endtime="20201029 18:20:33.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.125" endtime="20201029 18:20:33.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.124" endtime="20201029 18:20:33.665"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.688" endtime="20201029 18:20:33.711"></status>
</kw>
<msg timestamp="20201029 18:20:33.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:33.684" endtime="20201029 18:20:33.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:33.715" endtime="20201029 18:20:33.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.721" endtime="20201029 18:20:33.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.677" endtime="20201029 18:20:33.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.671" endtime="20201029 18:20:33.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.745" endtime="20201029 18:20:34.096"></status>
</kw>
<msg timestamp="20201029 18:20:34.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042139833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042237556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:33.741" endtime="20201029 18:20:34.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042139833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042237556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:34.106" endtime="20201029 18:20:34.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.125" endtime="20201029 18:20:34.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.734" endtime="20201029 18:20:34.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.729" endtime="20201029 18:20:34.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:34.144" level="INFO">${RESULT} = [{'diff': 9.772300000000095e-05}, {'diff': 9.705599999999814e-05}, {'diff': 9.74860000000008e-05}, {'diff': 9.730499999999892e-05}, {'diff': 9.740299999999591e-05}, {'diff': 9.762499999999702e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:34.135" endtime="20201029 18:20:34.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:34.154" level="INFO">${ACCURACY} = {'diff': [9.772300000000095e-05, 9.705599999999814e-05, 9.74860000000008e-05, 9.730499999999892e-05, 9.740299999999591e-05, 9.762499999999702e-05, 9.737499999999677e-05, 9.768000000000276e-05, 9.74309...</msg>
<status status="PASS" starttime="20201029 18:20:34.146" endtime="20201029 18:20:34.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.165" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:20:34.162" endtime="20201029 18:20:34.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.170" level="INFO">VALUE: [9.772300000000095e-05, 9.705599999999814e-05, 9.74860000000008e-05, 9.730499999999892e-05, 9.740299999999591e-05, 9.762499999999702e-05, 9.737499999999677e-05, 9.768000000000276e-05, 9.743099999999505e-05, 9.745800000000165e-05, 9.768100000000224e-05, 9.688900000000278e-05, 9.71530000000026e-05, 9.605499999999767e-05, 9.73059999999984e-05, 9.719400000000183e-05, 9.781899999999899e-05, 9.69860000000003e-05, 9.758299999999831e-05, 9.712499999999652e-05, 9.738900000000328e-05, 9.708300000000475e-05, 9.605600000000408e-05, 9.620899999999988e-05, 9.720900000000088e-05, 9.76530000000031e-05, 9.73059999999984e-05, 9.751399999999993e-05, 9.729099999999935e-05, 9.7333000000005e-05, 9.73609999999972e-05, 9.668000000000176e-05, 9.71530000000026e-05, 9.687500000000321e-05, 9.776400000000018e-05, 9.723600000000054e-05, 9.715199999999619e-05, 9.693100000000149e-05, 9.694400000000158e-05, 9.768100000000224e-05, 9.697200000000072e-05, 9.759799999999735e-05, 9.769499999999487e-05, 9.704199999999857e-05, 9.694400000000158e-05, 9.704200000000551e-05, 9.690299999999541e-05, 9.788900000000378e-05, 9.733299999999806e-05, 9.744500000000156e-05]</msg>
<status status="PASS" starttime="20201029 18:20:34.167" endtime="20201029 18:20:34.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.155" endtime="20201029 18:20:34.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:34.189" endtime="20201029 18:20:34.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.179" endtime="20201029 18:20:34.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.176" endtime="20201029 18:20:34.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.667" endtime="20201029 18:20:34.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.666" endtime="20201029 18:20:34.214"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.238" endtime="20201029 18:20:34.259"></status>
</kw>
<msg timestamp="20201029 18:20:34.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:34.234" endtime="20201029 18:20:34.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:34.263" endtime="20201029 18:20:34.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.269" endtime="20201029 18:20:34.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.227" endtime="20201029 18:20:34.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.221" endtime="20201029 18:20:34.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.293" endtime="20201029 18:20:34.643"></status>
</kw>
<msg timestamp="20201029 18:20:34.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040444417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040542792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:34.290" endtime="20201029 18:20:34.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040444417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040542792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:34.653" endtime="20201029 18:20:34.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.672" endtime="20201029 18:20:34.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.283" endtime="20201029 18:20:34.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.277" endtime="20201029 18:20:34.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:34.690" level="INFO">${RESULT} = [{'diff': 9.837499999999777e-05}, {'diff': 9.850000000000136e-05}, {'diff': 9.85280000000005e-05}, {'diff': 9.861200000000486e-05}, {'diff': 9.783299999999856e-05}, {'diff': 9.858400000000572e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:34.681" endtime="20201029 18:20:34.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:34.701" level="INFO">${ACCURACY} = {'diff': [9.837499999999777e-05, 9.850000000000136e-05, 9.85280000000005e-05, 9.861200000000486e-05, 9.783299999999856e-05, 9.858400000000572e-05, 9.856899999999974e-05, 9.83609999999982e-05, 9.826399...</msg>
<status status="PASS" starttime="20201029 18:20:34.692" endtime="20201029 18:20:34.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.712" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:20:34.710" endtime="20201029 18:20:34.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.717" level="INFO">VALUE: [9.837499999999777e-05, 9.850000000000136e-05, 9.85280000000005e-05, 9.861200000000486e-05, 9.783299999999856e-05, 9.858400000000572e-05, 9.856899999999974e-05, 9.83609999999982e-05, 9.826399999999375e-05, 9.870899999999544e-05, 9.801300000000096e-05, 9.865299999999716e-05, 9.836100000000514e-05, 9.809799999999785e-05, 9.862499999999802e-05, 9.86530000000041e-05, 9.881899999999999e-05, 9.793000000000301e-05, 9.845800000000265e-05, 9.793100000000249e-05, 9.800000000000086e-05, 9.822200000000197e-05, 9.884699999999913e-05, 9.851400000000093e-05, 9.790300000000335e-05, 9.837499999999777e-05, 9.870899999999544e-05, 9.855599999999964e-05, 9.83059999999994e-05, 9.827800000000025e-05, 9.8028e-05, 9.688900000000278e-05, 9.850000000000136e-05, 9.850000000000136e-05, 9.843100000000299e-05, 9.813899999999709e-05, 9.719500000000131e-05, 9.793100000000249e-05, 9.848700000000127e-05, 9.747200000000122e-05, 9.838899999999734e-05, 9.863899999999759e-05, 9.866699999999673e-05, 9.797200000000172e-05, 9.820900000000188e-05, 9.784699999999813e-05, 9.775000000000061e-05, 9.754199999999907e-05, 9.795800000000215e-05, 9.84860000000018e-05]</msg>
<status status="PASS" starttime="20201029 18:20:34.714" endtime="20201029 18:20:34.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.703" endtime="20201029 18:20:34.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:34.730" endtime="20201029 18:20:34.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.726" endtime="20201029 18:20:34.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.723" endtime="20201029 18:20:34.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.217" endtime="20201029 18:20:34.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.215" endtime="20201029 18:20:34.757"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.788" endtime="20201029 18:20:34.817"></status>
</kw>
<msg timestamp="20201029 18:20:34.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:34.784" endtime="20201029 18:20:34.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:34.822" endtime="20201029 18:20:34.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.829" endtime="20201029 18:20:34.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.774" endtime="20201029 18:20:34.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.766" endtime="20201029 18:20:34.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.852" endtime="20201029 18:20:35.201"></status>
</kw>
<msg timestamp="20201029 18:20:35.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050996069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051095347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:34.849" endtime="20201029 18:20:35.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050996069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051095347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:35.211" endtime="20201029 18:20:35.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.230" endtime="20201029 18:20:35.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.842" endtime="20201029 18:20:35.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.837" endtime="20201029 18:20:35.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:35.248" level="INFO">${RESULT} = [{'diff': 9.927800000000125e-05}, {'diff': 9.91809999999968e-05}, {'diff': 9.809699999999838e-05}, {'diff': 9.918100000000374e-05}, {'diff': 9.959799999999935e-05}, {'diff': 9.961099999999945e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:35.239" endtime="20201029 18:20:35.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:35.259" level="INFO">${ACCURACY} = {'diff': [9.927800000000125e-05, 9.91809999999968e-05, 9.809699999999838e-05, 9.918100000000374e-05, 9.959799999999935e-05, 9.961099999999945e-05, 9.893099999999655e-05, 9.888900000000478e-05, 9.85000...</msg>
<status status="PASS" starttime="20201029 18:20:35.250" endtime="20201029 18:20:35.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.270" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:20:35.268" endtime="20201029 18:20:35.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.276" level="INFO">VALUE: [9.927800000000125e-05, 9.91809999999968e-05, 9.809699999999838e-05, 9.918100000000374e-05, 9.959799999999935e-05, 9.961099999999945e-05, 9.893099999999655e-05, 9.888900000000478e-05, 9.850000000000136e-05, 9.924999999999518e-05, 9.904200000000057e-05, 9.890300000000435e-05, 9.962499999999902e-05, 9.97359999999961e-05, 9.863799999999812e-05, 9.794399999999565e-05, 9.915199999999819e-05, 9.970799999999697e-05, 9.916700000000417e-05, 9.863900000000453e-05, 9.943000000000451e-05, 9.9513999999995e-05, 9.898599999999536e-05, 9.940299999999791e-05, 9.823600000000154e-05, 9.916599999999776e-05, 9.905500000000067e-05, 9.894499999999612e-05, 9.856999999999921e-05, 9.879100000000085e-05, 9.895800000000315e-05, 9.876400000000118e-05, 9.844400000000308e-05, 9.947200000000322e-05, 9.905600000000014e-05, 9.915200000000512e-05, 9.983400000000003e-05, 9.926400000000168e-05, 9.965299999999816e-05, 9.941699999999748e-05, 9.911099999999895e-05, 9.983300000000056e-05, 9.96939999999974e-05, 9.968000000000476e-05, 9.934699999999963e-05, 9.827800000000025e-05, 9.893100000000349e-05, 9.963799999999912e-05, 9.894400000000358e-05, 9.941699999999748e-05]</msg>
<status status="PASS" starttime="20201029 18:20:35.273" endtime="20201029 18:20:35.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.261" endtime="20201029 18:20:35.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:35.288" endtime="20201029 18:20:35.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.284" endtime="20201029 18:20:35.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.281" endtime="20201029 18:20:35.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.760" endtime="20201029 18:20:35.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.758" endtime="20201029 18:20:35.314"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.337" endtime="20201029 18:20:35.358"></status>
</kw>
<msg timestamp="20201029 18:20:35.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:35.333" endtime="20201029 18:20:35.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:35.362" endtime="20201029 18:20:35.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.368" endtime="20201029 18:20:35.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.326" endtime="20201029 18:20:35.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.320" endtime="20201029 18:20:35.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.392" endtime="20201029 18:20:35.742"></status>
</kw>
<msg timestamp="20201029 18:20:35.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040327319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040427764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:35.388" endtime="20201029 18:20:35.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040327319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040427764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:35.752" endtime="20201029 18:20:35.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.770" endtime="20201029 18:20:35.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.381" endtime="20201029 18:20:35.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.376" endtime="20201029 18:20:35.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:35.788" level="INFO">${RESULT} = [{'diff': 0.00010044499999999762}, {'diff': 9.994400000000458e-05}, {'diff': 0.00010082000000000146}, {'diff': 9.991600000000544e-05}, {'diff': 9.980500000000142e-05}, {'diff': 0.0001008610000000007},...</msg>
<status status="PASS" starttime="20201029 18:20:35.779" endtime="20201029 18:20:35.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:35.797" level="INFO">${ACCURACY} = {'diff': [0.00010044499999999762, 9.994400000000458e-05, 0.00010082000000000146, 9.991600000000544e-05, 9.980500000000142e-05, 0.0001008610000000007, 0.00010007000000000071, 0.00010027799999999532, 0....</msg>
<status status="PASS" starttime="20201029 18:20:35.790" endtime="20201029 18:20:35.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.808" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:20:35.806" endtime="20201029 18:20:35.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.814" level="INFO">VALUE: [0.00010044499999999762, 9.994400000000458e-05, 0.00010082000000000146, 9.991600000000544e-05, 9.980500000000142e-05, 0.0001008610000000007, 0.00010007000000000071, 0.00010027799999999532, 0.0001003610000000002, 0.0001005280000000025, 0.00010026400000000268, 0.00010022200000000397, 9.933300000000006e-05, 9.988899999999884e-05, 0.00010088899999999984, 0.00010037499999999977, 0.00010001400000000243, 0.0001004730000000037, 0.00010050000000000336, 0.00010059800000000035, 0.0001008060000000019, 0.00010065199999999969, 0.00010048599999999686, 0.00010088799999999343, 0.00010059700000000088, 9.919500000000331e-05, 0.00010015299999999866, 9.991700000000492e-05, 0.0001003610000000002, 0.00010029199999999489, 0.00010004200000000157, 0.00010084700000000113, 0.0001008480000000006, 0.00010051400000000293, 0.00010043099999999805, 0.00010032000000000096, 0.00010077800000000275, 0.00010063899999999959, 9.934699999999963e-05, 0.00010013899999999909, 9.96939999999974e-05, 0.00010011099999999995, 0.00010083300000000156, 0.0001006939999999984, 0.00010038899999999934, 9.990300000000535e-05, 9.991699999999798e-05, 0.00010015199999999919, 0.00010029200000000182, 9.906900000000024e-05]</msg>
<status status="PASS" starttime="20201029 18:20:35.811" endtime="20201029 18:20:35.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.799" endtime="20201029 18:20:35.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:35.827" endtime="20201029 18:20:35.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.822" endtime="20201029 18:20:35.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.820" endtime="20201029 18:20:35.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.316" endtime="20201029 18:20:35.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.315" endtime="20201029 18:20:35.852"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.875" endtime="20201029 18:20:35.898"></status>
</kw>
<msg timestamp="20201029 18:20:35.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:35.872" endtime="20201029 18:20:35.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:35.902" endtime="20201029 18:20:35.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.908" endtime="20201029 18:20:35.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.864" endtime="20201029 18:20:35.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.858" endtime="20201029 18:20:35.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.932" endtime="20201029 18:20:36.282"></status>
</kw>
<msg timestamp="20201029 18:20:36.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0420615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042163208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:20:35.928" endtime="20201029 18:20:36.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0420615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042163208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:20:36.291" endtime="20201029 18:20:36.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.310" endtime="20201029 18:20:36.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.921" endtime="20201029 18:20:36.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.916" endtime="20201029 18:20:36.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:36.327" level="INFO">${RESULT} = [{'diff': 0.00010170799999999897}, {'diff': 0.00010166699999999973}, {'diff': 0.00010127800000000325}, {'diff': 0.00010149999999999743}, {'diff': 0.0001018480000000016}, {'diff': 0.0001009579999999982...</msg>
<status status="PASS" starttime="20201029 18:20:36.318" endtime="20201029 18:20:36.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:36.336" level="INFO">${ACCURACY} = {'diff': [0.00010170799999999897, 0.00010166699999999973, 0.00010127800000000325, 0.00010149999999999743, 0.0001018480000000016, 0.00010095799999999822, 0.0001016939999999994, 0.00010140299999999991, ...</msg>
<status status="PASS" starttime="20201029 18:20:36.329" endtime="20201029 18:20:36.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.348" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:20:36.345" endtime="20201029 18:20:36.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.353" level="INFO">VALUE: [0.00010170799999999897, 0.00010166699999999973, 0.00010127800000000325, 0.00010149999999999743, 0.0001018480000000016, 0.00010095799999999822, 0.0001016939999999994, 0.00010140299999999991, 0.00010098700000000377, 0.00010141699999999948, 0.00010108400000000128, 0.00010055500000000217, 0.00010133299999999512, 0.000101028000000003, 0.00010170799999999897, 0.00010181899999999605, 0.00010116699999999923, 0.0001011939999999989, 0.00010150000000000436, 0.00010158300000000231, 0.00010172199999999854, 0.00010109699999999444, 0.00010104200000000257, 0.00010140200000000044, 0.000101513999999997, 0.00010151400000000393, 0.000101513999999997, 0.00010041699999999848, 0.0001009860000000043, 0.00010126400000000368, 0.00010129200000000282, 0.0001014860000000048, 0.00010087500000000027, 0.0001011809999999988, 0.00010131899999999555, 0.00010080500000000242, 0.00010092999999999908, 0.000101028000000003, 0.00010054200000000207, 0.00010137500000000077, 0.00010167999999999983, 0.00010095799999999822, 0.00010087500000000027, 0.00010099999999999693, 0.00010163800000000112, 0.000101513999999997, 0.00010022299999999651, 0.00010105499999999573, 0.00010169499999999887, 0.00010176400000000418]</msg>
<status status="PASS" starttime="20201029 18:20:36.350" endtime="20201029 18:20:36.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.338" endtime="20201029 18:20:36.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:36.372" endtime="20201029 18:20:36.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.366" endtime="20201029 18:20:36.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.364" endtime="20201029 18:20:36.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.854" endtime="20201029 18:20:36.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.853" endtime="20201029 18:20:36.398"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.421" endtime="20201029 18:20:36.443"></status>
</kw>
<msg timestamp="20201029 18:20:36.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:36.418" endtime="20201029 18:20:36.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:36.446" endtime="20201029 18:20:36.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.452" endtime="20201029 18:20:36.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.410" endtime="20201029 18:20:36.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.404" endtime="20201029 18:20:36.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.476" endtime="20201029 18:20:36.827"></status>
</kw>
<msg timestamp="20201029 18:20:36.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040622861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040725306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:36.473" endtime="20201029 18:20:36.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040622861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040725306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:36.836" endtime="20201029 18:20:36.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.855" endtime="20201029 18:20:36.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.465" endtime="20201029 18:20:36.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.461" endtime="20201029 18:20:36.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:36.872" level="INFO">${RESULT} = [{'diff': 0.00010244499999999962}, {'diff': 0.00010195799999999922}, {'diff': 0.00010177799999999682}, {'diff': 0.00010198599999999836}, {'diff': 0.00010272199999999954}, {'diff': 0.000100930999999998...</msg>
<status status="PASS" starttime="20201029 18:20:36.863" endtime="20201029 18:20:36.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:36.883" level="INFO">${ACCURACY} = {'diff': [0.00010244499999999962, 0.00010195799999999922, 0.00010177799999999682, 0.00010198599999999836, 0.00010272199999999954, 0.00010093099999999855, 0.00010233400000000253, 0.00010256900000000374...</msg>
<status status="PASS" starttime="20201029 18:20:36.874" endtime="20201029 18:20:36.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.894" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:20:36.892" endtime="20201029 18:20:36.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.899" level="INFO">VALUE: [0.00010244499999999962, 0.00010195799999999922, 0.00010177799999999682, 0.00010198599999999836, 0.00010272199999999954, 0.00010093099999999855, 0.00010233400000000253, 0.00010256900000000374, 0.00010197199999999879, 0.00010229200000000382, 0.00010268000000000083, 0.00010198599999999836, 0.0001023889999999944, 0.00010255600000000364, 0.00010199999999999793, 0.00010181900000000299, 0.00010211199999999448, 0.00010220799999999947, 0.00010229099999999741, 0.00010266700000000073, 0.0001020689999999963, 0.00010233300000000306, 0.00010222199999999904, 0.00010134699999999469, 0.00010230599999999646, 0.00010144499999999862, 0.00010130499999999598, 0.00010241700000000048, 0.00010218000000000033, 0.00010266700000000073, 0.00010244400000000015, 0.00010224999999999818, 0.00010272199999999954, 0.00010144499999999862, 0.00010266700000000073, 0.00010129099999999641, 0.00010234699999999569, 0.00010132000000000196, 0.00010265300000000116, 0.00010162500000000102, 0.00010188900000000084, 0.00010112500000000052, 0.00010224999999999818, 0.00010156999999999528, 0.0001026940000000004, 0.0001025410000000046, 0.000102028000000004, 0.00010205600000000314, 0.00010245799999999972, 0.00010269499999999987]</msg>
<status status="PASS" starttime="20201029 18:20:36.896" endtime="20201029 18:20:36.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.885" endtime="20201029 18:20:36.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:36.912" endtime="20201029 18:20:36.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.908" endtime="20201029 18:20:36.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.905" endtime="20201029 18:20:36.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.400" endtime="20201029 18:20:36.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.399" endtime="20201029 18:20:36.938"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.961" endtime="20201029 18:20:36.983"></status>
</kw>
<msg timestamp="20201029 18:20:36.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:36.957" endtime="20201029 18:20:36.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:36.987" endtime="20201029 18:20:36.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.993" endtime="20201029 18:20:36.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.950" endtime="20201029 18:20:36.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.944" endtime="20201029 18:20:37.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.018" endtime="20201029 18:20:37.375"></status>
</kw>
<msg timestamp="20201029 18:20:37.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040377556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040480625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:37.014" endtime="20201029 18:20:37.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040377556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040480625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:37.384" endtime="20201029 18:20:37.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.402" endtime="20201029 18:20:37.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.007" endtime="20201029 18:20:37.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.002" endtime="20201029 18:20:37.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:37.420" level="INFO">${RESULT} = [{'diff': 0.0001030689999999973}, {'diff': 0.00010330500000000492}, {'diff': 0.00010320899999999994}, {'diff': 0.00010327800000000525}, {'diff': 0.00010386200000000317}, {'diff': 0.0001029999999999989...</msg>
<status status="PASS" starttime="20201029 18:20:37.411" endtime="20201029 18:20:37.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:37.431" level="INFO">${ACCURACY} = {'diff': [0.0001030689999999973, 0.00010330500000000492, 0.00010320899999999994, 0.00010327800000000525, 0.00010386200000000317, 0.00010299999999999893, 0.00010341599999999507, 0.000103513999999999, 0...</msg>
<status status="PASS" starttime="20201029 18:20:37.422" endtime="20201029 18:20:37.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.442" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:20:37.440" endtime="20201029 18:20:37.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.447" level="INFO">VALUE: [0.0001030689999999973, 0.00010330500000000492, 0.00010320899999999994, 0.00010327800000000525, 0.00010386200000000317, 0.00010299999999999893, 0.00010341599999999507, 0.000103513999999999, 0.00010262500000000202, 0.00010315300000000166, 0.00010376399999999925, 0.00010290300000000141, 0.00010363900000000259, 0.0001031810000000008, 0.0001031810000000008, 0.00010199999999999793, 0.00010384700000000413, 0.00010304199999999764, 0.00010309800000000285, 0.00010344500000000062, 0.00010343000000000158, 0.00010381899999999805, 0.00010337500000000277, 0.00010308400000000328, 0.0001030689999999973, 0.00010329199999999789, 0.00010229199999999689, 0.00010326399999999875, 0.00010302799999999807, 0.0001029860000000063, 0.00010306999999999678, 0.00010336099999999626, 0.00010343000000000158, 0.00010308400000000328, 0.000103416000000002, 0.00010333300000000406, 0.00010309699999999644, 0.00010355500000000517, 0.00010369399999999446, 0.00010286099999999576, 0.00010292999999999414, 0.000103513999999999, 0.00010369399999999446, 0.00010316700000000123, 0.0001030559999999972, 0.00010362499999999608, 0.00010369500000000087, 0.0001037360000000001, 0.00010372200000000054, 0.00010312500000000252]</msg>
<status status="PASS" starttime="20201029 18:20:37.444" endtime="20201029 18:20:37.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.433" endtime="20201029 18:20:37.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:37.460" endtime="20201029 18:20:37.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.455" endtime="20201029 18:20:37.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.453" endtime="20201029 18:20:37.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.940" endtime="20201029 18:20:37.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.939" endtime="20201029 18:20:37.485"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.508" endtime="20201029 18:20:37.530"></status>
</kw>
<msg timestamp="20201029 18:20:37.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:37.505" endtime="20201029 18:20:37.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:37.534" endtime="20201029 18:20:37.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.540" endtime="20201029 18:20:37.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.498" endtime="20201029 18:20:37.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.492" endtime="20201029 18:20:37.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.564" endtime="20201029 18:20:37.916"></status>
</kw>
<msg timestamp="20201029 18:20:37.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040750667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040854, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:20:37.561" endtime="20201029 18:20:37.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040750667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040854, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:20:37.925" endtime="20201029 18:20:37.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.944" endtime="20201029 18:20:37.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.553" endtime="20201029 18:20:37.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.548" endtime="20201029 18:20:37.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:37.961" level="INFO">${RESULT} = [{'diff': 0.00010333300000000406}, {'diff': 0.00010445799999999478}, {'diff': 0.00010391700000000198}, {'diff': 0.00010455499999999923}, {'diff': 0.00010437499999999683}, {'diff': 0.000104167000000002...</msg>
<status status="PASS" starttime="20201029 18:20:37.952" endtime="20201029 18:20:37.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:37.970" level="INFO">${ACCURACY} = {'diff': [0.00010333300000000406, 0.00010445799999999478, 0.00010391700000000198, 0.00010455499999999923, 0.00010437499999999683, 0.00010416700000000223, 0.00010462499999999708, 0.00010422200000000104...</msg>
<status status="PASS" starttime="20201029 18:20:37.963" endtime="20201029 18:20:37.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.981" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:20:37.979" endtime="20201029 18:20:37.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.987" level="INFO">VALUE: [0.00010333300000000406, 0.00010445799999999478, 0.00010391700000000198, 0.00010455499999999923, 0.00010437499999999683, 0.00010416700000000223, 0.00010462499999999708, 0.00010422200000000104, 0.00010476400000000025, 0.00010408299999999787, 0.00010477799999999982, 0.00010426399999999975, 0.00010441699999999554, 0.00010416600000000276, 0.00010394500000000112, 0.00010365300000000216, 0.00010422200000000104, 0.0001046940000000024, 0.00010397300000000026, 0.0001047360000000011, 0.00010413899999999615, 0.00010398600000000036, 0.0001040559999999982, 0.00010459799999999742, 0.00010407000000000471, 0.0001041810000000018, 0.00010363899999999565, 0.00010387500000000327, 0.00010469499999999493, 0.00010387500000000327, 0.00010429099999999941, 0.00010431900000000549, 0.0001030139999999985, 0.00010443000000000258, 0.00010429099999999941, 0.00010454199999999914, 0.00010445800000000172, 0.00010338900000000234, 0.00010465199999999675, 0.0001045689999999988, 0.00010458400000000478, 0.00010352799999999857, 0.00010477799999999982, 0.00010441699999999554, 0.00010458400000000478, 0.0001047360000000011, 0.00010381899999999805, 0.00010458299999999837, 0.00010377799999999882, 0.00010436200000000367]</msg>
<status status="PASS" starttime="20201029 18:20:37.984" endtime="20201029 18:20:37.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.972" endtime="20201029 18:20:37.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:38.000" endtime="20201029 18:20:38.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.995" endtime="20201029 18:20:38.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.993" endtime="20201029 18:20:38.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.487" endtime="20201029 18:20:38.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.486" endtime="20201029 18:20:38.025"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.048" endtime="20201029 18:20:38.072"></status>
</kw>
<msg timestamp="20201029 18:20:38.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:38.045" endtime="20201029 18:20:38.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:38.075" endtime="20201029 18:20:38.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.082" endtime="20201029 18:20:38.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.037" endtime="20201029 18:20:38.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.032" endtime="20201029 18:20:38.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.105" endtime="20201029 18:20:38.455"></status>
</kw>
<msg timestamp="20201029 18:20:38.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042054708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042160625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:38.102" endtime="20201029 18:20:38.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042054708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042160625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:38.464" endtime="20201029 18:20:38.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.483" endtime="20201029 18:20:38.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.095" endtime="20201029 18:20:38.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.090" endtime="20201029 18:20:38.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:38.500" level="INFO">${RESULT} = [{'diff': 0.00010591699999999704}, {'diff': 0.00010555500000000023}, {'diff': 0.00010541699999999654}, {'diff': 0.00010502700000000059}, {'diff': 0.00010508299999999887}, {'diff': 0.000105207999999995...</msg>
<status status="PASS" starttime="20201029 18:20:38.491" endtime="20201029 18:20:38.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:38.509" level="INFO">${ACCURACY} = {'diff': [0.00010591699999999704, 0.00010555500000000023, 0.00010541699999999654, 0.00010502700000000059, 0.00010508299999999887, 0.00010520799999999553, 0.00010530599999999946, 0.00010493100000000255...</msg>
<status status="PASS" starttime="20201029 18:20:38.502" endtime="20201029 18:20:38.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.521" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:20:38.518" endtime="20201029 18:20:38.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.526" level="INFO">VALUE: [0.00010591699999999704, 0.00010555500000000023, 0.00010541699999999654, 0.00010502700000000059, 0.00010508299999999887, 0.00010520799999999553, 0.00010530599999999946, 0.00010493100000000255, 0.0001054019999999975, 0.00010540200000000444, 0.00010584699999999919, 0.00010458399999999785, 0.00010547299999999482, 0.00010529199999999989, 0.00010515300000000366, 0.00010511200000000442, 0.00010545900000000219, 0.00010555500000000023, 0.00010550000000000143, 0.00010556999999999928, 0.00010481999999999853, 0.00010513899999999715, 0.00010405499999999873, 0.00010572200000000254, 0.00010491700000000298, 0.00010566700000000373, 0.00010537499999999783, 0.00010522200000000204, 0.00010525000000000118, 0.0001053889999999974, 0.00010570900000000244, 0.00010561099999999851, 0.00010527800000000032, 0.00010548600000000186, 0.0001052360000000016, 0.00010513899999999715, 0.00010512499999999758, 0.0001057360000000021, 0.00010498600000000136, 0.00010538799999999793, 0.00010494500000000212, 0.00010511200000000442, 0.00010433300000000506, 0.00010570900000000244, 0.00010529200000000682, 0.00010508299999999887, 0.00010537499999999783, 0.00010527800000000032, 0.00010525000000000118, 0.00010561100000000545]</msg>
<status status="PASS" starttime="20201029 18:20:38.523" endtime="20201029 18:20:38.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.511" endtime="20201029 18:20:38.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:38.540" endtime="20201029 18:20:38.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.534" endtime="20201029 18:20:38.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.532" endtime="20201029 18:20:38.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.027" endtime="20201029 18:20:38.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.026" endtime="20201029 18:20:38.566"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.590" endtime="20201029 18:20:38.612"></status>
</kw>
<msg timestamp="20201029 18:20:38.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:38.586" endtime="20201029 18:20:38.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:38.615" endtime="20201029 18:20:38.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.621" endtime="20201029 18:20:38.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.579" endtime="20201029 18:20:38.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.573" endtime="20201029 18:20:38.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.645" endtime="20201029 18:20:38.994"></status>
</kw>
<msg timestamp="20201029 18:20:39.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041148333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041254833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:38.642" endtime="20201029 18:20:39.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041148333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041254833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:39.003" endtime="20201029 18:20:39.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.022" endtime="20201029 18:20:39.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.634" endtime="20201029 18:20:39.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.629" endtime="20201029 18:20:39.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:39.039" level="INFO">${RESULT} = [{'diff': 0.00010649999999999549}, {'diff': 0.00010612499999999858}, {'diff': 0.00010563900000000459}, {'diff': 0.00010680600000000096}, {'diff': 0.00010650000000000243}, {'diff': 0.000105707999999996...</msg>
<status status="PASS" starttime="20201029 18:20:39.030" endtime="20201029 18:20:39.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:39.050" level="INFO">${ACCURACY} = {'diff': [0.00010649999999999549, 0.00010612499999999858, 0.00010563900000000459, 0.00010680600000000096, 0.00010650000000000243, 0.00010570799999999603, 0.0001053889999999974, 0.00010642999999999764,...</msg>
<status status="PASS" starttime="20201029 18:20:39.041" endtime="20201029 18:20:39.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.061" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:20:39.058" endtime="20201029 18:20:39.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.066" level="INFO">VALUE: [0.00010649999999999549, 0.00010612499999999858, 0.00010563900000000459, 0.00010680600000000096, 0.00010650000000000243, 0.00010570799999999603, 0.0001053889999999974, 0.00010642999999999764, 0.0001067219999999966, 0.00010502800000000007, 0.00010666699999999779, 0.000106416000000005, 0.0001062360000000026, 0.00010667999999999789, 0.0001065560000000007, 0.0001065690000000008, 0.00010665300000000516, 0.00010636099999999926, 0.00010641700000000448, 0.00010648599999999592, 0.00010680600000000096, 0.00010633300000000012, 0.00010661099999999951, 0.0001057219999999956, 0.00010613899999999815, 0.00010594499999999618, 0.0001061940000000039, 0.00010669399999999746, 0.0001065560000000007, 0.00010616699999999729, 0.0001067360000000031, 0.00010595799999999628, 0.0001053610000000052, 0.00010595800000000322, 0.00010659699999999994, 0.00010643099999999711, 0.00010608299999999987, 0.00010587499999999833, 0.00010624999999999524, 0.00010683300000000062, 0.00010666699999999779, 0.0001060690000000003, 0.00010597300000000226, 0.0001051810000000028, 0.00010683299999999368, 0.00010629100000000141, 0.00010661099999999951, 0.00010627800000000132, 0.0001060140000000015, 0.00010575000000000168]</msg>
<status status="PASS" starttime="20201029 18:20:39.063" endtime="20201029 18:20:39.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.052" endtime="20201029 18:20:39.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:39.079" endtime="20201029 18:20:39.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.075" endtime="20201029 18:20:39.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.072" endtime="20201029 18:20:39.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.568" endtime="20201029 18:20:39.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.567" endtime="20201029 18:20:39.104"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.128" endtime="20201029 18:20:39.149"></status>
</kw>
<msg timestamp="20201029 18:20:39.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:39.124" endtime="20201029 18:20:39.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:39.153" endtime="20201029 18:20:39.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.159" endtime="20201029 18:20:39.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.117" endtime="20201029 18:20:39.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.111" endtime="20201029 18:20:39.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.183" endtime="20201029 18:20:39.531"></status>
</kw>
<msg timestamp="20201029 18:20:39.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040468931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040576264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:39.180" endtime="20201029 18:20:39.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040468931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040576264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:39.540" endtime="20201029 18:20:39.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.559" endtime="20201029 18:20:39.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.172" endtime="20201029 18:20:39.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.167" endtime="20201029 18:20:39.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:39.576" level="INFO">${RESULT} = [{'diff': 0.00010733300000000112}, {'diff': 0.00010772200000000454}, {'diff': 0.00010726300000000327}, {'diff': 0.00010766700000000573}, {'diff': 0.00010745800000000472}, {'diff': 0.000106707999999997...</msg>
<status status="PASS" starttime="20201029 18:20:39.567" endtime="20201029 18:20:39.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:39.591" level="INFO">${ACCURACY} = {'diff': [0.00010733300000000112, 0.00010772200000000454, 0.00010726300000000327, 0.00010766700000000573, 0.00010745800000000472, 0.00010670799999999703, 0.0001070140000000025, 0.00010775000000000368,...</msg>
<status status="PASS" starttime="20201029 18:20:39.578" endtime="20201029 18:20:39.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.603" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:20:39.600" endtime="20201029 18:20:39.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.608" level="INFO">VALUE: [0.00010733300000000112, 0.00010772200000000454, 0.00010726300000000327, 0.00010766700000000573, 0.00010745800000000472, 0.00010670799999999703, 0.0001070140000000025, 0.00010775000000000368, 0.0001075419999999952, 0.00010774999999999674, 0.00010752800000000257, 0.00010759700000000094, 0.00010770900000000444, 0.0001069160000000055, 0.0001068889999999989, 0.00010698599999999642, 0.00010742999999999864, 0.00010708300000000087, 0.00010762500000000008, 0.0001078340000000011, 0.00010776399999999631, 0.00010730500000000198, 0.0001077219999999976, 0.00010694400000000465, 0.00010742999999999864, 0.00010743099999999811, 0.00010702800000000207, 0.00010713899999999915, 0.00010759800000000042, 0.00010752799999999563, 0.00010734700000000069, 0.00010750000000000343, 0.00010704200000000164, 0.00010761099999999357, 0.00010737499999999983, 0.0001066940000000044, 0.00010770799999999803, 0.00010716700000000523, 0.00010680600000000096, 0.0001063339999999996, 0.00010601300000000202, 0.00010712499999999958, 0.00010731900000000155, 0.00010604200000000064, 0.00010750000000000343, 0.00010781900000000205, 0.0001068340000000001, 0.00010780600000000196, 0.00010727800000000232, 0.00010762500000000008]</msg>
<status status="PASS" starttime="20201029 18:20:39.605" endtime="20201029 18:20:39.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.593" endtime="20201029 18:20:39.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:39.621" endtime="20201029 18:20:39.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.616" endtime="20201029 18:20:39.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.614" endtime="20201029 18:20:39.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.106" endtime="20201029 18:20:39.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.105" endtime="20201029 18:20:39.646"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.669" endtime="20201029 18:20:39.691"></status>
</kw>
<msg timestamp="20201029 18:20:39.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:39.666" endtime="20201029 18:20:39.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:39.695" endtime="20201029 18:20:39.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.701" endtime="20201029 18:20:39.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.658" endtime="20201029 18:20:39.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.653" endtime="20201029 18:20:39.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.725" endtime="20201029 18:20:40.081"></status>
</kw>
<msg timestamp="20201029 18:20:40.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040388125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040496528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:39.721" endtime="20201029 18:20:40.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040388125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040496528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:40.091" endtime="20201029 18:20:40.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.109" endtime="20201029 18:20:40.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.714" endtime="20201029 18:20:40.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.709" endtime="20201029 18:20:40.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:40.127" level="INFO">${RESULT} = [{'diff': 0.00010840299999999997}, {'diff': 0.00010866600000000032}, {'diff': 0.00010816699999999929}, {'diff': 0.00010865300000000022}, {'diff': 0.00010886100000000176}, {'diff': 0.000108485999999997...</msg>
<status status="PASS" starttime="20201029 18:20:40.118" endtime="20201029 18:20:40.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:40.136" level="INFO">${ACCURACY} = {'diff': [0.00010840299999999997, 0.00010866600000000032, 0.00010816699999999929, 0.00010865300000000022, 0.00010886100000000176, 0.00010848599999999792, 0.00010802799999999613, 0.00010830500000000298...</msg>
<status status="PASS" starttime="20201029 18:20:40.129" endtime="20201029 18:20:40.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.147" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:20:40.145" endtime="20201029 18:20:40.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.153" level="INFO">VALUE: [0.00010840299999999997, 0.00010866600000000032, 0.00010816699999999929, 0.00010865300000000022, 0.00010886100000000176, 0.00010848599999999792, 0.00010802799999999613, 0.00010830500000000298, 0.00010783300000000162, 0.00010870799999999903, 0.00010844399999999921, 0.00010791700000000598, 0.00010851399999999706, 0.00010833299999999518, 0.00010811200000000049, 0.00010792999999999914, 0.00010833299999999518, 0.00010773599999999717, 0.00010831900000000255, 0.00010805599999999527, 0.00010802699999999665, 0.00010720799999999753, 0.000108596999999995, 0.00010806999999999484, 0.0001083890000000004, 0.00010836100000000126, 0.0001081810000000058, 0.00010804099999999622, 0.00010740299999999897, 0.00010830600000000246, 0.0001081810000000058, 0.00010852799999999663, 0.00010829199999999595, 0.00010826399999999681, 0.00010893099999999961, 0.00010812500000000058, 0.00010690200000000594, 0.0001075560000000017, 0.00010863900000000065, 0.0001078340000000011, 0.00010849999999999749, 0.00010859800000000142, 0.00010856999999999534, 0.00010723599999999667, 0.00010780600000000196, 0.00010812500000000058, 0.0001087219999999986, 0.00010819500000000537, 0.00010797299999999732, 0.00010802800000000307]</msg>
<status status="PASS" starttime="20201029 18:20:40.149" endtime="20201029 18:20:40.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.138" endtime="20201029 18:20:40.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:40.165" endtime="20201029 18:20:40.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.161" endtime="20201029 18:20:40.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.158" endtime="20201029 18:20:40.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.648" endtime="20201029 18:20:40.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.647" endtime="20201029 18:20:40.191"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.214" endtime="20201029 18:20:40.237"></status>
</kw>
<msg timestamp="20201029 18:20:40.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:40.210" endtime="20201029 18:20:40.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:40.241" endtime="20201029 18:20:40.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.247" endtime="20201029 18:20:40.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.203" endtime="20201029 18:20:40.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.197" endtime="20201029 18:20:40.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.271" endtime="20201029 18:20:40.619"></status>
</kw>
<msg timestamp="20201029 18:20:40.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041842361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041951514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:40.267" endtime="20201029 18:20:40.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041842361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041951514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:40.628" endtime="20201029 18:20:40.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.647" endtime="20201029 18:20:40.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.260" endtime="20201029 18:20:40.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.255" endtime="20201029 18:20:40.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:40.664" level="INFO">${RESULT} = [{'diff': 0.00010915300000000072}, {'diff': 0.00010904099999999722}, {'diff': 0.00010901399999999756}, {'diff': 0.0001092360000000056}, {'diff': 0.00010899999999999799}, {'diff': 0.0001084579999999987...</msg>
<status status="PASS" starttime="20201029 18:20:40.655" endtime="20201029 18:20:40.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:40.674" level="INFO">${ACCURACY} = {'diff': [0.00010915300000000072, 0.00010904099999999722, 0.00010901399999999756, 0.0001092360000000056, 0.00010899999999999799, 0.00010845799999999878, 0.00010915200000000125, 0.00010937499999999489,...</msg>
<status status="PASS" starttime="20201029 18:20:40.666" endtime="20201029 18:20:40.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.685" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:20:40.682" endtime="20201029 18:20:40.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.690" level="INFO">VALUE: [0.00010915300000000072, 0.00010904099999999722, 0.00010901399999999756, 0.0001092360000000056, 0.00010899999999999799, 0.00010845799999999878, 0.00010915200000000125, 0.00010937499999999489, 0.00010940299999999403, 0.00010894399999999971, 0.00010879199999999645, 0.00010841600000000007, 0.00010969499999999993, 0.00010893000000000014, 0.00010940299999999403, 0.00010891700000000004, 0.00010887500000000133, 0.0001090969999999955, 0.00010791599999999957, 0.0001090560000000032, 0.00010948699999999839, 0.00010923599999999867, 0.0001097089999999995, 0.00010936100000000226, 0.00010963900000000165, 0.000108596999999995, 0.00010911199999999455, 0.00010980599999999702, 0.00010891700000000004, 0.00010934700000000269, 0.00010966600000000132, 0.0001088890000000009, 0.00010918099999999986, 0.00010884699999999525, 0.00010947199999999935, 0.00010950000000000543, 0.0001093890000000014, 0.00010947199999999935, 0.00010912500000000158, 0.00010951399999999806, 0.00010808400000000135, 0.0001090419999999967, 0.00010909700000000244, 0.00010920799999999953, 0.00010929100000000441, 0.00010976399999999831, 0.00010930600000000346, 0.00010948599999999892, 0.00010794499999999818, 0.00010908299999999593]</msg>
<status status="PASS" starttime="20201029 18:20:40.687" endtime="20201029 18:20:40.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.675" endtime="20201029 18:20:40.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:40.704" endtime="20201029 18:20:40.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.698" endtime="20201029 18:20:40.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.696" endtime="20201029 18:20:40.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.193" endtime="20201029 18:20:40.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.191" endtime="20201029 18:20:40.730"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.753" endtime="20201029 18:20:40.775"></status>
</kw>
<msg timestamp="20201029 18:20:40.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:40.750" endtime="20201029 18:20:40.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:40.778" endtime="20201029 18:20:40.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.785" endtime="20201029 18:20:40.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.742" endtime="20201029 18:20:40.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.736" endtime="20201029 18:20:40.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.808" endtime="20201029 18:20:41.152"></status>
</kw>
<msg timestamp="20201029 18:20:41.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040773986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040884125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:40.805" endtime="20201029 18:20:41.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040773986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040884125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:41.161" endtime="20201029 18:20:41.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.179" endtime="20201029 18:20:41.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.798" endtime="20201029 18:20:41.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.793" endtime="20201029 18:20:41.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:41.196" level="INFO">${RESULT} = [{'diff': 0.00011013900000000215}, {'diff': 0.000110596999999997}, {'diff': 0.00011015300000000172}, {'diff': 0.00010898599999999842}, {'diff': 0.00011065300000000222}, {'diff': 0.00011027700000000584...</msg>
<status status="PASS" starttime="20201029 18:20:41.188" endtime="20201029 18:20:41.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:41.206" level="INFO">${ACCURACY} = {'diff': [0.00011013900000000215, 0.000110596999999997, 0.00011015300000000172, 0.00010898599999999842, 0.00011065300000000222, 0.00011027700000000584, 0.00011029199999999795, 0.00011033299999999718, ...</msg>
<status status="PASS" starttime="20201029 18:20:41.198" endtime="20201029 18:20:41.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.217" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:20:41.215" endtime="20201029 18:20:41.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.223" level="INFO">VALUE: [0.00011013900000000215, 0.000110596999999997, 0.00011015300000000172, 0.00010898599999999842, 0.00011065300000000222, 0.00011027700000000584, 0.00011029199999999795, 0.00011033299999999718, 0.0001107090000000005, 0.0001100560000000042, 0.00011062500000000308, 0.000109902000000002, 0.00011081900000000505, 0.00011074999999999974, 0.00011018000000000139, 0.00010913900000000115, 0.00010995899999999975, 0.00011049999999999949, 0.00011044499999999374, 0.00011069500000000093, 0.00010949999999999849, 0.00011024999999999924, 0.00011008300000000387, 0.00011020800000000053, 0.00010963900000000165, 0.00010998599999999942, 0.00011045800000000078, 0.00011009799999999598, 0.00010990299999999453, 0.00011024999999999924, 0.00011036100000000326, 0.00011073600000000017, 0.00011029200000000489, 0.00011057000000000428, 0.00011013900000000215, 0.00010986100000000276, 0.00011011100000000301, 0.00010934700000000269, 0.00011019499999999349, 0.00011034700000000369, 0.00010984800000000267, 0.00010999999999999899, 0.00011058399999999691, 0.00010991700000000104, 0.00011013900000000215, 0.0001100560000000042, 0.00010983299999999668, 0.00011055500000000523, 0.00010944499999999968, 0.00011055599999999777]</msg>
<status status="PASS" starttime="20201029 18:20:41.220" endtime="20201029 18:20:41.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.208" endtime="20201029 18:20:41.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:41.235" endtime="20201029 18:20:41.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.231" endtime="20201029 18:20:41.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.228" endtime="20201029 18:20:41.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.732" endtime="20201029 18:20:41.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.730" endtime="20201029 18:20:41.261"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.285" endtime="20201029 18:20:41.304"></status>
</kw>
<msg timestamp="20201029 18:20:41.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:41.282" endtime="20201029 18:20:41.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:41.308" endtime="20201029 18:20:41.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.314" endtime="20201029 18:20:41.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.274" endtime="20201029 18:20:41.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.268" endtime="20201029 18:20:41.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.337" endtime="20201029 18:20:41.675"></status>
</kw>
<msg timestamp="20201029 18:20:41.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041781847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041893097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:41.334" endtime="20201029 18:20:41.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041781847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041893097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:41.684" endtime="20201029 18:20:41.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.702" endtime="20201029 18:20:41.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.327" endtime="20201029 18:20:41.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.322" endtime="20201029 18:20:41.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:41.719" level="INFO">${RESULT} = [{'diff': 0.00011125000000000024}, {'diff': 0.00011090199999999606}, {'diff': 0.0001110419999999987}, {'diff': 0.00011090199999999606}, {'diff': 0.00011156999999999834}, {'diff': 0.0001114860000000009...</msg>
<status status="PASS" starttime="20201029 18:20:41.710" endtime="20201029 18:20:41.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:41.730" level="INFO">${ACCURACY} = {'diff': [0.00011125000000000024, 0.00011090199999999606, 0.0001110419999999987, 0.00011090199999999606, 0.00011156999999999834, 0.00011148600000000092, 0.00011098600000000042, 0.00011161099999999757,...</msg>
<status status="PASS" starttime="20201029 18:20:41.721" endtime="20201029 18:20:41.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.741" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:20:41.738" endtime="20201029 18:20:41.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.746" level="INFO">VALUE: [0.00011125000000000024, 0.00011090199999999606, 0.0001110419999999987, 0.00011090199999999606, 0.00011156999999999834, 0.00011148600000000092, 0.00011098600000000042, 0.00011161099999999757, 0.00011181899999999911, 0.00011027799999999838, 0.00011122300000000057, 0.00011093100000000161, 0.00011156999999999834, 0.00011113799999999674, 0.00011102799999999913, 0.00011086099999999682, 0.0001114169999999956, 0.00011101399999999956, 0.00011169400000000246, 0.00011127799999999938, 0.00011150000000000049, 0.00011129199999999895, 0.00011115300000000272, 0.00011095900000000075, 0.00011102799999999913, 0.00011163899999999671, 0.00011098600000000042, 0.00011099999999999999, 0.00011155599999999877, 0.00011166699999999585, 0.00011168100000000236, 0.00011143100000000211, 0.0001117770000000004, 0.00011145900000000125, 0.00011169500000000193, 0.00011093000000000214, 0.00011087500000000333, 0.00011144400000000221, 0.00011130599999999852, 0.0001109299999999952, 0.00011166700000000279, 0.00011162499999999714, 0.00011176400000000031, 0.00011133300000000512, 0.00011123600000000067, 0.00011097200000000085, 0.00011005599999999727, 0.00011086099999999682, 0.00011157000000000528, 0.00011173600000000117]</msg>
<status status="PASS" starttime="20201029 18:20:41.743" endtime="20201029 18:20:41.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.732" endtime="20201029 18:20:41.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:41.763" endtime="20201029 18:20:41.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.758" endtime="20201029 18:20:41.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.756" endtime="20201029 18:20:41.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.263" endtime="20201029 18:20:41.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.262" endtime="20201029 18:20:41.788"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.810" endtime="20201029 18:20:41.830"></status>
</kw>
<msg timestamp="20201029 18:20:41.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:41.807" endtime="20201029 18:20:41.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:41.833" endtime="20201029 18:20:41.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.839" endtime="20201029 18:20:41.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.800" endtime="20201029 18:20:41.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.794" endtime="20201029 18:20:41.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.863" endtime="20201029 18:20:42.199"></status>
</kw>
<msg timestamp="20201029 18:20:42.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03958775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039700278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:41.859" endtime="20201029 18:20:42.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03958775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039700278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:42.208" endtime="20201029 18:20:42.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.226" endtime="20201029 18:20:42.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.852" endtime="20201029 18:20:42.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.847" endtime="20201029 18:20:42.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:42.243" level="INFO">${RESULT} = [{'diff': 0.00011252800000000063}, {'diff': 0.00011268099999999642}, {'diff': 0.00011280500000000054}, {'diff': 0.0001122220000000021}, {'diff': 0.00011226400000000081}, {'diff': 0.0001121940000000029...</msg>
<status status="PASS" starttime="20201029 18:20:42.235" endtime="20201029 18:20:42.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:42.252" level="INFO">${ACCURACY} = {'diff': [0.00011252800000000063, 0.00011268099999999642, 0.00011280500000000054, 0.0001122220000000021, 0.00011226400000000081, 0.00011219400000000296, 0.00011133299999999818, 0.00011270799999999609,...</msg>
<status status="PASS" starttime="20201029 18:20:42.245" endtime="20201029 18:20:42.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.263" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:20:42.261" endtime="20201029 18:20:42.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.268" level="INFO">VALUE: [0.00011252800000000063, 0.00011268099999999642, 0.00011280500000000054, 0.0001122220000000021, 0.00011226400000000081, 0.00011219400000000296, 0.00011133299999999818, 0.00011270799999999609, 0.00011181899999999911, 0.00011247300000000182, 0.00011204100000000022, 0.00011197200000000185, 0.0001125420000000002, 0.00011194500000000218, 0.00011231899999999961, 0.00011200000000000099, 0.00011097200000000085, 0.00011236100000000526, 0.00011281999999999959, 0.00011277800000000088, 0.00011202700000000065, 0.0001128749999999984, 0.00011240300000000397, 0.00011222300000000157, 0.00011238899999999746, 0.00011197200000000185, 0.00011269399999999652, 0.00011251399999999412, 0.00011233399999999866, 0.00011127799999999938, 0.0001127090000000025, 0.00011212500000000458, 0.00011247199999999541, 0.0001127220000000026, 0.00011230599999999952, 0.00011265199999999781, 0.00011197300000000132, 0.0001120969999999985, 0.00011231999999999909, 0.00011244499999999574, 0.00011234699999999875, 0.00011230599999999952, 0.00011197300000000132, 0.00011226400000000081, 0.00011113899999999621, 0.00011262499999999814, 0.0001123890000000044, 0.00011251300000000158, 0.00011254100000000072, 0.00011220800000000253]</msg>
<status status="PASS" starttime="20201029 18:20:42.265" endtime="20201029 18:20:42.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.254" endtime="20201029 18:20:42.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:42.281" endtime="20201029 18:20:42.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.277" endtime="20201029 18:20:42.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.274" endtime="20201029 18:20:42.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.790" endtime="20201029 18:20:42.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.788" endtime="20201029 18:20:42.306"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.329" endtime="20201029 18:20:42.350"></status>
</kw>
<msg timestamp="20201029 18:20:42.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:42.325" endtime="20201029 18:20:42.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:42.353" endtime="20201029 18:20:42.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.359" endtime="20201029 18:20:42.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.318" endtime="20201029 18:20:42.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.312" endtime="20201029 18:20:42.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.383" endtime="20201029 18:20:42.720"></status>
</kw>
<msg timestamp="20201029 18:20:42.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041193292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041306722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:42.380" endtime="20201029 18:20:42.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041193292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041306722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:42.729" endtime="20201029 18:20:42.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.747" endtime="20201029 18:20:42.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.372" endtime="20201029 18:20:42.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.367" endtime="20201029 18:20:42.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:42.764" level="INFO">${RESULT} = [{'diff': 0.0001134299999999977}, {'diff': 0.00011372199999999666}, {'diff': 0.00011358399999999991}, {'diff': 0.00011359799999999948}, {'diff': 0.0001130969999999995}, {'diff': 0.00011200000000000099...</msg>
<status status="PASS" starttime="20201029 18:20:42.756" endtime="20201029 18:20:42.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:42.774" level="INFO">${ACCURACY} = {'diff': [0.0001134299999999977, 0.00011372199999999666, 0.00011358399999999991, 0.00011359799999999948, 0.0001130969999999995, 0.00011200000000000099, 0.00011327800000000138, 0.00011306900000000036, ...</msg>
<status status="PASS" starttime="20201029 18:20:42.766" endtime="20201029 18:20:42.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.784" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:20:42.782" endtime="20201029 18:20:42.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.790" level="INFO">VALUE: [0.0001134299999999977, 0.00011372199999999666, 0.00011358399999999991, 0.00011359799999999948, 0.0001130969999999995, 0.00011200000000000099, 0.00011327800000000138, 0.00011306900000000036, 0.0001133749999999989, 0.00011319400000000396, 0.00011315299999999778, 0.00011326400000000181, 0.0001129169999999971, 0.00011297200000000285, 0.00011218000000000339, 0.00011372299999999613, 0.00011344499999999674, 0.00011234700000000569, 0.00011365299999999828, 0.00011295799999999634, 0.00011290299999999753, 0.00011347199999999641, 0.00011334799999999923, 0.00011358300000000043, 0.00011379100000000197, 0.0001128749999999984, 0.00011325000000000224, 0.00011375000000000274, 0.0001133749999999989, 0.00011348600000000292, 0.00011315199999999831, 0.00011377800000000188, 0.00011297199999999591, 0.00011347199999999641, 0.00011351399999999512, 0.00011330600000000052, 0.00011336099999999932, 0.00011294500000000318, 0.00011343099999999717, 0.00011227800000000038, 0.00011290299999999753, 0.0001130969999999995, 0.00011373600000000317, 0.00011245800000000278, 0.00011295900000000275, 0.00011352800000000163, 0.00011379200000000145, 0.00011381900000000111, 0.00011331900000000061, 0.00011198600000000142]</msg>
<status status="PASS" starttime="20201029 18:20:42.787" endtime="20201029 18:20:42.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.775" endtime="20201029 18:20:42.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:42.807" endtime="20201029 18:20:42.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.801" endtime="20201029 18:20:42.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.797" endtime="20201029 18:20:42.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.308" endtime="20201029 18:20:42.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.307" endtime="20201029 18:20:42.833"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.855" endtime="20201029 18:20:42.877"></status>
</kw>
<msg timestamp="20201029 18:20:42.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:42.852" endtime="20201029 18:20:42.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:42.880" endtime="20201029 18:20:42.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.886" endtime="20201029 18:20:42.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.845" endtime="20201029 18:20:42.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.839" endtime="20201029 18:20:42.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.909" endtime="20201029 18:20:43.260"></status>
</kw>
<msg timestamp="20201029 18:20:43.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039421847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039536361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:42.906" endtime="20201029 18:20:43.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039421847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039536361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:43.269" endtime="20201029 18:20:43.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.287" endtime="20201029 18:20:43.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.899" endtime="20201029 18:20:43.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.894" endtime="20201029 18:20:43.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:43.305" level="INFO">${RESULT} = [{'diff': 0.00011451399999999612}, {'diff': 0.00011394400000000471}, {'diff': 0.00011416599999999888}, {'diff': 0.00011470800000000503}, {'diff': 0.0001130420000000007}, {'diff': 0.0001142080000000045...</msg>
<status status="PASS" starttime="20201029 18:20:43.296" endtime="20201029 18:20:43.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:43.315" level="INFO">${ACCURACY} = {'diff': [0.00011451399999999612, 0.00011394400000000471, 0.00011416599999999888, 0.00011470800000000503, 0.0001130420000000007, 0.00011420800000000453, 0.0001145420000000022, 0.00011398600000000342, ...</msg>
<status status="PASS" starttime="20201029 18:20:43.307" endtime="20201029 18:20:43.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.326" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:20:43.324" endtime="20201029 18:20:43.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.332" level="INFO">VALUE: [0.00011451399999999612, 0.00011394400000000471, 0.00011416599999999888, 0.00011470800000000503, 0.0001130420000000007, 0.00011420800000000453, 0.0001145420000000022, 0.00011398600000000342, 0.00011423600000000367, 0.00011472199999999766, 0.00011351400000000206, 0.00011440199999999956, 0.00011454100000000272, 0.0001145420000000022, 0.00011458300000000143, 0.0001140970000000005, 0.0001139169999999981, 0.00011434700000000075, 0.00011401400000000256, 0.00011470799999999809, 0.00011440299999999903, 0.00011443099999999817, 0.00011447200000000435, 0.00011434800000000023, 0.00011420799999999759, 0.0001147499999999968, 0.00011476400000000331, 0.00011431900000000161, 0.00011458300000000143, 0.00011470799999999809, 0.00011468099999999842, 0.00011417999999999845, 0.0001139169999999981, 0.00011434699999999381, 0.00011398599999999648, 0.00011415299999999878, 0.00011427800000000238, 0.00011422199999999716, 0.00011418099999999792, 0.00011473599999999723, 0.00011422300000000357, 0.00011456899999999492, 0.00011476399999999637, 0.00011469399999999852, 0.00011484800000000073, 0.00011444500000000468, 0.00011434700000000075, 0.00011436100000000032, 0.00011481900000000211, 0.00011393100000000461]</msg>
<status status="PASS" starttime="20201029 18:20:43.329" endtime="20201029 18:20:43.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.317" endtime="20201029 18:20:43.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:43.344" endtime="20201029 18:20:43.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.340" endtime="20201029 18:20:43.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.337" endtime="20201029 18:20:43.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.835" endtime="20201029 18:20:43.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.833" endtime="20201029 18:20:43.369"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.392" endtime="20201029 18:20:43.413"></status>
</kw>
<msg timestamp="20201029 18:20:43.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:43.389" endtime="20201029 18:20:43.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:43.417" endtime="20201029 18:20:43.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.423" endtime="20201029 18:20:43.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.382" endtime="20201029 18:20:43.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.376" endtime="20201029 18:20:43.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.448" endtime="20201029 18:20:43.783"></status>
</kw>
<msg timestamp="20201029 18:20:43.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039879528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0399945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:20:43.444" endtime="20201029 18:20:43.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039879528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0399945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:20:43.792" endtime="20201029 18:20:43.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.810" endtime="20201029 18:20:43.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.437" endtime="20201029 18:20:43.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.432" endtime="20201029 18:20:43.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:43.827" level="INFO">${RESULT} = [{'diff': 0.00011497200000000485}, {'diff': 0.000115597000000002}, {'diff': 0.00011570799999999909}, {'diff': 0.00011533300000000218}, {'diff': 0.00011558300000000243}, {'diff': 0.0001148750000000004}...</msg>
<status status="PASS" starttime="20201029 18:20:43.819" endtime="20201029 18:20:43.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:43.838" level="INFO">${ACCURACY} = {'diff': [0.00011497200000000485, 0.000115597000000002, 0.00011570799999999909, 0.00011533300000000218, 0.00011558300000000243, 0.0001148750000000004, 0.00011519399999999902, 0.00011547199999999841, 0...</msg>
<status status="PASS" starttime="20201029 18:20:43.829" endtime="20201029 18:20:43.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.849" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:20:43.847" endtime="20201029 18:20:43.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.854" level="INFO">VALUE: [0.00011497200000000485, 0.000115597000000002, 0.00011570799999999909, 0.00011533300000000218, 0.00011558300000000243, 0.0001148750000000004, 0.00011519399999999902, 0.00011547199999999841, 0.00011572199999999866, 0.00011505600000000227, 0.00011419399999999802, 0.00011561100000000157, 0.00011420800000000453, 0.00011486099999999388, 0.0001154169999999996, 0.00011581899999999618, 0.0001150970000000015, 0.00011537499999999395, 0.00011573600000000517, 0.00011551399999999712, 0.00011584700000000225, 0.0001154299999999997, 0.00011494399999999877, 0.00011555600000000277, 0.00011526400000000381, 0.00011577699999999747, 0.00011499999999999705, 0.00011482000000000159, 0.0001159170000000001, 0.0001150420000000027, 0.00011490299999999953, 0.0001158750000000014, 0.00011584699999999531, 0.00011530600000000252, 0.00011405600000000127, 0.00011548599999999798, 0.00011552700000000415, 0.00011518099999999892, 0.00011415299999999878, 0.00011567999999999995, 0.00011508400000000141, 0.00011554199999999626, 0.00011562500000000114, 0.00011557000000000234, 0.00011490299999999953, 0.00011557000000000234, 0.00011419499999999749, 0.00011579100000000397, 0.0001144169999999986, 0.00011493099999999867]</msg>
<status status="PASS" starttime="20201029 18:20:43.852" endtime="20201029 18:20:43.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.840" endtime="20201029 18:20:43.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:43.867" endtime="20201029 18:20:43.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.863" endtime="20201029 18:20:43.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.860" endtime="20201029 18:20:43.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.371" endtime="20201029 18:20:43.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.370" endtime="20201029 18:20:43.892"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.914" endtime="20201029 18:20:43.934"></status>
</kw>
<msg timestamp="20201029 18:20:43.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:43.911" endtime="20201029 18:20:43.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:43.937" endtime="20201029 18:20:43.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.944" endtime="20201029 18:20:43.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.904" endtime="20201029 18:20:43.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.898" endtime="20201029 18:20:43.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.967" endtime="20201029 18:20:44.305"></status>
</kw>
<msg timestamp="20201029 18:20:44.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039544806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039661444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:43.963" endtime="20201029 18:20:44.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039544806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039661444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:44.314" endtime="20201029 18:20:44.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.333" endtime="20201029 18:20:44.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.956" endtime="20201029 18:20:44.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.952" endtime="20201029 18:20:44.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:44.350" level="INFO">${RESULT} = [{'diff': 0.0001166379999999953}, {'diff': 0.00011656899999999693}, {'diff': 0.00011648599999999898}, {'diff': 0.0001164170000000006}, {'diff': 0.00011586100000000182}, {'diff': 0.00011677800000000488...</msg>
<status status="PASS" starttime="20201029 18:20:44.341" endtime="20201029 18:20:44.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:44.359" level="INFO">${ACCURACY} = {'diff': [0.0001166379999999953, 0.00011656899999999693, 0.00011648599999999898, 0.0001164170000000006, 0.00011586100000000182, 0.00011677800000000488, 0.000116597000000003, 0.00011583400000000216, 0....</msg>
<status status="PASS" starttime="20201029 18:20:44.352" endtime="20201029 18:20:44.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.369" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:20:44.367" endtime="20201029 18:20:44.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.375" level="INFO">VALUE: [0.0001166379999999953, 0.00011656899999999693, 0.00011648599999999898, 0.0001164170000000006, 0.00011586100000000182, 0.00011677800000000488, 0.000116597000000003, 0.00011583400000000216, 0.00011654100000000472, 0.00011601399999999762, 0.00011620799999999959, 0.00011670800000000009, 0.00011636100000000232, 0.00011566600000000038, 0.00011627799999999744, 0.0001162499999999983, 0.00011619499999999949, 0.00011661100000000257, 0.00011661100000000257, 0.00011631900000000361, 0.00011629200000000395, 0.0001163620000000018, 0.00011598599999999848, 0.00011598599999999848, 0.00011598599999999848, 0.00011659699999999606, 0.0001163750000000019, 0.00011611099999999513, 0.00011590199999999412, 0.00011513900000000021, 0.00011594399999999977, 0.00011515299999999978, 0.00011651399999999812, 0.00011645799999999984, 0.0001165829999999965, 0.0001165550000000043, 0.00011605600000000327, 0.00011638900000000146, 0.00011500000000000399, 0.00011627799999999744, 0.00011618000000000045, 0.00011584800000000173, 0.00011605600000000327, 0.00011604199999999676, 0.00011648599999999898, 0.00011597299999999838, 0.0001164300000000007, 0.00011611100000000207, 0.00011587499999999445, 0.00011651299999999865]</msg>
<status status="PASS" starttime="20201029 18:20:44.372" endtime="20201029 18:20:44.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.360" endtime="20201029 18:20:44.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:44.387" endtime="20201029 18:20:44.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.383" endtime="20201029 18:20:44.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.381" endtime="20201029 18:20:44.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.894" endtime="20201029 18:20:44.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.893" endtime="20201029 18:20:44.412"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.435" endtime="20201029 18:20:44.461"></status>
</kw>
<msg timestamp="20201029 18:20:44.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:44.432" endtime="20201029 18:20:44.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:44.465" endtime="20201029 18:20:44.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.471" endtime="20201029 18:20:44.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.424" endtime="20201029 18:20:44.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.419" endtime="20201029 18:20:44.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.495" endtime="20201029 18:20:44.830"></status>
</kw>
<msg timestamp="20201029 18:20:44.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045385222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045502819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:44.492" endtime="20201029 18:20:44.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045385222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045502819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:44.839" endtime="20201029 18:20:44.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.857" endtime="20201029 18:20:44.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.485" endtime="20201029 18:20:44.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.480" endtime="20201029 18:20:44.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:44.874" level="INFO">${RESULT} = [{'diff': 0.00011759699999999706}, {'diff': 0.00011631899999999668}, {'diff': 0.00011652800000000463}, {'diff': 0.00011720800000000059}, {'diff': 0.00011781999999999765}, {'diff': 0.000115999999999998...</msg>
<status status="PASS" starttime="20201029 18:20:44.866" endtime="20201029 18:20:44.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:44.883" level="INFO">${ACCURACY} = {'diff': [0.00011759699999999706, 0.00011631899999999668, 0.00011652800000000463, 0.00011720800000000059, 0.00011781999999999765, 0.00011599999999999805, 0.00011727800000000538, 0.00011731899999999768...</msg>
<status status="PASS" starttime="20201029 18:20:44.876" endtime="20201029 18:20:44.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.894" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:20:44.892" endtime="20201029 18:20:44.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.899" level="INFO">VALUE: [0.00011759699999999706, 0.00011631899999999668, 0.00011652800000000463, 0.00011720800000000059, 0.00011781999999999765, 0.00011599999999999805, 0.00011727800000000538, 0.00011731899999999768, 0.00011729200000000495, 0.00011759699999999706, 0.0001177499999999998, 0.00011761099999999663, 0.00011780599999999808, 0.00011729199999999801, 0.0001173750000000029, 0.00011772200000000066, 0.0001168750000000024, 0.0001169300000000012, 0.00011726399999999887, 0.00011755499999999836, 0.00011741599999999519, 0.0001177499999999998, 0.00011737499999999595, 0.00011730500000000504, 0.00011740300000000203, 0.00011683400000000316, 0.00011751399999999912, 0.00011647300000000582, 0.0001175420000000052, 0.00011697199999999991, 0.00011698600000000642, 0.00011681899999999718, 0.00011720900000000006, 0.00011705600000000427, 0.00011731900000000461, 0.00011755600000000477, 0.00011740300000000203, 0.00011733300000000418, 0.00011629100000000447, 0.00011708400000000341, 0.00011744399999999433, 0.00011702799999999819, 0.0001173049999999981, 0.00011757000000000434, 0.00011761099999999663, 0.00011755599999999783, 0.0001174170000000016, 0.00011666699999999391, 0.0001162770000000049, 0.00011734699999999681]</msg>
<status status="PASS" starttime="20201029 18:20:44.896" endtime="20201029 18:20:44.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.885" endtime="20201029 18:20:44.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:44.913" endtime="20201029 18:20:44.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.907" endtime="20201029 18:20:44.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.905" endtime="20201029 18:20:44.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.414" endtime="20201029 18:20:44.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.413" endtime="20201029 18:20:44.938"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.961" endtime="20201029 18:20:44.981"></status>
</kw>
<msg timestamp="20201029 18:20:44.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:44.957" endtime="20201029 18:20:44.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:44.984" endtime="20201029 18:20:44.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.990" endtime="20201029 18:20:44.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.950" endtime="20201029 18:20:44.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.945" endtime="20201029 18:20:44.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.013" endtime="20201029 18:20:45.350"></status>
</kw>
<msg timestamp="20201029 18:20:45.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039108458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039226653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:45.010" endtime="20201029 18:20:45.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039108458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039226653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:45.359" endtime="20201029 18:20:45.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.376" endtime="20201029 18:20:45.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.003" endtime="20201029 18:20:45.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.998" endtime="20201029 18:20:45.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:45.394" level="INFO">${RESULT} = [{'diff': 0.0001181950000000015}, {'diff': 0.00011733399999999672}, {'diff': 0.00011752799999999869}, {'diff': 0.0001173750000000029}, {'diff': 0.00011858300000000543}, {'diff': 0.00011876399999999343...</msg>
<status status="PASS" starttime="20201029 18:20:45.385" endtime="20201029 18:20:45.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:45.404" level="INFO">${ACCURACY} = {'diff': [0.0001181950000000015, 0.00011733399999999672, 0.00011752799999999869, 0.0001173750000000029, 0.00011858300000000543, 0.00011876399999999343, 0.000118082999999998, 0.00011856899999999893, 0....</msg>
<status status="PASS" starttime="20201029 18:20:45.396" endtime="20201029 18:20:45.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.415" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:20:45.412" endtime="20201029 18:20:45.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.420" level="INFO">VALUE: [0.0001181950000000015, 0.00011733399999999672, 0.00011752799999999869, 0.0001173750000000029, 0.00011858300000000543, 0.00011876399999999343, 0.000118082999999998, 0.00011856899999999893, 0.0001175829999999975, 0.0001183049999999991, 0.00011702799999999819, 0.0001188049999999996, 0.00011848600000000098, 0.000118597000000005, 0.0001182500000000003, 0.00011854199999999926, 0.00011781899999999818, 0.00011811099999999713, 0.00011751399999999912, 0.00011865300000000328, 0.00011855599999999883, 0.00011801399999999962, 0.00011879100000000004, 0.00011768000000000195, 0.0001184579999999949, 0.00011838900000000346, 0.00011843100000000217, 0.00011863900000000371, 0.00011777799999999894, 0.0001184579999999949, 0.00011827699999999997, 0.00011870799999999515, 0.0001189170000000031, 0.00011862500000000414, 0.00011749999999999955, 0.00011847300000000088, 0.00011876400000000037, 0.00011829099999999954, 0.00011813899999999627, 0.0001182500000000003, 0.00011879100000000004, 0.00011847199999999447, 0.00011820800000000159, 0.00011870900000000156, 0.00011861099999999763, 0.00011801399999999962, 0.00011833299999999825, 0.00011797200000000091, 0.0001186249999999972, 0.00011699999999999905]</msg>
<status status="PASS" starttime="20201029 18:20:45.417" endtime="20201029 18:20:45.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.406" endtime="20201029 18:20:45.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:45.432" endtime="20201029 18:20:45.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.428" endtime="20201029 18:20:45.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.425" endtime="20201029 18:20:45.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.940" endtime="20201029 18:20:45.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.939" endtime="20201029 18:20:45.457"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.480" endtime="20201029 18:20:45.501"></status>
</kw>
<msg timestamp="20201029 18:20:45.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:45.476" endtime="20201029 18:20:45.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:45.504" endtime="20201029 18:20:45.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.511" endtime="20201029 18:20:45.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.469" endtime="20201029 18:20:45.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.464" endtime="20201029 18:20:45.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.534" endtime="20201029 18:20:45.870"></status>
</kw>
<msg timestamp="20201029 18:20:45.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040080639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040199986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:45.531" endtime="20201029 18:20:45.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040080639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040199986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:45.879" endtime="20201029 18:20:45.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.897" endtime="20201029 18:20:45.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.524" endtime="20201029 18:20:45.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.519" endtime="20201029 18:20:45.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:45.916" level="INFO">${RESULT} = [{'diff': 0.00011934699999999882}, {'diff': 0.00011920900000000206}, {'diff': 0.00011888799999999755}, {'diff': 0.00011952800000000069}, {'diff': 0.00011994399999999683}, {'diff': 0.000119402000000004...</msg>
<status status="PASS" starttime="20201029 18:20:45.906" endtime="20201029 18:20:45.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:45.926" level="INFO">${ACCURACY} = {'diff': [0.00011934699999999882, 0.00011920900000000206, 0.00011888799999999755, 0.00011952800000000069, 0.00011994399999999683, 0.00011940200000000456, 0.00011977800000000094, 0.00011911099999999814...</msg>
<status status="PASS" starttime="20201029 18:20:45.918" endtime="20201029 18:20:45.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.937" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:20:45.935" endtime="20201029 18:20:45.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.942" level="INFO">VALUE: [0.00011934699999999882, 0.00011920900000000206, 0.00011888799999999755, 0.00011952800000000069, 0.00011994399999999683, 0.00011940200000000456, 0.00011977800000000094, 0.00011911099999999814, 0.0001192370000000012, 0.00011945800000000284, 0.0001194029999999971, 0.00011973600000000223, 0.00011891699999999616, 0.0001193750000000049, 0.00011956899999999993, 0.0001193050000000001, 0.0001197500000000018, 0.00011923600000000173, 0.00011945800000000284, 0.00011941599999999719, 0.00011884699999999832, 0.00011898700000000095, 0.00011929200000000001, 0.00011923600000000173, 0.00011926399999999393, 0.00011897300000000138, 0.00011981900000000018, 0.00011922200000000216, 0.00011891699999999616, 0.0001197500000000018, 0.00011970799999999615, 0.00011974999999999486, 0.00011888899999999702, 0.00011929200000000001, 0.00011912500000000464, 0.00011904199999999976, 0.00011954100000000079, 0.00011941699999999666, 0.00011983399999999922, 0.00011905499999999986, 0.00011972200000000266, 0.000119082999999999, 0.00011987499999999846, 0.00011926400000000087, 0.00011988899999999802, 0.00011954200000000026, 0.00011891599999999669, 0.00011831899999999868, 0.00011893099999999573, 0.00011909800000000498]</msg>
<status status="PASS" starttime="20201029 18:20:45.939" endtime="20201029 18:20:45.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.928" endtime="20201029 18:20:45.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:45.955" endtime="20201029 18:20:45.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.951" endtime="20201029 18:20:45.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.948" endtime="20201029 18:20:45.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.459" endtime="20201029 18:20:45.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.458" endtime="20201029 18:20:45.980"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.003" endtime="20201029 18:20:46.023"></status>
</kw>
<msg timestamp="20201029 18:20:46.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:45.999" endtime="20201029 18:20:46.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:46.026" endtime="20201029 18:20:46.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.032" endtime="20201029 18:20:46.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.992" endtime="20201029 18:20:46.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.986" endtime="20201029 18:20:46.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.055" endtime="20201029 18:20:46.395"></status>
</kw>
<msg timestamp="20201029 18:20:46.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039644694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039765319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:46.052" endtime="20201029 18:20:46.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039644694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039765319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:46.404" endtime="20201029 18:20:46.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.422" endtime="20201029 18:20:46.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.045" endtime="20201029 18:20:46.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.040" endtime="20201029 18:20:46.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:46.439" level="INFO">${RESULT} = [{'diff': 0.0001206249999999992}, {'diff': 0.00012034699999999982}, {'diff': 0.00011919399999999608}, {'diff': 0.00011998600000000248}, {'diff': 0.00012048600000000298}, {'diff': 0.0001191950000000025...</msg>
<status status="PASS" starttime="20201029 18:20:46.431" endtime="20201029 18:20:46.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:46.448" level="INFO">${ACCURACY} = {'diff': [0.0001206249999999992, 0.00012034699999999982, 0.00011919399999999608, 0.00011998600000000248, 0.00012048600000000298, 0.0001191950000000025, 0.00012000000000000205, 0.00011999999999999511, ...</msg>
<status status="PASS" starttime="20201029 18:20:46.441" endtime="20201029 18:20:46.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.459" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:20:46.457" endtime="20201029 18:20:46.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.464" level="INFO">VALUE: [0.0001206249999999992, 0.00012034699999999982, 0.00011919399999999608, 0.00011998600000000248, 0.00012048600000000298, 0.0001191950000000025, 0.00012000000000000205, 0.00011999999999999511, 0.00012058399999999997, 0.00012065300000000528, 0.00011923600000000173, 0.00012013899999999827, 0.00012072300000000313, 0.00012034799999999929, 0.00012011200000000555, 0.00012044500000000374, 0.00011986099999999889, 0.00012077699999999553, 0.00012029200000000101, 0.0001205830000000005, 0.00012076399999999543, 0.00012083300000000075, 0.00012070800000000409, 0.00012026399999999493, 0.00011906899999999943, 0.00011997200000000291, 0.00012052700000000222, 0.00012029100000000154, 0.00012077800000000194, 0.00012011099999999914, 0.00011920800000000259, 0.00012048700000000245, 0.00012006900000000043, 0.0001207500000000028, 0.0001204170000000046, 0.00011970800000000309, 0.00012016700000000435, 0.00012027700000000197, 0.00012008399999999947, 0.00012033399999999972, 0.00012066700000000485, 0.00011902800000000019, 0.00012038900000000546, 0.00011918100000000292, 0.00012040199999999862, 0.00012077800000000194, 0.00012066699999999791, 0.00012020799999999665, 0.00012029100000000154, 0.00012042999999999776]</msg>
<status status="PASS" starttime="20201029 18:20:46.461" endtime="20201029 18:20:46.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.450" endtime="20201029 18:20:46.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:46.477" endtime="20201029 18:20:46.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.472" endtime="20201029 18:20:46.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.470" endtime="20201029 18:20:46.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.982" endtime="20201029 18:20:46.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.981" endtime="20201029 18:20:46.502"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.525" endtime="20201029 18:20:46.549"></status>
</kw>
<msg timestamp="20201029 18:20:46.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:46.521" endtime="20201029 18:20:46.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:46.552" endtime="20201029 18:20:46.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.558" endtime="20201029 18:20:46.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.514" endtime="20201029 18:20:46.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.508" endtime="20201029 18:20:46.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.582" endtime="20201029 18:20:46.938"></status>
</kw>
<msg timestamp="20201029 18:20:46.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042021431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042142847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:46.578" endtime="20201029 18:20:46.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042021431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042142847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:46.949" endtime="20201029 18:20:46.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.967" endtime="20201029 18:20:46.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.571" endtime="20201029 18:20:46.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.566" endtime="20201029 18:20:46.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:46.984" level="INFO">${RESULT} = [{'diff': 0.00012141599999999919}, {'diff': 0.00012113899999999928}, {'diff': 0.00012123599999999679}, {'diff': 0.00012123599999999679}, {'diff': 0.0001217500000000038}, {'diff': 0.0001209579999999974...</msg>
<status status="PASS" starttime="20201029 18:20:46.976" endtime="20201029 18:20:46.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:46.993" level="INFO">${ACCURACY} = {'diff': [0.00012141599999999919, 0.00012113899999999928, 0.00012123599999999679, 0.00012123599999999679, 0.0001217500000000038, 0.0001209579999999974, 0.00012002800000000119, 0.00012041699999999766, ...</msg>
<status status="PASS" starttime="20201029 18:20:46.986" endtime="20201029 18:20:46.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.004" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:20:47.002" endtime="20201029 18:20:47.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.010" level="INFO">VALUE: [0.00012141599999999919, 0.00012113899999999928, 0.00012123599999999679, 0.00012123599999999679, 0.0001217500000000038, 0.0001209579999999974, 0.00012002800000000119, 0.00012041699999999766, 0.00012073599999999629, 0.00012091599999999869, 0.0001211249999999997, 0.00012043100000000417, 0.00012179200000000251, 0.00012137499999999996, 0.00012016699999999741, 0.00012072199999999672, 0.00012052799999999475, 0.00012159700000000107, 0.00012179200000000251, 0.00012166599999999944, 0.00012111100000000014, 0.00012179199999999557, 0.00012179200000000251, 0.0001214300000000057, 0.00012130600000000158, 0.0001209449999999973, 0.00012159800000000054, 0.00012179200000000251, 0.0001207500000000028, 0.00012152799999999575, 0.00012002700000000172, 0.00012018100000000392, 0.00012155600000000183, 0.00012154200000000226, 0.0001218329999999948, 0.00012102699999999578, 0.00012154200000000226, 0.00012095800000000434, 0.00012109700000000057, 0.00012183400000000122, 0.00012018000000000445, 0.0001219029999999996, 0.00012168099999999848, 0.00012123599999999679, 0.00012127800000000244, 0.00012115299999999884, 0.0001214449999999978, 0.00012148599999999704, 0.00012149999999999661, 0.00012165299999999934]</msg>
<status status="PASS" starttime="20201029 18:20:47.007" endtime="20201029 18:20:47.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.995" endtime="20201029 18:20:47.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:47.028" endtime="20201029 18:20:47.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.022" endtime="20201029 18:20:47.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.020" endtime="20201029 18:20:47.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.504" endtime="20201029 18:20:47.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.503" endtime="20201029 18:20:47.054"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.077" endtime="20201029 18:20:47.100"></status>
</kw>
<msg timestamp="20201029 18:20:47.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:47.073" endtime="20201029 18:20:47.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:47.103" endtime="20201029 18:20:47.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.109" endtime="20201029 18:20:47.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.066" endtime="20201029 18:20:47.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.060" endtime="20201029 18:20:47.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.133" endtime="20201029 18:20:47.481"></status>
</kw>
<msg timestamp="20201029 18:20:47.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040458958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040581333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:47.130" endtime="20201029 18:20:47.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040458958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040581333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:47.491" endtime="20201029 18:20:47.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.509" endtime="20201029 18:20:47.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.123" endtime="20201029 18:20:47.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.118" endtime="20201029 18:20:47.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:47.527" level="INFO">${RESULT} = [{'diff': 0.00012237499999999402}, {'diff': 0.00012258400000000197}, {'diff': 0.00012213900000000028}, {'diff': 0.00012213900000000028}, {'diff': 0.00012231900000000268}, {'diff': 0.000122096999999994...</msg>
<status status="PASS" starttime="20201029 18:20:47.518" endtime="20201029 18:20:47.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:47.537" level="INFO">${ACCURACY} = {'diff': [0.00012237499999999402, 0.00012258400000000197, 0.00012213900000000028, 0.00012213900000000028, 0.00012231900000000268, 0.00012209699999999463, 0.00012265300000000035, 0.00012204100000000329...</msg>
<status status="PASS" starttime="20201029 18:20:47.529" endtime="20201029 18:20:47.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.549" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:20:47.546" endtime="20201029 18:20:47.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.555" level="INFO">VALUE: [0.00012237499999999402, 0.00012258400000000197, 0.00012213900000000028, 0.00012213900000000028, 0.00012231900000000268, 0.00012209699999999463, 0.00012265300000000035, 0.00012204100000000329, 0.00012136199999999986, 0.00012193099999999873, 0.0001225700000000024, 0.00012286099999999495, 0.0001224999999999976, 0.0001221799999999995, 0.0001227359999999983, 0.00012237500000000096, 0.00012198600000000448, 0.00012192999999999926, 0.00012215200000000037, 0.00012273600000000523, 0.00012193099999999873, 0.00012211100000000114, 0.00012284700000000232, 0.00012211100000000114, 0.0001227359999999983, 0.00012209700000000157, 0.00012276399999999743, 0.00012248599999999804, 0.00012170799999999815, 0.00012266699999999991, 0.00012224999999999736, 0.0001219449999999983, 0.00012120799999999765, 0.00012120800000000459, 0.00012276400000000437, 0.0001213329999999943, 0.00012272199999999872, 0.0001227500000000048, 0.00012136099999999345, 0.00012263900000000078, 0.00012204100000000329, 0.00012261100000000164, 0.00012279199999999657, 0.00012287499999999452, 0.0001223329999999953, 0.00012226399999999693, 0.00012230600000000258, 0.00012266699999999991, 0.00012254199999999632, 0.00012201399999999668]</msg>
<status status="PASS" starttime="20201029 18:20:47.551" endtime="20201029 18:20:47.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.539" endtime="20201029 18:20:47.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:47.568" endtime="20201029 18:20:47.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.563" endtime="20201029 18:20:47.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.561" endtime="20201029 18:20:47.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.056" endtime="20201029 18:20:47.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.055" endtime="20201029 18:20:47.594"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.617" endtime="20201029 18:20:47.640"></status>
</kw>
<msg timestamp="20201029 18:20:47.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:47.614" endtime="20201029 18:20:47.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:47.643" endtime="20201029 18:20:47.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.650" endtime="20201029 18:20:47.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.606" endtime="20201029 18:20:47.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.600" endtime="20201029 18:20:47.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.673" endtime="20201029 18:20:48.023"></status>
</kw>
<msg timestamp="20201029 18:20:48.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040770153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040893069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:47.670" endtime="20201029 18:20:48.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040770153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040893069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:48.032" endtime="20201029 18:20:48.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.050" endtime="20201029 18:20:48.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.663" endtime="20201029 18:20:48.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.658" endtime="20201029 18:20:48.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:48.068" level="INFO">${RESULT} = [{'diff': 0.00012291599999999375}, {'diff': 0.00012374999999999886}, {'diff': 0.0001237359999999993}, {'diff': 0.00012337500000000196}, {'diff': 0.000123083000000003}, {'diff': 0.00012205600000000233}...</msg>
<status status="PASS" starttime="20201029 18:20:48.059" endtime="20201029 18:20:48.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:48.079" level="INFO">${ACCURACY} = {'diff': [0.00012291599999999375, 0.00012374999999999886, 0.0001237359999999993, 0.00012337500000000196, 0.000123083000000003, 0.00012205600000000233, 0.00012337500000000196, 0.0001229449999999993, 0....</msg>
<status status="PASS" starttime="20201029 18:20:48.070" endtime="20201029 18:20:48.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.090" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:20:48.088" endtime="20201029 18:20:48.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.095" level="INFO">VALUE: [0.00012291599999999375, 0.00012374999999999886, 0.0001237359999999993, 0.00012337500000000196, 0.000123083000000003, 0.00012205600000000233, 0.00012337500000000196, 0.0001229449999999993, 0.00012298600000000548, 0.00012331899999999674, 0.00012352799999999775, 0.000123568999999997, 0.00012377800000000494, 0.00012336100000000239, 0.000123777999999998, 0.00012331899999999674, 0.0001235700000000034, 0.00012220799999999865, 0.00012351400000000512, 0.0001236120000000021, 0.00012326400000000487, 0.00012326400000000487, 0.00012308399999999553, 0.00012344400000000033, 0.00012302799999999725, 0.00012313900000000128, 0.000123083000000003, 0.00012383399999999628, 0.0001236529999999944, 0.0001238329999999968, 0.00012301400000000462, 0.00012313900000000128, 0.00012372199999999972, 0.00012359700000000307, 0.0001237359999999993, 0.00012374999999999886, 0.00012379199999999757, 0.0001231380000000018, 0.0001237500000000058, 0.0001229449999999993, 0.0001230559999999964, 0.00012370800000000015, 0.00012301400000000462, 0.00012252799999999675, 0.00012331900000000368, 0.00012372199999999972, 0.00012348600000000598, 0.0001223329999999953, 0.00012319400000000008, 0.00012286100000000189]</msg>
<status status="PASS" starttime="20201029 18:20:48.092" endtime="20201029 18:20:48.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.081" endtime="20201029 18:20:48.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:48.108" endtime="20201029 18:20:48.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.104" endtime="20201029 18:20:48.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.101" endtime="20201029 18:20:48.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.596" endtime="20201029 18:20:48.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.595" endtime="20201029 18:20:48.134"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.157" endtime="20201029 18:20:48.180"></status>
</kw>
<msg timestamp="20201029 18:20:48.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:48.153" endtime="20201029 18:20:48.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:48.183" endtime="20201029 18:20:48.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.189" endtime="20201029 18:20:48.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.146" endtime="20201029 18:20:48.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.140" endtime="20201029 18:20:48.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.213" endtime="20201029 18:20:48.562"></status>
</kw>
<msg timestamp="20201029 18:20:48.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040363431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040487986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:48.210" endtime="20201029 18:20:48.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040363431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040487986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:48.572" endtime="20201029 18:20:48.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.591" endtime="20201029 18:20:48.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.203" endtime="20201029 18:20:48.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.198" endtime="20201029 18:20:48.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:48.609" level="INFO">${RESULT} = [{'diff': 0.00012455499999999842}, {'diff': 0.00012463799999999636}, {'diff': 0.00012474999999999986}, {'diff': 0.0001239580000000004}, {'diff': 0.0001242500000000063}, {'diff': 0.00012386099999999595...</msg>
<status status="PASS" starttime="20201029 18:20:48.600" endtime="20201029 18:20:48.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:48.619" level="INFO">${ACCURACY} = {'diff': [0.00012455499999999842, 0.00012463799999999636, 0.00012474999999999986, 0.0001239580000000004, 0.0001242500000000063, 0.00012386099999999595, 0.00012424999999999936, 0.00012397299999999944, ...</msg>
<status status="PASS" starttime="20201029 18:20:48.612" endtime="20201029 18:20:48.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.631" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:20:48.628" endtime="20201029 18:20:48.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.636" level="INFO">VALUE: [0.00012455499999999842, 0.00012463799999999636, 0.00012474999999999986, 0.0001239580000000004, 0.0001242500000000063, 0.00012386099999999595, 0.00012424999999999936, 0.00012397299999999944, 0.0001248199999999977, 0.00012408299999999706, 0.00012480600000000508, 0.00012436099999999645, 0.00012326399999999793, 0.0001244580000000009, 0.0001244160000000022, 0.00012480600000000508, 0.000124777999999999, 0.00012422200000000022, 0.0001247909999999991, 0.00012452799999999875, 0.00012438899999999559, 0.00012391700000000117, 0.00012336100000000239, 0.0001247360000000003, 0.00012445900000000037, 0.0001245559999999979, 0.00012441599999999525, 0.00012323600000000573, 0.00012415200000000237, 0.00012448600000000004, 0.00012336199999999492, 0.00012430599999999764, 0.00012355500000000436, 0.00012452699999999928, 0.00012337500000000196, 0.00012415200000000237, 0.0001246250000000032, 0.00012484700000000432, 0.0001243480000000033, 0.00012463900000000278, 0.00012448600000000004, 0.00012444499999999387, 0.00012426399999999893, 0.00012480499999999867, 0.00012451399999999918, 0.00012398600000000648, 0.00012408299999999706, 0.00012419400000000108, 0.00012304200000000376, 0.00012483400000000422]</msg>
<status status="PASS" starttime="20201029 18:20:48.633" endtime="20201029 18:20:48.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.621" endtime="20201029 18:20:48.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:48.649" endtime="20201029 18:20:48.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.644" endtime="20201029 18:20:48.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.642" endtime="20201029 18:20:48.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.136" endtime="20201029 18:20:48.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.135" endtime="20201029 18:20:48.674"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.697" endtime="20201029 18:20:48.722"></status>
</kw>
<msg timestamp="20201029 18:20:48.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:48.694" endtime="20201029 18:20:48.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:48.725" endtime="20201029 18:20:48.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.732" endtime="20201029 18:20:48.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.687" endtime="20201029 18:20:48.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.681" endtime="20201029 18:20:48.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.755" endtime="20201029 18:20:49.094"></status>
</kw>
<msg timestamp="20201029 18:20:49.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042128444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042253986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:48.752" endtime="20201029 18:20:49.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042128444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042253986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:49.103" endtime="20201029 18:20:49.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.121" endtime="20201029 18:20:49.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.745" endtime="20201029 18:20:49.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.740" endtime="20201029 18:20:49.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:49.139" level="INFO">${RESULT} = [{'diff': 0.00012554199999999932}, {'diff': 0.00012565300000000335}, {'diff': 0.0001240700000000039}, {'diff': 0.000125568999999999}, {'diff': 0.00012534700000000482}, {'diff': 0.0001250000000000001},...</msg>
<status status="PASS" starttime="20201029 18:20:49.130" endtime="20201029 18:20:49.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:49.148" level="INFO">${ACCURACY} = {'diff': [0.00012554199999999932, 0.00012565300000000335, 0.0001240700000000039, 0.000125568999999999, 0.00012534700000000482, 0.0001250000000000001, 0.00012554099999999985, 0.000125680000000003, 0.00...</msg>
<status status="PASS" starttime="20201029 18:20:49.141" endtime="20201029 18:20:49.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.158" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:20:49.156" endtime="20201029 18:20:49.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.164" level="INFO">VALUE: [0.00012554199999999932, 0.00012565300000000335, 0.0001240700000000039, 0.000125568999999999, 0.00012534700000000482, 0.0001250000000000001, 0.00012554099999999985, 0.000125680000000003, 0.0001253889999999966, 0.00012554199999999932, 0.00012559699999999813, 0.00012477699999999953, 0.000125568999999999, 0.00012543100000000224, 0.00012525000000000036, 0.0001251109999999972, 0.00012437500000000296, 0.0001255000000000006, 0.00012534699999999788, 0.0001251800000000025, 0.00012520900000000112, 0.0001257360000000013, 0.0001251529999999959, 0.0001254030000000031, 0.0001254160000000032, 0.00012576400000000043, 0.0001254450000000018, 0.0001249030000000026, 0.0001251529999999959, 0.00012491700000000217, 0.00012572200000000172, 0.00012529199999999907, 0.0001256529999999964, 0.00012566699999999598, 0.00012558299999999856, 0.00012555499999999942, 0.0001252779999999995, 0.0001244030000000021, 0.00012509699999999763, 0.00012530600000000558, 0.00012559699999999813, 0.0001253329999999983, 0.00012530599999999864, 0.0001244160000000022, 0.00012555499999999942, 0.00012515199999999643, 0.00012531899999999874, 0.00012576400000000043, 0.00012529199999999907, 0.00012576400000000043]</msg>
<status status="PASS" starttime="20201029 18:20:49.161" endtime="20201029 18:20:49.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.149" endtime="20201029 18:20:49.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:49.177" endtime="20201029 18:20:49.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.172" endtime="20201029 18:20:49.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.169" endtime="20201029 18:20:49.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.676" endtime="20201029 18:20:49.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.675" endtime="20201029 18:20:49.202"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.225" endtime="20201029 18:20:49.245"></status>
</kw>
<msg timestamp="20201029 18:20:49.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:49.222" endtime="20201029 18:20:49.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:49.249" endtime="20201029 18:20:49.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.255" endtime="20201029 18:20:49.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.215" endtime="20201029 18:20:49.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.209" endtime="20201029 18:20:49.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.278" endtime="20201029 18:20:49.617"></status>
</kw>
<msg timestamp="20201029 18:20:49.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039687014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039813444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:49.275" endtime="20201029 18:20:49.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039687014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039813444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:49.627" endtime="20201029 18:20:49.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.645" endtime="20201029 18:20:49.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.268" endtime="20201029 18:20:49.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.263" endtime="20201029 18:20:49.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:49.663" level="INFO">${RESULT} = [{'diff': 0.00012643000000000376}, {'diff': 0.00012608299999999906}, {'diff': 0.00012649999999999467}, {'diff': 0.00012637499999999802}, {'diff': 0.00012651400000000118}, {'diff': 0.000125610999999997...</msg>
<status status="PASS" starttime="20201029 18:20:49.654" endtime="20201029 18:20:49.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:49.677" level="INFO">${ACCURACY} = {'diff': [0.00012643000000000376, 0.00012608299999999906, 0.00012649999999999467, 0.00012637499999999802, 0.00012651400000000118, 0.0001256109999999977, 0.00012630599999999964, 0.00012634700000000582,...</msg>
<status status="PASS" starttime="20201029 18:20:49.665" endtime="20201029 18:20:49.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.688" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:20:49.686" endtime="20201029 18:20:49.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.694" level="INFO">VALUE: [0.00012643000000000376, 0.00012608299999999906, 0.00012649999999999467, 0.00012637499999999802, 0.00012651400000000118, 0.0001256109999999977, 0.00012630599999999964, 0.00012634700000000582, 0.000126569, 0.00012673599999999535, 0.00012593100000000274, 0.00012669499999999612, 0.0001268199999999997, 0.00012641599999999725, 0.00012619399999999614, 0.00012605499999999992, 0.00012662499999999827, 0.0001263199999999992, 0.00012630500000000017, 0.0001252779999999995, 0.00012679200000000057, 0.0001261250000000047, 0.00012663899999999784, 0.0001265559999999999, 0.0001262230000000017, 0.00012659699999999913, 0.00012634700000000582, 0.0001262769999999941, 0.00012651400000000118, 0.00012597199999999503, 0.00012679199999999363, 0.0001265000000000016, 0.00012670900000000263, 0.00012572200000000172, 0.00012640199999999768, 0.0001266659999999975, 0.00012506999999999796, 0.0001250689999999985, 0.00012654200000000032, 0.00012544400000000233, 0.00012629200000000007, 0.00012602800000000025, 0.000126472999999995, 0.00012690299999999766, 0.00012520800000000165, 0.0001261109999999982, 0.00012648600000000204, 0.00012637500000000496, 0.0001260689999999995, 0.00012675000000000186]</msg>
<status status="PASS" starttime="20201029 18:20:49.691" endtime="20201029 18:20:49.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.679" endtime="20201029 18:20:49.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:49.706" endtime="20201029 18:20:49.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.702" endtime="20201029 18:20:49.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.699" endtime="20201029 18:20:49.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.204" endtime="20201029 18:20:49.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.203" endtime="20201029 18:20:49.731"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.754" endtime="20201029 18:20:49.776"></status>
</kw>
<msg timestamp="20201029 18:20:49.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:49.751" endtime="20201029 18:20:49.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:49.779" endtime="20201029 18:20:49.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.786" endtime="20201029 18:20:49.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.744" endtime="20201029 18:20:49.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.738" endtime="20201029 18:20:49.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.809" endtime="20201029 18:20:50.157"></status>
</kw>
<msg timestamp="20201029 18:20:50.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039739431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039866778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:49.805" endtime="20201029 18:20:50.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039739431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039866778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:50.166" endtime="20201029 18:20:50.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.184" endtime="20201029 18:20:50.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.798" endtime="20201029 18:20:50.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.794" endtime="20201029 18:20:50.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:50.201" level="INFO">${RESULT} = [{'diff': 0.00012734699999999988}, {'diff': 0.00012754200000000132}, {'diff': 0.00012737499999999902}, {'diff': 0.00012626400000000093}, {'diff': 0.0001278189999999943}, {'diff': 0.0001267359999999953...</msg>
<status status="PASS" starttime="20201029 18:20:50.193" endtime="20201029 18:20:50.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:50.286" level="INFO">${ACCURACY} = {'diff': [0.00012734699999999988, 0.00012754200000000132, 0.00012737499999999902, 0.00012626400000000093, 0.0001278189999999943, 0.00012673599999999535, 0.0001277639999999955, 0.00012681900000000024, ...</msg>
<status status="PASS" starttime="20201029 18:20:50.203" endtime="20201029 18:20:50.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.297" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:20:50.294" endtime="20201029 18:20:50.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.302" level="INFO">VALUE: [0.00012734699999999988, 0.00012754200000000132, 0.00012737499999999902, 0.00012626400000000093, 0.0001278189999999943, 0.00012673599999999535, 0.0001277639999999955, 0.00012681900000000024, 0.0001277639999999955, 0.00012759700000000013, 0.00012763899999999884, 0.00012713900000000528, 0.00012701400000000168, 0.00012791699999999823, 0.0001270000000000021, 0.00012786099999999995, 0.0001278889999999991, 0.0001276109999999997, 0.00012769399999999764, 0.00012786099999999995, 0.00012713899999999834, 0.00012713900000000528, 0.0001270560000000004, 0.00012737500000000596, 0.0001271529999999979, 0.00012726400000000193, 0.00012779199999999463, 0.00012620900000000213, 0.00012737499999999902, 0.00012747200000000347, 0.0001273200000000002, 0.0001271529999999979, 0.0001272079999999967, 0.00012691599999999775, 0.0001277910000000021, 0.00012701400000000168, 0.00012705499999999398, 0.00012715199999999843, 0.00012751399999999524, 0.00012779200000000157, 0.00012713899999999834, 0.00012783299999999387, 0.00012790199999999918, 0.00012787499999999952, 0.00012687500000000546, 0.00012755599999999395, 0.000127778000000002, 0.00012706999999999996, 0.0001270560000000004, 0.00012769399999999764]</msg>
<status status="PASS" starttime="20201029 18:20:50.299" endtime="20201029 18:20:50.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.287" endtime="20201029 18:20:50.305"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:50.314" endtime="20201029 18:20:50.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.310" endtime="20201029 18:20:50.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.307" endtime="20201029 18:20:50.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.733" endtime="20201029 18:20:50.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.732" endtime="20201029 18:20:50.339"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.363" endtime="20201029 18:20:50.385"></status>
</kw>
<msg timestamp="20201029 18:20:50.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:50.358" endtime="20201029 18:20:50.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:50.388" endtime="20201029 18:20:50.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.395" endtime="20201029 18:20:50.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.352" endtime="20201029 18:20:50.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.346" endtime="20201029 18:20:50.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.418" endtime="20201029 18:20:50.766"></status>
</kw>
<msg timestamp="20201029 18:20:50.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040582764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040710708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:50.415" endtime="20201029 18:20:50.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040582764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040710708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:50.776" endtime="20201029 18:20:50.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.794" endtime="20201029 18:20:50.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.407" endtime="20201029 18:20:50.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.403" endtime="20201029 18:20:50.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:50.810" level="INFO">${RESULT} = [{'diff': 0.0001279439999999979}, {'diff': 0.0001281529999999989}, {'diff': 0.00012869499999999812}, {'diff': 0.00012884700000000138}, {'diff': 0.00012867999999999907}, {'diff': 0.00012801400000000268...</msg>
<status status="PASS" starttime="20201029 18:20:50.802" endtime="20201029 18:20:50.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:50.820" level="INFO">${ACCURACY} = {'diff': [0.0001279439999999979, 0.0001281529999999989, 0.00012869499999999812, 0.00012884700000000138, 0.00012867999999999907, 0.00012801400000000268, 0.00012804200000000182, 0.0001286110000000007, 0...</msg>
<status status="PASS" starttime="20201029 18:20:50.813" endtime="20201029 18:20:50.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.830" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:20:50.828" endtime="20201029 18:20:50.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.837" level="INFO">VALUE: [0.0001279439999999979, 0.0001281529999999989, 0.00012869499999999812, 0.00012884700000000138, 0.00012867999999999907, 0.00012801400000000268, 0.00012804200000000182, 0.0001286110000000007, 0.00012807000000000096, 0.0001275979999999996, 0.00012866699999999898, 0.0001288330000000018, 0.00012834700000000088, 0.00012741700000000467, 0.00012863800000000036, 0.0001287639999999965, 0.00012826400000000293, 0.00012820800000000465, 0.00012756899999999405, 0.00012812499999999977, 0.00012883400000000128, 0.0001282079999999977, 0.00012836100000000045, 0.00012829099999999566, 0.00012804100000000235, 0.00012870899999999769, 0.00012834700000000088, 0.00012866699999999898, 0.00012886199999999348, 0.00012827799999999556, 0.00012866699999999898, 0.00012799999999999617, 0.00012754200000000132, 0.0001280560000000014, 0.0001286110000000007, 0.0001280969999999937, 0.00012769399999999764, 0.0001279439999999979, 0.0001284859999999971, 0.00012887500000000052, 0.00012881900000000224, 0.000128165999999999, 0.00012837500000000002, 0.0001275560000000009, 0.0001283889999999996, 0.00012836100000000045, 0.00012862500000000027, 0.0001282769999999961, 0.00012815300000000585, 0.00012869499999999812]</msg>
<status status="PASS" starttime="20201029 18:20:50.832" endtime="20201029 18:20:50.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.821" endtime="20201029 18:20:50.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:50.849" endtime="20201029 18:20:50.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.845" endtime="20201029 18:20:50.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.842" endtime="20201029 18:20:50.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.342" endtime="20201029 18:20:50.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.340" endtime="20201029 18:20:50.874"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.897" endtime="20201029 18:20:50.919"></status>
</kw>
<msg timestamp="20201029 18:20:50.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:50.894" endtime="20201029 18:20:50.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:50.922" endtime="20201029 18:20:50.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.929" endtime="20201029 18:20:50.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.886" endtime="20201029 18:20:50.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.881" endtime="20201029 18:20:50.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.952" endtime="20201029 18:20:51.298"></status>
</kw>
<msg timestamp="20201029 18:20:51.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039616014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039745722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:50.949" endtime="20201029 18:20:51.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039616014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039745722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:51.307" endtime="20201029 18:20:51.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.325" endtime="20201029 18:20:51.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.941" endtime="20201029 18:20:51.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.937" endtime="20201029 18:20:51.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:51.342" level="INFO">${RESULT} = [{'diff': 0.0001297079999999992}, {'diff': 0.00012899999999999717}, {'diff': 0.00012987500000000152}, {'diff': 0.0001289450000000053}, {'diff': 0.00012949999999999767}, {'diff': 0.00012857000000000146...</msg>
<status status="PASS" starttime="20201029 18:20:51.333" endtime="20201029 18:20:51.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:51.353" level="INFO">${ACCURACY} = {'diff': [0.0001297079999999992, 0.00012899999999999717, 0.00012987500000000152, 0.0001289450000000053, 0.00012949999999999767, 0.00012857000000000146, 0.00012915200000000043, 0.00012899999999999717, ...</msg>
<status status="PASS" starttime="20201029 18:20:51.344" endtime="20201029 18:20:51.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.363" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:20:51.361" endtime="20201029 18:20:51.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.368" level="INFO">VALUE: [0.0001297079999999992, 0.00012899999999999717, 0.00012987500000000152, 0.0001289450000000053, 0.00012949999999999767, 0.00012857000000000146, 0.00012915200000000043, 0.00012899999999999717, 0.00012955599999999595, 0.0001280980000000001, 0.0001293189999999958, 0.00012991700000000023, 0.0001294859999999981, 0.00012930600000000264, 0.00012984700000000238, 0.0001297089999999987, 0.00012897300000000445, 0.0001289859999999976, 0.0001295279999999968, 0.00012952800000000375, 0.00012855499999999548, 0.0001298479999999949, 0.0001292230000000047, 0.0001293890000000006, 0.00012949999999999767, 0.0001294439999999994, 0.00012917999999999957, 0.00012926300000000446, 0.00012806999999999402, 0.000128472999999997, 0.00012945799999999896, 0.0001292780000000035, 0.0001290000000000041, 0.00012931999999999527, 0.00012901399999999674, 0.0001295279999999968, 0.00012909700000000163, 0.0001291110000000012, 0.00012911200000000067, 0.00012859700000000113, 0.00012858400000000103, 0.0001298880000000016, 0.00012987499999999458, 0.00012875000000000386, 0.00012872199999999778, 0.00012979199999999663, 0.0001287360000000043, 0.0001296530000000004, 0.00012891599999999975, 0.00012930600000000264]</msg>
<status status="PASS" starttime="20201029 18:20:51.365" endtime="20201029 18:20:51.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.354" endtime="20201029 18:20:51.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:51.381" endtime="20201029 18:20:51.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.376" endtime="20201029 18:20:51.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.374" endtime="20201029 18:20:51.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.876" endtime="20201029 18:20:51.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.875" endtime="20201029 18:20:51.406"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.428" endtime="20201029 18:20:51.450"></status>
</kw>
<msg timestamp="20201029 18:20:51.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:51.425" endtime="20201029 18:20:51.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:51.454" endtime="20201029 18:20:51.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.460" endtime="20201029 18:20:51.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.418" endtime="20201029 18:20:51.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.412" endtime="20201029 18:20:51.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.483" endtime="20201029 18:20:51.840"></status>
</kw>
<msg timestamp="20201029 18:20:51.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039419278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039550222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:51.480" endtime="20201029 18:20:51.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039419278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039550222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:51.849" endtime="20201029 18:20:51.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.868" endtime="20201029 18:20:51.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.473" endtime="20201029 18:20:51.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.468" endtime="20201029 18:20:51.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:51.885" level="INFO">${RESULT} = [{'diff': 0.0001309440000000009}, {'diff': 0.00013033299999999637}, {'diff': 0.00013005599999999645}, {'diff': 0.00013034800000000235}, {'diff': 0.00013076299999999902}, {'diff': 0.0001307779999999980...</msg>
<status status="PASS" starttime="20201029 18:20:51.876" endtime="20201029 18:20:51.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:51.896" level="INFO">${ACCURACY} = {'diff': [0.0001309440000000009, 0.00013033299999999637, 0.00013005599999999645, 0.00013034800000000235, 0.00013076299999999902, 0.00013077799999999806, 0.00012930500000000317, 0.0001302089999999992, ...</msg>
<status status="PASS" starttime="20201029 18:20:51.887" endtime="20201029 18:20:51.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.907" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:20:51.905" endtime="20201029 18:20:51.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.913" level="INFO">VALUE: [0.0001309440000000009, 0.00013033299999999637, 0.00013005599999999645, 0.00013034800000000235, 0.00013076299999999902, 0.00013077799999999806, 0.00012930500000000317, 0.0001302089999999992, 0.00013051399999999824, 0.00013036100000000245, 0.00013098699999999908, 0.00012922299999999776, 0.00013040300000000116, 0.00013023599999999885, 0.00013023599999999885, 0.0001302079999999997, 0.00012941699999999973, 0.00013084700000000338, 0.00012977799999999706, 0.00013090300000000166, 0.0001297639999999975, 0.00013074999999999892, 0.00013023599999999885, 0.00013019400000000014, 0.00012995799999999946, 0.00013062500000000227, 0.00012997200000000597, 0.0001301530000000009, 0.00013056999999999652, 0.00013084700000000338, 0.00013049999999999867, 0.00013054199999999738, 0.00013011099999999526, 0.00012977799999999706, 0.00013041700000000073, 0.00013040299999999422, 0.0001308059999999972, 0.00013026400000000493, 0.00012994499999999937, 0.00012998600000000554, 0.0001308189999999973, 0.00013091600000000175, 0.00013092999999999438, 0.0001309310000000008, 0.00013016700000000048, 0.00013045799999999996, 0.00012995799999999946, 0.00013002800000000425, 0.0001303330000000033, 0.00013090300000000166]</msg>
<status status="PASS" starttime="20201029 18:20:51.910" endtime="20201029 18:20:51.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.898" endtime="20201029 18:20:51.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:51.926" endtime="20201029 18:20:51.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.921" endtime="20201029 18:20:51.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.919" endtime="20201029 18:20:51.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.408" endtime="20201029 18:20:51.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.407" endtime="20201029 18:20:51.951"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.974" endtime="20201029 18:20:51.997"></status>
</kw>
<msg timestamp="20201029 18:20:51.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:51.970" endtime="20201029 18:20:51.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:52.001" endtime="20201029 18:20:52.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.007" endtime="20201029 18:20:52.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.963" endtime="20201029 18:20:52.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.957" endtime="20201029 18:20:52.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.033" endtime="20201029 18:20:52.380"></status>
</kw>
<msg timestamp="20201029 18:20:52.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040436264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040568167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:52.028" endtime="20201029 18:20:52.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040436264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040568167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:52.390" endtime="20201029 18:20:52.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.408" endtime="20201029 18:20:52.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.020" endtime="20201029 18:20:52.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.015" endtime="20201029 18:20:52.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:52.426" level="INFO">${RESULT} = [{'diff': 0.00013190300000000266}, {'diff': 0.00013186100000000395}, {'diff': 0.00013140300000000216}, {'diff': 0.0001318890000000031}, {'diff': 0.0001310969999999967}, {'diff': 0.00013124999999999942...</msg>
<status status="PASS" starttime="20201029 18:20:52.417" endtime="20201029 18:20:52.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:52.435" level="INFO">${ACCURACY} = {'diff': [0.00013190300000000266, 0.00013186100000000395, 0.00013140300000000216, 0.0001318890000000031, 0.0001310969999999967, 0.00013124999999999942, 0.00013162500000000327, 0.00013151399999999924, ...</msg>
<status status="PASS" starttime="20201029 18:20:52.428" endtime="20201029 18:20:52.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.446" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:20:52.444" endtime="20201029 18:20:52.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.452" level="INFO">VALUE: [0.00013190300000000266, 0.00013186100000000395, 0.00013140300000000216, 0.0001318890000000031, 0.0001310969999999967, 0.00013124999999999942, 0.00013162500000000327, 0.00013151399999999924, 0.00013168100000000155, 0.00013122200000000028, 0.000131263999999999, 0.0001311110000000032, 0.0001313059999999977, 0.00013107000000000396, 0.00013041700000000073, 0.00013040300000000116, 0.00013122299999999976, 0.00013026400000000493, 0.0001318330000000048, 0.00013104199999999788, 0.00013145800000000096, 0.0001313189999999978, 0.0001316530000000024, 0.00013161099999999676, 0.00013080500000000467, 0.00013162499999999633, 0.0001313200000000042, 0.00013188899999999615, 0.000131860999999997, 0.00013120799999999377, 0.00013009700000000263, 0.00013162500000000327, 0.00013037500000000202, 0.00013181900000000524, 0.0001310839999999966, 0.00013008299999999612, 0.0001311110000000032, 0.00013137500000000302, 0.00013127799999999856, 0.00013159700000000413, 0.00013137499999999608, 0.0001312080000000007, 0.00013123599999999985, 0.00013136200000000292, 0.00013027799999999756, 0.0001317639999999995, 0.00013177799999999906, 0.00013137499999999608, 0.0001315969999999972, 0.00013183400000000428]</msg>
<status status="PASS" starttime="20201029 18:20:52.448" endtime="20201029 18:20:52.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.437" endtime="20201029 18:20:52.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:52.468" endtime="20201029 18:20:52.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.464" endtime="20201029 18:20:52.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.461" endtime="20201029 18:20:52.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.953" endtime="20201029 18:20:52.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.952" endtime="20201029 18:20:52.494"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.518" endtime="20201029 18:20:52.542"></status>
</kw>
<msg timestamp="20201029 18:20:52.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:52.514" endtime="20201029 18:20:52.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:52.545" endtime="20201029 18:20:52.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.552" endtime="20201029 18:20:52.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.506" endtime="20201029 18:20:52.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.500" endtime="20201029 18:20:52.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.575" endtime="20201029 18:20:52.923"></status>
</kw>
<msg timestamp="20201029 18:20:52.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042200361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042332625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:52.572" endtime="20201029 18:20:52.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042200361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042332625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:52.932" endtime="20201029 18:20:52.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.951" endtime="20201029 18:20:52.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.564" endtime="20201029 18:20:52.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.560" endtime="20201029 18:20:52.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:52.968" level="INFO">${RESULT} = [{'diff': 0.000132264}, {'diff': 0.00013201300000000027}, {'diff': 0.00013291600000000375}, {'diff': 0.0001324440000000024}, {'diff': 0.000132264}, {'diff': 0.00013222199999999434}, {'diff': 0.0001325...</msg>
<status status="PASS" starttime="20201029 18:20:52.960" endtime="20201029 18:20:52.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:52.978" level="INFO">${ACCURACY} = {'diff': [0.000132264, 0.00013201300000000027, 0.00013291600000000375, 0.0001324440000000024, 0.000132264, 0.00013222199999999434, 0.00013254199999999938, 0.0001324310000000023, 0.00013250000000000067...</msg>
<status status="PASS" starttime="20201029 18:20:52.971" endtime="20201029 18:20:52.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.989" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:20:52.987" endtime="20201029 18:20:52.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.994" level="INFO">VALUE: [0.000132264, 0.00013201300000000027, 0.00013291600000000375, 0.0001324440000000024, 0.000132264, 0.00013222199999999434, 0.00013254199999999938, 0.0001324310000000023, 0.00013250000000000067, 0.00013266699999999604, 0.00013256899999999905, 0.00013263900000000384, 0.00013243000000000282, 0.00013251400000000024, 0.00013248700000000058, 0.00013265299999999647, 0.000132264, 0.00013238899999999665, 0.00013238899999999665, 0.00013247200000000153, 0.00013261099999999776, 0.00013262499999999733, 0.00013290300000000366, 0.00013209700000000463, 0.00013244500000000187, 0.0001324310000000023, 0.0001327090000000017, 0.0001325839999999981, 0.00013111099999999626, 0.0001324310000000023, 0.00013201399999999974, 0.00013108299999999712, 0.00013211099999999726, 0.00013222200000000128, 0.0001327640000000005, 0.00013190300000000266, 0.00013245800000000196, 0.00013236199999999698, 0.00013157000000000446, 0.0001329440000000029, 0.0001327640000000005, 0.00013275000000000092, 0.0001320969999999977, 0.00013219400000000214, 0.00013237499999999708, 0.000132264, 0.00013204199999999888, 0.00013284700000000538, 0.00013275000000000092, 0.0001323059999999987]</msg>
<status status="PASS" starttime="20201029 18:20:52.991" endtime="20201029 18:20:52.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.980" endtime="20201029 18:20:52.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:53.009" endtime="20201029 18:20:53.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.003" endtime="20201029 18:20:53.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.000" endtime="20201029 18:20:53.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.496" endtime="20201029 18:20:53.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.495" endtime="20201029 18:20:53.034"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.057" endtime="20201029 18:20:53.080"></status>
</kw>
<msg timestamp="20201029 18:20:53.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:53.054" endtime="20201029 18:20:53.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:53.084" endtime="20201029 18:20:53.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.090" endtime="20201029 18:20:53.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.046" endtime="20201029 18:20:53.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.041" endtime="20201029 18:20:53.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.114" endtime="20201029 18:20:53.462"></status>
</kw>
<msg timestamp="20201029 18:20:53.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040468764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040602306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:53.110" endtime="20201029 18:20:53.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040468764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040602306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:53.472" endtime="20201029 18:20:53.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.490" endtime="20201029 18:20:53.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.103" endtime="20201029 18:20:53.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.098" endtime="20201029 18:20:53.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:53.507" level="INFO">${RESULT} = [{'diff': 0.00013354200000000038}, {'diff': 0.00013227799999999956}, {'diff': 0.0001332080000000027}, {'diff': 0.000132166000000003}, {'diff': 0.00013305499999999998}, {'diff': 0.0001332080000000027},...</msg>
<status status="PASS" starttime="20201029 18:20:53.498" endtime="20201029 18:20:53.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:53.518" level="INFO">${ACCURACY} = {'diff': [0.00013354200000000038, 0.00013227799999999956, 0.0001332080000000027, 0.000132166000000003, 0.00013305499999999998, 0.0001332080000000027, 0.0001330839999999986, 0.00013247200000000153, 0.0...</msg>
<status status="PASS" starttime="20201029 18:20:53.510" endtime="20201029 18:20:53.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.529" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:20:53.527" endtime="20201029 18:20:53.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.535" level="INFO">VALUE: [0.00013354200000000038, 0.00013227799999999956, 0.0001332080000000027, 0.000132166000000003, 0.00013305499999999998, 0.0001332080000000027, 0.0001330839999999986, 0.00013247200000000153, 0.0001336660000000045, 0.00013345800000000296, 0.0001335139999999943, 0.00013358299999999962, 0.0001334169999999968, 0.0001333479999999984, 0.00013340300000000416, 0.00013318100000000305, 0.0001336939999999967, 0.00013345800000000296, 0.00013352799999999387, 0.00013347200000000253, 0.00013308300000000606, 0.00013341700000000373, 0.00013373599999999541, 0.00013337499999999808, 0.00013333299999999937, 0.00013338899999999765, 0.00013208299999999812, 0.00013323600000000185, 0.00013244399999999545, 0.00013395799999999652, 0.00013372200000000278, 0.00013240300000000316, 0.00013341700000000373, 0.00013340299999999722, 0.00013305499999999998, 0.00013400000000000217, 0.0001339860000000026, 0.00013337499999999808, 0.00013333399999999884, 0.00013373600000000235, 0.00013358299999999962, 0.0001338060000000002, 0.0001331519999999975, 0.00013273600000000135, 0.00013229199999999913, 0.0001339169999999973, 0.000133166000000004, 0.00013312499999999783, 0.00013340199999999774, 0.00013326300000000152]</msg>
<status status="PASS" starttime="20201029 18:20:53.532" endtime="20201029 18:20:53.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.520" endtime="20201029 18:20:53.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:53.547" endtime="20201029 18:20:53.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.543" endtime="20201029 18:20:53.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.540" endtime="20201029 18:20:53.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.036" endtime="20201029 18:20:53.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.035" endtime="20201029 18:20:53.573"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.596" endtime="20201029 18:20:53.619"></status>
</kw>
<msg timestamp="20201029 18:20:53.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:53.592" endtime="20201029 18:20:53.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:53.622" endtime="20201029 18:20:53.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.629" endtime="20201029 18:20:53.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.585" endtime="20201029 18:20:53.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.579" endtime="20201029 18:20:53.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.652" endtime="20201029 18:20:54.003"></status>
</kw>
<msg timestamp="20201029 18:20:54.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040183778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040318028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:53.649" endtime="20201029 18:20:54.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040183778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040318028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:54.012" endtime="20201029 18:20:54.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.031" endtime="20201029 18:20:54.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.642" endtime="20201029 18:20:54.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.637" endtime="20201029 18:20:54.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:54.048" level="INFO">${RESULT} = [{'diff': 0.00013424999999999548}, {'diff': 0.00013444499999999693}, {'diff': 0.00013477699999999565}, {'diff': 0.00013383299999999987}, {'diff': 0.00013440300000000516}, {'diff': 0.000134042000000000...</msg>
<status status="PASS" starttime="20201029 18:20:54.039" endtime="20201029 18:20:54.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:54.059" level="INFO">${ACCURACY} = {'diff': [0.00013424999999999548, 0.00013444499999999693, 0.00013477699999999565, 0.00013383299999999987, 0.00013440300000000516, 0.00013404200000000088, 0.0001339719999999961, 0.0001344169999999978, ...</msg>
<status status="PASS" starttime="20201029 18:20:54.050" endtime="20201029 18:20:54.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.070" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:20:54.068" endtime="20201029 18:20:54.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.076" level="INFO">VALUE: [0.00013424999999999548, 0.00013444499999999693, 0.00013477699999999565, 0.00013383299999999987, 0.00013440300000000516, 0.00013404200000000088, 0.0001339719999999961, 0.0001344169999999978, 0.00013434699999999994, 0.00013449999999999573, 0.00013472199999999684, 0.00013419500000000362, 0.0001341389999999984, 0.00013494399999999795, 0.00013455600000000095, 0.00013472200000000378, 0.00013475000000000292, 0.0001339860000000026, 0.0001343190000000008, 0.00013327800000000056, 0.00013461099999999976, 0.00013432000000000027, 0.0001340969999999997, 0.00013405500000000098, 0.00013408300000000012, 0.00013412499999999883, 0.0001340280000000013, 0.00013462499999999933, 0.00013405600000000045, 0.00013420899999999625, 0.00013422299999999582, 0.00013429200000000113, 0.00013420799999999677, 0.0001346389999999989, 0.00013424999999999548, 0.00013492999999999838, 0.00013375000000000192, 0.00013379200000000063, 0.0001348190000000013, 0.0001345840000000001, 0.0001339719999999961, 0.00013347200000000253, 0.00013490299999999872, 0.00013419499999999668, 0.00013311099999999826, 0.00013490199999999924, 0.00013455600000000095, 0.00013423599999999591, 0.00013426399999999505, 0.00013423600000000285]</msg>
<status status="PASS" starttime="20201029 18:20:54.073" endtime="20201029 18:20:54.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.061" endtime="20201029 18:20:54.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:54.089" endtime="20201029 18:20:54.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.084" endtime="20201029 18:20:54.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.082" endtime="20201029 18:20:54.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.575" endtime="20201029 18:20:54.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.573" endtime="20201029 18:20:54.114"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.137" endtime="20201029 18:20:54.160"></status>
</kw>
<msg timestamp="20201029 18:20:54.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:54.134" endtime="20201029 18:20:54.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:54.164" endtime="20201029 18:20:54.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.170" endtime="20201029 18:20:54.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.126" endtime="20201029 18:20:54.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.121" endtime="20201029 18:20:54.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.194" endtime="20201029 18:20:54.547"></status>
</kw>
<msg timestamp="20201029 18:20:54.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040315306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040450347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:54.191" endtime="20201029 18:20:54.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040315306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040450347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:54.556" endtime="20201029 18:20:54.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.575" endtime="20201029 18:20:54.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.183" endtime="20201029 18:20:54.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.178" endtime="20201029 18:20:54.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:54.592" level="INFO">${RESULT} = [{'diff': 0.00013504099999999547}, {'diff': 0.0001356389999999999}, {'diff': 0.0001356939999999987}, {'diff': 0.00013502700000000284}, {'diff': 0.0001351809999999981}, {'diff': 0.00013505500000000198}...</msg>
<status status="PASS" starttime="20201029 18:20:54.583" endtime="20201029 18:20:54.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:54.602" level="INFO">${ACCURACY} = {'diff': [0.00013504099999999547, 0.0001356389999999999, 0.0001356939999999987, 0.00013502700000000284, 0.0001351809999999981, 0.00013505500000000198, 0.00013575000000000392, 0.00013504200000000188, 0...</msg>
<status status="PASS" starttime="20201029 18:20:54.594" endtime="20201029 18:20:54.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.613" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:20:54.610" endtime="20201029 18:20:54.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.618" level="INFO">VALUE: [0.00013504099999999547, 0.0001356389999999999, 0.0001356939999999987, 0.00013502700000000284, 0.0001351809999999981, 0.00013505500000000198, 0.00013575000000000392, 0.00013504200000000188, 0.00013493099999999786, 0.00013500000000000317, 0.0001350269999999959, 0.0001348060000000012, 0.00013570799999999827, 0.00013533300000000137, 0.0001347640000000025, 0.00013515299999999897, 0.00013579099999999622, 0.00013501300000000327, 0.00013540199999999974, 0.00013583400000000134, 0.00013572199999999784, 0.00013545799999999802, 0.00013548599999999716, 0.00013525000000000342, 0.00013522199999999734, 0.0001353610000000005, 0.00013590299999999972, 0.00013572200000000478, 0.00013472299999999632, 0.0001350139999999958, 0.00013523599999999691, 0.00013550000000000367, 0.00013411099999999926, 0.00013526399999999605, 0.0001359440000000059, 0.00013445800000000396, 0.00013537500000000008, 0.00013538899999999965, 0.00013522200000000428, 0.00013461099999999976, 0.0001345689999999941, 0.00013512499999999983, 0.00013476299999999608, 0.00013504200000000188, 0.0001350840000000006, 0.00013577800000000306, 0.00013493099999999786, 0.00013494399999999795, 0.0001352770000000031, 0.00013515299999999897]</msg>
<status status="PASS" starttime="20201029 18:20:54.615" endtime="20201029 18:20:54.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.603" endtime="20201029 18:20:54.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:54.631" endtime="20201029 18:20:54.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.626" endtime="20201029 18:20:54.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.624" endtime="20201029 18:20:54.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.116" endtime="20201029 18:20:54.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.115" endtime="20201029 18:20:54.656"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.679" endtime="20201029 18:20:54.704"></status>
</kw>
<msg timestamp="20201029 18:20:54.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:54.676" endtime="20201029 18:20:54.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:54.708" endtime="20201029 18:20:54.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.714" endtime="20201029 18:20:54.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.669" endtime="20201029 18:20:54.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.663" endtime="20201029 18:20:54.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.738" endtime="20201029 18:20:55.087"></status>
</kw>
<msg timestamp="20201029 18:20:55.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042084097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042219611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:54.734" endtime="20201029 18:20:55.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042084097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042219611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:55.096" endtime="20201029 18:20:55.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.115" endtime="20201029 18:20:55.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.727" endtime="20201029 18:20:55.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.722" endtime="20201029 18:20:55.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:55.133" level="INFO">${RESULT} = [{'diff': 0.0001355139999999963}, {'diff': 0.00013640300000000022}, {'diff': 0.0001366809999999996}, {'diff': 0.0001368889999999942}, {'diff': 0.00013655600000000295}, {'diff': 0.00013624999999999748}...</msg>
<status status="PASS" starttime="20201029 18:20:55.124" endtime="20201029 18:20:55.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:55.142" level="INFO">${ACCURACY} = {'diff': [0.0001355139999999963, 0.00013640300000000022, 0.0001366809999999996, 0.0001368889999999942, 0.00013655600000000295, 0.00013624999999999748, 0.00013651400000000424, 0.00013693099999999986, 0...</msg>
<status status="PASS" starttime="20201029 18:20:55.135" endtime="20201029 18:20:55.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.153" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:20:55.151" endtime="20201029 18:20:55.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.158" level="INFO">VALUE: [0.0001355139999999963, 0.00013640300000000022, 0.0001366809999999996, 0.0001368889999999942, 0.00013655600000000295, 0.00013624999999999748, 0.00013651400000000424, 0.00013693099999999986, 0.00013656999999999558, 0.00013651299999999783, 0.00013650000000000467, 0.00013594399999999895, 0.00013640300000000022, 0.00013626399999999705, 0.00013682000000000277, 0.00013608299999999518, 0.00013654099999999697, 0.0001360970000000017, 0.00013620799999999877, 0.00013633300000000237, 0.0001365970000000022, 0.00013597200000000503, 0.0001366939999999997, 0.00013640300000000022, 0.0001360970000000017, 0.00013679200000000363, 0.00013601400000000374, 0.00013676399999999755, 0.00013624999999999748, 0.00013550000000000367, 0.00013631899999999586, 0.00013694499999999943, 0.00013616699999999954, 0.00013627699999999715, 0.00013615299999999997, 0.00013634700000000194, 0.00013619499999999868, 0.0001360689999999956, 0.00013625000000000442, 0.000136861000000002, 0.00013631899999999586, 0.00013687500000000158, 0.00013545799999999802, 0.00013611200000000073, 0.0001360970000000017, 0.00013597200000000503, 0.00013683299999999593, 0.0001364169999999998, 0.00013644399999999945, 0.00013616699999999954]</msg>
<status status="PASS" starttime="20201029 18:20:55.155" endtime="20201029 18:20:55.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.144" endtime="20201029 18:20:55.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:55.176" endtime="20201029 18:20:55.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.167" endtime="20201029 18:20:55.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.164" endtime="20201029 18:20:55.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.658" endtime="20201029 18:20:55.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.657" endtime="20201029 18:20:55.202"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.225" endtime="20201029 18:20:55.248"></status>
</kw>
<msg timestamp="20201029 18:20:55.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:55.221" endtime="20201029 18:20:55.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:55.251" endtime="20201029 18:20:55.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.258" endtime="20201029 18:20:55.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.214" endtime="20201029 18:20:55.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.208" endtime="20201029 18:20:55.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.282" endtime="20201029 18:20:55.631"></status>
</kw>
<msg timestamp="20201029 18:20:55.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040328583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040465722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:55.278" endtime="20201029 18:20:55.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040328583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040465722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:55.640" endtime="20201029 18:20:55.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.659" endtime="20201029 18:20:55.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.271" endtime="20201029 18:20:55.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.266" endtime="20201029 18:20:55.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:55.676" level="INFO">${RESULT} = [{'diff': 0.0001371390000000014}, {'diff': 0.00013688900000000115}, {'diff': 0.00013765300000000147}, {'diff': 0.00013755599999999701}, {'diff': 0.00013676399999999755}, {'diff': 0.0001374589999999995...</msg>
<status status="PASS" starttime="20201029 18:20:55.667" endtime="20201029 18:20:55.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:55.687" level="INFO">${ACCURACY} = {'diff': [0.0001371390000000014, 0.00013688900000000115, 0.00013765300000000147, 0.00013755599999999701, 0.00013676399999999755, 0.0001374589999999995, 0.00013726399999999805, 0.0001375139999999983, 0...</msg>
<status status="PASS" starttime="20201029 18:20:55.678" endtime="20201029 18:20:55.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.698" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:20:55.695" endtime="20201029 18:20:55.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.703" level="INFO">VALUE: [0.0001371390000000014, 0.00013688900000000115, 0.00013765300000000147, 0.00013755599999999701, 0.00013676399999999755, 0.0001374589999999995, 0.00013726399999999805, 0.0001375139999999983, 0.0001378889999999952, 0.00013732000000000327, 0.00013788900000000215, 0.0001376249999999954, 0.0001371940000000002, 0.00013654199999999644, 0.0001372919999999972, 0.0001368049999999968, 0.0001368190000000033, 0.00013776399999999855, 0.00013748699999999864, 0.00013783400000000334, 0.00013743000000000088, 0.00013755500000000448, 0.00013788900000000215, 0.00013659699999999525, 0.00013672199999999884, 0.00013662500000000133, 0.00013741599999999438, 0.0001376940000000007, 0.00013797199999999316, 0.00013745800000000002, 0.00013792999999999445, 0.00013791599999999488, 0.0001376390000000019, 0.00013694399999999995, 0.00013765299999999453, 0.00013766700000000104, 0.0001378339999999964, 0.00013761100000000276, 0.00013751299999999883, 0.00013726399999999805, 0.00013766600000000156, 0.00013770800000000027, 0.00013730500000000423, 0.0001376940000000007, 0.00013627800000000356, 0.00013756900000000405, 0.0001377919999999977, 0.00013716600000000106, 0.00013754199999999744, 0.00013795800000000052]</msg>
<status status="PASS" starttime="20201029 18:20:55.700" endtime="20201029 18:20:55.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.689" endtime="20201029 18:20:55.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:55.716" endtime="20201029 18:20:55.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.712" endtime="20201029 18:20:55.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.709" endtime="20201029 18:20:55.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.204" endtime="20201029 18:20:55.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.202" endtime="20201029 18:20:55.741"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.764" endtime="20201029 18:20:55.788"></status>
</kw>
<msg timestamp="20201029 18:20:55.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:55.761" endtime="20201029 18:20:55.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:55.791" endtime="20201029 18:20:55.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.797" endtime="20201029 18:20:55.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.753" endtime="20201029 18:20:55.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.748" endtime="20201029 18:20:55.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.821" endtime="20201029 18:20:56.170"></status>
</kw>
<msg timestamp="20201029 18:20:56.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040399181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040537542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:55.818" endtime="20201029 18:20:56.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040399181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040537542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:56.180" endtime="20201029 18:20:56.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.198" endtime="20201029 18:20:56.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.811" endtime="20201029 18:20:56.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.806" endtime="20201029 18:20:56.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:56.216" level="INFO">${RESULT} = [{'diff': 0.0001383610000000035}, {'diff': 0.0001375970000000032}, {'diff': 0.0001386390000000029}, {'diff': 0.00013819500000000068}, {'diff': 0.0001386390000000029}, {'diff': 0.00013804199999999794},...</msg>
<status status="PASS" starttime="20201029 18:20:56.207" endtime="20201029 18:20:56.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:56.227" level="INFO">${ACCURACY} = {'diff': [0.0001383610000000035, 0.0001375970000000032, 0.0001386390000000029, 0.00013819500000000068, 0.0001386390000000029, 0.00013804199999999794, 0.00013848600000000016, 0.0001380269999999989, 0.0...</msg>
<status status="PASS" starttime="20201029 18:20:56.218" endtime="20201029 18:20:56.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.238" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:20:56.235" endtime="20201029 18:20:56.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.243" level="INFO">VALUE: [0.0001383610000000035, 0.0001375970000000032, 0.0001386390000000029, 0.00013819500000000068, 0.0001386390000000029, 0.00013804199999999794, 0.00013848600000000016, 0.0001380269999999989, 0.00013833300000000437, 0.00013866700000000204, 0.000137959, 0.00013816700000000154, 0.00013820800000000077, 0.00013774999999999898, 0.00013813899999999546, 0.00013816700000000154, 0.00013859799999999672, 0.00013877799999999912, 0.000138861000000004, 0.00013859799999999672, 0.00013886099999999707, 0.00013802799999999837, 0.0001387219999999939, 0.00013887499999999664, 0.00013837500000000308, 0.00013818099999999417, 0.00013852799999999887, 0.00013886099999999707, 0.00013798599999999966, 0.00013830599999999776, 0.00013855599999999801, 0.00013876399999999955, 0.00013799999999999923, 0.00013799999999999923, 0.00013844500000000093, 0.00013877799999999912, 0.00013874999999999998, 0.00013840300000000222, 0.00013840299999999528, 0.00013877799999999912, 0.0001385139999999993, 0.00013826399999999905, 0.00013850000000000667, 0.00013774999999999898, 0.00013708399999999565, 0.00013866599999999563, 0.00013865300000000247, 0.0001387919999999987, 0.00013834700000000394, 0.00013865299999999553]</msg>
<status status="PASS" starttime="20201029 18:20:56.240" endtime="20201029 18:20:56.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.228" endtime="20201029 18:20:56.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:56.256" endtime="20201029 18:20:56.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.252" endtime="20201029 18:20:56.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.249" endtime="20201029 18:20:56.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.743" endtime="20201029 18:20:56.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.742" endtime="20201029 18:20:56.281"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.304" endtime="20201029 18:20:56.328"></status>
</kw>
<msg timestamp="20201029 18:20:56.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:56.301" endtime="20201029 18:20:56.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:56.332" endtime="20201029 18:20:56.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.338" endtime="20201029 18:20:56.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.294" endtime="20201029 18:20:56.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.288" endtime="20201029 18:20:56.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.362" endtime="20201029 18:20:56.714"></status>
</kw>
<msg timestamp="20201029 18:20:56.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040463597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040603139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:56.358" endtime="20201029 18:20:56.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040463597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040603139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:56.723" endtime="20201029 18:20:56.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.742" endtime="20201029 18:20:56.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.351" endtime="20201029 18:20:56.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.346" endtime="20201029 18:20:56.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:56.759" level="INFO">${RESULT} = [{'diff': 0.00013954200000000638}, {'diff': 0.0001393049999999993}, {'diff': 0.0001382369999999994}, {'diff': 0.0001397219999999949}, {'diff': 0.00013972200000000184}, {'diff': 0.00013972200000000184}...</msg>
<status status="PASS" starttime="20201029 18:20:56.750" endtime="20201029 18:20:56.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:56.769" level="INFO">${ACCURACY} = {'diff': [0.00013954200000000638, 0.0001393049999999993, 0.0001382369999999994, 0.0001397219999999949, 0.00013972200000000184, 0.00013972200000000184, 0.00013930599999999876, 0.00013955599999999901, 0...</msg>
<status status="PASS" starttime="20201029 18:20:56.761" endtime="20201029 18:20:56.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.780" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:20:56.777" endtime="20201029 18:20:56.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.785" level="INFO">VALUE: [0.00013954200000000638, 0.0001393049999999993, 0.0001382369999999994, 0.0001397219999999949, 0.00013972200000000184, 0.00013972200000000184, 0.00013930599999999876, 0.00013955599999999901, 0.00013973600000000141, 0.00013941699999999585, 0.00013933299999999843, 0.00013927800000000656, 0.00013915299999999603, 0.0001385269999999994, 0.00014001399999999387, 0.00013988900000000415, 0.0001384590000000005, 0.0001394019999999968, 0.0001396249999999974, 0.00013956999999999858, 0.00013913899999999646, 0.00013995800000000252, 0.0001391390000000034, 0.00013913899999999646, 0.00013975000000000098, 0.00013829099999999872, 0.00013858399999999715, 0.00013925000000000048, 0.0001394720000000016, 0.00013920799999999484, 0.00013911099999999732, 0.00013920800000000177, 0.00013984700000000544, 0.00013959699999999825, 0.00013925000000000048, 0.00013926400000000005, 0.00013993099999999592, 0.0001386249999999964, 0.00013824999999999948, 0.0001391249999999969, 0.00013945800000000202, 0.00013991599999999688, 0.0001396669999999961, 0.00013955599999999901, 0.0001394590000000015, 0.0001397919999999997, 0.00013940300000000322, 0.0001391249999999969, 0.00013969399999999577, 0.00013990300000000372]</msg>
<status status="PASS" starttime="20201029 18:20:56.782" endtime="20201029 18:20:56.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.770" endtime="20201029 18:20:56.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:56.798" endtime="20201029 18:20:56.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.793" endtime="20201029 18:20:56.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.791" endtime="20201029 18:20:56.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.284" endtime="20201029 18:20:56.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.282" endtime="20201029 18:20:56.823"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.846" endtime="20201029 18:20:56.871"></status>
</kw>
<msg timestamp="20201029 18:20:56.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:56.843" endtime="20201029 18:20:56.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:56.875" endtime="20201029 18:20:56.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.882" endtime="20201029 18:20:56.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.835" endtime="20201029 18:20:56.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.829" endtime="20201029 18:20:56.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.906" endtime="20201029 18:20:57.261"></status>
</kw>
<msg timestamp="20201029 18:20:57.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04195525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042095681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:56.903" endtime="20201029 18:20:57.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04195525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042095681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:57.271" endtime="20201029 18:20:57.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.289" endtime="20201029 18:20:57.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.896" endtime="20201029 18:20:57.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.891" endtime="20201029 18:20:57.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:57.307" level="INFO">${RESULT} = [{'diff': 0.00014043100000000336}, {'diff': 0.00014080600000000026}, {'diff': 0.0001403050000000003}, {'diff': 0.0001399999999999943}, {'diff': 0.0001401669999999966}, {'diff': 0.00014016700000000354}...</msg>
<status status="PASS" starttime="20201029 18:20:57.298" endtime="20201029 18:20:57.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:57.316" level="INFO">${ACCURACY} = {'diff': [0.00014043100000000336, 0.00014080600000000026, 0.0001403050000000003, 0.0001399999999999943, 0.0001401669999999966, 0.00014016700000000354, 0.0001401810000000031, 0.00013974999999999405, 0....</msg>
<status status="PASS" starttime="20201029 18:20:57.309" endtime="20201029 18:20:57.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.327" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:20:57.325" endtime="20201029 18:20:57.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.333" level="INFO">VALUE: [0.00014043100000000336, 0.00014080600000000026, 0.0001403050000000003, 0.0001399999999999943, 0.0001401669999999966, 0.00014016700000000354, 0.0001401810000000031, 0.00013974999999999405, 0.00014004199999999994, 0.00014015299999999703, 0.00014065299999999753, 0.00014016700000000354, 0.00013927799999999962, 0.00014009699999999875, 0.00014083299999999993, 0.00014054200000000044, 0.00013930599999999876, 0.00013913899999999646, 0.00014093100000000386, 0.0001406799999999972, 0.00013912500000000383, 0.00014079100000000122, 0.00014005599999999951, 0.0001399170000000033, 0.0001404019999999978, 0.00013909800000000416, 0.00014059699999999925, 0.00014015300000000397, 0.00014020800000000277, 0.0001401249999999979, 0.00013958299999999868, 0.00013927700000000015, 0.00014008299999999918, 0.00014026399999999412, 0.00014030599999999976, 0.0001400689999999996, 0.00014072300000000232, 0.00014025000000000148, 0.00014059699999999925, 0.00014011099999999832, 0.00014065199999999806, 0.00014033299999999943, 0.00014080600000000026, 0.0001394720000000016, 0.00014022200000000234, 0.00014077799999999419, 0.00014020800000000277, 0.00014002799999999344, 0.00014033299999999943, 0.00013998600000000166]</msg>
<status status="PASS" starttime="20201029 18:20:57.329" endtime="20201029 18:20:57.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.318" endtime="20201029 18:20:57.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:57.347" endtime="20201029 18:20:57.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.341" endtime="20201029 18:20:57.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.338" endtime="20201029 18:20:57.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.825" endtime="20201029 18:20:57.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.824" endtime="20201029 18:20:57.372"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.395" endtime="20201029 18:20:57.419"></status>
</kw>
<msg timestamp="20201029 18:20:57.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:57.392" endtime="20201029 18:20:57.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:57.422" endtime="20201029 18:20:57.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.428" endtime="20201029 18:20:57.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.384" endtime="20201029 18:20:57.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.378" endtime="20201029 18:20:57.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.452" endtime="20201029 18:20:57.799"></status>
</kw>
<msg timestamp="20201029 18:20:57.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040283958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040425611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:57.449" endtime="20201029 18:20:57.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040283958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040425611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:57.808" endtime="20201029 18:20:57.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.827" endtime="20201029 18:20:57.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.442" endtime="20201029 18:20:57.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.437" endtime="20201029 18:20:57.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:57.844" level="INFO">${RESULT} = [{'diff': 0.00014165299999999853}, {'diff': 0.00014061099999999882}, {'diff': 0.00014152699999999546}, {'diff': 0.00014109699999999975}, {'diff': 0.00014172200000000384}, {'diff': 0.000141235999999995...</msg>
<status status="PASS" starttime="20201029 18:20:57.836" endtime="20201029 18:20:57.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:57.858" level="INFO">${ACCURACY} = {'diff': [0.00014165299999999853, 0.00014061099999999882, 0.00014152699999999546, 0.00014109699999999975, 0.00014172200000000384, 0.00014123599999999598, 0.0001410140000000018, 0.0001418889999999992, ...</msg>
<status status="PASS" starttime="20201029 18:20:57.847" endtime="20201029 18:20:57.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.869" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:20:57.867" endtime="20201029 18:20:57.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.874" level="INFO">VALUE: [0.00014165299999999853, 0.00014061099999999882, 0.00014152699999999546, 0.00014109699999999975, 0.00014172200000000384, 0.00014123599999999598, 0.0001410140000000018, 0.0001418889999999992, 0.00014194500000000443, 0.00014041699999999685, 0.00014104100000000147, 0.0001415690000000011, 0.00014130600000000076, 0.0001418889999999992, 0.00014132000000000033, 0.00014095799999999659, 0.00014098600000000266, 0.0001417769999999957, 0.00014157000000000058, 0.00014111099999999932, 0.00014102800000000137, 0.00014161099999999982, 0.00014113899999999846, 0.00014126400000000205, 0.0001408469999999995, 0.00014169399999999777, 0.0001413889999999987, 0.00014105600000000051, 0.000141347, 0.00014120800000000377, 0.0001413050000000013, 0.00014140299999999828, 0.00014098599999999573, 0.0001411119999999988, 0.0001405140000000013, 0.00014120800000000377, 0.00014115299999999803, 0.00014186100000000007, 0.00014148599999999623, 0.0001413050000000013, 0.00014104200000000094, 0.0001406390000000049, 0.00014116600000000507, 0.0001416799999999982, 0.00014059799999999872, 0.00014077800000000112, 0.0001416249999999994, 0.00014098600000000266, 0.00014163899999999896, 0.00014126400000000205]</msg>
<status status="PASS" starttime="20201029 18:20:57.871" endtime="20201029 18:20:57.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.860" endtime="20201029 18:20:57.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:57.887" endtime="20201029 18:20:57.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.883" endtime="20201029 18:20:57.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.880" endtime="20201029 18:20:57.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.374" endtime="20201029 18:20:57.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.373" endtime="20201029 18:20:57.913"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.937" endtime="20201029 18:20:57.961"></status>
</kw>
<msg timestamp="20201029 18:20:57.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:57.934" endtime="20201029 18:20:57.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:57.965" endtime="20201029 18:20:57.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.971" endtime="20201029 18:20:57.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.926" endtime="20201029 18:20:57.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.920" endtime="20201029 18:20:57.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.995" endtime="20201029 18:20:58.346"></status>
</kw>
<msg timestamp="20201029 18:20:58.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042123639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042265861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:57.991" endtime="20201029 18:20:58.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042123639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042265861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:58.355" endtime="20201029 18:20:58.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.374" endtime="20201029 18:20:58.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.984" endtime="20201029 18:20:58.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.979" endtime="20201029 18:20:58.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:58.391" level="INFO">${RESULT} = [{'diff': 0.00014222200000000434}, {'diff': 0.00014194399999999802}, {'diff': 0.00014263899999999996}, {'diff': 0.0001426250000000004}, {'diff': 0.00014243099999999842}, {'diff': 0.0001421110000000003...</msg>
<status status="PASS" starttime="20201029 18:20:58.382" endtime="20201029 18:20:58.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:58.402" level="INFO">${ACCURACY} = {'diff': [0.00014222200000000434, 0.00014194399999999802, 0.00014263899999999996, 0.0001426250000000004, 0.00014243099999999842, 0.00014211100000000032, 0.00014273600000000441, 0.00014261100000000082,...</msg>
<status status="PASS" starttime="20201029 18:20:58.393" endtime="20201029 18:20:58.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.413" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:20:58.411" endtime="20201029 18:20:58.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.419" level="INFO">VALUE: [0.00014222200000000434, 0.00014194399999999802, 0.00014263899999999996, 0.0001426250000000004, 0.00014243099999999842, 0.00014211100000000032, 0.00014273600000000441, 0.00014261100000000082, 0.000142347000000001, 0.00014219399999999827, 0.0001423889999999997, 0.00014194400000000496, 0.00014126400000000205, 0.00014204200000000194, 0.00014273600000000441, 0.00014258300000000168, 0.00014219399999999827, 0.00014268000000000614, 0.00014290300000000672, 0.0001420140000000028, 0.00014218099999999817, 0.00014145899999999656, 0.0001426250000000004, 0.0001419999999999963, 0.00014286100000000107, 0.00014287500000000064, 0.00014208399999999372, 0.0001420140000000028, 0.0001420140000000028, 0.00014219500000000468, 0.00014240299999999928, 0.0001428199999999949, 0.00014194399999999802, 0.00014283300000000193, 0.00014263899999999996, 0.0001423050000000023, 0.00014295899999999806, 0.000142347000000001, 0.00014265299999999953, 0.0001428890000000002, 0.00014193099999999792, 0.00014233300000000143, 0.00014287500000000064, 0.00014205600000000151, 0.000142347000000001, 0.00014291699999999935, 0.0001416249999999994, 0.00014250000000000373, 0.0001427920000000027, 0.00014269399999999877]</msg>
<status status="PASS" starttime="20201029 18:20:58.416" endtime="20201029 18:20:58.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.404" endtime="20201029 18:20:58.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:58.432" endtime="20201029 18:20:58.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.427" endtime="20201029 18:20:58.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.425" endtime="20201029 18:20:58.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.915" endtime="20201029 18:20:58.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.914" endtime="20201029 18:20:58.457"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.480" endtime="20201029 18:20:58.504"></status>
</kw>
<msg timestamp="20201029 18:20:58.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:58.477" endtime="20201029 18:20:58.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:58.507" endtime="20201029 18:20:58.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.514" endtime="20201029 18:20:58.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.469" endtime="20201029 18:20:58.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.464" endtime="20201029 18:20:58.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.537" endtime="20201029 18:20:58.891"></status>
</kw>
<msg timestamp="20201029 18:20:58.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040453958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040596861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:58.534" endtime="20201029 18:20:58.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040453958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040596861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:58.900" endtime="20201029 18:20:58.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.919" endtime="20201029 18:20:58.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.527" endtime="20201029 18:20:58.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.522" endtime="20201029 18:20:58.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:58.936" level="INFO">${RESULT} = [{'diff': 0.00014290299999999978}, {'diff': 0.00014329099999999678}, {'diff': 0.000141959000000004}, {'diff': 0.0001439020000000013}, {'diff': 0.00014350000000000473}, {'diff': 0.00014309700000000175}...</msg>
<status status="PASS" starttime="20201029 18:20:58.927" endtime="20201029 18:20:58.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:58.946" level="INFO">${ACCURACY} = {'diff': [0.00014290299999999978, 0.00014329099999999678, 0.000141959000000004, 0.0001439020000000013, 0.00014350000000000473, 0.00014309700000000175, 0.00014316600000000013, 0.00014379199999999676, 0...</msg>
<status status="PASS" starttime="20201029 18:20:58.939" endtime="20201029 18:20:58.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.958" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:20:58.955" endtime="20201029 18:20:58.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.964" level="INFO">VALUE: [0.00014290299999999978, 0.00014329099999999678, 0.000141959000000004, 0.0001439020000000013, 0.00014350000000000473, 0.00014309700000000175, 0.00014316600000000013, 0.00014379199999999676, 0.0001433050000000033, 0.0001433890000000007, 0.00014298600000000466, 0.00014311100000000132, 0.00014319499999999874, 0.0001422219999999974, 0.0001431799999999997, 0.0001429720000000051, 0.00014355500000000354, 0.00014377800000000412, 0.00014369399999999977, 0.00014224999999999655, 0.00014207000000000108, 0.00014386100000000207, 0.00014331899999999592, 0.00014366600000000063, 0.00014315300000000003, 0.0001438340000000024, 0.00014326399999999712, 0.00014395899999999906, 0.0001433890000000007, 0.00014305500000000304, 0.00014358299999999574, 0.00014388800000000174, 0.00014301399999999687, 0.00014365300000000053, 0.0001433749999999942, 0.00014386099999999513, 0.00014302799999999644, 0.00014347199999999866, 0.00014326300000000458, 0.0001433749999999942, 0.00014304100000000347, 0.00014329199999999626, 0.00014387500000000164, 0.00014315300000000003, 0.0001434999999999978, 0.00014341699999999985, 0.00014387500000000164, 0.00014388899999999427, 0.0001431120000000008, 0.00014308300000000218]</msg>
<status status="PASS" starttime="20201029 18:20:58.960" endtime="20201029 18:20:58.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.948" endtime="20201029 18:20:58.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:58.977" endtime="20201029 18:20:58.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.972" endtime="20201029 18:20:59.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.970" endtime="20201029 18:20:59.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.459" endtime="20201029 18:20:59.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.458" endtime="20201029 18:20:59.002"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.025" endtime="20201029 18:20:59.051"></status>
</kw>
<msg timestamp="20201029 18:20:59.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:59.022" endtime="20201029 18:20:59.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:59.054" endtime="20201029 18:20:59.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.060" endtime="20201029 18:20:59.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.015" endtime="20201029 18:20:59.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.009" endtime="20201029 18:20:59.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.084" endtime="20201029 18:20:59.433"></status>
</kw>
<msg timestamp="20201029 18:20:59.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042286694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042431417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:59.081" endtime="20201029 18:20:59.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042286694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042431417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:59.443" endtime="20201029 18:20:59.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.462" endtime="20201029 18:20:59.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.074" endtime="20201029 18:20:59.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.069" endtime="20201029 18:20:59.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:59.480" level="INFO">${RESULT} = [{'diff': 0.00014472299999999938}, {'diff': 0.00014419400000000027}, {'diff': 0.00014409700000000275}, {'diff': 0.00014437500000000214}, {'diff': 0.0001438050000000038}, {'diff': 0.0001441390000000014...</msg>
<status status="PASS" starttime="20201029 18:20:59.471" endtime="20201029 18:20:59.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:59.489" level="INFO">${ACCURACY} = {'diff': [0.00014472299999999938, 0.00014419400000000027, 0.00014409700000000275, 0.00014437500000000214, 0.0001438050000000038, 0.00014413900000000146, 0.0001448340000000034, 0.00014351399999999737, ...</msg>
<status status="PASS" starttime="20201029 18:20:59.482" endtime="20201029 18:20:59.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.500" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:20:59.498" endtime="20201029 18:20:59.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.505" level="INFO">VALUE: [0.00014472299999999938, 0.00014419400000000027, 0.00014409700000000275, 0.00014437500000000214, 0.0001438050000000038, 0.00014413900000000146, 0.0001448340000000034, 0.00014351399999999737, 0.0001447219999999999, 0.00014472299999999938, 0.00014441599999999444, 0.0001448890000000022, 0.00014490300000000178, 0.00014469500000000024, 0.00014402800000000437, 0.00014491700000000135, 0.00014491700000000135, 0.00014369399999999977, 0.00014440300000000128, 0.00014490300000000178, 0.00014476399999999862, 0.00014440300000000128, 0.0001446670000000011, 0.0001446670000000011, 0.00014455599999999708, 0.00014447199999999966, 0.00014402799999999744, 0.00014409700000000275, 0.0001445549999999976, 0.00014452799999999794, 0.00014490299999999484, 0.00014395899999999906, 0.00014418100000000017, 0.00014451399999999837, 0.0001444999999999988, 0.00014470800000000034, 0.000144347000000003, 0.00014490300000000178, 0.0001442219999999994, 0.0001443879999999953, 0.0001445419999999975, 0.0001443890000000017, 0.00014419499999999974, 0.0001446670000000011, 0.00014480499999999785, 0.00014469400000000077, 0.0001446250000000024, 0.00014350000000000473, 0.00014469500000000024, 0.00014454099999999803]</msg>
<status status="PASS" starttime="20201029 18:20:59.502" endtime="20201029 18:20:59.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.491" endtime="20201029 18:20:59.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:59.520" endtime="20201029 18:20:59.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.514" endtime="20201029 18:20:59.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.511" endtime="20201029 18:20:59.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.004" endtime="20201029 18:20:59.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.003" endtime="20201029 18:20:59.545"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.568" endtime="20201029 18:20:59.592"></status>
</kw>
<msg timestamp="20201029 18:20:59.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:59.565" endtime="20201029 18:20:59.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:59.595" endtime="20201029 18:20:59.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.602" endtime="20201029 18:20:59.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.557" endtime="20201029 18:20:59.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.552" endtime="20201029 18:20:59.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.626" endtime="20201029 18:20:59.974"></status>
</kw>
<msg timestamp="20201029 18:20:59.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040483139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040628222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:59.622" endtime="20201029 18:20:59.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040483139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040628222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:59.984" endtime="20201029 18:21:00.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.003" endtime="20201029 18:21:00.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.615" endtime="20201029 18:21:00.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.610" endtime="20201029 18:21:00.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:00.021" level="INFO">${RESULT} = [{'diff': 0.00014508299999999724}, {'diff': 0.00014420799999999984}, {'diff': 0.000145347000000004}, {'diff': 0.00014552699999999946}, {'diff': 0.0001446250000000024}, {'diff': 0.0001452220000000004},...</msg>
<status status="PASS" starttime="20201029 18:21:00.012" endtime="20201029 18:21:00.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:00.031" level="INFO">${ACCURACY} = {'diff': [0.00014508299999999724, 0.00014420799999999984, 0.000145347000000004, 0.00014552699999999946, 0.0001446250000000024, 0.0001452220000000004, 0.00014567999999999526, 0.00014580499999999885, 0....</msg>
<status status="PASS" starttime="20201029 18:21:00.023" endtime="20201029 18:21:00.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.043" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:21:00.040" endtime="20201029 18:21:00.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.048" level="INFO">VALUE: [0.00014508299999999724, 0.00014420799999999984, 0.000145347000000004, 0.00014552699999999946, 0.0001446250000000024, 0.0001452220000000004, 0.00014567999999999526, 0.00014580499999999885, 0.00014415300000000103, 0.0001451800000000017, 0.00014516600000000213, 0.00014545900000000056, 0.00014530499999999835, 0.00014515200000000256, 0.0001448890000000022, 0.0001452920000000052, 0.00014523599999999998, 0.0001459299999999955, 0.00014502799999999844, 0.0001445969999999963, 0.00014506899999999767, 0.0001452220000000004, 0.00014490300000000178, 0.00014547200000000066, 0.00014561100000000382, 0.00014593100000000192, 0.0001453329999999975, 0.00014513900000000246, 0.00014555600000000501, 0.0001455969999999973, 0.00014495800000000059, 0.00014566699999999516, 0.00014465300000000153, 0.00014575000000000005, 0.00014551399999999937, 0.0001451670000000016, 0.00014555599999999808, 0.00014413900000000146, 0.00014513799999999605, 0.0001449999999999993, 0.00014558300000000468, 0.0001453749999999962, 0.00014494400000000102, 0.00014543000000000195, 0.00014531900000000486, 0.00014572300000000038, 0.00014545800000000109, 0.00014565300000000253, 0.00014556999999999765, 0.00014519400000000127]</msg>
<status status="PASS" starttime="20201029 18:21:00.045" endtime="20201029 18:21:00.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.033" endtime="20201029 18:21:00.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:00.061" endtime="20201029 18:21:00.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.056" endtime="20201029 18:21:00.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.054" endtime="20201029 18:21:00.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.547" endtime="20201029 18:21:00.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.546" endtime="20201029 18:21:00.086"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.109" endtime="20201029 18:21:00.133"></status>
</kw>
<msg timestamp="20201029 18:21:00.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:00.106" endtime="20201029 18:21:00.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:00.137" endtime="20201029 18:21:00.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.143" endtime="20201029 18:21:00.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.098" endtime="20201029 18:21:00.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.093" endtime="20201029 18:21:00.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.167" endtime="20201029 18:21:00.515"></status>
</kw>
<msg timestamp="20201029 18:21:00.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040475389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040621681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:00.163" endtime="20201029 18:21:00.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040475389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040621681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:00.524" endtime="20201029 18:21:00.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.543" endtime="20201029 18:21:00.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.156" endtime="20201029 18:21:00.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.151" endtime="20201029 18:21:00.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:00.560" level="INFO">${RESULT} = [{'diff': 0.00014629199999999926}, {'diff': 0.0001465000000000008}, {'diff': 0.00014565300000000253}, {'diff': 0.00014637500000000414}, {'diff': 0.00014673600000000148}, {'diff': 0.0001464170000000028...</msg>
<status status="PASS" starttime="20201029 18:21:00.552" endtime="20201029 18:21:00.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:00.575" level="INFO">${ACCURACY} = {'diff': [0.00014629199999999926, 0.0001465000000000008, 0.00014565300000000253, 0.00014637500000000414, 0.00014673600000000148, 0.00014641700000000285, 0.00014686100000000507, 0.00014695899999999512,...</msg>
<status status="PASS" starttime="20201029 18:21:00.562" endtime="20201029 18:21:00.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.586" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:21:00.584" endtime="20201029 18:21:00.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.592" level="INFO">VALUE: [0.00014629199999999926, 0.0001465000000000008, 0.00014565300000000253, 0.00014637500000000414, 0.00014673600000000148, 0.00014641700000000285, 0.00014686100000000507, 0.00014695899999999512, 0.00014562499999999645, 0.00014615300000000303, 0.00014641600000000338, 0.00014626400000000012, 0.00014641600000000338, 0.00014647200000000166, 0.00014694400000000302, 0.00014598600000000073, 0.00014686099999999813, 0.00014625000000000055, 0.00014663899999999702, 0.000146429999999996, 0.0001461800000000027, 0.00014630599999999883, 0.00014629199999999926, 0.00014655500000000654, 0.00014611100000000432, 0.00014562499999999645, 0.00014579199999999876, 0.0001468199999999989, 0.00014612499999999695, 0.00014608299999999824, 0.0001460000000000003, 0.00014629199999999926, 0.00014634699999999806, 0.0001462079999999949, 0.00014626400000000012, 0.00014677800000000019, 0.00014608299999999824, 0.00014605599999999858, 0.00014673600000000148, 0.0001467079999999954, 0.00014625000000000055, 0.00014680599999999933, 0.00014625000000000055, 0.0001465419999999995, 0.00014633300000000543, 0.00014666600000000363, 0.0001469020000000043, 0.00014576399999999962, 0.00014619399999999533, 0.00014655599999999908]</msg>
<status status="PASS" starttime="20201029 18:21:00.589" endtime="20201029 18:21:00.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.577" endtime="20201029 18:21:00.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:00.605" endtime="20201029 18:21:00.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.600" endtime="20201029 18:21:00.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.598" endtime="20201029 18:21:00.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.088" endtime="20201029 18:21:00.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.087" endtime="20201029 18:21:00.630"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.653" endtime="20201029 18:21:00.677"></status>
</kw>
<msg timestamp="20201029 18:21:00.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:00.650" endtime="20201029 18:21:00.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:00.680" endtime="20201029 18:21:00.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.687" endtime="20201029 18:21:00.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.642" endtime="20201029 18:21:00.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.637" endtime="20201029 18:21:00.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.710" endtime="20201029 18:21:01.060"></status>
</kw>
<msg timestamp="20201029 18:21:01.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040473125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040620347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:00.707" endtime="20201029 18:21:01.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040473125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040620347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:01.070" endtime="20201029 18:21:01.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.090" endtime="20201029 18:21:01.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.700" endtime="20201029 18:21:01.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.695" endtime="20201029 18:21:01.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:01.108" level="INFO">${RESULT} = [{'diff': 0.0001472220000000024}, {'diff': 0.00014801400000000187}, {'diff': 0.000147429999999997}, {'diff': 0.0001480000000000023}, {'diff': 0.00014740300000000428}, {'diff': 0.00014727800000000069},...</msg>
<status status="PASS" starttime="20201029 18:21:01.099" endtime="20201029 18:21:01.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:01.118" level="INFO">${ACCURACY} = {'diff': [0.0001472220000000024, 0.00014801400000000187, 0.000147429999999997, 0.0001480000000000023, 0.00014740300000000428, 0.00014727800000000069, 0.00014784699999999956, 0.00014741700000000385, 0....</msg>
<status status="PASS" starttime="20201029 18:21:01.110" endtime="20201029 18:21:01.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.129" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:21:01.127" endtime="20201029 18:21:01.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.135" level="INFO">VALUE: [0.0001472220000000024, 0.00014801400000000187, 0.000147429999999997, 0.0001480000000000023, 0.00014740300000000428, 0.00014727800000000069, 0.00014784699999999956, 0.00014741700000000385, 0.00014626400000000012, 0.00014786099999999913, 0.0001474580000000031, 0.00014781900000000042, 0.00014715200000000456, 0.00014777800000000119, 0.00014752800000000094, 0.0001473749999999982, 0.0001461250000000039, 0.00014730599999999983, 0.00014729200000000026, 0.0001475000000000018, 0.00014756999999999965, 0.0001475969999999993, 0.00014723600000000198, 0.0001475420000000005, 0.0001471670000000036, 0.00014773599999999554, 0.00014744499999999605, 0.00014740299999999734, 0.0001477499999999951, 0.00014790299999999784, 0.00014712499999999795, 0.0001473199999999994, 0.0001469580000000026, 0.0001476670000000041, 0.00014801400000000187, 0.0001474169999999969, 0.00014761100000000582, 0.00014769500000000324, 0.00014675000000000105, 0.00014661100000000482, 0.00014722300000000188, 0.00014756999999999965, 0.00014775000000000205, 0.0001477220000000029, 0.00014784799999999904, 0.00014740299999999734, 0.0001474729999999952, 0.0001470000000000013, 0.00014626400000000012, 0.00014743000000000395]</msg>
<status status="PASS" starttime="20201029 18:21:01.132" endtime="20201029 18:21:01.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.120" endtime="20201029 18:21:01.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:01.148" endtime="20201029 18:21:01.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.144" endtime="20201029 18:21:01.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.141" endtime="20201029 18:21:01.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.632" endtime="20201029 18:21:01.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.631" endtime="20201029 18:21:01.173"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.196" endtime="20201029 18:21:01.219"></status>
</kw>
<msg timestamp="20201029 18:21:01.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:01.192" endtime="20201029 18:21:01.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:01.223" endtime="20201029 18:21:01.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.229" endtime="20201029 18:21:01.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.185" endtime="20201029 18:21:01.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.179" endtime="20201029 18:21:01.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.253" endtime="20201029 18:21:01.590"></status>
</kw>
<msg timestamp="20201029 18:21:01.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041667986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041816583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:01.249" endtime="20201029 18:21:01.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041667986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041816583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:01.600" endtime="20201029 18:21:01.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.618" endtime="20201029 18:21:01.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.242" endtime="20201029 18:21:01.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.237" endtime="20201029 18:21:01.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:01.638" level="INFO">${RESULT} = [{'diff': 0.0001485970000000003}, {'diff': 0.0001480550000000011}, {'diff': 0.00014816699999999766}, {'diff': 0.00014872199999999697}, {'diff': 0.00014857000000000065}, {'diff': 0.00014841700000000485...</msg>
<status status="PASS" starttime="20201029 18:21:01.627" endtime="20201029 18:21:01.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:01.648" level="INFO">${ACCURACY} = {'diff': [0.0001485970000000003, 0.0001480550000000011, 0.00014816699999999766, 0.00014872199999999697, 0.00014857000000000065, 0.00014841700000000485, 0.00014805600000000058, 0.0001480000000000023, 0...</msg>
<status status="PASS" starttime="20201029 18:21:01.640" endtime="20201029 18:21:01.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.661" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:21:01.658" endtime="20201029 18:21:01.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.668" level="INFO">VALUE: [0.0001485970000000003, 0.0001480550000000011, 0.00014816699999999766, 0.00014872199999999697, 0.00014857000000000065, 0.00014841700000000485, 0.00014805600000000058, 0.0001480000000000023, 0.00014861099999999988, 0.00014893099999999798, 0.0001485420000000015, 0.0001485829999999938, 0.00014802800000000144, 0.00014890199999999937, 0.00014872199999999697, 0.0001484580000000041, 0.0001484859999999963, 0.00014845899999999662, 0.0001481670000000046, 0.0001482090000000033, 0.0001476670000000041, 0.00014841599999999844, 0.0001486670000000051, 0.00014901299999999645, 0.00014748600000000223, 0.0001483619999999991, 0.00014805600000000058, 0.0001486949999999973, 0.00014819400000000427, 0.00014872199999999697, 0.00014702800000000044, 0.0001481529999999981, 0.00014763899999999802, 0.0001480969999999998, 0.00014877799999999525, 0.0001478890000000052, 0.00014843100000000442, 0.00014825000000000255, 0.00014890299999999884, 0.00014867999999999826, 0.00014844400000000452, 0.00014813900000000546, 0.00014895900000000406, 0.00014901400000000287, 0.00014818100000000417, 0.0001485550000000016, 0.00014857000000000065, 0.000149042000000002, 0.00014841700000000485, 0.00014826400000000212]</msg>
<status status="PASS" starttime="20201029 18:21:01.664" endtime="20201029 18:21:01.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.651" endtime="20201029 18:21:01.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:01.685" endtime="20201029 18:21:01.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.678" endtime="20201029 18:21:01.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.675" endtime="20201029 18:21:01.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.175" endtime="20201029 18:21:01.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.174" endtime="20201029 18:21:01.712"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.738" endtime="20201029 18:21:01.762"></status>
</kw>
<msg timestamp="20201029 18:21:01.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:01.735" endtime="20201029 18:21:01.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:01.765" endtime="20201029 18:21:01.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.772" endtime="20201029 18:21:01.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.726" endtime="20201029 18:21:01.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.720" endtime="20201029 18:21:01.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.795" endtime="20201029 18:21:02.138"></status>
</kw>
<msg timestamp="20201029 18:21:02.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045898, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046047514, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:21:01.792" endtime="20201029 18:21:02.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045898, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046047514, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:21:02.148" endtime="20201029 18:21:02.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.166" endtime="20201029 18:21:02.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.785" endtime="20201029 18:21:02.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.780" endtime="20201029 18:21:02.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:02.184" level="INFO">${RESULT} = [{'diff': 0.00014951399999999643}, {'diff': 0.00014919500000000474}, {'diff': 0.00014906900000000167}, {'diff': 0.00014954100000000303}, {'diff': 0.00015001399999999693}, {'diff': 0.000149693999999998...</msg>
<status status="PASS" starttime="20201029 18:21:02.175" endtime="20201029 18:21:02.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:02.194" level="INFO">${ACCURACY} = {'diff': [0.00014951399999999643, 0.00014919500000000474, 0.00014906900000000167, 0.00014954100000000303, 0.00015001399999999693, 0.00014969399999999883, 0.00014922199999999747, 0.00014902800000000244...</msg>
<status status="PASS" starttime="20201029 18:21:02.186" endtime="20201029 18:21:02.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.205" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:21:02.203" endtime="20201029 18:21:02.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.211" level="INFO">VALUE: [0.00014951399999999643, 0.00014919500000000474, 0.00014906900000000167, 0.00014954100000000303, 0.00015001399999999693, 0.00014969399999999883, 0.00014922199999999747, 0.00014902800000000244, 0.00014966699999999916, 0.0001492499999999966, 0.00014897200000000416, 0.00014973599999999754, 0.00014980600000000233, 0.00014920899999999737, 0.00014979200000000276, 0.00014922199999999747, 0.000149527999999996, 0.00014859799999999979, 0.0001483330000000005, 0.00014917999999999876, 0.0001497770000000037, 0.0001483200000000004, 0.00014906899999999473, 0.00014926399999999618, 0.0001495550000000026, 0.00014952800000000294, 0.00014826300000000264, 0.00014902800000000244, 0.00014956900000000217, 0.00014976400000000362, 0.0001496949999999983, 0.00014916600000000613, 0.00014923600000000398, 0.00014976399999999668, 0.00015001399999999693, 0.0001497499999999971, 0.0001492499999999966, 0.00014981999999999496, 0.00014973599999999754, 0.0001494729999999972, 0.00014994399999999908, 0.000149042000000002, 0.0001498750000000007, 0.0001496949999999983, 0.0001480969999999998, 0.00014961100000000088, 0.00014972299999999744, 0.00014897199999999722, 0.00014977800000000319, 0.00014968099999999873]</msg>
<status status="PASS" starttime="20201029 18:21:02.208" endtime="20201029 18:21:02.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.196" endtime="20201029 18:21:02.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:02.224" endtime="20201029 18:21:02.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.219" endtime="20201029 18:21:02.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.217" endtime="20201029 18:21:02.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.714" endtime="20201029 18:21:02.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.713" endtime="20201029 18:21:02.249"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.272" endtime="20201029 18:21:02.296"></status>
</kw>
<msg timestamp="20201029 18:21:02.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:02.268" endtime="20201029 18:21:02.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:02.300" endtime="20201029 18:21:02.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.306" endtime="20201029 18:21:02.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.261" endtime="20201029 18:21:02.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.255" endtime="20201029 18:21:02.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.330" endtime="20201029 18:21:02.679"></status>
</kw>
<msg timestamp="20201029 18:21:02.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040528181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040677319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:02.327" endtime="20201029 18:21:02.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040528181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040677319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:02.688" endtime="20201029 18:21:02.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.707" endtime="20201029 18:21:02.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.319" endtime="20201029 18:21:02.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.315" endtime="20201029 18:21:02.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:02.724" level="INFO">${RESULT} = [{'diff': 0.00014913800000000005}, {'diff': 0.00015045899999999862}, {'diff': 0.000150124999999994}, {'diff': 0.0001507770000000047}, {'diff': 0.0001507220000000059}, {'diff': 0.000149429999999999}, {...</msg>
<status status="PASS" starttime="20201029 18:21:02.716" endtime="20201029 18:21:02.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:02.735" level="INFO">${ACCURACY} = {'diff': [0.00014913800000000005, 0.00015045899999999862, 0.000150124999999994, 0.0001507770000000047, 0.0001507220000000059, 0.000149429999999999, 0.00015055599999999614, 0.00015072299999999844, 0.00...</msg>
<status status="PASS" starttime="20201029 18:21:02.726" endtime="20201029 18:21:02.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.747" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:21:02.744" endtime="20201029 18:21:02.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.752" level="INFO">VALUE: [0.00014913800000000005, 0.00015045899999999862, 0.000150124999999994, 0.0001507770000000047, 0.0001507220000000059, 0.000149429999999999, 0.00015055599999999614, 0.00015072299999999844, 0.0001509170000000004, 0.00015038899999999383, 0.00015018099999999923, 0.0001503880000000013, 0.00015027799999999675, 0.00014980500000000285, 0.00015029199999999632, 0.0001504729999999982, 0.00014949999999999686, 0.00015068000000000026, 0.00015080600000000333, 0.00015051400000000437, 0.0001506530000000006, 0.00015013900000000052, 0.00015049999999999786, 0.00015077799999999725, 0.00015052800000000394, 0.00015023599999999804, 0.0001506660000000007, 0.00015001400000000387, 0.00015057000000000265, 0.0001507220000000059, 0.00015059699999999537, 0.00015079199999999682, 0.00014997200000000516, 0.0001508750000000017, 0.00015005600000000258, 0.0001499299999999995, 0.00014948600000000423, 0.00015066700000000016, 0.00015005600000000258, 0.0001505420000000035, 0.00015013900000000052, 0.00015090300000000084, 0.00015004100000000353, 0.00015047199999999872, 0.00015029200000000326, 0.00015048699999999776, 0.00015033400000000197, 0.00015011100000000138, 0.0001509300000000005, 0.00015031999999999546]</msg>
<status status="PASS" starttime="20201029 18:21:02.749" endtime="20201029 18:21:02.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.737" endtime="20201029 18:21:02.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:02.765" endtime="20201029 18:21:02.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.760" endtime="20201029 18:21:02.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.758" endtime="20201029 18:21:02.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.251" endtime="20201029 18:21:02.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.250" endtime="20201029 18:21:02.790"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.813" endtime="20201029 18:21:02.837"></status>
</kw>
<msg timestamp="20201029 18:21:02.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:02.809" endtime="20201029 18:21:02.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:02.841" endtime="20201029 18:21:02.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.847" endtime="20201029 18:21:02.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.802" endtime="20201029 18:21:02.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.796" endtime="20201029 18:21:02.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.871" endtime="20201029 18:21:03.223"></status>
</kw>
<msg timestamp="20201029 18:21:03.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040457528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040607653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:02.867" endtime="20201029 18:21:03.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040457528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040607653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:03.233" endtime="20201029 18:21:03.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.251" endtime="20201029 18:21:03.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.860" endtime="20201029 18:21:03.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.855" endtime="20201029 18:21:03.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:03.269" level="INFO">${RESULT} = [{'diff': 0.00015012500000000095}, {'diff': 0.00015137499999999526}, {'diff': 0.00015112500000000195}, {'diff': 0.00015145800000000015}, {'diff': 0.0001517080000000004}, {'diff': 0.0001513470000000030...</msg>
<status status="PASS" starttime="20201029 18:21:03.260" endtime="20201029 18:21:03.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:03.278" level="INFO">${ACCURACY} = {'diff': [0.00015012500000000095, 0.00015137499999999526, 0.00015112500000000195, 0.00015145800000000015, 0.0001517080000000004, 0.00015134700000000306, 0.00015126399999999818, 0.0001514859999999993, ...</msg>
<status status="PASS" starttime="20201029 18:21:03.271" endtime="20201029 18:21:03.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.289" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:21:03.287" endtime="20201029 18:21:03.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.295" level="INFO">VALUE: [0.00015012500000000095, 0.00015137499999999526, 0.00015112500000000195, 0.00015145800000000015, 0.0001517080000000004, 0.00015134700000000306, 0.00015126399999999818, 0.0001514859999999993, 0.00015154199999999757, 0.0001516660000000017, 0.00015045799999999915, 0.00015155499999999766, 0.00015151399999999843, 0.0001515970000000033, 0.00015113800000000205, 0.0001519579999999937, 0.0001512079999999999, 0.0001510829999999963, 0.00015102699999999802, 0.00015145800000000015, 0.0001509729999999987, 0.00015162500000000245, 0.00015122199999999947, 0.0001512499999999986, 0.00015155499999999766, 0.00015016699999999966, 0.00015079200000000376, 0.00015129199999999732, 0.000151833000000004, 0.00015145800000000015, 0.0001517499999999991, 0.0001518479999999961, 0.0001511949999999998, 0.00015112500000000195, 0.00015168100000000073, 0.00015062500000000145, 0.00015029199999999632, 0.00015181899999999748, 0.00015147199999999972, 0.00015140200000000187, 0.0001515829999999968, 0.00015188900000000227, 0.00015122299999999894, 0.00015105599999999664, 0.00015195900000000012, 0.0001517220000000069, 0.0001507770000000047, 0.00015142999999999407, 0.00015129199999999732, 0.00015029099999999684]</msg>
<status status="PASS" starttime="20201029 18:21:03.292" endtime="20201029 18:21:03.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.280" endtime="20201029 18:21:03.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:03.314" endtime="20201029 18:21:03.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.310" endtime="20201029 18:21:03.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.307" endtime="20201029 18:21:03.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.792" endtime="20201029 18:21:03.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.791" endtime="20201029 18:21:03.340"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.363" endtime="20201029 18:21:03.389"></status>
</kw>
<msg timestamp="20201029 18:21:03.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:03.359" endtime="20201029 18:21:03.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:03.392" endtime="20201029 18:21:03.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.398" endtime="20201029 18:21:03.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.352" endtime="20201029 18:21:03.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.346" endtime="20201029 18:21:03.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.422" endtime="20201029 18:21:03.771"></status>
</kw>
<msg timestamp="20201029 18:21:03.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041987514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0421405, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:21:03.419" endtime="20201029 18:21:03.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041987514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0421405, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:21:03.781" endtime="20201029 18:21:03.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.799" endtime="20201029 18:21:03.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.411" endtime="20201029 18:21:03.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.407" endtime="20201029 18:21:03.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:03.819" level="INFO">${RESULT} = [{'diff': 0.0001529860000000008}, {'diff': 0.00015227799999999875}, {'diff': 0.0001530409999999996}, {'diff': 0.0001520409999999986}, {'diff': 0.0001524860000000003}, {'diff': 0.00015209799999999635},...</msg>
<status status="PASS" starttime="20201029 18:21:03.809" endtime="20201029 18:21:03.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:03.832" level="INFO">${ACCURACY} = {'diff': [0.0001529860000000008, 0.00015227799999999875, 0.0001530409999999996, 0.0001520409999999986, 0.0001524860000000003, 0.00015209799999999635, 0.0001527500000000001, 0.00015288900000000327, 0.0...</msg>
<status status="PASS" starttime="20201029 18:21:03.822" endtime="20201029 18:21:03.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.846" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:21:03.843" endtime="20201029 18:21:03.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.853" level="INFO">VALUE: [0.0001529860000000008, 0.00015227799999999875, 0.0001530409999999996, 0.0001520409999999986, 0.0001524860000000003, 0.00015209799999999635, 0.0001527500000000001, 0.00015288900000000327, 0.0001524170000000019, 0.00015265199999999618, 0.00015269400000000183, 0.0001523059999999979, 0.00015226400000000612, 0.00015226399999999918, 0.00015248699999999976, 0.0001522499999999996, 0.00015243100000000148, 0.00015188899999999533, 0.00015279200000000576, 0.00015288900000000327, 0.00015286100000000413, 0.00015195800000000065, 0.0001523609999999967, 0.00015268100000000173, 0.00015136100000000263, 0.00015255499999999866, 0.00015252699999999952, 0.00015280600000000533, 0.00015240300000000234, 0.00015249999999999986, 0.00015205599999999764, 0.00015215199999999568, 0.00015284700000000456, 0.0001525699999999977, 0.00015247200000000072, 0.000152527999999999, 0.00015199999999999936, 0.00015152699999999852, 0.00015229199999999832, 0.00015227799999999875, 0.0001524159999999955, 0.00015201400000000587, 0.00015262500000000345, 0.00015215299999999515, 0.0001521530000000021, 0.00015254199999999857, 0.00015231999999999746, 0.0001525829999999978, 0.0001523059999999979, 0.0001519300000000015]</msg>
<status status="PASS" starttime="20201029 18:21:03.849" endtime="20201029 18:21:03.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.834" endtime="20201029 18:21:03.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:03.868" endtime="20201029 18:21:03.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.861" endtime="20201029 18:21:03.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.859" endtime="20201029 18:21:03.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.342" endtime="20201029 18:21:03.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.341" endtime="20201029 18:21:03.894"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.917" endtime="20201029 18:21:03.942"></status>
</kw>
<msg timestamp="20201029 18:21:03.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:03.914" endtime="20201029 18:21:03.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:03.945" endtime="20201029 18:21:03.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.952" endtime="20201029 18:21:03.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.907" endtime="20201029 18:21:03.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.901" endtime="20201029 18:21:03.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.975" endtime="20201029 18:21:04.325"></status>
</kw>
<msg timestamp="20201029 18:21:04.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040910389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041063972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:03.972" endtime="20201029 18:21:04.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040910389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041063972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:04.334" endtime="20201029 18:21:04.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.353" endtime="20201029 18:21:04.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.965" endtime="20201029 18:21:04.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.960" endtime="20201029 18:21:04.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:04.370" level="INFO">${RESULT} = [{'diff': 0.0001535829999999988}, {'diff': 0.00015305499999999916}, {'diff': 0.0001532500000000006}, {'diff': 0.00015383299999999905}, {'diff': 0.00015383400000000547}, {'diff': 0.00015300000000000036...</msg>
<status status="PASS" starttime="20201029 18:21:04.362" endtime="20201029 18:21:04.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:04.381" level="INFO">${ACCURACY} = {'diff': [0.0001535829999999988, 0.00015305499999999916, 0.0001532500000000006, 0.00015383299999999905, 0.00015383400000000547, 0.00015300000000000036, 0.00015341699999999597, 0.0001521530000000021, 0...</msg>
<status status="PASS" starttime="20201029 18:21:04.372" endtime="20201029 18:21:04.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.392" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:21:04.390" endtime="20201029 18:21:04.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.398" level="INFO">VALUE: [0.0001535829999999988, 0.00015305499999999916, 0.0001532500000000006, 0.00015383299999999905, 0.00015383400000000547, 0.00015300000000000036, 0.00015341699999999597, 0.0001521530000000021, 0.0001538479999999981, 0.00015215299999999515, 0.00015376400000000068, 0.00015213900000000252, 0.0001530279999999995, 0.0001524730000000002, 0.0001534029999999964, 0.00015363900000000402, 0.0001538750000000047, 0.0001531950000000018, 0.00015333399999999803, 0.00015376400000000068, 0.00015326400000000018, 0.00015323600000000104, 0.0001538059999999994, 0.0001540829999999993, 0.00015366700000000316, 0.00015344400000000258, 0.00015326400000000018, 0.00015309699999999787, 0.00015384699999999862, 0.00015359699999999837, 0.0001537630000000012, 0.00015379100000000034, 0.00015338899999999683, 0.0001539170000000034, 0.00015373600000000154, 0.00015359699999999837, 0.00015331899999999898, 0.00015361100000000488, 0.0001537359999999946, 0.00015218000000000176, 0.000153528, 0.00015336100000000463, 0.00015234699999999712, 0.00015330600000000583, 0.00015326400000000018, 0.0001526530000000026, 0.00015231899999999798, 0.000153124999999997, 0.0001532500000000006, 0.000153915999999997]</msg>
<status status="PASS" starttime="20201029 18:21:04.395" endtime="20201029 18:21:04.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.383" endtime="20201029 18:21:04.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:04.410" endtime="20201029 18:21:04.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.406" endtime="20201029 18:21:04.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.403" endtime="20201029 18:21:04.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.896" endtime="20201029 18:21:04.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.895" endtime="20201029 18:21:04.436"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.459" endtime="20201029 18:21:04.483"></status>
</kw>
<msg timestamp="20201029 18:21:04.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:04.455" endtime="20201029 18:21:04.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:04.486" endtime="20201029 18:21:04.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.493" endtime="20201029 18:21:04.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.448" endtime="20201029 18:21:04.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.442" endtime="20201029 18:21:04.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.516" endtime="20201029 18:21:04.866"></status>
</kw>
<msg timestamp="20201029 18:21:04.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040376111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040530903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:04.513" endtime="20201029 18:21:04.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040376111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040530903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:04.876" endtime="20201029 18:21:04.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.894" endtime="20201029 18:21:04.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.506" endtime="20201029 18:21:04.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.501" endtime="20201029 18:21:04.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:04.911" level="INFO">${RESULT} = [{'diff': 0.00015479200000000082}, {'diff': 0.0001546809999999968}, {'diff': 0.00015483399999999953}, {'diff': 0.00015426400000000118}, {'diff': 0.00015491699999999747}, {'diff': 0.0001548330000000000...</msg>
<status status="PASS" starttime="20201029 18:21:04.902" endtime="20201029 18:21:04.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:04.921" level="INFO">${ACCURACY} = {'diff': [0.00015479200000000082, 0.0001546809999999968, 0.00015483399999999953, 0.00015426400000000118, 0.00015491699999999747, 0.00015483300000000005, 0.0001542500000000016, 0.000154013999999994, 0....</msg>
<status status="PASS" starttime="20201029 18:21:04.913" endtime="20201029 18:21:04.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.932" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:21:04.930" endtime="20201029 18:21:04.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.938" level="INFO">VALUE: [0.00015479200000000082, 0.0001546809999999968, 0.00015483399999999953, 0.00015426400000000118, 0.00015491699999999747, 0.00015483300000000005, 0.0001542500000000016, 0.000154013999999994, 0.00015397200000000222, 0.00015472199999999603, 0.0001540280000000005, 0.00015426400000000118, 0.00015427800000000075, 0.00015456900000000023, 0.0001544579999999962, 0.00015418000000000376, 0.0001549579999999967, 0.0001549029999999979, 0.0001540829999999993, 0.00015427800000000075, 0.00015413899999999758, 0.00015361100000000488, 0.00015465199999999818, 0.0001533750000000042, 0.00015505500000000116, 0.00015454099999999416, 0.0001546809999999968, 0.00015452799999999406, 0.00015413899999999758, 0.00015448700000000176, 0.00015461099999999894, 0.00015483300000000005, 0.0001540699999999992, 0.00015412499999999801, 0.00015472199999999603, 0.00015474999999999517, 0.00015438899999999783, 0.00015438899999999783, 0.00015456900000000023, 0.00015434699999999912, 0.00015438899999999783, 0.00015412499999999801, 0.0001549300000000045, 0.00015479200000000082, 0.0001544159999999975, 0.000154528000000001, 0.0001543059999999999, 0.00015440300000000434, 0.00015474999999999517, 0.0001547909999999944]</msg>
<status status="PASS" starttime="20201029 18:21:04.935" endtime="20201029 18:21:04.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.923" endtime="20201029 18:21:04.941"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:04.950" endtime="20201029 18:21:04.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.946" endtime="20201029 18:21:04.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.943" endtime="20201029 18:21:04.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.438" endtime="20201029 18:21:04.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.436" endtime="20201029 18:21:04.975"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.998" endtime="20201029 18:21:05.022"></status>
</kw>
<msg timestamp="20201029 18:21:05.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:04.994" endtime="20201029 18:21:05.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:05.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:05.025" endtime="20201029 18:21:05.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:05.031" endtime="20201029 18:21:05.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.987" endtime="20201029 18:21:05.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.982" endtime="20201029 18:21:05.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:05.054" endtime="20201029 18:21:05.405"></status>
</kw>
<msg timestamp="20201029 18:21:05.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039859375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040015292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:05.051" endtime="20201029 18:21:05.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:05.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039859375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040015292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:05.414" endtime="20201029 18:21:05.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:05.433" endtime="20201029 18:21:05.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.044" endtime="20201029 18:21:05.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.039" endtime="20201029 18:21:05.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:05.450" level="INFO">${RESULT} = [{'diff': 0.00015591699999999847}, {'diff': 0.00015516700000000466}, {'diff': 0.0001557229999999965}, {'diff': 0.00015584700000000062}, {'diff': 0.00015517999999999782}, {'diff': 0.0001552079999999969...</msg>
<status status="PASS" starttime="20201029 18:21:05.441" endtime="20201029 18:21:05.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:05.459" level="INFO">${ACCURACY} = {'diff': [0.00015591699999999847, 0.00015516700000000466, 0.0001557229999999965, 0.00015584700000000062, 0.00015517999999999782, 0.00015520799999999696, 0.00015561099999999994, 0.00015561099999999994,...</msg>
<status status="PASS" starttime="20201029 18:21:05.452" endtime="20201029 18:21:05.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:05.470" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:21:05.467" endtime="20201029 18:21:05.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:05.475" level="INFO">VALUE: [0.00015591699999999847, 0.00015516700000000466, 0.0001557229999999965, 0.00015584700000000062, 0.00015517999999999782, 0.00015520799999999696, 0.00015561099999999994, 0.00015561099999999994, 0.00015545800000000415, 0.00015548599999999635, 0.00015554200000000157, 0.00015583300000000105, 0.00015541699999999797, 0.0001556939999999979, 0.00015572199999999703, 0.0001559029999999989, 0.0001549860000000028, 0.00015516700000000466, 0.0001552359999999961, 0.00015588899999999933, 0.00015544399999999764, 0.0001552080000000039, 0.00015559700000000037, 0.00015529200000000132, 0.00015563899999999908, 0.0001541530000000041, 0.0001557500000000031, 0.0001557779999999953, 0.00015431899999999998, 0.00015505600000000064, 0.00015451400000000143, 0.00015540199999999893, 0.00015570900000000387, 0.00015559700000000037, 0.00015527800000000175, 0.00015509800000000629, 0.00015534700000000012, 0.00015547199999999678, 0.00015505600000000064, 0.00015547200000000372, 0.0001555139999999955, 0.00015465299999999765, 0.00015572199999999703, 0.00015551400000000243, 0.00015595900000000412, 0.00015522200000000347, 0.0001555410000000021, 0.00015580500000000191, 0.00015412499999999801, 0.00015547200000000372]</msg>
<status status="PASS" starttime="20201029 18:21:05.472" endtime="20201029 18:21:05.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.461" endtime="20201029 18:21:05.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:05.487" endtime="20201029 18:21:05.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.483" endtime="20201029 18:21:05.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.481" endtime="20201029 18:21:05.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.977" endtime="20201029 18:21:05.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.976" endtime="20201029 18:21:05.513"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:05.535" endtime="20201029 18:21:05.564"></status>
</kw>
<msg timestamp="20201029 18:21:05.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:05.532" endtime="20201029 18:21:05.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:05.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:05.568" endtime="20201029 18:21:05.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:05.574" endtime="20201029 18:21:05.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.525" endtime="20201029 18:21:05.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.519" endtime="20201029 18:21:05.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:05.597" endtime="20201029 18:21:05.938"></status>
</kw>
<msg timestamp="20201029 18:21:05.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045336958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045493861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:05.594" endtime="20201029 18:21:05.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:05.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045336958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045493861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:05.947" endtime="20201029 18:21:05.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:05.965" endtime="20201029 18:21:05.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.587" endtime="20201029 18:21:05.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.582" endtime="20201029 18:21:05.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:05.982" level="INFO">${RESULT} = [{'diff': 0.0001569029999999999}, {'diff': 0.00015663900000000008}, {'diff': 0.00015650000000000386}, {'diff': 0.0001563480000000006}, {'diff': 0.00015661100000000094}, {'diff': 0.00015630499999999548...</msg>
<status status="PASS" starttime="20201029 18:21:05.974" endtime="20201029 18:21:05.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:05.991" level="INFO">${ACCURACY} = {'diff': [0.0001569029999999999, 0.00015663900000000008, 0.00015650000000000386, 0.0001563480000000006, 0.00015661100000000094, 0.00015630499999999548, 0.0001562359999999971, 0.0001553750000000062, 0....</msg>
<status status="PASS" starttime="20201029 18:21:05.985" endtime="20201029 18:21:05.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:06.002" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:21:06.000" endtime="20201029 18:21:06.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:06.007" level="INFO">VALUE: [0.0001569029999999999, 0.00015663900000000008, 0.00015650000000000386, 0.0001563480000000006, 0.00015661100000000094, 0.00015630499999999548, 0.0001562359999999971, 0.0001553750000000062, 0.0001568610000000012, 0.00015623699999999657, 0.00015694399999999914, 0.00015623600000000404, 0.000157013999999997, 0.00015699999999999742, 0.0001551809999999973, 0.00015620799999999796, 0.00015637500000000026, 0.00015638899999999983, 0.00015691699999999947, 0.00015642999999999907, 0.00015642999999999907, 0.00015631900000000198, 0.00015670799999999846, 0.00015669400000000583, 0.00015684700000000162, 0.00015679199999999588, 0.0001567359999999976, 0.00015615299999999915, 0.0001563060000000019, 0.00015624999999999667, 0.00015598599999999685, 0.00015670900000000487, 0.0001562080000000049, 0.00015681999999999502, 0.00015665200000000018, 0.00015623600000000404, 0.00015688900000000033, 0.00015677699999999684, 0.00015705600000000264, 0.00015647199999999778, 0.00015697199999999828, 0.00015606900000000173, 0.0001560280000000025, 0.00015655600000000214, 0.00015613899999999958, 0.00015606900000000173, 0.0001570689999999958, 0.0001567500000000041, 0.00015634700000000112, 0.00015663900000000008]</msg>
<status status="PASS" starttime="20201029 18:21:06.005" endtime="20201029 18:21:06.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.993" endtime="20201029 18:21:06.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:06.021" endtime="20201029 18:21:06.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.016" endtime="20201029 18:21:06.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.013" endtime="20201029 18:21:06.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.515" endtime="20201029 18:21:06.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.513" endtime="20201029 18:21:06.046"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:06.069" endtime="20201029 18:21:06.091"></status>
</kw>
<msg timestamp="20201029 18:21:06.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:06.066" endtime="20201029 18:21:06.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:06.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:06.094" endtime="20201029 18:21:06.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:06.100" endtime="20201029 18:21:06.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.058" endtime="20201029 18:21:06.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.053" endtime="20201029 18:21:06.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:06.123" endtime="20201029 18:21:06.461"></status>
</kw>
<msg timestamp="20201029 18:21:06.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03947075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039627917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:21:06.120" endtime="20201029 18:21:06.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:06.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03947075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039627917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:21:06.470" endtime="20201029 18:21:06.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:06.488" endtime="20201029 18:21:06.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.113" endtime="20201029 18:21:06.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.108" endtime="20201029 18:21:06.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:06.505" level="INFO">${RESULT} = [{'diff': 0.00015716699999999972}, {'diff': 0.0001561530000000061}, {'diff': 0.0001567359999999976}, {'diff': 0.00015786099999999526}, {'diff': 0.00015708400000000178}, {'diff': 0.00015741699999999997...</msg>
<status status="PASS" starttime="20201029 18:21:06.497" endtime="20201029 18:21:06.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:06.515" level="INFO">${ACCURACY} = {'diff': [0.00015716699999999972, 0.0001561530000000061, 0.0001567359999999976, 0.00015786099999999526, 0.00015708400000000178, 0.00015741699999999997, 0.00015617999999999882, 0.00015726399999999724, ...</msg>
<status status="PASS" starttime="20201029 18:21:06.507" endtime="20201029 18:21:06.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:06.526" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:21:06.524" endtime="20201029 18:21:06.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:06.531" level="INFO">VALUE: [0.00015716699999999972, 0.0001561530000000061, 0.0001567359999999976, 0.00015786099999999526, 0.00015708400000000178, 0.00015741699999999997, 0.00015617999999999882, 0.00015726399999999724, 0.0001573480000000016, 0.00015770899999999893, 0.00015730500000000341, 0.0001563610000000007, 0.00015787500000000176, 0.00015619499999999786, 0.00015763900000000108, 0.0001570559999999957, 0.0001571939999999994, 0.0001575689999999963, 0.00015633299999999462, 0.00015754200000000357, 0.00015747199999999878, 0.0001572359999999981, 0.00015722199999999853, 0.00015747200000000572, 0.000157737000000005, 0.000157528000000004, 0.0001578610000000022, 0.0001570700000000022, 0.00015770899999999893, 0.00015777699999999784, 0.00015758399999999534, 0.0001579030000000009, 0.00015794400000000014, 0.0001574030000000004, 0.00015770899999999893, 0.00015741699999999997, 0.0001571109999999945, 0.00015701400000000393, 0.00015704099999999666, 0.00015770899999999893, 0.00015774999999999817, 0.00015751400000000443, 0.00015787500000000176, 0.00015772199999999903, 0.0001573610000000017, 0.0001570700000000022, 0.00015777699999999784, 0.00015667999999999932, 0.0001568610000000012, 0.00015804099999999766]</msg>
<status status="PASS" starttime="20201029 18:21:06.528" endtime="20201029 18:21:06.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.517" endtime="20201029 18:21:06.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:06.544" endtime="20201029 18:21:06.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.540" endtime="20201029 18:21:06.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.537" endtime="20201029 18:21:06.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.049" endtime="20201029 18:21:06.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.047" endtime="20201029 18:21:06.569"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:06.591" endtime="20201029 18:21:06.613"></status>
</kw>
<msg timestamp="20201029 18:21:06.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:06.588" endtime="20201029 18:21:06.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:06.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:06.617" endtime="20201029 18:21:06.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:06.623" endtime="20201029 18:21:06.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.581" endtime="20201029 18:21:06.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.575" endtime="20201029 18:21:06.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:06.646" endtime="20201029 18:21:06.983"></status>
</kw>
<msg timestamp="20201029 18:21:06.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039429972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039588125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:06.643" endtime="20201029 18:21:06.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:07.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039429972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039588125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:06.992" endtime="20201029 18:21:07.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:07.010" endtime="20201029 18:21:07.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.636" endtime="20201029 18:21:07.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.631" endtime="20201029 18:21:07.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:07.027" level="INFO">${RESULT} = [{'diff': 0.00015815300000000115}, {'diff': 0.00015837499999999533}, {'diff': 0.00015855499999999773}, {'diff': 0.00015847199999999978}, {'diff': 0.0001576809999999998}, {'diff': 0.0001590409999999986...</msg>
<status status="PASS" starttime="20201029 18:21:07.018" endtime="20201029 18:21:07.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:07.038" level="INFO">${ACCURACY} = {'diff': [0.00015815300000000115, 0.00015837499999999533, 0.00015855499999999773, 0.00015847199999999978, 0.0001576809999999998, 0.00015904099999999866, 0.00015863900000000208, 0.00015830499999999748,...</msg>
<status status="PASS" starttime="20201029 18:21:07.029" endtime="20201029 18:21:07.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:07.049" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:21:07.046" endtime="20201029 18:21:07.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:07.054" level="INFO">VALUE: [0.00015815300000000115, 0.00015837499999999533, 0.00015855499999999773, 0.00015847199999999978, 0.0001576809999999998, 0.00015904099999999866, 0.00015863900000000208, 0.00015830499999999748, 0.00015829199999999738, 0.00015840299999999446, 0.00015824999999999867, 0.0001575559999999962, 0.00015863900000000208, 0.0001587359999999996, 0.00015904099999999866, 0.0001587359999999996, 0.00015847199999999978, 0.00015824999999999867, 0.00015827700000000527, 0.00015829199999999738, 0.00015733300000000255, 0.00015808399999999584, 0.00015811100000000244, 0.00015818000000000082, 0.0001569579999999987, 0.00015881999999999702, 0.00015861200000000242, 0.00015843000000000107, 0.0001587229999999995, 0.00015783299999999612, 0.00015869399999999395, 0.0001583480000000026, 0.00015831899999999705, 0.00015826399999999824, 0.000158610999999996, 0.0001584450000000001, 0.00015751400000000443, 0.0001589030000000019, 0.00015804099999999766, 0.00015848699999999882, 0.0001584030000000014, 0.00015848599999999935, 0.00015859699999999644, 0.0001587779999999983, 0.00015865300000000165, 0.00015872200000000003, 0.00015732000000000246, 0.00015891599999999506, 0.00015858299999999687, 0.00015861100000000294]</msg>
<status status="PASS" starttime="20201029 18:21:07.051" endtime="20201029 18:21:07.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.040" endtime="20201029 18:21:07.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:07.066" endtime="20201029 18:21:07.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.062" endtime="20201029 18:21:07.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.060" endtime="20201029 18:21:07.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.571" endtime="20201029 18:21:07.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:06.570" endtime="20201029 18:21:07.091"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:07.114" endtime="20201029 18:21:07.136"></status>
</kw>
<msg timestamp="20201029 18:21:07.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:07.110" endtime="20201029 18:21:07.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:07.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:07.139" endtime="20201029 18:21:07.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:07.145" endtime="20201029 18:21:07.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.103" endtime="20201029 18:21:07.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.098" endtime="20201029 18:21:07.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:07.168" endtime="20201029 18:21:07.506"></status>
</kw>
<msg timestamp="20201029 18:21:07.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039501819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039660889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:07.165" endtime="20201029 18:21:07.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:07.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039501819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039660889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:07.515" endtime="20201029 18:21:07.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:07.534" endtime="20201029 18:21:07.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.158" endtime="20201029 18:21:07.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.153" endtime="20201029 18:21:07.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:07.551" level="INFO">${RESULT} = [{'diff': 0.00015906999999999727}, {'diff': 0.00015902699999999909}, {'diff': 0.00015868000000000132}, {'diff': 0.0001590830000000043}, {'diff': 0.0001592360000000001}, {'diff': 0.00016002799999999956...</msg>
<status status="PASS" starttime="20201029 18:21:07.542" endtime="20201029 18:21:07.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:07.560" level="INFO">${ACCURACY} = {'diff': [0.00015906999999999727, 0.00015902699999999909, 0.00015868000000000132, 0.0001590830000000043, 0.0001592360000000001, 0.00016002799999999956, 0.0001598889999999964, 0.00015936099999999676, 0...</msg>
<status status="PASS" starttime="20201029 18:21:07.553" endtime="20201029 18:21:07.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:07.570" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:21:07.568" endtime="20201029 18:21:07.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:07.576" level="INFO">VALUE: [0.00015906999999999727, 0.00015902699999999909, 0.00015868000000000132, 0.0001590830000000043, 0.0001592360000000001, 0.00016002799999999956, 0.0001598889999999964, 0.00015936099999999676, 0.00015909700000000387, 0.00015990299999999597, 0.0001592909999999989, 0.00015906900000000473, 0.00015904199999999813, 0.00015930500000000541, 0.00015991700000000247, 0.0001593610000000037, 0.00015942999999999513, 0.00015970900000000093, 0.00015937499999999633, 0.00015908299999999737, 0.00015981999999999802, 0.00015887499999999583, 0.00015816600000000125, 0.00015947200000000078, 0.00015924999999999967, 0.0001591810000000013, 0.00015945900000000068, 0.00015958299999999787, 0.00015988800000000386, 0.00015962499999999658, 0.00015881900000000448, 0.00015915299999999521, 0.0001597360000000006, 0.0001591940000000014, 0.00015970800000000146, 0.00015904099999999866, 0.0001594580000000012, 0.00015947199999999384, 0.00015937499999999633, 0.00015931899999999805, 0.00015994400000000214, 0.00015916700000000172, 0.000158013999999998, 0.0001592779999999988, 0.00015891700000000147, 0.00015995900000000118, 0.00015951400000000643, 0.00015966699999999528, 0.00015943100000000154, 0.00015912499999999608]</msg>
<status status="PASS" starttime="20201029 18:21:07.573" endtime="20201029 18:21:07.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.561" endtime="20201029 18:21:07.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:07.588" endtime="20201029 18:21:07.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.584" endtime="20201029 18:21:07.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.581" endtime="20201029 18:21:07.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.093" endtime="20201029 18:21:07.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.092" endtime="20201029 18:21:07.613"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:07.636" endtime="20201029 18:21:07.659"></status>
</kw>
<msg timestamp="20201029 18:21:07.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:07.632" endtime="20201029 18:21:07.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:07.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:07.663" endtime="20201029 18:21:07.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:07.669" endtime="20201029 18:21:07.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.625" endtime="20201029 18:21:07.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.620" endtime="20201029 18:21:07.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:07.692" endtime="20201029 18:21:08.028"></status>
</kw>
<msg timestamp="20201029 18:21:08.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041088806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041248347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:07.689" endtime="20201029 18:21:08.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:08.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041088806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041248347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:08.037" endtime="20201029 18:21:08.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:08.055" endtime="20201029 18:21:08.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.682" endtime="20201029 18:21:08.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.677" endtime="20201029 18:21:08.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:08.072" level="INFO">${RESULT} = [{'diff': 0.00015954099999999916}, {'diff': 0.00016018099999999535}, {'diff': 0.00016091599999999706}, {'diff': 0.00016100000000000142}, {'diff': 0.0001600830000000053}, {'diff': 0.0001600699999999982...</msg>
<status status="PASS" starttime="20201029 18:21:08.063" endtime="20201029 18:21:08.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:08.081" level="INFO">${ACCURACY} = {'diff': [0.00015954099999999916, 0.00016018099999999535, 0.00016091599999999706, 0.00016100000000000142, 0.0001600830000000053, 0.00016006999999999827, 0.00016065299999999672, 0.0001606810000000028, ...</msg>
<status status="PASS" starttime="20201029 18:21:08.074" endtime="20201029 18:21:08.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:08.092" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:21:08.090" endtime="20201029 18:21:08.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:08.097" level="INFO">VALUE: [0.00015954099999999916, 0.00016018099999999535, 0.00016091599999999706, 0.00016100000000000142, 0.0001600830000000053, 0.00016006999999999827, 0.00016065299999999672, 0.0001606810000000028, 0.00016076400000000074, 0.00016054200000000657, 0.00016042999999999613, 0.00016084799999999816, 0.00015898599999999985, 0.00015992999999999563, 0.0001602779999999998, 0.0001595139999999995, 0.00016054199999999963, 0.00016012499999999708, 0.00016044500000000211, 0.00016100000000000142, 0.00016013899999999665, 0.00016004199999999913, 0.00015911100000000344, 0.0001605559999999992, 0.00016094500000000261, 0.00015983299999999812, 0.00016075000000000117, 0.0001595139999999995, 0.00015983400000000453, 0.00016083299999999912, 0.00015949999999999992, 0.00016036099999999776, 0.00015997199999999434, 0.00016080499999999998, 0.00016005499999999923, 0.0001601810000000023, 0.00016045799999999527, 0.00016005499999999923, 0.000160610999999998, 0.00016086099999999826, 0.00016018000000000282, 0.00016075000000000117, 0.00016073599999999466, 0.0001604580000000022, 0.0001607780000000003, 0.0001602779999999998, 0.00016072200000000203, 0.00016027700000000034, 0.00016061100000000494, 0.00016081899999999955]</msg>
<status status="PASS" starttime="20201029 18:21:08.094" endtime="20201029 18:21:08.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.083" endtime="20201029 18:21:08.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:08.111" endtime="20201029 18:21:08.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.105" endtime="20201029 18:21:08.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.103" endtime="20201029 18:21:08.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.615" endtime="20201029 18:21:08.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:07.614" endtime="20201029 18:21:08.136"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:08.159" endtime="20201029 18:21:08.181"></status>
</kw>
<msg timestamp="20201029 18:21:08.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:08.155" endtime="20201029 18:21:08.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:08.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:08.184" endtime="20201029 18:21:08.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:08.191" endtime="20201029 18:21:08.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.148" endtime="20201029 18:21:08.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.143" endtime="20201029 18:21:08.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:08.214" endtime="20201029 18:21:08.550"></status>
</kw>
<msg timestamp="20201029 18:21:08.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039551653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039712903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:08.210" endtime="20201029 18:21:08.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:08.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039551653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039712903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:08.560" endtime="20201029 18:21:08.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:08.578" endtime="20201029 18:21:08.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.203" endtime="20201029 18:21:08.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.198" endtime="20201029 18:21:08.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:08.595" level="INFO">${RESULT} = [{'diff': 0.00016125000000000167}, {'diff': 0.0001612910000000009}, {'diff': 0.00016168099999999686}, {'diff': 0.00016176400000000174}, {'diff': 0.00016175000000000217}, {'diff': 0.0001616389999999981...</msg>
<status status="PASS" starttime="20201029 18:21:08.586" endtime="20201029 18:21:08.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:08.605" level="INFO">${ACCURACY} = {'diff': [0.00016125000000000167, 0.0001612910000000009, 0.00016168099999999686, 0.00016176400000000174, 0.00016175000000000217, 0.00016163899999999815, 0.00016131999999999952, 0.00016054199999999963,...</msg>
<status status="PASS" starttime="20201029 18:21:08.597" endtime="20201029 18:21:08.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:08.616" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:21:08.614" endtime="20201029 18:21:08.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:08.621" level="INFO">VALUE: [0.00016125000000000167, 0.0001612910000000009, 0.00016168099999999686, 0.00016176400000000174, 0.00016175000000000217, 0.00016163899999999815, 0.00016131999999999952, 0.00016054199999999963, 0.0001617910000000014, 0.0001612360000000021, 0.00016151300000000202, 0.00016158299999999987, 0.00016202800000000156, 0.00016106999999999927, 0.00016179200000000088, 0.00016129099999999397, 0.00016034699999999819, 0.0001615560000000002, 0.00016147200000000278, 0.00016190299999999797, 0.00016163899999999815, 0.00016054100000000016, 0.0001615690000000003, 0.00016112499999999808, 0.0001614859999999954, 0.00016109700000000587, 0.00016137499999999833, 0.00016151399999999455, 0.00016120799999999602, 0.00016130599999999995, 0.00016100000000000142, 0.0001601940000000024, 0.00016102800000000056, 0.00016052800000000006, 0.00016144499999999617, 0.00016120799999999602, 0.00016207000000000027, 0.00016161199999999848, 0.00016150000000000192, 0.00016148600000000235, 0.00016176400000000174, 0.00016134700000000612, 0.00016125000000000167, 0.00016181900000000055, 0.00016004199999999913, 0.00016115299999999722, 0.00016177700000000184, 0.00016129200000000038, 0.00016173599999999566, 0.0001619580000000037]</msg>
<status status="PASS" starttime="20201029 18:21:08.618" endtime="20201029 18:21:08.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.607" endtime="20201029 18:21:08.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:08.638" endtime="20201029 18:21:08.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.633" endtime="20201029 18:21:08.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.631" endtime="20201029 18:21:08.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.138" endtime="20201029 18:21:08.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.137" endtime="20201029 18:21:08.663"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:08.685" endtime="20201029 18:21:08.707"></status>
</kw>
<msg timestamp="20201029 18:21:08.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:08.682" endtime="20201029 18:21:08.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:08.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:08.710" endtime="20201029 18:21:08.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:08.717" endtime="20201029 18:21:08.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.675" endtime="20201029 18:21:08.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.669" endtime="20201029 18:21:08.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:08.740" endtime="20201029 18:21:09.076"></status>
</kw>
<msg timestamp="20201029 18:21:09.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039039472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039202278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:08.736" endtime="20201029 18:21:09.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039039472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039202278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:09.086" endtime="20201029 18:21:09.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.104" endtime="20201029 18:21:09.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.729" endtime="20201029 18:21:09.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.725" endtime="20201029 18:21:09.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:09.121" level="INFO">${RESULT} = [{'diff': 0.00016280600000000145}, {'diff': 0.00016261199999999948}, {'diff': 0.00016215299999999822}, {'diff': 0.00016226400000000224}, {'diff': 0.00016209699999999994}, {'diff': 0.000162624999999999...</msg>
<status status="PASS" starttime="20201029 18:21:09.112" endtime="20201029 18:21:09.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:09.132" level="INFO">${ACCURACY} = {'diff': [0.00016280600000000145, 0.00016261199999999948, 0.00016215299999999822, 0.00016226400000000224, 0.00016209699999999994, 0.00016262499999999958, 0.00016282000000000102, 0.00016275000000000317...</msg>
<status status="PASS" starttime="20201029 18:21:09.123" endtime="20201029 18:21:09.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.143" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:21:09.141" endtime="20201029 18:21:09.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.148" level="INFO">VALUE: [0.00016280600000000145, 0.00016261199999999948, 0.00016215299999999822, 0.00016226400000000224, 0.00016209699999999994, 0.00016262499999999958, 0.00016282000000000102, 0.00016275000000000317, 0.0001625690000000013, 0.00016215299999999822, 0.0001621940000000044, 0.0001624859999999964, 0.00016215299999999822, 0.0001623189999999941, 0.00016236099999999976, 0.00016202800000000156, 0.0001621109999999995, 0.00016234700000000019, 0.00016291699999999854, 0.00016291699999999854, 0.00016236199999999923, 0.00016291700000000547, 0.00016241699999999804, 0.00016234799999999966, 0.00016250000000000292, 0.0001621109999999995, 0.00016248600000000335, 0.00016230600000000095, 0.00016262499999999958, 0.00016245899999999674, 0.0001622780000000018, 0.00016270799999999752, 0.00016197199999999634, 0.00016240299999999847, 0.00016229199999999444, 0.00016241699999999804, 0.0001624859999999964, 0.00016277799999999537, 0.00016291599999999906, 0.00016215299999999822, 0.00016284700000000069, 0.00016134700000000612, 0.00016208399999999984, 0.00016237499999999933, 0.0001621940000000044, 0.00016195799999999677, 0.00016302800000000256, 0.00016208399999999984, 0.0001620690000000008, 0.00016232000000000052]</msg>
<status status="PASS" starttime="20201029 18:21:09.145" endtime="20201029 18:21:09.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.134" endtime="20201029 18:21:09.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:09.160" endtime="20201029 18:21:09.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.156" endtime="20201029 18:21:09.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.154" endtime="20201029 18:21:09.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.665" endtime="20201029 18:21:09.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:08.664" endtime="20201029 18:21:09.185"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.208" endtime="20201029 18:21:09.232"></status>
</kw>
<msg timestamp="20201029 18:21:09.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:09.205" endtime="20201029 18:21:09.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:09.235" endtime="20201029 18:21:09.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.242" endtime="20201029 18:21:09.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.198" endtime="20201029 18:21:09.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.192" endtime="20201029 18:21:09.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.265" endtime="20201029 18:21:09.619"></status>
</kw>
<msg timestamp="20201029 18:21:09.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039535097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039698958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:09.261" endtime="20201029 18:21:09.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039535097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039698958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:09.628" endtime="20201029 18:21:09.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.646" endtime="20201029 18:21:09.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.254" endtime="20201029 18:21:09.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.250" endtime="20201029 18:21:09.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:09.663" level="INFO">${RESULT} = [{'diff': 0.00016386100000000126}, {'diff': 0.0001630690000000018}, {'diff': 0.00016376400000000374}, {'diff': 0.0001638059999999955}, {'diff': 0.00016359700000000144}, {'diff': 0.00016352799999999612...</msg>
<status status="PASS" starttime="20201029 18:21:09.655" endtime="20201029 18:21:09.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:09.672" level="INFO">${ACCURACY} = {'diff': [0.00016386100000000126, 0.0001630690000000018, 0.00016376400000000374, 0.0001638059999999955, 0.00016359700000000144, 0.00016352799999999612, 0.00016323699999999663, 0.00016354200000000263, ...</msg>
<status status="PASS" starttime="20201029 18:21:09.665" endtime="20201029 18:21:09.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.683" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:21:09.681" endtime="20201029 18:21:09.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.688" level="INFO">VALUE: [0.00016386100000000126, 0.0001630690000000018, 0.00016376400000000374, 0.0001638059999999955, 0.00016359700000000144, 0.00016352799999999612, 0.00016323699999999663, 0.00016354200000000263, 0.0001628340000000006, 0.0001635690000000023, 0.0001631110000000005, 0.0001639020000000005, 0.00016358299999999493, 0.0001629859999999969, 0.0001636659999999998, 0.00016373599999999766, 0.00016312500000000008, 0.0001637780000000033, 0.00016363900000000015, 0.00016319499999999793, 0.0001632639999999963, 0.00016347199999999784, 0.00016398600000000485, 0.00016247300000000325, 0.00016365299999999972, 0.00016359700000000144, 0.0001637769999999969, 0.00016312500000000008, 0.00016219500000000386, 0.00016357000000000177, 0.0001635549999999958, 0.00016399999999999748, 0.00016359700000000144, 0.00016213899999999865, 0.00016295900000000418, 0.00016336100000000076, 0.00016295900000000418, 0.00016317999999999888, 0.00016267999999999838, 0.00016307000000000127, 0.00016356999999999483, 0.0001631659999999993, 0.00016365299999999972, 0.00016324999999999673, 0.00016312500000000008, 0.00016362500000000058, 0.00016345899999999774, 0.00016408300000000237, 0.00016345799999999827, 0.0001634309999999986]</msg>
<status status="PASS" starttime="20201029 18:21:09.685" endtime="20201029 18:21:09.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.674" endtime="20201029 18:21:09.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:09.701" endtime="20201029 18:21:09.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.696" endtime="20201029 18:21:09.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.694" endtime="20201029 18:21:09.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.187" endtime="20201029 18:21:09.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.186" endtime="20201029 18:21:09.726"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.748" endtime="20201029 18:21:09.774"></status>
</kw>
<msg timestamp="20201029 18:21:09.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:09.745" endtime="20201029 18:21:09.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:09.777" endtime="20201029 18:21:09.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.783" endtime="20201029 18:21:09.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.738" endtime="20201029 18:21:09.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.732" endtime="20201029 18:21:09.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.807" endtime="20201029 18:21:10.163"></status>
</kw>
<msg timestamp="20201029 18:21:10.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041336319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0415, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 18:21:09.803" endtime="20201029 18:21:10.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:10.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041336319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0415, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 18:21:10.173" endtime="20201029 18:21:10.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:10.191" endtime="20201029 18:21:10.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.796" endtime="20201029 18:21:10.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.791" endtime="20201029 18:21:10.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:10.208" level="INFO">${RESULT} = [{'diff': 0.00016368099999999886}, {'diff': 0.00016479199999999694}, {'diff': 0.00016444499999999918}, {'diff': 0.0001642780000000038}, {'diff': 0.00016473599999999866}, {'diff': 0.0001638750000000008...</msg>
<status status="PASS" starttime="20201029 18:21:10.200" endtime="20201029 18:21:10.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:10.217" level="INFO">${ACCURACY} = {'diff': [0.00016368099999999886, 0.00016479199999999694, 0.00016444499999999918, 0.0001642780000000038, 0.00016473599999999866, 0.00016387500000000083, 0.00016483299999999618, 0.00016486100000000226,...</msg>
<status status="PASS" starttime="20201029 18:21:10.210" endtime="20201029 18:21:10.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:10.228" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:21:10.225" endtime="20201029 18:21:10.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:10.233" level="INFO">VALUE: [0.00016368099999999886, 0.00016479199999999694, 0.00016444499999999918, 0.0001642780000000038, 0.00016473599999999866, 0.00016387500000000083, 0.00016483299999999618, 0.00016486100000000226, 0.0001638340000000016, 0.00016426400000000424, 0.00016319500000000486, 0.00016474999999999823, 0.00016449999999999798, 0.00016468099999999986, 0.0001640839999999949, 0.0001644309999999996, 0.00016432000000000252, 0.00016458300000000287, 0.000164305999999996, 0.00016420799999999902, 0.000163708999999998, 0.00016433299999999568, 0.00016482000000000302, 0.00016415300000000022, 0.00016463900000000115, 0.00016423599999999816, 0.00016486100000000226, 0.0001642910000000039, 0.00016369499999999843, 0.0001641110000000015, 0.00016483300000000312, 0.0001641660000000003, 0.00016425000000000467, 0.00016445899999999875, 0.00016423599999999816, 0.000164611000000002, 0.00016445899999999875, 0.00016457000000000277, 0.00016463799999999473, 0.0001643189999999961, 0.00016494499999999968, 0.00016409700000000194, 0.00016473599999999866, 0.00016301399999999605, 0.00016427799999999687, 0.00016386099999999432, 0.00016399999999999748, 0.0001640980000000014, 0.00016336100000000076, 0.0001645560000000032]</msg>
<status status="PASS" starttime="20201029 18:21:10.230" endtime="20201029 18:21:10.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.219" endtime="20201029 18:21:10.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:10.247" endtime="20201029 18:21:10.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.241" endtime="20201029 18:21:10.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.239" endtime="20201029 18:21:10.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.728" endtime="20201029 18:21:10.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.727" endtime="20201029 18:21:10.272"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:10.295" endtime="20201029 18:21:10.319"></status>
</kw>
<msg timestamp="20201029 18:21:10.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:10.291" endtime="20201029 18:21:10.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:10.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:10.323" endtime="20201029 18:21:10.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:10.329" endtime="20201029 18:21:10.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.284" endtime="20201029 18:21:10.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.279" endtime="20201029 18:21:10.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:10.354" endtime="20201029 18:21:10.702"></status>
</kw>
<msg timestamp="20201029 18:21:10.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040000181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040165181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:10.350" endtime="20201029 18:21:10.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:10.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040000181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040165181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:10.711" endtime="20201029 18:21:10.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:10.729" endtime="20201029 18:21:10.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.343" endtime="20201029 18:21:10.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.338" endtime="20201029 18:21:10.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:10.746" level="INFO">${RESULT} = [{'diff': 0.00016499999999999848}, {'diff': 0.00016569400000000095}, {'diff': 0.00016538800000000242}, {'diff': 0.00016569500000000043}, {'diff': 0.0001654859999999994}, {'diff': 0.0001656670000000012...</msg>
<status status="PASS" starttime="20201029 18:21:10.737" endtime="20201029 18:21:10.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:10.760" level="INFO">${ACCURACY} = {'diff': [0.00016499999999999848, 0.00016569400000000095, 0.00016538800000000242, 0.00016569500000000043, 0.0001654859999999994, 0.00016566700000000129, 0.00016566700000000129, 0.00016574999999999923,...</msg>
<status status="PASS" starttime="20201029 18:21:10.748" endtime="20201029 18:21:10.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:10.771" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:21:10.769" endtime="20201029 18:21:10.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:10.776" level="INFO">VALUE: [0.00016499999999999848, 0.00016569400000000095, 0.00016538800000000242, 0.00016569500000000043, 0.0001654859999999994, 0.00016566700000000129, 0.00016566700000000129, 0.00016574999999999923, 0.0001658059999999975, 0.00016556899999999736, 0.00016518000000000088, 0.00016556899999999736, 0.00016566700000000129, 0.0001658890000000024, 0.00016558299999999693, 0.00016522299999999907, 0.0001650690000000038, 0.00016581900000000455, 0.00016547199999999984, 0.00016518100000000036, 0.00016509799999999547, 0.00016506899999999686, 0.00016583299999999718, 0.00016501300000000552, 0.00016597200000000034, 0.0001659859999999999, 0.00016511099999999557, 0.0001655969999999965, 0.00016534700000000319, 0.00016449999999999798, 0.00016505500000000423, 0.00016534700000000319, 0.00016574999999999923, 0.00016590300000000197, 0.0001652639999999983, 0.0001659440000000012, 0.00016563900000000215, 0.0001657639999999988, 0.00016584699999999675, 0.00016516700000000079, 0.0001651110000000025, 0.00016593099999999417, 0.00016573599999999966, 0.00016491700000000054, 0.00016540300000000147, 0.00016594500000000068, 0.00016595800000000077, 0.00016490300000000097, 0.00016558300000000387, 0.0001656660000000018]</msg>
<status status="PASS" starttime="20201029 18:21:10.773" endtime="20201029 18:21:10.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.762" endtime="20201029 18:21:10.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:10.788" endtime="20201029 18:21:10.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.784" endtime="20201029 18:21:10.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.782" endtime="20201029 18:21:10.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.274" endtime="20201029 18:21:10.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.273" endtime="20201029 18:21:10.813"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:10.836" endtime="20201029 18:21:10.860"></status>
</kw>
<msg timestamp="20201029 18:21:10.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:10.832" endtime="20201029 18:21:10.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:10.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:10.863" endtime="20201029 18:21:10.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:10.869" endtime="20201029 18:21:10.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.825" endtime="20201029 18:21:10.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.820" endtime="20201029 18:21:10.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:10.892" endtime="20201029 18:21:11.238"></status>
</kw>
<msg timestamp="20201029 18:21:11.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039263889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039430472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:10.889" endtime="20201029 18:21:11.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:11.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039263889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039430472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:11.248" endtime="20201029 18:21:11.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:11.266" endtime="20201029 18:21:11.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.882" endtime="20201029 18:21:11.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.877" endtime="20201029 18:21:11.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:11.283" level="INFO">${RESULT} = [{'diff': 0.00016658299999999793}, {'diff': 0.0001662090000000005}, {'diff': 0.0001663189999999981}, {'diff': 0.00016701400000000005}, {'diff': 0.00016655500000000573}, {'diff': 0.00016633299999999768...</msg>
<status status="PASS" starttime="20201029 18:21:11.274" endtime="20201029 18:21:11.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:11.293" level="INFO">${ACCURACY} = {'diff': [0.00016658299999999793, 0.0001662090000000005, 0.0001663189999999981, 0.00016701400000000005, 0.00016655500000000573, 0.00016633299999999768, 0.00016645800000000127, 0.00016683299999999818, ...</msg>
<status status="PASS" starttime="20201029 18:21:11.285" endtime="20201029 18:21:11.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:11.304" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:21:11.302" endtime="20201029 18:21:11.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:11.310" level="INFO">VALUE: [0.00016658299999999793, 0.0001662090000000005, 0.0001663189999999981, 0.00016701400000000005, 0.00016655500000000573, 0.00016633299999999768, 0.00016645800000000127, 0.00016683299999999818, 0.00016620800000000102, 0.0001665549999999988, 0.0001660549999999983, 0.00016665300000000272, 0.0001661660000000023, 0.00016612500000000308, 0.0001669440000000022, 0.0001663890000000029, 0.00016643000000000213, 0.00016661099999999707, 0.00016638899999999596, 0.00016612499999999614, 0.00016691700000000254, 0.00016537500000000233, 0.0001663749999999964, 0.0001664719999999939, 0.00016623600000000016, 0.00016636100000000376, 0.00016612500000000308, 0.00016584699999999675, 0.0001661660000000023, 0.0001665560000000052, 0.00016658300000000487, 0.00016694500000000168, 0.000166693999999995, 0.00016608300000000437, 0.00016620800000000102, 0.00016666599999999587, 0.00016641700000000204, 0.0001662639999999993, 0.00016607000000000427, 0.00016675000000000023, 0.00016688899999999646, 0.00016656899999999836, 0.0001665839999999974, 0.0001666519999999963, 0.00016677799999999937, 0.0001664860000000004, 0.0001668890000000034, 0.00016702799999999962, 0.00016658299999999793, 0.00016681999999999808]</msg>
<status status="PASS" starttime="20201029 18:21:11.307" endtime="20201029 18:21:11.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.295" endtime="20201029 18:21:11.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:11.322" endtime="20201029 18:21:11.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.317" endtime="20201029 18:21:11.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.315" endtime="20201029 18:21:11.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.816" endtime="20201029 18:21:11.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:10.814" endtime="20201029 18:21:11.347"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:11.371" endtime="20201029 18:21:11.395"></status>
</kw>
<msg timestamp="20201029 18:21:11.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:11.368" endtime="20201029 18:21:11.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:11.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:11.398" endtime="20201029 18:21:11.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:11.405" endtime="20201029 18:21:11.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.360" endtime="20201029 18:21:11.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.354" endtime="20201029 18:21:11.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:11.428" endtime="20201029 18:21:11.778"></status>
</kw>
<msg timestamp="20201029 18:21:11.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041593931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041761028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:11.424" endtime="20201029 18:21:11.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:11.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041593931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041761028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:11.787" endtime="20201029 18:21:11.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:11.806" endtime="20201029 18:21:11.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.417" endtime="20201029 18:21:11.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.413" endtime="20201029 18:21:11.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:11.854" level="INFO">${RESULT} = [{'diff': 0.000167096999999998}, {'diff': 0.00016741700000000304}, {'diff': 0.0001678749999999979}, {'diff': 0.00016711199999999704}, {'diff': 0.00016734700000000519}, {'diff': 0.00016790300000000397}...</msg>
<status status="PASS" starttime="20201029 18:21:11.842" endtime="20201029 18:21:11.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:11.865" level="INFO">${ACCURACY} = {'diff': [0.000167096999999998, 0.00016741700000000304, 0.0001678749999999979, 0.00016711199999999704, 0.00016734700000000519, 0.00016790300000000397, 0.00016649999999999998, 0.0001673890000000039, 0....</msg>
<status status="PASS" starttime="20201029 18:21:11.856" endtime="20201029 18:21:11.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:11.876" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:21:11.874" endtime="20201029 18:21:11.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:11.882" level="INFO">VALUE: [0.000167096999999998, 0.00016741700000000304, 0.0001678749999999979, 0.00016711199999999704, 0.00016734700000000519, 0.00016790300000000397, 0.00016649999999999998, 0.0001673890000000039, 0.00016616700000000179, 0.0001671389999999967, 0.0001678890000000044, 0.0001675969999999985, 0.00016716700000000279, 0.00016612500000000308, 0.00016750000000000098, 0.00016618000000000188, 0.00016773600000000166, 0.00016788899999999746, 0.00016727799999999987, 0.00016748700000000089, 0.00016795799999999583, 0.0001677220000000021, 0.00016718100000000236, 0.000167305999999999, 0.00016658300000000487, 0.00016791700000000354, 0.00016755599999999926, 0.00016708300000000537, 0.00016777800000000037, 0.00016630600000000495, 0.00016772300000000157, 0.00016745799999999533, 0.00016747300000000132, 0.0001679719999999954, 0.00016731999999999858, 0.00016718100000000236, 0.00016601399999999905, 0.0001674310000000026, 0.00016756899999999936, 0.0001671660000000033, 0.00016787500000000483, 0.00016744499999999524, 0.00016651399999999955, 0.00016741700000000304, 0.00016751400000000055, 0.00016797200000000234, 0.00016768099999999592, 0.0001671389999999967, 0.00016618000000000188, 0.0001679169999999966]</msg>
<status status="PASS" starttime="20201029 18:21:11.878" endtime="20201029 18:21:11.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.867" endtime="20201029 18:21:11.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:11.894" endtime="20201029 18:21:11.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.890" endtime="20201029 18:21:11.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.887" endtime="20201029 18:21:11.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.350" endtime="20201029 18:21:11.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.348" endtime="20201029 18:21:11.921"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:11.949" endtime="20201029 18:21:11.975"></status>
</kw>
<msg timestamp="20201029 18:21:11.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:11.945" endtime="20201029 18:21:11.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:11.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:11.980" endtime="20201029 18:21:11.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:11.988" endtime="20201029 18:21:11.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.936" endtime="20201029 18:21:11.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.929" endtime="20201029 18:21:11.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:12.018" endtime="20201029 18:21:12.359"></status>
</kw>
<msg timestamp="20201029 18:21:12.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049700611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049869667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:12.013" endtime="20201029 18:21:12.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:12.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049700611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049869667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:12.368" endtime="20201029 18:21:12.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:12.391" endtime="20201029 18:21:12.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.004" endtime="20201029 18:21:12.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.998" endtime="20201029 18:21:12.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:12.409" level="INFO">${RESULT} = [{'diff': 0.00016905600000000076}, {'diff': 0.0001682640000000013}, {'diff': 0.00016883300000000018}, {'diff': 0.00016888899999999846}, {'diff': 0.0001687640000000018}, {'diff': 0.0001687220000000031}...</msg>
<status status="PASS" starttime="20201029 18:21:12.400" endtime="20201029 18:21:12.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:12.418" level="INFO">${ACCURACY} = {'diff': [0.00016905600000000076, 0.0001682640000000013, 0.00016883300000000018, 0.00016888899999999846, 0.0001687640000000018, 0.0001687220000000031, 0.0001671939999999955, 0.0001689440000000042, 0.0...</msg>
<status status="PASS" starttime="20201029 18:21:12.411" endtime="20201029 18:21:12.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:12.429" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:21:12.427" endtime="20201029 18:21:12.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:12.434" level="INFO">VALUE: [0.00016905600000000076, 0.0001682640000000013, 0.00016883300000000018, 0.00016888899999999846, 0.0001687640000000018, 0.0001687220000000031, 0.0001671939999999955, 0.0001689440000000042, 0.00016879100000000147, 0.0001687770000000019, 0.0001688190000000006, 0.00016829200000000044, 0.00016865300000000472, 0.00016794500000000268, 0.00016787500000000483, 0.00016841700000000404, 0.00016844499999999624, 0.0001679860000000019, 0.00016786100000000526, 0.00016870899999999606, 0.00016875000000000223, 0.0001682220000000026, 0.00016862499999999864, 0.0001677220000000021, 0.00016768099999999592, 0.00016850000000000198, 0.00016894500000000368, 0.00016845800000000327, 0.0001686389999999982, 0.0001685839999999994, 0.00016863900000000515, 0.00016805599999999976, 0.0001684440000000037, 0.00016823600000000216, 0.00016879200000000094, 0.0001688190000000006, 0.00016818099999999642, 0.00016818099999999642, 0.00016847200000000284, 0.0001680420000000002, 0.00016827799999999393, 0.00016895799999999683, 0.0001684589999999958, 0.00016877800000000137, 0.000168306, 0.00016808299999999943, 0.00016895800000000377, 0.00016875000000000223, 0.000168194999999996, 0.00016843000000000413]</msg>
<status status="PASS" starttime="20201029 18:21:12.431" endtime="20201029 18:21:12.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.420" endtime="20201029 18:21:12.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:12.448" endtime="20201029 18:21:12.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.443" endtime="20201029 18:21:12.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.440" endtime="20201029 18:21:12.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.924" endtime="20201029 18:21:12.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:11.922" endtime="20201029 18:21:12.473"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:12.496" endtime="20201029 18:21:12.520"></status>
</kw>
<msg timestamp="20201029 18:21:12.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:12.492" endtime="20201029 18:21:12.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:12.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:12.523" endtime="20201029 18:21:12.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:12.530" endtime="20201029 18:21:12.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.485" endtime="20201029 18:21:12.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.480" endtime="20201029 18:21:12.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:12.553" endtime="20201029 18:21:12.902"></status>
</kw>
<msg timestamp="20201029 18:21:12.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039346861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039514986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:12.549" endtime="20201029 18:21:12.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:12.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039346861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039514986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:12.913" endtime="20201029 18:21:12.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:12.931" endtime="20201029 18:21:12.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.542" endtime="20201029 18:21:12.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.537" endtime="20201029 18:21:12.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:12.948" level="INFO">${RESULT} = [{'diff': 0.00016812500000000508}, {'diff': 0.00016961100000000007}, {'diff': 0.000169791999999995}, {'diff': 0.00016811099999999857}, {'diff': 0.000169791999999995}, {'diff': 0.00016990299999999903},...</msg>
<status status="PASS" starttime="20201029 18:21:12.939" endtime="20201029 18:21:12.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:12.958" level="INFO">${ACCURACY} = {'diff': [0.00016812500000000508, 0.00016961100000000007, 0.000169791999999995, 0.00016811099999999857, 0.000169791999999995, 0.00016990299999999903, 0.0001687220000000031, 0.00016988899999999946, 0.0...</msg>
<status status="PASS" starttime="20201029 18:21:12.950" endtime="20201029 18:21:12.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:12.969" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:21:12.967" endtime="20201029 18:21:12.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:12.974" level="INFO">VALUE: [0.00016812500000000508, 0.00016961100000000007, 0.000169791999999995, 0.00016811099999999857, 0.000169791999999995, 0.00016990299999999903, 0.0001687220000000031, 0.00016988899999999946, 0.00016934800000000666, 0.00016917999999999794, 0.00017002800000000262, 0.00016958300000000093, 0.0001698190000000016, 0.0001695420000000017, 0.00016947200000000384, 0.00016970800000000452, 0.00016986100000000032, 0.0001695840000000004, 0.00016920799999999708, 0.00016962499999999964, 0.00017002800000000262, 0.00016916700000000479, 0.00016861099999999907, 0.0001685969999999995, 0.00016904199999999425, 0.00016995800000000477, 0.00016934700000000025, 0.00016894500000000368, 0.00016956900000000136, 0.00016955600000000126, 0.00016951400000000255, 0.00016940199999999905, 0.0001682629999999949, 0.00016952800000000212, 0.00016936099999999982, 0.000169097, 0.00016934700000000025, 0.0001701389999999997, 0.00016927800000000187, 0.00016967999999999844, 0.0001694169999999981, 0.0001695550000000018, 0.00016999999999999654, 0.00016961100000000007, 0.0001695970000000005, 0.00016901300000000258, 0.00016856900000000036, 0.0001698469999999938, 0.00016923600000000316, 0.0001692640000000023]</msg>
<status status="PASS" starttime="20201029 18:21:12.971" endtime="20201029 18:21:12.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.960" endtime="20201029 18:21:12.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:12.987" endtime="20201029 18:21:13.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.983" endtime="20201029 18:21:13.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.980" endtime="20201029 18:21:13.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.476" endtime="20201029 18:21:13.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:12.474" endtime="20201029 18:21:13.012"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:13.034" endtime="20201029 18:21:13.059"></status>
</kw>
<msg timestamp="20201029 18:21:13.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:13.031" endtime="20201029 18:21:13.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:13.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:13.062" endtime="20201029 18:21:13.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:13.068" endtime="20201029 18:21:13.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.024" endtime="20201029 18:21:13.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.018" endtime="20201029 18:21:13.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:13.091" endtime="20201029 18:21:13.440"></status>
</kw>
<msg timestamp="20201029 18:21:13.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039595403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0397655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:21:13.088" endtime="20201029 18:21:13.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:13.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039595403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0397655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:21:13.449" endtime="20201029 18:21:13.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:13.467" endtime="20201029 18:21:13.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.081" endtime="20201029 18:21:13.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.076" endtime="20201029 18:21:13.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:13.484" level="INFO">${RESULT} = [{'diff': 0.000170097000000001}, {'diff': 0.00016997200000000434}, {'diff': 0.00017094399999999926}, {'diff': 0.00017034800000000072}, {'diff': 0.00016938899999999896}, {'diff': 0.00017012500000000014...</msg>
<status status="PASS" starttime="20201029 18:21:13.476" endtime="20201029 18:21:13.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:13.495" level="INFO">${ACCURACY} = {'diff': [0.000170097000000001, 0.00016997200000000434, 0.00017094399999999926, 0.00017034800000000072, 0.00016938899999999896, 0.00017012500000000014, 0.00017058300000000193, 0.000170306000000002, 0....</msg>
<status status="PASS" starttime="20201029 18:21:13.486" endtime="20201029 18:21:13.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:13.506" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:21:13.504" endtime="20201029 18:21:13.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:13.511" level="INFO">VALUE: [0.000170097000000001, 0.00016997200000000434, 0.00017094399999999926, 0.00017034800000000072, 0.00016938899999999896, 0.00017012500000000014, 0.00017058300000000193, 0.000170306000000002, 0.00017086099999999438, 0.00017051299999999714, 0.0001705699999999949, 0.00017031999999999464, 0.0001709719999999984, 0.0001702919999999955, 0.00017033300000000168, 0.000170693999999999, 0.0001702640000000033, 0.00017012500000000014, 0.00017088900000000046, 0.000170306000000002, 0.0001702629999999969, 0.0001695970000000005, 0.0001706949999999985, 0.00017043099999999867, 0.00017067999999999944, 0.00017012500000000014, 0.0001699169999999986, 0.00017008300000000143, 0.00016973599999999672, 0.0001703190000000021, 0.00017076399999999686, 0.00017062500000000064, 0.00017083300000000218, 0.0001702919999999955, 0.00017073599999999772, 0.00017090300000000003, 0.00017077800000000337, 0.00017040299999999953, 0.00017062500000000064, 0.0001699589999999973, 0.00017043099999999867, 0.00016990299999999903, 0.0001708049999999961, 0.00017057000000000183, 0.00017044499999999824, 0.00017066699999999935, 0.0001704719999999979, 0.00017100000000000448, 0.00017097299999999788, 0.00017023599999999722]</msg>
<status status="PASS" starttime="20201029 18:21:13.508" endtime="20201029 18:21:13.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.497" endtime="20201029 18:21:13.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:13.524" endtime="20201029 18:21:13.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.519" endtime="20201029 18:21:13.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.517" endtime="20201029 18:21:13.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.014" endtime="20201029 18:21:13.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.013" endtime="20201029 18:21:13.549"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:13.571" endtime="20201029 18:21:13.596"></status>
</kw>
<msg timestamp="20201029 18:21:13.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:13.568" endtime="20201029 18:21:13.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:13.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:13.599" endtime="20201029 18:21:13.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:13.605" endtime="20201029 18:21:13.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.561" endtime="20201029 18:21:13.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.555" endtime="20201029 18:21:13.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:13.628" endtime="20201029 18:21:13.979"></status>
</kw>
<msg timestamp="20201029 18:21:13.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039541389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039713014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:13.625" endtime="20201029 18:21:13.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:14.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039541389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039713014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:13.988" endtime="20201029 18:21:14.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:14.007" endtime="20201029 18:21:14.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.618" endtime="20201029 18:21:14.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.613" endtime="20201029 18:21:14.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:14.023" level="INFO">${RESULT} = [{'diff': 0.0001716249999999947}, {'diff': 0.0001712499999999978}, {'diff': 0.00017150000000000498}, {'diff': 0.0001710139999999971}, {'diff': 0.00017115300000000028}, {'diff': 0.00017143099999999967}...</msg>
<status status="PASS" starttime="20201029 18:21:14.015" endtime="20201029 18:21:14.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:14.032" level="INFO">${ACCURACY} = {'diff': [0.0001716249999999947, 0.0001712499999999978, 0.00017150000000000498, 0.0001710139999999971, 0.00017115300000000028, 0.00017143099999999967, 0.00017177799999999743, 0.00017134700000000225, 0...</msg>
<status status="PASS" starttime="20201029 18:21:14.025" endtime="20201029 18:21:14.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:14.043" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:21:14.041" endtime="20201029 18:21:14.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:14.048" level="INFO">VALUE: [0.0001716249999999947, 0.0001712499999999978, 0.00017150000000000498, 0.0001710139999999971, 0.00017115300000000028, 0.00017143099999999967, 0.00017177799999999743, 0.00017134700000000225, 0.000171791999999997, 0.00017105599999999582, 0.00017188900000000146, 0.00017186199999999485, 0.00017181899999999667, 0.0001712919999999965, 0.00017188900000000146, 0.00017112500000000114, 0.0001705970000000015, 0.00017138800000000148, 0.0001712499999999978, 0.00017138900000000096, 0.00017176399999999786, 0.00017173599999999872, 0.00017152799999999718, 0.00017148599999999847, 0.000171791999999997, 0.00017120899999999856, 0.00017154099999999728, 0.00017115300000000028, 0.0001701939999999985, 0.00017177799999999743, 0.0001714860000000054, 0.0001716390000000012, 0.0001714719999999989, 0.00017179099999999753, 0.00017200000000000548, 0.00017115300000000028, 0.00017161100000000207, 0.0001713750000000014, 0.0001716520000000013, 0.00017156900000000336, 0.00017127799999999693, 0.0001710829999999955, 0.00017131899999999617, 0.00017036100000000082, 0.00017172199999999915, 0.00017104100000000372, 0.00017043099999999867, 0.00017091600000000012, 0.00017072199999999815, 0.0001715970000000025]</msg>
<status status="PASS" starttime="20201029 18:21:14.045" endtime="20201029 18:21:14.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.034" endtime="20201029 18:21:14.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:14.066" endtime="20201029 18:21:14.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.062" endtime="20201029 18:21:14.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.059" endtime="20201029 18:21:14.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.551" endtime="20201029 18:21:14.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.550" endtime="20201029 18:21:14.091"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:14.114" endtime="20201029 18:21:14.138"></status>
</kw>
<msg timestamp="20201029 18:21:14.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:14.110" endtime="20201029 18:21:14.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:14.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:14.141" endtime="20201029 18:21:14.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:14.147" endtime="20201029 18:21:14.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.103" endtime="20201029 18:21:14.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.097" endtime="20201029 18:21:14.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:14.171" endtime="20201029 18:21:14.505"></status>
</kw>
<msg timestamp="20201029 18:21:14.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041234625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041405986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:14.167" endtime="20201029 18:21:14.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:14.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041234625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041405986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:14.514" endtime="20201029 18:21:14.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:14.532" endtime="20201029 18:21:14.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.160" endtime="20201029 18:21:14.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.155" endtime="20201029 18:21:14.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:14.549" level="INFO">${RESULT} = [{'diff': 0.00017136100000000182}, {'diff': 0.00017286100000000332}, {'diff': 0.00017284799999999628}, {'diff': 0.00017261099999999613}, {'diff': 0.00017283299999999724}, {'diff': 0.000172139000000001...</msg>
<status status="PASS" starttime="20201029 18:21:14.540" endtime="20201029 18:21:14.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:14.558" level="INFO">${ACCURACY} = {'diff': [0.00017136100000000182, 0.00017286100000000332, 0.00017284799999999628, 0.00017261099999999613, 0.00017283299999999724, 0.0001721390000000017, 0.0001726520000000023, 0.0001724719999999999, 0...</msg>
<status status="PASS" starttime="20201029 18:21:14.551" endtime="20201029 18:21:14.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:14.569" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:21:14.566" endtime="20201029 18:21:14.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:14.574" level="INFO">VALUE: [0.00017136100000000182, 0.00017286100000000332, 0.00017284799999999628, 0.00017261099999999613, 0.00017283299999999724, 0.0001721390000000017, 0.0001726520000000023, 0.0001724719999999999, 0.00017311200000000304, 0.0001720840000000029, 0.00017254199999999775, 0.00017233300000000368, 0.00017261099999999613, 0.00017236100000000282, 0.0001729170000000016, 0.00017268000000000144, 0.00017240300000000153, 0.00017233300000000368, 0.00017232000000000358, 0.00017265300000000178, 0.00017252799999999818, 0.00017272200000000015, 0.00017243100000000067, 0.00017273599999999972, 0.00017279100000000547, 0.00017212500000000214, 0.00017299999999999954, 0.00017236100000000282, 0.0001726249999999957, 0.00017234700000000325, 0.00017215300000000128, 0.00017243100000000067, 0.00017197300000000582, 0.00017286100000000332, 0.00017277799999999843, 0.00017255599999999732, 0.00017149999999999804, 0.00017222299999999913, 0.00017287499999999595, 0.0001728750000000029, 0.0001724719999999999, 0.00017216700000000085, 0.00017213899999999477, 0.00017120799999999908, 0.0001724589999999998, 0.0001726390000000022, 0.00017265300000000178, 0.00017256899999999742, 0.00017133299999999574, 0.00017270800000000058]</msg>
<status status="PASS" starttime="20201029 18:21:14.571" endtime="20201029 18:21:14.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.560" endtime="20201029 18:21:14.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:14.588" endtime="20201029 18:21:14.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.582" endtime="20201029 18:21:14.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.580" endtime="20201029 18:21:14.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.093" endtime="20201029 18:21:14.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.092" endtime="20201029 18:21:14.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.611" endtime="20201029 18:21:14.613"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:20.483" endtime="20201029 18:21:14.615" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:19:24.336" endtime="20201029 18:21:14.624"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:21:14.758" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:21:14.773" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:21:16.755" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:21:14.754" endtime="20201029 18:21:16.756"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.762" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:21:16.758" endtime="20201029 18:21:16.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.751" endtime="20201029 18:21:16.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:16.768" endtime="20201029 18:21:17.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.766" endtime="20201029 18:21:17.102"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:17.132" endtime="20201029 18:21:17.150"></status>
</kw>
<msg timestamp="20201029 18:21:17.151" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:17.128" endtime="20201029 18:21:17.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:17.157" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:17.153" endtime="20201029 18:21:17.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:17.164" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:17.159" endtime="20201029 18:21:17.166"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:17.122" endtime="20201029 18:21:17.168"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:17.116" endtime="20201029 18:21:17.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.114" endtime="20201029 18:21:17.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:17.178" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:17.177" endtime="20201029 18:21:17.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.172" endtime="20201029 18:21:17.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.112" endtime="20201029 18:21:17.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.110" endtime="20201029 18:21:17.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:17.182" endtime="20201029 18:21:17.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.107" endtime="20201029 18:21:17.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:17.188" endtime="20201029 18:21:17.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.104" endtime="20201029 18:21:17.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:14.748" endtime="20201029 18:21:17.194"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:17.208" endtime="20201029 18:21:17.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.204" endtime="20201029 18:21:17.231"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:17.264" endtime="20201029 18:21:17.281"></status>
</kw>
<msg timestamp="20201029 18:21:17.282" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:17.260" endtime="20201029 18:21:17.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:17.288" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:17.284" endtime="20201029 18:21:17.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:17.295" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:17.291" endtime="20201029 18:21:17.296"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:17.253" endtime="20201029 18:21:17.298"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:17.247" endtime="20201029 18:21:17.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.244" endtime="20201029 18:21:17.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:17.308" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:17.306" endtime="20201029 18:21:17.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.302" endtime="20201029 18:21:17.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.243" endtime="20201029 18:21:17.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.241" endtime="20201029 18:21:17.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:17.311" endtime="20201029 18:21:17.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.237" endtime="20201029 18:21:17.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.233" endtime="20201029 18:21:17.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.201" endtime="20201029 18:21:17.318"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:17.341" endtime="20201029 18:21:23.474"></status>
</kw>
<msg timestamp="20201029 18:21:23.475" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:17.338" endtime="20201029 18:21:23.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.482" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:23.477" endtime="20201029 18:21:23.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:23.484" endtime="20201029 18:21:23.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.331" endtime="20201029 18:21:23.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.323" endtime="20201029 18:21:23.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:23.496" level="INFO">${RESULT} = {'bg-timer-count': 0, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:21:23.492" endtime="20201029 18:21:23.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.507" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:23.505" endtime="20201029 18:21:23.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.511" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:21:23.509" endtime="20201029 18:21:23.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.498" endtime="20201029 18:21:23.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.523" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:23.521" endtime="20201029 18:21:23.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.527" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:21:23.525" endtime="20201029 18:21:23.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.515" endtime="20201029 18:21:23.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.542" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:21:23.540" endtime="20201029 18:21:23.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.549" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:21:23.545" endtime="20201029 18:21:23.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.532" endtime="20201029 18:21:23.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:23.575" endtime="20201029 18:21:23.929"></status>
</kw>
<msg timestamp="20201029 18:21:23.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.224625264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.224625819, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:21:23.571" endtime="20201029 18:21:23.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.224625264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.224625819, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:21:23.938" endtime="20201029 18:21:23.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:23.956" endtime="20201029 18:21:23.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.560" endtime="20201029 18:21:23.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.554" endtime="20201029 18:21:23.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:21:23.973" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.100201806}, {'diff': 0.10020045799999999}, {'diff': 0.10020247199999999}, {'diff': 0.10019718099999997}, {'diff': 0.10019369499999997}, {'diff': 0.10019994499999996}, {'diff':...</msg>
<status status="PASS" starttime="20201029 18:21:23.964" endtime="20201029 18:21:23.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:23.983" level="INFO">${RESULT} = {'diff': [0, 0.100201806, 0.10020045799999999, 0.10020247199999999, 0.10019718099999997, 0.10019369499999997, 0.10019994499999996, 0.10019455599999993, 0.10019174999999991, 0.10019480500000011, 0.1002...</msg>
<status status="PASS" starttime="20201029 18:21:23.975" endtime="20201029 18:21:23.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.993" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:21:23.991" endtime="20201029 18:21:23.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.998" level="INFO">VALUE: [0, 0.100201806, 0.10020045799999999, 0.10020247199999999, 0.10019718099999997, 0.10019369499999997, 0.10019994499999996, 0.10019455599999993, 0.10019174999999991, 0.10019480500000011, 0.10020488799999994, 0.10020208300000011, 0.10019202799999993, 0.10020033399999995, 0.10019808399999985, 0.10020191699999992, 0.10020044500000003, 0.100199959, 0.10019634700000024, 0.10019394399999992, 0.10018565300000004, 0.10018031999999977, 0.10018881999999962, 0.10019930599999993, 0.10019865300000008, 0.10019266599999987, 0.10018816700000022, 0.10018934700000015, 0.10020492999999986, 0.10022115200000004, 0.10021504099999978, 0.10021608300000029, 0.1002006660000001, 0.10021227799999988, 0.10020608399999986, 0.10020038900000028, 0.10019873599999984, 0.10020619400000008, 0.10020655600000028, 0.10021523600000037, 0.10020851400000019, 0.1002145969999999, 0.10020711099999957, 0.10020104200000013, 0.10020743100000029, 0.10021034699999998, 0.1002088480000003, 0.10020462499999994, 0.10021857, 0.10021073600000019, 0.10020576299999995]</msg>
<status status="PASS" starttime="20201029 18:21:23.996" endtime="20201029 18:21:23.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.985" endtime="20201029 18:21:24.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:17.319" endtime="20201029 18:21:24.002"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:21:17.195" endtime="20201029 18:21:24.005" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:24.021" endtime="20201029 18:21:24.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:24.017" endtime="20201029 18:21:24.044"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:24.076" endtime="20201029 18:21:24.093"></status>
</kw>
<msg timestamp="20201029 18:21:24.094" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:24.073" endtime="20201029 18:21:24.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:24.101" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:24.096" endtime="20201029 18:21:24.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:24.107" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:24.103" endtime="20201029 18:21:24.108"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:24.066" endtime="20201029 18:21:24.110"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:24.060" endtime="20201029 18:21:24.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:24.057" endtime="20201029 18:21:24.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:24.120" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:24.118" endtime="20201029 18:21:24.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:24.114" endtime="20201029 18:21:24.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:24.055" endtime="20201029 18:21:24.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:24.054" endtime="20201029 18:21:24.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:24.123" endtime="20201029 18:21:24.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:24.050" endtime="20201029 18:21:24.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:24.045" endtime="20201029 18:21:24.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:24.014" endtime="20201029 18:21:24.130"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:24.151" endtime="20201029 18:21:30.284"></status>
</kw>
<msg timestamp="20201029 18:21:30.285" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:24.148" endtime="20201029 18:21:30.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.292" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:30.288" endtime="20201029 18:21:30.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.294" endtime="20201029 18:21:30.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:24.141" endtime="20201029 18:21:30.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:24.135" endtime="20201029 18:21:30.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:30.306" level="INFO">${RESULT} = {'bg-timer-count': 5, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:21:30.302" endtime="20201029 18:21:30.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.317" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:30.315" endtime="20201029 18:21:30.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.322" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:21:30.320" endtime="20201029 18:21:30.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.309" endtime="20201029 18:21:30.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.334" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:30.331" endtime="20201029 18:21:30.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.338" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:21:30.336" endtime="20201029 18:21:30.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.325" endtime="20201029 18:21:30.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.350" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:21:30.348" endtime="20201029 18:21:30.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.354" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:21:30.352" endtime="20201029 18:21:30.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.342" endtime="20201029 18:21:30.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.373" endtime="20201029 18:21:30.724"></status>
</kw>
<msg timestamp="20201029 18:21:30.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.121337069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221617778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:30.370" endtime="20201029 18:21:30.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.121337069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221617778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:30.733" endtime="20201029 18:21:30.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.751" endtime="20201029 18:21:30.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.362" endtime="20201029 18:21:30.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.358" endtime="20201029 18:21:30.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:21:30.768" level="INFO">${FILTERED} = [{'diff': 0.10028070899999998}, {'diff': 0.10019877799999999}, {'diff': 0.10020115300000004}, {'diff': 0.10020780600000001}, {'diff': 0.100202028}, {'diff': 0.10021277800000006}, {'diff': 0.1002237639...</msg>
<status status="PASS" starttime="20201029 18:21:30.760" endtime="20201029 18:21:30.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:30.777" level="INFO">${RESULT} = {'diff': [0.10028070899999998, 0.10019877799999999, 0.10020115300000004, 0.10020780600000001, 0.100202028, 0.10021277800000006, 0.10022376399999999, 0.10020720800000005, 0.10021048600000004, 0.1002080...</msg>
<status status="PASS" starttime="20201029 18:21:30.770" endtime="20201029 18:21:30.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.787" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:21:30.785" endtime="20201029 18:21:30.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.792" level="INFO">VALUE: [0.10028070899999998, 0.10019877799999999, 0.10020115300000004, 0.10020780600000001, 0.100202028, 0.10021277800000006, 0.10022376399999999, 0.10020720800000005, 0.10021048600000004, 0.10020808399999992, 0.10020270899999995, 0.10019463899999992, 0.10020318099999992, 0.10020929199999995, 0.1002064020000002, 0.10019933299999995, 0.10019316600000017, 0.10018577699999986, 0.10019529100000013, 0.10020934699999984, 0.10020761100000009, 0.10020401400000001, 0.10019237500000022, 0.10021704200000014, 0.10019984699999984, 0.10019954199999992, 0.1001986800000001, 0.10020038899999983, 0.10019448599999992, 0.10019884700000015, 0.1001882919999999, 0.10019995900000023, 0.10019688899999979, 0.10020751400000005, 0.10019356899999998, 0.10020111100000006, 0.10020784700000007, 0.10021136099999994, 0.10020970799999951, 0.10020133299999934, 0.10020679199999982, 0.10022470899999991, 0.10020397200000009, 0.10021537499999944, 0.10021422300000005, 0.10021308299999987, 0.10020881999999975, 0.10021655600000035, 0.1002139160000004, 0.10021286100000015, 0.10019391700000035]</msg>
<status status="PASS" starttime="20201029 18:21:30.789" endtime="20201029 18:21:30.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.779" endtime="20201029 18:21:30.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:24.131" endtime="20201029 18:21:30.797"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:21:24.009" endtime="20201029 18:21:30.798" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:30.814" endtime="20201029 18:21:30.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.811" endtime="20201029 18:21:30.838"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.872" endtime="20201029 18:21:30.887"></status>
</kw>
<msg timestamp="20201029 18:21:30.889" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:30.869" endtime="20201029 18:21:30.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.895" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:30.891" endtime="20201029 18:21:30.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.902" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:30.897" endtime="20201029 18:21:30.902"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:30.861" endtime="20201029 18:21:30.904"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:30.855" endtime="20201029 18:21:30.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.851" endtime="20201029 18:21:30.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:30.914" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:30.913" endtime="20201029 18:21:30.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.908" endtime="20201029 18:21:30.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.849" endtime="20201029 18:21:30.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.847" endtime="20201029 18:21:30.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.918" endtime="20201029 18:21:30.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.844" endtime="20201029 18:21:30.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.839" endtime="20201029 18:21:30.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.808" endtime="20201029 18:21:30.925"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.946" endtime="20201029 18:21:37.079"></status>
</kw>
<msg timestamp="20201029 18:21:37.080" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:30.942" endtime="20201029 18:21:37.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.087" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:37.083" endtime="20201029 18:21:37.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:37.089" endtime="20201029 18:21:37.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.935" endtime="20201029 18:21:37.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.930" endtime="20201029 18:21:37.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:37.102" level="INFO">${RESULT} = {'bg-timer-count': 10, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:21:37.097" endtime="20201029 18:21:37.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.112" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:37.110" endtime="20201029 18:21:37.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.116" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:21:37.114" endtime="20201029 18:21:37.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.104" endtime="20201029 18:21:37.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.128" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:37.126" endtime="20201029 18:21:37.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.133" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:21:37.130" endtime="20201029 18:21:37.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.120" endtime="20201029 18:21:37.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.146" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:21:37.142" endtime="20201029 18:21:37.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.151" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:21:37.149" endtime="20201029 18:21:37.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.136" endtime="20201029 18:21:37.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:37.170" endtime="20201029 18:21:37.518"></status>
</kw>
<msg timestamp="20201029 18:21:37.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.122313486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.222716764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:37.166" endtime="20201029 18:21:37.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.122313486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.222716764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:37.527" endtime="20201029 18:21:37.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:37.545" endtime="20201029 18:21:37.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.159" endtime="20201029 18:21:37.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.155" endtime="20201029 18:21:37.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:21:37.562" level="INFO">${FILTERED} = [{'diff': 0.10040327800000001}, {'diff': 0.100223055}, {'diff': 0.100086487}, {'diff': 0.10021438900000001}, {'diff': 0.10022320900000004}, {'diff': 0.10021751400000001}, {'diff': 0.10020663899999993}...</msg>
<status status="PASS" starttime="20201029 18:21:37.553" endtime="20201029 18:21:37.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:37.571" level="INFO">${RESULT} = {'diff': [0.10040327800000001, 0.100223055, 0.100086487, 0.10021438900000001, 0.10022320900000004, 0.10021751400000001, 0.10020663899999993, 0.10019352700000006, 0.10019756999999996, 0.100205625000000...</msg>
<status status="PASS" starttime="20201029 18:21:37.564" endtime="20201029 18:21:37.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.581" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:21:37.579" endtime="20201029 18:21:37.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.586" level="INFO">VALUE: [0.10040327800000001, 0.100223055, 0.100086487, 0.10021438900000001, 0.10022320900000004, 0.10021751400000001, 0.10020663899999993, 0.10019352700000006, 0.10019756999999996, 0.10020562500000008, 0.10019801400000006, 0.10020231999999996, 0.1002012360000002, 0.10020645799999994, 0.1001951940000001, 0.10020190200000001, 0.1002025419999999, 0.10020180599999984, 0.1002028199999998, 0.10020911099999985, 0.10020093000000019, 0.10019131999999997, 0.1001952359999998, 0.10020141700000007, 0.1002045840000001, 0.10019298600000015, 0.10020279200000015, 0.10020450000000025, 0.10019299999999998, 0.1001943470000004, 0.100196709, 0.10021572199999973, 0.10020977799999997, 0.10020744400000003, 0.10020612500000015, 0.10020350000000011, 0.10019991600000022, 0.10020236100000002, 0.10019691700000033, 0.10020462499999994, 0.1002037360000001, 0.10020511099999929, 0.1001958890000001, 0.10020068099999957, 0.10019179200000039, 0.10019700000000054, 0.10019534699999966, 0.10020600000000002, 0.10020787499999972, 0.10020888899999925, 0.10020598599999975]</msg>
<status status="PASS" starttime="20201029 18:21:37.583" endtime="20201029 18:21:37.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.573" endtime="20201029 18:21:37.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.926" endtime="20201029 18:21:37.591"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:21:30.802" endtime="20201029 18:21:37.592" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:37.610" endtime="20201029 18:21:37.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.605" endtime="20201029 18:21:37.634"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:37.666" endtime="20201029 18:21:37.681"></status>
</kw>
<msg timestamp="20201029 18:21:37.682" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:37.663" endtime="20201029 18:21:37.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.689" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:37.685" endtime="20201029 18:21:37.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.695" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:37.691" endtime="20201029 18:21:37.696"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:37.656" endtime="20201029 18:21:37.698"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:37.649" endtime="20201029 18:21:37.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.647" endtime="20201029 18:21:37.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:37.708" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:37.706" endtime="20201029 18:21:37.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.702" endtime="20201029 18:21:37.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.645" endtime="20201029 18:21:37.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.643" endtime="20201029 18:21:37.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:37.711" endtime="20201029 18:21:37.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.639" endtime="20201029 18:21:37.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.635" endtime="20201029 18:21:37.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.602" endtime="20201029 18:21:37.718"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:37.739" endtime="20201029 18:21:43.877"></status>
</kw>
<msg timestamp="20201029 18:21:43.878" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:37.736" endtime="20201029 18:21:43.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.884" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:43.880" endtime="20201029 18:21:43.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:43.886" endtime="20201029 18:21:43.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.729" endtime="20201029 18:21:43.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.723" endtime="20201029 18:21:43.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:43.899" level="INFO">${RESULT} = {'bg-timer-count': 15, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:21:43.895" endtime="20201029 18:21:43.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.911" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:43.907" endtime="20201029 18:21:43.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.916" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:21:43.914" endtime="20201029 18:21:43.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.901" endtime="20201029 18:21:43.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.928" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:43.925" endtime="20201029 18:21:43.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.932" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:21:43.930" endtime="20201029 18:21:43.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.919" endtime="20201029 18:21:43.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.944" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:21:43.942" endtime="20201029 18:21:43.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.948" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:21:43.946" endtime="20201029 18:21:43.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.936" endtime="20201029 18:21:43.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:43.967" endtime="20201029 18:21:44.327"></status>
</kw>
<msg timestamp="20201029 18:21:44.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.120594639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221192611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:43.963" endtime="20201029 18:21:44.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:44.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.120594639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221192611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:44.336" endtime="20201029 18:21:44.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:44.354" endtime="20201029 18:21:44.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.956" endtime="20201029 18:21:44.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.952" endtime="20201029 18:21:44.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:21:44.371" level="INFO">${FILTERED} = [{'diff': 0.10059797200000001}, {'diff': 0.09988022199999999}, {'diff': 0.10019922200000003}, {'diff': 0.10020555599999997}, {'diff': 0.10020136099999999}, {'diff': 0.10020018100000005}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 18:21:44.362" endtime="20201029 18:21:44.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:44.381" level="INFO">${RESULT} = {'diff': [0.10059797200000001, 0.09988022199999999, 0.10019922200000003, 0.10020555599999997, 0.10020136099999999, 0.10020018100000005, 0.10020675000000001, 0.10020841699999994, 0.10020880599999993, 0...</msg>
<status status="PASS" starttime="20201029 18:21:44.373" endtime="20201029 18:21:44.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:44.391" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:21:44.389" endtime="20201029 18:21:44.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:44.396" level="INFO">VALUE: [0.10059797200000001, 0.09988022199999999, 0.10019922200000003, 0.10020555599999997, 0.10020136099999999, 0.10020018100000005, 0.10020675000000001, 0.10020841699999994, 0.10020880599999993, 0.10019654100000008, 0.10020736099999983, 0.10020354099999995, 0.10020217999999992, 0.100196014, 0.10020945799999992, 0.10020952800000016, 0.10020593100000008, 0.10020451400000008, 0.10021288900000003, 0.10019984700000029, 0.10019913899999988, 0.10020902800000009, 0.10022206899999997, 0.10020511100000018, 0.10021534700000023, 0.10022677799999968, 0.1002283610000001, 0.10021183299999992, 0.1002018480000002, 0.10020722200000032, 0.1002047909999999, 0.10020237500000029, 0.10019848600000003, 0.1002026250000001, 0.10020648599999982, 0.1001986800000001, 0.10019548600000006, 0.10020266700000002, 0.10020917999999979, 0.1002018609999995, 0.10020280599999953, 0.10021026400000022, 0.10020824999999967, 0.10021059700000023, 0.10021316699999971, 0.10020684699999993, 0.10019526299999981, 0.10020090300000017, 0.10020773599999977, 0.10021820800000025, 0.10021387499999967]</msg>
<status status="PASS" starttime="20201029 18:21:44.393" endtime="20201029 18:21:44.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.383" endtime="20201029 18:21:44.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.720" endtime="20201029 18:21:44.401"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:21:37.597" endtime="20201029 18:21:44.402" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:44.418" endtime="20201029 18:21:44.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.415" endtime="20201029 18:21:44.442"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:44.476" endtime="20201029 18:21:44.493"></status>
</kw>
<msg timestamp="20201029 18:21:44.494" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:44.472" endtime="20201029 18:21:44.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:44.501" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:44.496" endtime="20201029 18:21:44.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:44.507" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:44.503" endtime="20201029 18:21:44.508"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:44.465" endtime="20201029 18:21:44.510"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:44.458" endtime="20201029 18:21:44.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.455" endtime="20201029 18:21:44.512"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:44.520" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:44.518" endtime="20201029 18:21:44.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.514" endtime="20201029 18:21:44.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.454" endtime="20201029 18:21:44.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.452" endtime="20201029 18:21:44.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:44.523" endtime="20201029 18:21:44.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.448" endtime="20201029 18:21:44.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.443" endtime="20201029 18:21:44.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.412" endtime="20201029 18:21:44.530"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:44.553" endtime="20201029 18:21:50.687"></status>
</kw>
<msg timestamp="20201029 18:21:50.688" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:44.550" endtime="20201029 18:21:50.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.694" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:50.690" endtime="20201029 18:21:50.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:50.697" endtime="20201029 18:21:50.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.541" endtime="20201029 18:21:50.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.535" endtime="20201029 18:21:50.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:50.711" level="INFO">${RESULT} = {'bg-timer-count': 20, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:21:50.706" endtime="20201029 18:21:50.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.722" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:50.719" endtime="20201029 18:21:50.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.726" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:21:50.724" endtime="20201029 18:21:50.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.712" endtime="20201029 18:21:50.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.738" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:50.736" endtime="20201029 18:21:50.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.742" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:21:50.740" endtime="20201029 18:21:50.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.730" endtime="20201029 18:21:50.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.754" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:21:50.752" endtime="20201029 18:21:50.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.758" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:21:50.756" endtime="20201029 18:21:50.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.746" endtime="20201029 18:21:50.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:50.777" endtime="20201029 18:21:51.140"></status>
</kw>
<msg timestamp="20201029 18:21:51.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125910556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226607208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:50.774" endtime="20201029 18:21:51.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:51.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125910556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226607208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:51.149" endtime="20201029 18:21:51.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:51.167" endtime="20201029 18:21:51.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.767" endtime="20201029 18:21:51.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.762" endtime="20201029 18:21:51.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:21:51.184" level="INFO">${FILTERED} = [{'diff': 0.100696652}, {'diff': 0.09979236100000002}, {'diff': 0.10021522300000002}, {'diff': 0.10022188900000006}, {'diff': 0.100213903}, {'diff': 0.10020863800000002}, {'diff': 0.10020665299999998}...</msg>
<status status="PASS" starttime="20201029 18:21:51.176" endtime="20201029 18:21:51.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:51.195" level="INFO">${RESULT} = {'diff': [0.100696652, 0.09979236100000002, 0.10021522300000002, 0.10022188900000006, 0.100213903, 0.10020863800000002, 0.10020665299999998, 0.10020813800000006, 0.10021190300000005, 0.100212069999999...</msg>
<status status="PASS" starttime="20201029 18:21:51.186" endtime="20201029 18:21:51.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:51.205" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:21:51.202" endtime="20201029 18:21:51.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:51.210" level="INFO">VALUE: [0.100696652, 0.09979236100000002, 0.10021522300000002, 0.10022188900000006, 0.100213903, 0.10020863800000002, 0.10020665299999998, 0.10020813800000006, 0.10021190300000005, 0.10021206999999999, 0.1002095970000001, 0.10020326300000004, 0.10020634700000008, 0.10020047200000004, 0.10019632, 0.10018869499999994, 0.10019533399999991, 0.10019482000000002, 0.10020229200000008, 0.10020647199999999, 0.10021297200000001, 0.10021726299999978, 0.10021069400000027, 0.1002226799999999, 0.10021436100000036, 0.10021887499999993, 0.1002223889999998, 0.10020829099999995, 0.10021111100000013, 0.10021097300000026, 0.10021404200000017, 0.10020808300000006, 0.10020944399999987, 0.10021004200000005, 0.10020458300000001, 0.10020147199999974, 0.10020688899999985, 0.10020506900000026, 0.10019462500000031, 0.10020238900000056, 0.10020808400000014, 0.10019968100000032, 0.10020418099999961, 0.10020605600000021, 0.10020408400000047, 0.10020950000000006, 0.10021020800000002, 0.10020322199999931, 0.1001994719999999, 0.10019481900000038, 0.10020537499999982]</msg>
<status status="PASS" starttime="20201029 18:21:51.207" endtime="20201029 18:21:51.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:51.196" endtime="20201029 18:21:51.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.531" endtime="20201029 18:21:51.219"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:21:44.406" endtime="20201029 18:21:51.221" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:51.237" endtime="20201029 18:21:51.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:51.233" endtime="20201029 18:21:51.260"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:51.293" endtime="20201029 18:21:51.309"></status>
</kw>
<msg timestamp="20201029 18:21:51.310" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:51.290" endtime="20201029 18:21:51.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:51.317" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:51.312" endtime="20201029 18:21:51.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:51.323" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:51.319" endtime="20201029 18:21:51.324"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:51.283" endtime="20201029 18:21:51.326"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:51.276" endtime="20201029 18:21:51.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:51.274" endtime="20201029 18:21:51.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:51.336" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:51.334" endtime="20201029 18:21:51.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:51.330" endtime="20201029 18:21:51.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:51.272" endtime="20201029 18:21:51.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:51.270" endtime="20201029 18:21:51.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:51.346" endtime="20201029 18:21:51.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:51.266" endtime="20201029 18:21:51.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:51.262" endtime="20201029 18:21:51.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:51.230" endtime="20201029 18:21:51.353"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:51.374" endtime="20201029 18:21:57.508"></status>
</kw>
<msg timestamp="20201029 18:21:57.509" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:51.371" endtime="20201029 18:21:57.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:57.516" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:57.512" endtime="20201029 18:21:57.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:57.518" endtime="20201029 18:21:57.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:51.364" endtime="20201029 18:21:57.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:51.358" endtime="20201029 18:21:57.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:57.531" level="INFO">${RESULT} = {'bg-timer-count': 25, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:21:57.526" endtime="20201029 18:21:57.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:57.541" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:57.539" endtime="20201029 18:21:57.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:57.546" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:21:57.543" endtime="20201029 18:21:57.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:57.533" endtime="20201029 18:21:57.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:57.557" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:57.555" endtime="20201029 18:21:57.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:57.562" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:21:57.560" endtime="20201029 18:21:57.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:57.549" endtime="20201029 18:21:57.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:57.574" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:21:57.572" endtime="20201029 18:21:57.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:57.578" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:21:57.576" endtime="20201029 18:21:57.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:57.566" endtime="20201029 18:21:57.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:57.597" endtime="20201029 18:21:57.971"></status>
</kw>
<msg timestamp="20201029 18:21:57.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128727361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229560236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:57.594" endtime="20201029 18:21:57.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:57.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128727361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229560236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:57.981" endtime="20201029 18:21:57.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:57.999" endtime="20201029 18:21:58.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:57.587" endtime="20201029 18:21:58.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:57.582" endtime="20201029 18:21:58.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:21:58.016" level="INFO">${FILTERED} = [{'diff': 0.10083287499999999}, {'diff': 0.099648083}, {'diff': 0.100206931}, {'diff': 0.10021041699999994}, {'diff': 0.10021142999999999}, {'diff': 0.100210778}, {'diff': 0.100211681}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201029 18:21:58.008" endtime="20201029 18:21:58.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:58.027" level="INFO">${RESULT} = {'diff': [0.10083287499999999, 0.099648083, 0.100206931, 0.10021041699999994, 0.10021142999999999, 0.100210778, 0.100211681, 0.10019758300000003, 0.10018820800000006, 0.10019069400000014, 0.1002060409...</msg>
<status status="PASS" starttime="20201029 18:21:58.020" endtime="20201029 18:21:58.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:58.037" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:21:58.034" endtime="20201029 18:21:58.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:58.042" level="INFO">VALUE: [0.10083287499999999, 0.099648083, 0.100206931, 0.10021041699999994, 0.10021142999999999, 0.100210778, 0.100211681, 0.10019758300000003, 0.10018820800000006, 0.10019069400000014, 0.10020604099999986, 0.10020095899999992, 0.10020090299999995, 0.100195166, 0.10019209700000009, 0.10019140300000018, 0.10019726300000009, 0.10020626399999988, 0.10020819500000022, 0.10019394399999992, 0.10019334700000027, 0.100205125, 0.1001961389999999, 0.10018715200000017, 0.10019351399999987, 0.10019840299999982, 0.10019386100000016, 0.1002028049999999, 0.1002043330000002, 0.10020477800000016, 0.1002076810000001, 0.10021311200000005, 0.10020415299999996, 0.10020220899999988, 0.10020347200000002, 0.10020351399999994, 0.10019777699999999, 0.10021226400000005, 0.10019066700000012, 0.10018819400000023, 0.1001959440000002, 0.10018824999999953, 0.10020301399999987, 0.10019488899999995, 0.10019826400000031, 0.10020318099999947, 0.10020355499999933, 0.10019855500000041, 0.10020545799999958, 0.10021051399999958, 0.10020562499999919]</msg>
<status status="PASS" starttime="20201029 18:21:58.039" endtime="20201029 18:21:58.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:58.028" endtime="20201029 18:21:58.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:51.354" endtime="20201029 18:21:58.046"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:21:51.225" endtime="20201029 18:21:58.048" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:21:14.646" endtime="20201029 18:21:58.066"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:18:20.621" endtime="20201029 18:21:58.144"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_samr21-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
