<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201029 12:47:08.399" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.667" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:47:09.683" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:47:11.803" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:47:09.663" endtime="20201029 12:47:11.805"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.810" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:47:11.807" endtime="20201029 12:47:11.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.660" endtime="20201029 12:47:11.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.818" endtime="20201029 12:47:12.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.815" endtime="20201029 12:47:12.167"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.198" endtime="20201029 12:47:12.214"></status>
</kw>
<msg timestamp="20201029 12:47:12.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.195" endtime="20201029 12:47:12.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.222" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.218" endtime="20201029 12:47:12.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.229" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:12.224" endtime="20201029 12:47:12.229"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:12.188" endtime="20201029 12:47:12.231"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:12.182" endtime="20201029 12:47:12.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.179" endtime="20201029 12:47:12.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:12.242" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:12.240" endtime="20201029 12:47:12.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.235" endtime="20201029 12:47:12.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.177" endtime="20201029 12:47:12.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.175" endtime="20201029 12:47:12.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.245" endtime="20201029 12:47:12.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.172" endtime="20201029 12:47:12.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.252" endtime="20201029 12:47:12.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.168" endtime="20201029 12:47:12.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.656" endtime="20201029 12:47:12.258"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.272" endtime="20201029 12:47:12.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.269" endtime="20201029 12:47:12.296"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.331" endtime="20201029 12:47:12.346"></status>
</kw>
<msg timestamp="20201029 12:47:12.347" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.327" endtime="20201029 12:47:12.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.354" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.350" endtime="20201029 12:47:12.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.360" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:12.356" endtime="20201029 12:47:12.361"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:12.320" endtime="20201029 12:47:12.363"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:12.313" endtime="20201029 12:47:12.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.309" endtime="20201029 12:47:12.365"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:12.373" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:12.371" endtime="20201029 12:47:12.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.367" endtime="20201029 12:47:12.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.307" endtime="20201029 12:47:12.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.305" endtime="20201029 12:47:12.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.376" endtime="20201029 12:47:12.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.301" endtime="20201029 12:47:12.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.297" endtime="20201029 12:47:12.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.266" endtime="20201029 12:47:12.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.400" endtime="20201029 12:47:12.411"></status>
</kw>
<msg timestamp="20201029 12:47:12.412" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.397" endtime="20201029 12:47:12.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.418" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.414" endtime="20201029 12:47:12.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.420" endtime="20201029 12:47:12.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.390" endtime="20201029 12:47:12.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.385" endtime="20201029 12:47:12.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.437" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:47:12.434" endtime="20201029 12:47:12.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.441" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 12:47:12.439" endtime="20201029 12:47:12.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.428" endtime="20201029 12:47:12.443"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:12.259" endtime="20201029 12:47:12.445" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:47:08.668" endtime="20201029 12:47:12.451"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.601" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:47:12.617" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:47:14.694" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:47:12.597" endtime="20201029 12:47:14.695"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.701" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:47:14.697" endtime="20201029 12:47:14.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.594" endtime="20201029 12:47:14.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.707" endtime="20201029 12:47:15.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.705" endtime="20201029 12:47:15.052"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.081" endtime="20201029 12:47:15.105"></status>
</kw>
<msg timestamp="20201029 12:47:15.107" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.077" endtime="20201029 12:47:15.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.116" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.111" endtime="20201029 12:47:15.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.126" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:15.119" endtime="20201029 12:47:15.128"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:15.071" endtime="20201029 12:47:15.131"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:15.066" endtime="20201029 12:47:15.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.063" endtime="20201029 12:47:15.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:15.147" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:15.145" endtime="20201029 12:47:15.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.139" endtime="20201029 12:47:15.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.062" endtime="20201029 12:47:15.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.060" endtime="20201029 12:47:15.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.151" endtime="20201029 12:47:15.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.057" endtime="20201029 12:47:15.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.157" endtime="20201029 12:47:15.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.053" endtime="20201029 12:47:15.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.589" endtime="20201029 12:47:15.163"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.177" endtime="20201029 12:47:15.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.173" endtime="20201029 12:47:15.200"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.294" endtime="20201029 12:47:15.310"></status>
</kw>
<msg timestamp="20201029 12:47:15.311" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.291" endtime="20201029 12:47:15.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.318" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.314" endtime="20201029 12:47:15.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.324" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:15.320" endtime="20201029 12:47:15.325"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:15.283" endtime="20201029 12:47:15.327"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:15.216" endtime="20201029 12:47:15.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.213" endtime="20201029 12:47:15.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:15.337" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:15.335" endtime="20201029 12:47:15.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.331" endtime="20201029 12:47:15.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.211" endtime="20201029 12:47:15.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.210" endtime="20201029 12:47:15.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.340" endtime="20201029 12:47:15.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.206" endtime="20201029 12:47:15.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.202" endtime="20201029 12:47:15.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.170" endtime="20201029 12:47:15.347"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.369" endtime="20201029 12:47:15.380"></status>
</kw>
<msg timestamp="20201029 12:47:15.381" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.366" endtime="20201029 12:47:15.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.387" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.383" endtime="20201029 12:47:15.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.389" endtime="20201029 12:47:15.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.358" endtime="20201029 12:47:15.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.354" endtime="20201029 12:47:15.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.414" endtime="20201029 12:47:15.758"></status>
</kw>
<msg timestamp="20201029 12:47:15.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.182633583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.182649889, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:15.411" endtime="20201029 12:47:15.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.182633583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.182649889, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:15.767" endtime="20201029 12:47:15.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.791" endtime="20201029 12:47:15.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.402" endtime="20201029 12:47:15.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.397" endtime="20201029 12:47:15.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.817" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000...</msg>
<status status="PASS" starttime="20201029 12:47:15.804" endtime="20201029 12:47:15.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:15.829" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4...</msg>
<status status="PASS" starttime="20201029 12:47:15.820" endtime="20201029 12:47:15.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.840" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:15.837" endtime="20201029 12:47:15.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.845" level="INFO">VALUE: [0, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201029 12:47:15.842" endtime="20201029 12:47:15.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.831" endtime="20201029 12:47:15.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.351" endtime="20201029 12:47:15.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.350" endtime="20201029 12:47:15.849"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.871" endtime="20201029 12:47:15.881"></status>
</kw>
<msg timestamp="20201029 12:47:15.883" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.867" endtime="20201029 12:47:15.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.889" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.885" endtime="20201029 12:47:15.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.891" endtime="20201029 12:47:15.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.859" endtime="20201029 12:47:15.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.854" endtime="20201029 12:47:15.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.914" endtime="20201029 12:47:16.284"></status>
</kw>
<msg timestamp="20201029 12:47:16.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.183202222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.183202694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.911" endtime="20201029 12:47:16.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.183202222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.183202694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.296" endtime="20201029 12:47:16.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.319" endtime="20201029 12:47:16.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.903" endtime="20201029 12:47:16.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.899" endtime="20201029 12:47:16.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.337" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:47:16.327" endtime="20201029 12:47:16.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:16.349" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 12:47:16.339" endtime="20201029 12:47:16.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.360" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:16.358" endtime="20201029 12:47:16.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.366" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7200000008462695e-07]</msg>
<status status="PASS" starttime="20201029 12:47:16.363" endtime="20201029 12:47:16.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.352" endtime="20201029 12:47:16.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.851" endtime="20201029 12:47:16.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.850" endtime="20201029 12:47:16.370"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.391" endtime="20201029 12:47:16.403"></status>
</kw>
<msg timestamp="20201029 12:47:16.405" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.387" endtime="20201029 12:47:16.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.411" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.407" endtime="20201029 12:47:16.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.413" endtime="20201029 12:47:16.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.380" endtime="20201029 12:47:16.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.375" endtime="20201029 12:47:16.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.437" endtime="20201029 12:47:16.832"></status>
</kw>
<msg timestamp="20201029 12:47:16.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.675916236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.675916708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.433" endtime="20201029 12:47:16.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.675916236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.675916708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.843" endtime="20201029 12:47:16.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.866" endtime="20201029 12:47:16.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.426" endtime="20201029 12:47:16.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.421" endtime="20201029 12:47:16.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.891" level="INFO">${RESULT} = [{'diff': 4.7200000008462695e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000008462695e-07},...</msg>
<status status="PASS" starttime="20201029 12:47:16.878" endtime="20201029 12:47:16.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:16.906" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000008462695e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:47:16.894" endtime="20201029 12:47:16.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.919" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:16.916" endtime="20201029 12:47:16.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.925" level="INFO">VALUE: [4.7200000008462695e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.729999998343004e-07]</msg>
<status status="PASS" starttime="20201029 12:47:16.922" endtime="20201029 12:47:16.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.909" endtime="20201029 12:47:16.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.372" endtime="20201029 12:47:16.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.371" endtime="20201029 12:47:16.929"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.949" endtime="20201029 12:47:16.962"></status>
</kw>
<msg timestamp="20201029 12:47:16.963" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.946" endtime="20201029 12:47:16.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.969" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.965" endtime="20201029 12:47:16.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.971" endtime="20201029 12:47:16.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.939" endtime="20201029 12:47:16.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.934" endtime="20201029 12:47:16.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.995" endtime="20201029 12:47:17.365"></status>
</kw>
<msg timestamp="20201029 12:47:17.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.186091611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.186092083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.992" endtime="20201029 12:47:17.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.186091611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.186092083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.377" endtime="20201029 12:47:17.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.401" endtime="20201029 12:47:17.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.985" endtime="20201029 12:47:17.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.980" endtime="20201029 12:47:17.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.420" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:47:17.410" endtime="20201029 12:47:17.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:17.431" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:47:17.422" endtime="20201029 12:47:17.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.441" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:17.439" endtime="20201029 12:47:17.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.447" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:47:17.444" endtime="20201029 12:47:17.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.433" endtime="20201029 12:47:17.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.931" endtime="20201029 12:47:17.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.930" endtime="20201029 12:47:17.451"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.473" endtime="20201029 12:47:17.483"></status>
</kw>
<msg timestamp="20201029 12:47:17.485" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.469" endtime="20201029 12:47:17.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.491" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.487" endtime="20201029 12:47:17.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.493" endtime="20201029 12:47:17.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.461" endtime="20201029 12:47:17.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.456" endtime="20201029 12:47:17.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.516" endtime="20201029 12:47:17.872"></status>
</kw>
<msg timestamp="20201029 12:47:17.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.735596167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.735596639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.513" endtime="20201029 12:47:17.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.735596167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.735596639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.883" endtime="20201029 12:47:17.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.905" endtime="20201029 12:47:17.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.505" endtime="20201029 12:47:17.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.501" endtime="20201029 12:47:17.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.924" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.729999998343004e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 12:47:17.914" endtime="20201029 12:47:17.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:17.938" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 12:47:17.927" endtime="20201029 12:47:17.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.950" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:17.947" endtime="20201029 12:47:17.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.957" level="INFO">VALUE: [4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:47:17.952" endtime="20201029 12:47:17.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.940" endtime="20201029 12:47:17.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.453" endtime="20201029 12:47:17.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.452" endtime="20201029 12:47:17.962"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.986" endtime="20201029 12:47:17.996"></status>
</kw>
<msg timestamp="20201029 12:47:17.997" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.982" endtime="20201029 12:47:17.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.004" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.000" endtime="20201029 12:47:18.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.006" endtime="20201029 12:47:18.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.974" endtime="20201029 12:47:18.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.968" endtime="20201029 12:47:18.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.029" endtime="20201029 12:47:18.398"></status>
</kw>
<msg timestamp="20201029 12:47:18.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.248853903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.248854375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.026" endtime="20201029 12:47:18.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.248853903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.248854375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.409" endtime="20201029 12:47:18.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.432" endtime="20201029 12:47:18.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.019" endtime="20201029 12:47:18.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.014" endtime="20201029 12:47:18.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.449" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:47:18.440" endtime="20201029 12:47:18.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:18.462" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73...</msg>
<status status="PASS" starttime="20201029 12:47:18.452" endtime="20201029 12:47:18.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.472" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:18.470" endtime="20201029 12:47:18.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.478" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:47:18.475" endtime="20201029 12:47:18.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.464" endtime="20201029 12:47:18.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.964" endtime="20201029 12:47:18.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.963" endtime="20201029 12:47:18.482"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.502" endtime="20201029 12:47:18.513"></status>
</kw>
<msg timestamp="20201029 12:47:18.514" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.499" endtime="20201029 12:47:18.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.520" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.516" endtime="20201029 12:47:18.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.523" endtime="20201029 12:47:18.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.492" endtime="20201029 12:47:18.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.487" endtime="20201029 12:47:18.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.546" endtime="20201029 12:47:18.914"></status>
</kw>
<msg timestamp="20201029 12:47:18.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.751721375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.751721847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.543" endtime="20201029 12:47:18.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.751721375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.751721847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.925" endtime="20201029 12:47:18.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.947" endtime="20201029 12:47:18.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.535" endtime="20201029 12:47:18.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.531" endtime="20201029 12:47:18.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.966" level="INFO">${RESULT} = [{'diff': 4.7200000041769385e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 12:47:18.956" endtime="20201029 12:47:18.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:18.976" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 12:47:18.968" endtime="20201029 12:47:18.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.986" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:18.984" endtime="20201029 12:47:18.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.992" level="INFO">VALUE: [4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07]</msg>
<status status="PASS" starttime="20201029 12:47:18.989" endtime="20201029 12:47:18.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.978" endtime="20201029 12:47:18.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.484" endtime="20201029 12:47:18.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.483" endtime="20201029 12:47:18.996"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.018" endtime="20201029 12:47:19.029"></status>
</kw>
<msg timestamp="20201029 12:47:19.030" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.013" endtime="20201029 12:47:19.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.036" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.032" endtime="20201029 12:47:19.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.039" endtime="20201029 12:47:19.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.006" endtime="20201029 12:47:19.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.002" endtime="20201029 12:47:19.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.061" endtime="20201029 12:47:19.421"></status>
</kw>
<msg timestamp="20201029 12:47:19.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.258383639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.258384111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.058" endtime="20201029 12:47:19.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.258383639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.258384111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.433" endtime="20201029 12:47:19.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.457" endtime="20201029 12:47:19.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.051" endtime="20201029 12:47:19.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.047" endtime="20201029 12:47:19.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.476" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999996122558e-07}, {'diff': 4.7200000041769385e-0...</msg>
<status status="PASS" starttime="20201029 12:47:19.466" endtime="20201029 12:47:19.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:19.487" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201029 12:47:19.478" endtime="20201029 12:47:19.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.497" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:19.495" endtime="20201029 12:47:19.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.503" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:47:19.500" endtime="20201029 12:47:19.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.489" endtime="20201029 12:47:19.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.998" endtime="20201029 12:47:19.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.997" endtime="20201029 12:47:19.507"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.528" endtime="20201029 12:47:19.539"></status>
</kw>
<msg timestamp="20201029 12:47:19.540" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.524" endtime="20201029 12:47:19.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.546" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.542" endtime="20201029 12:47:19.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.548" endtime="20201029 12:47:19.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.517" endtime="20201029 12:47:19.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.513" endtime="20201029 12:47:19.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.571" endtime="20201029 12:47:19.925"></status>
</kw>
<msg timestamp="20201029 12:47:19.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.764699556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.764700028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.568" endtime="20201029 12:47:19.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.764699556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.764700028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.936" endtime="20201029 12:47:19.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.958" endtime="20201029 12:47:19.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.561" endtime="20201029 12:47:19.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.556" endtime="20201029 12:47:19.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.976" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 12:47:19.967" endtime="20201029 12:47:19.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:19.992" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:47:19.978" endtime="20201029 12:47:19.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.002" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:20.000" endtime="20201029 12:47:20.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.008" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:47:20.004" endtime="20201029 12:47:20.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.994" endtime="20201029 12:47:20.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.509" endtime="20201029 12:47:20.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.508" endtime="20201029 12:47:20.012"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.032" endtime="20201029 12:47:20.043"></status>
</kw>
<msg timestamp="20201029 12:47:20.044" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.029" endtime="20201029 12:47:20.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.050" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.046" endtime="20201029 12:47:20.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.052" endtime="20201029 12:47:20.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.022" endtime="20201029 12:47:20.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.017" endtime="20201029 12:47:20.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.076" endtime="20201029 12:47:20.463"></status>
</kw>
<msg timestamp="20201029 12:47:20.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.264158083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.264158556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.072" endtime="20201029 12:47:20.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.264158083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.264158556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.475" endtime="20201029 12:47:20.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.497" endtime="20201029 12:47:20.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.065" endtime="20201029 12:47:20.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.060" endtime="20201029 12:47:20.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.516" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:47:20.506" endtime="20201029 12:47:20.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:20.526" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:47:20.518" endtime="20201029 12:47:20.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.536" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:20.534" endtime="20201029 12:47:20.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.542" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:47:20.538" endtime="20201029 12:47:20.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.528" endtime="20201029 12:47:20.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.014" endtime="20201029 12:47:20.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.013" endtime="20201029 12:47:20.546"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.566" endtime="20201029 12:47:20.580"></status>
</kw>
<msg timestamp="20201029 12:47:20.581" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.563" endtime="20201029 12:47:20.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.587" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.583" endtime="20201029 12:47:20.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.589" endtime="20201029 12:47:20.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.556" endtime="20201029 12:47:20.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.551" endtime="20201029 12:47:20.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.612" endtime="20201029 12:47:20.991"></status>
</kw>
<msg timestamp="20201029 12:47:21.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.760429139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.760429611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.609" endtime="20201029 12:47:21.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.760429139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.760429611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.002" endtime="20201029 12:47:21.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.025" endtime="20201029 12:47:21.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.602" endtime="20201029 12:47:21.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.597" endtime="20201029 12:47:21.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.043" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 12:47:21.033" endtime="20201029 12:47:21.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:21.055" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:47:21.045" endtime="20201029 12:47:21.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.065" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:21.062" endtime="20201029 12:47:21.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.070" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:47:21.067" endtime="20201029 12:47:21.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.056" endtime="20201029 12:47:21.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.548" endtime="20201029 12:47:21.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.547" endtime="20201029 12:47:21.075"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.095" endtime="20201029 12:47:21.107"></status>
</kw>
<msg timestamp="20201029 12:47:21.108" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.091" endtime="20201029 12:47:21.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.114" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.110" endtime="20201029 12:47:21.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.116" endtime="20201029 12:47:21.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.084" endtime="20201029 12:47:21.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.080" endtime="20201029 12:47:21.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.143" endtime="20201029 12:47:21.513"></status>
</kw>
<msg timestamp="20201029 12:47:21.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.285037278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.28503775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:21.139" endtime="20201029 12:47:21.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.285037278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.28503775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:21.525" endtime="20201029 12:47:21.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.548" endtime="20201029 12:47:21.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.129" endtime="20201029 12:47:21.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.124" endtime="20201029 12:47:21.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.566" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000086178306e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:47:21.556" endtime="20201029 12:47:21.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:21.578" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:47:21.568" endtime="20201029 12:47:21.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.588" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:21.586" endtime="20201029 12:47:21.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.594" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:47:21.590" endtime="20201029 12:47:21.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.580" endtime="20201029 12:47:21.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.076" endtime="20201029 12:47:21.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.076" endtime="20201029 12:47:21.598"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.618" endtime="20201029 12:47:21.629"></status>
</kw>
<msg timestamp="20201029 12:47:21.630" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.615" endtime="20201029 12:47:21.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.636" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.632" endtime="20201029 12:47:21.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.638" endtime="20201029 12:47:21.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.607" endtime="20201029 12:47:21.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.603" endtime="20201029 12:47:21.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.661" endtime="20201029 12:47:22.017"></status>
</kw>
<msg timestamp="20201029 12:47:22.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.800073583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.800074056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.658" endtime="20201029 12:47:22.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.800073583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.800074056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.029" endtime="20201029 12:47:22.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.052" endtime="20201029 12:47:22.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.651" endtime="20201029 12:47:22.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.646" endtime="20201029 12:47:22.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.069" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:47:22.060" endtime="20201029 12:47:22.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:22.080" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 12:47:22.071" endtime="20201029 12:47:22.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.090" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:22.088" endtime="20201029 12:47:22.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.096" level="INFO">VALUE: [4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:47:22.092" endtime="20201029 12:47:22.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.082" endtime="20201029 12:47:22.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.600" endtime="20201029 12:47:22.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.599" endtime="20201029 12:47:22.100"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.120" endtime="20201029 12:47:22.132"></status>
</kw>
<msg timestamp="20201029 12:47:22.133" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.117" endtime="20201029 12:47:22.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.139" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.135" endtime="20201029 12:47:22.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.142" endtime="20201029 12:47:22.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.109" endtime="20201029 12:47:22.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.105" endtime="20201029 12:47:22.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.164" endtime="20201029 12:47:22.519"></status>
</kw>
<msg timestamp="20201029 12:47:22.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.311987958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.311988431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.161" endtime="20201029 12:47:22.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.311987958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.311988431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.531" endtime="20201029 12:47:22.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.553" endtime="20201029 12:47:22.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.154" endtime="20201029 12:47:22.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.149" endtime="20201029 12:47:22.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.571" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7200000086178306e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:47:22.562" endtime="20201029 12:47:22.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:22.583" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:47:22.573" endtime="20201029 12:47:22.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.593" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:22.591" endtime="20201029 12:47:22.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.598" level="INFO">VALUE: [4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07]</msg>
<status status="PASS" starttime="20201029 12:47:22.595" endtime="20201029 12:47:22.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.585" endtime="20201029 12:47:22.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.102" endtime="20201029 12:47:22.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.101" endtime="20201029 12:47:22.603"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.623" endtime="20201029 12:47:22.633"></status>
</kw>
<msg timestamp="20201029 12:47:22.635" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.619" endtime="20201029 12:47:22.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.641" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.637" endtime="20201029 12:47:22.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.643" endtime="20201029 12:47:22.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.612" endtime="20201029 12:47:22.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.608" endtime="20201029 12:47:22.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.666" endtime="20201029 12:47:23.022"></status>
</kw>
<msg timestamp="20201029 12:47:23.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.804143972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.804144444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.663" endtime="20201029 12:47:23.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.804143972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.804144444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.034" endtime="20201029 12:47:23.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.059" endtime="20201029 12:47:23.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.655" endtime="20201029 12:47:23.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.651" endtime="20201029 12:47:23.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.081" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000086178306e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 12:47:23.070" endtime="20201029 12:47:23.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:23.095" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:47:23.083" endtime="20201029 12:47:23.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.107" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:23.105" endtime="20201029 12:47:23.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.115" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:47:23.111" endtime="20201029 12:47:23.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.097" endtime="20201029 12:47:23.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.604" endtime="20201029 12:47:23.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.603" endtime="20201029 12:47:23.121"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.146" endtime="20201029 12:47:23.158"></status>
</kw>
<msg timestamp="20201029 12:47:23.160" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.142" endtime="20201029 12:47:23.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.167" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.162" endtime="20201029 12:47:23.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.170" endtime="20201029 12:47:23.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.133" endtime="20201029 12:47:23.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.127" endtime="20201029 12:47:23.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.199" endtime="20201029 12:47:23.565"></status>
</kw>
<msg timestamp="20201029 12:47:23.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.296462472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.296462944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.195" endtime="20201029 12:47:23.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.296462472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.296462944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.577" endtime="20201029 12:47:23.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.599" endtime="20201029 12:47:23.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.186" endtime="20201029 12:47:23.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.181" endtime="20201029 12:47:23.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.617" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7200000086178306e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:47:23.607" endtime="20201029 12:47:23.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:23.627" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:47:23.619" endtime="20201029 12:47:23.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.637" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:23.635" endtime="20201029 12:47:23.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.643" level="INFO">VALUE: [4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:47:23.639" endtime="20201029 12:47:23.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.629" endtime="20201029 12:47:23.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.123" endtime="20201029 12:47:23.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.122" endtime="20201029 12:47:23.647"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.667" endtime="20201029 12:47:23.679"></status>
</kw>
<msg timestamp="20201029 12:47:23.680" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.664" endtime="20201029 12:47:23.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.686" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.683" endtime="20201029 12:47:23.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.689" endtime="20201029 12:47:23.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.657" endtime="20201029 12:47:23.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.652" endtime="20201029 12:47:23.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.713" endtime="20201029 12:47:24.078"></status>
</kw>
<msg timestamp="20201029 12:47:24.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.812106667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.812107139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.708" endtime="20201029 12:47:24.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.812106667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.812107139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.090" endtime="20201029 12:47:24.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.112" endtime="20201029 12:47:24.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.701" endtime="20201029 12:47:24.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.697" endtime="20201029 12:47:24.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.129" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 12:47:24.120" endtime="20201029 12:47:24.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:24.141" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73...</msg>
<status status="PASS" starttime="20201029 12:47:24.131" endtime="20201029 12:47:24.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.155" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:24.152" endtime="20201029 12:47:24.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.160" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:47:24.157" endtime="20201029 12:47:24.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.143" endtime="20201029 12:47:24.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.649" endtime="20201029 12:47:24.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.648" endtime="20201029 12:47:24.165"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.185" endtime="20201029 12:47:24.195"></status>
</kw>
<msg timestamp="20201029 12:47:24.197" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.181" endtime="20201029 12:47:24.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.203" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.199" endtime="20201029 12:47:24.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.205" endtime="20201029 12:47:24.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.174" endtime="20201029 12:47:24.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.170" endtime="20201029 12:47:24.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.229" endtime="20201029 12:47:24.596"></status>
</kw>
<msg timestamp="20201029 12:47:24.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.322359028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.3223595, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:24.225" endtime="20201029 12:47:24.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.322359028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.3223595, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:24.607" endtime="20201029 12:47:24.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.629" endtime="20201029 12:47:24.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.218" endtime="20201029 12:47:24.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.213" endtime="20201029 12:47:24.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.648" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.720000017499615e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}...</msg>
<status status="PASS" starttime="20201029 12:47:24.638" endtime="20201029 12:47:24.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:24.664" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 12:47:24.650" endtime="20201029 12:47:24.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.674" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:24.672" endtime="20201029 12:47:24.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.679" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:47:24.676" endtime="20201029 12:47:24.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.666" endtime="20201029 12:47:24.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.166" endtime="20201029 12:47:24.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.166" endtime="20201029 12:47:24.684"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.703" endtime="20201029 12:47:24.714"></status>
</kw>
<msg timestamp="20201029 12:47:24.715" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.700" endtime="20201029 12:47:24.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.721" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.717" endtime="20201029 12:47:24.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.724" endtime="20201029 12:47:24.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.693" endtime="20201029 12:47:24.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.689" endtime="20201029 12:47:24.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.748" endtime="20201029 12:47:25.105"></status>
</kw>
<msg timestamp="20201029 12:47:25.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.828613847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.828614319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.744" endtime="20201029 12:47:25.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.828613847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.828614319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.116" endtime="20201029 12:47:25.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.138" endtime="20201029 12:47:25.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.737" endtime="20201029 12:47:25.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.732" endtime="20201029 12:47:25.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.156" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 12:47:25.146" endtime="20201029 12:47:25.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:25.166" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:47:25.158" endtime="20201029 12:47:25.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.176" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:25.174" endtime="20201029 12:47:25.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.182" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:47:25.179" endtime="20201029 12:47:25.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.168" endtime="20201029 12:47:25.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.685" endtime="20201029 12:47:25.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.684" endtime="20201029 12:47:25.186"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.206" endtime="20201029 12:47:25.218"></status>
</kw>
<msg timestamp="20201029 12:47:25.220" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.203" endtime="20201029 12:47:25.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.226" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.222" endtime="20201029 12:47:25.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.228" endtime="20201029 12:47:25.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.196" endtime="20201029 12:47:25.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.191" endtime="20201029 12:47:25.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.252" endtime="20201029 12:47:25.604"></status>
</kw>
<msg timestamp="20201029 12:47:25.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.336419681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.336420153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.249" endtime="20201029 12:47:25.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.336419681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.336420153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.615" endtime="20201029 12:47:25.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.637" endtime="20201029 12:47:25.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.242" endtime="20201029 12:47:25.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.237" endtime="20201029 12:47:25.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.655" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 12:47:25.646" endtime="20201029 12:47:25.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:25.667" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:47:25.657" endtime="20201029 12:47:25.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.677" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:25.675" endtime="20201029 12:47:25.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.683" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000017499615e-07]</msg>
<status status="PASS" starttime="20201029 12:47:25.679" endtime="20201029 12:47:25.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.669" endtime="20201029 12:47:25.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.188" endtime="20201029 12:47:25.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.187" endtime="20201029 12:47:25.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.348" endtime="20201029 12:47:25.687"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:15.164" endtime="20201029 12:47:25.689" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.710" endtime="20201029 12:47:25.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.706" endtime="20201029 12:47:25.733"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.767" endtime="20201029 12:47:25.782"></status>
</kw>
<msg timestamp="20201029 12:47:25.783" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.763" endtime="20201029 12:47:25.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.789" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.785" endtime="20201029 12:47:25.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.796" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:25.792" endtime="20201029 12:47:25.797"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:25.755" endtime="20201029 12:47:25.798"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:25.749" endtime="20201029 12:47:25.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.747" endtime="20201029 12:47:25.801"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:25.808" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:25.807" endtime="20201029 12:47:25.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.803" endtime="20201029 12:47:25.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.745" endtime="20201029 12:47:25.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.743" endtime="20201029 12:47:25.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.812" endtime="20201029 12:47:25.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.739" endtime="20201029 12:47:25.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.735" endtime="20201029 12:47:25.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.704" endtime="20201029 12:47:25.819"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.843" endtime="20201029 12:47:25.855"></status>
</kw>
<msg timestamp="20201029 12:47:25.856" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.839" endtime="20201029 12:47:25.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.862" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.858" endtime="20201029 12:47:25.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.864" endtime="20201029 12:47:25.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.830" endtime="20201029 12:47:25.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.825" endtime="20201029 12:47:25.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.887" endtime="20201029 12:47:26.227"></status>
</kw>
<msg timestamp="20201029 12:47:26.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123648819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.123658528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.884" endtime="20201029 12:47:26.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123648819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.123658528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.236" endtime="20201029 12:47:26.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.255" endtime="20201029 12:47:26.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.877" endtime="20201029 12:47:26.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.872" endtime="20201029 12:47:26.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.273" level="INFO">${RESULT} = [{'diff': 9.709000000010515e-06}, {'diff': 9.416999999997677e-06}, {'diff': 8.847000000006267e-06}, {'diff': 9.444999999996817e-06}, {'diff': 8.916999999997177e-06}, {'diff': 9.597000000000078e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:47:26.264" endtime="20201029 12:47:26.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:26.282" level="INFO">${OVERHEAD} = {'diff': [9.709000000010515e-06, 9.416999999997677e-06, 8.847000000006267e-06, 9.444999999996817e-06, 8.916999999997177e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.7639...</msg>
<status status="PASS" starttime="20201029 12:47:26.275" endtime="20201029 12:47:26.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.292" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:26.290" endtime="20201029 12:47:26.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.299" level="INFO">VALUE: [9.709000000010515e-06, 9.416999999997677e-06, 8.847000000006267e-06, 9.444999999996817e-06, 8.916999999997177e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.763999999995443e-06, 9.250000000002312e-06, 9.110999999992209e-06, 9.624999999999218e-06, 9.416999999997677e-06, 9.388999999998537e-06, 9.583999999993043e-06, 9.110999999992209e-06, 9.611000000006586e-06, 9.444000000011221e-06, 9.431000000004186e-06, 9.806000000001092e-06, 9.431000000004186e-06, 9.097999999999051e-06, 9.2769999999881e-06, 9.778000000001952e-06, 9.124999999998717e-06, 9.472000000010361e-06, 9.083999999992542e-06, 9.763999999995443e-06, 9.096999999999578e-06, 9.26400000000882e-06, 8.916999999997177e-06, 8.915999999997704e-06, 9.152999999997857e-06, 9.806000000001092e-06, 9.124999999998717e-06, 9.278000000001452e-06, 9.445000000010695e-06, 8.943999999996843e-06, 9.542000000001272e-06, 8.916999999997177e-06, 8.903000000004546e-06, 9.096999999999578e-06, 9.278000000001452e-06, 9.26299999999547e-06, 9.096999999999578e-06, 9.79200000000846e-06, 9.110999999992209e-06, 9.416999999997677e-06, 9.083000000006947e-06, 9.306000000000592e-06]</msg>
<status status="PASS" starttime="20201029 12:47:26.296" endtime="20201029 12:47:26.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.284" endtime="20201029 12:47:26.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.822" endtime="20201029 12:47:26.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.821" endtime="20201029 12:47:26.303"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.324" endtime="20201029 12:47:26.336"></status>
</kw>
<msg timestamp="20201029 12:47:26.337" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.320" endtime="20201029 12:47:26.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.344" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.340" endtime="20201029 12:47:26.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.347" endtime="20201029 12:47:26.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.313" endtime="20201029 12:47:26.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.308" endtime="20201029 12:47:26.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.375" endtime="20201029 12:47:26.732"></status>
</kw>
<msg timestamp="20201029 12:47:26.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124262611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.124272056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.371" endtime="20201029 12:47:26.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124262611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.124272056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.744" endtime="20201029 12:47:26.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.766" endtime="20201029 12:47:26.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.363" endtime="20201029 12:47:26.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.357" endtime="20201029 12:47:26.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.784" level="INFO">${RESULT} = [{'diff': 9.445000000010695e-06}, {'diff': 8.943999999996843e-06}, {'diff': 9.542000000001272e-06}, {'diff': 8.916999999997177e-06}, {'diff': 8.903000000004546e-06}, {'diff': 9.096999999999578e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:47:26.775" endtime="20201029 12:47:26.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:26.796" level="INFO">${OVERHEAD} = {'diff': [9.445000000010695e-06, 8.943999999996843e-06, 9.542000000001272e-06, 8.916999999997177e-06, 8.903000000004546e-06, 9.096999999999578e-06, 9.278000000001452e-06, 9.26299999999547e-06, 9.09699...</msg>
<status status="PASS" starttime="20201029 12:47:26.786" endtime="20201029 12:47:26.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.806" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:26.804" endtime="20201029 12:47:26.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.811" level="INFO">VALUE: [9.445000000010695e-06, 8.943999999996843e-06, 9.542000000001272e-06, 8.916999999997177e-06, 8.903000000004546e-06, 9.096999999999578e-06, 9.278000000001452e-06, 9.26299999999547e-06, 9.096999999999578e-06, 9.79200000000846e-06, 9.110999999992209e-06, 9.416999999997677e-06, 9.083000000006947e-06, 9.306000000000592e-06, 9.290999999911342e-06, 8.916999999941666e-06, 8.929999999907068e-06, 9.6670000000465e-06, 9.444000000025099e-06, 9.083999999992542e-06, 9.110999999895064e-06, 9.431000000059697e-06, 9.431000000059697e-06, 8.930999999989808e-06, 9.444000000025099e-06, 9.111000000006086e-06, 8.94500000003795e-06, 9.37499999997815e-06, 9.652999999998357e-06, 9.276999999974223e-06, 9.249999999960679e-06, 9.26400000000882e-06, 9.375000000089173e-06, 9.417000000011555e-06, 9.596999999916811e-06, 9.763999999967687e-06, 9.707999999997163e-06, 9.124999999943206e-06, 9.26400000000882e-06, 9.096999999957944e-06, 8.94399999995521e-06, 9.763999999967687e-06, 9.207999999927274e-06, 9.597999999999551e-06, 9.596999999916811e-06, 9.57000000001429e-06, 9.278000000056963e-06, 8.972000000051494e-06, 9.597000000027833e-06, 9.611000000075975e-06, 9.111000000006086e-06, 9.417000000011555e-06, 9.096999999957944e-06, 9.26400000000882e-06, 9.26400000000882e-06, 9.763999999967687e-06, 8.958000000003352e-06, 9.749999999919545e-06, 9.444999999996817e-06, 9.111000000006086e-06, 9.833999999986354e-06, 9.76400000007871e-06, 9.111000000006086e-06, 9.37499999997815e-06]</msg>
<status status="PASS" starttime="20201029 12:47:26.808" endtime="20201029 12:47:26.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.798" endtime="20201029 12:47:26.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.305" endtime="20201029 12:47:26.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.304" endtime="20201029 12:47:26.816"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.836" endtime="20201029 12:47:26.847"></status>
</kw>
<msg timestamp="20201029 12:47:26.849" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.832" endtime="20201029 12:47:26.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.855" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.851" endtime="20201029 12:47:26.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.857" endtime="20201029 12:47:26.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.825" endtime="20201029 12:47:26.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.821" endtime="20201029 12:47:26.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.880" endtime="20201029 12:47:27.238"></status>
</kw>
<msg timestamp="20201029 12:47:27.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.596380028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.596389139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.877" endtime="20201029 12:47:27.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.596380028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.596389139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.250" endtime="20201029 12:47:27.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.272" endtime="20201029 12:47:27.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.870" endtime="20201029 12:47:27.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.865" endtime="20201029 12:47:27.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.292" level="INFO">${RESULT} = [{'diff': 9.111000000006086e-06}, {'diff': 9.417000000011555e-06}, {'diff': 9.096999999957944e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.763999999967687e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:27.281" endtime="20201029 12:47:27.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:27.303" level="INFO">${OVERHEAD} = {'diff': [9.111000000006086e-06, 9.417000000011555e-06, 9.096999999957944e-06, 9.26400000000882e-06, 9.26400000000882e-06, 9.763999999967687e-06, 8.958000000003352e-06, 9.749999999919545e-06, 9.444999...</msg>
<status status="PASS" starttime="20201029 12:47:27.294" endtime="20201029 12:47:27.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.313" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:27.311" endtime="20201029 12:47:27.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.318" level="INFO">VALUE: [9.111000000006086e-06, 9.417000000011555e-06, 9.096999999957944e-06, 9.26400000000882e-06, 9.26400000000882e-06, 9.763999999967687e-06, 8.958000000003352e-06, 9.749999999919545e-06, 9.444999999996817e-06, 9.111000000006086e-06, 9.833999999986354e-06, 9.76400000007871e-06, 9.111000000006086e-06, 9.37499999997815e-06, 9.431000000059697e-06, 9.111999999866782e-06, 9.930000000046846e-06, 9.777999999904807e-06, 9.096999999957944e-06, 9.597999999888529e-06, 9.778000000126852e-06, 9.54100000005731e-06, 9.278000000056963e-06, 9.776999999822067e-06, 9.763999999856665e-06, 9.26400000000882e-06, 9.208999999898992e-06, 9.429999999976957e-06, 9.471999999899339e-06, 9.098000000040685e-06, 8.930999999989808e-06, 9.29199999988306e-06, 9.444999999885795e-06, 9.44500000010784e-06, 9.26400000000882e-06, 8.930999999989808e-06, 9.930000000046846e-06, 9.096999999957944e-06, 9.777999999904807e-06, 9.250000000182723e-06, 9.611000000075975e-06, 9.778000000126852e-06, 9.111000000006086e-06, 9.598000000110574e-06, 9.249999999960679e-06, 9.276999999974223e-06, 9.431000000059697e-06, 9.292000000105105e-06, 9.417000000011555e-06, 9.096999999957944e-06, 9.999999999843467e-06, 9.778000000126852e-06, 9.444000000025099e-06, 9.083000000131847e-06, 9.596999999805789e-06, 9.096999999957944e-06, 9.083000000131847e-06, 9.541999999918005e-06, 9.846999999840733e-06, 9.26400000000882e-06, 9.582999999979691e-06, 9.26400000000882e-06, 9.429999999976957e-06, 9.611999999936671e-06]</msg>
<status status="PASS" starttime="20201029 12:47:27.315" endtime="20201029 12:47:27.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.305" endtime="20201029 12:47:27.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.817" endtime="20201029 12:47:27.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.816" endtime="20201029 12:47:27.323"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.343" endtime="20201029 12:47:27.362"></status>
</kw>
<msg timestamp="20201029 12:47:27.363" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.340" endtime="20201029 12:47:27.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.369" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.365" endtime="20201029 12:47:27.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.372" endtime="20201029 12:47:27.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.333" endtime="20201029 12:47:27.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.328" endtime="20201029 12:47:27.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.398" endtime="20201029 12:47:27.773"></status>
</kw>
<msg timestamp="20201029 12:47:27.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.097974181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.097984181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.394" endtime="20201029 12:47:27.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.097974181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.097984181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.784" endtime="20201029 12:47:27.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.806" endtime="20201029 12:47:27.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.385" endtime="20201029 12:47:27.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.380" endtime="20201029 12:47:27.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.824" level="INFO">${RESULT} = [{'diff': 9.999999999843467e-06}, {'diff': 9.778000000126852e-06}, {'diff': 9.444000000025099e-06}, {'diff': 9.083000000131847e-06}, {'diff': 9.596999999805789e-06}, {'diff': 9.096999999957944e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:47:27.815" endtime="20201029 12:47:27.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:27.835" level="INFO">${OVERHEAD} = {'diff': [9.999999999843467e-06, 9.778000000126852e-06, 9.444000000025099e-06, 9.083000000131847e-06, 9.596999999805789e-06, 9.096999999957944e-06, 9.083000000131847e-06, 9.541999999918005e-06, 9.8469...</msg>
<status status="PASS" starttime="20201029 12:47:27.827" endtime="20201029 12:47:27.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.846" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:27.844" endtime="20201029 12:47:27.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.852" level="INFO">VALUE: [9.999999999843467e-06, 9.778000000126852e-06, 9.444000000025099e-06, 9.083000000131847e-06, 9.596999999805789e-06, 9.096999999957944e-06, 9.083000000131847e-06, 9.541999999918005e-06, 9.846999999840733e-06, 9.26400000000882e-06, 9.582999999979691e-06, 9.26400000000882e-06, 9.429999999976957e-06, 9.611999999936671e-06, 9.611000000075975e-06, 9.292000000105105e-06, 9.930000000046846e-06, 9.26400000000882e-06, 9.776999999822067e-06, 9.597999999888529e-06, 9.611000000075975e-06, 9.444000000025099e-06, 9.235999999912536e-06, 9.76299999999597e-06, 9.278000000056963e-06, 9.096999999957944e-06, 9.444000000025099e-06, 9.431000000059697e-06, 9.611000000075975e-06, 9.096999999957944e-06, 9.402999999963413e-06, 9.73600000020447e-06, 9.61099999985393e-06, 9.096999999957944e-06, 9.665999999963759e-06, 9.429999999976957e-06, 9.098000000040685e-06, 9.430999999837653e-06, 8.958000000003352e-06, 9.402999999963413e-06, 9.097000000179989e-06, 9.735999999982425e-06, 9.070000000166445e-06, 8.94399999995521e-06, 8.91600000008097e-06, 8.94399999995521e-06, 8.929999999907068e-06, 9.777000000044112e-06, 9.096999999957944e-06, 9.096999999957944e-06, 8.930999999989808e-06, 9.568999999931549e-06, 9.055999999896258e-06, 9.597000000027833e-06, 9.249999999960679e-06, 9.249999999960679e-06, 8.94399999995521e-06, 9.611000000075975e-06, 9.374999999867129e-06, 9.26400000000882e-06, 9.790999999870209e-06, 9.26400000000882e-06, 8.875000000019284e-06, 9.750000000030568e-06]</msg>
<status status="PASS" starttime="20201029 12:47:27.848" endtime="20201029 12:47:27.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.837" endtime="20201029 12:47:27.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.325" endtime="20201029 12:47:27.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.324" endtime="20201029 12:47:27.856"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.877" endtime="20201029 12:47:27.891"></status>
</kw>
<msg timestamp="20201029 12:47:27.892" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.874" endtime="20201029 12:47:27.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.898" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.894" endtime="20201029 12:47:27.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.901" endtime="20201029 12:47:27.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.867" endtime="20201029 12:47:27.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.861" endtime="20201029 12:47:27.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.927" endtime="20201029 12:47:28.287"></status>
</kw>
<msg timestamp="20201029 12:47:28.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.594778736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.594787667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.923" endtime="20201029 12:47:28.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.594778736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.594787667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.298" endtime="20201029 12:47:28.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.321" endtime="20201029 12:47:28.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.913" endtime="20201029 12:47:28.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.908" endtime="20201029 12:47:28.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.339" level="INFO">${RESULT} = [{'diff': 8.930999999989808e-06}, {'diff': 9.568999999931549e-06}, {'diff': 9.055999999896258e-06}, {'diff': 9.597000000027833e-06}, {'diff': 9.249999999960679e-06}, {'diff': 9.249999999960679e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:47:28.330" endtime="20201029 12:47:28.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:28.351" level="INFO">${OVERHEAD} = {'diff': [8.930999999989808e-06, 9.568999999931549e-06, 9.055999999896258e-06, 9.597000000027833e-06, 9.249999999960679e-06, 9.249999999960679e-06, 8.94399999995521e-06, 9.611000000075975e-06, 9.37499...</msg>
<status status="PASS" starttime="20201029 12:47:28.342" endtime="20201029 12:47:28.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.362" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:28.359" endtime="20201029 12:47:28.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.367" level="INFO">VALUE: [8.930999999989808e-06, 9.568999999931549e-06, 9.055999999896258e-06, 9.597000000027833e-06, 9.249999999960679e-06, 9.249999999960679e-06, 8.94399999995521e-06, 9.611000000075975e-06, 9.374999999867129e-06, 9.26400000000882e-06, 9.790999999870209e-06, 9.26400000000882e-06, 8.875000000019284e-06, 9.750000000030568e-06, 8.930999999989808e-06, 9.431000000059697e-06, 9.458000000073241e-06, 9.111999999866782e-06, 9.76400000007871e-06, 9.76400000007871e-06, 9.278000000279008e-06, 9.26400000000882e-06, 9.431000000059697e-06, 9.096999999957944e-06, 8.987000000182377e-06, 9.61099999985393e-06, 8.944999999815906e-06, 9.76400000007871e-06, 9.597000000027833e-06, 8.986000000099637e-06, 9.597000000027833e-06, 8.944000000177255e-06, 9.777999999904807e-06, 9.096999999957944e-06, 9.292000000105105e-06, 9.597000000027833e-06, 9.096999999957944e-06, 9.291000000022365e-06, 9.444000000247144e-06, 9.61100000029802e-06, 9.278000000279008e-06, 9.319000000118649e-06, 8.915999999636881e-06, 9.41600000015086e-06, 9.431000000059697e-06, 9.790999999648164e-06, 9.26400000000882e-06, 9.402999999963413e-06, 9.944000000317033e-06, 9.791000000092254e-06, 8.929999999907068e-06, 9.777999999904807e-06, 9.26400000000882e-06, 8.888000000428775e-06, 9.028000000022018e-06, 9.26400000000882e-06, 9.61099999985393e-06, 9.26400000000882e-06, 9.402999999963413e-06, 9.41600000015086e-06, 9.598000000110574e-06, 8.945000000259995e-06, 9.4170000002336e-06, 9.26400000000882e-06]</msg>
<status status="PASS" starttime="20201029 12:47:28.364" endtime="20201029 12:47:28.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.353" endtime="20201029 12:47:28.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.858" endtime="20201029 12:47:28.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.857" endtime="20201029 12:47:28.372"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.393" endtime="20201029 12:47:28.409"></status>
</kw>
<msg timestamp="20201029 12:47:28.410" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.389" endtime="20201029 12:47:28.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.417" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.412" endtime="20201029 12:47:28.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.419" endtime="20201029 12:47:28.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.382" endtime="20201029 12:47:28.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.377" endtime="20201029 12:47:28.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.444" endtime="20201029 12:47:28.829"></status>
</kw>
<msg timestamp="20201029 12:47:28.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.119002528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.119011458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.440" endtime="20201029 12:47:28.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.119002528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.119011458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.840" endtime="20201029 12:47:28.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.862" endtime="20201029 12:47:28.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.433" endtime="20201029 12:47:28.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.428" endtime="20201029 12:47:28.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.880" level="INFO">${RESULT} = [{'diff': 8.929999999907068e-06}, {'diff': 9.777999999904807e-06}, {'diff': 9.26400000000882e-06}, {'diff': 8.888000000428775e-06}, {'diff': 9.028000000022018e-06}, {'diff': 9.26400000000882e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:28.871" endtime="20201029 12:47:28.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:28.892" level="INFO">${OVERHEAD} = {'diff': [8.929999999907068e-06, 9.777999999904807e-06, 9.26400000000882e-06, 8.888000000428775e-06, 9.028000000022018e-06, 9.26400000000882e-06, 9.61099999985393e-06, 9.26400000000882e-06, 9.40299999...</msg>
<status status="PASS" starttime="20201029 12:47:28.882" endtime="20201029 12:47:28.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.902" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:28.900" endtime="20201029 12:47:28.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.908" level="INFO">VALUE: [8.929999999907068e-06, 9.777999999904807e-06, 9.26400000000882e-06, 8.888000000428775e-06, 9.028000000022018e-06, 9.26400000000882e-06, 9.61099999985393e-06, 9.26400000000882e-06, 9.402999999963413e-06, 9.41600000015086e-06, 9.598000000110574e-06, 8.945000000259995e-06, 9.4170000002336e-06, 9.26400000000882e-06, 9.597000000027833e-06, 9.110999999784042e-06, 9.431000000059697e-06, 9.444999999885795e-06, 9.625000000124118e-06, 9.431000000059697e-06, 9.61099999985393e-06, 9.111000000228131e-06, 9.76400000007871e-06, 9.096999999957944e-06, 9.26400000000882e-06, 9.125000000054229e-06, 9.098000000040685e-06, 8.944999999815906e-06, 9.777999999904807e-06, 9.193999999990154e-06, 9.153000000150513e-06, 9.777999999904807e-06, 9.111000000228131e-06, 9.750000000252612e-06, 9.76400000007871e-06, 9.278000000279008e-06, 9.26400000000882e-06, 9.721999999712239e-06, 9.638999999950215e-06, 9.76400000007871e-06, 9.096999999957944e-06, 9.429999999976957e-06, 9.26400000000882e-06, 9.76400000007871e-06, 9.26400000000882e-06, 9.277999999834918e-06, 9.429999999976957e-06, 9.958999999781781e-06, 9.4170000002336e-06, 9.777999999904807e-06, 8.929999999907068e-06, 9.444000000247144e-06, 9.76299999999597e-06, 9.76400000007871e-06, 9.776999999822067e-06, 9.125000000054229e-06, 9.431000000059697e-06, 9.083000000131847e-06, 9.51400000026581e-06, 9.402999999963413e-06, 9.111000000228131e-06, 9.0699999999444e-06, 9.778000000348896e-06, 9.431000000059697e-06]</msg>
<status status="PASS" starttime="20201029 12:47:28.904" endtime="20201029 12:47:28.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.894" endtime="20201029 12:47:28.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.374" endtime="20201029 12:47:28.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.373" endtime="20201029 12:47:28.912"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.932" endtime="20201029 12:47:28.944"></status>
</kw>
<msg timestamp="20201029 12:47:28.945" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.928" endtime="20201029 12:47:28.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.951" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.947" endtime="20201029 12:47:28.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.953" endtime="20201029 12:47:28.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.921" endtime="20201029 12:47:28.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.917" endtime="20201029 12:47:28.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.976" endtime="20201029 12:47:29.347"></status>
</kw>
<msg timestamp="20201029 12:47:29.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.624664042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.624672972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.973" endtime="20201029 12:47:29.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.624664042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.624672972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.358" endtime="20201029 12:47:29.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.380" endtime="20201029 12:47:29.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.966" endtime="20201029 12:47:29.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.961" endtime="20201029 12:47:29.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.398" level="INFO">${RESULT} = [{'diff': 8.929999999907068e-06}, {'diff': 9.444000000247144e-06}, {'diff': 9.76299999999597e-06}, {'diff': 9.76400000007871e-06}, {'diff': 9.776999999822067e-06}, {'diff': 9.125000000054229e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:29.389" endtime="20201029 12:47:29.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:29.408" level="INFO">${OVERHEAD} = {'diff': [8.929999999907068e-06, 9.444000000247144e-06, 9.76299999999597e-06, 9.76400000007871e-06, 9.776999999822067e-06, 9.125000000054229e-06, 9.431000000059697e-06, 9.083000000131847e-06, 9.514000...</msg>
<status status="PASS" starttime="20201029 12:47:29.400" endtime="20201029 12:47:29.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.418" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:29.416" endtime="20201029 12:47:29.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.424" level="INFO">VALUE: [8.929999999907068e-06, 9.444000000247144e-06, 9.76299999999597e-06, 9.76400000007871e-06, 9.776999999822067e-06, 9.125000000054229e-06, 9.431000000059697e-06, 9.083000000131847e-06, 9.51400000026581e-06, 9.402999999963413e-06, 9.111000000228131e-06, 9.0699999999444e-06, 9.778000000348896e-06, 9.431000000059697e-06, 9.278000000279008e-06, 9.250000000182723e-06, 9.098000000040685e-06, 9.597000000027833e-06, 9.777999999904807e-06, 8.916999999719621e-06, 9.014000000195921e-06, 8.875000000241329e-06, 9.278000000279008e-06, 9.429999999976957e-06, 9.249999999738634e-06, 9.0699999999444e-06, 9.26400000000882e-06, 9.098000000040685e-06, 9.31899999967456e-06, 9.76299999999597e-06, 9.429999999976957e-06, 9.429999999976957e-06, 8.929999999907068e-06, 9.597000000027833e-06, 9.6670000000465e-06, 9.695000000142784e-06, 9.277999999834918e-06, 9.444999999885795e-06, 9.098000000040685e-06, 9.51299999973898e-06, 9.943999999872943e-06, 9.541999999918005e-06, 9.249999999738634e-06, 8.944999999815906e-06, 9.791000000092254e-06, 9.458000000073241e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.277999999834918e-06, 9.653000000220402e-06, 9.429999999976957e-06, 9.61099999985393e-06, 8.959000000086093e-06, 9.582999999757646e-06, 9.931000000129586e-06, 9.458000000073241e-06, 9.0699999999444e-06, 9.277999999834918e-06, 9.76399999963462e-06, 9.291000000022365e-06, 9.096999999957944e-06, 8.916999999719621e-06, 9.583999999840387e-06, 9.847000000284822e-06]</msg>
<status status="PASS" starttime="20201029 12:47:29.421" endtime="20201029 12:47:29.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.410" endtime="20201029 12:47:29.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.914" endtime="20201029 12:47:29.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.913" endtime="20201029 12:47:29.429"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.451" endtime="20201029 12:47:29.464"></status>
</kw>
<msg timestamp="20201029 12:47:29.465" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.446" endtime="20201029 12:47:29.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.471" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.467" endtime="20201029 12:47:29.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.473" endtime="20201029 12:47:29.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.439" endtime="20201029 12:47:29.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.434" endtime="20201029 12:47:29.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.496" endtime="20201029 12:47:29.863"></status>
</kw>
<msg timestamp="20201029 12:47:29.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.153343389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.153352819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.493" endtime="20201029 12:47:29.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.153343389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.153352819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.874" endtime="20201029 12:47:29.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.896" endtime="20201029 12:47:29.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.486" endtime="20201029 12:47:29.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.481" endtime="20201029 12:47:29.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.914" level="INFO">${RESULT} = [{'diff': 9.429999999976957e-06}, {'diff': 9.61099999985393e-06}, {'diff': 8.959000000086093e-06}, {'diff': 9.582999999757646e-06}, {'diff': 9.931000000129586e-06}, {'diff': 9.458000000073241e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:29.904" endtime="20201029 12:47:29.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:29.925" level="INFO">${OVERHEAD} = {'diff': [9.429999999976957e-06, 9.61099999985393e-06, 8.959000000086093e-06, 9.582999999757646e-06, 9.931000000129586e-06, 9.458000000073241e-06, 9.0699999999444e-06, 9.277999999834918e-06, 9.7639999...</msg>
<status status="PASS" starttime="20201029 12:47:29.916" endtime="20201029 12:47:29.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.935" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:29.933" endtime="20201029 12:47:29.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.941" level="INFO">VALUE: [9.429999999976957e-06, 9.61099999985393e-06, 8.959000000086093e-06, 9.582999999757646e-06, 9.931000000129586e-06, 9.458000000073241e-06, 9.0699999999444e-06, 9.277999999834918e-06, 9.76399999963462e-06, 9.291000000022365e-06, 9.096999999957944e-06, 8.916999999719621e-06, 9.583999999840387e-06, 9.847000000284822e-06, 9.250000000182723e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.277000000196267e-06, 9.096999999957944e-06, 9.582999999757646e-06, 9.096999999957944e-06, 9.76399999963462e-06, 9.597000000027833e-06, 9.61100000029802e-06, 9.917000000303489e-06, 9.611999999936671e-06, 9.098000000040685e-06, 9.278000000279008e-06, 9.76399999963462e-06, 9.777999999904807e-06, 9.083000000131847e-06, 9.110999999784042e-06, 9.6670000000465e-06, 8.916999999719621e-06, 9.276999999752178e-06, 9.76400000007871e-06, 9.61099999985393e-06, 9.431000000059697e-06, 9.76299999999597e-06, 9.084000000214587e-06, 9.26400000000882e-06, 9.277999999834918e-06, 9.3199999997573e-06, 9.444999999885795e-06, 9.110999999784042e-06, 8.944000000177255e-06, 9.76400000007871e-06, 9.111999999866782e-06, 9.278000000279008e-06, 9.429999999976957e-06, 9.110999999784042e-06, 9.611999999936671e-06, 9.082999999687758e-06, 9.26400000000882e-06, 8.930999999989808e-06, 9.096999999957944e-06, 9.792000000174994e-06, 9.431000000059697e-06, 9.153000000150513e-06, 9.76400000007871e-06, 9.76400000007871e-06, 9.429999999976957e-06, 9.250000000182723e-06, 9.582999999757646e-06]</msg>
<status status="PASS" starttime="20201029 12:47:29.938" endtime="20201029 12:47:29.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.927" endtime="20201029 12:47:29.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.431" endtime="20201029 12:47:29.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.429" endtime="20201029 12:47:29.946"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.965" endtime="20201029 12:47:29.977"></status>
</kw>
<msg timestamp="20201029 12:47:29.978" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.962" endtime="20201029 12:47:29.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.985" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.981" endtime="20201029 12:47:29.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.987" endtime="20201029 12:47:29.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.955" endtime="20201029 12:47:29.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.951" endtime="20201029 12:47:29.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.011" endtime="20201029 12:47:30.391"></status>
</kw>
<msg timestamp="20201029 12:47:30.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.664216181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.664225292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.007" endtime="20201029 12:47:30.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.664216181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.664225292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.403" endtime="20201029 12:47:30.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.425" endtime="20201029 12:47:30.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.999" endtime="20201029 12:47:30.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.995" endtime="20201029 12:47:30.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.443" level="INFO">${RESULT} = [{'diff': 9.110999999784042e-06}, {'diff': 9.611999999936671e-06}, {'diff': 9.082999999687758e-06}, {'diff': 9.26400000000882e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.096999999957944e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:30.433" endtime="20201029 12:47:30.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:30.455" level="INFO">${OVERHEAD} = {'diff': [9.110999999784042e-06, 9.611999999936671e-06, 9.082999999687758e-06, 9.26400000000882e-06, 8.930999999989808e-06, 9.096999999957944e-06, 9.792000000174994e-06, 9.431000000059697e-06, 9.15300...</msg>
<status status="PASS" starttime="20201029 12:47:30.445" endtime="20201029 12:47:30.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.468" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:30.465" endtime="20201029 12:47:30.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.474" level="INFO">VALUE: [9.110999999784042e-06, 9.611999999936671e-06, 9.082999999687758e-06, 9.26400000000882e-06, 8.930999999989808e-06, 9.096999999957944e-06, 9.792000000174994e-06, 9.431000000059697e-06, 9.153000000150513e-06, 9.76400000007871e-06, 9.76400000007871e-06, 9.429999999976957e-06, 9.250000000182723e-06, 9.582999999757646e-06, 9.597000000027833e-06, 9.235999999468447e-06, 9.431000000503786e-06, 9.110999999784042e-06, 9.430000000421046e-06, 9.110999999784042e-06, 9.304999999848462e-06, 9.638999999950215e-06, 9.443999999803054e-06, 9.11100000067222e-06, 9.764000000522799e-06, 9.11100000067222e-06, 8.930999999989808e-06, 9.096999999513855e-06, 9.26400000000882e-06, 9.125000000054229e-06, 9.777999999904807e-06, 9.459000000155982e-06, 8.999999999481645e-06, 9.096999999513855e-06, 9.152999999706424e-06, 8.944000000177255e-06, 9.61100000029802e-06, 9.679999999789857e-06, 9.596999999139655e-06, 9.556000000188192e-06, 9.06899999986166e-06, 9.80600000044518e-06, 9.110999999784042e-06, 9.056000000562392e-06, 9.638999999950215e-06, 9.776999999822067e-06, 9.277999999390829e-06, 9.76399999963462e-06, 9.444999999885795e-06, 9.598000000110574e-06, 9.278000000279008e-06, 8.930999999989808e-06, 9.930000000046846e-06, 9.097000000402033e-06, 8.916999999719621e-06, 9.429999999532868e-06, 9.66699999960241e-06, 9.083000000131847e-06, 9.597000000027833e-06, 9.416999999345421e-06, 9.445000000773973e-06, 9.583999999840387e-06, 9.597000000027833e-06, 9.249999999738634e-06]</msg>
<status status="PASS" starttime="20201029 12:47:30.470" endtime="20201029 12:47:30.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.457" endtime="20201029 12:47:30.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.947" endtime="20201029 12:47:30.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.946" endtime="20201029 12:47:30.478"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.499" endtime="20201029 12:47:30.513"></status>
</kw>
<msg timestamp="20201029 12:47:30.514" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.496" endtime="20201029 12:47:30.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.520" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.516" endtime="20201029 12:47:30.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.522" endtime="20201029 12:47:30.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.488" endtime="20201029 12:47:30.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.484" endtime="20201029 12:47:30.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.546" endtime="20201029 12:47:30.918"></status>
</kw>
<msg timestamp="20201029 12:47:30.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.168030389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.168039667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.543" endtime="20201029 12:47:30.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.168030389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.168039667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.929" endtime="20201029 12:47:30.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.952" endtime="20201029 12:47:30.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.535" endtime="20201029 12:47:30.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.530" endtime="20201029 12:47:30.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.981" level="INFO">${RESULT} = [{'diff': 9.278000000279008e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.930000000046846e-06}, {'diff': 9.097000000402033e-06}, {'diff': 8.916999999719621e-06}, {'diff': 9.429999999532868e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:47:30.962" endtime="20201029 12:47:30.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:30.993" level="INFO">${OVERHEAD} = {'diff': [9.278000000279008e-06, 8.930999999989808e-06, 9.930000000046846e-06, 9.097000000402033e-06, 8.916999999719621e-06, 9.429999999532868e-06, 9.66699999960241e-06, 9.083000000131847e-06, 9.59700...</msg>
<status status="PASS" starttime="20201029 12:47:30.984" endtime="20201029 12:47:30.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.005" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:31.002" endtime="20201029 12:47:31.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.012" level="INFO">VALUE: [9.278000000279008e-06, 8.930999999989808e-06, 9.930000000046846e-06, 9.097000000402033e-06, 8.916999999719621e-06, 9.429999999532868e-06, 9.66699999960241e-06, 9.083000000131847e-06, 9.597000000027833e-06, 9.416999999345421e-06, 9.445000000773973e-06, 9.583999999840387e-06, 9.597000000027833e-06, 9.249999999738634e-06, 9.236000000356626e-06, 9.624999999680028e-06, 9.610999999409842e-06, 8.929999999907068e-06, 9.61100000029802e-06, 9.597000000027833e-06, 9.61100000029802e-06, 9.290999999578275e-06, 9.540999999835265e-06, 9.402999999963413e-06, 8.930000000795246e-06, 9.098000000484774e-06, 9.375000000311218e-06, 9.096999999513855e-06, 8.944000000177255e-06, 9.152999999706424e-06, 9.597000000027833e-06, 9.26400000000882e-06, 9.597000000027833e-06, 9.097000000402033e-06, 8.944000000177255e-06, 9.929999999158667e-06, 9.56899999948746e-06, 9.597000000027833e-06, 9.332999999500657e-06, 9.430000000421046e-06, 9.278000000279008e-06, 9.597000000027833e-06, 9.638999999950215e-06, 9.777999999904807e-06, 9.4170000002336e-06, 9.750000000252612e-06, 9.625000000568207e-06, 9.125000000054229e-06, 9.110999999784042e-06, 9.819000000632627e-06, 9.278000000279008e-06, 9.111999999866782e-06, 9.429999999532868e-06, 9.472000000343428e-06, 9.097000000402033e-06, 9.429999999532868e-06, 9.443999999803054e-06, 9.777999999904807e-06, 9.26400000000882e-06, 9.097000000402033e-06, 9.389000000581404e-06, 9.499999999995623e-06, 8.91600000052506e-06, 9.096999999513855e-06]</msg>
<status status="PASS" starttime="20201029 12:47:31.008" endtime="20201029 12:47:31.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.995" endtime="20201029 12:47:31.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.480" endtime="20201029 12:47:31.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.479" endtime="20201029 12:47:31.016"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.036" endtime="20201029 12:47:31.050"></status>
</kw>
<msg timestamp="20201029 12:47:31.051" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.033" endtime="20201029 12:47:31.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.057" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.053" endtime="20201029 12:47:31.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.059" endtime="20201029 12:47:31.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.026" endtime="20201029 12:47:31.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.021" endtime="20201029 12:47:31.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.086" endtime="20201029 12:47:31.447"></status>
</kw>
<msg timestamp="20201029 12:47:31.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.692256875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.692266153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.079" endtime="20201029 12:47:31.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.692256875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.692266153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.459" endtime="20201029 12:47:31.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.480" endtime="20201029 12:47:31.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.072" endtime="20201029 12:47:31.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.067" endtime="20201029 12:47:31.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.498" level="INFO">${RESULT} = [{'diff': 9.278000000279008e-06}, {'diff': 9.111999999866782e-06}, {'diff': 9.429999999532868e-06}, {'diff': 9.472000000343428e-06}, {'diff': 9.097000000402033e-06}, {'diff': 9.429999999532868e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:47:31.489" endtime="20201029 12:47:31.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:31.511" level="INFO">${OVERHEAD} = {'diff': [9.278000000279008e-06, 9.111999999866782e-06, 9.429999999532868e-06, 9.472000000343428e-06, 9.097000000402033e-06, 9.429999999532868e-06, 9.443999999803054e-06, 9.777999999904807e-06, 9.2640...</msg>
<status status="PASS" starttime="20201029 12:47:31.501" endtime="20201029 12:47:31.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.521" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:31.519" endtime="20201029 12:47:31.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.527" level="INFO">VALUE: [9.278000000279008e-06, 9.111999999866782e-06, 9.429999999532868e-06, 9.472000000343428e-06, 9.097000000402033e-06, 9.429999999532868e-06, 9.443999999803054e-06, 9.777999999904807e-06, 9.26400000000882e-06, 9.097000000402033e-06, 9.389000000581404e-06, 9.499999999995623e-06, 8.91600000052506e-06, 9.096999999513855e-06, 9.028000000022018e-06, 9.792000000174994e-06, 9.249999999738634e-06, 9.750000000252612e-06, 9.277999999390829e-06, 8.929999999907068e-06, 9.305999999931203e-06, 9.458000000073241e-06, 9.61100000029802e-06, 9.110999999784042e-06, 9.097000000402033e-06, 8.929999999907068e-06, 9.597000000027833e-06, 9.097000000402033e-06, 9.61100000029802e-06, 9.26400000000882e-06, 9.110999999784042e-06, 9.764000000522799e-06, 9.0699999999444e-06, 9.26400000000882e-06, 9.11100000067222e-06, 8.9170000006078e-06, 9.76299999955188e-06, 8.916999999719621e-06, 8.902999999449435e-06, 9.680999999872597e-06, 8.944000000177255e-06, 8.91600000052506e-06, 8.943999999289076e-06, 9.931000000129586e-06, 9.777999999904807e-06, 9.444000000691233e-06, 9.777999999904807e-06, 9.26400000000882e-06, 8.944000000177255e-06, 8.930999999989808e-06, 9.277000000196267e-06, 9.096999999513855e-06, 9.598000000110574e-06, 9.76399999963462e-06, 9.097000000402033e-06, 9.443999999803054e-06, 9.4170000002336e-06, 9.083000000131847e-06, 9.236999999551188e-06, 9.096999999513855e-06, 9.055000000479652e-06, 9.430999999615608e-06, 9.125000000054229e-06, 9.61100000029802e-06]</msg>
<status status="PASS" starttime="20201029 12:47:31.523" endtime="20201029 12:47:31.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.512" endtime="20201029 12:47:31.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.018" endtime="20201029 12:47:31.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.017" endtime="20201029 12:47:31.532"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.552" endtime="20201029 12:47:31.564"></status>
</kw>
<msg timestamp="20201029 12:47:31.565" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.548" endtime="20201029 12:47:31.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.571" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.567" endtime="20201029 12:47:31.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.573" endtime="20201029 12:47:31.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.541" endtime="20201029 12:47:31.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.537" endtime="20201029 12:47:31.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.597" endtime="20201029 12:47:31.964"></status>
</kw>
<msg timestamp="20201029 12:47:31.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.219503681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.219512958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.594" endtime="20201029 12:47:31.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.219503681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.219512958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.975" endtime="20201029 12:47:31.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.996" endtime="20201029 12:47:32.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.586" endtime="20201029 12:47:32.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.581" endtime="20201029 12:47:32.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.014" level="INFO">${RESULT} = [{'diff': 9.277000000196267e-06}, {'diff': 9.096999999513855e-06}, {'diff': 9.598000000110574e-06}, {'diff': 9.76399999963462e-06}, {'diff': 9.097000000402033e-06}, {'diff': 9.443999999803054e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:32.005" endtime="20201029 12:47:32.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:32.026" level="INFO">${OVERHEAD} = {'diff': [9.277000000196267e-06, 9.096999999513855e-06, 9.598000000110574e-06, 9.76399999963462e-06, 9.097000000402033e-06, 9.443999999803054e-06, 9.4170000002336e-06, 9.083000000131847e-06, 9.2369999...</msg>
<status status="PASS" starttime="20201029 12:47:32.016" endtime="20201029 12:47:32.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.036" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:32.034" endtime="20201029 12:47:32.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.042" level="INFO">VALUE: [9.277000000196267e-06, 9.096999999513855e-06, 9.598000000110574e-06, 9.76399999963462e-06, 9.097000000402033e-06, 9.443999999803054e-06, 9.4170000002336e-06, 9.083000000131847e-06, 9.236999999551188e-06, 9.096999999513855e-06, 9.055000000479652e-06, 9.430999999615608e-06, 9.125000000054229e-06, 9.61100000029802e-06, 9.903000000477391e-06, 9.402999999963413e-06, 9.097000000402033e-06, 9.597000000027833e-06, 9.429999999532868e-06, 8.930999999989808e-06, 9.958999999781781e-06, 9.583999999840387e-06, 9.583999999840387e-06, 9.916000000664837e-06, 8.915999999636881e-06, 9.098000000484774e-06, 9.055999999674214e-06, 9.097000000402033e-06, 8.929999999907068e-06, 9.444000000691233e-06, 9.429999999532868e-06, 9.70900000041297e-06, 9.319000000118649e-06, 9.750000000252612e-06, 9.778000000792986e-06, 9.084000000214587e-06, 9.598000000110574e-06, 8.973000000800369e-06, 9.346999999770844e-06, 9.26400000000882e-06, 8.915999999636881e-06, 8.986000000099637e-06, 9.430000000421046e-06, 9.445000000773973e-06, 9.125000000054229e-06, 9.26400000000882e-06, 9.431000000503786e-06, 9.26400000000882e-06, 9.4170000002336e-06, 9.055999999674214e-06, 9.41600000015086e-06, 8.929999999907068e-06, 9.097999999596595e-06, 9.625000000568207e-06, 9.458000000073241e-06, 9.777000000710245e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.334000000471576e-06, 8.945000000259995e-06, 9.110999999784042e-06, 9.277000000196267e-06, 9.097000000402033e-06, 8.958000000447441e-06]</msg>
<status status="PASS" starttime="20201029 12:47:32.039" endtime="20201029 12:47:32.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.028" endtime="20201029 12:47:32.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.533" endtime="20201029 12:47:32.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.533" endtime="20201029 12:47:32.046"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.066" endtime="20201029 12:47:32.078"></status>
</kw>
<msg timestamp="20201029 12:47:32.079" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.063" endtime="20201029 12:47:32.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.085" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.081" endtime="20201029 12:47:32.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.088" endtime="20201029 12:47:32.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.056" endtime="20201029 12:47:32.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.051" endtime="20201029 12:47:32.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.116" endtime="20201029 12:47:32.484"></status>
</kw>
<msg timestamp="20201029 12:47:32.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.723718653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.723728069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.112" endtime="20201029 12:47:32.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.723718653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.723728069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.495" endtime="20201029 12:47:32.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.517" endtime="20201029 12:47:32.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.104" endtime="20201029 12:47:32.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.098" endtime="20201029 12:47:32.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.535" level="INFO">${RESULT} = [{'diff': 9.41600000015086e-06}, {'diff': 8.929999999907068e-06}, {'diff': 9.097999999596595e-06}, {'diff': 9.625000000568207e-06}, {'diff': 9.458000000073241e-06}, {'diff': 9.777000000710245e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:32.525" endtime="20201029 12:47:32.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:32.546" level="INFO">${OVERHEAD} = {'diff': [9.41600000015086e-06, 8.929999999907068e-06, 9.097999999596595e-06, 9.625000000568207e-06, 9.458000000073241e-06, 9.777000000710245e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.334000...</msg>
<status status="PASS" starttime="20201029 12:47:32.537" endtime="20201029 12:47:32.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.556" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:32.554" endtime="20201029 12:47:32.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.562" level="INFO">VALUE: [9.41600000015086e-06, 8.929999999907068e-06, 9.097999999596595e-06, 9.625000000568207e-06, 9.458000000073241e-06, 9.777000000710245e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.334000000471576e-06, 8.945000000259995e-06, 9.110999999784042e-06, 9.277000000196267e-06, 9.097000000402033e-06, 8.958000000447441e-06, 9.4170000002336e-06, 9.278000000279008e-06, 9.76399999963462e-06, 8.986000000099637e-06, 9.444999999885795e-06, 8.929999999907068e-06, 8.903000000337613e-06, 9.444999999885795e-06, 9.26400000000882e-06, 9.388999999693226e-06, 9.598000000110574e-06, 9.431000000503786e-06, 9.778000000792986e-06, 9.430000000421046e-06, 8.945000000259995e-06, 9.597000000027833e-06, 9.653000000220402e-06, 9.944000000317033e-06, 9.26400000000882e-06, 9.679999999789857e-06, 9.597000000027833e-06, 9.098000000484774e-06, 9.750000000252612e-06, 9.430999999615608e-06, 9.749999999364434e-06, 9.833000000014636e-06, 9.777000000710245e-06, 8.945000000259995e-06, 9.459000000155982e-06, 9.084000000214587e-06, 9.790999999204075e-06, 9.083000000131847e-06, 9.750000000252612e-06, 9.582999999757646e-06, 9.76399999963462e-06, 9.26400000000882e-06, 9.26400000000882e-06, 9.583999999840387e-06, 9.276999999308089e-06, 8.929999999907068e-06, 9.555000000105451e-06, 9.611999999492582e-06, 9.430999999615608e-06, 9.764000000522799e-06, 9.278000000279008e-06, 9.597000000027833e-06, 8.945000000259995e-06, 8.930000000795246e-06, 9.249999999738634e-06, 9.458000000073241e-06]</msg>
<status status="PASS" starttime="20201029 12:47:32.559" endtime="20201029 12:47:32.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.548" endtime="20201029 12:47:32.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.048" endtime="20201029 12:47:32.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.047" endtime="20201029 12:47:32.567"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.587" endtime="20201029 12:47:32.601"></status>
</kw>
<msg timestamp="20201029 12:47:32.602" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.584" endtime="20201029 12:47:32.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.608" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.604" endtime="20201029 12:47:32.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.610" endtime="20201029 12:47:32.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.577" endtime="20201029 12:47:32.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.572" endtime="20201029 12:47:32.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.634" endtime="20201029 12:47:32.999"></status>
</kw>
<msg timestamp="20201029 12:47:33.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.227056389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.227065653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.631" endtime="20201029 12:47:33.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.227056389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.227065653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.011" endtime="20201029 12:47:33.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.033" endtime="20201029 12:47:33.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.624" endtime="20201029 12:47:33.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.619" endtime="20201029 12:47:33.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:33.050" level="INFO">${RESULT} = [{'diff': 9.26400000000882e-06}, {'diff': 9.583999999840387e-06}, {'diff': 9.276999999308089e-06}, {'diff': 8.929999999907068e-06}, {'diff': 9.555000000105451e-06}, {'diff': 9.611999999492582e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:33.041" endtime="20201029 12:47:33.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:33.062" level="INFO">${OVERHEAD} = {'diff': [9.26400000000882e-06, 9.583999999840387e-06, 9.276999999308089e-06, 8.929999999907068e-06, 9.555000000105451e-06, 9.611999999492582e-06, 9.430999999615608e-06, 9.764000000522799e-06, 9.27800...</msg>
<status status="PASS" starttime="20201029 12:47:33.052" endtime="20201029 12:47:33.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.072" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:33.070" endtime="20201029 12:47:33.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.077" level="INFO">VALUE: [9.26400000000882e-06, 9.583999999840387e-06, 9.276999999308089e-06, 8.929999999907068e-06, 9.555000000105451e-06, 9.611999999492582e-06, 9.430999999615608e-06, 9.764000000522799e-06, 9.278000000279008e-06, 9.597000000027833e-06, 8.945000000259995e-06, 8.930000000795246e-06, 9.249999999738634e-06, 9.458000000073241e-06, 9.249999999738634e-06, 8.916999999719621e-06, 9.430999999615608e-06, 9.097000000402033e-06, 9.624999999680028e-06, 9.111999999866782e-06, 9.097000000402033e-06, 9.431000000503786e-06, 9.764000000522799e-06, 9.431000000503786e-06, 9.26400000000882e-06, 9.000000000369823e-06, 9.9169999998594e-06, 9.444999999885795e-06, 9.000000000369823e-06, 9.61200000038076e-06, 9.597000000027833e-06, 9.082999999243668e-06, 9.125000000054229e-06, 9.361000000041031e-06, 9.597000000027833e-06, 8.929999999907068e-06, 9.764000000522799e-06, 9.278000000279008e-06, 9.931000000129586e-06, 9.082999999243668e-06, 9.903000000477391e-06, 9.125000000054229e-06, 9.610999999409842e-06, 9.26400000000882e-06, 9.249999999738634e-06, 9.444999999885795e-06, 8.930999999989808e-06, 9.750000000252612e-06, 9.291999999661016e-06, 9.083999999326409e-06, 9.125000000054229e-06, 9.041000000209465e-06, 9.764000000522799e-06, 9.445000000773973e-06, 9.110999999784042e-06, 9.610999999409842e-06, 9.597000000027833e-06, 8.958999999642003e-06, 9.096999999513855e-06, 9.125000000054229e-06, 9.096999999513855e-06, 9.597000000027833e-06, 8.930999999989808e-06, 9.582999999757646e-06]</msg>
<status status="PASS" starttime="20201029 12:47:33.074" endtime="20201029 12:47:33.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.064" endtime="20201029 12:47:33.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.569" endtime="20201029 12:47:33.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.568" endtime="20201029 12:47:33.082"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.102" endtime="20201029 12:47:33.113"></status>
</kw>
<msg timestamp="20201029 12:47:33.115" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.098" endtime="20201029 12:47:33.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.121" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.117" endtime="20201029 12:47:33.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.123" endtime="20201029 12:47:33.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.091" endtime="20201029 12:47:33.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.087" endtime="20201029 12:47:33.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.147" endtime="20201029 12:47:33.519"></status>
</kw>
<msg timestamp="20201029 12:47:33.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.739690014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.739699139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.143" endtime="20201029 12:47:33.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.739690014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.739699139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.531" endtime="20201029 12:47:33.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.554" endtime="20201029 12:47:33.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.136" endtime="20201029 12:47:33.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.132" endtime="20201029 12:47:33.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:33.573" level="INFO">${RESULT} = [{'diff': 9.125000000054229e-06}, {'diff': 9.041000000209465e-06}, {'diff': 9.764000000522799e-06}, {'diff': 9.445000000773973e-06}, {'diff': 9.110999999784042e-06}, {'diff': 9.610999999409842e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:47:33.563" endtime="20201029 12:47:33.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:33.586" level="INFO">${OVERHEAD} = {'diff': [9.125000000054229e-06, 9.041000000209465e-06, 9.764000000522799e-06, 9.445000000773973e-06, 9.110999999784042e-06, 9.610999999409842e-06, 9.597000000027833e-06, 8.958999999642003e-06, 9.0969...</msg>
<status status="PASS" starttime="20201029 12:47:33.575" endtime="20201029 12:47:33.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.596" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:33.594" endtime="20201029 12:47:33.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.602" level="INFO">VALUE: [9.125000000054229e-06, 9.041000000209465e-06, 9.764000000522799e-06, 9.445000000773973e-06, 9.110999999784042e-06, 9.610999999409842e-06, 9.597000000027833e-06, 8.958999999642003e-06, 9.096999999513855e-06, 9.125000000054229e-06, 9.096999999513855e-06, 9.597000000027833e-06, 8.930999999989808e-06, 9.582999999757646e-06, 9.459000000155982e-06, 9.598000000110574e-06, 9.76399999963462e-06, 9.083000000131847e-06, 8.929999999907068e-06, 9.597000000027833e-06, 9.277000000196267e-06, 9.096999999513855e-06, 8.930999999989808e-06, 9.332999999500657e-06, 9.125000000054229e-06, 9.610999999409842e-06, 9.777999999904807e-06, 9.582999999757646e-06, 9.388999999693226e-06, 9.653000000220402e-06, 8.945000000259995e-06, 9.459000000155982e-06, 8.945000000259995e-06, 9.458000000073241e-06, 9.097999999596595e-06, 9.26299999992608e-06, 9.458000000073241e-06, 9.792000000174994e-06, 9.61100000029802e-06, 9.778000000792986e-06, 9.443999999803054e-06, 9.804999999474262e-06, 9.458000000073241e-06, 9.556000000188192e-06, 8.945000000259995e-06, 9.333000000388836e-06, 9.194000000434244e-06, 9.597000000027833e-06, 9.278000000279008e-06, 9.61100000029802e-06, 9.735999999982425e-06, 9.777999999904807e-06, 9.625000000568207e-06, 9.277999999390829e-06, 9.291999999661016e-06, 9.777999999904807e-06, 9.598000000110574e-06, 9.097000000402033e-06, 9.76299999955188e-06, 9.430999999615608e-06, 8.944999999371817e-06, 9.76399999963462e-06, 8.929999999907068e-06, 9.431000000503786e-06]</msg>
<status status="PASS" starttime="20201029 12:47:33.599" endtime="20201029 12:47:33.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.588" endtime="20201029 12:47:33.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.083" endtime="20201029 12:47:33.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.082" endtime="20201029 12:47:33.606"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.627" endtime="20201029 12:47:33.639"></status>
</kw>
<msg timestamp="20201029 12:47:33.640" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.623" endtime="20201029 12:47:33.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.646" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.642" endtime="20201029 12:47:33.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.649" endtime="20201029 12:47:33.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.616" endtime="20201029 12:47:33.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.612" endtime="20201029 12:47:33.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.672" endtime="20201029 12:47:34.031"></status>
</kw>
<msg timestamp="20201029 12:47:34.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.242531153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.242540889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.669" endtime="20201029 12:47:34.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.242531153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.242540889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.042" endtime="20201029 12:47:34.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.064" endtime="20201029 12:47:34.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.662" endtime="20201029 12:47:34.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.657" endtime="20201029 12:47:34.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.081" level="INFO">${RESULT} = [{'diff': 9.735999999982425e-06}, {'diff': 9.777999999904807e-06}, {'diff': 9.625000000568207e-06}, {'diff': 9.277999999390829e-06}, {'diff': 9.291999999661016e-06}, {'diff': 9.777999999904807e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:47:34.072" endtime="20201029 12:47:34.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:34.092" level="INFO">${OVERHEAD} = {'diff': [9.735999999982425e-06, 9.777999999904807e-06, 9.625000000568207e-06, 9.277999999390829e-06, 9.291999999661016e-06, 9.777999999904807e-06, 9.598000000110574e-06, 9.097000000402033e-06, 9.7629...</msg>
<status status="PASS" starttime="20201029 12:47:34.083" endtime="20201029 12:47:34.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.102" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:34.100" endtime="20201029 12:47:34.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.107" level="INFO">VALUE: [9.735999999982425e-06, 9.777999999904807e-06, 9.625000000568207e-06, 9.277999999390829e-06, 9.291999999661016e-06, 9.777999999904807e-06, 9.598000000110574e-06, 9.097000000402033e-06, 9.76299999955188e-06, 9.430999999615608e-06, 8.944999999371817e-06, 9.76399999963462e-06, 8.929999999907068e-06, 9.431000000503786e-06, 8.930999999989808e-06, 9.4170000002336e-06, 9.80500000036244e-06, 8.916999999719621e-06, 9.694000000060043e-06, 9.055999999674214e-06, 9.11100000067222e-06, 9.0699999999444e-06, 9.125000000054229e-06, 9.11100000067222e-06, 9.110999999784042e-06, 9.777999999904807e-06, 9.084000000214587e-06, 9.485999999725436e-06, 9.777999999904807e-06, 9.459000000155982e-06, 9.624999999680028e-06, 9.11100000067222e-06, 9.486000000613615e-06, 9.76399999963462e-06, 9.443999999803054e-06, 8.945000000259995e-06, 9.431000000503786e-06, 9.06899999986166e-06, 9.584000000728565e-06, 9.445000000773973e-06, 9.597000000027833e-06, 9.084000000214587e-06, 9.792000000174994e-06, 9.443999999803054e-06, 8.958000000447441e-06, 9.26400000000882e-06, 9.792000000174994e-06, 9.583999999840387e-06, 9.278000000279008e-06, 9.804999999474262e-06, 9.11100000067222e-06, 9.139000000324415e-06, 8.930999999989808e-06, 9.61100000029802e-06, 9.26400000000882e-06, 9.695000000142784e-06, 9.054999999591473e-06, 9.61200000038076e-06, 9.11100000067222e-06, 9.764000000522799e-06, 9.26299999992608e-06, 9.430999999615608e-06, 9.41600000015086e-06, 9.610999999409842e-06]</msg>
<status status="PASS" starttime="20201029 12:47:34.104" endtime="20201029 12:47:34.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.094" endtime="20201029 12:47:34.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.608" endtime="20201029 12:47:34.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.607" endtime="20201029 12:47:34.112"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.132" endtime="20201029 12:47:34.146"></status>
</kw>
<msg timestamp="20201029 12:47:34.148" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.128" endtime="20201029 12:47:34.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.154" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.150" endtime="20201029 12:47:34.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.157" endtime="20201029 12:47:34.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.121" endtime="20201029 12:47:34.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.117" endtime="20201029 12:47:34.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.180" endtime="20201029 12:47:34.556"></status>
</kw>
<msg timestamp="20201029 12:47:34.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.757765542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.757774653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.176" endtime="20201029 12:47:34.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.757765542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.757774653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.567" endtime="20201029 12:47:34.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.588" endtime="20201029 12:47:34.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.169" endtime="20201029 12:47:34.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.165" endtime="20201029 12:47:34.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.606" level="INFO">${RESULT} = [{'diff': 9.11100000067222e-06}, {'diff': 9.139000000324415e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.61100000029802e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.695000000142784e-06}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:34.597" endtime="20201029 12:47:34.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:34.619" level="INFO">${OVERHEAD} = {'diff': [9.11100000067222e-06, 9.139000000324415e-06, 8.930999999989808e-06, 9.61100000029802e-06, 9.26400000000882e-06, 9.695000000142784e-06, 9.054999999591473e-06, 9.61200000038076e-06, 9.11100000...</msg>
<status status="PASS" starttime="20201029 12:47:34.609" endtime="20201029 12:47:34.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.629" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:34.627" endtime="20201029 12:47:34.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.635" level="INFO">VALUE: [9.11100000067222e-06, 9.139000000324415e-06, 8.930999999989808e-06, 9.61100000029802e-06, 9.26400000000882e-06, 9.695000000142784e-06, 9.054999999591473e-06, 9.61200000038076e-06, 9.11100000067222e-06, 9.764000000522799e-06, 9.26299999992608e-06, 9.430999999615608e-06, 9.41600000015086e-06, 9.610999999409842e-06, 9.777999999016629e-06, 9.597000000027833e-06, 8.943999999289076e-06, 9.750000000252612e-06, 8.91600000052506e-06, 9.263000000814259e-06, 9.750000000252612e-06, 9.096999999513855e-06, 8.929999999907068e-06, 9.110999998895863e-06, 8.860999999527053e-06, 9.11100000067222e-06, 9.598000000110574e-06, 9.444999999885795e-06, 9.778000000792986e-06, 9.76399999963462e-06, 9.750000000252612e-06, 9.597000000027833e-06, 9.431000000503786e-06, 9.431000000503786e-06, 9.152999998818245e-06, 8.901999999366694e-06, 9.638999999950215e-06, 9.584000000728565e-06, 9.792000000174994e-06, 9.208999999898992e-06, 8.9170000006078e-06, 9.194000000434244e-06, 9.584000000728565e-06, 9.76399999963462e-06, 9.444999999885795e-06, 8.930999999989808e-06, 8.943999999289076e-06, 9.597000000027833e-06, 9.610999999409842e-06, 9.444999999885795e-06, 9.264000000897e-06, 9.096999999513855e-06, 9.583000000645825e-06, 9.304999998960284e-06, 9.278000000279008e-06, 9.416000001039038e-06, 8.945000001148173e-06, 9.76299999955188e-06, 9.598000000110574e-06, 9.264000000897e-06, 8.929999999907068e-06, 9.028000000910197e-06, 9.583000000645825e-06, 9.264000000897e-06]</msg>
<status status="PASS" starttime="20201029 12:47:34.631" endtime="20201029 12:47:34.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.620" endtime="20201029 12:47:34.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.113" endtime="20201029 12:47:34.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.113" endtime="20201029 12:47:34.639"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.659" endtime="20201029 12:47:34.673"></status>
</kw>
<msg timestamp="20201029 12:47:34.674" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.656" endtime="20201029 12:47:34.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.681" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.676" endtime="20201029 12:47:34.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.683" endtime="20201029 12:47:34.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.649" endtime="20201029 12:47:34.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.644" endtime="20201029 12:47:34.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.706" endtime="20201029 12:47:35.089"></status>
</kw>
<msg timestamp="20201029 12:47:35.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.254134764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.254144028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.703" endtime="20201029 12:47:35.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.254134764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.254144028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.103" endtime="20201029 12:47:35.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.129" endtime="20201029 12:47:35.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.696" endtime="20201029 12:47:35.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.691" endtime="20201029 12:47:35.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.147" level="INFO">${RESULT} = [{'diff': 9.264000000897e-06}, {'diff': 9.096999999513855e-06}, {'diff': 9.583000000645825e-06}, {'diff': 9.304999998960284e-06}, {'diff': 9.278000000279008e-06}, {'diff': 9.416000001039038e-06}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:35.137" endtime="20201029 12:47:35.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:35.159" level="INFO">${OVERHEAD} = {'diff': [9.264000000897e-06, 9.096999999513855e-06, 9.583000000645825e-06, 9.304999998960284e-06, 9.278000000279008e-06, 9.416000001039038e-06, 8.945000001148173e-06, 9.76299999955188e-06, 9.59800000...</msg>
<status status="PASS" starttime="20201029 12:47:35.149" endtime="20201029 12:47:35.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.169" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:35.167" endtime="20201029 12:47:35.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.175" level="INFO">VALUE: [9.264000000897e-06, 9.096999999513855e-06, 9.583000000645825e-06, 9.304999998960284e-06, 9.278000000279008e-06, 9.416000001039038e-06, 8.945000001148173e-06, 9.76299999955188e-06, 9.598000000110574e-06, 9.264000000897e-06, 8.929999999907068e-06, 9.028000000910197e-06, 9.583000000645825e-06, 9.264000000897e-06, 9.431000000503786e-06, 9.76399999963462e-06, 9.443999999803054e-06, 9.097000001290212e-06, 9.76399999963462e-06, 9.443999999803054e-06, 9.583000000645825e-06, 8.930999999989808e-06, 9.443999999803054e-06, 8.860999999527053e-06, 9.610999999409842e-06, 8.930999999989808e-06, 9.597000000027833e-06, 9.443999999803054e-06, 8.930999999989808e-06, 9.138999999436237e-06, 8.930999999989808e-06, 9.416999999345421e-06, 9.430000000421046e-06, 8.943999999289076e-06, 9.76399999963462e-06, 8.944000001065433e-06, 9.235999998580269e-06, 9.5699999995702e-06, 8.930999999989808e-06, 9.068999998973482e-06, 9.430000000421046e-06, 9.443999999803054e-06, 9.76399999963462e-06, 9.834000000097376e-06, 9.096999999513855e-06, 9.0269999990511e-06, 9.264000000897e-06, 9.930999999241408e-06, 8.929999999907068e-06, 9.249999999738634e-06, 9.750000000252612e-06, 9.584000000728565e-06, 9.083000000131847e-06, 9.417000001121778e-06, 9.527999999647818e-06, 9.76399999963462e-06, 9.278000000279008e-06, 9.249999999738634e-06, 9.637999999867475e-06, 9.319000000118649e-06, 9.11100000067222e-06, 9.597000000027833e-06, 9.444000001579411e-06, 9.096999999513855e-06]</msg>
<status status="PASS" starttime="20201029 12:47:35.171" endtime="20201029 12:47:35.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.161" endtime="20201029 12:47:35.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.641" endtime="20201029 12:47:35.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.640" endtime="20201029 12:47:35.179"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.199" endtime="20201029 12:47:35.212"></status>
</kw>
<msg timestamp="20201029 12:47:35.213" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.195" endtime="20201029 12:47:35.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.220" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.216" endtime="20201029 12:47:35.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.222" endtime="20201029 12:47:35.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.188" endtime="20201029 12:47:35.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.184" endtime="20201029 12:47:35.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.245" endtime="20201029 12:47:35.628"></status>
</kw>
<msg timestamp="20201029 12:47:35.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.770476861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.770486611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.242" endtime="20201029 12:47:35.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.770476861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.770486611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.640" endtime="20201029 12:47:35.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.662" endtime="20201029 12:47:35.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.235" endtime="20201029 12:47:35.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.230" endtime="20201029 12:47:35.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.680" level="INFO">${RESULT} = [{'diff': 9.750000000252612e-06}, {'diff': 9.584000000728565e-06}, {'diff': 9.083000000131847e-06}, {'diff': 9.417000001121778e-06}, {'diff': 9.527999999647818e-06}, {'diff': 9.76399999963462e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:35.671" endtime="20201029 12:47:35.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:35.691" level="INFO">${OVERHEAD} = {'diff': [9.750000000252612e-06, 9.584000000728565e-06, 9.083000000131847e-06, 9.417000001121778e-06, 9.527999999647818e-06, 9.76399999963462e-06, 9.278000000279008e-06, 9.249999999738634e-06, 9.63799...</msg>
<status status="PASS" starttime="20201029 12:47:35.682" endtime="20201029 12:47:35.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.701" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:35.698" endtime="20201029 12:47:35.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.706" level="INFO">VALUE: [9.750000000252612e-06, 9.584000000728565e-06, 9.083000000131847e-06, 9.417000001121778e-06, 9.527999999647818e-06, 9.76399999963462e-06, 9.278000000279008e-06, 9.249999999738634e-06, 9.637999999867475e-06, 9.319000000118649e-06, 9.11100000067222e-06, 9.597000000027833e-06, 9.444000001579411e-06, 9.096999999513855e-06, 8.889000000067426e-06, 9.778000000792986e-06, 9.43099999872743e-06, 9.32000000020139e-06, 9.263999999120642e-06, 8.929999999907068e-06, 9.110999998895863e-06, 9.555000000105451e-06, 9.138999999436237e-06, 9.097000001290212e-06, 8.930999999989808e-06, 9.598000000110574e-06, 9.278000000279008e-06, 9.750000000252612e-06, 8.958999998753825e-06, 9.430000000421046e-06, 9.76399999963462e-06, 9.11100000067222e-06, 9.083000000131847e-06, 9.387999998722307e-06, 9.264000000897e-06, 9.42999999864469e-06, 9.597000000027833e-06, 9.679999999789857e-06, 8.944999999371817e-06, 9.750000000252612e-06, 9.778000000792986e-06, 9.430000000421046e-06, 9.597000000027833e-06, 9.096999999513855e-06, 9.930999999241408e-06, 9.097000001290212e-06, 9.625000000568207e-06, 9.096999999513855e-06, 9.111999998978604e-06, 9.249999999738634e-06, 9.306000000819381e-06, 9.90200000039465e-06, 9.792000000174994e-06, 9.291999999661016e-06, 9.278000000279008e-06, 8.930999999989808e-06, 9.278000000279008e-06, 9.389000000581404e-06, 9.055999999674214e-06, 9.236000000356626e-06, 9.443999999803054e-06, 9.472000000343428e-06, 9.110999998895863e-06, 9.777000000710245e-06]</msg>
<status status="PASS" starttime="20201029 12:47:35.703" endtime="20201029 12:47:35.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.693" endtime="20201029 12:47:35.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.181" endtime="20201029 12:47:35.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.180" endtime="20201029 12:47:35.711"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.731" endtime="20201029 12:47:35.746"></status>
</kw>
<msg timestamp="20201029 12:47:35.747" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.727" endtime="20201029 12:47:35.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.754" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.750" endtime="20201029 12:47:35.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.756" endtime="20201029 12:47:35.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.720" endtime="20201029 12:47:35.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.716" endtime="20201029 12:47:35.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.779" endtime="20201029 12:47:36.147"></status>
</kw>
<msg timestamp="20201029 12:47:36.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.298113375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.298122681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.776" endtime="20201029 12:47:36.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.298113375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.298122681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.158" endtime="20201029 12:47:36.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.180" endtime="20201029 12:47:36.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.769" endtime="20201029 12:47:36.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.764" endtime="20201029 12:47:36.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.202" level="INFO">${RESULT} = [{'diff': 9.306000000819381e-06}, {'diff': 9.90200000039465e-06}, {'diff': 9.792000000174994e-06}, {'diff': 9.291999999661016e-06}, {'diff': 9.278000000279008e-06}, {'diff': 8.930999999989808e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:36.191" endtime="20201029 12:47:36.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:36.213" level="INFO">${OVERHEAD} = {'diff': [9.306000000819381e-06, 9.90200000039465e-06, 9.792000000174994e-06, 9.291999999661016e-06, 9.278000000279008e-06, 8.930999999989808e-06, 9.278000000279008e-06, 9.389000000581404e-06, 9.05599...</msg>
<status status="PASS" starttime="20201029 12:47:36.204" endtime="20201029 12:47:36.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.223" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:36.221" endtime="20201029 12:47:36.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.229" level="INFO">VALUE: [9.306000000819381e-06, 9.90200000039465e-06, 9.792000000174994e-06, 9.291999999661016e-06, 9.278000000279008e-06, 8.930999999989808e-06, 9.278000000279008e-06, 9.389000000581404e-06, 9.055999999674214e-06, 9.236000000356626e-06, 9.443999999803054e-06, 9.472000000343428e-06, 9.110999998895863e-06, 9.777000000710245e-06, 9.098000001372952e-06, 9.583000000645825e-06, 9.291999999661016e-06, 9.208000001592609e-06, 8.944999999371817e-06, 9.110999998895863e-06, 9.194999998740627e-06, 9.764000001410977e-06, 9.430000000421046e-06, 9.42999999864469e-06, 9.777999999016629e-06, 9.458999999267803e-06, 9.56899999948746e-06, 9.096999999513855e-06, 8.929999999907068e-06, 8.929999999907068e-06, 9.096999999513855e-06, 9.32000000020139e-06, 9.262999999037902e-06, 9.929999999158667e-06, 9.222000000974617e-06, 9.778000000792986e-06, 9.249999999738634e-06, 9.069999999056222e-06, 8.97199999982945e-06, 9.278000000279008e-06, 9.11100000067222e-06, 8.930999999989808e-06, 9.236000000356626e-06, 9.25000000151499e-06, 9.444999999885795e-06, 8.930999999989808e-06, 9.264000000897e-06, 9.264000000897e-06, 9.944999998623416e-06, 9.249999999738634e-06, 9.778000000792986e-06, 8.943999999289076e-06, 9.096999999513855e-06, 9.750000000252612e-06, 9.65300000110858e-06, 9.443999999803054e-06, 9.264000000897e-06, 9.278000000279008e-06, 9.264000000897e-06, 8.943999999289076e-06, 9.610999999409842e-06, 9.610999999409842e-06, 9.249999999738634e-06, 9.444999999885795e-06]</msg>
<status status="PASS" starttime="20201029 12:47:36.226" endtime="20201029 12:47:36.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.215" endtime="20201029 12:47:36.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.712" endtime="20201029 12:47:36.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.711" endtime="20201029 12:47:36.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.820" endtime="20201029 12:47:36.234"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:25.697" endtime="20201029 12:47:36.235" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.252" endtime="20201029 12:47:36.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.248" endtime="20201029 12:47:36.276"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.309" endtime="20201029 12:47:36.327"></status>
</kw>
<msg timestamp="20201029 12:47:36.328" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.305" endtime="20201029 12:47:36.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.334" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.330" endtime="20201029 12:47:36.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.341" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:36.337" endtime="20201029 12:47:36.342"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:36.298" endtime="20201029 12:47:36.343"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:36.292" endtime="20201029 12:47:36.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.290" endtime="20201029 12:47:36.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:36.353" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:36.352" endtime="20201029 12:47:36.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.348" endtime="20201029 12:47:36.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.288" endtime="20201029 12:47:36.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.286" endtime="20201029 12:47:36.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.357" endtime="20201029 12:47:36.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.282" endtime="20201029 12:47:36.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.278" endtime="20201029 12:47:36.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.246" endtime="20201029 12:47:36.364"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.388" endtime="20201029 12:47:36.412"></status>
</kw>
<msg timestamp="20201029 12:47:36.413" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.384" endtime="20201029 12:47:36.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.419" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.415" endtime="20201029 12:47:36.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.421" endtime="20201029 12:47:36.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.375" endtime="20201029 12:47:36.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.370" endtime="20201029 12:47:36.428"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.433" endtime="20201029 12:47:36.437"></status>
</kw>
<msg timestamp="20201029 12:47:36.438" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:47:36.430" endtime="20201029 12:47:36.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.449" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:47:36.446" endtime="20201029 12:47:36.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.453" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:47:36.451" endtime="20201029 12:47:36.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.440" endtime="20201029 12:47:36.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.465" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:47:36.463" endtime="20201029 12:47:36.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.469" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:47:36.467" endtime="20201029 12:47:36.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.457" endtime="20201029 12:47:36.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.488" endtime="20201029 12:47:36.840"></status>
</kw>
<msg timestamp="20201029 12:47:36.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127349986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127372833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.485" endtime="20201029 12:47:36.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127349986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127372833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.850" endtime="20201029 12:47:36.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.868" endtime="20201029 12:47:36.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.478" endtime="20201029 12:47:36.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.473" endtime="20201029 12:47:36.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.885" level="INFO">${RESULT} = [{'diff': 2.2846999999992512e-05}, {'diff': 2.481900000000925e-05}, {'diff': 2.566700000000699e-05}, {'diff': 2.566700000000699e-05}, {'diff': 2.4999999999997247e-05}, {'diff': 2.5346999999981135e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:36.877" endtime="20201029 12:47:36.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:36.896" level="INFO">${OVERHEAD} = {'diff': [2.2846999999992512e-05, 2.481900000000925e-05, 2.566700000000699e-05, 2.566700000000699e-05, 2.4999999999997247e-05, 2.5346999999981135e-05, 2.3986000000003616e-05, 2.5500000000011624e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:47:36.887" endtime="20201029 12:47:36.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.907" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:47:36.905" endtime="20201029 12:47:36.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.913" level="INFO">VALUE: [2.2846999999992512e-05, 2.481900000000925e-05, 2.566700000000699e-05, 2.566700000000699e-05, 2.4999999999997247e-05, 2.5346999999981135e-05, 2.3986000000003616e-05, 2.5500000000011624e-05, 2.5834000000002355e-05, 2.581900000001025e-05, 2.4999999999997247e-05, 2.4165999999992138e-05, 2.581900000001025e-05, 2.4485999999990238e-05, 2.4583999999994166e-05, 2.48610000000149e-05, 2.5694000000020534e-05, 2.413900000000635e-05, 2.4846999999994512e-05, 2.5166999999992612e-05, 2.5374999999994152e-05, 2.5820000000009724e-05, 2.5444999999985063e-05, 2.4805999999988337e-05, 2.433300000001526e-05, 2.4820000000008724e-05, 2.566700000000699e-05, 2.4165999999992138e-05, 2.4834000000001355e-05, 2.4471999999997607e-05, 2.4514000000003255e-05, 2.4166999999991612e-05, 2.4972999999983703e-05, 2.5333999999987977e-05, 2.5485999999991238e-05, 2.4874999999979774e-05, 2.515299999999998e-05, 2.3999999999996247e-05, 2.5306000000002715e-05, 2.5694000000020534e-05, 2.5166000000020894e-05, 2.5013999999989878e-05, 2.5652999999986603e-05, 2.498599999997686e-05, 2.483300000000188e-05, 2.4680000000026903e-05, 2.5318999999995873e-05, 2.5152000000000507e-05, 2.5500000000011624e-05, 2.5693999999992778e-05]</msg>
<status status="PASS" starttime="20201029 12:47:36.909" endtime="20201029 12:47:36.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.898" endtime="20201029 12:47:36.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.365" endtime="20201029 12:47:36.916"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:36.240" endtime="20201029 12:47:36.918" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.935" endtime="20201029 12:47:36.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.931" endtime="20201029 12:47:36.958"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.997" endtime="20201029 12:47:37.016"></status>
</kw>
<msg timestamp="20201029 12:47:37.018" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.993" endtime="20201029 12:47:37.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.026" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.020" endtime="20201029 12:47:37.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.033" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:37.028" endtime="20201029 12:47:37.034"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:36.983" endtime="20201029 12:47:37.037"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:36.975" endtime="20201029 12:47:37.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.972" endtime="20201029 12:47:37.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:37.048" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:37.046" endtime="20201029 12:47:37.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.042" endtime="20201029 12:47:37.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.971" endtime="20201029 12:47:37.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.969" endtime="20201029 12:47:37.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.051" endtime="20201029 12:47:37.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.965" endtime="20201029 12:47:37.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.960" endtime="20201029 12:47:37.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.929" endtime="20201029 12:47:37.058"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.083" endtime="20201029 12:47:37.167"></status>
</kw>
<msg timestamp="20201029 12:47:37.168" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.079" endtime="20201029 12:47:37.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.175" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.171" endtime="20201029 12:47:37.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.177" endtime="20201029 12:47:37.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.072" endtime="20201029 12:47:37.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.064" endtime="20201029 12:47:37.184"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.188" endtime="20201029 12:47:37.193"></status>
</kw>
<msg timestamp="20201029 12:47:37.194" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:47:37.185" endtime="20201029 12:47:37.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.203" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:47:37.201" endtime="20201029 12:47:37.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.209" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:47:37.206" endtime="20201029 12:47:37.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.195" endtime="20201029 12:47:37.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.221" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:47:37.218" endtime="20201029 12:47:37.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.225" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:47:37.223" endtime="20201029 12:47:37.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.212" endtime="20201029 12:47:37.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.243" endtime="20201029 12:47:37.631"></status>
</kw>
<msg timestamp="20201029 12:47:37.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140979361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141004472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.240" endtime="20201029 12:47:37.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140979361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141004472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.640" endtime="20201029 12:47:37.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.658" endtime="20201029 12:47:37.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.233" endtime="20201029 12:47:37.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.228" endtime="20201029 12:47:37.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:37.675" level="INFO">${RESULT} = [{'diff': 2.5110999999994332e-05}, {'diff': 3.4290999999991856e-05}, {'diff': 3.432000000000435e-05}, {'diff': 3.426400000000607e-05}, {'diff': 3.4124999999995964e-05}, {'diff': 3.4124999999995964e-05...</msg>
<status status="PASS" starttime="20201029 12:47:37.666" endtime="20201029 12:47:37.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:37.686" level="INFO">${OVERHEAD} = {'diff': [2.5110999999994332e-05, 3.4290999999991856e-05, 3.432000000000435e-05, 3.426400000000607e-05, 3.4124999999995964e-05, 3.4124999999995964e-05, 3.413799999998912e-05, 3.4180999999994244e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:47:37.677" endtime="20201029 12:47:37.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.697" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:47:37.695" endtime="20201029 12:47:37.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.703" level="INFO">VALUE: [2.5110999999994332e-05, 3.4290999999991856e-05, 3.432000000000435e-05, 3.426400000000607e-05, 3.4124999999995964e-05, 3.4124999999995964e-05, 3.413799999998912e-05, 3.4180999999994244e-05, 3.40970000000107e-05, 3.4152999999981226e-05, 3.411100000000333e-05, 3.430500000001224e-05, 3.415200000000951e-05, 3.412500000002372e-05, 3.4138999999988595e-05, 3.413900000001635e-05, 3.4152999999981226e-05, 3.415300000000898e-05, 3.4124999999995964e-05, 3.4124999999995964e-05, 3.4138999999988595e-05, 3.41939999999874e-05, 3.411100000000333e-05, 3.4180999999994244e-05, 3.429199999999133e-05, 3.413900000001635e-05, 3.4138999999988595e-05, 3.4138999999988595e-05, 3.420800000000779e-05, 3.4138999999988595e-05, 3.411100000000333e-05, 3.4124999999995964e-05, 3.42779999999987e-05, 3.4263000000006594e-05, 3.417999999999477e-05, 3.4180000000022526e-05, 3.4292000000019085e-05, 3.4290999999991856e-05, 3.429199999999133e-05, 3.4306000000011716e-05, 3.4306000000011716e-05, 3.4124999999995964e-05, 3.432000000000435e-05, 3.430499999998449e-05, 3.413900000001635e-05, 3.4124999999995964e-05, 3.4138999999988595e-05, 3.4124999999995964e-05, 3.4096999999982947e-05, 3.4124999999995964e-05]</msg>
<status status="PASS" starttime="20201029 12:47:37.699" endtime="20201029 12:47:37.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.688" endtime="20201029 12:47:37.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.060" endtime="20201029 12:47:37.707"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:36.922" endtime="20201029 12:47:37.708" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:37.726" endtime="20201029 12:47:37.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.722" endtime="20201029 12:47:37.750"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.784" endtime="20201029 12:47:37.804"></status>
</kw>
<msg timestamp="20201029 12:47:37.805" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.780" endtime="20201029 12:47:37.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.813" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.808" endtime="20201029 12:47:37.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.820" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:37.815" endtime="20201029 12:47:37.820"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:37.773" endtime="20201029 12:47:37.822"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:37.766" endtime="20201029 12:47:37.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.764" endtime="20201029 12:47:37.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:37.832" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:37.831" endtime="20201029 12:47:37.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.826" endtime="20201029 12:47:37.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.762" endtime="20201029 12:47:37.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.760" endtime="20201029 12:47:37.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.838" endtime="20201029 12:47:37.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.756" endtime="20201029 12:47:37.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.751" endtime="20201029 12:47:37.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.719" endtime="20201029 12:47:37.849"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.877" endtime="20201029 12:47:38.075"></status>
</kw>
<msg timestamp="20201029 12:47:38.076" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.873" endtime="20201029 12:47:38.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.082" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.078" endtime="20201029 12:47:38.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.084" endtime="20201029 12:47:38.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.865" endtime="20201029 12:47:38.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.857" endtime="20201029 12:47:38.091"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.095" endtime="20201029 12:47:38.100"></status>
</kw>
<msg timestamp="20201029 12:47:38.101" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:47:38.093" endtime="20201029 12:47:38.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.111" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:47:38.109" endtime="20201029 12:47:38.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.116" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:47:38.113" endtime="20201029 12:47:38.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.103" endtime="20201029 12:47:38.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.131" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:47:38.128" endtime="20201029 12:47:38.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.136" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:47:38.134" endtime="20201029 12:47:38.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.120" endtime="20201029 12:47:38.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.162" endtime="20201029 12:47:38.513"></status>
</kw>
<msg timestamp="20201029 12:47:38.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.144988778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145026069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.157" endtime="20201029 12:47:38.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.144988778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145026069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.523" endtime="20201029 12:47:38.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.542" endtime="20201029 12:47:38.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.148" endtime="20201029 12:47:38.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.142" endtime="20201029 12:47:38.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:38.560" level="INFO">${RESULT} = [{'diff': 3.7290999999994856e-05}, {'diff': 5.532000000002535e-05}, {'diff': 5.433299999998975e-05}, {'diff': 5.530600000000496e-05}, {'diff': 5.5165999999995385e-05}, {'diff': 5.519500000000788e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:38.551" endtime="20201029 12:47:38.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:38.574" level="INFO">${OVERHEAD} = {'diff': [3.7290999999994856e-05, 5.532000000002535e-05, 5.433299999998975e-05, 5.530600000000496e-05, 5.5165999999995385e-05, 5.519500000000788e-05, 5.518099999998749e-05, 5.516699999999486e-05, 5.51...</msg>
<status status="PASS" starttime="20201029 12:47:38.562" endtime="20201029 12:47:38.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.585" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:47:38.583" endtime="20201029 12:47:38.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.591" level="INFO">VALUE: [3.7290999999994856e-05, 5.532000000002535e-05, 5.433299999998975e-05, 5.530600000000496e-05, 5.5165999999995385e-05, 5.519500000000788e-05, 5.518099999998749e-05, 5.516699999999486e-05, 5.516699999999486e-05, 5.531899999999812e-05, 5.515300000000223e-05, 5.5125000000016966e-05, 5.430500000000449e-05, 5.5165999999995385e-05, 5.4277999999990945e-05, 5.429100000001186e-05, 5.515300000000223e-05, 5.516699999999486e-05, 5.5152000000002754e-05, 5.5151999999975e-05, 5.516699999999486e-05, 5.530600000000496e-05, 5.515300000000223e-05, 5.516600000002314e-05, 5.515300000000223e-05, 5.530599999997721e-05, 5.430600000000396e-05, 5.5208000000001034e-05, 5.431999999999659e-05, 5.520799999997328e-05, 5.516699999999486e-05, 5.5179999999988016e-05, 5.520800000002879e-05, 5.530500000000549e-05, 5.5167000000022615e-05, 5.4319000000024875e-05, 5.513899999998184e-05, 5.515299999997447e-05, 5.5181000000015246e-05, 5.5153000000029984e-05, 5.533299999999075e-05, 5.509700000000395e-05, 5.533299999999075e-05, 5.520799999997328e-05, 5.513900000003735e-05, 5.4319000000024875e-05, 5.5153000000029984e-05, 5.5153000000029984e-05, 5.5166000000050897e-05, 5.4333000000017506e-05]</msg>
<status status="PASS" starttime="20201029 12:47:38.588" endtime="20201029 12:47:38.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.576" endtime="20201029 12:47:38.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.850" endtime="20201029 12:47:38.595"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:37.713" endtime="20201029 12:47:38.596" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:38.613" endtime="20201029 12:47:38.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.610" endtime="20201029 12:47:38.636"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.670" endtime="20201029 12:47:38.686"></status>
</kw>
<msg timestamp="20201029 12:47:38.688" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.666" endtime="20201029 12:47:38.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.694" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.690" endtime="20201029 12:47:38.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.701" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:38.696" endtime="20201029 12:47:38.701"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:38.659" endtime="20201029 12:47:38.703"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:38.653" endtime="20201029 12:47:38.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.650" endtime="20201029 12:47:38.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:38.713" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:38.711" endtime="20201029 12:47:38.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.707" endtime="20201029 12:47:38.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.648" endtime="20201029 12:47:38.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.646" endtime="20201029 12:47:38.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.716" endtime="20201029 12:47:38.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.642" endtime="20201029 12:47:38.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.638" endtime="20201029 12:47:38.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.607" endtime="20201029 12:47:38.724"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.746" endtime="20201029 12:47:38.768"></status>
</kw>
<msg timestamp="20201029 12:47:38.770" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.742" endtime="20201029 12:47:38.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.776" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.772" endtime="20201029 12:47:38.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.779" endtime="20201029 12:47:38.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.735" endtime="20201029 12:47:38.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.729" endtime="20201029 12:47:38.786"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.790" endtime="20201029 12:47:38.795"></status>
</kw>
<msg timestamp="20201029 12:47:38.796" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:47:38.787" endtime="20201029 12:47:38.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.806" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:47:38.803" endtime="20201029 12:47:38.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.810" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:47:38.808" endtime="20201029 12:47:38.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.797" endtime="20201029 12:47:38.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.823" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:47:38.821" endtime="20201029 12:47:38.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.828" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:47:38.825" endtime="20201029 12:47:38.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.815" endtime="20201029 12:47:38.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.846" endtime="20201029 12:47:39.191"></status>
</kw>
<msg timestamp="20201029 12:47:39.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124938083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.124963917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.843" endtime="20201029 12:47:39.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124938083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.124963917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.203" endtime="20201029 12:47:39.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.224" endtime="20201029 12:47:39.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.836" endtime="20201029 12:47:39.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.831" endtime="20201029 12:47:39.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:39.244" level="INFO">${RESULT} = [{'diff': 2.5833999999988477e-05}, {'diff': 2.4985999999990738e-05}, {'diff': 2.4972000000011985e-05}, {'diff': 2.5014000000017633e-05}, {'diff': 2.5930000000007336e-05}, {'diff': 2.5874999999980774e-...</msg>
<status status="PASS" starttime="20201029 12:47:39.235" endtime="20201029 12:47:39.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:39.255" level="INFO">${OVERHEAD} = {'diff': [2.5833999999988477e-05, 2.4985999999990738e-05, 2.4972000000011985e-05, 2.5014000000017633e-05, 2.5930000000007336e-05, 2.5874999999980774e-05, 2.5820000000009724e-05, 2.4957999999991598e-05...</msg>
<status status="PASS" starttime="20201029 12:47:39.247" endtime="20201029 12:47:39.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.267" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:47:39.265" endtime="20201029 12:47:39.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.273" level="INFO">VALUE: [2.5833999999988477e-05, 2.4985999999990738e-05, 2.4972000000011985e-05, 2.5014000000017633e-05, 2.5930000000007336e-05, 2.5874999999980774e-05, 2.5820000000009724e-05, 2.4957999999991598e-05, 2.5820000000009724e-05, 2.502799999998251e-05, 2.494499999999844e-05, 2.588900000000116e-05, 2.5847999999994986e-05, 2.583300000000288e-05, 2.591700000001418e-05, 2.5930000000007336e-05, 2.583300000000288e-05, 2.4958000000019354e-05, 2.5874999999980774e-05, 2.591700000001418e-05, 2.588900000000116e-05, 2.5943999999999967e-05, 2.5903000000021548e-05, 2.5846999999995512e-05, 2.493100000000581e-05, 2.583300000000288e-05, 2.5902999999993792e-05, 2.583300000000288e-05, 2.5902999999993792e-05, 2.5860999999988143e-05, 2.5790999999997233e-05, 2.5818999999982495e-05, 2.58610000000159e-05, 2.5014000000017633e-05, 2.5860999999988143e-05, 2.583300000000288e-05, 2.58610000000159e-05, 2.588900000000116e-05, 2.587500000000853e-05, 2.492999999997858e-05, 2.583300000000288e-05, 2.588900000000116e-05, 2.591700000001418e-05, 2.5930000000007336e-05, 2.593100000000681e-05, 2.5874999999980774e-05, 2.5902999999993792e-05, 2.592999999997958e-05, 2.583300000000288e-05, 2.5846999999995512e-05]</msg>
<status status="PASS" starttime="20201029 12:47:39.270" endtime="20201029 12:47:39.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.257" endtime="20201029 12:47:39.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.725" endtime="20201029 12:47:39.277"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:38.601" endtime="20201029 12:47:39.279" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:39.296" endtime="20201029 12:47:39.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.292" endtime="20201029 12:47:39.319"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.354" endtime="20201029 12:47:39.369"></status>
</kw>
<msg timestamp="20201029 12:47:39.370" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.351" endtime="20201029 12:47:39.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.377" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.373" endtime="20201029 12:47:39.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.384" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:39.379" endtime="20201029 12:47:39.384"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:39.344" endtime="20201029 12:47:39.386"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:39.336" endtime="20201029 12:47:39.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.333" endtime="20201029 12:47:39.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:39.396" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:39.395" endtime="20201029 12:47:39.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.390" endtime="20201029 12:47:39.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.331" endtime="20201029 12:47:39.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.329" endtime="20201029 12:47:39.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.400" endtime="20201029 12:47:39.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.325" endtime="20201029 12:47:39.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.321" endtime="20201029 12:47:39.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.289" endtime="20201029 12:47:39.406"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.428" endtime="20201029 12:47:39.511"></status>
</kw>
<msg timestamp="20201029 12:47:39.512" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.425" endtime="20201029 12:47:39.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.518" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.514" endtime="20201029 12:47:39.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.521" endtime="20201029 12:47:39.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.418" endtime="20201029 12:47:39.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.412" endtime="20201029 12:47:39.528"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.532" endtime="20201029 12:47:39.537"></status>
</kw>
<msg timestamp="20201029 12:47:39.538" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:47:39.529" endtime="20201029 12:47:39.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.548" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:47:39.545" endtime="20201029 12:47:39.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.552" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:47:39.550" endtime="20201029 12:47:39.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.539" endtime="20201029 12:47:39.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.565" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:47:39.562" endtime="20201029 12:47:39.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.571" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:47:39.568" endtime="20201029 12:47:39.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.556" endtime="20201029 12:47:39.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.595" endtime="20201029 12:47:39.953"></status>
</kw>
<msg timestamp="20201029 12:47:39.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125932639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125964167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.591" endtime="20201029 12:47:39.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125932639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125964167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.963" endtime="20201029 12:47:39.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.984" endtime="20201029 12:47:39.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.581" endtime="20201029 12:47:39.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.575" endtime="20201029 12:47:39.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.005" level="INFO">${RESULT} = [{'diff': 3.152799999997513e-05}, {'diff': 3.1346999999987135e-05}, {'diff': 3.154199999999552e-05}, {'diff': 3.134700000001489e-05}, {'diff': 3.136100000000752e-05}, {'diff': 3.132000000000135e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:39.995" endtime="20201029 12:47:40.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:40.016" level="INFO">${OVERHEAD} = {'diff': [3.152799999997513e-05, 3.1346999999987135e-05, 3.154199999999552e-05, 3.134700000001489e-05, 3.136100000000752e-05, 3.132000000000135e-05, 3.1514000000010256e-05, 3.134700000001489e-05, 3.13...</msg>
<status status="PASS" starttime="20201029 12:47:40.008" endtime="20201029 12:47:40.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.030" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:47:40.027" endtime="20201029 12:47:40.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.037" level="INFO">VALUE: [3.152799999997513e-05, 3.1346999999987135e-05, 3.154199999999552e-05, 3.134700000001489e-05, 3.136100000000752e-05, 3.132000000000135e-05, 3.1514000000010256e-05, 3.134700000001489e-05, 3.1346999999987135e-05, 3.136100000000752e-05, 3.158300000000169e-05, 3.137500000000015e-05, 3.154199999999552e-05, 3.134799999998661e-05, 3.1332999999994504e-05, 3.1402999999985415e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.1527000000003413e-05, 3.1332999999994504e-05, 3.1346999999987135e-05, 3.15139999999825e-05, 3.141600000000633e-05, 3.142999999999896e-05, 3.1362000000006995e-05, 3.136100000000752e-05, 3.15139999999825e-05, 3.137500000000015e-05, 3.154199999999552e-05, 3.152800000000289e-05, 3.130599999998096e-05, 3.1514000000010256e-05, 3.1527000000003413e-05, 3.137500000000015e-05, 3.1346999999987135e-05, 3.1360999999979766e-05, 3.1542000000023274e-05, 3.136100000000752e-05, 3.1360999999979766e-05, 3.15410000000238e-05, 3.137500000000015e-05, 3.134700000001489e-05, 3.1332999999994504e-05, 3.152800000000289e-05, 3.1542000000023274e-05, 3.133400000002173e-05, 3.152800000000289e-05, 3.134700000001489e-05, 3.134700000001489e-05, 3.141600000000633e-05]</msg>
<status status="PASS" starttime="20201029 12:47:40.033" endtime="20201029 12:47:40.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.018" endtime="20201029 12:47:40.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.408" endtime="20201029 12:47:40.042"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:39.283" endtime="20201029 12:47:40.044" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:40.065" endtime="20201029 12:47:40.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.060" endtime="20201029 12:47:40.090"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.133" endtime="20201029 12:47:40.150"></status>
</kw>
<msg timestamp="20201029 12:47:40.151" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.129" endtime="20201029 12:47:40.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.157" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.153" endtime="20201029 12:47:40.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.164" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:40.160" endtime="20201029 12:47:40.164"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:40.120" endtime="20201029 12:47:40.166"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:40.111" endtime="20201029 12:47:40.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.108" endtime="20201029 12:47:40.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:40.176" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:40.175" endtime="20201029 12:47:40.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.170" endtime="20201029 12:47:40.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.106" endtime="20201029 12:47:40.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.104" endtime="20201029 12:47:40.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.180" endtime="20201029 12:47:40.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.097" endtime="20201029 12:47:40.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.092" endtime="20201029 12:47:40.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.057" endtime="20201029 12:47:40.187"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.209" endtime="20201029 12:47:40.405"></status>
</kw>
<msg timestamp="20201029 12:47:40.406" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.205" endtime="20201029 12:47:40.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.412" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.408" endtime="20201029 12:47:40.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.415" endtime="20201029 12:47:40.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.198" endtime="20201029 12:47:40.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.193" endtime="20201029 12:47:40.421"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.426" endtime="20201029 12:47:40.430"></status>
</kw>
<msg timestamp="20201029 12:47:40.432" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:47:40.423" endtime="20201029 12:47:40.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.441" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:47:40.439" endtime="20201029 12:47:40.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.446" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:47:40.444" endtime="20201029 12:47:40.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.433" endtime="20201029 12:47:40.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.458" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:47:40.455" endtime="20201029 12:47:40.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.463" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:47:40.460" endtime="20201029 12:47:40.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.449" endtime="20201029 12:47:40.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.483" endtime="20201029 12:47:40.819"></status>
</kw>
<msg timestamp="20201029 12:47:40.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1375735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137614333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:40.480" endtime="20201029 12:47:40.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1375735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137614333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:40.828" endtime="20201029 12:47:40.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.846" endtime="20201029 12:47:40.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.473" endtime="20201029 12:47:40.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.468" endtime="20201029 12:47:40.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.864" level="INFO">${RESULT} = [{'diff': 4.083300000001788e-05}, {'diff': 3.986200000000162e-05}, {'diff': 4.0847000000010514e-05}, {'diff': 4.0874999999995776e-05}, {'diff': 4.002799999999751e-05}, {'diff': 4.001400000000488e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:40.855" endtime="20201029 12:47:40.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:40.873" level="INFO">${OVERHEAD} = {'diff': [4.083300000001788e-05, 3.986200000000162e-05, 4.0847000000010514e-05, 4.0874999999995776e-05, 4.002799999999751e-05, 4.001400000000488e-05, 4.0861000000003145e-05, 4.0861000000003145e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:47:40.866" endtime="20201029 12:47:40.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.884" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:47:40.882" endtime="20201029 12:47:40.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.889" level="INFO">VALUE: [4.083300000001788e-05, 3.986200000000162e-05, 4.0847000000010514e-05, 4.0874999999995776e-05, 4.002799999999751e-05, 4.001400000000488e-05, 4.0861000000003145e-05, 4.0861000000003145e-05, 4.0874999999995776e-05, 4.083299999999013e-05, 4.0874999999995776e-05, 4.0861000000003145e-05, 4.0013000000005405e-05, 4.002799999999751e-05, 3.988899999998741e-05, 3.9861000000002145e-05, 4.087500000002353e-05, 4.083299999999013e-05, 4.0874999999995776e-05, 4.0874999999995776e-05, 4.086200000000262e-05, 4.009799999998842e-05, 4.0874999999995776e-05, 4.004199999999014e-05, 4.0791000000012234e-05, 4.005600000001053e-05, 4.086200000000262e-05, 3.994399999998621e-05, 4.0847000000010514e-05, 4.083299999999013e-05, 4.002799999999751e-05, 4.008300000002407e-05, 4.002799999999751e-05, 4.0013999999977123e-05, 4.0874999999995776e-05, 4.0860999999947634e-05, 4.0013999999977123e-05, 4.0847000000010514e-05, 3.986099999997439e-05, 4.088899999998841e-05, 4.0042000000017897e-05, 4.0874999999995776e-05, 4.0027999999969754e-05, 4.0055999999955016e-05, 4.0028000000025266e-05, 3.984699999998176e-05, 4.088899999998841e-05, 4.088800000001669e-05, 4.088899999998841e-05, 4.080600000000434e-05]</msg>
<status status="PASS" starttime="20201029 12:47:40.886" endtime="20201029 12:47:40.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.875" endtime="20201029 12:47:40.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.188" endtime="20201029 12:47:40.893"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:40.050" endtime="20201029 12:47:40.895" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:40.913" endtime="20201029 12:47:40.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.908" endtime="20201029 12:47:40.938"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.983" endtime="20201029 12:47:41.003"></status>
</kw>
<msg timestamp="20201029 12:47:41.004" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.979" endtime="20201029 12:47:41.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.011" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.006" endtime="20201029 12:47:41.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.017" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:41.013" endtime="20201029 12:47:41.018"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:40.967" endtime="20201029 12:47:41.020"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:40.958" endtime="20201029 12:47:41.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.955" endtime="20201029 12:47:41.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:41.030" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:41.028" endtime="20201029 12:47:41.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.024" endtime="20201029 12:47:41.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.953" endtime="20201029 12:47:41.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.950" endtime="20201029 12:47:41.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.033" endtime="20201029 12:47:41.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.945" endtime="20201029 12:47:41.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.940" endtime="20201029 12:47:41.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.905" endtime="20201029 12:47:41.040"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.049" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:47:41.065" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:47:43.077" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:47:41.046" endtime="20201029 12:47:43.079"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.086" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:47:43.082" endtime="20201029 12:47:43.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.042" endtime="20201029 12:47:43.089"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:43.099" endtime="20201029 12:47:43.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.094" endtime="20201029 12:47:43.124"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.150" endtime="20201029 12:47:43.162"></status>
</kw>
<msg timestamp="20201029 12:47:43.163" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.145" endtime="20201029 12:47:43.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.171" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.166" endtime="20201029 12:47:43.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.174" endtime="20201029 12:47:43.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.135" endtime="20201029 12:47:43.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.129" endtime="20201029 12:47:43.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.206" endtime="20201029 12:47:43.540"></status>
</kw>
<msg timestamp="20201029 12:47:43.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040665931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.040691944, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:43.202" endtime="20201029 12:47:43.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040665931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.040691944, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:43.550" endtime="20201029 12:47:43.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.569" endtime="20201029 12:47:43.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.192" endtime="20201029 12:47:43.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.186" endtime="20201029 12:47:43.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:43.585" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 2.4028000000002325e-05}, {'diff': 2.3985999999996677e-05}, {'diff': 2.395899999999701e-05}, {'diff': 2.3985999999996677e-05}, {'diff': 2.3971999999997107e-05}, {'diff': 2.399999...</msg>
<status status="PASS" starttime="20201029 12:47:43.577" endtime="20201029 12:47:43.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:43.595" level="INFO">${RESULT} = {'diff': [0, 2.4028000000002325e-05, 2.3985999999996677e-05, 2.395899999999701e-05, 2.3985999999996677e-05, 2.3971999999997107e-05, 2.3999999999996247e-05, 2.4014000000002755e-05, 2.3985999999996677e-...</msg>
<status status="PASS" starttime="20201029 12:47:43.587" endtime="20201029 12:47:43.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.605" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:43.603" endtime="20201029 12:47:43.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.612" level="INFO">VALUE: [0, 2.4028000000002325e-05, 2.3985999999996677e-05, 2.395899999999701e-05, 2.3985999999996677e-05, 2.3971999999997107e-05, 2.3999999999996247e-05, 2.4014000000002755e-05, 2.3985999999996677e-05, 2.4000000000003185e-05, 2.4000000000003185e-05, 2.4000000000003185e-05, 2.3986000000003616e-05, 2.3999999999996247e-05, 2.4014000000002755e-05, 2.3999999999996247e-05, 2.3985999999996677e-05, 2.397299999999658e-05, 2.3999999999996247e-05, 2.394499999999744e-05, 2.3999999999996247e-05, 2.3999999999996247e-05, 2.3985999999996677e-05, 2.3971999999997107e-05, 2.4000000000003185e-05, 2.3999999999996247e-05, 2.3985999999996677e-05, 2.397299999999658e-05, 2.3999999999996247e-05, 2.3999999999996247e-05, 2.3985999999996677e-05, 2.3985999999996677e-05, 2.4012999999996343e-05, 2.4013999999995816e-05, 2.3971999999997107e-05, 2.3999999999996247e-05, 2.3999999999996247e-05, 2.3985999999996677e-05, 2.3971999999997107e-05, 2.3985999999996677e-05, 2.398699999999615e-05, 2.3985999999996677e-05, 2.3985999999996677e-05, 2.3901999999999257e-05, 2.3972000000004046e-05, 2.3986000000003616e-05, 2.3986000000003616e-05, 2.3972000000004046e-05, 2.3986000000003616e-05, 2.4000000000003185e-05]</msg>
<status status="PASS" starttime="20201029 12:47:43.609" endtime="20201029 12:47:43.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.596" endtime="20201029 12:47:43.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.125" endtime="20201029 12:47:43.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.093" endtime="20201029 12:47:43.616"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:43.622" endtime="20201029 12:47:43.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.618" endtime="20201029 12:47:43.645"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.666" endtime="20201029 12:47:43.677"></status>
</kw>
<msg timestamp="20201029 12:47:43.679" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.662" endtime="20201029 12:47:43.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.685" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.681" endtime="20201029 12:47:43.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.687" endtime="20201029 12:47:43.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.655" endtime="20201029 12:47:43.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.650" endtime="20201029 12:47:43.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.711" endtime="20201029 12:47:44.055"></status>
</kw>
<msg timestamp="20201029 12:47:44.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033602736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033639972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.707" endtime="20201029 12:47:44.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033602736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033639972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.064" endtime="20201029 12:47:44.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.083" endtime="20201029 12:47:44.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.700" endtime="20201029 12:47:44.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.695" endtime="20201029 12:47:44.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:44.099" level="INFO">${PHILIP_RES} = [{'diff': 3.723599999999605e-05}, {'diff': 3.8847000000001575e-05}, {'diff': 3.884800000000105e-05}, {'diff': 3.883400000000148e-05}, {'diff': 3.8832999999995066e-05}, {'diff': 3.8847000000001575e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:44.092" endtime="20201029 12:47:44.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.110" level="INFO">${RESULT} = {'diff': [3.723599999999605e-05, 3.8847000000001575e-05, 3.884800000000105e-05, 3.883400000000148e-05, 3.8832999999995066e-05, 3.8847000000001575e-05, 3.8861000000001145e-05, 3.8916999999999424e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:47:44.101" endtime="20201029 12:47:44.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.120" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:44.118" endtime="20201029 12:47:44.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.125" level="INFO">VALUE: [3.723599999999605e-05, 3.8847000000001575e-05, 3.884800000000105e-05, 3.883400000000148e-05, 3.8832999999995066e-05, 3.8847000000001575e-05, 3.8861000000001145e-05, 3.8916999999999424e-05, 3.8847000000001575e-05, 3.884800000000105e-05, 3.8832999999995066e-05, 3.891700000000636e-05, 3.8833000000002005e-05, 3.883400000000148e-05, 3.881999999999497e-05, 3.8819000000002435e-05, 3.8847000000001575e-05, 3.881999999999497e-05, 3.8889000000000284e-05, 3.8805000000002865e-05, 3.883400000000148e-05, 3.8847000000001575e-05, 3.8847000000001575e-05, 3.8832999999995066e-05, 3.882000000000191e-05, 3.8819000000002435e-05, 3.8846999999994636e-05, 3.8847000000001575e-05, 3.8861000000001145e-05, 3.883399999999454e-05, 3.8819000000002435e-05, 3.8861000000001145e-05, 3.8833000000002005e-05, 3.8832999999995066e-05, 3.8847000000001575e-05, 3.886200000000062e-05, 3.8832999999995066e-05, 3.8832999999995066e-05, 3.8861000000001145e-05, 3.8833000000002005e-05, 3.8833000000002005e-05, 3.8832999999995066e-05, 3.8847000000001575e-05, 3.883400000000148e-05, 3.88059999999954e-05, 3.88059999999954e-05, 3.876400000000363e-05, 3.8875000000000715e-05, 3.884800000000105e-05, 3.8861000000001145e-05]</msg>
<status status="PASS" starttime="20201029 12:47:44.122" endtime="20201029 12:47:44.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.112" endtime="20201029 12:47:44.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.646" endtime="20201029 12:47:44.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.617" endtime="20201029 12:47:44.130"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.135" endtime="20201029 12:47:44.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.132" endtime="20201029 12:47:44.159"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.180" endtime="20201029 12:47:44.194"></status>
</kw>
<msg timestamp="20201029 12:47:44.195" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.176" endtime="20201029 12:47:44.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.201" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.197" endtime="20201029 12:47:44.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.203" endtime="20201029 12:47:44.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.169" endtime="20201029 12:47:44.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.164" endtime="20201029 12:47:44.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.227" endtime="20201029 12:47:44.574"></status>
</kw>
<msg timestamp="20201029 12:47:44.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033859667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033911042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.224" endtime="20201029 12:47:44.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033859667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033911042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.584" endtime="20201029 12:47:44.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.602" endtime="20201029 12:47:44.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.216" endtime="20201029 12:47:44.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.211" endtime="20201029 12:47:44.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:44.619" level="INFO">${PHILIP_RES} = [{'diff': 5.137499999999934e-05}, {'diff': 5.18470000000007e-05}, {'diff': 5.18470000000007e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.188899999999941e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:44.611" endtime="20201029 12:47:44.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.632" level="INFO">${RESULT} = {'diff': [5.137499999999934e-05, 5.18470000000007e-05, 5.18470000000007e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.191699999999855e-05, 5.186100000000027e-05, 5.186199...</msg>
<status status="PASS" starttime="20201029 12:47:44.621" endtime="20201029 12:47:44.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.649" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:44.646" endtime="20201029 12:47:44.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.657" level="INFO">VALUE: [5.137499999999934e-05, 5.18470000000007e-05, 5.18470000000007e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.191699999999855e-05, 5.186100000000027e-05, 5.186199999999974e-05, 5.18470000000007e-05, 5.181900000000156e-05, 5.188899999999941e-05, 5.183300000000113e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.186100000000027e-05, 5.186100000000027e-05, 5.177700000000285e-05, 5.186100000000027e-05, 5.187499999999984e-05, 5.184699999999376e-05, 5.18470000000007e-05, 5.191699999999855e-05, 5.191699999999855e-05, 5.188899999999941e-05, 5.188899999999941e-05, 5.186100000000027e-05, 5.18470000000007e-05, 5.186100000000027e-05, 5.187499999999984e-05, 5.186199999999974e-05, 5.187499999999984e-05, 5.186100000000027e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.1915999999999074e-05, 5.186100000000027e-05, 5.187499999999984e-05, 5.18470000000007e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.187499999999984e-05, 5.186100000000027e-05, 5.18470000000007e-05, 5.186100000000027e-05, 5.18470000000007e-05, 5.18470000000007e-05, 5.188899999999941e-05, 5.190300000000592e-05]</msg>
<status status="PASS" starttime="20201029 12:47:44.652" endtime="20201029 12:47:44.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.635" endtime="20201029 12:47:44.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.160" endtime="20201029 12:47:44.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.131" endtime="20201029 12:47:44.663"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.672" endtime="20201029 12:47:44.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.666" endtime="20201029 12:47:44.698"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.724" endtime="20201029 12:47:44.740"></status>
</kw>
<msg timestamp="20201029 12:47:44.742" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.721" endtime="20201029 12:47:44.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.747" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.744" endtime="20201029 12:47:44.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.750" endtime="20201029 12:47:44.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.712" endtime="20201029 12:47:44.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.703" endtime="20201029 12:47:44.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.774" endtime="20201029 12:47:45.118"></status>
</kw>
<msg timestamp="20201029 12:47:45.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041095542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041159389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.770" endtime="20201029 12:47:45.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041095542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041159389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.128" endtime="20201029 12:47:45.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.146" endtime="20201029 12:47:45.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.763" endtime="20201029 12:47:45.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.758" endtime="20201029 12:47:45.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:45.161" level="INFO">${PHILIP_RES} = [{'diff': 6.384699999999882e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.50559999999939e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.511099999999964e-05}, {'diff': 6.512499999999921e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:45.154" endtime="20201029 12:47:45.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:45.171" level="INFO">${RESULT} = {'diff': [6.384699999999882e-05, 6.512499999999921e-05, 6.50559999999939e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.511199999999912e-05, 6.513899999999878e-05, 6.51389...</msg>
<status status="PASS" starttime="20201029 12:47:45.163" endtime="20201029 12:47:45.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.181" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:45.179" endtime="20201029 12:47:45.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.186" level="INFO">VALUE: [6.384699999999882e-05, 6.512499999999921e-05, 6.50559999999939e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.511199999999912e-05, 6.513899999999878e-05, 6.513899999999878e-05, 6.509700000000007e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.513899999999878e-05, 6.511199999999912e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.513899999999878e-05, 6.516699999999792e-05, 6.511099999999964e-05, 6.50700000000004e-05, 6.5195000000004e-05, 6.513900000000572e-05, 6.504199999999433e-05, 6.512499999999921e-05, 6.512500000000615e-05, 6.512500000000615e-05, 6.512499999999921e-05, 6.513899999999878e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.515199999999888e-05, 6.50830000000005e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.509700000000007e-05, 6.513899999999878e-05, 6.519400000000453e-05, 6.518000000000496e-05, 6.50559999999939e-05, 6.518100000000443e-05, 6.513900000000572e-05, 6.513899999999878e-05, 6.508399999999998e-05, 6.509700000000007e-05, 6.512499999999921e-05]</msg>
<status status="PASS" starttime="20201029 12:47:45.183" endtime="20201029 12:47:45.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.172" endtime="20201029 12:47:45.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.699" endtime="20201029 12:47:45.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.664" endtime="20201029 12:47:45.190"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:45.196" endtime="20201029 12:47:45.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.193" endtime="20201029 12:47:45.221"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.243" endtime="20201029 12:47:45.262"></status>
</kw>
<msg timestamp="20201029 12:47:45.263" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.240" endtime="20201029 12:47:45.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.269" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.265" endtime="20201029 12:47:45.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.272" endtime="20201029 12:47:45.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.233" endtime="20201029 12:47:45.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.227" endtime="20201029 12:47:45.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.295" endtime="20201029 12:47:45.630"></status>
</kw>
<msg timestamp="20201029 12:47:45.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038331208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038408278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.292" endtime="20201029 12:47:45.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038331208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038408278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.639" endtime="20201029 12:47:45.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.660" endtime="20201029 12:47:45.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.285" endtime="20201029 12:47:45.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.280" endtime="20201029 12:47:45.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:45.680" level="INFO">${PHILIP_RES} = [{'diff': 7.706999999999853e-05}, {'diff': 7.830600000000021e-05}, {'diff': 7.833299999999987e-05}, {'diff': 7.833399999999935e-05}, {'diff': 7.834699999999944e-05}, {'diff': 7.831999999999978e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:45.673" endtime="20201029 12:47:45.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:45.690" level="INFO">${RESULT} = {'diff': [7.706999999999853e-05, 7.830600000000021e-05, 7.833299999999987e-05, 7.833399999999935e-05, 7.834699999999944e-05, 7.831999999999978e-05, 7.829200000000064e-05, 7.834699999999944e-05, 7.8306...</msg>
<status status="PASS" starttime="20201029 12:47:45.682" endtime="20201029 12:47:45.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.700" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:45.698" endtime="20201029 12:47:45.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.705" level="INFO">VALUE: [7.706999999999853e-05, 7.830600000000021e-05, 7.833299999999987e-05, 7.833399999999935e-05, 7.834699999999944e-05, 7.831999999999978e-05, 7.829200000000064e-05, 7.834699999999944e-05, 7.830600000000021e-05, 7.833300000000681e-05, 7.830500000000074e-05, 7.83190000000003e-05, 7.82919999999937e-05, 7.833299999999987e-05, 7.834699999999944e-05, 7.830600000000021e-05, 7.833299999999987e-05, 7.833299999999987e-05, 7.833400000000629e-05, 7.83190000000003e-05, 7.833299999999987e-05, 7.830500000000074e-05, 7.830500000000074e-05, 7.832000000000672e-05, 7.824999999999499e-05, 7.83190000000003e-05, 7.830500000000074e-05, 7.83190000000003e-05, 7.833400000000629e-05, 7.83190000000003e-05, 7.82770000000016e-05, 7.829100000000117e-05, 7.833399999999935e-05, 7.830500000000074e-05, 7.831899999999337e-05, 7.831999999999978e-05, 7.830600000000021e-05, 7.830600000000021e-05, 7.833299999999987e-05, 7.831899999999337e-05, 7.830600000000021e-05, 7.830600000000021e-05, 7.830600000000021e-05, 7.830500000000074e-05, 7.83049999999938e-05, 7.83190000000003e-05, 7.831999999999978e-05, 7.829100000000117e-05, 7.830500000000074e-05, 7.827800000000107e-05]</msg>
<status status="PASS" starttime="20201029 12:47:45.703" endtime="20201029 12:47:45.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.692" endtime="20201029 12:47:45.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.222" endtime="20201029 12:47:45.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.191" endtime="20201029 12:47:45.710"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:45.715" endtime="20201029 12:47:45.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.712" endtime="20201029 12:47:45.739"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.761" endtime="20201029 12:47:45.780"></status>
</kw>
<msg timestamp="20201029 12:47:45.781" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.758" endtime="20201029 12:47:45.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.788" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.784" endtime="20201029 12:47:45.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.790" endtime="20201029 12:47:45.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.751" endtime="20201029 12:47:45.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.745" endtime="20201029 12:47:45.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.814" endtime="20201029 12:47:46.150"></status>
</kw>
<msg timestamp="20201029 12:47:46.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035247472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035337417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.810" endtime="20201029 12:47:46.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035247472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035337417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.159" endtime="20201029 12:47:46.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.177" endtime="20201029 12:47:46.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.803" endtime="20201029 12:47:46.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.799" endtime="20201029 12:47:46.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:46.193" level="INFO">${PHILIP_RES} = [{'diff': 8.9945000000001e-05}, {'diff': 9.161199999999786e-05}, {'diff': 9.159799999999829e-05}, {'diff': 9.159700000000576e-05}, {'diff': 9.163899999999753e-05}, {'diff': 9.161099999999839e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:46.185" endtime="20201029 12:47:46.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:46.202" level="INFO">${RESULT} = {'diff': [8.9945000000001e-05, 9.161199999999786e-05, 9.159799999999829e-05, 9.159700000000576e-05, 9.163899999999753e-05, 9.161099999999839e-05, 9.161099999999839e-05, 9.159800000000523e-05, 9.159699...</msg>
<status status="PASS" starttime="20201029 12:47:46.195" endtime="20201029 12:47:46.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.212" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:46.210" endtime="20201029 12:47:46.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.219" level="INFO">VALUE: [8.9945000000001e-05, 9.161199999999786e-05, 9.159799999999829e-05, 9.159700000000576e-05, 9.163899999999753e-05, 9.161099999999839e-05, 9.161099999999839e-05, 9.159800000000523e-05, 9.159699999999882e-05, 9.159699999999882e-05, 9.161100000000533e-05, 9.16659999999972e-05, 9.155500000000011e-05, 9.161099999999839e-05, 9.158299999999925e-05, 9.161099999999839e-05, 9.165300000000404e-05, 9.159699999999882e-05, 9.159699999999882e-05, 9.159800000000523e-05, 9.159699999999882e-05, 9.158400000000566e-05, 9.159699999999882e-05, 9.156899999999968e-05, 9.161099999999839e-05, 9.158299999999925e-05, 9.158299999999925e-05, 9.165300000000404e-05, 9.156899999999968e-05, 9.161099999999839e-05, 9.158399999999872e-05, 9.159699999999882e-05, 9.158399999999872e-05, 9.156899999999968e-05, 9.158299999999925e-05, 9.159800000000523e-05, 9.159699999999882e-05, 9.154200000000001e-05, 9.159699999999882e-05, 9.159699999999882e-05, 9.161100000000533e-05, 9.155500000000011e-05, 9.155599999999958e-05, 9.159699999999882e-05, 9.156899999999968e-05, 9.155599999999958e-05, 9.158299999999925e-05, 9.156899999999968e-05, 9.156899999999968e-05, 9.157000000000609e-05]</msg>
<status status="PASS" starttime="20201029 12:47:46.214" endtime="20201029 12:47:46.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.204" endtime="20201029 12:47:46.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.740" endtime="20201029 12:47:46.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.711" endtime="20201029 12:47:46.223"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:46.229" endtime="20201029 12:47:46.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.225" endtime="20201029 12:47:46.252"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.273" endtime="20201029 12:47:46.295"></status>
</kw>
<msg timestamp="20201029 12:47:46.296" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.270" endtime="20201029 12:47:46.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.302" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.298" endtime="20201029 12:47:46.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.316" endtime="20201029 12:47:46.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.263" endtime="20201029 12:47:46.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.257" endtime="20201029 12:47:46.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.340" endtime="20201029 12:47:46.681"></status>
</kw>
<msg timestamp="20201029 12:47:46.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033616319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033721444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.336" endtime="20201029 12:47:46.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033616319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033721444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.690" endtime="20201029 12:47:46.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.707" endtime="20201029 12:47:46.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.329" endtime="20201029 12:47:46.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.325" endtime="20201029 12:47:46.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:46.723" level="INFO">${PHILIP_RES} = [{'diff': 0.00010512500000000452}, {'diff': 0.00010591699999999704}, {'diff': 0.00010591599999999757}, {'diff': 0.0001058889999999979}, {'diff': 0.00010591699999999704}, {'diff': 0.0001059309999999966...</msg>
<status status="PASS" starttime="20201029 12:47:46.716" endtime="20201029 12:47:46.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:46.734" level="INFO">${RESULT} = {'diff': [0.00010512500000000452, 0.00010591699999999704, 0.00010591599999999757, 0.0001058889999999979, 0.00010591699999999704, 0.00010593099999999661, 0.00010597199999999585, 0.00010591699999999704,...</msg>
<status status="PASS" starttime="20201029 12:47:46.725" endtime="20201029 12:47:46.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.744" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:46.742" endtime="20201029 12:47:46.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.752" level="INFO">VALUE: [0.00010512500000000452, 0.00010591699999999704, 0.00010591599999999757, 0.0001058889999999979, 0.00010591699999999704, 0.00010593099999999661, 0.00010597199999999585, 0.00010591699999999704, 0.00010588799999999843, 0.00010590300000000441, 0.00010590300000000441, 0.00010595800000000322, 0.00010590300000000441, 0.00010594500000000312, 0.00010591599999999757, 0.00010592999999999714, 0.00010592999999999714, 0.00010594400000000365, 0.00010587499999999833, 0.0001058889999999979, 0.00010588900000000484, 0.00010591699999999704, 0.00010586099999999876, 0.00010590299999999747, 0.000105901999999998, 0.00010591700000000398, 0.0001059160000000045, 0.0001058889999999979, 0.00010591699999999704, 0.00010597299999999532, 0.00010591599999999757, 0.00010590299999999747, 0.00010590299999999747, 0.00010593100000000355, 0.00010591700000000398, 0.00010592999999999714, 0.00010591699999999704, 0.00010591699999999704, 0.00010594399999999671, 0.0001058889999999979, 0.00010594399999999671, 0.00010591699999999704, 0.00010590300000000441, 0.00010595800000000322, 0.00010590299999999747, 0.00010593099999999661, 0.00010594499999999618, 0.00010592999999999714, 0.00010591699999999704, 0.00010591699999999704]</msg>
<status status="PASS" starttime="20201029 12:47:46.747" endtime="20201029 12:47:46.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.736" endtime="20201029 12:47:46.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.254" endtime="20201029 12:47:46.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.224" endtime="20201029 12:47:46.761"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:46.770" endtime="20201029 12:47:46.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.764" endtime="20201029 12:47:46.797"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.819" endtime="20201029 12:47:46.843"></status>
</kw>
<msg timestamp="20201029 12:47:46.844" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.815" endtime="20201029 12:47:46.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.851" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.846" endtime="20201029 12:47:46.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.853" endtime="20201029 12:47:46.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.808" endtime="20201029 12:47:46.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.803" endtime="20201029 12:47:46.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.876" endtime="20201029 12:47:47.217"></status>
</kw>
<msg timestamp="20201029 12:47:47.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037590236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037709167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.873" endtime="20201029 12:47:47.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037590236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037709167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.226" endtime="20201029 12:47:47.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.244" endtime="20201029 12:47:47.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.866" endtime="20201029 12:47:47.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.861" endtime="20201029 12:47:47.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:47.260" level="INFO">${PHILIP_RES} = [{'diff': 0.00011893100000000267}, {'diff': 0.00012018099999999698}, {'diff': 0.00012018099999999698}, {'diff': 0.00012015299999999784}, {'diff': 0.00012020800000000359}, {'diff': 0.000120152999999997...</msg>
<status status="PASS" starttime="20201029 12:47:47.252" endtime="20201029 12:47:47.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.270" level="INFO">${RESULT} = {'diff': [0.00011893100000000267, 0.00012018099999999698, 0.00012018099999999698, 0.00012015299999999784, 0.00012020800000000359, 0.00012015299999999784, 0.00012018100000000392, 0.00012018099999999698...</msg>
<status status="PASS" starttime="20201029 12:47:47.262" endtime="20201029 12:47:47.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.281" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:47.278" endtime="20201029 12:47:47.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.286" level="INFO">VALUE: [0.00011893100000000267, 0.00012018099999999698, 0.00012018099999999698, 0.00012015299999999784, 0.00012020800000000359, 0.00012015299999999784, 0.00012018100000000392, 0.00012018099999999698, 0.00012019399999999708, 0.00012019400000000402, 0.00012020799999999665, 0.00012022200000000316, 0.00012022199999999622, 0.00012019400000000402, 0.00012018000000000445, 0.00012018099999999698, 0.00012019399999999708, 0.0001201249999999987, 0.00012016599999999794, 0.00012020800000000359, 0.00012020800000000359, 0.00012017999999999751, 0.00012020800000000359, 0.00012022199999999622, 0.00012019400000000402, 0.00012017999999999751, 0.00012019400000000402, 0.00012026399999999493, 0.00012016700000000435, 0.00012020799999999665, 0.00012019400000000402, 0.00012022200000000316, 0.00012018099999999698, 0.00012015300000000478, 0.00012018099999999698, 0.0001201950000000035, 0.00012023600000000273, 0.00012023599999999579, 0.00012015299999999784, 0.0001201950000000035, 0.00012020799999999665, 0.0001202370000000022, 0.00012020799999999665, 0.00012019400000000402, 0.00012020799999999665, 0.00012022300000000263, 0.00012020799999999665, 0.00012016600000000488, 0.00012019399999999708, 0.00012018099999999698]</msg>
<status status="PASS" starttime="20201029 12:47:47.283" endtime="20201029 12:47:47.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.272" endtime="20201029 12:47:47.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.799" endtime="20201029 12:47:47.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.762" endtime="20201029 12:47:47.290"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:47.296" endtime="20201029 12:47:47.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.292" endtime="20201029 12:47:47.319"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.340" endtime="20201029 12:47:47.366"></status>
</kw>
<msg timestamp="20201029 12:47:47.368" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.337" endtime="20201029 12:47:47.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.374" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.370" endtime="20201029 12:47:47.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.376" endtime="20201029 12:47:47.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.330" endtime="20201029 12:47:47.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.324" endtime="20201029 12:47:47.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.399" endtime="20201029 12:47:47.742"></status>
</kw>
<msg timestamp="20201029 12:47:47.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034219431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034352625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.396" endtime="20201029 12:47:47.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034219431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034352625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.751" endtime="20201029 12:47:47.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.768" endtime="20201029 12:47:47.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.389" endtime="20201029 12:47:47.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.384" endtime="20201029 12:47:47.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:47.784" level="INFO">${PHILIP_RES} = [{'diff': 0.0001331939999999962}, {'diff': 0.0001343609999999995}, {'diff': 0.00013440299999999822}, {'diff': 0.00013441599999999831}, {'diff': 0.0001343609999999995}, {'diff': 0.00013442999999999788}...</msg>
<status status="PASS" starttime="20201029 12:47:47.777" endtime="20201029 12:47:47.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.793" level="INFO">${RESULT} = {'diff': [0.0001331939999999962, 0.0001343609999999995, 0.00013440299999999822, 0.00013441599999999831, 0.0001343609999999995, 0.00013442999999999788, 0.00013438799999999917, 0.00013444399999999745, 0...</msg>
<status status="PASS" starttime="20201029 12:47:47.786" endtime="20201029 12:47:47.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.804" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:47.801" endtime="20201029 12:47:47.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.809" level="INFO">VALUE: [0.0001331939999999962, 0.0001343609999999995, 0.00013440299999999822, 0.00013441599999999831, 0.0001343609999999995, 0.00013442999999999788, 0.00013438799999999917, 0.00013444399999999745, 0.00013441700000000473, 0.00013440199999999874, 0.00013438899999999865, 0.00013438899999999865, 0.00013440300000000516, 0.00013438899999999865, 0.0001344169999999978, 0.0001343890000000056, 0.00013440300000000516, 0.0001343609999999995, 0.00013441599999999831, 0.0001343609999999995, 0.0001343609999999995, 0.00013440299999999822, 0.00013438899999999865, 0.0001343609999999995, 0.00013437500000000602, 0.0001343890000000056, 0.0001343609999999995, 0.00013441600000000525, 0.00013443099999999736, 0.00013438899999999865, 0.0001343609999999995, 0.00013444399999999745, 0.00013440300000000516, 0.00013440299999999822, 0.00013445799999999702, 0.00013437499999999908, 0.00013438899999999865, 0.00013440299999999822, 0.00013441700000000473, 0.0001343890000000056, 0.00013441700000000473, 0.00013438899999999865, 0.00013437499999999908, 0.00013438799999999917, 0.00013445799999999702, 0.0001343890000000056, 0.00013440200000000568, 0.00013441599999999831, 0.00013437499999999908, 0.00013440299999999822]</msg>
<status status="PASS" starttime="20201029 12:47:47.806" endtime="20201029 12:47:47.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.795" endtime="20201029 12:47:47.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.321" endtime="20201029 12:47:47.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.291" endtime="20201029 12:47:47.813"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:47.819" endtime="20201029 12:47:47.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.815" endtime="20201029 12:47:47.842"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.863" endtime="20201029 12:47:47.891"></status>
</kw>
<msg timestamp="20201029 12:47:47.892" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.859" endtime="20201029 12:47:47.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.899" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.895" endtime="20201029 12:47:47.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.901" endtime="20201029 12:47:47.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.852" endtime="20201029 12:47:47.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.847" endtime="20201029 12:47:47.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.925" endtime="20201029 12:47:48.280"></status>
</kw>
<msg timestamp="20201029 12:47:48.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034676667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034824806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.922" endtime="20201029 12:47:48.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034676667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034824806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.289" endtime="20201029 12:47:48.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.307" endtime="20201029 12:47:48.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.915" endtime="20201029 12:47:48.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.910" endtime="20201029 12:47:48.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:48.322" level="INFO">${PHILIP_RES} = [{'diff': 0.00014813899999999852}, {'diff': 0.00014866600000000563}, {'diff': 0.0001486529999999986}, {'diff': 0.0001486949999999973}, {'diff': 0.00014863899999999902}, {'diff': 0.00014862499999999945...</msg>
<status status="PASS" starttime="20201029 12:47:48.315" endtime="20201029 12:47:48.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:48.331" level="INFO">${RESULT} = {'diff': [0.00014813899999999852, 0.00014866600000000563, 0.0001486529999999986, 0.0001486949999999973, 0.00014863899999999902, 0.00014862499999999945, 0.00014867999999999826, 0.0001486250000000064, 0...</msg>
<status status="PASS" starttime="20201029 12:47:48.324" endtime="20201029 12:47:48.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.342" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:48.340" endtime="20201029 12:47:48.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.347" level="INFO">VALUE: [0.00014813899999999852, 0.00014866600000000563, 0.0001486529999999986, 0.0001486949999999973, 0.00014863899999999902, 0.00014862499999999945, 0.00014867999999999826, 0.0001486250000000064, 0.0001486529999999986, 0.00014858300000000074, 0.00014866699999999816, 0.00014868099999999773, 0.0001487079999999974, 0.0001486529999999986, 0.00014862499999999945, 0.0001486670000000051, 0.00014861099999999988, 0.00014858300000000074, 0.00014865199999999912, 0.00014861099999999988, 0.0001486529999999986, 0.00014869399999999783, 0.00014869500000000424, 0.00014866600000000563, 0.00014863899999999902, 0.00014863799999999955, 0.00014867999999999826, 0.0001485970000000003, 0.00014865300000000553, 0.0001486949999999973, 0.00014862499999999945, 0.00014863899999999902, 0.00014866600000000563, 0.0001486670000000051, 0.00014867999999999826, 0.00014862499999999945, 0.00014873600000000348, 0.00014859799999999979, 0.0001486529999999986, 0.00014866600000000563, 0.00014868099999999773, 0.00014867999999999826, 0.00014865199999999912, 0.00014866699999999816, 0.00014863899999999902, 0.00014865300000000553, 0.00014866699999999816, 0.0001486529999999986, 0.0001486800000000052, 0.00014866699999999816]</msg>
<status status="PASS" starttime="20201029 12:47:48.344" endtime="20201029 12:47:48.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.333" endtime="20201029 12:47:48.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.843" endtime="20201029 12:47:48.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.814" endtime="20201029 12:47:48.351"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:48.357" endtime="20201029 12:47:48.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.353" endtime="20201029 12:47:48.381"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.403" endtime="20201029 12:47:48.433"></status>
</kw>
<msg timestamp="20201029 12:47:48.434" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.400" endtime="20201029 12:47:48.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.441" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.437" endtime="20201029 12:47:48.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.443" endtime="20201029 12:47:48.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.392" endtime="20201029 12:47:48.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.387" endtime="20201029 12:47:48.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.466" endtime="20201029 12:47:48.808"></status>
</kw>
<msg timestamp="20201029 12:47:48.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036227208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036391194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.463" endtime="20201029 12:47:48.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036227208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036391194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.817" endtime="20201029 12:47:48.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.834" endtime="20201029 12:47:48.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.456" endtime="20201029 12:47:48.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.451" endtime="20201029 12:47:48.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:48.850" level="INFO">${PHILIP_RES} = [{'diff': 0.00016398600000000485}, {'diff': 0.00016397300000000475}, {'diff': 0.0001639439999999992}, {'diff': 0.00016398699999999738}, {'diff': 0.0001639859999999979}, {'diff': 0.00016400000000000442...</msg>
<status status="PASS" starttime="20201029 12:47:48.843" endtime="20201029 12:47:48.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:48.859" level="INFO">${RESULT} = {'diff': [0.00016398600000000485, 0.00016397300000000475, 0.0001639439999999992, 0.00016398699999999738, 0.0001639859999999979, 0.00016400000000000442, 0.00016397300000000475, 0.00016395899999999825, ...</msg>
<status status="PASS" starttime="20201029 12:47:48.852" endtime="20201029 12:47:48.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.869" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:48.867" endtime="20201029 12:47:48.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.876" level="INFO">VALUE: [0.00016398600000000485, 0.00016397300000000475, 0.0001639439999999992, 0.00016398699999999738, 0.0001639859999999979, 0.00016400000000000442, 0.00016397300000000475, 0.00016395899999999825, 0.00016395799999999877, 0.00016397299999999781, 0.00016397199999999834, 0.00016397300000000475, 0.00016391699999999954, 0.00016395799999999877, 0.00016394400000000614, 0.00016390299999999997, 0.00016395799999999877, 0.00016395799999999877, 0.0001639859999999979, 0.00016402800000000356, 0.00016397299999999781, 0.00016404200000000313, 0.00016400000000000442, 0.000164014000000004, 0.000164014000000004, 0.0001640690000000028, 0.000164014000000004, 0.00016398600000000485, 0.00016400000000000442, 0.00016395899999999825, 0.00016394499999999868, 0.00016395899999999825, 0.00016400000000000442, 0.00016400000000000442, 0.00016397199999999834, 0.0001639859999999979, 0.00016399999999999748, 0.0001639859999999979, 0.0001639859999999979, 0.0001639859999999979, 0.000164014000000004, 0.00016400000000000442, 0.00016405500000000323, 0.00016395799999999877, 0.00016400000000000442, 0.00016402800000000356, 0.00016401299999999758, 0.00016402699999999715, 0.00016399999999999748, 0.00016401399999999705]</msg>
<status status="PASS" starttime="20201029 12:47:48.872" endtime="20201029 12:47:48.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.861" endtime="20201029 12:47:48.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.382" endtime="20201029 12:47:48.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.352" endtime="20201029 12:47:48.881"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:48.886" endtime="20201029 12:47:48.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.883" endtime="20201029 12:47:48.910"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.931" endtime="20201029 12:47:48.963"></status>
</kw>
<msg timestamp="20201029 12:47:48.964" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.928" endtime="20201029 12:47:48.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.970" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.966" endtime="20201029 12:47:48.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.973" endtime="20201029 12:47:48.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.921" endtime="20201029 12:47:48.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.915" endtime="20201029 12:47:48.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.996" endtime="20201029 12:47:49.337"></status>
</kw>
<msg timestamp="20201029 12:47:49.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034835444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035013972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.993" endtime="20201029 12:47:49.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034835444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035013972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.346" endtime="20201029 12:47:49.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.363" endtime="20201029 12:47:49.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.986" endtime="20201029 12:47:49.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.981" endtime="20201029 12:47:49.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:49.379" level="INFO">${PHILIP_RES} = [{'diff': 0.00017852799999999724}, {'diff': 0.0001792920000000045}, {'diff': 0.00017926399999999842}, {'diff': 0.00017930600000000407}, {'diff': 0.00017923599999999928}, {'diff': 0.0001792499999999988...</msg>
<status status="PASS" starttime="20201029 12:47:49.371" endtime="20201029 12:47:49.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:49.389" level="INFO">${RESULT} = {'diff': [0.00017852799999999724, 0.0001792920000000045, 0.00017926399999999842, 0.00017930600000000407, 0.00017923599999999928, 0.00017924999999999885, 0.00017931900000000417, 0.00017927800000000493,...</msg>
<status status="PASS" starttime="20201029 12:47:49.381" endtime="20201029 12:47:49.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.399" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:49.397" endtime="20201029 12:47:49.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.405" level="INFO">VALUE: [0.00017852799999999724, 0.0001792920000000045, 0.00017926399999999842, 0.00017930600000000407, 0.00017923599999999928, 0.00017924999999999885, 0.00017931900000000417, 0.00017927800000000493, 0.0001792500000000058, 0.000179277999999998, 0.00017924999999999885, 0.00017924999999999885, 0.000179277999999998, 0.00017930600000000407, 0.0001792500000000058, 0.000179277999999998, 0.00017923599999999928, 0.00017924999999999885, 0.0001792370000000057, 0.00017936099999999594, 0.00017923599999999928, 0.00017924999999999885, 0.00017927700000000546, 0.00017926299999999895, 0.00017926399999999842, 0.000179277999999998, 0.00017924999999999885, 0.000179277999999998, 0.00017924999999999885, 0.00017926399999999842, 0.000179277999999998, 0.00017924999999999885, 0.0001792909999999981, 0.00017920899999999962, 0.00017923699999999876, 0.00017926399999999842, 0.00017930600000000407, 0.00017929199999999756, 0.00017923599999999928, 0.00017926299999999895, 0.00017924999999999885, 0.000179277999999998, 0.00017930599999999713, 0.00017930599999999713, 0.00017924999999999885, 0.00017922199999999971, 0.00017924999999999885, 0.0001792909999999981, 0.00017927699999999852, 0.0001793470000000033]</msg>
<status status="PASS" starttime="20201029 12:47:49.402" endtime="20201029 12:47:49.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.391" endtime="20201029 12:47:49.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.911" endtime="20201029 12:47:49.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.881" endtime="20201029 12:47:49.409"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:49.415" endtime="20201029 12:47:49.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.411" endtime="20201029 12:47:49.439"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.459" endtime="20201029 12:47:49.493"></status>
</kw>
<msg timestamp="20201029 12:47:49.494" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.456" endtime="20201029 12:47:49.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.501" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.497" endtime="20201029 12:47:49.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.503" endtime="20201029 12:47:49.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.449" endtime="20201029 12:47:49.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.444" endtime="20201029 12:47:49.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.526" endtime="20201029 12:47:49.869"></status>
</kw>
<msg timestamp="20201029 12:47:49.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034571736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034764722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.523" endtime="20201029 12:47:49.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034571736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034764722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.878" endtime="20201029 12:47:49.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.895" endtime="20201029 12:47:49.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.515" endtime="20201029 12:47:49.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.511" endtime="20201029 12:47:49.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:49.911" level="INFO">${PHILIP_RES} = [{'diff': 0.00019298599999999916}, {'diff': 0.00019445800000000152}, {'diff': 0.00019444500000000142}, {'diff': 0.00019444499999999448}, {'diff': 0.00019445800000000152}, {'diff': 0.000194389000000003...</msg>
<status status="PASS" starttime="20201029 12:47:49.903" endtime="20201029 12:47:49.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:49.921" level="INFO">${RESULT} = {'diff': [0.00019298599999999916, 0.00019445800000000152, 0.00019444500000000142, 0.00019444499999999448, 0.00019445800000000152, 0.00019438900000000314, 0.00019444500000000142, 0.00019443100000000185...</msg>
<status status="PASS" starttime="20201029 12:47:49.913" endtime="20201029 12:47:49.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.932" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:49.929" endtime="20201029 12:47:49.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.937" level="INFO">VALUE: [0.00019298599999999916, 0.00019445800000000152, 0.00019444500000000142, 0.00019444499999999448, 0.00019445800000000152, 0.00019438900000000314, 0.00019444500000000142, 0.00019443100000000185, 0.00019441599999999587, 0.0001944030000000027, 0.00019448600000000066, 0.0001944720000000011, 0.0001944720000000011, 0.00019445800000000152, 0.000194459000000001, 0.00019441699999999534, 0.00019450000000000023, 0.00019448600000000066, 0.00019443000000000238, 0.00019445799999999458, 0.00019444500000000142, 0.0001944720000000011, 0.000194459000000001, 0.00019444400000000195, 0.0001945139999999998, 0.00019443100000000185, 0.00019443100000000185, 0.00019444499999999448, 0.00019441700000000228, 0.00019448600000000066, 0.0001944160000000028, 0.00019444400000000195, 0.0001944309999999949, 0.0001944160000000028, 0.00019440299999999577, 0.000194459000000001, 0.00019445800000000152, 0.00019444400000000195, 0.0001944309999999949, 0.00019450000000000023, 0.00019447300000000056, 0.00019443100000000185, 0.00019441700000000228, 0.000194459000000001, 0.00019450000000000023, 0.00019452799999999937, 0.000194459000000001, 0.00019444500000000142, 0.00019444500000000142, 0.00019448600000000066]</msg>
<status status="PASS" starttime="20201029 12:47:49.934" endtime="20201029 12:47:49.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.923" endtime="20201029 12:47:49.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.440" endtime="20201029 12:47:49.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.410" endtime="20201029 12:47:49.941"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:49.948" endtime="20201029 12:47:49.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.944" endtime="20201029 12:47:49.971"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.994" endtime="20201029 12:47:50.030"></status>
</kw>
<msg timestamp="20201029 12:47:50.031" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.991" endtime="20201029 12:47:50.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.037" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.034" endtime="20201029 12:47:50.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.040" endtime="20201029 12:47:50.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.984" endtime="20201029 12:47:50.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.978" endtime="20201029 12:47:50.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.063" endtime="20201029 12:47:50.396"></status>
</kw>
<msg timestamp="20201029 12:47:50.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036866167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037074472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.059" endtime="20201029 12:47:50.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036866167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037074472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.405" endtime="20201029 12:47:50.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.423" endtime="20201029 12:47:50.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.052" endtime="20201029 12:47:50.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.048" endtime="20201029 12:47:50.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:50.439" level="INFO">${PHILIP_RES} = [{'diff': 0.0002083049999999989}, {'diff': 0.00020966599999999724}, {'diff': 0.0002096950000000028}, {'diff': 0.00020966599999999724}, {'diff': 0.0002096799999999968}, {'diff': 0.00020963900000000452}...</msg>
<status status="PASS" starttime="20201029 12:47:50.431" endtime="20201029 12:47:50.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:50.448" level="INFO">${RESULT} = {'diff': [0.0002083049999999989, 0.00020966599999999724, 0.0002096950000000028, 0.00020966599999999724, 0.0002096799999999968, 0.00020963900000000452, 0.00020966700000000366, 0.0002096950000000028, 0....</msg>
<status status="PASS" starttime="20201029 12:47:50.441" endtime="20201029 12:47:50.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.458" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:50.456" endtime="20201029 12:47:50.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.463" level="INFO">VALUE: [0.0002083049999999989, 0.00020966599999999724, 0.0002096950000000028, 0.00020966599999999724, 0.0002096799999999968, 0.00020963900000000452, 0.00020966700000000366, 0.0002096950000000028, 0.00020972300000000194, 0.00020963899999999758, 0.00020968100000000323, 0.0002096950000000028, 0.0002097080000000029, 0.00020969400000000332, 0.00020963900000000452, 0.00020969499999999586, 0.00020974999999999466, 0.00020966700000000366, 0.00020969499999999586, 0.00020974999999999466, 0.0002096950000000028, 0.00020972300000000194, 0.00020968100000000323, 0.00020968100000000323, 0.00020972200000000246, 0.00020965299999999715, 0.00020966699999999672, 0.0002097500000000016, 0.00020976400000000117, 0.00020972200000000246, 0.0002097359999999951, 0.00020972200000000246, 0.0002097370000000015, 0.0002097920000000003, 0.00020976400000000117, 0.00020977800000000074, 0.0002097359999999951, 0.00020979100000000084, 0.0002097500000000016, 0.00020968100000000323, 0.0002097630000000017, 0.00020973600000000203, 0.00020976400000000117, 0.00020969399999999638, 0.00020973600000000203, 0.00020970799999999595, 0.00020973600000000203, 0.0002097770000000082, 0.00020970900000000237, 0.00020972199999999552]</msg>
<status status="PASS" starttime="20201029 12:47:50.460" endtime="20201029 12:47:50.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.450" endtime="20201029 12:47:50.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.972" endtime="20201029 12:47:50.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.943" endtime="20201029 12:47:50.468"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:50.474" endtime="20201029 12:47:50.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.470" endtime="20201029 12:47:50.497"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.518" endtime="20201029 12:47:50.555"></status>
</kw>
<msg timestamp="20201029 12:47:50.556" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.514" endtime="20201029 12:47:50.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.562" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.558" endtime="20201029 12:47:50.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.565" endtime="20201029 12:47:50.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.507" endtime="20201029 12:47:50.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.502" endtime="20201029 12:47:50.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.589" endtime="20201029 12:47:50.917"></status>
</kw>
<msg timestamp="20201029 12:47:50.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033680056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033906208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.586" endtime="20201029 12:47:50.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033680056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033906208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.926" endtime="20201029 12:47:50.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.943" endtime="20201029 12:47:50.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.579" endtime="20201029 12:47:50.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.574" endtime="20201029 12:47:50.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:50.959" level="INFO">${PHILIP_RES} = [{'diff': 0.0002261520000000003}, {'diff': 0.00022611100000000106}, {'diff': 0.00022604199999999575}, {'diff': 0.00022607000000000183}, {'diff': 0.0002260840000000014}, {'diff': 0.00022606999999999489...</msg>
<status status="PASS" starttime="20201029 12:47:50.951" endtime="20201029 12:47:50.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:50.968" level="INFO">${RESULT} = {'diff': [0.0002261520000000003, 0.00022611100000000106, 0.00022604199999999575, 0.00022607000000000183, 0.0002260840000000014, 0.00022606999999999489, 0.00022605500000000278, 0.00022609800000000096, ...</msg>
<status status="PASS" starttime="20201029 12:47:50.961" endtime="20201029 12:47:50.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.978" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:50.976" endtime="20201029 12:47:50.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.983" level="INFO">VALUE: [0.0002261520000000003, 0.00022611100000000106, 0.00022604199999999575, 0.00022607000000000183, 0.0002260840000000014, 0.00022606999999999489, 0.00022605500000000278, 0.00022609800000000096, 0.00022607000000000183, 0.0002260840000000014, 0.00022605599999999532, 0.00022608300000000192, 0.0002260689999999954, 0.00022605499999999584, 0.00022609800000000096, 0.00022608300000000192, 0.00022604200000000269, 0.00022607000000000183, 0.00022605599999999532, 0.00022608299999999498, 0.00022605500000000278, 0.00022606900000000235, 0.0002260689999999954, 0.00022611100000000106, 0.00022611100000000106, 0.00022605600000000226, 0.00022601400000000355, 0.0002261249999999937, 0.00022608300000000192, 0.00022612500000000063, 0.00022612500000000063, 0.00022609800000000096, 0.00022607000000000183, 0.0002260689999999954, 0.00022606900000000235, 0.00022616699999999934, 0.0002261249999999937, 0.00022606900000000235, 0.0002260689999999954, 0.00022606900000000235, 0.0002261390000000002, 0.00022606900000000235, 0.00022604200000000269, 0.00022602800000000312, 0.00022605599999999532, 0.00022604200000000269, 0.00022607000000000183, 0.00022608299999999498, 0.00022605500000000278, 0.00022605600000000226]</msg>
<status status="PASS" starttime="20201029 12:47:50.981" endtime="20201029 12:47:50.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.969" endtime="20201029 12:47:50.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.498" endtime="20201029 12:47:50.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.469" endtime="20201029 12:47:50.988"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:50.994" endtime="20201029 12:47:51.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.991" endtime="20201029 12:47:51.017"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.040" endtime="20201029 12:47:51.079"></status>
</kw>
<msg timestamp="20201029 12:47:51.081" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.036" endtime="20201029 12:47:51.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.087" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.083" endtime="20201029 12:47:51.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.089" endtime="20201029 12:47:51.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.029" endtime="20201029 12:47:51.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.024" endtime="20201029 12:47:51.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.112" endtime="20201029 12:47:51.451"></status>
</kw>
<msg timestamp="20201029 12:47:51.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035408375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035650847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.109" endtime="20201029 12:47:51.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035408375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035650847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.460" endtime="20201029 12:47:51.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.477" endtime="20201029 12:47:51.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.102" endtime="20201029 12:47:51.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.097" endtime="20201029 12:47:51.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:51.493" level="INFO">${PHILIP_RES} = [{'diff': 0.00024247200000000052}, {'diff': 0.00024230499999999822}, {'diff': 0.00024231900000000473}, {'diff': 0.00024234699999999693}, {'diff': 0.00024233400000000377}, {'diff': 0.000242263999999998...</msg>
<status status="PASS" starttime="20201029 12:47:51.485" endtime="20201029 12:47:51.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:51.502" level="INFO">${RESULT} = {'diff': [0.00024247200000000052, 0.00024230499999999822, 0.00024231900000000473, 0.00024234699999999693, 0.00024233400000000377, 0.00024226399999999898, 0.00024240300000000214, 0.0002423059999999977,...</msg>
<status status="PASS" starttime="20201029 12:47:51.495" endtime="20201029 12:47:51.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.512" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:51.510" endtime="20201029 12:47:51.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.519" level="INFO">VALUE: [0.00024247200000000052, 0.00024230499999999822, 0.00024231900000000473, 0.00024234699999999693, 0.00024233400000000377, 0.00024226399999999898, 0.00024240300000000214, 0.0002423059999999977, 0.00024229199999999812, 0.00024227799999999855, 0.00024230500000000516, 0.00024231999999999726, 0.00024229199999999812, 0.00024234699999999693, 0.00024229100000000559, 0.00024233400000000377, 0.00024227799999999855, 0.00024234699999999693, 0.0002423059999999977, 0.0002422780000000055, 0.00024230500000000516, 0.00024227700000000602, 0.00024236100000000343, 0.0002423059999999977, 0.00024233399999999683, 0.00024236100000000343, 0.00024227799999999855, 0.0002423609999999965, 0.00024229200000000506, 0.00024238899999999564, 0.00024227799999999855, 0.00024233299999999736, 0.00024236100000000343, 0.00024231900000000473, 0.00024231899999999779, 0.00024231899999999779, 0.00024238900000000257, 0.00024231999999999726, 0.000242375000000003, 0.00024234699999999693, 0.00024233299999999736, 0.00024240200000000267, 0.00024234699999999693, 0.0002423609999999965, 0.00024233299999999736, 0.00024230499999999822, 0.00024233299999999736, 0.00024234699999999, 0.00024238799999999616, 0.00024231900000000473]</msg>
<status status="PASS" starttime="20201029 12:47:51.514" endtime="20201029 12:47:51.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.503" endtime="20201029 12:47:51.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.019" endtime="20201029 12:47:51.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.989" endtime="20201029 12:47:51.529"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:51.534" endtime="20201029 12:47:51.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.531" endtime="20201029 12:47:51.558"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.581" endtime="20201029 12:47:51.631"></status>
</kw>
<msg timestamp="20201029 12:47:51.633" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.576" endtime="20201029 12:47:51.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.641" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.636" endtime="20201029 12:47:51.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.643" endtime="20201029 12:47:51.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.568" endtime="20201029 12:47:51.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.563" endtime="20201029 12:47:51.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.668" endtime="20201029 12:47:52.065"></status>
</kw>
<msg timestamp="20201029 12:47:52.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039030611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039289181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.664" endtime="20201029 12:47:52.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039030611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039289181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.074" endtime="20201029 12:47:52.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.091" endtime="20201029 12:47:52.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.657" endtime="20201029 12:47:52.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.653" endtime="20201029 12:47:52.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:52.107" level="INFO">${PHILIP_RES} = [{'diff': 0.00025856999999999963}, {'diff': 0.00025851400000000135}, {'diff': 0.0002585000000000018}, {'diff': 0.0002585969999999993}, {'diff': 0.0002584859999999953}, {'diff': 0.0002585280000000009},...</msg>
<status status="PASS" starttime="20201029 12:47:52.100" endtime="20201029 12:47:52.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:52.117" level="INFO">${RESULT} = {'diff': [0.00025856999999999963, 0.00025851400000000135, 0.0002585000000000018, 0.0002585969999999993, 0.0002584859999999953, 0.0002585280000000009, 0.0002585420000000005, 0.00025851400000000135, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:52.109" endtime="20201029 12:47:52.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.128" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:52.126" endtime="20201029 12:47:52.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.133" level="INFO">VALUE: [0.00025856999999999963, 0.00025851400000000135, 0.0002585000000000018, 0.0002585969999999993, 0.0002584859999999953, 0.0002585280000000009, 0.0002585420000000005, 0.00025851400000000135, 0.00025852700000000145, 0.00025856900000000016, 0.0002585280000000009, 0.00025856999999999963, 0.00025851400000000135, 0.000258541000000001, 0.00025856999999999963, 0.00025856900000000016, 0.0002585559999999931, 0.00025855600000000006, 0.0002585420000000005, 0.0002585280000000009, 0.0002585000000000018, 0.0002585280000000009, 0.000258541000000001, 0.00025858299999999973, 0.0002585969999999993, 0.000258541000000001, 0.0002585280000000009, 0.0002585420000000005, 0.0002585420000000005, 0.0002585420000000005, 0.0002585420000000005, 0.00025858299999999973, 0.000258541000000001, 0.0002585130000000019, 0.00025847200000000264, 0.0002585420000000005, 0.00025851400000000135, 0.00025858400000000614, 0.0002585969999999993, 0.00025856900000000016, 0.00025855500000000753, 0.0002585979999999988, 0.00025869500000000323, 0.00025858300000000667, 0.000258541000000001, 0.0002586110000000058, 0.00025862499999999844, 0.00025856999999999963, 0.00025856900000000016, 0.0002585979999999988]</msg>
<status status="PASS" starttime="20201029 12:47:52.130" endtime="20201029 12:47:52.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.119" endtime="20201029 12:47:52.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.559" endtime="20201029 12:47:52.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.529" endtime="20201029 12:47:52.138"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:52.143" endtime="20201029 12:47:52.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.140" endtime="20201029 12:47:52.167"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.187" endtime="20201029 12:47:52.232"></status>
</kw>
<msg timestamp="20201029 12:47:52.234" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.184" endtime="20201029 12:47:52.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.240" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.236" endtime="20201029 12:47:52.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.242" endtime="20201029 12:47:52.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.177" endtime="20201029 12:47:52.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.172" endtime="20201029 12:47:52.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.265" endtime="20201029 12:47:52.607"></status>
</kw>
<msg timestamp="20201029 12:47:52.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034297556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034572208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.262" endtime="20201029 12:47:52.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034297556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034572208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.616" endtime="20201029 12:47:52.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.633" endtime="20201029 12:47:52.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.255" endtime="20201029 12:47:52.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.250" endtime="20201029 12:47:52.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:52.648" level="INFO">${PHILIP_RES} = [{'diff': 0.00027465200000000023}, {'diff': 0.00027479199999999593}, {'diff': 0.0002748470000000017}, {'diff': 0.0002748470000000017}, {'diff': 0.0002748330000000021}, {'diff': 0.00027480500000000296}...</msg>
<status status="PASS" starttime="20201029 12:47:52.641" endtime="20201029 12:47:52.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:52.659" level="INFO">${RESULT} = {'diff': [0.00027465200000000023, 0.00027479199999999593, 0.0002748470000000017, 0.0002748470000000017, 0.0002748330000000021, 0.00027480500000000296, 0.0002748750000000008, 0.00027480600000000244, 0....</msg>
<status status="PASS" starttime="20201029 12:47:52.651" endtime="20201029 12:47:52.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.670" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:52.667" endtime="20201029 12:47:52.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.675" level="INFO">VALUE: [0.00027465200000000023, 0.00027479199999999593, 0.0002748470000000017, 0.0002748470000000017, 0.0002748330000000021, 0.00027480500000000296, 0.0002748750000000008, 0.00027480600000000244, 0.0002748330000000021, 0.00027490299999999995, 0.0002748609999999943, 0.0002748340000000016, 0.0002748750000000008, 0.0002748890000000004, 0.0002749299999999996, 0.00027494499999999866, 0.0002748479999999942, 0.0002748750000000008, 0.0002748750000000008, 0.00027484699999999473, 0.00027484800000000115, 0.0002749439999999992, 0.0002748470000000017, 0.0002748880000000009, 0.0002748750000000008, 0.0002749169999999995, 0.0002748470000000017, 0.0002748609999999943, 0.0002748330000000021, 0.0002748750000000008, 0.00027486100000000124, 0.00027480500000000296, 0.0002748620000000007, 0.00027486100000000124, 0.0002748340000000016, 0.000274820000000002, 0.0002748330000000021, 0.00027484800000000115, 0.00027483299999999516, 0.0002749439999999992, 0.00027484699999999473, 0.00027486100000000124, 0.00027479099999999645, 0.0002748330000000021, 0.0002748330000000021, 0.0002748340000000016, 0.00027480599999998856, 0.00027482000000000895, 0.00027480500000000296, 0.0002748340000000016]</msg>
<status status="PASS" starttime="20201029 12:47:52.672" endtime="20201029 12:47:52.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.661" endtime="20201029 12:47:52.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.168" endtime="20201029 12:47:52.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.139" endtime="20201029 12:47:52.680"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:52.686" endtime="20201029 12:47:52.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.682" endtime="20201029 12:47:52.709"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.729" endtime="20201029 12:47:52.776"></status>
</kw>
<msg timestamp="20201029 12:47:52.777" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.726" endtime="20201029 12:47:52.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.783" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.779" endtime="20201029 12:47:52.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.786" endtime="20201029 12:47:52.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.719" endtime="20201029 12:47:52.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.714" endtime="20201029 12:47:52.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.808" endtime="20201029 12:47:53.151"></status>
</kw>
<msg timestamp="20201029 12:47:53.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033872111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034163264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.805" endtime="20201029 12:47:53.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033872111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034163264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.160" endtime="20201029 12:47:53.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.177" endtime="20201029 12:47:53.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.798" endtime="20201029 12:47:53.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.794" endtime="20201029 12:47:53.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:53.193" level="INFO">${PHILIP_RES} = [{'diff': 0.0002911529999999954}, {'diff': 0.00029213799999999734}, {'diff': 0.00029219400000000256}, {'diff': 0.00029212499999999725}, {'diff': 0.00029218100000000247}, {'diff': 0.0002921810000000024...</msg>
<status status="PASS" starttime="20201029 12:47:53.185" endtime="20201029 12:47:53.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:53.202" level="INFO">${RESULT} = {'diff': [0.0002911529999999954, 0.00029213799999999734, 0.00029219400000000256, 0.00029212499999999725, 0.00029218100000000247, 0.00029218100000000247, 0.0002921529999999964, 0.00029208299999999854, ...</msg>
<status status="PASS" starttime="20201029 12:47:53.195" endtime="20201029 12:47:53.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.212" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:53.210" endtime="20201029 12:47:53.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.217" level="INFO">VALUE: [0.0002911529999999954, 0.00029213799999999734, 0.00029219400000000256, 0.00029212499999999725, 0.00029218100000000247, 0.00029218100000000247, 0.0002921529999999964, 0.00029208299999999854, 0.00029212499999999725, 0.00029208299999999854, 0.00029212499999999725, 0.0002921109999999977, 0.0002920979999999976, 0.00029213799999999734, 0.00029209700000000505, 0.0002921110000000046, 0.00029213900000000376, 0.0002920969999999981, 0.0002921389999999968, 0.0002921530000000033, 0.0002921530000000033, 0.0002921529999999964, 0.00029212499999999725, 0.00029212499999999725, 0.0002921670000000029, 0.00029219400000000256, 0.00029219400000000256, 0.000292180000000003, 0.00029218099999999553, 0.00029218100000000247, 0.00029219400000000256, 0.0002922079999999952, 0.00029226300000000094, 0.0002921939999999956, 0.0002921660000000034, 0.0002921530000000033, 0.0002921389999999968, 0.00029208299999999854, 0.00029208299999999854, 0.00029204200000000624, 0.00029209699999999117, 0.000292180000000003, 0.00029223600000000127, 0.00029222200000000864, 0.0002921949999999951, 0.0002921939999999956, 0.00029220799999998825, 0.00029220800000000213, 0.0002922500000000078, 0.00029223600000000127]</msg>
<status status="PASS" starttime="20201029 12:47:53.214" endtime="20201029 12:47:53.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.204" endtime="20201029 12:47:53.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.710" endtime="20201029 12:47:53.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.681" endtime="20201029 12:47:53.222"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:53.228" endtime="20201029 12:47:53.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.225" endtime="20201029 12:47:53.252"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.273" endtime="20201029 12:47:53.322"></status>
</kw>
<msg timestamp="20201029 12:47:53.323" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.270" endtime="20201029 12:47:53.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.329" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.325" endtime="20201029 12:47:53.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.332" endtime="20201029 12:47:53.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.263" endtime="20201029 12:47:53.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.258" endtime="20201029 12:47:53.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.356" endtime="20201029 12:47:53.697"></status>
</kw>
<msg timestamp="20201029 12:47:53.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034770792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035079569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.353" endtime="20201029 12:47:53.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034770792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035079569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.706" endtime="20201029 12:47:53.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.723" endtime="20201029 12:47:53.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.346" endtime="20201029 12:47:53.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.341" endtime="20201029 12:47:53.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:53.739" level="INFO">${PHILIP_RES} = [{'diff': 0.0003087769999999962}, {'diff': 0.00030945899999999804}, {'diff': 0.000309459000000005}, {'diff': 0.0003094859999999977}, {'diff': 0.0003093750000000006}, {'diff': 0.0003093890000000002}, {...</msg>
<status status="PASS" starttime="20201029 12:47:53.731" endtime="20201029 12:47:53.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:53.748" level="INFO">${RESULT} = {'diff': [0.0003087769999999962, 0.00030945899999999804, 0.000309459000000005, 0.0003094859999999977, 0.0003093750000000006, 0.0003093890000000002, 0.00030941599999999986, 0.00030941699999999933, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:53.741" endtime="20201029 12:47:53.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.758" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:53.756" endtime="20201029 12:47:53.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.763" level="INFO">VALUE: [0.0003087769999999962, 0.00030945899999999804, 0.000309459000000005, 0.0003094859999999977, 0.0003093750000000006, 0.0003093890000000002, 0.00030941599999999986, 0.00030941699999999933, 0.00030930600000000225, 0.00030934699999999454, 0.0003093750000000006, 0.0003093470000000015, 0.0003094309999999989, 0.0003093890000000002, 0.0003093890000000002, 0.00030942999999999943, 0.0003093890000000002, 0.00030940299999999976, 0.0003094999999999973, 0.00030945799999999857, 0.0003093880000000007, 0.00030941699999999933, 0.00030941699999999933, 0.0003093890000000002, 0.00030936100000000105, 0.0003093890000000002, 0.00030942999999999943, 0.00030940299999999976, 0.000309332999999995, 0.0003093750000000006, 0.0003093890000000002, 0.00030940299999999976, 0.0003093750000000006, 0.0003093609999999941, 0.000309361000000008, 0.0003094020000000003, 0.00030942999999999943, 0.0003094169999999924, 0.00030940299999999976, 0.0003094160000000068, 0.00030941700000000627, 0.00030942999999999943, 0.0003094719999999912, 0.00030940299999999976, 0.0003093750000000006, 0.0003093750000000006, 0.00030940299999999976, 0.0003095699999999951, 0.0003094720000000051, 0.00030952800000000336]</msg>
<status status="PASS" starttime="20201029 12:47:53.760" endtime="20201029 12:47:53.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.749" endtime="20201029 12:47:53.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.253" endtime="20201029 12:47:53.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.223" endtime="20201029 12:47:53.768"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:53.774" endtime="20201029 12:47:53.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.771" endtime="20201029 12:47:53.798"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.820" endtime="20201029 12:47:53.873"></status>
</kw>
<msg timestamp="20201029 12:47:53.875" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.817" endtime="20201029 12:47:53.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.882" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.877" endtime="20201029 12:47:53.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.886" endtime="20201029 12:47:53.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.809" endtime="20201029 12:47:53.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.804" endtime="20201029 12:47:53.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.917" endtime="20201029 12:47:54.260"></status>
</kw>
<msg timestamp="20201029 12:47:54.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035555667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0358815, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:53.913" endtime="20201029 12:47:54.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035555667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0358815, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:54.269" endtime="20201029 12:47:54.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.287" endtime="20201029 12:47:54.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.904" endtime="20201029 12:47:54.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.897" endtime="20201029 12:47:54.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:54.303" level="INFO">${PHILIP_RES} = [{'diff': 0.0003258329999999976}, {'diff': 0.0003266120000000039}, {'diff': 0.00032658299999999835}, {'diff': 0.00032658299999999835}, {'diff': 0.0003266529999999962}, {'diff': 0.000326625000000004}, ...</msg>
<status status="PASS" starttime="20201029 12:47:54.295" endtime="20201029 12:47:54.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:54.312" level="INFO">${RESULT} = {'diff': [0.0003258329999999976, 0.0003266120000000039, 0.00032658299999999835, 0.00032658299999999835, 0.0003266529999999962, 0.000326625000000004, 0.00032662499999999706, 0.00032669400000000237, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:54.305" endtime="20201029 12:47:54.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.322" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:54.320" endtime="20201029 12:47:54.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.329" level="INFO">VALUE: [0.0003258329999999976, 0.0003266120000000039, 0.00032658299999999835, 0.00032658299999999835, 0.0003266529999999962, 0.000326625000000004, 0.00032662499999999706, 0.00032669400000000237, 0.00032665300000000314, 0.0003266109999999975, 0.00032663900000000357, 0.00032666699999999577, 0.00032669399999999543, 0.00032663799999999715, 0.00032663900000000357, 0.0003265559999999987, 0.0003265969999999979, 0.0003266110000000044, 0.0003266110000000044, 0.0003266389999999966, 0.0003266670000000027, 0.00032658299999999835, 0.00032659700000000486, 0.0003266670000000027, 0.0003265969999999979, 0.0003266110000000044, 0.00032659700000000486, 0.00032662499999999706, 0.000326625000000004, 0.0003265969999999979, 0.0003265979999999974, 0.00032669400000000237, 0.00032662499999999706, 0.00032663900000000357, 0.0003266529999999962, 0.0003266530000000101, 0.00032658400000000476, 0.0003265279999999926, 0.0003266110000000044, 0.0003265689999999988, 0.0003266120000000039, 0.00032662500000001093, 0.0003265280000000065, 0.00032655599999999174, 0.0003265689999999988, 0.0003266389999999897, 0.0003266810000000092, 0.0003266519999999967, 0.00032661099999999055, 0.00032661099999999055]</msg>
<status status="PASS" starttime="20201029 12:47:54.325" endtime="20201029 12:47:54.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.314" endtime="20201029 12:47:54.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.799" endtime="20201029 12:47:54.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.769" endtime="20201029 12:47:54.334"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:54.340" endtime="20201029 12:47:54.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.336" endtime="20201029 12:47:54.364"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.384" endtime="20201029 12:47:54.437"></status>
</kw>
<msg timestamp="20201029 12:47:54.438" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.381" endtime="20201029 12:47:54.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.444" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.440" endtime="20201029 12:47:54.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.446" endtime="20201029 12:47:54.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.374" endtime="20201029 12:47:54.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.368" endtime="20201029 12:47:54.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.469" endtime="20201029 12:47:54.810"></status>
</kw>
<msg timestamp="20201029 12:47:54.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033940389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034284111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.466" endtime="20201029 12:47:54.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033940389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034284111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.819" endtime="20201029 12:47:54.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.836" endtime="20201029 12:47:54.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.459" endtime="20201029 12:47:54.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.454" endtime="20201029 12:47:54.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:54.851" level="INFO">${PHILIP_RES} = [{'diff': 0.0003437219999999977}, {'diff': 0.00034380600000000205}, {'diff': 0.0003439170000000061}, {'diff': 0.00034387500000000043}, {'diff': 0.00034390299999999957}, {'diff': 0.00034381900000000215...</msg>
<status status="PASS" starttime="20201029 12:47:54.844" endtime="20201029 12:47:54.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:54.862" level="INFO">${RESULT} = {'diff': [0.0003437219999999977, 0.00034380600000000205, 0.0003439170000000061, 0.00034387500000000043, 0.00034390299999999957, 0.00034381900000000215, 0.000343889, 0.0003438340000000012, 0.000343889,...</msg>
<status status="PASS" starttime="20201029 12:47:54.853" endtime="20201029 12:47:54.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.872" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:54.870" endtime="20201029 12:47:54.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.877" level="INFO">VALUE: [0.0003437219999999977, 0.00034380600000000205, 0.0003439170000000061, 0.00034387500000000043, 0.00034390299999999957, 0.00034381900000000215, 0.000343889, 0.0003438340000000012, 0.000343889, 0.00034387500000000043, 0.00034387500000000043, 0.00034390199999999316, 0.00034386100000000086, 0.00034387500000000043, 0.00034391699999999914, 0.00034381900000000215, 0.00034386100000000086, 0.00034390299999999957, 0.00034390299999999957, 0.00034384800000000076, 0.00034390299999999957, 0.00034390299999999957, 0.00034387500000000043, 0.00034384800000000076, 0.00034390299999999957, 0.00034391699999999914, 0.00034391699999999914, 0.00034392999999999924, 0.0003438329999999948, 0.0003439309999999987, 0.00034392999999999924, 0.000343889, 0.000343889, 0.0003439300000000062, 0.0003439299999999923, 0.00034391699999999914, 0.000343889, 0.00034386100000000086, 0.0003439299999999923, 0.00034390299999999263, 0.00034386100000000086, 0.00034391600000001354, 0.0003439030000000065, 0.00034384699999999435, 0.00034384700000000823, 0.00034391599999999967, 0.0003438050000000026, 0.0003438749999999935, 0.0003438880000000005, 0.0003439439999999988]</msg>
<status status="PASS" starttime="20201029 12:47:54.874" endtime="20201029 12:47:54.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.863" endtime="20201029 12:47:54.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.365" endtime="20201029 12:47:54.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.335" endtime="20201029 12:47:54.882"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:54.888" endtime="20201029 12:47:54.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.884" endtime="20201029 12:47:54.912"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.932" endtime="20201029 12:47:54.987"></status>
</kw>
<msg timestamp="20201029 12:47:54.988" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.929" endtime="20201029 12:47:54.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.994" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.990" endtime="20201029 12:47:54.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.996" endtime="20201029 12:47:55.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.922" endtime="20201029 12:47:55.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.916" endtime="20201029 12:47:55.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.020" endtime="20201029 12:47:55.362"></status>
</kw>
<msg timestamp="20201029 12:47:55.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033866028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034227556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.016" endtime="20201029 12:47:55.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033866028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034227556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.371" endtime="20201029 12:47:55.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.388" endtime="20201029 12:47:55.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.009" endtime="20201029 12:47:55.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.005" endtime="20201029 12:47:55.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:55.404" level="INFO">${PHILIP_RES} = [{'diff': 0.00036152799999999985}, {'diff': 0.00036225000000000146}, {'diff': 0.0003622780000000006}, {'diff': 0.0003623199999999993}, {'diff': 0.00036236099999999855}, {'diff': 0.00036225000000000146...</msg>
<status status="PASS" starttime="20201029 12:47:55.397" endtime="20201029 12:47:55.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:55.415" level="INFO">${RESULT} = {'diff': [0.00036152799999999985, 0.00036225000000000146, 0.0003622780000000006, 0.0003623199999999993, 0.00036236099999999855, 0.00036225000000000146, 0.00036225000000000146, 0.0003622219999999954, 0...</msg>
<status status="PASS" starttime="20201029 12:47:55.406" endtime="20201029 12:47:55.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.425" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:55.423" endtime="20201029 12:47:55.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.431" level="INFO">VALUE: [0.00036152799999999985, 0.00036225000000000146, 0.0003622780000000006, 0.0003623199999999993, 0.00036236099999999855, 0.00036225000000000146, 0.00036225000000000146, 0.0003622219999999954, 0.00036225000000000146, 0.0003622629999999946, 0.00036213899999999744, 0.00036219500000000265, 0.0003621800000000036, 0.0003621949999999957, 0.00036225000000000146, 0.0003621940000000032, 0.00036215300000000394, 0.0003622220000000023, 0.0003621800000000036, 0.00036225000000000146, 0.0003622079999999958, 0.0003621390000000044, 0.0003621810000000031, 0.0003622220000000023, 0.00036219399999999624, 0.00036217999999999667, 0.0003621810000000031, 0.0003621800000000036, 0.00036227799999999366, 0.00036226400000000103, 0.00036227799999999366, 0.00036217999999998973, 0.0003622090000000022, 0.0003622499999999945, 0.00036220800000000275, 0.00036219399999999624, 0.0003622360000000019, 0.0003622360000000019, 0.000362235999999988, 0.00036226300000000156, 0.00036229200000000017, 0.0003622219999999954, 0.00036222200000000926, 0.0003622360000000019, 0.00036220800000000275, 0.0003621950000000096, 0.00036213899999999744, 0.00036215300000000394, 0.0003621940000000101, 0.00036222200000000926]</msg>
<status status="PASS" starttime="20201029 12:47:55.428" endtime="20201029 12:47:55.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.417" endtime="20201029 12:47:55.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.913" endtime="20201029 12:47:55.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.883" endtime="20201029 12:47:55.436"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:55.441" endtime="20201029 12:47:55.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.438" endtime="20201029 12:47:55.466"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.488" endtime="20201029 12:47:55.545"></status>
</kw>
<msg timestamp="20201029 12:47:55.546" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.485" endtime="20201029 12:47:55.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.552" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.548" endtime="20201029 12:47:55.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.554" endtime="20201029 12:47:55.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.478" endtime="20201029 12:47:55.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.473" endtime="20201029 12:47:55.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.577" endtime="20201029 12:47:55.910"></status>
</kw>
<msg timestamp="20201029 12:47:55.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036860236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037239458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.574" endtime="20201029 12:47:55.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036860236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037239458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.919" endtime="20201029 12:47:55.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.936" endtime="20201029 12:47:55.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.567" endtime="20201029 12:47:55.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.562" endtime="20201029 12:47:55.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:55.952" level="INFO">${PHILIP_RES} = [{'diff': 0.00037922200000000544}, {'diff': 0.00038047199999999975}, {'diff': 0.0003804310000000005}, {'diff': 0.0003804299999999941}, {'diff': 0.00038051399999999846}, {'diff': 0.0003803890000000018}...</msg>
<status status="PASS" starttime="20201029 12:47:55.945" endtime="20201029 12:47:55.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:55.961" level="INFO">${RESULT} = {'diff': [0.00037922200000000544, 0.00038047199999999975, 0.0003804310000000005, 0.0003804299999999941, 0.00038051399999999846, 0.0003803890000000018, 0.00038041700000000095, 0.0003803890000000018, 0....</msg>
<status status="PASS" starttime="20201029 12:47:55.954" endtime="20201029 12:47:55.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.971" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:55.969" endtime="20201029 12:47:55.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.977" level="INFO">VALUE: [0.00037922200000000544, 0.00038047199999999975, 0.0003804310000000005, 0.0003804299999999941, 0.00038051399999999846, 0.0003803890000000018, 0.00038041700000000095, 0.0003803890000000018, 0.000380318999999997, 0.0003803890000000018, 0.0003804310000000005, 0.0003804310000000005, 0.0003804450000000001, 0.0003804020000000019, 0.0003803890000000018, 0.00038041700000000095, 0.0003804859999999993, 0.0003804310000000005, 0.00038041700000000095, 0.0003804580000000002, 0.00038051399999999846, 0.0003804580000000002, 0.0003804869999999988, 0.0003804999999999989, 0.0003804580000000002, 0.00038041700000000095, 0.00038056899999999727, 0.0003805830000000038, 0.0003805969999999964, 0.000380528000000005, 0.00038055500000000464, 0.0003804580000000002, 0.00038043000000000105, 0.00038051399999999846, 0.0003804720000000067, 0.0003804310000000005, 0.00038043000000000105, 0.000380416999999994, 0.0003804719999999928, 0.00038050000000000583, 0.0003804580000000002, 0.0003804720000000067, 0.00038045899999999966, 0.0003804170000000079, 0.00038054099999999813, 0.0003805419999999976, 0.000380528000000005, 0.00038049999999999196, 0.0003806110000000029, 0.00038043000000000105]</msg>
<status status="PASS" starttime="20201029 12:47:55.973" endtime="20201029 12:47:55.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.963" endtime="20201029 12:47:55.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.468" endtime="20201029 12:47:55.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.436" endtime="20201029 12:47:55.982"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:55.987" endtime="20201029 12:47:56.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.984" endtime="20201029 12:47:56.011"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.031" endtime="20201029 12:47:56.090"></status>
</kw>
<msg timestamp="20201029 12:47:56.091" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.028" endtime="20201029 12:47:56.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.097" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.094" endtime="20201029 12:47:56.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.100" endtime="20201029 12:47:56.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.021" endtime="20201029 12:47:56.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.016" endtime="20201029 12:47:56.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.123" endtime="20201029 12:47:56.453"></status>
</kw>
<msg timestamp="20201029 12:47:56.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033827944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034225347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.119" endtime="20201029 12:47:56.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033827944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034225347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.461" endtime="20201029 12:47:56.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.479" endtime="20201029 12:47:56.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.112" endtime="20201029 12:47:56.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.108" endtime="20201029 12:47:56.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:56.494" level="INFO">${PHILIP_RES} = [{'diff': 0.0003974030000000045}, {'diff': 0.0003986949999999975}, {'diff': 0.00039868099999999795}, {'diff': 0.00039865199999999934}, {'diff': 0.0003986249999999997}, {'diff': 0.0003986249999999997},...</msg>
<status status="PASS" starttime="20201029 12:47:56.487" endtime="20201029 12:47:56.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:56.503" level="INFO">${RESULT} = {'diff': [0.0003974030000000045, 0.0003986949999999975, 0.00039868099999999795, 0.00039865199999999934, 0.0003986249999999997, 0.0003986249999999997, 0.0003987780000000024, 0.00039874999999999633, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:56.496" endtime="20201029 12:47:56.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.514" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:56.511" endtime="20201029 12:47:56.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.519" level="INFO">VALUE: [0.0003974030000000045, 0.0003986949999999975, 0.00039868099999999795, 0.00039865199999999934, 0.0003986249999999997, 0.0003986249999999997, 0.0003987780000000024, 0.00039874999999999633, 0.00039863899999999924, 0.0003987079999999976, 0.0003986529999999988, 0.00039852800000000216, 0.0003986249999999997, 0.0003985690000000014, 0.00039863899999999924, 0.0003985969999999936, 0.0003986800000000054, 0.0003986249999999997, 0.00039863899999999924, 0.00039858300000000096, 0.0003985560000000013, 0.0003986249999999997, 0.0003986529999999988, 0.0003986659999999989, 0.00039876400000000284, 0.00039872200000000413, 0.0003986110000000001, 0.0003986110000000001, 0.00039862500000001355, 0.00039872200000000413, 0.0003986529999999988, 0.000398598, 0.0003986390000000062, 0.00039861099999999317, 0.0003986390000000062, 0.0003986529999999988, 0.00039879099999999557, 0.00039872200000000413, 0.0003986249999999997, 0.0003986799999999985, 0.000398694000000005, 0.0003987089999999971, 0.00039873599999999676, 0.00039868099999999795, 0.0003986670000000053, 0.0003986390000000062, 0.0003986389999999923, 0.00039866699999999144, 0.00039865199999999934, 0.00039854200000000173]</msg>
<status status="PASS" starttime="20201029 12:47:56.516" endtime="20201029 12:47:56.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.505" endtime="20201029 12:47:56.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.012" endtime="20201029 12:47:56.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.983" endtime="20201029 12:47:56.531"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:56.536" endtime="20201029 12:47:56.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.533" endtime="20201029 12:47:56.559"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.583" endtime="20201029 12:47:56.645"></status>
</kw>
<msg timestamp="20201029 12:47:56.647" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.579" endtime="20201029 12:47:56.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.653" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.649" endtime="20201029 12:47:56.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.655" endtime="20201029 12:47:56.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.571" endtime="20201029 12:47:56.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.566" endtime="20201029 12:47:56.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.678" endtime="20201029 12:47:57.007"></status>
</kw>
<msg timestamp="20201029 12:47:57.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037972306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038388431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.675" endtime="20201029 12:47:57.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037972306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038388431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.016" endtime="20201029 12:47:57.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.033" endtime="20201029 12:47:57.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.668" endtime="20201029 12:47:57.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.663" endtime="20201029 12:47:57.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:57.048" level="INFO">${PHILIP_RES} = [{'diff': 0.0004161250000000033}, {'diff': 0.00041699999999999376}, {'diff': 0.00041697300000000104}, {'diff': 0.000417055999999999}, {'diff': 0.0004170000000000007}, {'diff': 0.0004170140000000003}, ...</msg>
<status status="PASS" starttime="20201029 12:47:57.041" endtime="20201029 12:47:57.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:57.057" level="INFO">${RESULT} = {'diff': [0.0004161250000000033, 0.00041699999999999376, 0.00041697300000000104, 0.000417055999999999, 0.0004170000000000007, 0.0004170140000000003, 0.00041708299999999865, 0.0004170549999999995, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:57.050" endtime="20201029 12:47:57.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.067" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:57.065" endtime="20201029 12:47:57.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.074" level="INFO">VALUE: [0.0004161250000000033, 0.00041699999999999376, 0.00041697300000000104, 0.000417055999999999, 0.0004170000000000007, 0.0004170140000000003, 0.00041708299999999865, 0.0004170549999999995, 0.0004170130000000008, 0.00041698600000000113, 0.00041697200000000156, 0.00041704099999999994, 0.0004170000000000007, 0.0004170969999999982, 0.00041713900000000387, 0.00041708299999999865, 0.0004170000000000007, 0.00041702700000000037, 0.0004169719999999946, 0.00041697200000000156, 0.0004168889999999967, 0.00041691700000000276, 0.0004169440000000024, 0.0004170140000000072, 0.0004169450000000019, 0.0004169440000000024, 0.00041691700000000276, 0.0004169169999999889, 0.00041701299999999386, 0.0004170000000000007, 0.0004169450000000019, 0.0004170140000000072, 0.00041695799999999505, 0.00041701399999999333, 0.0004170140000000072, 0.0004169309999999954, 0.0004170969999999913, 0.00041704200000000635, 0.00041709700000000516, 0.00041697200000000156, 0.0004169300000000098, 0.0004169859999999942, 0.000417055999999999, 0.00041695899999999453, 0.000417055999999999, 0.0004169160000000033, 0.00041697200000000156, 0.0004170000000000007, 0.0004170700000000055, 0.0004169299999999959]</msg>
<status status="PASS" starttime="20201029 12:47:57.070" endtime="20201029 12:47:57.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.059" endtime="20201029 12:47:57.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.561" endtime="20201029 12:47:57.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.531" endtime="20201029 12:47:57.079"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:57.085" endtime="20201029 12:47:57.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.081" endtime="20201029 12:47:57.108"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.128" endtime="20201029 12:47:57.192"></status>
</kw>
<msg timestamp="20201029 12:47:57.193" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.125" endtime="20201029 12:47:57.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.199" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.195" endtime="20201029 12:47:57.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.201" endtime="20201029 12:47:57.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.118" endtime="20201029 12:47:57.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.113" endtime="20201029 12:47:57.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.224" endtime="20201029 12:47:57.554"></status>
</kw>
<msg timestamp="20201029 12:47:57.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033902361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034337389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.221" endtime="20201029 12:47:57.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033902361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034337389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.563" endtime="20201029 12:47:57.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.580" endtime="20201029 12:47:57.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.214" endtime="20201029 12:47:57.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.209" endtime="20201029 12:47:57.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:57.596" level="INFO">${PHILIP_RES} = [{'diff': 0.00043502800000000397}, {'diff': 0.0004363609999999962}, {'diff': 0.0004363470000000036}, {'diff': 0.00043633399999999656}, {'diff': 0.00043637500000000273}, {'diff': 0.000436333000000004},...</msg>
<status status="PASS" starttime="20201029 12:47:57.588" endtime="20201029 12:47:57.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:57.606" level="INFO">${RESULT} = {'diff': [0.00043502800000000397, 0.0004363609999999962, 0.0004363470000000036, 0.00043633399999999656, 0.00043637500000000273, 0.000436333000000004, 0.00043636100000000316, 0.0004363609999999962, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:57.598" endtime="20201029 12:47:57.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.616" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:57.614" endtime="20201029 12:47:57.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.622" level="INFO">VALUE: [0.00043502800000000397, 0.0004363609999999962, 0.0004363470000000036, 0.00043633399999999656, 0.00043637500000000273, 0.000436333000000004, 0.00043636100000000316, 0.0004363609999999962, 0.0004362920000000048, 0.00043630499999999794, 0.0004363890000000023, 0.0004363189999999975, 0.00043623599999999957, 0.0004363890000000023, 0.00043637500000000273, 0.0004363609999999962, 0.0004362639999999987, 0.0004363749999999958, 0.0004363470000000036, 0.0004364450000000006, 0.00043640299999999493, 0.0004363189999999975, 0.0004363609999999962, 0.00043631900000000445, 0.00043636100000000316, 0.00043629199999999785, 0.0004363329999999971, 0.0004363200000000039, 0.0004363609999999962, 0.0004363200000000039, 0.0004363329999999971, 0.00043634800000000307, 0.0004363879999999959, 0.00043633399999999656, 0.00043640300000000187, 0.00043638899999999536, 0.00043637499999998886, 0.00043644399999999417, 0.0004364580000000007, 0.0004364580000000007, 0.0004364720000000072, 0.0004364020000000024, 0.00043644399999999417, 0.00043644400000000805, 0.0004364169999999945, 0.00043638899999999536, 0.00043651399999999896, 0.00043631900000000445, 0.0004363329999999971, 0.0004363470000000036]</msg>
<status status="PASS" starttime="20201029 12:47:57.619" endtime="20201029 12:47:57.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.608" endtime="20201029 12:47:57.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.109" endtime="20201029 12:47:57.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.080" endtime="20201029 12:47:57.627"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:57.632" endtime="20201029 12:47:57.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.629" endtime="20201029 12:47:57.656"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.676" endtime="20201029 12:47:57.741"></status>
</kw>
<msg timestamp="20201029 12:47:57.743" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.673" endtime="20201029 12:47:57.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.749" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.745" endtime="20201029 12:47:57.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.751" endtime="20201029 12:47:57.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.666" endtime="20201029 12:47:57.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.661" endtime="20201029 12:47:57.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.774" endtime="20201029 12:47:58.103"></status>
</kw>
<msg timestamp="20201029 12:47:58.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033624028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034079819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.771" endtime="20201029 12:47:58.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033624028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034079819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.111" endtime="20201029 12:47:58.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.129" endtime="20201029 12:47:58.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.764" endtime="20201029 12:47:58.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.759" endtime="20201029 12:47:58.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:58.144" level="INFO">${PHILIP_RES} = [{'diff': 0.00045579099999999706}, {'diff': 0.00045568}, {'diff': 0.00045561200000000107}, {'diff': 0.0004557079999999991}, {'diff': 0.00045568099999999945}, {'diff': 0.00045562499999999423}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:47:58.137" endtime="20201029 12:47:58.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:58.155" level="INFO">${RESULT} = {'diff': [0.00045579099999999706, 0.00045568, 0.00045561200000000107, 0.0004557079999999991, 0.00045568099999999945, 0.00045562499999999423, 0.00045563900000000074, 0.0004557079999999991, 0.0004556380...</msg>
<status status="PASS" starttime="20201029 12:47:58.146" endtime="20201029 12:47:58.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.165" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:58.163" endtime="20201029 12:47:58.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.171" level="INFO">VALUE: [0.00045579099999999706, 0.00045568, 0.00045561200000000107, 0.0004557079999999991, 0.00045568099999999945, 0.00045562499999999423, 0.00045563900000000074, 0.0004557079999999991, 0.00045563800000000126, 0.0004557219999999987, 0.0004557219999999987, 0.0004557089999999986, 0.0004557780000000039, 0.00045568, 0.0004555969999999951, 0.00045569399999999954, 0.00045568, 0.0004557079999999991, 0.0004557639999999974, 0.0004557079999999991, 0.0004556660000000004, 0.0004556530000000003, 0.00045573599999999825, 0.00045563900000000074, 0.00045559700000000203, 0.00045562500000000117, 0.00045561099999999466, 0.00045561099999999466, 0.0004555690000000029, 0.00045561099999999466, 0.0004555830000000094, 0.00045562500000000117, 0.0004556530000000003, 0.0004556940000000065, 0.00045561100000000854, 0.00045566699999999294, 0.0004556389999999938, 0.000455612000000008, 0.0004556530000000003, 0.00045561099999999466, 0.0004555699999999885, 0.00045568, 0.0004555980000000015, 0.0004556530000000003, 0.0004556390000000077, 0.0004556530000000003, 0.00045561099999999466, 0.00045568099999999945, 0.0004557089999999986, 0.0004557079999999991]</msg>
<status status="PASS" starttime="20201029 12:47:58.167" endtime="20201029 12:47:58.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.157" endtime="20201029 12:47:58.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.657" endtime="20201029 12:47:58.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.628" endtime="20201029 12:47:58.176"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:58.181" endtime="20201029 12:47:58.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.178" endtime="20201029 12:47:58.205"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.225" endtime="20201029 12:47:58.293"></status>
</kw>
<msg timestamp="20201029 12:47:58.294" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.222" endtime="20201029 12:47:58.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.300" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.296" endtime="20201029 12:47:58.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.302" endtime="20201029 12:47:58.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.215" endtime="20201029 12:47:58.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.210" endtime="20201029 12:47:58.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.325" endtime="20201029 12:47:58.657"></status>
</kw>
<msg timestamp="20201029 12:47:58.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03372175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034195056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:58.322" endtime="20201029 12:47:58.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03372175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034195056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:58.666" endtime="20201029 12:47:58.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.683" endtime="20201029 12:47:58.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.315" endtime="20201029 12:47:58.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.310" endtime="20201029 12:47:58.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:58.699" level="INFO">${PHILIP_RES} = [{'diff': 0.0004733059999999997}, {'diff': 0.00047477799999999515}, {'diff': 0.00047486100000000003}, {'diff': 0.0004748889999999992}, {'diff': 0.0004748619999999995}, {'diff': 0.00047480500000000175}...</msg>
<status status="PASS" starttime="20201029 12:47:58.691" endtime="20201029 12:47:58.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:58.708" level="INFO">${RESULT} = {'diff': [0.0004733059999999997, 0.00047477799999999515, 0.00047486100000000003, 0.0004748889999999992, 0.0004748619999999995, 0.00047480500000000175, 0.0004748200000000008, 0.0004747770000000026, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:58.701" endtime="20201029 12:47:58.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.718" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:58.716" endtime="20201029 12:47:58.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.723" level="INFO">VALUE: [0.0004733059999999997, 0.00047477799999999515, 0.00047486100000000003, 0.0004748889999999992, 0.0004748619999999995, 0.00047480500000000175, 0.0004748200000000008, 0.0004747770000000026, 0.0004748749999999996, 0.0004748330000000009, 0.00047481999999999386, 0.0004748060000000012, 0.00047483400000000037, 0.00047484700000000046, 0.0004748749999999996, 0.0004749309999999979, 0.0004748749999999996, 0.00047490299999999874, 0.00047477799999999515, 0.00047475000000000295, 0.00047475000000000295, 0.0004749169999999983, 0.0004746800000000051, 0.0004746389999999989, 0.0004747500000000099, 0.00047470799999999036, 0.0004747359999999895, 0.00047483300000000783, 0.0004747769999999957, 0.00047472199999999687, 0.0004747500000000099, 0.0004748059999999943, 0.0004748049999999948, 0.0004748049999999948, 0.00047472200000001075, 0.000474749999999996, 0.0004747500000000099, 0.00047477799999999515, 0.0004747910000000022, 0.0004747360000000034, 0.0004748200000000008, 0.0004746949999999972, 0.00047472299999999634, 0.00047466699999999806, 0.0004747360000000034, 0.0004746109999999998, 0.0004746949999999972, 0.00047472200000001075, 0.00047483299999999395, 0.0004747360000000034]</msg>
<status status="PASS" starttime="20201029 12:47:58.720" endtime="20201029 12:47:58.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.709" endtime="20201029 12:47:58.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.206" endtime="20201029 12:47:58.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.176" endtime="20201029 12:47:58.728"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:58.734" endtime="20201029 12:47:58.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.730" endtime="20201029 12:47:58.757"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.778" endtime="20201029 12:47:58.849"></status>
</kw>
<msg timestamp="20201029 12:47:58.850" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.774" endtime="20201029 12:47:58.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.856" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.852" endtime="20201029 12:47:58.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.858" endtime="20201029 12:47:58.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.767" endtime="20201029 12:47:58.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.762" endtime="20201029 12:47:58.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.882" endtime="20201029 12:47:59.212"></status>
</kw>
<msg timestamp="20201029 12:47:59.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035229319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035722778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.878" endtime="20201029 12:47:59.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035229319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035722778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.221" endtime="20201029 12:47:59.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.239" endtime="20201029 12:47:59.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.871" endtime="20201029 12:47:59.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.866" endtime="20201029 12:47:59.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:59.254" level="INFO">${PHILIP_RES} = [{'diff': 0.0004934589999999947}, {'diff': 0.0004941389999999976}, {'diff': 0.0004941810000000033}, {'diff': 0.0004941389999999976}, {'diff': 0.000494124999999998}, {'diff': 0.0004941669999999967}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:59.247" endtime="20201029 12:47:59.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:59.263" level="INFO">${RESULT} = {'diff': [0.0004934589999999947, 0.0004941389999999976, 0.0004941810000000033, 0.0004941389999999976, 0.000494124999999998, 0.0004941669999999967, 0.000494125000000005, 0.0004942080000000029, 0.000494...</msg>
<status status="PASS" starttime="20201029 12:47:59.256" endtime="20201029 12:47:59.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.274" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:59.271" endtime="20201029 12:47:59.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.279" level="INFO">VALUE: [0.0004934589999999947, 0.0004941389999999976, 0.0004941810000000033, 0.0004941389999999976, 0.000494124999999998, 0.0004941669999999967, 0.000494125000000005, 0.0004942080000000029, 0.0004941530000000041, 0.000494124999999998, 0.0004941519999999977, 0.0004942639999999943, 0.0004942640000000012, 0.0004942370000000015, 0.0004942780000000008, 0.0004942360000000021, 0.0004941939999999964, 0.000494223000000002, 0.0004943329999999996, 0.0004942370000000015, 0.0004942219999999956, 0.0004942360000000021, 0.0004942499999999878, 0.0004941390000000045, 0.0004941809999999963, 0.0004941939999999895, 0.0004941529999999972, 0.0004941660000000042, 0.0004941660000000042, 0.0004941809999999963, 0.000494236000000009, 0.0004940829999999924, 0.0004941669999999898, 0.0004941390000000045, 0.0004942920000000073, 0.0004942780000000008, 0.0004943469999999922, 0.0004943330000000135, 0.000494319000000007, 0.0004943889999999979, 0.0004942500000000016, 0.0004941950000000028, 0.000494207999999996, 0.0004942639999999943, 0.0004942919999999934, 0.0004943329999999996, 0.0004942780000000008, 0.000494207999999996, 0.0004942089999999955, 0.000494319000000007]</msg>
<status status="PASS" starttime="20201029 12:47:59.276" endtime="20201029 12:47:59.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.265" endtime="20201029 12:47:59.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.758" endtime="20201029 12:47:59.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.729" endtime="20201029 12:47:59.284"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:59.289" endtime="20201029 12:47:59.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.286" endtime="20201029 12:47:59.313"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.335" endtime="20201029 12:47:59.407"></status>
</kw>
<msg timestamp="20201029 12:47:59.408" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.332" endtime="20201029 12:47:59.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.414" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.410" endtime="20201029 12:47:59.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.417" endtime="20201029 12:47:59.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.325" endtime="20201029 12:47:59.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.319" endtime="20201029 12:47:59.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.451" endtime="20201029 12:47:59.783"></status>
</kw>
<msg timestamp="20201029 12:47:59.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035264403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035778333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.437" endtime="20201029 12:47:59.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035264403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035778333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.792" endtime="20201029 12:47:59.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.809" endtime="20201029 12:47:59.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.430" endtime="20201029 12:47:59.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.425" endtime="20201029 12:47:59.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:59.825" level="INFO">${PHILIP_RES} = [{'diff': 0.0005139300000000027}, {'diff': 0.0005145699999999989}, {'diff': 0.0005145280000000002}, {'diff': 0.0005145559999999993}, {'diff': 0.0005145839999999985}, {'diff': 0.0005145689999999994}, {...</msg>
<status status="PASS" starttime="20201029 12:47:59.818" endtime="20201029 12:47:59.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:59.834" level="INFO">${RESULT} = {'diff': [0.0005139300000000027, 0.0005145699999999989, 0.0005145280000000002, 0.0005145559999999993, 0.0005145839999999985, 0.0005145689999999994, 0.0005146109999999982, 0.0005145689999999994, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:47:59.827" endtime="20201029 12:47:59.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.860" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:59.854" endtime="20201029 12:47:59.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.873" level="INFO">VALUE: [0.0005139300000000027, 0.0005145699999999989, 0.0005145280000000002, 0.0005145559999999993, 0.0005145839999999985, 0.0005145689999999994, 0.0005146109999999982, 0.0005145689999999994, 0.0005145410000000003, 0.0005145969999999986, 0.0005145000000000011, 0.0005144860000000015, 0.0005145559999999993, 0.0005145140000000006, 0.0005145419999999998, 0.0005145689999999994, 0.0005145839999999985, 0.0005146249999999977, 0.0005146249999999977, 0.0005146109999999982, 0.000514582999999999, 0.0005145420000000067, 0.0005145549999999999, 0.0005145970000000055, 0.0005145970000000055, 0.0005145419999999928, 0.0005146250000000047, 0.000514569999999992, 0.0005146530000000038, 0.000514582999999999, 0.0005145559999999993, 0.0005145420000000067, 0.0005145970000000055, 0.000514582999999999, 0.0005145140000000076, 0.0005144730000000014, 0.0005145420000000067, 0.0005144859999999946, 0.0005145549999999999, 0.0005144720000000019, 0.0005145420000000067, 0.0005145690000000064, 0.0005145690000000064, 0.0005144720000000019, 0.0005144589999999949, 0.0005144579999999954, 0.0005145559999999993, 0.000514582999999999, 0.0005145419999999928, 0.0005144720000000019]</msg>
<status status="PASS" starttime="20201029 12:47:59.866" endtime="20201029 12:47:59.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.838" endtime="20201029 12:47:59.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.314" endtime="20201029 12:47:59.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.285" endtime="20201029 12:47:59.880"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:59.885" endtime="20201029 12:47:59.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.882" endtime="20201029 12:47:59.908"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.929" endtime="20201029 12:48:00.004"></status>
</kw>
<msg timestamp="20201029 12:48:00.005" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.926" endtime="20201029 12:48:00.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.011" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.007" endtime="20201029 12:48:00.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.013" endtime="20201029 12:48:00.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.919" endtime="20201029 12:48:00.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.914" endtime="20201029 12:48:00.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.036" endtime="20201029 12:48:00.368"></status>
</kw>
<msg timestamp="20201029 12:48:00.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033907403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034440736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.033" endtime="20201029 12:48:00.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033907403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034440736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.377" endtime="20201029 12:48:00.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.394" endtime="20201029 12:48:00.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.026" endtime="20201029 12:48:00.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.021" endtime="20201029 12:48:00.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:00.410" level="INFO">${PHILIP_RES} = [{'diff': 0.000533332999999997}, {'diff': 0.0005347080000000018}, {'diff': 0.0005347770000000002}, {'diff': 0.0005347220000000014}, {'diff': 0.000534653000000003}, {'diff': 0.0005346799999999957}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:00.403" endtime="20201029 12:48:00.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:00.420" level="INFO">${RESULT} = {'diff': [0.000533332999999997, 0.0005347080000000018, 0.0005347770000000002, 0.0005347220000000014, 0.000534653000000003, 0.0005346799999999957, 0.0005346949999999948, 0.0005347909999999997, 0.000534...</msg>
<status status="PASS" starttime="20201029 12:48:00.412" endtime="20201029 12:48:00.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.431" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:00.428" endtime="20201029 12:48:00.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.436" level="INFO">VALUE: [0.000533332999999997, 0.0005347080000000018, 0.0005347770000000002, 0.0005347220000000014, 0.000534653000000003, 0.0005346799999999957, 0.0005346949999999948, 0.0005347909999999997, 0.0005346110000000043, 0.0005346380000000039, 0.000534653000000003, 0.0005347920000000062, 0.0005348609999999976, 0.0005348059999999988, 0.0005347080000000018, 0.0005347909999999997, 0.000534653000000003, 0.0005347090000000013, 0.0005348200000000053, 0.0005347220000000014, 0.0005346670000000026, 0.0005348200000000053, 0.0005348190000000058, 0.0005347500000000005, 0.0005347910000000067, 0.0005347639999999931, 0.0005347360000000079, 0.0005347909999999928, 0.0005347500000000005, 0.0005347500000000005, 0.000534764000000007, 0.000534735999999994, 0.0005347220000000014, 0.0005347639999999931, 0.0005348469999999911, 0.0005348889999999967, 0.0005347920000000062, 0.0005347779999999996, 0.0005347920000000062, 0.0005347779999999996, 0.0005347220000000014, 0.0005347779999999996, 0.0005347089999999943, 0.0005347770000000002, 0.0005347499999999866, 0.0005347779999999996, 0.0005348059999999988, 0.0005346950000000017, 0.0005346809999999952, 0.0005347779999999996]</msg>
<status status="PASS" starttime="20201029 12:48:00.433" endtime="20201029 12:48:00.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.422" endtime="20201029 12:48:00.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.910" endtime="20201029 12:48:00.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.880" endtime="20201029 12:48:00.441"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:00.446" endtime="20201029 12:48:00.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.443" endtime="20201029 12:48:00.470"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.492" endtime="20201029 12:48:00.569"></status>
</kw>
<msg timestamp="20201029 12:48:00.570" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.488" endtime="20201029 12:48:00.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.576" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.572" endtime="20201029 12:48:00.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.579" endtime="20201029 12:48:00.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.481" endtime="20201029 12:48:00.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.475" endtime="20201029 12:48:00.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.602" endtime="20201029 12:48:00.932"></status>
</kw>
<msg timestamp="20201029 12:48:00.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035762847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036317444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.598" endtime="20201029 12:48:00.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035762847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036317444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.941" endtime="20201029 12:48:00.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.958" endtime="20201029 12:48:00.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.591" endtime="20201029 12:48:00.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.587" endtime="20201029 12:48:00.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:00.973" level="INFO">${PHILIP_RES} = [{'diff': 0.000554596999999997}, {'diff': 0.0005549860000000004}, {'diff': 0.0005549440000000017}, {'diff': 0.0005549999999999999}, {'diff': 0.0005549720000000008}, {'diff': 0.0005549719999999939}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:00.966" endtime="20201029 12:48:00.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:00.984" level="INFO">${RESULT} = {'diff': [0.000554596999999997, 0.0005549860000000004, 0.0005549440000000017, 0.0005549999999999999, 0.0005549720000000008, 0.0005549719999999939, 0.0005549160000000025, 0.0005548329999999976, 0.00055...</msg>
<status status="PASS" starttime="20201029 12:48:00.976" endtime="20201029 12:48:00.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.995" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:00.993" endtime="20201029 12:48:00.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.000" level="INFO">VALUE: [0.000554596999999997, 0.0005549860000000004, 0.0005549440000000017, 0.0005549999999999999, 0.0005549720000000008, 0.0005549719999999939, 0.0005549160000000025, 0.0005548329999999976, 0.0005549580000000012, 0.0005549999999999999, 0.0005549999999999999, 0.0005549999999999999, 0.000554901999999996, 0.0005550279999999991, 0.0005549449999999942, 0.0005549029999999955, 0.0005549869999999998, 0.0005550139999999995, 0.0005549870000000068, 0.0005549860000000073, 0.0005549299999999951, 0.0005549999999999999, 0.0005550829999999979, 0.0005549579999999943, 0.0005550279999999991, 0.0005550140000000064, 0.0005549440000000017, 0.0005549860000000073, 0.0005550269999999996, 0.0005549589999999938, 0.0005550140000000064, 0.0005549449999999873, 0.0005549720000000008, 0.0005549859999999934, 0.0005549440000000017, 0.0005549590000000076, 0.0005549580000000082, 0.0005550269999999996, 0.0005549449999999873, 0.0005550700000000047, 0.00055509799999999, 0.0005550840000000112, 0.0005551389999999962, 0.0005550279999999991, 0.0005549999999999999, 0.0005549860000000073, 0.0005550279999999991, 0.0005550690000000053, 0.0005551110000000109, 0.0005550829999999979]</msg>
<status status="PASS" starttime="20201029 12:48:00.997" endtime="20201029 12:48:01.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.986" endtime="20201029 12:48:01.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.471" endtime="20201029 12:48:01.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.442" endtime="20201029 12:48:01.005"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:01.011" endtime="20201029 12:48:01.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.007" endtime="20201029 12:48:01.034"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.054" endtime="20201029 12:48:01.133"></status>
</kw>
<msg timestamp="20201029 12:48:01.134" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.051" endtime="20201029 12:48:01.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.140" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.136" endtime="20201029 12:48:01.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.143" endtime="20201029 12:48:01.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.044" endtime="20201029 12:48:01.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.039" endtime="20201029 12:48:01.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.166" endtime="20201029 12:48:01.502"></status>
</kw>
<msg timestamp="20201029 12:48:01.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033564208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034138583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:01.162" endtime="20201029 12:48:01.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033564208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034138583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:01.511" endtime="20201029 12:48:01.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.529" endtime="20201029 12:48:01.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.155" endtime="20201029 12:48:01.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.151" endtime="20201029 12:48:01.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:01.545" level="INFO">${PHILIP_RES} = [{'diff': 0.000574375000000002}, {'diff': 0.0005753049999999982}, {'diff': 0.0005752780000000055}, {'diff': 0.0005753049999999982}, {'diff': 0.0005753059999999977}, {'diff': 0.0005753059999999977}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:01.538" endtime="20201029 12:48:01.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:01.554" level="INFO">${RESULT} = {'diff': [0.000574375000000002, 0.0005753049999999982, 0.0005752780000000055, 0.0005753049999999982, 0.0005753059999999977, 0.0005753059999999977, 0.0005752359999999998, 0.0005752779999999985, 0.00057...</msg>
<status status="PASS" starttime="20201029 12:48:01.548" endtime="20201029 12:48:01.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.565" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:01.563" endtime="20201029 12:48:01.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.570" level="INFO">VALUE: [0.000574375000000002, 0.0005753049999999982, 0.0005752780000000055, 0.0005753049999999982, 0.0005753059999999977, 0.0005753059999999977, 0.0005752359999999998, 0.0005752779999999985, 0.0005752229999999997, 0.0005751950000000006, 0.0005752359999999998, 0.0005752779999999985, 0.0005752909999999986, 0.0005752220000000002, 0.0005751800000000015, 0.0005752359999999998, 0.0005751940000000011, 0.0005752499999999994, 0.0005751940000000011, 0.0005752499999999994, 0.0005752360000000067, 0.0005751530000000088, 0.0005750970000000105, 0.0005752359999999929, 0.0005752499999999994, 0.0005752640000000059, 0.0005751520000000093, 0.0005751669999999875, 0.0005752080000000076, 0.0005752359999999929, 0.0005752079999999937, 0.0005753200000000042, 0.0005752499999999994, 0.0005751950000000006, 0.0005752919999999911, 0.000575276999999999, 0.0005753329999999973, 0.0005753470000000038, 0.0005753889999999956, 0.0005751950000000006, 0.000575292000000005, 0.0005753189999999908, 0.0005753890000000095, 0.0005752359999999929, 0.0005753200000000042, 0.000575292000000005, 0.0005753610000000103, 0.0005753200000000042, 0.0005753470000000038, 0.0005752909999999917]</msg>
<status status="PASS" starttime="20201029 12:48:01.567" endtime="20201029 12:48:01.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.556" endtime="20201029 12:48:01.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.035" endtime="20201029 12:48:01.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.006" endtime="20201029 12:48:01.579"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:01.585" endtime="20201029 12:48:01.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.581" endtime="20201029 12:48:01.608"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.629" endtime="20201029 12:48:01.712"></status>
</kw>
<msg timestamp="20201029 12:48:01.713" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.626" endtime="20201029 12:48:01.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.719" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.715" endtime="20201029 12:48:01.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.721" endtime="20201029 12:48:01.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.619" endtime="20201029 12:48:01.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.614" endtime="20201029 12:48:01.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.744" endtime="20201029 12:48:02.092"></status>
</kw>
<msg timestamp="20201029 12:48:02.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035528528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03612325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:01.741" endtime="20201029 12:48:02.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035528528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03612325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:02.101" endtime="20201029 12:48:02.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.118" endtime="20201029 12:48:02.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.734" endtime="20201029 12:48:02.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.729" endtime="20201029 12:48:02.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:02.134" level="INFO">${PHILIP_RES} = [{'diff': 0.0005947220000000059}, {'diff': 0.0005964030000000023}, {'diff': 0.0005964170000000019}, {'diff': 0.0005964310000000014}, {'diff': 0.0005964170000000019}, {'diff': 0.0005964439999999946}, {...</msg>
<status status="PASS" starttime="20201029 12:48:02.126" endtime="20201029 12:48:02.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:02.142" level="INFO">${RESULT} = {'diff': [0.0005947220000000059, 0.0005964030000000023, 0.0005964170000000019, 0.0005964310000000014, 0.0005964170000000019, 0.0005964439999999946, 0.0005965139999999994, 0.0005965140000000063, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:48:02.136" endtime="20201029 12:48:02.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.153" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:02.151" endtime="20201029 12:48:02.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.158" level="INFO">VALUE: [0.0005947220000000059, 0.0005964030000000023, 0.0005964170000000019, 0.0005964310000000014, 0.0005964170000000019, 0.0005964439999999946, 0.0005965139999999994, 0.0005965140000000063, 0.0005964999999999998, 0.000596429999999995, 0.0005964169999999949, 0.0005963880000000032, 0.0005964020000000028, 0.0005963200000000043, 0.0005964860000000002, 0.0005964580000000011, 0.0005963329999999975, 0.0005963340000000039, 0.0005964030000000023, 0.0005963750000000101, 0.0005964030000000092, 0.000596445000000001, 0.0005965690000000051, 0.0005965140000000063, 0.0005966529999999887, 0.000596638999999996, 0.0005966250000000034, 0.000596527999999999, 0.0005966250000000034, 0.0005964859999999933, 0.0005965269999999995, 0.0005964170000000019, 0.000596458000000008, 0.0005964720000000007, 0.0005964579999999942, 0.000596527999999999, 0.0005965139999999924, 0.0005965559999999981, 0.0005965829999999978, 0.0005965839999999972, 0.0005965980000000037, 0.0005966530000000025, 0.0005965829999999978, 0.0005964859999999933, 0.0005965139999999924, 0.0005965970000000043, 0.000596556000000012, 0.0005966109999999969, 0.0005966110000000108, 0.000596527999999999]</msg>
<status status="PASS" starttime="20201029 12:48:02.155" endtime="20201029 12:48:02.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.144" endtime="20201029 12:48:02.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.609" endtime="20201029 12:48:02.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.580" endtime="20201029 12:48:02.163"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:02.168" endtime="20201029 12:48:02.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.165" endtime="20201029 12:48:02.192"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.214" endtime="20201029 12:48:02.298"></status>
</kw>
<msg timestamp="20201029 12:48:02.299" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.211" endtime="20201029 12:48:02.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.305" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.301" endtime="20201029 12:48:02.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.308" endtime="20201029 12:48:02.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.204" endtime="20201029 12:48:02.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.198" endtime="20201029 12:48:02.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.331" endtime="20201029 12:48:02.677"></status>
</kw>
<msg timestamp="20201029 12:48:02.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035321181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035937903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:02.327" endtime="20201029 12:48:02.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035321181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035937903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:02.685" endtime="20201029 12:48:02.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.703" endtime="20201029 12:48:02.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.320" endtime="20201029 12:48:02.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.316" endtime="20201029 12:48:02.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:02.718" level="INFO">${PHILIP_RES} = [{'diff': 0.0006167220000000001}, {'diff': 0.0006178750000000038}, {'diff': 0.0006180000000000005}, {'diff': 0.0006179580000000018}, {'diff': 0.0006179450000000017}, {'diff': 0.0006179860000000009}, {...</msg>
<status status="PASS" starttime="20201029 12:48:02.711" endtime="20201029 12:48:02.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:02.727" level="INFO">${RESULT} = {'diff': [0.0006167220000000001, 0.0006178750000000038, 0.0006180000000000005, 0.0006179580000000018, 0.0006179450000000017, 0.0006179860000000009, 0.0006178750000000038, 0.0006179169999999956, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:48:02.720" endtime="20201029 12:48:02.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.737" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:02.735" endtime="20201029 12:48:02.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.744" level="INFO">VALUE: [0.0006167220000000001, 0.0006178750000000038, 0.0006180000000000005, 0.0006179580000000018, 0.0006179450000000017, 0.0006179860000000009, 0.0006178750000000038, 0.0006179169999999956, 0.0006179299999999957, 0.0006179300000000026, 0.0006179300000000026, 0.0006178469999999978, 0.0006179439999999953, 0.0006178749999999969, 0.0006177779999999994, 0.000617804999999999, 0.0006177500000000002, 0.0006178059999999985, 0.000617804999999999, 0.0006179169999999956, 0.0006177769999999999, 0.0006178470000000047, 0.0006178329999999982, 0.0006179439999999953, 0.0006178610000000112, 0.0006177779999999994, 0.0006178619999999968, 0.0006178329999999982, 0.000617903000000003, 0.0006180559999999918, 0.0006180000000000074, 0.0006179580000000018, 0.0006179589999999874, 0.0006178750000000038, 0.0006178750000000038, 0.0006178339999999977, 0.0006177779999999994, 0.0006180130000000006, 0.0006179019999999896, 0.0006178059999999985, 0.0006178750000000038, 0.000617820000000005, 0.0006178470000000047, 0.0006178050000000129, 0.000617903000000003, 0.0006178609999999973, 0.0006177639999999929, 0.0006177359999999937, 0.0006177079999999946, 0.0006178480000000042]</msg>
<status status="PASS" starttime="20201029 12:48:02.740" endtime="20201029 12:48:02.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.729" endtime="20201029 12:48:02.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.193" endtime="20201029 12:48:02.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.164" endtime="20201029 12:48:02.749"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:02.755" endtime="20201029 12:48:02.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.751" endtime="20201029 12:48:02.778"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.799" endtime="20201029 12:48:02.885"></status>
</kw>
<msg timestamp="20201029 12:48:02.886" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.795" endtime="20201029 12:48:02.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.892" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.888" endtime="20201029 12:48:02.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.895" endtime="20201029 12:48:02.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.788" endtime="20201029 12:48:02.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.783" endtime="20201029 12:48:02.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.918" endtime="20201029 12:48:03.263"></status>
</kw>
<msg timestamp="20201029 12:48:03.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034121819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034760333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:02.914" endtime="20201029 12:48:03.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034121819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034760333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.272" endtime="20201029 12:48:03.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.291" endtime="20201029 12:48:03.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.907" endtime="20201029 12:48:03.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.903" endtime="20201029 12:48:03.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:03.307" level="INFO">${PHILIP_RES} = [{'diff': 0.0006385139999999997}, {'diff': 0.0006388889999999967}, {'diff': 0.0006388330000000053}, {'diff': 0.0006388059999999987}, {'diff': 0.0006388480000000044}, {'diff': 0.0006388189999999988}, {...</msg>
<status status="PASS" starttime="20201029 12:48:03.299" endtime="20201029 12:48:03.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:03.317" level="INFO">${RESULT} = {'diff': [0.0006385139999999997, 0.0006388889999999967, 0.0006388330000000053, 0.0006388059999999987, 0.0006388480000000044, 0.0006388189999999988, 0.0006387499999999935, 0.0006388190000000057, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:48:03.309" endtime="20201029 12:48:03.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.327" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:03.325" endtime="20201029 12:48:03.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.333" level="INFO">VALUE: [0.0006385139999999997, 0.0006388889999999967, 0.0006388330000000053, 0.0006388059999999987, 0.0006388480000000044, 0.0006388189999999988, 0.0006387499999999935, 0.0006388190000000057, 0.0006387089999999943, 0.000638875000000004, 0.0006389170000000027, 0.0006388889999999967, 0.0006388749999999971, 0.000638861999999997, 0.0006389310000000023, 0.0006389029999999962, 0.0006389170000000027, 0.0006389030000000032, 0.0006389590000000014, 0.0006389439999999885, 0.0006389859999999942, 0.0006389590000000084, 0.0006388890000000036, 0.000638986000000008, 0.0006389440000000024, 0.0006389020000000106, 0.0006387500000000074, 0.0006387780000000065, 0.0006388609999999906, 0.0006389030000000101, 0.0006388610000000045, 0.0006388749999999971, 0.0006388199999999983, 0.0006388749999999971, 0.0006389169999999889, 0.0006388479999999974, 0.0006388339999999909, 0.0006389019999999968, 0.0006390839999999981, 0.0006389029999999962, 0.0006389019999999968, 0.0006388749999999971, 0.0006389450000000019, 0.0006388469999999979, 0.0006388890000000036, 0.0006388890000000036, 0.0006389310000000092, 0.0006389439999999885, 0.0006389450000000019, 0.0006389170000000027]</msg>
<status status="PASS" starttime="20201029 12:48:03.330" endtime="20201029 12:48:03.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.319" endtime="20201029 12:48:03.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.779" endtime="20201029 12:48:03.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.750" endtime="20201029 12:48:03.338"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:03.343" endtime="20201029 12:48:03.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.340" endtime="20201029 12:48:03.367"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.388" endtime="20201029 12:48:03.476"></status>
</kw>
<msg timestamp="20201029 12:48:03.478" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.384" endtime="20201029 12:48:03.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.484" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.480" endtime="20201029 12:48:03.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.486" endtime="20201029 12:48:03.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.377" endtime="20201029 12:48:03.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.372" endtime="20201029 12:48:03.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.509" endtime="20201029 12:48:03.862"></status>
</kw>
<msg timestamp="20201029 12:48:03.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034363708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035023292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.506" endtime="20201029 12:48:03.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034363708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035023292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.871" endtime="20201029 12:48:03.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.888" endtime="20201029 12:48:03.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.499" endtime="20201029 12:48:03.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.494" endtime="20201029 12:48:03.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:03.904" level="INFO">${PHILIP_RES} = [{'diff': 0.0006595839999999978}, {'diff': 0.0006602770000000008}, {'diff': 0.0006603609999999982}, {'diff': 0.0006604580000000027}, {'diff': 0.0006604170000000034}, {'diff': 0.0006603059999999994}, {...</msg>
<status status="PASS" starttime="20201029 12:48:03.896" endtime="20201029 12:48:03.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:03.914" level="INFO">${RESULT} = {'diff': [0.0006595839999999978, 0.0006602770000000008, 0.0006603609999999982, 0.0006604580000000027, 0.0006604170000000034, 0.0006603059999999994, 0.0006603469999999986, 0.0006602360000000015, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:48:03.906" endtime="20201029 12:48:03.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.925" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:03.923" endtime="20201029 12:48:03.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.930" level="INFO">VALUE: [0.0006595839999999978, 0.0006602770000000008, 0.0006603609999999982, 0.0006604580000000027, 0.0006604170000000034, 0.0006603059999999994, 0.0006603469999999986, 0.0006602360000000015, 0.0006603609999999982, 0.000660222000000002, 0.0006603750000000047, 0.0006601950000000023, 0.0006602360000000015, 0.0006602910000000003, 0.0006602780000000003, 0.0006602919999999998, 0.0006602770000000008, 0.0006602500000000011, 0.0006601799999999963, 0.0006602359999999946, 0.0006600969999999984, 0.0006600699999999987, 0.0006601529999999967, 0.0006601530000000105, 0.0006601389999999902, 0.000660319999999992, 0.000660222000000002, 0.0006602359999999946, 0.0006602640000000076, 0.0006601940000000028, 0.000660193999999989, 0.0006601809999999958, 0.0006601949999999884, 0.0006601809999999958, 0.0006602079999999955, 0.0006602079999999955, 0.000660139000000004, 0.0006603059999999994, 0.0006601809999999958, 0.0006602639999999937, 0.0006602360000000085, 0.0006600550000000066, 0.0006602089999999949, 0.0006602079999999955, 0.0006603329999999991, 0.000660319999999992, 0.0006604030000000038, 0.0006602500000000011, 0.0006601940000000028, 0.0006603339999999985]</msg>
<status status="PASS" starttime="20201029 12:48:03.927" endtime="20201029 12:48:03.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.916" endtime="20201029 12:48:03.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.368" endtime="20201029 12:48:03.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.338" endtime="20201029 12:48:03.935"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:03.941" endtime="20201029 12:48:03.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.937" endtime="20201029 12:48:03.964"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.985" endtime="20201029 12:48:04.076"></status>
</kw>
<msg timestamp="20201029 12:48:04.077" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.982" endtime="20201029 12:48:04.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.084" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.080" endtime="20201029 12:48:04.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.086" endtime="20201029 12:48:04.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.974" endtime="20201029 12:48:04.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.969" endtime="20201029 12:48:04.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.109" endtime="20201029 12:48:04.459"></status>
</kw>
<msg timestamp="20201029 12:48:04.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034435639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035117944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.106" endtime="20201029 12:48:04.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034435639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035117944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.468" endtime="20201029 12:48:04.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.487" endtime="20201029 12:48:04.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.099" endtime="20201029 12:48:04.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.094" endtime="20201029 12:48:04.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:04.503" level="INFO">${PHILIP_RES} = [{'diff': 0.0006823050000000011}, {'diff': 0.0006828060000000011}, {'diff': 0.0006827500000000028}, {'diff': 0.0006828060000000011}, {'diff': 0.000682762999999996}, {'diff': 0.0006827500000000028}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:04.496" endtime="20201029 12:48:04.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:04.512" level="INFO">${RESULT} = {'diff': [0.0006823050000000011, 0.0006828060000000011, 0.0006827500000000028, 0.0006828060000000011, 0.000682762999999996, 0.0006827500000000028, 0.0006828059999999941, 0.0006827359999999963, 0.00068...</msg>
<status status="PASS" starttime="20201029 12:48:04.505" endtime="20201029 12:48:04.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.523" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:04.521" endtime="20201029 12:48:04.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.528" level="INFO">VALUE: [0.0006823050000000011, 0.0006828060000000011, 0.0006827500000000028, 0.0006828060000000011, 0.000682762999999996, 0.0006827500000000028, 0.0006828059999999941, 0.0006827359999999963, 0.0006827640000000024, 0.0006827360000000032, 0.000682695000000004, 0.0006827219999999967, 0.0006827219999999967, 0.000682695000000004, 0.0006826249999999992, 0.0006826249999999992, 0.0006826249999999992, 0.0006826389999999988, 0.0006825980000000065, 0.0006827090000000036, 0.0006826669999999979, 0.0006826810000000044, 0.0006826940000000115, 0.000682485999999996, 0.000682568999999994, 0.0006825000000000025, 0.0006826250000000061, 0.0006825280000000017, 0.0006825830000000005, 0.0006825280000000017, 0.0006825420000000082, 0.0006825419999999943, 0.0006825419999999943, 0.0006827639999999885, 0.0006826810000000044, 0.0006827920000000015, 0.0006826109999999996, 0.0006826529999999914, 0.0006827360000000032, 0.0006826109999999996, 0.0006826939999999976, 0.0006826109999999996, 0.0006825969999999931, 0.0006827089999999897, 0.0006826519999999919, 0.0006825550000000014, 0.000682584, 0.0006825560000000008, 0.0006825420000000082, 0.0006826119999999991]</msg>
<status status="PASS" starttime="20201029 12:48:04.525" endtime="20201029 12:48:04.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.514" endtime="20201029 12:48:04.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.965" endtime="20201029 12:48:04.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.936" endtime="20201029 12:48:04.533"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:04.539" endtime="20201029 12:48:04.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.536" endtime="20201029 12:48:04.564"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.586" endtime="20201029 12:48:04.682"></status>
</kw>
<msg timestamp="20201029 12:48:04.683" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.582" endtime="20201029 12:48:04.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.689" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.685" endtime="20201029 12:48:04.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.692" endtime="20201029 12:48:04.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.575" endtime="20201029 12:48:04.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.569" endtime="20201029 12:48:04.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.715" endtime="20201029 12:48:05.050"></status>
</kw>
<msg timestamp="20201029 12:48:05.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038039292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038743944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.711" endtime="20201029 12:48:05.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038039292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038743944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:05.059" endtime="20201029 12:48:05.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.076" endtime="20201029 12:48:05.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.704" endtime="20201029 12:48:05.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.700" endtime="20201029 12:48:05.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:05.092" level="INFO">${PHILIP_RES} = [{'diff': 0.0007046520000000001}, {'diff': 0.0007051250000000009}, {'diff': 0.0007051250000000009}, {'diff': 0.0007049580000000055}, {'diff': 0.0007050690000000026}, {'diff': 0.0007050549999999961}, {...</msg>
<status status="PASS" starttime="20201029 12:48:05.085" endtime="20201029 12:48:05.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:05.101" level="INFO">${RESULT} = {'diff': [0.0007046520000000001, 0.0007051250000000009, 0.0007051250000000009, 0.0007049580000000055, 0.0007050690000000026, 0.0007050549999999961, 0.0007049169999999993, 0.0007050140000000038, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:48:05.094" endtime="20201029 12:48:05.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.112" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:05.109" endtime="20201029 12:48:05.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.117" level="INFO">VALUE: [0.0007046520000000001, 0.0007051250000000009, 0.0007051250000000009, 0.0007049580000000055, 0.0007050690000000026, 0.0007050549999999961, 0.0007049169999999993, 0.0007050140000000038, 0.000705138000000001, 0.0007050840000000017, 0.0007051250000000009, 0.0007050969999999948, 0.000704959000000005, 0.0007049169999999993, 0.0007050829999999952, 0.0007050420000000029, 0.0007050420000000029, 0.0007050140000000038, 0.0007048890000000002, 0.0007048610000000011, 0.0007050700000000021, 0.0007050410000000035, 0.0007050279999999964, 0.0007050140000000038, 0.0007049169999999993, 0.0007049719999999982, 0.0007049159999999999, 0.0007048200000000088, 0.0007050139999999899, 0.0007048750000000076, 0.0007048189999999954, 0.0007048750000000076, 0.0007049999999999973, 0.0007050690000000026, 0.0007049580000000055, 0.0007047230000000043, 0.0007049299999999925, 0.0007048470000000084, 0.0007047639999999966, 0.0007048050000000028, 0.0007047919999999958, 0.0007048469999999946, 0.0007048620000000005, 0.0007049580000000055, 0.0007049019999999934, 0.0007049169999999993, 0.0007049300000000064, 0.0007048749999999937, 0.000704832999999988, 0.0007049310000000059]</msg>
<status status="PASS" starttime="20201029 12:48:05.114" endtime="20201029 12:48:05.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.103" endtime="20201029 12:48:05.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.565" endtime="20201029 12:48:05.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.534" endtime="20201029 12:48:05.122"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:05.127" endtime="20201029 12:48:05.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.124" endtime="20201029 12:48:05.151"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.173" endtime="20201029 12:48:05.268"></status>
</kw>
<msg timestamp="20201029 12:48:05.269" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.169" endtime="20201029 12:48:05.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.275" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.271" endtime="20201029 12:48:05.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.277" endtime="20201029 12:48:05.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.162" endtime="20201029 12:48:05.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.157" endtime="20201029 12:48:05.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.300" endtime="20201029 12:48:05.636"></status>
</kw>
<msg timestamp="20201029 12:48:05.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035183236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035910083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:05.297" endtime="20201029 12:48:05.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035183236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035910083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:05.645" endtime="20201029 12:48:05.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.662" endtime="20201029 12:48:05.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.290" endtime="20201029 12:48:05.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.285" endtime="20201029 12:48:05.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:05.679" level="INFO">${PHILIP_RES} = [{'diff': 0.0007268470000000027}, {'diff': 0.0007271519999999948}, {'diff': 0.0007270980000000024}, {'diff': 0.0007270970000000029}, {'diff': 0.0007271530000000012}, {'diff': 0.0007270840000000028}, {...</msg>
<status status="PASS" starttime="20201029 12:48:05.671" endtime="20201029 12:48:05.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:05.688" level="INFO">${RESULT} = {'diff': [0.0007268470000000027, 0.0007271519999999948, 0.0007270980000000024, 0.0007270970000000029, 0.0007271530000000012, 0.0007270840000000028, 0.0007270410000000047, 0.0007270269999999981, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:48:05.681" endtime="20201029 12:48:05.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.699" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:05.696" endtime="20201029 12:48:05.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.705" level="INFO">VALUE: [0.0007268470000000027, 0.0007271519999999948, 0.0007270980000000024, 0.0007270970000000029, 0.0007271530000000012, 0.0007270840000000028, 0.0007270410000000047, 0.0007270269999999981, 0.0007272360000000061, 0.0007272919999999974, 0.0007273330000000036, 0.000727208, 0.0007272499999999987, 0.0007271810000000004, 0.000727306000000004, 0.0007272499999999987, 0.000727208000000007, 0.0007273200000000035, 0.0007274169999999941, 0.000727305999999997, 0.0007273200000000035, 0.0007272359999999922, 0.0007272229999999991, 0.0007272499999999987, 0.0007272219999999996, 0.0007271390000000016, 0.0007271390000000016, 0.0007272229999999991, 0.0007272639999999914, 0.0007272079999999931, 0.0007271949999999999, 0.0007272090000000064, 0.000727208000000007, 0.0007272640000000052, 0.0007271940000000005, 0.0007271940000000005, 0.0007271670000000008, 0.0007271670000000008, 0.0007271809999999934, 0.0007270550000000042, 0.000727096999999996, 0.0007270699999999963, 0.0007271249999999951, 0.0007271809999999934, 0.0007271390000000016, 0.0007270279999999907, 0.0007272360000000061, 0.0007271940000000005, 0.0007271380000000022, 0.0007271530000000082]</msg>
<status status="PASS" starttime="20201029 12:48:05.701" endtime="20201029 12:48:05.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.690" endtime="20201029 12:48:05.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.152" endtime="20201029 12:48:05.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.123" endtime="20201029 12:48:05.710"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:05.716" endtime="20201029 12:48:05.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.713" endtime="20201029 12:48:05.739"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.760" endtime="20201029 12:48:05.857"></status>
</kw>
<msg timestamp="20201029 12:48:05.859" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.757" endtime="20201029 12:48:05.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.865" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.861" endtime="20201029 12:48:05.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.867" endtime="20201029 12:48:05.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.750" endtime="20201029 12:48:05.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.744" endtime="20201029 12:48:05.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.890" endtime="20201029 12:48:06.224"></status>
</kw>
<msg timestamp="20201029 12:48:06.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033758653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034507431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:05.887" endtime="20201029 12:48:06.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033758653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034507431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:06.233" endtime="20201029 12:48:06.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.250" endtime="20201029 12:48:06.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.880" endtime="20201029 12:48:06.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.875" endtime="20201029 12:48:06.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:06.266" level="INFO">${PHILIP_RES} = [{'diff': 0.0007487779999999986}, {'diff': 0.000749360999999997}, {'diff': 0.0007492360000000003}, {'diff': 0.0007493890000000031}, {'diff': 0.0007493190000000052}, {'diff': 0.0007493199999999978}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:06.259" endtime="20201029 12:48:06.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:06.276" level="INFO">${RESULT} = {'diff': [0.0007487779999999986, 0.000749360999999997, 0.0007492360000000003, 0.0007493890000000031, 0.0007493190000000052, 0.0007493199999999978, 0.0007493469999999974, 0.0007492779999999991, 0.00074...</msg>
<status status="PASS" starttime="20201029 12:48:06.268" endtime="20201029 12:48:06.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.287" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:06.284" endtime="20201029 12:48:06.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.293" level="INFO">VALUE: [0.0007487779999999986, 0.000749360999999997, 0.0007492360000000003, 0.0007493890000000031, 0.0007493190000000052, 0.0007493199999999978, 0.0007493469999999974, 0.0007492779999999991, 0.000749167000000002, 0.0007492919999999986, 0.0007492080000000012, 0.0007493199999999978, 0.0007495139999999997, 0.0007496670000000025, 0.0007494590000000009, 0.0007494309999999949, 0.0007494859999999937, 0.0007495000000000002, 0.0007495129999999933, 0.0007495279999999993, 0.0007495690000000055, 0.0007495000000000002, 0.0007496390000000103, 0.0007495829999999981, 0.0007495140000000067, 0.0007495420000000058, 0.0007495409999999925, 0.0007494860000000075, 0.0007495279999999993, 0.0007495269999999998, 0.0007496950000000085, 0.0007495140000000067, 0.0007495279999999993, 0.0007497220000000082, 0.0007496670000000094, 0.0007494309999999949, 0.0007495420000000058, 0.0007495690000000055, 0.0007495559999999984, 0.0007494440000000019, 0.0007495000000000002, 0.0007493749999999966, 0.0007493749999999966, 0.000749278000000006, 0.0007492080000000012, 0.0007493199999999978, 0.000749249999999993, 0.0007492639999999995, 0.0007492089999999868, 0.0007491939999999947]</msg>
<status status="PASS" starttime="20201029 12:48:06.289" endtime="20201029 12:48:06.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.278" endtime="20201029 12:48:06.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.741" endtime="20201029 12:48:06.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.711" endtime="20201029 12:48:06.300"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:06.305" endtime="20201029 12:48:06.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.302" endtime="20201029 12:48:06.328"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.349" endtime="20201029 12:48:06.449"></status>
</kw>
<msg timestamp="20201029 12:48:06.451" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.346" endtime="20201029 12:48:06.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.457" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.453" endtime="20201029 12:48:06.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.459" endtime="20201029 12:48:06.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.339" endtime="20201029 12:48:06.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.334" endtime="20201029 12:48:06.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.482" endtime="20201029 12:48:06.816"></status>
</kw>
<msg timestamp="20201029 12:48:06.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034014222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034786903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:06.479" endtime="20201029 12:48:06.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034014222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034786903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:06.825" endtime="20201029 12:48:06.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.843" endtime="20201029 12:48:06.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.472" endtime="20201029 12:48:06.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.467" endtime="20201029 12:48:06.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:06.858" level="INFO">${PHILIP_RES} = [{'diff': 0.0007726810000000042}, {'diff': 0.0007730140000000024}, {'diff': 0.0007729440000000046}, {'diff': 0.0007728609999999997}, {'diff': 0.0007729159999999985}, {'diff': 0.0007728479999999996}, {...</msg>
<status status="PASS" starttime="20201029 12:48:06.851" endtime="20201029 12:48:06.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:06.869" level="INFO">${RESULT} = {'diff': [0.0007726810000000042, 0.0007730140000000024, 0.0007729440000000046, 0.0007728609999999997, 0.0007729159999999985, 0.0007728479999999996, 0.0007729170000000049, 0.0007729170000000049, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:48:06.860" endtime="20201029 12:48:06.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.879" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:06.877" endtime="20201029 12:48:06.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.884" level="INFO">VALUE: [0.0007726810000000042, 0.0007730140000000024, 0.0007729440000000046, 0.0007728609999999997, 0.0007729159999999985, 0.0007728479999999996, 0.0007729170000000049, 0.0007729170000000049, 0.0007729299999999981, 0.0007728470000000001, 0.000772916999999998, 0.0007728060000000009, 0.0007728749999999993, 0.0007728060000000009, 0.0007729439999999976, 0.0007728609999999997, 0.0007730970000000004, 0.000773027999999995, 0.0007729719999999968, 0.0007730410000000021, 0.0007729580000000041, 0.0007731659999999918, 0.0007731799999999983, 0.0007730280000000089, 0.0007730420000000016, 0.0007730000000000098, 0.0007729579999999903, 0.0007729999999999959, 0.0007730559999999942, 0.0007728889999999988, 0.0007728469999999932, 0.0007729030000000053, 0.0007728750000000062, 0.0007728470000000071, 0.0007728060000000009, 0.0007728750000000062, 0.0007727639999999952, 0.0007728889999999988, 0.0007728060000000009, 0.0007728609999999997, 0.0007728879999999994, 0.0007728199999999935, 0.0007727359999999961, 0.0007728470000000071, 0.0007726940000000043, 0.0007727089999999964, 0.0007727359999999961, 0.0007727089999999964, 0.000772707999999997, 0.0007727500000000026]</msg>
<status status="PASS" starttime="20201029 12:48:06.882" endtime="20201029 12:48:06.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.871" endtime="20201029 12:48:06.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.330" endtime="20201029 12:48:06.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.300" endtime="20201029 12:48:06.896"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:06.901" endtime="20201029 12:48:06.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.898" endtime="20201029 12:48:06.925"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.945" endtime="20201029 12:48:07.048"></status>
</kw>
<msg timestamp="20201029 12:48:07.049" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.942" endtime="20201029 12:48:07.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.055" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.051" endtime="20201029 12:48:07.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.057" endtime="20201029 12:48:07.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.935" endtime="20201029 12:48:07.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.930" endtime="20201029 12:48:07.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.081" endtime="20201029 12:48:07.417"></status>
</kw>
<msg timestamp="20201029 12:48:07.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033685653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034481111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:07.077" endtime="20201029 12:48:07.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033685653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034481111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:07.426" endtime="20201029 12:48:07.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.443" endtime="20201029 12:48:07.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.070" endtime="20201029 12:48:07.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.065" endtime="20201029 12:48:07.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:07.459" level="INFO">${PHILIP_RES} = [{'diff': 0.0007954579999999989}, {'diff': 0.000796083000000003}, {'diff': 0.0007962640000000049}, {'diff': 0.0007962639999999979}, {'diff': 0.0007961949999999995}, {'diff': 0.0007961940000000001}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:07.452" endtime="20201029 12:48:07.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:07.468" level="INFO">${RESULT} = {'diff': [0.0007954579999999989, 0.000796083000000003, 0.0007962640000000049, 0.0007962639999999979, 0.0007961949999999995, 0.0007961940000000001, 0.0007964030000000011, 0.0007964440000000003, 0.00079...</msg>
<status status="PASS" starttime="20201029 12:48:07.461" endtime="20201029 12:48:07.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.478" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:07.476" endtime="20201029 12:48:07.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.483" level="INFO">VALUE: [0.0007954579999999989, 0.000796083000000003, 0.0007962640000000049, 0.0007962639999999979, 0.0007961949999999995, 0.0007961940000000001, 0.0007964030000000011, 0.0007964440000000003, 0.0007964310000000002, 0.0007964310000000002, 0.0007963329999999963, 0.0007963189999999967, 0.0007962359999999988, 0.0007962639999999979, 0.0007962500000000053, 0.0007962499999999983, 0.0007962919999999901, 0.0007962219999999992, 0.0007963609999999954, 0.0007961810000000069, 0.0007962080000000066, 0.0007963890000000085, 0.0007963059999999966, 0.0007963200000000031, 0.0007963470000000028, 0.0007962089999999922, 0.0007963750000000019, 0.000796209000000006, 0.0007963610000000093, 0.0007962779999999975, 0.0007963190000000037, 0.0007963750000000019, 0.0007960969999999956, 0.0007960970000000095, 0.000796209000000006, 0.0007962230000000126, 0.0007962779999999975, 0.0007962359999999918, 0.0007962079999999927, 0.0007962219999999992, 0.0007963189999999898, 0.0007962360000000057, 0.000796263999999991, 0.0007961529999999939, 0.0007960970000000095, 0.0007961940000000001, 0.0007961390000000013, 0.0007962359999999918, 0.0007962080000000066, 0.0007962220000000131]</msg>
<status status="PASS" starttime="20201029 12:48:07.480" endtime="20201029 12:48:07.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.469" endtime="20201029 12:48:07.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.926" endtime="20201029 12:48:07.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.897" endtime="20201029 12:48:07.488"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:07.494" endtime="20201029 12:48:07.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.490" endtime="20201029 12:48:07.517"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.538" endtime="20201029 12:48:07.644"></status>
</kw>
<msg timestamp="20201029 12:48:07.645" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.534" endtime="20201029 12:48:07.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.652" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.647" endtime="20201029 12:48:07.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.654" endtime="20201029 12:48:07.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.527" endtime="20201029 12:48:07.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.522" endtime="20201029 12:48:07.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.677" endtime="20201029 12:48:08.010"></status>
</kw>
<msg timestamp="20201029 12:48:08.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035470125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036288625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:07.673" endtime="20201029 12:48:08.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035470125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036288625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:08.018" endtime="20201029 12:48:08.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.036" endtime="20201029 12:48:08.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.666" endtime="20201029 12:48:08.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.662" endtime="20201029 12:48:08.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:08.052" level="INFO">${PHILIP_RES} = [{'diff': 0.0008184999999999998}, {'diff': 0.0008191939999999953}, {'diff': 0.0008191810000000022}, {'diff': 0.0008192910000000067}, {'diff': 0.0008192220000000014}, {'diff': 0.0008192080000000018}, {...</msg>
<status status="PASS" starttime="20201029 12:48:08.044" endtime="20201029 12:48:08.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:08.061" level="INFO">${RESULT} = {'diff': [0.0008184999999999998, 0.0008191939999999953, 0.0008191810000000022, 0.0008192910000000067, 0.0008192220000000014, 0.0008192080000000018, 0.0008193329999999985, 0.0008193609999999976, 0.0008...</msg>
<status status="PASS" starttime="20201029 12:48:08.054" endtime="20201029 12:48:08.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.072" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:08.070" endtime="20201029 12:48:08.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.077" level="INFO">VALUE: [0.0008184999999999998, 0.0008191939999999953, 0.0008191810000000022, 0.0008192910000000067, 0.0008192220000000014, 0.0008192080000000018, 0.0008193329999999985, 0.0008193609999999976, 0.0008191519999999966, 0.0008194309999999955, 0.0008193610000000046, 0.0008193609999999976, 0.0008193200000000053, 0.0008194030000000033, 0.0008193890000000037, 0.0008193889999999898, 0.0008193199999999984, 0.0008193329999999915, 0.0008193609999999907, 0.0008193189999999989, 0.0008193890000000037, 0.0008193479999999975, 0.0008193060000000058, 0.0008192640000000001, 0.0008193199999999984, 0.0008193329999999915, 0.000819362000000004, 0.0008193609999999907, 0.0008192780000000066, 0.0008192640000000001, 0.000819346999999998, 0.0008192780000000066, 0.0008192920000000131, 0.0008191949999999948, 0.0008192640000000001, 0.0008191800000000027, 0.0008193329999999915, 0.0008194030000000102, 0.0008192640000000001, 0.000819346999999998, 0.0008192769999999933, 0.0008193890000000037, 0.0008192779999999927, 0.000819429999999996, 0.0008194030000000102, 0.0008193200000000123, 0.000819236000000001, 0.0008192919999999992, 0.0008192919999999992, 0.000819236000000001]</msg>
<status status="PASS" starttime="20201029 12:48:08.074" endtime="20201029 12:48:08.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.062" endtime="20201029 12:48:08.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.518" endtime="20201029 12:48:08.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.489" endtime="20201029 12:48:08.082"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:08.088" endtime="20201029 12:48:08.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.084" endtime="20201029 12:48:08.111"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.133" endtime="20201029 12:48:08.240"></status>
</kw>
<msg timestamp="20201029 12:48:08.242" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.130" endtime="20201029 12:48:08.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.248" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.244" endtime="20201029 12:48:08.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.250" endtime="20201029 12:48:08.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.123" endtime="20201029 12:48:08.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.118" endtime="20201029 12:48:08.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.273" endtime="20201029 12:48:08.612"></status>
</kw>
<msg timestamp="20201029 12:48:08.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035167181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0360095, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:08.270" endtime="20201029 12:48:08.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035167181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0360095, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:08.621" endtime="20201029 12:48:08.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.638" endtime="20201029 12:48:08.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.263" endtime="20201029 12:48:08.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.258" endtime="20201029 12:48:08.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:08.654" level="INFO">${PHILIP_RES} = [{'diff': 0.0008423190000000011}, {'diff': 0.0008424720000000038}, {'diff': 0.0008425280000000021}, {'diff': 0.000842499999999996}, {'diff': 0.0008423609999999998}, {'diff': 0.0008424440000000047}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:08.647" endtime="20201029 12:48:08.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:08.663" level="INFO">${RESULT} = {'diff': [0.0008423190000000011, 0.0008424720000000038, 0.0008425280000000021, 0.000842499999999996, 0.0008423609999999998, 0.0008424440000000047, 0.0008424719999999969, 0.0008424859999999965, 0.00084...</msg>
<status status="PASS" starttime="20201029 12:48:08.656" endtime="20201029 12:48:08.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.674" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:08.671" endtime="20201029 12:48:08.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.680" level="INFO">VALUE: [0.0008423190000000011, 0.0008424720000000038, 0.0008425280000000021, 0.000842499999999996, 0.0008423609999999998, 0.0008424440000000047, 0.0008424719999999969, 0.0008424859999999965, 0.0008425279999999952, 0.0008425700000000008, 0.0008424860000000034, 0.0008425840000000004, 0.000842499999999996, 0.0008424720000000038, 0.0008425130000000031, 0.0008423750000000063, 0.000842499999999996, 0.0008425279999999952, 0.0008424860000000034, 0.0008424439999999978, 0.0008424169999999981, 0.000842528000000009, 0.0008424439999999978, 0.0008424030000000055, 0.0008424590000000037, 0.0008424310000000046, 0.0008422780000000019, 0.000842306000000001, 0.0008424019999999921, 0.0008423889999999989, 0.0008423889999999989, 0.0008423750000000063, 0.0008423750000000063, 0.0008423609999999998, 0.0008424169999999981, 0.0008424030000000055, 0.0008425279999999952, 0.000842319000000008, 0.000842499999999996, 0.0008425559999999943, 0.0008425279999999952, 0.0008426249999999996, 0.0008424169999999981, 0.0008424159999999986, 0.000842319000000008, 0.0008424449999999972, 0.0008425139999999887, 0.000842417000000012, 0.0008425139999999887, 0.0008425559999999943]</msg>
<status status="PASS" starttime="20201029 12:48:08.676" endtime="20201029 12:48:08.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.665" endtime="20201029 12:48:08.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.112" endtime="20201029 12:48:08.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.083" endtime="20201029 12:48:08.685"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:08.691" endtime="20201029 12:48:08.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.687" endtime="20201029 12:48:08.714"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.735" endtime="20201029 12:48:08.845"></status>
</kw>
<msg timestamp="20201029 12:48:08.846" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.732" endtime="20201029 12:48:08.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.852" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.848" endtime="20201029 12:48:08.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.854" endtime="20201029 12:48:08.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.725" endtime="20201029 12:48:08.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.719" endtime="20201029 12:48:08.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.877" endtime="20201029 12:48:09.210"></status>
</kw>
<msg timestamp="20201029 12:48:09.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033586097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034451583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:08.874" endtime="20201029 12:48:09.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033586097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034451583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:09.219" endtime="20201029 12:48:09.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.236" endtime="20201029 12:48:09.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.867" endtime="20201029 12:48:09.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.862" endtime="20201029 12:48:09.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:09.252" level="INFO">${PHILIP_RES} = [{'diff': 0.0008654859999999986}, {'diff': 0.0008670129999999998}, {'diff': 0.0008669440000000014}, {'diff': 0.0008671109999999968}, {'diff': 0.0008671389999999959}, {'diff': 0.000867055999999998}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:09.245" endtime="20201029 12:48:09.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:09.263" level="INFO">${RESULT} = {'diff': [0.0008654859999999986, 0.0008670129999999998, 0.0008669440000000014, 0.0008671109999999968, 0.0008671389999999959, 0.000867055999999998, 0.0008669860000000001, 0.0008669999999999997, 0.00086...</msg>
<status status="PASS" starttime="20201029 12:48:09.254" endtime="20201029 12:48:09.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.273" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:09.271" endtime="20201029 12:48:09.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.278" level="INFO">VALUE: [0.0008654859999999986, 0.0008670129999999998, 0.0008669440000000014, 0.0008671109999999968, 0.0008671389999999959, 0.000867055999999998, 0.0008669860000000001, 0.0008669999999999997, 0.0008669440000000014, 0.0008670280000000058, 0.0008669719999999936, 0.0008669590000000005, 0.0008669579999999941, 0.0008668609999999966, 0.0008669310000000013, 0.000866958000000001, 0.0008668750000000031, 0.0008669170000000087, 0.000867040999999999, 0.0008670560000000049, 0.0008669169999999948, 0.0008669860000000001, 0.0008670549999999916, 0.0008670830000000046, 0.0008670969999999972, 0.0008670139999999993, 0.0008670139999999993, 0.0008668609999999966, 0.0008670000000000067, 0.000866944999999994, 0.0008670139999999993, 0.0008670419999999984, 0.0008670000000000067, 0.0008669590000000005, 0.0008669860000000001, 0.0008669159999999954, 0.0008670280000000058, 0.0008669440000000084, 0.0008669169999999948, 0.0008670280000000058, 0.0008669860000000001, 0.0008667630000000065, 0.0008669170000000087, 0.0008670139999999993, 0.0008670560000000049, 0.0008670139999999993, 0.0008670829999999907, 0.0008669719999999936, 0.000866986000000014, 0.0008671249999999964]</msg>
<status status="PASS" starttime="20201029 12:48:09.276" endtime="20201029 12:48:09.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.264" endtime="20201029 12:48:09.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.716" endtime="20201029 12:48:09.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.686" endtime="20201029 12:48:09.283"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:09.289" endtime="20201029 12:48:09.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.286" endtime="20201029 12:48:09.313"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.334" endtime="20201029 12:48:09.446"></status>
</kw>
<msg timestamp="20201029 12:48:09.447" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.330" endtime="20201029 12:48:09.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.453" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.449" endtime="20201029 12:48:09.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.455" endtime="20201029 12:48:09.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.323" endtime="20201029 12:48:09.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.318" endtime="20201029 12:48:09.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.478" endtime="20201029 12:48:09.813"></status>
</kw>
<msg timestamp="20201029 12:48:09.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034494917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0353855, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:09.475" endtime="20201029 12:48:09.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034494917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0353855, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:09.822" endtime="20201029 12:48:09.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.840" endtime="20201029 12:48:09.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.468" endtime="20201029 12:48:09.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.463" endtime="20201029 12:48:09.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:09.856" level="INFO">${PHILIP_RES} = [{'diff': 0.0008905830000000003}, {'diff': 0.0008912499999999962}, {'diff': 0.0008912779999999954}, {'diff': 0.0008912500000000032}, {'diff': 0.000891402999999999}, {'diff': 0.0008913190000000015}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:09.848" endtime="20201029 12:48:09.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:09.866" level="INFO">${RESULT} = {'diff': [0.0008905830000000003, 0.0008912499999999962, 0.0008912779999999954, 0.0008912500000000032, 0.000891402999999999, 0.0008913190000000015, 0.0008914169999999985, 0.0008912919999999949, 0.00089...</msg>
<status status="PASS" starttime="20201029 12:48:09.858" endtime="20201029 12:48:09.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.877" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:09.875" endtime="20201029 12:48:09.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.882" level="INFO">VALUE: [0.0008905830000000003, 0.0008912499999999962, 0.0008912779999999954, 0.0008912500000000032, 0.000891402999999999, 0.0008913190000000015, 0.0008914169999999985, 0.0008912919999999949, 0.0008911939999999979, 0.0008912370000000031, 0.0008912630000000032, 0.0008912639999999958, 0.0008912370000000031, 0.0008913470000000076, 0.0008912920000000019, 0.0008912920000000019, 0.0008913749999999998, 0.0008912779999999954, 0.0008911940000000118, 0.0008912360000000036, 0.0008911389999999991, 0.000891028000000002, 0.0008912219999999971, 0.0008911250000000065, 0.0008912359999999897, 0.0008911810000000048, 0.0008912779999999954, 0.0008912920000000019, 0.0008913610000000072, 0.0008912640000000027, 0.0008913470000000007, 0.0008911249999999926, 0.0008912080000000044, 0.0008911800000000053, 0.0008912640000000027, 0.0008911800000000053, 0.0008913889999999924, 0.0008914440000000051, 0.0008914299999999986, 0.000891320000000001, 0.0008913329999999942, 0.0008913470000000007, 0.000891416000000006, 0.00089120899999999, 0.0008913060000000084, 0.0008914029999999851, 0.0008911809999999909, 0.0008913749999999998, 0.0008913060000000084, 0.0008913889999999924]</msg>
<status status="PASS" starttime="20201029 12:48:09.879" endtime="20201029 12:48:09.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.868" endtime="20201029 12:48:09.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.314" endtime="20201029 12:48:09.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.284" endtime="20201029 12:48:09.887"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:09.893" endtime="20201029 12:48:09.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.889" endtime="20201029 12:48:09.916"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.937" endtime="20201029 12:48:10.052"></status>
</kw>
<msg timestamp="20201029 12:48:10.053" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.933" endtime="20201029 12:48:10.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.059" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:10.055" endtime="20201029 12:48:10.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.061" endtime="20201029 12:48:10.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.926" endtime="20201029 12:48:10.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.921" endtime="20201029 12:48:10.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.084" endtime="20201029 12:48:10.419"></status>
</kw>
<msg timestamp="20201029 12:48:10.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033836375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034751917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:10.081" endtime="20201029 12:48:10.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033836375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034751917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:10.428" endtime="20201029 12:48:10.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.446" endtime="20201029 12:48:10.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.074" endtime="20201029 12:48:10.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.069" endtime="20201029 12:48:10.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:10.461" level="INFO">${PHILIP_RES} = [{'diff': 0.0009155419999999984}, {'diff': 0.0009156530000000024}, {'diff': 0.0009155559999999979}, {'diff': 0.0009155409999999989}, {'diff': 0.0009154720000000005}, {'diff': 0.0009154580000000009}, {...</msg>
<status status="PASS" starttime="20201029 12:48:10.454" endtime="20201029 12:48:10.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:10.470" level="INFO">${RESULT} = {'diff': [0.0009155419999999984, 0.0009156530000000024, 0.0009155559999999979, 0.0009155409999999989, 0.0009154720000000005, 0.0009154580000000009, 0.0009154720000000005, 0.0009155140000000062, 0.0009...</msg>
<status status="PASS" starttime="20201029 12:48:10.463" endtime="20201029 12:48:10.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.481" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:10.478" endtime="20201029 12:48:10.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.486" level="INFO">VALUE: [0.0009155419999999984, 0.0009156530000000024, 0.0009155559999999979, 0.0009155409999999989, 0.0009154720000000005, 0.0009154580000000009, 0.0009154720000000005, 0.0009155140000000062, 0.0009153609999999965, 0.0009153190000000047, 0.0009154439999999944, 0.0009153610000000034, 0.0009154029999999952, 0.0009154030000000091, 0.0009154870000000065, 0.0009153479999999964, 0.0009153610000000034, 0.0009153189999999978, 0.0009153469999999969, 0.000915263999999999, 0.0009153329999999904, 0.0009153330000000043, 0.0009155269999999993, 0.000915374999999996, 0.0009154450000000008, 0.0009153889999999887, 0.0009155410000000058, 0.0009155970000000041, 0.0009153609999999895, 0.0009156249999999894, 0.0009154719999999866, 0.0009153889999999887, 0.0009153610000000034, 0.0009154450000000008, 0.0009154160000000022, 0.0009154720000000005, 0.0009155839999999971, 0.0009154999999999996, 0.0009155970000000041, 0.0009155420000000053, 0.0009156250000000032, 0.0009155560000000118, 0.0009156110000000106, 0.0009155279999999988, 0.0009155829999999976, 0.0009156109999999829, 0.0009156529999999885, 0.0009155839999999971, 0.000915680000000002, 0.0009155279999999988]</msg>
<status status="PASS" starttime="20201029 12:48:10.483" endtime="20201029 12:48:10.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.472" endtime="20201029 12:48:10.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.917" endtime="20201029 12:48:10.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.888" endtime="20201029 12:48:10.491"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:10.496" endtime="20201029 12:48:10.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.493" endtime="20201029 12:48:10.520"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.540" endtime="20201029 12:48:10.659"></status>
</kw>
<msg timestamp="20201029 12:48:10.660" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:10.537" endtime="20201029 12:48:10.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.666" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:10.662" endtime="20201029 12:48:10.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.668" endtime="20201029 12:48:10.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.530" endtime="20201029 12:48:10.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.525" endtime="20201029 12:48:10.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.691" endtime="20201029 12:48:11.027"></status>
</kw>
<msg timestamp="20201029 12:48:11.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035273167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03621125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:10.688" endtime="20201029 12:48:11.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035273167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03621125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:11.036" endtime="20201029 12:48:11.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.053" endtime="20201029 12:48:11.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.681" endtime="20201029 12:48:11.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.676" endtime="20201029 12:48:11.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:11.069" level="INFO">${PHILIP_RES} = [{'diff': 0.0009380829999999993}, {'diff': 0.0009398340000000005}, {'diff': 0.0009396109999999999}, {'diff': 0.0009395690000000012}, {'diff': 0.0009397780000000022}, {'diff': 0.000939915999999999}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:11.061" endtime="20201029 12:48:11.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:11.078" level="INFO">${RESULT} = {'diff': [0.0009380829999999993, 0.0009398340000000005, 0.0009396109999999999, 0.0009395690000000012, 0.0009397780000000022, 0.000939915999999999, 0.0009398200000000009, 0.0009397360000000035, 0.00093...</msg>
<status status="PASS" starttime="20201029 12:48:11.071" endtime="20201029 12:48:11.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.088" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:11.086" endtime="20201029 12:48:11.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.093" level="INFO">VALUE: [0.0009380829999999993, 0.0009398340000000005, 0.0009396109999999999, 0.0009395690000000012, 0.0009397780000000022, 0.000939915999999999, 0.0009398200000000009, 0.0009397360000000035, 0.0009398200000000009, 0.0009400279999999955, 0.000939833000000001, 0.000939930999999998, 0.0009396940000000048, 0.0009397499999999892, 0.0009397780000000022, 0.0009396950000000043, 0.0009397220000000039, 0.0009396669999999913, 0.0009394299999999911, 0.0009395700000000007, 0.0009397359999999966, 0.0009398060000000014, 0.0009398749999999928, 0.0009398339999999866, 0.0009400410000000026, 0.0009400830000000082, 0.0009399030000000058, 0.0009398610000000002, 0.0009400140000000029, 0.0009399579999999907, 0.0009399860000000038, 0.0009400700000000012, 0.0009400980000000003, 0.0009399030000000058, 0.0009399729999999967, 0.0009399720000000111, 0.000939931000000005, 0.0009400410000000026, 0.0009400700000000012, 0.0009398749999999928, 0.0009399999999999964, 0.0009399999999999964, 0.0009399030000000197, 0.000939861000000014, 0.0009399730000000106, 0.0009399029999999919, 0.0009400140000000168, 0.0009399870000000032, 0.0009398889999999993, 0.0009398889999999993]</msg>
<status status="PASS" starttime="20201029 12:48:11.090" endtime="20201029 12:48:11.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.079" endtime="20201029 12:48:11.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.521" endtime="20201029 12:48:11.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.492" endtime="20201029 12:48:11.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.090" endtime="20201029 12:48:11.098"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:40.899" endtime="20201029 12:48:11.100" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:47:12.464" endtime="20201029 12:48:11.121"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.295" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:48:11.311" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:48:13.299" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:48:11.292" endtime="20201029 12:48:13.301"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.306" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:48:13.303" endtime="20201029 12:48:13.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.289" endtime="20201029 12:48:13.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:13.313" endtime="20201029 12:48:13.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.310" endtime="20201029 12:48:13.646"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.675" endtime="20201029 12:48:13.691"></status>
</kw>
<msg timestamp="20201029 12:48:13.692" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.672" endtime="20201029 12:48:13.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.698" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.694" endtime="20201029 12:48:13.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.706" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:13.700" endtime="20201029 12:48:13.707"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:13.666" endtime="20201029 12:48:13.709"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:13.660" endtime="20201029 12:48:13.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.658" endtime="20201029 12:48:13.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:13.719" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:13.718" endtime="20201029 12:48:13.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.713" endtime="20201029 12:48:13.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.656" endtime="20201029 12:48:13.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.654" endtime="20201029 12:48:13.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.723" endtime="20201029 12:48:13.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.651" endtime="20201029 12:48:13.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.729" endtime="20201029 12:48:13.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.648" endtime="20201029 12:48:13.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.286" endtime="20201029 12:48:13.735"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:13.749" endtime="20201029 12:48:13.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.745" endtime="20201029 12:48:13.772"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.805" endtime="20201029 12:48:13.820"></status>
</kw>
<msg timestamp="20201029 12:48:13.822" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.802" endtime="20201029 12:48:13.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.828" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.824" endtime="20201029 12:48:13.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.834" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:13.830" endtime="20201029 12:48:13.835"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:13.795" endtime="20201029 12:48:13.837"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:13.789" endtime="20201029 12:48:13.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.786" endtime="20201029 12:48:13.839"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:13.847" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:13.845" endtime="20201029 12:48:13.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.841" endtime="20201029 12:48:13.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.784" endtime="20201029 12:48:13.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.783" endtime="20201029 12:48:13.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.852" endtime="20201029 12:48:13.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.779" endtime="20201029 12:48:13.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.774" endtime="20201029 12:48:13.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.742" endtime="20201029 12:48:13.859"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.883" endtime="20201029 12:48:13.900"></status>
</kw>
<msg timestamp="20201029 12:48:13.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.880" endtime="20201029 12:48:13.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.903" endtime="20201029 12:48:13.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.909" endtime="20201029 12:48:13.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.873" endtime="20201029 12:48:13.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.867" endtime="20201029 12:48:13.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.933" endtime="20201029 12:48:14.316"></status>
</kw>
<msg timestamp="20201029 12:48:14.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126443514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.126476264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:48:13.929" endtime="20201029 12:48:14.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126443514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.126476264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:48:14.326" endtime="20201029 12:48:14.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.344" endtime="20201029 12:48:14.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.922" endtime="20201029 12:48:14.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.917" endtime="20201029 12:48:14.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:14.362" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.9346999999995136e-05}, {'diff': 3.9917000000000424e-05}, {'diff': 3.97370000000119e-05}, {'diff': 4.05139999999915e-05}, {'diff': 3.920799999998503e-05}, {'diff': 4.0528000000...</msg>
<status status="PASS" starttime="20201029 12:48:14.353" endtime="20201029 12:48:14.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:14.374" level="INFO">${ACCURACY} = {'diff': [0, 3.9346999999995136e-05, 3.9917000000000424e-05, 3.97370000000119e-05, 4.05139999999915e-05, 3.920799999998503e-05, 4.052800000001189e-05, 3.97770000000186e-05, 4.043099999997968e-05, 4.00...</msg>
<status status="PASS" starttime="20201029 12:48:14.364" endtime="20201029 12:48:14.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.385" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:48:14.383" endtime="20201029 12:48:14.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.390" level="INFO">VALUE: [0, 3.9346999999995136e-05, 3.9917000000000424e-05, 3.97370000000119e-05, 4.05139999999915e-05, 3.920799999998503e-05, 4.052800000001189e-05, 3.97770000000186e-05, 4.043099999997968e-05, 4.001400000000488e-05, 3.9597000000002325e-05, 3.904099999998967e-05, 3.9637999999980744e-05, 3.9194999999991875e-05, 4.005599999998277e-05, 4.04170000000148e-05, 3.988900000001516e-05, 4.015199999998775e-05, 3.999999999998449e-05, 4.055599999999715e-05, 3.951299999999103e-05, 4.0485999999978484e-05, 4.045799999999322e-05, 4.001400000000488e-05, 4.047200000001361e-05, 3.981999999999597e-05, 4.048700000000571e-05, 3.9749999999977303e-05, 4.033299999997575e-05, 4.001400000000488e-05, 3.973599999998467e-05, 3.969400000000678e-05, 3.976399999999769e-05, 4.034799999999561e-05, 3.973599999998467e-05, 4.055599999999715e-05, 4.043000000000796e-05, 4.048600000000624e-05, 3.983299999998913e-05, 4.047199999998585e-05, 4.0472999999985326e-05, 3.9972999999998704e-05, 3.969500000000625e-05, 4.0277000000005225e-05, 4.02780000000047e-05, 3.9917000000000424e-05, 4.0485999999978484e-05, 4.00549999999833e-05, 3.9708999999998884e-05, 4.026400000001207e-05]</msg>
<status status="PASS" starttime="20201029 12:48:14.387" endtime="20201029 12:48:14.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.376" endtime="20201029 12:48:14.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:14.402" endtime="20201029 12:48:14.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.398" endtime="20201029 12:48:14.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.395" endtime="20201029 12:48:14.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.863" endtime="20201029 12:48:14.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.862" endtime="20201029 12:48:14.427"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.449" endtime="20201029 12:48:14.466"></status>
</kw>
<msg timestamp="20201029 12:48:14.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.446" endtime="20201029 12:48:14.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.469" endtime="20201029 12:48:14.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.475" endtime="20201029 12:48:14.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.439" endtime="20201029 12:48:14.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.433" endtime="20201029 12:48:14.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.499" endtime="20201029 12:48:14.832"></status>
</kw>
<msg timestamp="20201029 12:48:14.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038898306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038938236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:14.495" endtime="20201029 12:48:14.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038898306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038938236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:14.841" endtime="20201029 12:48:14.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.860" endtime="20201029 12:48:14.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.488" endtime="20201029 12:48:14.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.483" endtime="20201029 12:48:14.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:14.877" level="INFO">${RESULT} = [{'diff': 3.993000000000052e-05}, {'diff': 3.968000000000027e-05}, {'diff': 3.9805000000003865e-05}, {'diff': 4.034799999999561e-05}, {'diff': 4.0346999999996136e-05}, {'diff': 3.922199999999848e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:14.868" endtime="20201029 12:48:14.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:14.888" level="INFO">${ACCURACY} = {'diff': [3.993000000000052e-05, 3.968000000000027e-05, 3.9805000000003865e-05, 4.034799999999561e-05, 4.0346999999996136e-05, 3.922199999999848e-05, 4.045800000000016e-05, 3.975000000000506e-05, 3.99...</msg>
<status status="PASS" starttime="20201029 12:48:14.879" endtime="20201029 12:48:14.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.899" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:48:14.897" endtime="20201029 12:48:14.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.904" level="INFO">VALUE: [3.993000000000052e-05, 3.968000000000027e-05, 3.9805000000003865e-05, 4.034799999999561e-05, 4.0346999999996136e-05, 3.922199999999848e-05, 4.045800000000016e-05, 3.975000000000506e-05, 3.9958999999999134e-05, 3.9375000000001215e-05, 3.919399999999934e-05, 4.0417000000000924e-05, 3.969399999999984e-05, 3.96660000000007e-05, 3.973600000000549e-05, 4.0346999999996136e-05, 4.0291000000004795e-05, 3.976399999999769e-05, 4.023599999999905e-05, 4.0139000000001535e-05, 3.976400000000463e-05, 4.044400000000059e-05, 3.9930999999999994e-05, 3.9917000000000424e-05, 4.0319000000003935e-05, 3.99859999999988e-05, 3.965200000000113e-05, 4.0347000000003075e-05, 3.9917000000000424e-05, 4.0040999999997606e-05, 4.0139000000001535e-05, 3.952799999999701e-05, 3.995799999999966e-05, 3.9917000000000424e-05, 4.047199999999973e-05, 4.0403000000001354e-05, 3.9694999999999314e-05, 3.99859999999988e-05, 4.0111000000002395e-05, 3.9375000000001215e-05, 4.0277000000005225e-05, 3.9903000000000854e-05, 3.902800000000345e-05, 4.002800000000445e-05, 4.0305000000004365e-05, 3.965200000000113e-05, 3.994400000000009e-05, 3.9430999999999494e-05, 3.9846999999995636e-05, 4.051399999999844e-05]</msg>
<status status="PASS" starttime="20201029 12:48:14.901" endtime="20201029 12:48:14.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.890" endtime="20201029 12:48:14.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:14.916" endtime="20201029 12:48:14.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.912" endtime="20201029 12:48:14.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.909" endtime="20201029 12:48:14.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.429" endtime="20201029 12:48:14.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.428" endtime="20201029 12:48:14.941"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.964" endtime="20201029 12:48:14.981"></status>
</kw>
<msg timestamp="20201029 12:48:14.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.960" endtime="20201029 12:48:14.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.984" endtime="20201029 12:48:14.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.991" endtime="20201029 12:48:14.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.953" endtime="20201029 12:48:14.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.947" endtime="20201029 12:48:14.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.016" endtime="20201029 12:48:15.352"></status>
</kw>
<msg timestamp="20201029 12:48:15.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039328333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039368319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:15.012" endtime="20201029 12:48:15.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039328333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039368319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:15.361" endtime="20201029 12:48:15.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.380" endtime="20201029 12:48:15.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.005" endtime="20201029 12:48:15.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.000" endtime="20201029 12:48:15.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:15.397" level="INFO">${RESULT} = [{'diff': 3.99859999999988e-05}, {'diff': 4.008399999999579e-05}, {'diff': 3.9667000000000174e-05}, {'diff': 4.0333000000003505e-05}, {'diff': 3.9625000000001465e-05}, {'diff': 4.0319000000003935e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:15.388" endtime="20201029 12:48:15.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:15.407" level="INFO">${ACCURACY} = {'diff': [3.99859999999988e-05, 4.008399999999579e-05, 3.9667000000000174e-05, 4.0333000000003505e-05, 3.9625000000001465e-05, 4.0319000000003935e-05, 3.969399999999984e-05, 4.0417000000000924e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:48:15.399" endtime="20201029 12:48:15.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.417" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:48:15.415" endtime="20201029 12:48:15.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.423" level="INFO">VALUE: [3.99859999999988e-05, 4.008399999999579e-05, 3.9667000000000174e-05, 4.0333000000003505e-05, 3.9625000000001465e-05, 4.0319000000003935e-05, 3.969399999999984e-05, 4.0417000000000924e-05, 3.9583000000002755e-05, 4.002800000000445e-05, 4.0290999999997856e-05, 3.974999999999812e-05, 3.970799999999941e-05, 4.0417000000000924e-05, 4.0082999999996316e-05, 4.0389000000001785e-05, 4.0069000000003685e-05, 4.008400000000273e-05, 3.976399999999769e-05, 3.9917000000000424e-05, 3.976399999999769e-05, 4.024999999999862e-05, 4.006999999999622e-05, 3.977799999999726e-05, 4.002799999999751e-05, 4.0333000000003505e-05, 3.99859999999988e-05, 4.043000000000102e-05, 4.0181000000000244e-05, 3.9610999999994956e-05, 4.032000000000341e-05, 3.9568999999996246e-05, 3.977799999999726e-05, 4.026399999999819e-05, 3.9361000000001645e-05, 3.9680999999999744e-05, 3.872199999999798e-05, 4.016599999999426e-05, 4.052799999999801e-05, 3.9680999999999744e-05, 3.872200000000492e-05, 4.04859999999993e-05, 3.952799999999701e-05, 3.972199999999898e-05, 4.041599999999451e-05, 3.91660000000002e-05, 3.9680999999999744e-05, 3.905600000000259e-05, 3.9153000000000104e-05, 3.979199999999683e-05]</msg>
<status status="PASS" starttime="20201029 12:48:15.420" endtime="20201029 12:48:15.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.408" endtime="20201029 12:48:15.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:15.435" endtime="20201029 12:48:15.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.430" endtime="20201029 12:48:15.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.428" endtime="20201029 12:48:15.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.943" endtime="20201029 12:48:15.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.942" endtime="20201029 12:48:15.459"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.482" endtime="20201029 12:48:15.500"></status>
</kw>
<msg timestamp="20201029 12:48:15.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:15.479" endtime="20201029 12:48:15.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:15.503" endtime="20201029 12:48:15.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.510" endtime="20201029 12:48:15.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.472" endtime="20201029 12:48:15.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.466" endtime="20201029 12:48:15.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.534" endtime="20201029 12:48:15.867"></status>
</kw>
<msg timestamp="20201029 12:48:15.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040419819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040460042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:15.530" endtime="20201029 12:48:15.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040419819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040460042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:15.877" endtime="20201029 12:48:15.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.895" endtime="20201029 12:48:15.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.523" endtime="20201029 12:48:15.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.518" endtime="20201029 12:48:15.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:15.912" level="INFO">${RESULT} = [{'diff': 4.0222999999998954e-05}, {'diff': 4.0125000000001965e-05}, {'diff': 4.0110999999995456e-05}, {'diff': 4.015200000000163e-05}, {'diff': 3.9667000000000174e-05}, {'diff': 4.024999999999862e-05...</msg>
<status status="PASS" starttime="20201029 12:48:15.904" endtime="20201029 12:48:15.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:15.922" level="INFO">${ACCURACY} = {'diff': [4.0222999999998954e-05, 4.0125000000001965e-05, 4.0110999999995456e-05, 4.015200000000163e-05, 3.9667000000000174e-05, 4.024999999999862e-05, 4.04859999999993e-05, 4.0332999999996566e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:48:15.914" endtime="20201029 12:48:15.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.933" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:48:15.930" endtime="20201029 12:48:15.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.938" level="INFO">VALUE: [4.0222999999998954e-05, 4.0125000000001965e-05, 4.0110999999995456e-05, 4.015200000000163e-05, 3.9667000000000174e-05, 4.024999999999862e-05, 4.04859999999993e-05, 4.0332999999996566e-05, 4.0111000000002395e-05, 4.009799999999536e-05, 4.0138999999994596e-05, 3.9805000000003865e-05, 4.000000000000531e-05, 3.958400000000223e-05, 3.9653000000000604e-05, 4.004199999999708e-05, 3.9541000000004045e-05, 4.0611000000002895e-05, 4.0111000000002395e-05, 4.0347000000003075e-05, 4.0403000000001354e-05, 4.044400000000059e-05, 4.01660000000012e-05, 3.9653000000000604e-05, 4.0554999999997676e-05, 3.9541000000004045e-05, 3.9874999999994776e-05, 4.032000000000341e-05, 3.9861000000002145e-05, 3.9388999999993846e-05, 3.957000000000266e-05, 4.020799999999991e-05, 4.02780000000047e-05, 4.045800000000016e-05, 4.033400000000298e-05, 4.026399999999819e-05, 3.902800000000345e-05, 3.9625000000001465e-05, 4.033400000000298e-05, 3.975000000000506e-05, 3.997199999999923e-05, 3.8625000000000465e-05, 4.0208999999999384e-05, 4.044400000000059e-05, 3.9596999999995386e-05, 4.0097000000002825e-05, 3.9625000000001465e-05, 4.026399999999819e-05, 3.976399999999769e-05, 3.9208999999998384e-05]</msg>
<status status="PASS" starttime="20201029 12:48:15.935" endtime="20201029 12:48:15.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.924" endtime="20201029 12:48:15.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:15.951" endtime="20201029 12:48:15.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.945" endtime="20201029 12:48:15.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.943" endtime="20201029 12:48:15.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.461" endtime="20201029 12:48:15.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.460" endtime="20201029 12:48:15.976"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.999" endtime="20201029 12:48:16.018"></status>
</kw>
<msg timestamp="20201029 12:48:16.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:15.995" endtime="20201029 12:48:16.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.022" endtime="20201029 12:48:16.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.029" endtime="20201029 12:48:16.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.988" endtime="20201029 12:48:16.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.983" endtime="20201029 12:48:16.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.052" endtime="20201029 12:48:16.386"></status>
</kw>
<msg timestamp="20201029 12:48:16.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039776694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039817222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.049" endtime="20201029 12:48:16.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039776694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039817222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.396" endtime="20201029 12:48:16.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.414" endtime="20201029 12:48:16.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.042" endtime="20201029 12:48:16.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.037" endtime="20201029 12:48:16.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:16.432" level="INFO">${RESULT} = [{'diff': 4.052799999999801e-05}, {'diff': 3.991600000000095e-05}, {'diff': 3.973599999999855e-05}, {'diff': 4.011200000000187e-05}, {'diff': 3.9610999999994956e-05}, {'diff': 4.047199999999973e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:16.423" endtime="20201029 12:48:16.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:16.442" level="INFO">${ACCURACY} = {'diff': [4.052799999999801e-05, 3.991600000000095e-05, 3.973599999999855e-05, 4.011200000000187e-05, 3.9610999999994956e-05, 4.047199999999973e-05, 4.0403000000001354e-05, 4.041599999999451e-05, 3.93...</msg>
<status status="PASS" starttime="20201029 12:48:16.434" endtime="20201029 12:48:16.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.453" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:48:16.451" endtime="20201029 12:48:16.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.459" level="INFO">VALUE: [4.052799999999801e-05, 3.991600000000095e-05, 3.973599999999855e-05, 4.011200000000187e-05, 3.9610999999994956e-05, 4.047199999999973e-05, 4.0403000000001354e-05, 4.041599999999451e-05, 3.936200000000112e-05, 4.0375000000002215e-05, 3.999999999999837e-05, 4.0431000000000494e-05, 3.999999999999837e-05, 4.057000000000366e-05, 4.0181000000000244e-05, 4.027799999999776e-05, 3.947199999999873e-05, 3.9611000000001895e-05, 3.9986999999998274e-05, 3.904199999999608e-05, 4.0431000000000494e-05, 3.9917000000000424e-05, 4.0110999999995456e-05, 4.023599999999905e-05, 3.9790999999997356e-05, 3.9055000000003115e-05, 4.0375000000002215e-05, 4.033400000000298e-05, 3.954199999999658e-05, 4.0389000000001785e-05, 4.0110999999995456e-05, 3.9888999999994346e-05, 4.0124999999995026e-05, 3.9917000000000424e-05, 4.049999999999887e-05, 3.9917000000000424e-05, 4.0069000000003685e-05, 3.9526999999997536e-05, 4.0431000000000494e-05, 3.995799999999966e-05, 4.052799999999801e-05, 4.0305000000004365e-05, 3.9776999999997786e-05, 3.9889000000001285e-05, 3.934799999999461e-05, 3.981999999999597e-05, 4.029199999999733e-05, 3.9027000000003975e-05, 4.011200000000187e-05, 3.8680999999998744e-05]</msg>
<status status="PASS" starttime="20201029 12:48:16.456" endtime="20201029 12:48:16.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.444" endtime="20201029 12:48:16.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:16.471" endtime="20201029 12:48:16.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.466" endtime="20201029 12:48:16.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.464" endtime="20201029 12:48:16.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.978" endtime="20201029 12:48:16.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.977" endtime="20201029 12:48:16.496"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.519" endtime="20201029 12:48:16.537"></status>
</kw>
<msg timestamp="20201029 12:48:16.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.515" endtime="20201029 12:48:16.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.541" endtime="20201029 12:48:16.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.547" endtime="20201029 12:48:16.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.508" endtime="20201029 12:48:16.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.502" endtime="20201029 12:48:16.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.570" endtime="20201029 12:48:16.921"></status>
</kw>
<msg timestamp="20201029 12:48:16.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039946556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039986667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.567" endtime="20201029 12:48:16.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039946556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039986667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.930" endtime="20201029 12:48:16.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.949" endtime="20201029 12:48:16.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.560" endtime="20201029 12:48:16.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.555" endtime="20201029 12:48:16.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:16.966" level="INFO">${RESULT} = [{'diff': 4.0110999999995456e-05}, {'diff': 3.9653000000000604e-05}, {'diff': 3.970799999999941e-05}, {'diff': 3.873600000000449e-05}, {'diff': 3.9832999999996066e-05}, {'diff': 4.051399999999844e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:16.957" endtime="20201029 12:48:16.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:16.977" level="INFO">${ACCURACY} = {'diff': [4.0110999999995456e-05, 3.9653000000000604e-05, 3.970799999999941e-05, 3.873600000000449e-05, 3.9832999999996066e-05, 4.051399999999844e-05, 4.054200000000452e-05, 4.024999999999862e-05, 3.9...</msg>
<status status="PASS" starttime="20201029 12:48:16.968" endtime="20201029 12:48:16.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.988" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:48:16.986" endtime="20201029 12:48:16.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.993" level="INFO">VALUE: [4.0110999999995456e-05, 3.9653000000000604e-05, 3.970799999999941e-05, 3.873600000000449e-05, 3.9832999999996066e-05, 4.051399999999844e-05, 4.054200000000452e-05, 4.024999999999862e-05, 3.9597000000002325e-05, 4.0375000000002215e-05, 4.0346999999996136e-05, 4.0138999999994596e-05, 3.955600000000309e-05, 3.99859999999988e-05, 3.997200000000617e-05, 3.8708999999997884e-05, 3.993000000000052e-05, 4.049999999999887e-05, 3.979199999999683e-05, 3.965199999999419e-05, 3.9680999999999744e-05, 3.9944999999999564e-05, 4.045800000000016e-05, 4.051399999999844e-05, 4.0083000000003255e-05, 3.8694999999998314e-05, 3.972199999999898e-05, 4.0417000000000924e-05, 4.052800000000495e-05, 4.0346999999996136e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9597000000002325e-05, 4.0318999999996996e-05, 3.9889000000001285e-05, 4.0152999999994166e-05, 3.9903000000000854e-05, 4.044400000000059e-05, 3.8889000000000284e-05, 3.970799999999941e-05, 3.969399999999984e-05, 4.0361000000002645e-05, 4.04859999999993e-05, 4.0333000000003505e-05, 4.024999999999862e-05, 3.974999999999812e-05, 3.993000000000052e-05, 4.055599999999715e-05, 3.9958999999999134e-05, 3.994400000000009e-05]</msg>
<status status="PASS" starttime="20201029 12:48:16.990" endtime="20201029 12:48:16.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.979" endtime="20201029 12:48:16.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:17.005" endtime="20201029 12:48:17.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.001" endtime="20201029 12:48:17.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.998" endtime="20201029 12:48:17.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.498" endtime="20201029 12:48:17.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.496" endtime="20201029 12:48:17.031"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.055" endtime="20201029 12:48:17.074"></status>
</kw>
<msg timestamp="20201029 12:48:17.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.051" endtime="20201029 12:48:17.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.077" endtime="20201029 12:48:17.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.083" endtime="20201029 12:48:17.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.044" endtime="20201029 12:48:17.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.038" endtime="20201029 12:48:17.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.106" endtime="20201029 12:48:17.451"></status>
</kw>
<msg timestamp="20201029 12:48:17.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041295139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041334014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.103" endtime="20201029 12:48:17.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041295139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041334014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.460" endtime="20201029 12:48:17.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.479" endtime="20201029 12:48:17.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.096" endtime="20201029 12:48:17.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.091" endtime="20201029 12:48:17.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:17.496" level="INFO">${RESULT} = [{'diff': 3.8875000000000715e-05}, {'diff': 3.997199999999923e-05}, {'diff': 3.975000000000506e-05}, {'diff': 4.051399999999844e-05}, {'diff': 3.8902999999999854e-05}, {'diff': 4.0361000000002645e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:17.487" endtime="20201029 12:48:17.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:17.505" level="INFO">${ACCURACY} = {'diff': [3.8875000000000715e-05, 3.997199999999923e-05, 3.975000000000506e-05, 4.051399999999844e-05, 3.8902999999999854e-05, 4.0361000000002645e-05, 3.976400000000463e-05, 3.8847000000001575e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:48:17.498" endtime="20201029 12:48:17.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.516" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:48:17.514" endtime="20201029 12:48:17.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.521" level="INFO">VALUE: [3.8875000000000715e-05, 3.997199999999923e-05, 3.975000000000506e-05, 4.051399999999844e-05, 3.8902999999999854e-05, 4.0361000000002645e-05, 3.976400000000463e-05, 3.8847000000001575e-05, 3.997199999999923e-05, 3.9805000000003865e-05, 3.959799999999486e-05, 4.0346999999996136e-05, 4.0167000000000674e-05, 4.015200000000163e-05, 4.030600000000384e-05, 3.982000000000291e-05, 3.997200000000617e-05, 3.9624999999994526e-05, 4.0596999999996386e-05, 3.998600000000574e-05, 4.0138999999994596e-05, 3.9582999999995816e-05, 4.0512999999998967e-05, 3.902799999999651e-05, 3.9833000000003005e-05, 4.026399999999819e-05, 4.051399999999844e-05, 4.043000000000102e-05, 3.888800000000081e-05, 3.9639000000001035e-05, 4.0431000000000494e-05, 4.0096999999995886e-05, 4.054199999999758e-05, 4.0347000000003075e-05, 3.9568999999996246e-05, 3.980600000000334e-05, 4.0194999999999814e-05, 3.995799999999966e-05, 3.9860999999995206e-05, 3.886199999999368e-05, 4.034800000000255e-05, 3.997200000000617e-05, 4.0347000000003075e-05, 4.0153000000001104e-05, 3.980600000000334e-05, 4.0332999999996566e-05, 4.022199999999948e-05, 4.03059999999969e-05, 3.999999999999837e-05, 4.0445000000000064e-05]</msg>
<status status="PASS" starttime="20201029 12:48:17.518" endtime="20201029 12:48:17.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.507" endtime="20201029 12:48:17.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:17.534" endtime="20201029 12:48:17.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.530" endtime="20201029 12:48:17.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.527" endtime="20201029 12:48:17.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.033" endtime="20201029 12:48:17.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.032" endtime="20201029 12:48:17.559"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.581" endtime="20201029 12:48:17.602"></status>
</kw>
<msg timestamp="20201029 12:48:17.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.578" endtime="20201029 12:48:17.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.606" endtime="20201029 12:48:17.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.616" endtime="20201029 12:48:17.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.571" endtime="20201029 12:48:17.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.565" endtime="20201029 12:48:17.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.650" endtime="20201029 12:48:17.995"></status>
</kw>
<msg timestamp="20201029 12:48:18.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039294708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039334944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.646" endtime="20201029 12:48:18.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039294708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039334944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.005" endtime="20201029 12:48:18.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.024" endtime="20201029 12:48:18.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.635" endtime="20201029 12:48:18.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.630" endtime="20201029 12:48:18.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:18.041" level="INFO">${RESULT} = [{'diff': 4.023599999999905e-05}, {'diff': 4.007000000000316e-05}, {'diff': 4.043000000000102e-05}, {'diff': 3.99580000000066e-05}, {'diff': 4.0125000000001965e-05}, {'diff': 4.0054999999997176e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:18.032" endtime="20201029 12:48:18.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:18.050" level="INFO">${ACCURACY} = {'diff': [4.023599999999905e-05, 4.007000000000316e-05, 4.043000000000102e-05, 3.99580000000066e-05, 4.0125000000001965e-05, 4.0054999999997176e-05, 4.025000000000556e-05, 4.0417000000000924e-05, 4.00...</msg>
<status status="PASS" starttime="20201029 12:48:18.043" endtime="20201029 12:48:18.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.061" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:48:18.059" endtime="20201029 12:48:18.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.066" level="INFO">VALUE: [4.023599999999905e-05, 4.007000000000316e-05, 4.043000000000102e-05, 3.99580000000066e-05, 4.0125000000001965e-05, 4.0054999999997176e-05, 4.025000000000556e-05, 4.0417000000000924e-05, 4.005599999999665e-05, 3.99859999999988e-05, 4.044400000000059e-05, 3.9722999999998454e-05, 4.045800000000016e-05, 4.0096999999995886e-05, 4.026400000000513e-05, 3.9875000000001715e-05, 3.9653000000000604e-05, 4.044400000000059e-05, 3.9917000000000424e-05, 4.049999999999887e-05, 3.973599999999855e-05, 4.044400000000059e-05, 3.9180999999999244e-05, 3.9861000000002145e-05, 3.975000000000506e-05, 3.997199999999923e-05, 4.055599999999715e-05, 4.049999999999887e-05, 4.026399999999819e-05, 4.0208999999999384e-05, 4.0541000000005045e-05, 3.867999999999927e-05, 3.9776999999997786e-05, 4.051400000000538e-05, 3.9639000000001035e-05, 3.873600000000449e-05, 3.969399999999984e-05, 3.9722999999998454e-05, 4.0431000000000494e-05, 4.051399999999844e-05, 4.0139000000001535e-05, 3.869500000000525e-05, 3.8861000000001145e-05, 4.005599999999665e-05, 4.018000000000077e-05, 4.0318999999996996e-05, 3.9958999999999134e-05, 4.029199999999733e-05, 4.0153000000001104e-05, 4.0417000000000924e-05]</msg>
<status status="PASS" starttime="20201029 12:48:18.063" endtime="20201029 12:48:18.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.052" endtime="20201029 12:48:18.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:18.081" endtime="20201029 12:48:18.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.075" endtime="20201029 12:48:18.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.073" endtime="20201029 12:48:18.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.561" endtime="20201029 12:48:18.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.560" endtime="20201029 12:48:18.106"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.129" endtime="20201029 12:48:18.148"></status>
</kw>
<msg timestamp="20201029 12:48:18.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.126" endtime="20201029 12:48:18.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.151" endtime="20201029 12:48:18.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.157" endtime="20201029 12:48:18.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.119" endtime="20201029 12:48:18.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.113" endtime="20201029 12:48:18.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.180" endtime="20201029 12:48:18.523"></status>
</kw>
<msg timestamp="20201029 12:48:18.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039778722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039819222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.177" endtime="20201029 12:48:18.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039778722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039819222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.533" endtime="20201029 12:48:18.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.551" endtime="20201029 12:48:18.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.170" endtime="20201029 12:48:18.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.165" endtime="20201029 12:48:18.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:18.575" level="INFO">${RESULT} = [{'diff': 4.049999999999887e-05}, {'diff': 3.955600000000309e-05}, {'diff': 3.9903000000000854e-05}, {'diff': 3.9790999999997356e-05}, {'diff': 3.976399999999769e-05}, {'diff': 3.8875000000000715e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:18.564" endtime="20201029 12:48:18.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:18.588" level="INFO">${ACCURACY} = {'diff': [4.049999999999887e-05, 3.955600000000309e-05, 3.9903000000000854e-05, 3.9790999999997356e-05, 3.976399999999769e-05, 3.8875000000000715e-05, 3.973599999999855e-05, 3.9833000000003005e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:48:18.578" endtime="20201029 12:48:18.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.610" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:48:18.598" endtime="20201029 12:48:18.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.619" level="INFO">VALUE: [4.049999999999887e-05, 3.955600000000309e-05, 3.9903000000000854e-05, 3.9790999999997356e-05, 3.976399999999769e-05, 3.8875000000000715e-05, 3.973599999999855e-05, 3.9833000000003005e-05, 4.0417000000000924e-05, 3.9861000000002145e-05, 3.973700000000496e-05, 4.029199999999733e-05, 4.020799999999991e-05, 4.051400000000538e-05, 3.9667000000000174e-05, 3.9583000000002755e-05, 4.049999999999887e-05, 4.0555000000004615e-05, 4.0431000000000494e-05, 4.03059999999969e-05, 3.994400000000009e-05, 3.9611000000001895e-05, 3.9776999999997786e-05, 3.9667000000000174e-05, 4.0153000000001104e-05, 3.9944999999999564e-05, 3.9889000000001285e-05, 3.956999999999572e-05, 4.0167000000000674e-05, 3.993000000000052e-05, 4.049999999999887e-05, 4.0139000000001535e-05, 3.997199999999923e-05, 3.9111000000001395e-05, 4.0319000000003935e-05, 3.9722999999998454e-05, 3.9917000000000424e-05, 3.9639000000001035e-05, 3.9917000000000424e-05, 3.999999999999837e-05, 3.919399999999934e-05, 4.033399999999604e-05, 3.9818999999996496e-05, 4.0054999999997176e-05, 3.9762999999998216e-05, 4.043000000000102e-05, 3.954199999999658e-05, 4.026399999999819e-05, 4.0096999999995886e-05, 3.955600000000309e-05]</msg>
<status status="PASS" starttime="20201029 12:48:18.614" endtime="20201029 12:48:18.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.590" endtime="20201029 12:48:18.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:18.634" endtime="20201029 12:48:18.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.630" endtime="20201029 12:48:18.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.627" endtime="20201029 12:48:18.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.109" endtime="20201029 12:48:18.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.107" endtime="20201029 12:48:18.659"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.682" endtime="20201029 12:48:18.701"></status>
</kw>
<msg timestamp="20201029 12:48:18.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.679" endtime="20201029 12:48:18.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.705" endtime="20201029 12:48:18.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.711" endtime="20201029 12:48:18.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.672" endtime="20201029 12:48:18.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.666" endtime="20201029 12:48:18.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.734" endtime="20201029 12:48:19.135"></status>
</kw>
<msg timestamp="20201029 12:48:19.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039836597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039877139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.731" endtime="20201029 12:48:19.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039836597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039877139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:19.145" endtime="20201029 12:48:19.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.164" endtime="20201029 12:48:19.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.724" endtime="20201029 12:48:19.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.719" endtime="20201029 12:48:19.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:19.182" level="INFO">${RESULT} = [{'diff': 4.054199999999758e-05}, {'diff': 3.9597000000002325e-05}, {'diff': 3.983400000000248e-05}, {'diff': 4.0236999999998524e-05}, {'diff': 3.9569000000003185e-05}, {'diff': 3.976399999999769e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:19.173" endtime="20201029 12:48:19.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:19.193" level="INFO">${ACCURACY} = {'diff': [4.054199999999758e-05, 3.9597000000002325e-05, 3.983400000000248e-05, 4.0236999999998524e-05, 3.9569000000003185e-05, 3.976399999999769e-05, 3.997199999999923e-05, 3.957000000000266e-05, 3.9...</msg>
<status status="PASS" starttime="20201029 12:48:19.184" endtime="20201029 12:48:19.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.204" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:48:19.202" endtime="20201029 12:48:19.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.209" level="INFO">VALUE: [4.054199999999758e-05, 3.9597000000002325e-05, 3.983400000000248e-05, 4.0236999999998524e-05, 3.9569000000003185e-05, 3.976399999999769e-05, 3.997199999999923e-05, 3.957000000000266e-05, 3.900000000000431e-05, 3.9903000000000854e-05, 3.997300000000564e-05, 3.983400000000248e-05, 3.9777000000004725e-05, 3.981999999999597e-05, 4.0082999999996316e-05, 3.958400000000223e-05, 4.04859999999993e-05, 4.006999999999622e-05, 3.9903000000000854e-05, 4.023599999999905e-05, 3.9568999999996246e-05, 3.9639000000001035e-05, 4.0096999999995886e-05, 4.019400000000034e-05, 4.047199999999973e-05, 4.0319000000003935e-05, 3.9625000000001465e-05, 3.99859999999988e-05, 4.032000000000341e-05, 4.022199999999948e-05, 3.976400000000463e-05, 3.9332999999995566e-05, 3.975000000000506e-05, 3.9166999999999674e-05, 3.997199999999923e-05, 4.0458999999999634e-05, 3.96660000000007e-05, 4.026399999999819e-05, 3.954200000000352e-05, 3.920800000000585e-05, 4.008399999999579e-05, 4.0167000000000674e-05, 3.9639000000001035e-05, 4.049999999999887e-05, 4.0125000000001965e-05, 3.973599999999855e-05, 3.992999999999358e-05, 4.0374999999995276e-05, 3.9166999999999674e-05, 3.9889000000001285e-05]</msg>
<status status="PASS" starttime="20201029 12:48:19.206" endtime="20201029 12:48:19.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.195" endtime="20201029 12:48:19.217"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:19.226" endtime="20201029 12:48:19.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.222" endtime="20201029 12:48:19.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.219" endtime="20201029 12:48:19.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.662" endtime="20201029 12:48:19.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.660" endtime="20201029 12:48:19.252"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.275" endtime="20201029 12:48:19.294"></status>
</kw>
<msg timestamp="20201029 12:48:19.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.271" endtime="20201029 12:48:19.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.297" endtime="20201029 12:48:19.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.304" endtime="20201029 12:48:19.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.264" endtime="20201029 12:48:19.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.258" endtime="20201029 12:48:19.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.328" endtime="20201029 12:48:19.678"></status>
</kw>
<msg timestamp="20201029 12:48:19.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040043153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040084583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:19.324" endtime="20201029 12:48:19.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040043153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040084583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:19.687" endtime="20201029 12:48:19.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.717" endtime="20201029 12:48:19.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.317" endtime="20201029 12:48:19.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.312" endtime="20201029 12:48:19.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:19.739" level="INFO">${RESULT} = [{'diff': 4.143000000000202e-05}, {'diff': 4.0833000000004005e-05}, {'diff': 4.1361000000003645e-05}, {'diff': 4.124999999999962e-05}, {'diff': 4.1445000000001064e-05}, {'diff': 4.106999999999722e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:19.728" endtime="20201029 12:48:19.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:19.749" level="INFO">${ACCURACY} = {'diff': [4.143000000000202e-05, 4.0833000000004005e-05, 4.1361000000003645e-05, 4.124999999999962e-05, 4.1445000000001064e-05, 4.106999999999722e-05, 4.0374999999995276e-05, 4.0790999999998356e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:48:19.742" endtime="20201029 12:48:19.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.760" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:48:19.758" endtime="20201029 12:48:19.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.766" level="INFO">VALUE: [4.143000000000202e-05, 4.0833000000004005e-05, 4.1361000000003645e-05, 4.124999999999962e-05, 4.1445000000001064e-05, 4.106999999999722e-05, 4.0374999999995276e-05, 4.0790999999998356e-05, 4.0639000000002035e-05, 4.0708999999999884e-05, 4.1388999999995846e-05, 4.091600000000195e-05, 4.0610999999995956e-05, 4.142999999999508e-05, 4.127799999999876e-05, 4.0708999999999884e-05, 4.0568999999997246e-05, 4.066599999999476e-05, 4.122200000000048e-05, 4.1222999999999954e-05, 4.1304999999998426e-05, 4.0526999999998536e-05, 4.0375000000002215e-05, 4.144400000000159e-05, 4.14860000000003e-05, 4.107000000000416e-05, 4.083399999999654e-05, 4.0833000000004005e-05, 4.099999999999937e-05, 4.0846999999996636e-05, 4.1167000000001674e-05, 4.1054999999998176e-05, 4.1333000000004505e-05, 4.0346999999996136e-05, 4.144399999999465e-05, 4.104199999999808e-05, 4.055599999999715e-05, 4.1347000000004075e-05, 4.090199999999544e-05, 4.072199999999998e-05, 4.1555000000005615e-05, 4.1180999999994305e-05, 4.1360999999996706e-05, 4.1153000000002105e-05, 4.145800000000116e-05, 4.11939999999944e-05, 4.122200000000048e-05, 4.0639000000002035e-05, 4.1082999999997316e-05, 4.147200000000073e-05]</msg>
<status status="PASS" starttime="20201029 12:48:19.763" endtime="20201029 12:48:19.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.751" endtime="20201029 12:48:19.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:19.778" endtime="20201029 12:48:19.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.774" endtime="20201029 12:48:19.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.772" endtime="20201029 12:48:19.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.254" endtime="20201029 12:48:19.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.252" endtime="20201029 12:48:19.804"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.827" endtime="20201029 12:48:19.847"></status>
</kw>
<msg timestamp="20201029 12:48:19.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.823" endtime="20201029 12:48:19.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.850" endtime="20201029 12:48:19.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.857" endtime="20201029 12:48:19.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.816" endtime="20201029 12:48:19.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.810" endtime="20201029 12:48:19.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.880" endtime="20201029 12:48:20.228"></status>
</kw>
<msg timestamp="20201029 12:48:20.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041086667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041128403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:19.877" endtime="20201029 12:48:20.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041086667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041128403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.238" endtime="20201029 12:48:20.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.257" endtime="20201029 12:48:20.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.869" endtime="20201029 12:48:20.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.865" endtime="20201029 12:48:20.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:20.274" level="INFO">${RESULT} = [{'diff': 4.173600000000055e-05}, {'diff': 4.2097000000004825e-05}, {'diff': 4.2040999999999606e-05}, {'diff': 4.163800000000356e-05}, {'diff': 4.088800000000281e-05}, {'diff': 4.155599999999815e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:20.265" endtime="20201029 12:48:20.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:20.284" level="INFO">${ACCURACY} = {'diff': [4.173600000000055e-05, 4.2097000000004825e-05, 4.2040999999999606e-05, 4.163800000000356e-05, 4.088800000000281e-05, 4.155599999999815e-05, 4.1917000000002425e-05, 4.2444999999995126e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:48:20.276" endtime="20201029 12:48:20.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.296" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:48:20.294" endtime="20201029 12:48:20.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.301" level="INFO">VALUE: [4.173600000000055e-05, 4.2097000000004825e-05, 4.2040999999999606e-05, 4.163800000000356e-05, 4.088800000000281e-05, 4.155599999999815e-05, 4.1917000000002425e-05, 4.2444999999995126e-05, 4.1695000000001314e-05, 4.258400000000523e-05, 4.227799999999976e-05, 4.0874999999995776e-05, 4.180600000000534e-05, 4.120800000000091e-05, 4.250000000000087e-05, 4.2054999999999176e-05, 4.152799999999901e-05, 4.16660000000027e-05, 4.195800000000166e-05, 4.1818999999998496e-05, 4.0916999999994486e-05, 4.241600000000345e-05, 4.247200000000173e-05, 4.229199999999933e-05, 4.1597000000004325e-05, 4.1776999999999787e-05, 4.1667000000002175e-05, 4.122200000000048e-05, 4.2083000000005255e-05, 4.1540999999999106e-05, 4.244400000000259e-05, 4.207000000000516e-05, 4.070800000000041e-05, 4.175000000000012e-05, 4.1610999999996956e-05, 4.1917000000002425e-05, 4.2097000000004825e-05, 4.197199999999429e-05, 4.227699999999335e-05, 4.1610999999996956e-05, 4.244400000000259e-05, 4.2082999999998316e-05, 4.220800000000191e-05, 4.183399999999754e-05, 4.2068999999998746e-05, 4.220799999999497e-05, 4.1374999999996276e-05, 4.206999999999822e-05, 4.2430999999995556e-05, 4.1625000000003465e-05]</msg>
<status status="PASS" starttime="20201029 12:48:20.298" endtime="20201029 12:48:20.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.287" endtime="20201029 12:48:20.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:20.315" endtime="20201029 12:48:20.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.309" endtime="20201029 12:48:20.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.307" endtime="20201029 12:48:20.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.806" endtime="20201029 12:48:20.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.805" endtime="20201029 12:48:20.341"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.363" endtime="20201029 12:48:20.382"></status>
</kw>
<msg timestamp="20201029 12:48:20.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.360" endtime="20201029 12:48:20.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.386" endtime="20201029 12:48:20.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.392" endtime="20201029 12:48:20.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.353" endtime="20201029 12:48:20.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.347" endtime="20201029 12:48:20.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.415" endtime="20201029 12:48:20.761"></status>
</kw>
<msg timestamp="20201029 12:48:20.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039727056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039770236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.412" endtime="20201029 12:48:20.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039727056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039770236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.771" endtime="20201029 12:48:20.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.790" endtime="20201029 12:48:20.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.405" endtime="20201029 12:48:20.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.400" endtime="20201029 12:48:20.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:20.807" level="INFO">${RESULT} = [{'diff': 4.318000000000377e-05}, {'diff': 4.275000000000112e-05}, {'diff': 4.3097000000005825e-05}, {'diff': 4.2625000000004465e-05}, {'diff': 4.306999999999922e-05}, {'diff': 4.341599999999751e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:20.798" endtime="20201029 12:48:20.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:20.818" level="INFO">${ACCURACY} = {'diff': [4.318000000000377e-05, 4.275000000000112e-05, 4.3097000000005825e-05, 4.2625000000004465e-05, 4.306999999999922e-05, 4.341599999999751e-05, 4.3208999999995445e-05, 4.2903000000003855e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:48:20.809" endtime="20201029 12:48:20.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.829" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:48:20.827" endtime="20201029 12:48:20.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.835" level="INFO">VALUE: [4.318000000000377e-05, 4.275000000000112e-05, 4.3097000000005825e-05, 4.2625000000004465e-05, 4.306999999999922e-05, 4.341599999999751e-05, 4.3208999999995445e-05, 4.2903000000003855e-05, 4.2582999999998816e-05, 4.2931000000002995e-05, 4.279199999999983e-05, 4.300000000000137e-05, 4.295800000000266e-05, 4.293000000000352e-05, 4.3124999999998026e-05, 4.3473000000002204e-05, 4.3458999999995696e-05, 4.342999999999708e-05, 4.2902999999996916e-05, 4.2597000000005325e-05, 4.2582999999998816e-05, 4.324999999999468e-05, 4.2360999999997706e-05, 4.281999999999897e-05, 4.258399999999829e-05, 4.3346999999999136e-05, 4.277800000000026e-05, 4.350000000000187e-05, 4.3305000000000426e-05, 4.2624999999997526e-05, 4.3388999999997846e-05, 4.3388999999997846e-05, 4.2653000000003605e-05, 4.2889000000004285e-05, 4.341600000000445e-05, 4.338799999999837e-05, 4.34860000000023e-05, 4.2610999999997956e-05, 4.1860999999997206e-05, 4.2667000000003175e-05, 4.350000000000187e-05, 4.313800000000506e-05, 4.256999999999872e-05, 4.2624999999997526e-05, 4.2903000000003855e-05, 4.2360999999997706e-05, 4.2680999999995806e-05, 4.1874999999996776e-05, 4.2638999999997096e-05, 4.3013999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:48:20.831" endtime="20201029 12:48:20.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.820" endtime="20201029 12:48:20.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:20.847" endtime="20201029 12:48:20.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.843" endtime="20201029 12:48:20.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.840" endtime="20201029 12:48:20.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.343" endtime="20201029 12:48:20.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.342" endtime="20201029 12:48:20.872"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.896" endtime="20201029 12:48:20.915"></status>
</kw>
<msg timestamp="20201029 12:48:20.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.893" endtime="20201029 12:48:20.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.918" endtime="20201029 12:48:20.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.925" endtime="20201029 12:48:20.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.884" endtime="20201029 12:48:20.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.879" endtime="20201029 12:48:20.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.948" endtime="20201029 12:48:21.305"></status>
</kw>
<msg timestamp="20201029 12:48:21.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040724014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040768319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.945" endtime="20201029 12:48:21.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040724014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040768319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:21.315" endtime="20201029 12:48:21.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.334" endtime="20201029 12:48:21.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.937" endtime="20201029 12:48:21.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.933" endtime="20201029 12:48:21.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:21.354" level="INFO">${RESULT} = [{'diff': 4.430499999999449e-05}, {'diff': 4.4487000000002774e-05}, {'diff': 4.2846999999998636e-05}, {'diff': 4.3610999999998956e-05}, {'diff': 4.3860999999999206e-05}, {'diff': 4.4138999999998596e-0...</msg>
<status status="PASS" starttime="20201029 12:48:21.343" endtime="20201029 12:48:21.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:21.365" level="INFO">${ACCURACY} = {'diff': [4.430499999999449e-05, 4.4487000000002774e-05, 4.2846999999998636e-05, 4.3610999999998956e-05, 4.3860999999999206e-05, 4.4138999999998596e-05, 4.4124999999999026e-05, 4.3695000000003315e-05,...</msg>
<status status="PASS" starttime="20201029 12:48:21.356" endtime="20201029 12:48:21.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.376" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:48:21.374" endtime="20201029 12:48:21.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.382" level="INFO">VALUE: [4.430499999999449e-05, 4.4487000000002774e-05, 4.2846999999998636e-05, 4.3610999999998956e-05, 4.3860999999999206e-05, 4.4138999999998596e-05, 4.4124999999999026e-05, 4.3695000000003315e-05, 4.449999999999593e-05, 4.379200000000083e-05, 4.4416999999997986e-05, 4.379100000000136e-05, 4.434799999999961e-05, 4.4430999999997556e-05, 4.4083000000000316e-05, 4.39860000000028e-05, 4.394399999999715e-05, 4.395799999999672e-05, 4.454200000000158e-05, 4.4055000000001177e-05, 4.379100000000136e-05, 4.4166999999997736e-05, 4.447200000000373e-05, 4.2695000000002314e-05, 4.448599999999636e-05, 4.400000000000237e-05, 4.4444999999997126e-05, 4.4388999999998846e-05, 4.3652999999997666e-05, 4.413799999999912e-05, 4.352800000000101e-05, 4.4166999999997736e-05, 4.451400000000244e-05, 4.454200000000158e-05, 4.3680999999996806e-05, 4.41939999999974e-05, 4.3666999999997236e-05, 4.356999999999972e-05, 4.4333000000000566e-05, 4.3888999999998346e-05, 4.444400000000459e-05, 4.4124999999999026e-05, 4.4110999999999456e-05, 4.3958999999996196e-05, 4.408399999999979e-05, 4.4055000000001177e-05, 4.3195000000002814e-05, 4.381999999999997e-05, 4.443000000000502e-05, 4.3860999999999206e-05]</msg>
<status status="PASS" starttime="20201029 12:48:21.378" endtime="20201029 12:48:21.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.367" endtime="20201029 12:48:21.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:21.394" endtime="20201029 12:48:21.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.390" endtime="20201029 12:48:21.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.387" endtime="20201029 12:48:21.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.874" endtime="20201029 12:48:21.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.873" endtime="20201029 12:48:21.420"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.442" endtime="20201029 12:48:21.462"></status>
</kw>
<msg timestamp="20201029 12:48:21.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.439" endtime="20201029 12:48:21.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.465" endtime="20201029 12:48:21.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.471" endtime="20201029 12:48:21.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.432" endtime="20201029 12:48:21.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.426" endtime="20201029 12:48:21.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.496" endtime="20201029 12:48:21.846"></status>
</kw>
<msg timestamp="20201029 12:48:21.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039895222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039940625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:21.492" endtime="20201029 12:48:21.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039895222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039940625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:21.855" endtime="20201029 12:48:21.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.874" endtime="20201029 12:48:21.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.484" endtime="20201029 12:48:21.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.479" endtime="20201029 12:48:21.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:21.893" level="INFO">${RESULT} = [{'diff': 4.5402999999999416e-05}, {'diff': 4.475000000000312e-05}, {'diff': 4.5388999999999846e-05}, {'diff': 4.3860999999999206e-05}, {'diff': 4.4819000000001497e-05}, {'diff': 4.554200000000258e-05...</msg>
<status status="PASS" starttime="20201029 12:48:21.883" endtime="20201029 12:48:21.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:21.902" level="INFO">${ACCURACY} = {'diff': [4.5402999999999416e-05, 4.475000000000312e-05, 4.5388999999999846e-05, 4.3860999999999206e-05, 4.4819000000001497e-05, 4.554200000000258e-05, 4.527800000000276e-05, 4.502800000000251e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:48:21.895" endtime="20201029 12:48:21.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.913" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:48:21.911" endtime="20201029 12:48:21.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.918" level="INFO">VALUE: [4.5402999999999416e-05, 4.475000000000312e-05, 4.5388999999999846e-05, 4.3860999999999206e-05, 4.4819000000001497e-05, 4.554200000000258e-05, 4.527800000000276e-05, 4.502800000000251e-05, 4.502800000000251e-05, 4.529200000000233e-05, 4.4195000000003815e-05, 4.4610999999999956e-05, 4.4653000000005605e-05, 4.501400000000294e-05, 4.4597000000000386e-05, 4.372199999999604e-05, 4.5153000000006105e-05, 4.4833000000001066e-05, 4.394399999999715e-05, 4.4667000000005175e-05, 4.547199999999779e-05, 4.4888999999999346e-05, 4.492999999999858e-05, 4.498599999999686e-05, 4.4958999999997196e-05, 4.48060000000014e-05, 4.53469999999942e-05, 4.497199999999729e-05, 4.482000000000097e-05, 4.5152999999999166e-05, 4.4347000000000136e-05, 4.508400000000079e-05, 4.4680999999997806e-05, 4.530499999999549e-05, 4.473599999999661e-05, 4.5458999999997696e-05, 4.4347000000000136e-05, 4.541599999999951e-05, 4.5138999999999596e-05, 4.4833000000001066e-05, 4.530599999999496e-05, 4.452799999999507e-05, 4.531899999999506e-05, 4.499999999999643e-05, 4.5125000000000026e-05, 4.5569000000002247e-05, 4.5402999999999416e-05, 4.5347000000001136e-05, 4.529100000000286e-05, 4.555600000000215e-05]</msg>
<status status="PASS" starttime="20201029 12:48:21.915" endtime="20201029 12:48:21.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.904" endtime="20201029 12:48:21.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:21.931" endtime="20201029 12:48:21.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.927" endtime="20201029 12:48:21.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.924" endtime="20201029 12:48:21.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.422" endtime="20201029 12:48:21.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.421" endtime="20201029 12:48:21.956"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.981" endtime="20201029 12:48:22.001"></status>
</kw>
<msg timestamp="20201029 12:48:22.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.976" endtime="20201029 12:48:22.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:22.004" endtime="20201029 12:48:22.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.010" endtime="20201029 12:48:22.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.968" endtime="20201029 12:48:22.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.963" endtime="20201029 12:48:22.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.035" endtime="20201029 12:48:22.374"></status>
</kw>
<msg timestamp="20201029 12:48:22.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041996861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042042917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:22.032" endtime="20201029 12:48:22.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041996861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042042917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:22.383" endtime="20201029 12:48:22.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.402" endtime="20201029 12:48:22.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.025" endtime="20201029 12:48:22.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.020" endtime="20201029 12:48:22.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:22.420" level="INFO">${RESULT} = [{'diff': 4.605599999999571e-05}, {'diff': 4.6153000000000166e-05}, {'diff': 4.606900000000275e-05}, {'diff': 4.6125000000001026e-05}, {'diff': 4.640200000000094e-05}, {'diff': 4.5736999999997086e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:22.411" endtime="20201029 12:48:22.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:22.429" level="INFO">${ACCURACY} = {'diff': [4.605599999999571e-05, 4.6153000000000166e-05, 4.606900000000275e-05, 4.6125000000001026e-05, 4.640200000000094e-05, 4.5736999999997086e-05, 4.61939999999994e-05, 4.50269999999961e-05, 4.634...</msg>
<status status="PASS" starttime="20201029 12:48:22.422" endtime="20201029 12:48:22.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.440" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:48:22.438" endtime="20201029 12:48:22.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.445" level="INFO">VALUE: [4.605599999999571e-05, 4.6153000000000166e-05, 4.606900000000275e-05, 4.6125000000001026e-05, 4.640200000000094e-05, 4.5736999999997086e-05, 4.61939999999994e-05, 4.50269999999961e-05, 4.6347000000002136e-05, 4.623599999999811e-05, 4.5875000000000776e-05, 4.601400000000394e-05, 4.5639000000000096e-05, 4.5847000000001636e-05, 4.634800000000161e-05, 4.552800000000301e-05, 4.641600000000051e-05, 4.5902999999999916e-05, 4.649999999999793e-05, 4.622199999999854e-05, 4.605600000000265e-05, 4.558299999999488e-05, 4.575000000000412e-05, 4.608400000000179e-05, 4.556899999999531e-05, 4.5889000000000346e-05, 4.6597000000002387e-05, 4.631899999999606e-05, 4.6403000000000416e-05, 4.58190000000025e-05, 4.5583000000001817e-05, 4.5916999999999486e-05, 4.657000000000272e-05, 4.558400000000129e-05, 4.6389000000000846e-05, 4.5916999999999486e-05, 4.632000000000247e-05, 4.5861000000001206e-05, 4.58060000000024e-05, 4.599999999999743e-05, 4.6166999999999736e-05, 4.626400000000419e-05, 4.5736999999997086e-05, 4.63060000000029e-05, 4.5388999999999846e-05, 4.6139000000000596e-05, 4.577800000000326e-05, 4.581999999999503e-05, 4.536099999999377e-05, 4.600000000000437e-05]</msg>
<status status="PASS" starttime="20201029 12:48:22.442" endtime="20201029 12:48:22.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.431" endtime="20201029 12:48:22.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:22.459" endtime="20201029 12:48:22.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.454" endtime="20201029 12:48:22.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.451" endtime="20201029 12:48:22.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.958" endtime="20201029 12:48:22.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.957" endtime="20201029 12:48:22.484"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.508" endtime="20201029 12:48:22.526"></status>
</kw>
<msg timestamp="20201029 12:48:22.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:22.505" endtime="20201029 12:48:22.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:22.529" endtime="20201029 12:48:22.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.535" endtime="20201029 12:48:22.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.498" endtime="20201029 12:48:22.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.492" endtime="20201029 12:48:22.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.559" endtime="20201029 12:48:22.896"></status>
</kw>
<msg timestamp="20201029 12:48:22.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040555861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040602875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:22.555" endtime="20201029 12:48:22.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040555861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040602875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:22.906" endtime="20201029 12:48:22.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.924" endtime="20201029 12:48:22.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.548" endtime="20201029 12:48:22.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.543" endtime="20201029 12:48:22.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:22.942" level="INFO">${RESULT} = [{'diff': 4.7013999999998e-05}, {'diff': 4.665200000000119e-05}, {'diff': 4.6167000000006675e-05}, {'diff': 4.7319000000004e-05}, {'diff': 4.745800000000022e-05}, {'diff': 4.752700000000554e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:48:22.933" endtime="20201029 12:48:22.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:22.953" level="INFO">${ACCURACY} = {'diff': [4.7013999999998e-05, 4.665200000000119e-05, 4.6167000000006675e-05, 4.7319000000004e-05, 4.745800000000022e-05, 4.752700000000554e-05, 4.73060000000039e-05, 4.698599999999886e-05, 4.71800000...</msg>
<status status="PASS" starttime="20201029 12:48:22.944" endtime="20201029 12:48:22.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.964" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:48:22.961" endtime="20201029 12:48:22.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.969" level="INFO">VALUE: [4.7013999999998e-05, 4.665200000000119e-05, 4.6167000000006675e-05, 4.7319000000004e-05, 4.745800000000022e-05, 4.752700000000554e-05, 4.73060000000039e-05, 4.698599999999886e-05, 4.718000000000083e-05, 4.6944999999999626e-05, 4.6861000000002206e-05, 4.604100000000361e-05, 4.7403000000001416e-05, 4.674999999999818e-05, 4.708299999999638e-05, 4.594399999999915e-05, 4.75139999999985e-05, 4.663899999999416e-05, 4.620799999999897e-05, 4.691699999999355e-05, 4.715299999999423e-05, 4.68469999999957e-05, 4.654100000000411e-05, 4.627799999999682e-05, 4.6625000000001526e-05, 4.679199999999689e-05, 4.7361000000002706e-05, 4.727799999999782e-05, 4.727699999999835e-05, 4.732000000000347e-05, 4.752799999999807e-05, 4.747199999999979e-05, 4.679099999999742e-05, 4.659799999999492e-05, 4.617999999999983e-05, 4.7097000000002887e-05, 4.679099999999742e-05, 4.7181000000000306e-05, 4.684799999999517e-05, 4.694400000000015e-05, 4.7417000000000986e-05, 4.6209000000005385e-05, 4.744400000000065e-05, 4.5709000000004885e-05, 4.6847000000002637e-05, 4.731899999999706e-05, 4.654200000000358e-05, 4.730599999999696e-05, 4.588899999999341e-05, 4.749999999999893e-05]</msg>
<status status="PASS" starttime="20201029 12:48:22.966" endtime="20201029 12:48:22.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.955" endtime="20201029 12:48:22.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:22.982" endtime="20201029 12:48:23.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.977" endtime="20201029 12:48:23.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.975" endtime="20201029 12:48:23.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.487" endtime="20201029 12:48:23.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.485" endtime="20201029 12:48:23.007"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.030" endtime="20201029 12:48:23.047"></status>
</kw>
<msg timestamp="20201029 12:48:23.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.026" endtime="20201029 12:48:23.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.051" endtime="20201029 12:48:23.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.057" endtime="20201029 12:48:23.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.019" endtime="20201029 12:48:23.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.013" endtime="20201029 12:48:23.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.080" endtime="20201029 12:48:23.422"></status>
</kw>
<msg timestamp="20201029 12:48:23.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039637736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039685389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.077" endtime="20201029 12:48:23.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039637736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039685389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.432" endtime="20201029 12:48:23.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.450" endtime="20201029 12:48:23.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.070" endtime="20201029 12:48:23.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.065" endtime="20201029 12:48:23.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:23.467" level="INFO">${RESULT} = [{'diff': 4.7653000000001666e-05}, {'diff': 4.815200000000269e-05}, {'diff': 4.805499999999824e-05}, {'diff': 4.795799999999378e-05}, {'diff': 4.763899999999516e-05}, {'diff': 4.849999999999993e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:23.459" endtime="20201029 12:48:23.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:23.479" level="INFO">${ACCURACY} = {'diff': [4.7653000000001666e-05, 4.815200000000269e-05, 4.805499999999824e-05, 4.795799999999378e-05, 4.763899999999516e-05, 4.849999999999993e-05, 4.831999999999753e-05, 4.81940000000014e-05, 4.7374...</msg>
<status status="PASS" starttime="20201029 12:48:23.470" endtime="20201029 12:48:23.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.491" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:48:23.488" endtime="20201029 12:48:23.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.496" level="INFO">VALUE: [4.7653000000001666e-05, 4.815200000000269e-05, 4.805499999999824e-05, 4.795799999999378e-05, 4.763899999999516e-05, 4.849999999999993e-05, 4.831999999999753e-05, 4.81940000000014e-05, 4.737499999999534e-05, 4.763899999999516e-05, 4.844499999999419e-05, 4.8125000000003026e-05, 4.8319000000005e-05, 4.812499999999609e-05, 4.795800000000072e-05, 4.855599999999821e-05, 4.8139000000002596e-05, 4.845800000000122e-05, 4.804199999999814e-05, 4.845800000000122e-05, 4.791600000000201e-05, 4.823600000000011e-05, 4.7917000000001486e-05, 4.83469999999972e-05, 4.781899999999756e-05, 4.820800000000097e-05, 4.809700000000389e-05, 4.770800000000047e-05, 4.7959000000000196e-05, 4.7361000000002706e-05, 4.847200000000079e-05, 4.7708999999999946e-05, 4.824999999999968e-05, 4.8137999999996184e-05, 4.776399999999875e-05, 4.823600000000011e-05, 4.829200000000533e-05, 4.784700000000364e-05, 4.7917000000001486e-05, 4.78339999999966e-05, 4.720799999999997e-05, 4.754199999999764e-05, 4.787499999999584e-05, 4.779200000000483e-05, 4.7903000000001916e-05, 4.8431000000001556e-05, 4.71940000000004e-05, 4.8111000000003457e-05, 4.755499999999774e-05, 4.8389000000002846e-05]</msg>
<status status="PASS" starttime="20201029 12:48:23.493" endtime="20201029 12:48:23.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.480" endtime="20201029 12:48:23.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:23.509" endtime="20201029 12:48:23.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.504" endtime="20201029 12:48:23.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.502" endtime="20201029 12:48:23.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.009" endtime="20201029 12:48:23.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.008" endtime="20201029 12:48:23.534"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.557" endtime="20201029 12:48:23.576"></status>
</kw>
<msg timestamp="20201029 12:48:23.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.553" endtime="20201029 12:48:23.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.579" endtime="20201029 12:48:23.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.586" endtime="20201029 12:48:23.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.546" endtime="20201029 12:48:23.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.540" endtime="20201029 12:48:23.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.609" endtime="20201029 12:48:23.957"></status>
</kw>
<msg timestamp="20201029 12:48:23.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039786208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039835569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.606" endtime="20201029 12:48:23.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039786208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039835569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.967" endtime="20201029 12:48:23.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.987" endtime="20201029 12:48:23.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.599" endtime="20201029 12:48:23.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.594" endtime="20201029 12:48:23.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:24.005" level="INFO">${RESULT} = [{'diff': 4.936099999999777e-05}, {'diff': 4.8209000000000446e-05}, {'diff': 4.8875000000003777e-05}, {'diff': 4.8957999999994783e-05}, {'diff': 4.9014e-05}, {'diff': 4.944400000000265e-05}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 12:48:23.996" endtime="20201029 12:48:24.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:24.014" level="INFO">${ACCURACY} = {'diff': [4.936099999999777e-05, 4.8209000000000446e-05, 4.8875000000003777e-05, 4.8957999999994783e-05, 4.9014e-05, 4.944400000000265e-05, 4.906999999999828e-05, 4.8903000000002916e-05, 4.89310000000...</msg>
<status status="PASS" starttime="20201029 12:48:24.007" endtime="20201029 12:48:24.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.025" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:48:24.023" endtime="20201029 12:48:24.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.031" level="INFO">VALUE: [4.936099999999777e-05, 4.8209000000000446e-05, 4.8875000000003777e-05, 4.8957999999994783e-05, 4.9014e-05, 4.944400000000265e-05, 4.906999999999828e-05, 4.8903000000002916e-05, 4.8931000000002056e-05, 4.929199999999939e-05, 4.931899999999906e-05, 4.923600000000111e-05, 4.8361000000003707e-05, 4.81940000000014e-05, 4.905599999999871e-05, 4.890299999999598e-05, 4.926400000000025e-05, 4.8917000000002486e-05, 4.87219999999941e-05, 4.905599999999871e-05, 4.897200000000129e-05, 4.906900000000575e-05, 4.9165999999996324e-05, 4.954199999999964e-05, 4.859699999999745e-05, 4.8929999999995644e-05, 4.9445000000002126e-05, 4.8943999999995214e-05, 4.881999999999803e-05, 4.908300000000532e-05, 4.925000000000068e-05, 4.85139999999995e-05, 4.908299999999838e-05, 4.933299999999863e-05, 4.908399999999785e-05, 4.856899999999831e-05, 4.93339999999981e-05, 4.912499999999709e-05, 4.932000000000547e-05, 4.948600000000136e-05, 4.916600000000326e-05, 4.95140000000005e-05, 4.8929999999995644e-05, 4.879199999999889e-05, 4.8403000000002416e-05, 4.950000000000093e-05, 4.858399999999735e-05, 4.802799999999857e-05, 4.927799999999982e-05, 4.906900000000575e-05]</msg>
<status status="PASS" starttime="20201029 12:48:24.027" endtime="20201029 12:48:24.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.016" endtime="20201029 12:48:24.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:24.043" endtime="20201029 12:48:24.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.039" endtime="20201029 12:48:24.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.036" endtime="20201029 12:48:24.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.536" endtime="20201029 12:48:24.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.535" endtime="20201029 12:48:24.068"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.092" endtime="20201029 12:48:24.110"></status>
</kw>
<msg timestamp="20201029 12:48:24.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:24.089" endtime="20201029 12:48:24.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:24.113" endtime="20201029 12:48:24.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.119" endtime="20201029 12:48:24.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.081" endtime="20201029 12:48:24.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.075" endtime="20201029 12:48:24.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.143" endtime="20201029 12:48:24.478"></status>
</kw>
<msg timestamp="20201029 12:48:24.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040832264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040882431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:24.139" endtime="20201029 12:48:24.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040832264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040882431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:24.488" endtime="20201029 12:48:24.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.507" endtime="20201029 12:48:24.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.132" endtime="20201029 12:48:24.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.127" endtime="20201029 12:48:24.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:24.524" level="INFO">${RESULT} = [{'diff': 5.01669999999968e-05}, {'diff': 5.040299999999748e-05}, {'diff': 4.973600000000161e-05}, {'diff': 4.9973000000001766e-05}, {'diff': 5.03469999999992e-05}, {'diff': 4.9901999999997504e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:24.515" endtime="20201029 12:48:24.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:24.534" level="INFO">${ACCURACY} = {'diff': [5.01669999999968e-05, 5.040299999999748e-05, 4.973600000000161e-05, 4.9973000000001766e-05, 5.03469999999992e-05, 4.9901999999997504e-05, 5.051399999999456e-05, 4.920800000000197e-05, 4.9208...</msg>
<status status="PASS" starttime="20201029 12:48:24.526" endtime="20201029 12:48:24.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.548" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:48:24.546" endtime="20201029 12:48:24.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.556" level="INFO">VALUE: [5.01669999999968e-05, 5.040299999999748e-05, 4.973600000000161e-05, 4.9973000000001766e-05, 5.03469999999992e-05, 4.9901999999997504e-05, 5.051399999999456e-05, 4.920800000000197e-05, 4.920800000000197e-05, 5.036099999999877e-05, 5.041699999999705e-05, 5.0415999999997574e-05, 4.963899999999716e-05, 5.024999999999474e-05, 4.9665999999996824e-05, 4.998600000000186e-05, 5.0415999999997574e-05, 4.934799999999767e-05, 4.993000000000358e-05, 5.045800000000322e-05, 5.044499999999619e-05, 5.005500000000024e-05, 4.958399999999835e-05, 5.031999999999953e-05, 5.0485999999995423e-05, 4.970800000000247e-05, 4.897200000000129e-05, 4.977800000000032e-05, 5.008299999999938e-05, 5.026300000000178e-05, 5.0403000000004416e-05, 5.0014000000001e-05, 5.0403000000004416e-05, 5.027800000000082e-05, 4.9943999999996214e-05, 4.904099999999967e-05, 5.011099999999852e-05, 5.011099999999852e-05, 4.959699999999845e-05, 4.956999999999878e-05, 4.870800000000147e-05, 5.005500000000024e-05, 4.952800000000007e-05, 4.933299999999863e-05, 5.026400000000125e-05, 5.050000000000193e-05, 5.005599999999971e-05, 5.044400000000365e-05, 5.006999999999928e-05, 4.981999999999903e-05]</msg>
<status status="PASS" starttime="20201029 12:48:24.552" endtime="20201029 12:48:24.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.537" endtime="20201029 12:48:24.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:24.577" endtime="20201029 12:48:24.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.565" endtime="20201029 12:48:24.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.561" endtime="20201029 12:48:24.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.071" endtime="20201029 12:48:24.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.069" endtime="20201029 12:48:24.603"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.625" endtime="20201029 12:48:24.643"></status>
</kw>
<msg timestamp="20201029 12:48:24.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:24.622" endtime="20201029 12:48:24.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:24.646" endtime="20201029 12:48:24.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.653" endtime="20201029 12:48:24.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.615" endtime="20201029 12:48:24.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.609" endtime="20201029 12:48:24.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.676" endtime="20201029 12:48:25.004"></status>
</kw>
<msg timestamp="20201029 12:48:25.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039853111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039904389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:24.672" endtime="20201029 12:48:25.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039853111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039904389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.013" endtime="20201029 12:48:25.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.031" endtime="20201029 12:48:25.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.665" endtime="20201029 12:48:25.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.661" endtime="20201029 12:48:25.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:25.049" level="INFO">${RESULT} = [{'diff': 5.127800000000182e-05}, {'diff': 5.106900000000081e-05}, {'diff': 5.06669999999973e-05}, {'diff': 4.9887999999997934e-05}, {'diff': 5.0707999999996534e-05}, {'diff': 5.0945000000003626e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:25.040" endtime="20201029 12:48:25.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:25.059" level="INFO">${ACCURACY} = {'diff': [5.127800000000182e-05, 5.106900000000081e-05, 5.06669999999973e-05, 4.9887999999997934e-05, 5.0707999999996534e-05, 5.0945000000003626e-05, 5.1167000000004736e-05, 5.058299999999988e-05, 5.0...</msg>
<status status="PASS" starttime="20201029 12:48:25.051" endtime="20201029 12:48:25.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.070" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:48:25.068" endtime="20201029 12:48:25.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.075" level="INFO">VALUE: [5.127800000000182e-05, 5.106900000000081e-05, 5.06669999999973e-05, 4.9887999999997934e-05, 5.0707999999996534e-05, 5.0945000000003626e-05, 5.1167000000004736e-05, 5.058299999999988e-05, 5.094499999999669e-05, 5.115299999999823e-05, 5.059699999999945e-05, 5.11940000000044e-05, 5.115299999999823e-05, 5.0639000000005097e-05, 5.063899999999816e-05, 5.1429999999998144e-05, 4.9695000000002376e-05, 4.987500000000478e-05, 5.118000000000483e-05, 4.987499999999784e-05, 5.090299999999798e-05, 5.0929999999997644e-05, 5.132000000000053e-05, 5.112500000000603e-05, 5.036099999999877e-05, 5.0209000000002446e-05, 5.036099999999877e-05, 5.137499999999934e-05, 5.15140000000025e-05, 5.140299999999848e-05, 5.076400000000175e-05, 5.037499999999834e-05, 5.113899999999866e-05, 5.095899999999626e-05, 5.130600000000096e-05, 5.154200000000164e-05, 5.0681000000003806e-05, 4.986100000000521e-05, 5.113899999999866e-05, 5.109799999999942e-05, 5.074999999999524e-05, 5.100000000000243e-05, 5.126400000000225e-05, 5.074999999999524e-05, 5.137499999999934e-05, 5.133299999999369e-05, 5.129200000000139e-05, 5.1457999999997284e-05, 5.123600000000311e-05, 4.986100000000521e-05]</msg>
<status status="PASS" starttime="20201029 12:48:25.072" endtime="20201029 12:48:25.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.061" endtime="20201029 12:48:25.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:25.088" endtime="20201029 12:48:25.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.083" endtime="20201029 12:48:25.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.081" endtime="20201029 12:48:25.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.605" endtime="20201029 12:48:25.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.604" endtime="20201029 12:48:25.113"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.135" endtime="20201029 12:48:25.152"></status>
</kw>
<msg timestamp="20201029 12:48:25.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.132" endtime="20201029 12:48:25.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.156" endtime="20201029 12:48:25.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.162" endtime="20201029 12:48:25.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.125" endtime="20201029 12:48:25.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.119" endtime="20201029 12:48:25.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.185" endtime="20201029 12:48:25.514"></status>
</kw>
<msg timestamp="20201029 12:48:25.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038911153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038963153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.182" endtime="20201029 12:48:25.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038911153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038963153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.523" endtime="20201029 12:48:25.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.542" endtime="20201029 12:48:25.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.175" endtime="20201029 12:48:25.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.170" endtime="20201029 12:48:25.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:25.559" level="INFO">${RESULT} = [{'diff': 5.200000000000343e-05}, {'diff': 5.252799999999613e-05}, {'diff': 5.186100000000027e-05}, {'diff': 5.247200000000479e-05}, {'diff': 5.16669999999983e-05}, {'diff': 5.201399999999606e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:25.550" endtime="20201029 12:48:25.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:25.570" level="INFO">${ACCURACY} = {'diff': [5.200000000000343e-05, 5.252799999999613e-05, 5.186100000000027e-05, 5.247200000000479e-05, 5.16669999999983e-05, 5.201399999999606e-05, 5.247200000000479e-05, 5.177800000000232e-05, 5.23750...</msg>
<status status="PASS" starttime="20201029 12:48:25.561" endtime="20201029 12:48:25.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.581" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:48:25.578" endtime="20201029 12:48:25.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.586" level="INFO">VALUE: [5.200000000000343e-05, 5.252799999999613e-05, 5.186100000000027e-05, 5.247200000000479e-05, 5.16669999999983e-05, 5.201399999999606e-05, 5.247200000000479e-05, 5.177800000000232e-05, 5.237500000000034e-05, 5.244400000000565e-05, 5.211100000000052e-05, 5.1651999999999254e-05, 5.250000000000393e-05, 5.243099999999862e-05, 5.225000000000368e-05, 5.186100000000027e-05, 5.243099999999862e-05, 5.222200000000454e-05, 5.2165999999999324e-05, 5.179199999999495e-05, 5.188899999999941e-05, 5.088899999999841e-05, 5.175000000000318e-05, 5.238899999999991e-05, 5.154100000000217e-05, 5.1693999999997964e-05, 5.236099999999383e-05, 5.197299999999683e-05, 5.155600000000121e-05, 5.236099999999383e-05, 5.163899999999916e-05, 5.23470000000012e-05, 5.2443999999998714e-05, 5.200000000000343e-05, 5.2221999999997604e-05, 5.1693999999997964e-05, 5.2207999999998034e-05, 5.208399999999391e-05, 5.170899999999701e-05, 5.165299999999873e-05, 5.137499999999934e-05, 5.209800000000042e-05, 5.181900000000156e-05, 5.1943999999998214e-05, 5.1665999999998824e-05, 5.245899999999776e-05, 5.2471999999997854e-05, 5.2207999999998034e-05, 5.1943999999998214e-05, 5.180500000000199e-05]</msg>
<status status="PASS" starttime="20201029 12:48:25.583" endtime="20201029 12:48:25.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.572" endtime="20201029 12:48:25.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:25.599" endtime="20201029 12:48:25.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.594" endtime="20201029 12:48:25.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.592" endtime="20201029 12:48:25.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.115" endtime="20201029 12:48:25.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.114" endtime="20201029 12:48:25.623"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.646" endtime="20201029 12:48:25.663"></status>
</kw>
<msg timestamp="20201029 12:48:25.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.643" endtime="20201029 12:48:25.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.667" endtime="20201029 12:48:25.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.673" endtime="20201029 12:48:25.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.635" endtime="20201029 12:48:25.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.630" endtime="20201029 12:48:25.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.696" endtime="20201029 12:48:26.026"></status>
</kw>
<msg timestamp="20201029 12:48:26.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038885486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038938125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.693" endtime="20201029 12:48:26.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038885486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038938125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.035" endtime="20201029 12:48:26.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.054" endtime="20201029 12:48:26.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.685" endtime="20201029 12:48:26.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.681" endtime="20201029 12:48:26.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:26.071" level="INFO">${RESULT} = [{'diff': 5.263900000000016e-05}, {'diff': 5.309700000000195e-05}, {'diff': 5.3277999999996883e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.205599999999477e-05}, {'diff': 5.35140000000045e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:26.062" endtime="20201029 12:48:26.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:26.080" level="INFO">${ACCURACY} = {'diff': [5.263900000000016e-05, 5.309700000000195e-05, 5.3277999999996883e-05, 5.26669999999993e-05, 5.205599999999477e-05, 5.35140000000045e-05, 5.2721999999998104e-05, 5.28340000000016e-05, 5.27779...</msg>
<status status="PASS" starttime="20201029 12:48:26.073" endtime="20201029 12:48:26.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.091" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:48:26.088" endtime="20201029 12:48:26.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.096" level="INFO">VALUE: [5.263900000000016e-05, 5.309700000000195e-05, 5.3277999999996883e-05, 5.26669999999993e-05, 5.205599999999477e-05, 5.35140000000045e-05, 5.2721999999998104e-05, 5.28340000000016e-05, 5.277799999999638e-05, 5.31669999999998e-05, 5.311099999999458e-05, 5.236100000000077e-05, 5.3277999999996883e-05, 5.220800000000497e-05, 5.344499999999919e-05, 5.257000000000178e-05, 5.322200000000554e-05, 5.3513999999997564e-05, 5.343099999999962e-05, 5.35419999999967e-05, 5.256899999999537e-05, 5.3499999999997994e-05, 5.280599999999552e-05, 5.3263999999997313e-05, 5.2249999999996743e-05, 5.33340000000021e-05, 5.327800000000382e-05, 5.323600000000511e-05, 5.31669999999998e-05, 5.208300000000138e-05, 5.358300000000288e-05, 5.3430000000000144e-05, 5.2957999999998784e-05, 5.2665999999999824e-05, 5.3014000000004e-05, 5.295899999999826e-05, 5.348600000000536e-05, 5.2471999999997854e-05, 5.3513999999997564e-05, 5.238899999999991e-05, 5.30549999999963e-05, 5.283300000000213e-05, 5.3221999999998604e-05, 5.336100000000177e-05, 5.338900000000091e-05, 5.312500000000109e-05, 5.2693999999998964e-05, 5.3431000000006557e-05, 5.262500000000059e-05, 5.315300000000023e-05]</msg>
<status status="PASS" starttime="20201029 12:48:26.093" endtime="20201029 12:48:26.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.082" endtime="20201029 12:48:26.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:26.109" endtime="20201029 12:48:26.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.104" endtime="20201029 12:48:26.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.102" endtime="20201029 12:48:26.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.625" endtime="20201029 12:48:26.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.624" endtime="20201029 12:48:26.134"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.156" endtime="20201029 12:48:26.175"></status>
</kw>
<msg timestamp="20201029 12:48:26.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.153" endtime="20201029 12:48:26.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.179" endtime="20201029 12:48:26.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.185" endtime="20201029 12:48:26.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.146" endtime="20201029 12:48:26.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.140" endtime="20201029 12:48:26.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.208" endtime="20201029 12:48:26.538"></status>
</kw>
<msg timestamp="20201029 12:48:26.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040679986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040732944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.205" endtime="20201029 12:48:26.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040679986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040732944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.548" endtime="20201029 12:48:26.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.566" endtime="20201029 12:48:26.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.198" endtime="20201029 12:48:26.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.193" endtime="20201029 12:48:26.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:26.584" level="INFO">${RESULT} = [{'diff': 5.2957999999998784e-05}, {'diff': 5.338899999999397e-05}, {'diff': 5.337500000000134e-05}, {'diff': 5.31669999999998e-05}, {'diff': 5.455599999999727e-05}, {'diff': 5.409699999999601e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:26.575" endtime="20201029 12:48:26.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:26.593" level="INFO">${ACCURACY} = {'diff': [5.2957999999998784e-05, 5.338899999999397e-05, 5.337500000000134e-05, 5.31669999999998e-05, 5.455599999999727e-05, 5.409699999999601e-05, 5.358300000000288e-05, 5.3971999999999354e-05, 5.445...</msg>
<status status="PASS" starttime="20201029 12:48:26.586" endtime="20201029 12:48:26.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.604" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:48:26.602" endtime="20201029 12:48:26.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.609" level="INFO">VALUE: [5.2957999999998784e-05, 5.338899999999397e-05, 5.337500000000134e-05, 5.31669999999998e-05, 5.455599999999727e-05, 5.409699999999601e-05, 5.358300000000288e-05, 5.3971999999999354e-05, 5.4458000000000284e-05, 5.41670000000008e-05, 5.4458000000000284e-05, 5.4277999999997883e-05, 5.440300000000148e-05, 5.3901999999994565e-05, 5.427699999999841e-05, 5.4471999999999854e-05, 5.386100000000227e-05, 5.379199999999695e-05, 5.456900000000431e-05, 5.3944000000000214e-05, 5.4471999999999854e-05, 5.4430000000001144e-05, 5.4235999999999174e-05, 5.443100000000062e-05, 5.447299999999933e-05, 5.38619999999948e-05, 5.4513999999998564e-05, 5.287500000000084e-05, 5.4541999999997703e-05, 5.362500000000159e-05, 5.356899999999637e-05, 5.451299999999909e-05, 5.386100000000227e-05, 5.3763999999997814e-05, 5.3777999999997383e-05, 5.4013999999998064e-05, 5.412500000000209e-05, 5.305600000000271e-05, 5.2707999999998534e-05, 5.387500000000184e-05, 5.362500000000159e-05, 5.433299999999669e-05, 5.372299999999858e-05, 5.4471999999999854e-05, 5.35419999999967e-05, 5.338899999999397e-05, 5.4444000000000714e-05, 5.431899999999712e-05, 5.356900000000331e-05, 5.377800000000432e-05]</msg>
<status status="PASS" starttime="20201029 12:48:26.606" endtime="20201029 12:48:26.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.595" endtime="20201029 12:48:26.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:26.623" endtime="20201029 12:48:26.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.617" endtime="20201029 12:48:26.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.615" endtime="20201029 12:48:26.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.136" endtime="20201029 12:48:26.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.135" endtime="20201029 12:48:26.648"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.671" endtime="20201029 12:48:26.688"></status>
</kw>
<msg timestamp="20201029 12:48:26.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.667" endtime="20201029 12:48:26.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.692" endtime="20201029 12:48:26.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.698" endtime="20201029 12:48:26.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.660" endtime="20201029 12:48:26.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.655" endtime="20201029 12:48:26.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.721" endtime="20201029 12:48:27.080"></status>
</kw>
<msg timestamp="20201029 12:48:27.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039002375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039057833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.718" endtime="20201029 12:48:27.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039002375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039057833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.090" endtime="20201029 12:48:27.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.109" endtime="20201029 12:48:27.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.711" endtime="20201029 12:48:27.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.706" endtime="20201029 12:48:27.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:27.127" level="INFO">${RESULT} = [{'diff': 5.5458000000001284e-05}, {'diff': 5.527699999999941e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.5527999999999134e-05}, {'diff': 5.513899999999572e-05}, {'diff': 5.436100000000277e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:27.118" endtime="20201029 12:48:27.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:27.137" level="INFO">${ACCURACY} = {'diff': [5.5458000000001284e-05, 5.527699999999941e-05, 5.5263999999999314e-05, 5.5527999999999134e-05, 5.513899999999572e-05, 5.436100000000277e-05, 5.43749999999954e-05, 5.5486000000000424e-05, 5.4...</msg>
<status status="PASS" starttime="20201029 12:48:27.129" endtime="20201029 12:48:27.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.148" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:48:27.146" endtime="20201029 12:48:27.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.154" level="INFO">VALUE: [5.5458000000001284e-05, 5.527699999999941e-05, 5.5263999999999314e-05, 5.5527999999999134e-05, 5.513899999999572e-05, 5.436100000000277e-05, 5.43749999999954e-05, 5.5486000000000424e-05, 5.406900000000381e-05, 5.408300000000338e-05, 5.5193999999994525e-05, 5.5013999999999064e-05, 5.518100000000137e-05, 5.456999999999684e-05, 5.4221999999999604e-05, 5.5013999999999064e-05, 5.4972000000000354e-05, 5.502800000000557e-05, 5.46670000000013e-05, 5.536099999999683e-05, 5.5013999999999064e-05, 5.516699999999486e-05, 5.541700000000205e-05, 5.486099999999633e-05, 5.508299999999744e-05, 5.4999999999999494e-05, 5.511100000000352e-05, 5.462500000000259e-05, 5.509700000000395e-05, 5.461099999999608e-05, 5.38749999999949e-05, 5.494500000000069e-05, 5.534699999999726e-05, 5.512500000000309e-05, 5.533300000000463e-05, 5.481900000000456e-05, 5.5013999999999064e-05, 5.462500000000259e-05, 5.4999999999999494e-05, 5.48470000000037e-05, 5.370899999999901e-05, 5.4763999999998814e-05, 5.430499999999755e-05, 5.406900000000381e-05, 5.4637999999995746e-05, 5.493099999999418e-05, 5.504100000000567e-05, 5.51670000000018e-05, 5.516699999999486e-05, 5.527699999999941e-05]</msg>
<status status="PASS" starttime="20201029 12:48:27.151" endtime="20201029 12:48:27.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.139" endtime="20201029 12:48:27.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:27.167" endtime="20201029 12:48:27.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.163" endtime="20201029 12:48:27.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.160" endtime="20201029 12:48:27.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.650" endtime="20201029 12:48:27.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.649" endtime="20201029 12:48:27.192"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.215" endtime="20201029 12:48:27.236"></status>
</kw>
<msg timestamp="20201029 12:48:27.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.212" endtime="20201029 12:48:27.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.239" endtime="20201029 12:48:27.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.245" endtime="20201029 12:48:27.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.205" endtime="20201029 12:48:27.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.199" endtime="20201029 12:48:27.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.269" endtime="20201029 12:48:27.613"></status>
</kw>
<msg timestamp="20201029 12:48:27.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040054764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040110944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.266" endtime="20201029 12:48:27.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040054764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040110944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.623" endtime="20201029 12:48:27.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.642" endtime="20201029 12:48:27.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.259" endtime="20201029 12:48:27.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.254" endtime="20201029 12:48:27.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:27.659" level="INFO">${RESULT} = [{'diff': 5.6180000000002894e-05}, {'diff': 5.630600000000596e-05}, {'diff': 5.588899999999647e-05}, {'diff': 5.616699999999586e-05}, {'diff': 5.6250000000000744e-05}, {'diff': 5.613900000000366e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:27.650" endtime="20201029 12:48:27.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:27.671" level="INFO">${ACCURACY} = {'diff': [5.6180000000002894e-05, 5.630600000000596e-05, 5.588899999999647e-05, 5.616699999999586e-05, 5.6250000000000744e-05, 5.613900000000366e-05, 5.6000000000000494e-05, 5.5249999999999744e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:48:27.661" endtime="20201029 12:48:27.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.682" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:48:27.679" endtime="20201029 12:48:27.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.687" level="INFO">VALUE: [5.6180000000002894e-05, 5.630600000000596e-05, 5.588899999999647e-05, 5.616699999999586e-05, 5.6250000000000744e-05, 5.613900000000366e-05, 5.6000000000000494e-05, 5.5249999999999744e-05, 5.6041999999999204e-05, 5.6472000000001854e-05, 5.583299999999819e-05, 5.5986000000000924e-05, 5.586099999999733e-05, 5.580499999999905e-05, 5.6514000000000564e-05, 5.56670000000023e-05, 5.4735999999999674e-05, 5.570900000000101e-05, 5.5888000000003935e-05, 5.6027999999999634e-05, 5.508399999999691e-05, 5.579099999999948e-05, 5.4999999999999494e-05, 5.5527999999999134e-05, 5.562499999999665e-05, 5.6222000000001604e-05, 5.6264000000000314e-05, 5.561099999999708e-05, 5.606999999999834e-05, 5.629099999999998e-05, 5.630499999999955e-05, 5.4749999999999244e-05, 5.5958000000001784e-05, 5.580499999999905e-05, 5.627700000000041e-05, 5.6291999999999454e-05, 5.583299999999819e-05, 5.5721999999994165e-05, 5.6027999999999634e-05, 5.511100000000352e-05, 5.6014000000000064e-05, 5.6000000000000494e-05, 5.618100000000237e-05, 5.490300000000198e-05, 5.636100000000477e-05, 5.5707999999994595e-05, 5.511099999999658e-05, 5.5665999999995885e-05, 5.587500000000384e-05, 5.5708000000001534e-05]</msg>
<status status="PASS" starttime="20201029 12:48:27.684" endtime="20201029 12:48:27.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.672" endtime="20201029 12:48:27.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:27.700" endtime="20201029 12:48:27.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.696" endtime="20201029 12:48:27.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.693" endtime="20201029 12:48:27.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.195" endtime="20201029 12:48:27.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.193" endtime="20201029 12:48:27.725"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.749" endtime="20201029 12:48:27.769"></status>
</kw>
<msg timestamp="20201029 12:48:27.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.745" endtime="20201029 12:48:27.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.773" endtime="20201029 12:48:27.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.779" endtime="20201029 12:48:27.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.738" endtime="20201029 12:48:27.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.732" endtime="20201029 12:48:27.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.803" endtime="20201029 12:48:28.147"></status>
</kw>
<msg timestamp="20201029 12:48:28.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040338903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040395681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.800" endtime="20201029 12:48:28.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040338903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040395681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:28.157" endtime="20201029 12:48:28.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.176" endtime="20201029 12:48:28.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.792" endtime="20201029 12:48:28.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.787" endtime="20201029 12:48:28.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:28.194" level="INFO">${RESULT} = [{'diff': 5.6778000000000384e-05}, {'diff': 5.736099999999883e-05}, {'diff': 5.712499999999815e-05}, {'diff': 5.7542000000000704e-05}, {'diff': 5.6915999999997136e-05}, {'diff': 5.638900000000391e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:28.185" endtime="20201029 12:48:28.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:28.203" level="INFO">${ACCURACY} = {'diff': [5.6778000000000384e-05, 5.736099999999883e-05, 5.712499999999815e-05, 5.7542000000000704e-05, 5.6915999999997136e-05, 5.638900000000391e-05, 5.6957999999995845e-05, 5.6222000000001604e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:48:28.196" endtime="20201029 12:48:28.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.214" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:48:28.212" endtime="20201029 12:48:28.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.220" level="INFO">VALUE: [5.6778000000000384e-05, 5.736099999999883e-05, 5.712499999999815e-05, 5.7542000000000704e-05, 5.6915999999997136e-05, 5.638900000000391e-05, 5.6957999999995845e-05, 5.6222000000001604e-05, 5.686099999999833e-05, 5.7485999999995485e-05, 5.622300000000108e-05, 5.6819999999999093e-05, 5.681899999999962e-05, 5.716699999999686e-05, 5.7471999999995915e-05, 5.7486000000002424e-05, 5.723699999999471e-05, 5.748699999999496e-05, 5.684799999999823e-05, 5.684699999999876e-05, 5.684799999999823e-05, 5.668099999999593e-05, 5.6055999999998773e-05, 5.6986000000001924e-05, 5.736099999999883e-05, 5.7249999999994805e-05, 5.6750000000001244e-05, 5.7000000000001494e-05, 5.7264000000001314e-05, 5.7249999999994805e-05, 5.638900000000391e-05, 5.715300000000423e-05, 5.7430000000004144e-05, 5.7166000000004324e-05, 5.7250000000001744e-05, 5.684699999999876e-05, 5.706899999999987e-05, 5.754100000000123e-05, 5.7069999999999343e-05, 5.713900000000466e-05, 5.7458000000003284e-05, 5.6944000000003214e-05, 5.730500000000055e-05, 5.669500000000244e-05, 5.659699999999851e-05, 5.6000000000000494e-05, 5.7278000000000884e-05, 5.7278000000000884e-05, 5.6569999999998843e-05, 5.7278000000000884e-05]</msg>
<status status="PASS" starttime="20201029 12:48:28.217" endtime="20201029 12:48:28.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.205" endtime="20201029 12:48:28.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:28.233" endtime="20201029 12:48:28.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.228" endtime="20201029 12:48:28.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.226" endtime="20201029 12:48:28.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.728" endtime="20201029 12:48:28.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.726" endtime="20201029 12:48:28.258"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.281" endtime="20201029 12:48:28.303"></status>
</kw>
<msg timestamp="20201029 12:48:28.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:28.278" endtime="20201029 12:48:28.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:28.306" endtime="20201029 12:48:28.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.313" endtime="20201029 12:48:28.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.270" endtime="20201029 12:48:28.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.264" endtime="20201029 12:48:28.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.336" endtime="20201029 12:48:28.679"></status>
</kw>
<msg timestamp="20201029 12:48:28.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041589819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:28.333" endtime="20201029 12:48:28.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041589819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:28.688" endtime="20201029 12:48:28.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.708" endtime="20201029 12:48:28.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.326" endtime="20201029 12:48:28.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.321" endtime="20201029 12:48:28.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:28.725" level="INFO">${RESULT} = [{'diff': 5.79870000000024e-05}, {'diff': 5.8028000000001634e-05}, {'diff': 5.8236000000003174e-05}, {'diff': 5.7736000000002674e-05}, {'diff': 5.812499999999915e-05}, {'diff': 5.766699999999736e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:28.716" endtime="20201029 12:48:28.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:28.735" level="INFO">${ACCURACY} = {'diff': [5.79870000000024e-05, 5.8028000000001634e-05, 5.8236000000003174e-05, 5.7736000000002674e-05, 5.812499999999915e-05, 5.766699999999736e-05, 5.8014000000002064e-05, 5.71670000000038e-05, 5.84...</msg>
<status status="PASS" starttime="20201029 12:48:28.727" endtime="20201029 12:48:28.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.746" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:48:28.743" endtime="20201029 12:48:28.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.751" level="INFO">VALUE: [5.79870000000024e-05, 5.8028000000001634e-05, 5.8236000000003174e-05, 5.7736000000002674e-05, 5.812499999999915e-05, 5.766699999999736e-05, 5.8014000000002064e-05, 5.71670000000038e-05, 5.841699999999811e-05, 5.8291999999994515e-05, 5.784799999999923e-05, 5.76949999999965e-05, 5.7749999999995305e-05, 5.840299999999854e-05, 5.7208000000003034e-05, 5.8528000000002134e-05, 5.841699999999811e-05, 5.837500000000634e-05, 5.781900000000062e-05, 5.845900000000376e-05, 5.78749999999989e-05, 5.7764000000001814e-05, 5.815299999999829e-05, 5.812499999999915e-05, 5.8014000000002064e-05, 5.7916000000005075e-05, 5.808300000000044e-05, 5.791700000000455e-05, 5.762500000000559e-05, 5.7764000000001814e-05, 5.8527999999995195e-05, 5.7208000000003034e-05, 5.838899999999897e-05, 5.795900000000326e-05, 5.766699999999736e-05, 5.770899999999607e-05, 5.7819999999993155e-05, 5.783300000000019e-05, 5.827700000000241e-05, 5.856900000000137e-05, 5.6736000000001674e-05, 5.812499999999915e-05, 5.780499999999411e-05, 5.8193999999997525e-05, 5.768100000000387e-05, 5.8570000000000844e-05, 5.8514000000002564e-05, 5.7736000000002674e-05, 5.786099999999933e-05, 5.7778000000001384e-05]</msg>
<status status="PASS" starttime="20201029 12:48:28.748" endtime="20201029 12:48:28.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.736" endtime="20201029 12:48:28.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:28.765" endtime="20201029 12:48:28.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.760" endtime="20201029 12:48:28.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.757" endtime="20201029 12:48:28.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.260" endtime="20201029 12:48:28.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.259" endtime="20201029 12:48:28.791"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.814" endtime="20201029 12:48:28.834"></status>
</kw>
<msg timestamp="20201029 12:48:28.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:28.810" endtime="20201029 12:48:28.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:28.838" endtime="20201029 12:48:28.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.844" endtime="20201029 12:48:28.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.803" endtime="20201029 12:48:28.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.797" endtime="20201029 12:48:28.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.868" endtime="20201029 12:48:29.209"></status>
</kw>
<msg timestamp="20201029 12:48:29.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040059167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040118, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:48:28.864" endtime="20201029 12:48:29.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040059167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040118, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:48:29.219" endtime="20201029 12:48:29.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.238" endtime="20201029 12:48:29.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.857" endtime="20201029 12:48:29.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.852" endtime="20201029 12:48:29.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:29.256" level="INFO">${RESULT} = [{'diff': 5.883300000000119e-05}, {'diff': 5.861100000000008e-05}, {'diff': 5.909700000000101e-05}, {'diff': 5.9056000000001774e-05}, {'diff': 5.9292000000002454e-05}, {'diff': 5.86670000000053e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:29.247" endtime="20201029 12:48:29.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:29.267" level="INFO">${ACCURACY} = {'diff': [5.883300000000119e-05, 5.861100000000008e-05, 5.909700000000101e-05, 5.9056000000001774e-05, 5.9292000000002454e-05, 5.86670000000053e-05, 5.915299999999929e-05, 5.9264000000003314e-05, 5.92...</msg>
<status status="PASS" starttime="20201029 12:48:29.258" endtime="20201029 12:48:29.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.278" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:48:29.276" endtime="20201029 12:48:29.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.283" level="INFO">VALUE: [5.883300000000119e-05, 5.861100000000008e-05, 5.909700000000101e-05, 5.9056000000001774e-05, 5.9292000000002454e-05, 5.86670000000053e-05, 5.915299999999929e-05, 5.9264000000003314e-05, 5.9221999999997665e-05, 5.8666000000005825e-05, 5.9429999999999206e-05, 5.9235999999997235e-05, 5.934700000000126e-05, 5.956900000000237e-05, 5.883300000000119e-05, 5.904100000000273e-05, 5.9194999999998e-05, 5.8570000000000844e-05, 5.9306000000002024e-05, 5.8806000000001524e-05, 5.940299999999954e-05, 5.86949999999975e-05, 5.912500000000015e-05, 5.945899999999782e-05, 5.865300000000573e-05, 5.8764000000002814e-05, 5.7721999999996165e-05, 5.913899999999972e-05, 5.838900000000591e-05, 5.8764000000002814e-05, 5.8777999999995445e-05, 5.90829999999945e-05, 5.9179999999998956e-05, 5.9263999999996375e-05, 5.8721999999997165e-05, 5.8693999999998026e-05, 5.9194000000005464e-05, 5.908300000000144e-05, 5.855499999999486e-05, 5.8750000000003244e-05, 5.911100000000058e-05, 5.890299999999904e-05, 5.9028000000002634e-05, 5.8584000000000414e-05, 5.8764000000002814e-05, 5.78749999999989e-05, 5.9527999999996195e-05, 5.8957999999997845e-05, 5.9444000000005714e-05, 5.9098000000000483e-05]</msg>
<status status="PASS" starttime="20201029 12:48:29.280" endtime="20201029 12:48:29.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.269" endtime="20201029 12:48:29.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:29.296" endtime="20201029 12:48:29.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.292" endtime="20201029 12:48:29.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.289" endtime="20201029 12:48:29.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.793" endtime="20201029 12:48:29.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.792" endtime="20201029 12:48:29.321"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.344" endtime="20201029 12:48:29.365"></status>
</kw>
<msg timestamp="20201029 12:48:29.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:29.341" endtime="20201029 12:48:29.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:29.368" endtime="20201029 12:48:29.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.375" endtime="20201029 12:48:29.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.334" endtime="20201029 12:48:29.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.328" endtime="20201029 12:48:29.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.398" endtime="20201029 12:48:29.752"></status>
</kw>
<msg timestamp="20201029 12:48:29.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040093, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04015325, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:48:29.395" endtime="20201029 12:48:29.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040093, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04015325, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:48:29.761" endtime="20201029 12:48:29.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.780" endtime="20201029 12:48:29.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.388" endtime="20201029 12:48:29.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.383" endtime="20201029 12:48:29.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:29.797" level="INFO">${RESULT} = [{'diff': 6.0250000000004744e-05}, {'diff': 5.9735999999997735e-05}, {'diff': 6.0500000000004994e-05}, {'diff': 6.044499999999925e-05}, {'diff': 6.0486000000005424e-05}, {'diff': 6.0000000000004494e-0...</msg>
<status status="PASS" starttime="20201029 12:48:29.789" endtime="20201029 12:48:29.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:29.813" level="INFO">${ACCURACY} = {'diff': [6.0250000000004744e-05, 5.9735999999997735e-05, 6.0500000000004994e-05, 6.044499999999925e-05, 6.0486000000005424e-05, 6.0000000000004494e-05, 6.0527999999997195e-05, 5.9263999999996375e-05,...</msg>
<status status="PASS" starttime="20201029 12:48:29.800" endtime="20201029 12:48:29.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.823" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:48:29.821" endtime="20201029 12:48:29.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.829" level="INFO">VALUE: [6.0250000000004744e-05, 5.9735999999997735e-05, 6.0500000000004994e-05, 6.044499999999925e-05, 6.0486000000005424e-05, 6.0000000000004494e-05, 6.0527999999997195e-05, 5.9263999999996375e-05, 5.9957999999998846e-05, 5.9693999999999026e-05, 5.9834000000001664e-05, 6.043099999999968e-05, 5.96670000000063e-05, 5.9750000000004244e-05, 5.9999999999997555e-05, 5.941700000000605e-05, 6.0555999999996335e-05, 6.0013999999997125e-05, 6.054100000000423e-05, 5.962500000000065e-05, 5.9207999999998095e-05, 6.0527999999997195e-05, 6.016699999999986e-05, 5.958300000000194e-05, 5.9820000000002094e-05, 5.940299999999954e-05, 6.031900000000312e-05, 6.012500000000115e-05, 5.972299999999764e-05, 6.009699999999507e-05, 5.9693999999999026e-05, 5.98750000000009e-05, 6.034700000000226e-05, 6.0263999999997375e-05, 5.9208000000005034e-05, 5.963900000000022e-05, 6.0207999999999096e-05, 6.0514000000004564e-05, 6.0028000000003634e-05, 6.030500000000355e-05, 6.012500000000115e-05, 6.0166000000000386e-05, 6.0138000000001246e-05, 6.0306000000003024e-05, 6.018099999999943e-05, 6.0485999999998485e-05, 5.993099999999918e-05, 6.015300000000029e-05, 6.015300000000029e-05, 6.030500000000355e-05]</msg>
<status status="PASS" starttime="20201029 12:48:29.826" endtime="20201029 12:48:29.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.814" endtime="20201029 12:48:29.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:29.846" endtime="20201029 12:48:29.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.841" endtime="20201029 12:48:29.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.839" endtime="20201029 12:48:29.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.323" endtime="20201029 12:48:29.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.322" endtime="20201029 12:48:29.871"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.894" endtime="20201029 12:48:29.912"></status>
</kw>
<msg timestamp="20201029 12:48:29.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:29.891" endtime="20201029 12:48:29.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:29.916" endtime="20201029 12:48:29.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.922" endtime="20201029 12:48:29.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.883" endtime="20201029 12:48:29.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.877" endtime="20201029 12:48:29.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.945" endtime="20201029 12:48:30.280"></status>
</kw>
<msg timestamp="20201029 12:48:30.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040479125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040539986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:29.942" endtime="20201029 12:48:30.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040479125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040539986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:30.290" endtime="20201029 12:48:30.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.308" endtime="20201029 12:48:30.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.935" endtime="20201029 12:48:30.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.930" endtime="20201029 12:48:30.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:30.325" level="INFO">${RESULT} = [{'diff': 6.086100000000233e-05}, {'diff': 6.129099999999804e-05}, {'diff': 6.065300000000079e-05}, {'diff': 6.08750000000019e-05}, {'diff': 6.002699999999722e-05}, {'diff': 6.144400000000078e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:30.316" endtime="20201029 12:48:30.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:30.334" level="INFO">${ACCURACY} = {'diff': [6.086100000000233e-05, 6.129099999999804e-05, 6.065300000000079e-05, 6.08750000000019e-05, 6.002699999999722e-05, 6.144400000000078e-05, 6.066700000000036e-05, 6.109800000000248e-05, 6.09579...</msg>
<status status="PASS" starttime="20201029 12:48:30.327" endtime="20201029 12:48:30.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.345" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:48:30.343" endtime="20201029 12:48:30.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.350" level="INFO">VALUE: [6.086100000000233e-05, 6.129099999999804e-05, 6.065300000000079e-05, 6.08750000000019e-05, 6.002699999999722e-05, 6.144400000000078e-05, 6.066700000000036e-05, 6.109800000000248e-05, 6.0957999999999846e-05, 6.127799999999795e-05, 6.084700000000276e-05, 6.0694000000000026e-05, 6.0778000000004384e-05, 6.133400000000316e-05, 6.130600000000402e-05, 6.144499999999331e-05, 6.0944000000000276e-05, 6.101299999999865e-05, 6.062500000000165e-05, 6.133400000000316e-05, 6.083299999999625e-05, 6.0207999999999096e-05, 6.111099999999564e-05, 6.134700000000326e-05, 6.0221999999998665e-05, 6.0598000000001984e-05, 6.145899999999982e-05, 6.068099999999993e-05, 6.068099999999993e-05, 6.156899999999743e-05, 6.127799999999795e-05, 6.129200000000445e-05, 6.111099999999564e-05, 6.123599999999924e-05, 6.0721999999999166e-05, 6.129200000000445e-05, 6.14300000000012e-05, 6.0721999999999166e-05, 6.131999999999665e-05, 6.097299999999889e-05, 6.111099999999564e-05, 6.08750000000019e-05, 6.105600000000377e-05, 6.0792000000003954e-05, 6.122299999999914e-05, 6.129199999999752e-05, 6.0735999999998735e-05, 6.088899999999453e-05, 6.145899999999982e-05, 6.158399999999647e-05]</msg>
<status status="PASS" starttime="20201029 12:48:30.347" endtime="20201029 12:48:30.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.336" endtime="20201029 12:48:30.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:30.363" endtime="20201029 12:48:30.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.358" endtime="20201029 12:48:30.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.356" endtime="20201029 12:48:30.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.873" endtime="20201029 12:48:30.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.872" endtime="20201029 12:48:30.390"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.413" endtime="20201029 12:48:30.432"></status>
</kw>
<msg timestamp="20201029 12:48:30.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:30.409" endtime="20201029 12:48:30.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:30.435" endtime="20201029 12:48:30.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.441" endtime="20201029 12:48:30.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.402" endtime="20201029 12:48:30.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.396" endtime="20201029 12:48:30.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.465" endtime="20201029 12:48:30.809"></status>
</kw>
<msg timestamp="20201029 12:48:30.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042957042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043018097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:30.461" endtime="20201029 12:48:30.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042957042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043018097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:30.819" endtime="20201029 12:48:30.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.838" endtime="20201029 12:48:30.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.454" endtime="20201029 12:48:30.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.450" endtime="20201029 12:48:30.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:30.856" level="INFO">${RESULT} = [{'diff': 6.105499999999736e-05}, {'diff': 6.179099999999854e-05}, {'diff': 6.22080000000011e-05}, {'diff': 6.19029999999951e-05}, {'diff': 6.234699999999732e-05}, {'diff': 6.162499999999571e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:30.847" endtime="20201029 12:48:30.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:30.865" level="INFO">${ACCURACY} = {'diff': [6.105499999999736e-05, 6.179099999999854e-05, 6.22080000000011e-05, 6.19029999999951e-05, 6.234699999999732e-05, 6.162499999999571e-05, 6.184699999999682e-05, 6.255499999999886e-05, 6.137500...</msg>
<status status="PASS" starttime="20201029 12:48:30.858" endtime="20201029 12:48:30.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.876" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:48:30.874" endtime="20201029 12:48:30.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.882" level="INFO">VALUE: [6.105499999999736e-05, 6.179099999999854e-05, 6.22080000000011e-05, 6.19029999999951e-05, 6.234699999999732e-05, 6.162499999999571e-05, 6.184699999999682e-05, 6.255499999999886e-05, 6.13750000000024e-05, 6.122199999999967e-05, 6.183399999999672e-05, 6.222200000000067e-05, 6.14029999999946e-05, 6.219399999999459e-05, 6.234699999999732e-05, 6.226399999999938e-05, 6.195799999999391e-05, 6.222199999999373e-05, 6.190199999999563e-05, 6.188900000000247e-05, 6.245800000000135e-05, 6.170900000000007e-05, 6.230599999999809e-05, 6.245800000000135e-05, 6.231899999999818e-05, 6.181899999999768e-05, 6.250000000000006e-05, 6.16950000000005e-05, 6.191700000000161e-05, 6.212499999999621e-05, 6.211099999999664e-05, 6.255499999999886e-05, 6.251300000000015e-05, 6.230599999999809e-05, 6.25279999999992e-05, 6.12499999999988e-05, 6.206899999999793e-05, 6.180500000000505e-05, 6.218000000000196e-05, 6.245900000000082e-05, 6.17499999999993e-05, 6.231899999999818e-05, 6.248600000000049e-05, 6.156900000000437e-05, 6.19300000000017e-05, 6.180599999999759e-05, 6.17080000000006e-05, 6.173599999999974e-05, 6.216700000000186e-05, 6.159699999999657e-05]</msg>
<status status="PASS" starttime="20201029 12:48:30.879" endtime="20201029 12:48:30.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.867" endtime="20201029 12:48:30.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:30.896" endtime="20201029 12:48:30.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.890" endtime="20201029 12:48:30.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.888" endtime="20201029 12:48:30.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.392" endtime="20201029 12:48:30.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.391" endtime="20201029 12:48:30.921"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.945" endtime="20201029 12:48:30.965"></status>
</kw>
<msg timestamp="20201029 12:48:30.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:30.941" endtime="20201029 12:48:30.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:30.968" endtime="20201029 12:48:30.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.975" endtime="20201029 12:48:30.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.934" endtime="20201029 12:48:30.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.928" endtime="20201029 12:48:30.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.999" endtime="20201029 12:48:31.341"></status>
</kw>
<msg timestamp="20201029 12:48:31.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040142417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040205639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:30.995" endtime="20201029 12:48:31.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040142417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040205639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:31.351" endtime="20201029 12:48:31.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.370" endtime="20201029 12:48:31.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.988" endtime="20201029 12:48:31.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.983" endtime="20201029 12:48:31.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:31.387" level="INFO">${RESULT} = [{'diff': 6.322200000000167e-05}, {'diff': 6.350000000000106e-05}, {'diff': 6.287499999999696e-05}, {'diff': 6.312499999999721e-05}, {'diff': 6.301400000000013e-05}, {'diff': 6.326299999999396e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:31.379" endtime="20201029 12:48:31.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:31.398" level="INFO">${ACCURACY} = {'diff': [6.322200000000167e-05, 6.350000000000106e-05, 6.287499999999696e-05, 6.312499999999721e-05, 6.301400000000013e-05, 6.326299999999396e-05, 6.27229999999937e-05, 6.291699999999567e-05, 6.35419...</msg>
<status status="PASS" starttime="20201029 12:48:31.390" endtime="20201029 12:48:31.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.410" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:48:31.407" endtime="20201029 12:48:31.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.415" level="INFO">VALUE: [6.322200000000167e-05, 6.350000000000106e-05, 6.287499999999696e-05, 6.312499999999721e-05, 6.301400000000013e-05, 6.326299999999396e-05, 6.27229999999937e-05, 6.291699999999567e-05, 6.354199999999977e-05, 6.270900000000107e-05, 6.345800000000235e-05, 6.337499999999746e-05, 6.280499999999911e-05, 6.30829999999985e-05, 6.327699999999353e-05, 6.32500000000008e-05, 6.17080000000006e-05, 6.294400000000228e-05, 6.319400000000253e-05, 6.343099999999574e-05, 6.311199999999711e-05, 6.334800000000473e-05, 6.350000000000106e-05, 6.326400000000038e-05, 6.342999999999627e-05, 6.35699999999989e-05, 6.262500000000365e-05, 6.263900000000322e-05, 6.315299999999635e-05, 6.3195000000002e-05, 6.20420000000052e-05, 6.279199999999902e-05, 6.318100000000243e-05, 6.204199999999827e-05, 6.263900000000322e-05, 6.290300000000304e-05, 6.297200000000142e-05, 6.344500000000225e-05, 6.262500000000365e-05, 6.290300000000304e-05, 6.284699999999782e-05, 6.30279999999997e-05, 6.287499999999696e-05, 6.341700000000311e-05, 6.347199999999498e-05, 6.336099999999789e-05, 6.329199999999952e-05, 6.327799999999995e-05, 6.30279999999997e-05, 6.344499999999531e-05]</msg>
<status status="PASS" starttime="20201029 12:48:31.412" endtime="20201029 12:48:31.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.400" endtime="20201029 12:48:31.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:31.428" endtime="20201029 12:48:31.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.423" endtime="20201029 12:48:31.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.421" endtime="20201029 12:48:31.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.924" endtime="20201029 12:48:31.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.922" endtime="20201029 12:48:31.453"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.476" endtime="20201029 12:48:31.497"></status>
</kw>
<msg timestamp="20201029 12:48:31.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:31.473" endtime="20201029 12:48:31.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:31.500" endtime="20201029 12:48:31.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.507" endtime="20201029 12:48:31.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.466" endtime="20201029 12:48:31.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.460" endtime="20201029 12:48:31.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.532" endtime="20201029 12:48:31.875"></status>
</kw>
<msg timestamp="20201029 12:48:31.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040083903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0401475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:31.528" endtime="20201029 12:48:31.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040083903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0401475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:31.884" endtime="20201029 12:48:31.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.903" endtime="20201029 12:48:31.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.521" endtime="20201029 12:48:31.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.516" endtime="20201029 12:48:31.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:31.921" level="INFO">${RESULT} = [{'diff': 6.359700000000551e-05}, {'diff': 6.447200000000292e-05}, {'diff': 6.402700000000122e-05}, {'diff': 6.390199999999763e-05}, {'diff': 6.372200000000217e-05}, {'diff': 6.447200000000292e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:31.912" endtime="20201029 12:48:31.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:31.932" level="INFO">${ACCURACY} = {'diff': [6.359700000000551e-05, 6.447200000000292e-05, 6.402700000000122e-05, 6.390199999999763e-05, 6.372200000000217e-05, 6.447200000000292e-05, 6.356899999999943e-05, 6.4195000000003e-05, 6.393099...</msg>
<status status="PASS" starttime="20201029 12:48:31.923" endtime="20201029 12:48:31.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.943" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:48:31.941" endtime="20201029 12:48:31.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.949" level="INFO">VALUE: [6.359700000000551e-05, 6.447200000000292e-05, 6.402700000000122e-05, 6.390199999999763e-05, 6.372200000000217e-05, 6.447200000000292e-05, 6.356899999999943e-05, 6.4195000000003e-05, 6.393099999999624e-05, 6.443099999999674e-05, 6.444399999999684e-05, 6.412499999999821e-05, 6.438900000000497e-05, 6.438899999999803e-05, 6.423600000000224e-05, 6.443100000000368e-05, 6.398600000000199e-05, 6.404099999999385e-05, 6.398600000000199e-05, 6.411099999999864e-05, 6.359699999999857e-05, 6.355599999999934e-05, 6.415299999999735e-05, 6.37500000000013e-05, 6.454100000000129e-05, 6.32080000000021e-05, 6.411099999999864e-05, 6.38750000000049e-05, 6.359699999999857e-05, 6.40280000000007e-05, 6.434699999999932e-05, 6.398600000000199e-05, 6.336099999999789e-05, 6.305599999999884e-05, 6.379200000000002e-05, 6.4583e-05, 6.426400000000138e-05, 6.447300000000239e-05, 6.38750000000049e-05, 6.413899999999778e-05, 6.379200000000002e-05, 6.365299999999685e-05, 6.355499999999986e-05, 6.416699999999692e-05, 6.413799999999831e-05, 6.363900000000422e-05, 6.391699999999667e-05, 6.444400000000378e-05, 6.415199999999788e-05, 6.44159999999977e-05]</msg>
<status status="PASS" starttime="20201029 12:48:31.946" endtime="20201029 12:48:31.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.934" endtime="20201029 12:48:31.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:31.962" endtime="20201029 12:48:31.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.957" endtime="20201029 12:48:31.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.955" endtime="20201029 12:48:31.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.455" endtime="20201029 12:48:31.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.454" endtime="20201029 12:48:31.987"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.010" endtime="20201029 12:48:32.031"></status>
</kw>
<msg timestamp="20201029 12:48:32.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:32.007" endtime="20201029 12:48:32.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:32.034" endtime="20201029 12:48:32.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.041" endtime="20201029 12:48:32.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.999" endtime="20201029 12:48:32.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.993" endtime="20201029 12:48:32.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.064" endtime="20201029 12:48:32.410"></status>
</kw>
<msg timestamp="20201029 12:48:32.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040435861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040501056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:32.061" endtime="20201029 12:48:32.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040435861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040501056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:32.419" endtime="20201029 12:48:32.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.438" endtime="20201029 12:48:32.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.054" endtime="20201029 12:48:32.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.049" endtime="20201029 12:48:32.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:32.456" level="INFO">${RESULT} = [{'diff': 6.5195000000004e-05}, {'diff': 6.468099999999699e-05}, {'diff': 6.502799999999476e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.405599999999984e-05}, {'diff': 6.47229999999957e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:48:32.447" endtime="20201029 12:48:32.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:32.465" level="INFO">${ACCURACY} = {'diff': [6.5195000000004e-05, 6.468099999999699e-05, 6.502799999999476e-05, 6.512499999999921e-05, 6.405599999999984e-05, 6.47229999999957e-05, 6.480600000000059e-05, 6.376400000000088e-05, 6.4278000...</msg>
<status status="PASS" starttime="20201029 12:48:32.458" endtime="20201029 12:48:32.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.476" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:48:32.474" endtime="20201029 12:48:32.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.482" level="INFO">VALUE: [6.5195000000004e-05, 6.468099999999699e-05, 6.502799999999476e-05, 6.512499999999921e-05, 6.405599999999984e-05, 6.47229999999957e-05, 6.480600000000059e-05, 6.376400000000088e-05, 6.427800000000095e-05, 6.406899999999993e-05, 6.480499999999417e-05, 6.513900000000572e-05, 6.556900000000143e-05, 6.548599999999655e-05, 6.538899999999903e-05, 6.44029999999976e-05, 6.517999999999802e-05, 6.536099999999989e-05, 6.461099999999914e-05, 6.53750000000064e-05, 6.548600000000349e-05, 6.50700000000004e-05, 6.526400000000238e-05, 6.538899999999903e-05, 6.461099999999914e-05, 6.534700000000032e-05, 6.559700000000057e-05, 6.520900000000357e-05, 6.533300000000075e-05, 6.505600000000084e-05, 6.516700000000486e-05, 6.47500000000023e-05, 6.504199999999433e-05, 6.48750000000059e-05, 6.548600000000349e-05, 6.477800000000145e-05, 6.454200000000077e-05, 6.466599999999795e-05, 6.463899999999828e-05, 6.504100000000179e-05, 6.515200000000582e-05, 6.550000000000306e-05, 6.54029999999986e-05, 6.498599999999605e-05, 6.52500000000028e-05, 6.497199999999648e-05, 6.49159999999982e-05, 6.544399999999784e-05, 6.50830000000005e-05, 6.47080000000036e-05]</msg>
<status status="PASS" starttime="20201029 12:48:32.478" endtime="20201029 12:48:32.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.467" endtime="20201029 12:48:32.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:32.495" endtime="20201029 12:48:32.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.490" endtime="20201029 12:48:32.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.487" endtime="20201029 12:48:32.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.989" endtime="20201029 12:48:32.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.988" endtime="20201029 12:48:32.520"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.543" endtime="20201029 12:48:32.566"></status>
</kw>
<msg timestamp="20201029 12:48:32.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:32.540" endtime="20201029 12:48:32.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:32.570" endtime="20201029 12:48:32.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.576" endtime="20201029 12:48:32.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.532" endtime="20201029 12:48:32.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.526" endtime="20201029 12:48:32.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.600" endtime="20201029 12:48:32.945"></status>
</kw>
<msg timestamp="20201029 12:48:32.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042358125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042424153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:32.597" endtime="20201029 12:48:32.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042358125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042424153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:32.954" endtime="20201029 12:48:32.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.973" endtime="20201029 12:48:32.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.589" endtime="20201029 12:48:32.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.585" endtime="20201029 12:48:32.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:32.990" level="INFO">${RESULT} = [{'diff': 6.602799999999576e-05}, {'diff': 6.577800000000245e-05}, {'diff': 6.65280000000032e-05}, {'diff': 6.595799999999791e-05}, {'diff': 6.641699999999917e-05}, {'diff': 6.645799999999841e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:32.981" endtime="20201029 12:48:32.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:32.999" level="INFO">${ACCURACY} = {'diff': [6.602799999999576e-05, 6.577800000000245e-05, 6.65280000000032e-05, 6.595799999999791e-05, 6.641699999999917e-05, 6.645799999999841e-05, 6.552699999999578e-05, 6.604100000000279e-05, 6.61799...</msg>
<status status="PASS" starttime="20201029 12:48:32.992" endtime="20201029 12:48:33.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.010" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:48:33.008" endtime="20201029 12:48:33.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.016" level="INFO">VALUE: [6.602799999999576e-05, 6.577800000000245e-05, 6.65280000000032e-05, 6.595799999999791e-05, 6.641699999999917e-05, 6.645799999999841e-05, 6.552699999999578e-05, 6.604100000000279e-05, 6.617999999999902e-05, 6.630500000000261e-05, 6.602700000000322e-05, 6.620799999999816e-05, 6.658400000000148e-05, 6.612500000000021e-05, 6.594399999999834e-05, 6.629200000000252e-05, 6.572199999999723e-05, 6.597200000000442e-05, 6.638900000000003e-05, 6.591600000000614e-05, 6.594399999999834e-05, 6.583399999999379e-05, 6.627800000000295e-05, 6.648599999999755e-05, 6.48479999999993e-05, 6.583400000000073e-05, 6.57359999999968e-05, 6.563900000000622e-05, 6.650000000000406e-05, 6.650000000000406e-05, 6.615299999999935e-05, 6.595900000000432e-05, 6.633400000000123e-05, 6.613899999999978e-05, 6.633400000000123e-05, 6.63480000000008e-05, 6.600000000000356e-05, 6.562499999999971e-05, 6.579200000000202e-05, 6.569499999999756e-05, 6.650000000000406e-05, 6.629199999999558e-05, 6.473600000000274e-05, 6.656999999999497e-05, 6.634700000000132e-05, 6.579200000000202e-05, 6.57080000000046e-05, 6.567999999999852e-05, 6.524999999999587e-05, 6.613899999999978e-05]</msg>
<status status="PASS" starttime="20201029 12:48:33.013" endtime="20201029 12:48:33.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.001" endtime="20201029 12:48:33.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:33.029" endtime="20201029 12:48:33.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.024" endtime="20201029 12:48:33.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.021" endtime="20201029 12:48:33.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.522" endtime="20201029 12:48:33.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.521" endtime="20201029 12:48:33.054"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.077" endtime="20201029 12:48:33.095"></status>
</kw>
<msg timestamp="20201029 12:48:33.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:33.073" endtime="20201029 12:48:33.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:33.098" endtime="20201029 12:48:33.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.104" endtime="20201029 12:48:33.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.066" endtime="20201029 12:48:33.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.061" endtime="20201029 12:48:33.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.127" endtime="20201029 12:48:33.458"></status>
</kw>
<msg timestamp="20201029 12:48:33.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038922153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038989514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:33.124" endtime="20201029 12:48:33.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038922153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038989514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:33.467" endtime="20201029 12:48:33.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.486" endtime="20201029 12:48:33.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.117" endtime="20201029 12:48:33.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.113" endtime="20201029 12:48:33.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:33.503" level="INFO">${RESULT} = [{'diff': 6.736100000000189e-05}, {'diff': 6.75559999999964e-05}, {'diff': 6.734700000000232e-05}, {'diff': 6.694400000000628e-05}, {'diff': 6.761100000000214e-05}, {'diff': 6.729200000000352e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:33.494" endtime="20201029 12:48:33.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:33.514" level="INFO">${ACCURACY} = {'diff': [6.736100000000189e-05, 6.75559999999964e-05, 6.734700000000232e-05, 6.694400000000628e-05, 6.761100000000214e-05, 6.729200000000352e-05, 6.744499999999931e-05, 6.687500000000096e-05, 6.67079...</msg>
<status status="PASS" starttime="20201029 12:48:33.505" endtime="20201029 12:48:33.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.524" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:48:33.522" endtime="20201029 12:48:33.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.530" level="INFO">VALUE: [6.736100000000189e-05, 6.75559999999964e-05, 6.734700000000232e-05, 6.694400000000628e-05, 6.761100000000214e-05, 6.729200000000352e-05, 6.744499999999931e-05, 6.687500000000096e-05, 6.670799999999866e-05, 6.734700000000232e-05, 6.643099999999874e-05, 6.749999999999812e-05, 6.720900000000557e-05, 6.694499999999881e-05, 6.695900000000532e-05, 6.736200000000137e-05, 6.697299999999795e-05, 6.701400000000413e-05, 6.720899999999863e-05, 6.691699999999967e-05, 6.698599999999805e-05, 6.749999999999812e-05, 6.713900000000078e-05, 6.736100000000189e-05, 6.677800000000345e-05, 6.733299999999581e-05, 6.705500000000336e-05, 6.736099999999495e-05, 6.713900000000078e-05, 6.712500000000121e-05, 6.75280000000042e-05, 6.751399999999769e-05, 6.669399999999909e-05, 6.695799999999891e-05, 6.676399999999694e-05, 6.709699999999513e-05, 6.736100000000189e-05, 6.681999999999522e-05, 6.711200000000112e-05, 6.570899999999713e-05, 6.62359999999973e-05, 6.715300000000035e-05, 6.736200000000137e-05, 6.674999999999737e-05, 6.691699999999967e-05, 6.688900000000053e-05, 6.699999999999762e-05, 6.759700000000257e-05, 6.744399999999984e-05, 6.708400000000198e-05]</msg>
<status status="PASS" starttime="20201029 12:48:33.527" endtime="20201029 12:48:33.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.515" endtime="20201029 12:48:33.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:33.542" endtime="20201029 12:48:33.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.538" endtime="20201029 12:48:33.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.535" endtime="20201029 12:48:33.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.056" endtime="20201029 12:48:33.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.055" endtime="20201029 12:48:33.567"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.600" endtime="20201029 12:48:33.619"></status>
</kw>
<msg timestamp="20201029 12:48:33.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:33.597" endtime="20201029 12:48:33.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:33.623" endtime="20201029 12:48:33.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.629" endtime="20201029 12:48:33.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.589" endtime="20201029 12:48:33.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.583" endtime="20201029 12:48:33.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.652" endtime="20201029 12:48:33.986"></status>
</kw>
<msg timestamp="20201029 12:48:33.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050289514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050357333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:33.649" endtime="20201029 12:48:33.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050289514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050357333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:33.995" endtime="20201029 12:48:34.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.014" endtime="20201029 12:48:34.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.642" endtime="20201029 12:48:34.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.637" endtime="20201029 12:48:34.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:34.031" level="INFO">${RESULT} = [{'diff': 6.781899999999674e-05}, {'diff': 6.691699999999967e-05}, {'diff': 6.852799999999826e-05}, {'diff': 6.797299999999895e-05}, {'diff': 6.852799999999826e-05}, {'diff': 6.841700000000117e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:34.022" endtime="20201029 12:48:34.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:34.042" level="INFO">${ACCURACY} = {'diff': [6.781899999999674e-05, 6.691699999999967e-05, 6.852799999999826e-05, 6.797299999999895e-05, 6.852799999999826e-05, 6.841700000000117e-05, 6.841700000000117e-05, 6.818100000000049e-05, 6.7667...</msg>
<status status="PASS" starttime="20201029 12:48:34.033" endtime="20201029 12:48:34.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.053" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:48:34.050" endtime="20201029 12:48:34.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.058" level="INFO">VALUE: [6.781899999999674e-05, 6.691699999999967e-05, 6.852799999999826e-05, 6.797299999999895e-05, 6.852799999999826e-05, 6.841700000000117e-05, 6.841700000000117e-05, 6.818100000000049e-05, 6.766700000000042e-05, 6.794499999999981e-05, 6.759700000000257e-05, 6.854200000000477e-05, 6.819400000000059e-05, 6.849999999999912e-05, 6.791699999999373e-05, 6.816600000000145e-05, 6.801399999999819e-05, 6.856899999999749e-05, 6.772199999999923e-05, 6.766700000000042e-05, 6.816700000000092e-05, 6.829199999999758e-05, 6.733299999999581e-05, 6.843100000000074e-05, 6.820899999999963e-05, 6.759800000000205e-05, 6.726299999999796e-05, 6.831899999999724e-05, 6.804099999999785e-05, 6.840199999999519e-05, 6.758400000000248e-05, 6.818100000000049e-05, 6.843100000000074e-05, 6.858399999999654e-05, 6.793000000000077e-05, 6.816700000000092e-05, 6.862499999999577e-05, 6.759800000000205e-05, 6.834700000000332e-05, 6.834700000000332e-05, 6.788900000000153e-05, 6.841700000000117e-05, 6.805499999999742e-05, 6.851399999999869e-05, 6.808299999999656e-05, 6.844500000000031e-05, 6.761100000000214e-05, 6.781999999999622e-05, 6.783300000000325e-05, 6.797199999999948e-05]</msg>
<status status="PASS" starttime="20201029 12:48:34.055" endtime="20201029 12:48:34.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.044" endtime="20201029 12:48:34.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:34.071" endtime="20201029 12:48:34.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.066" endtime="20201029 12:48:34.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.064" endtime="20201029 12:48:34.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.569" endtime="20201029 12:48:34.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.568" endtime="20201029 12:48:34.095"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.118" endtime="20201029 12:48:34.136"></status>
</kw>
<msg timestamp="20201029 12:48:34.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:34.115" endtime="20201029 12:48:34.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:34.140" endtime="20201029 12:48:34.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.146" endtime="20201029 12:48:34.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.107" endtime="20201029 12:48:34.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.102" endtime="20201029 12:48:34.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.169" endtime="20201029 12:48:34.499"></status>
</kw>
<msg timestamp="20201029 12:48:34.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039301042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039369694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:34.166" endtime="20201029 12:48:34.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039301042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039369694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:34.509" endtime="20201029 12:48:34.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.528" endtime="20201029 12:48:34.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.158" endtime="20201029 12:48:34.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.154" endtime="20201029 12:48:34.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:34.545" level="INFO">${RESULT} = [{'diff': 6.865199999999544e-05}, {'diff': 6.859700000000357e-05}, {'diff': 6.948600000000055e-05}, {'diff': 6.863899999999534e-05}, {'diff': 6.82359999999993e-05}, {'diff': 6.901399999999919e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:34.536" endtime="20201029 12:48:34.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:34.554" level="INFO">${ACCURACY} = {'diff': [6.865199999999544e-05, 6.859700000000357e-05, 6.948600000000055e-05, 6.863899999999534e-05, 6.82359999999993e-05, 6.901399999999919e-05, 6.894499999999387e-05, 6.948600000000055e-05, 6.77910...</msg>
<status status="PASS" starttime="20201029 12:48:34.547" endtime="20201029 12:48:34.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.565" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:48:34.562" endtime="20201029 12:48:34.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.570" level="INFO">VALUE: [6.865199999999544e-05, 6.859700000000357e-05, 6.948600000000055e-05, 6.863899999999534e-05, 6.82359999999993e-05, 6.901399999999919e-05, 6.894499999999387e-05, 6.948600000000055e-05, 6.779100000000454e-05, 6.932000000000466e-05, 6.891700000000167e-05, 6.862499999999577e-05, 6.944400000000184e-05, 6.919399999999465e-05, 6.823600000000624e-05, 6.951399999999969e-05, 6.899999999999962e-05, 6.931899999999824e-05, 6.870800000000066e-05, 6.869400000000109e-05, 6.806899999999699e-05, 6.936100000000389e-05, 6.937499999999652e-05, 6.938899999999609e-05, 6.82359999999993e-05, 6.927699999999953e-05, 6.941700000000217e-05, 6.895800000000091e-05, 6.936200000000337e-05, 6.897299999999995e-05, 6.92230000000002e-05, 6.802799999999776e-05, 6.859699999999663e-05, 6.861100000000314e-05, 6.926399999999944e-05, 6.929199999999858e-05, 6.881899999999774e-05, 6.92360000000003e-05, 6.861100000000314e-05, 6.954199999999883e-05, 6.952799999999926e-05, 6.877799999999851e-05, 6.94160000000027e-05, 6.897200000000048e-05, 6.82359999999993e-05, 6.901399999999919e-05, 6.959800000000405e-05, 6.929199999999858e-05, 6.916699999999498e-05, 6.894400000000134e-05]</msg>
<status status="PASS" starttime="20201029 12:48:34.567" endtime="20201029 12:48:34.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.556" endtime="20201029 12:48:34.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:34.583" endtime="20201029 12:48:34.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.578" endtime="20201029 12:48:34.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.576" endtime="20201029 12:48:34.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.098" endtime="20201029 12:48:34.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.096" endtime="20201029 12:48:34.608"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.632" endtime="20201029 12:48:34.657"></status>
</kw>
<msg timestamp="20201029 12:48:34.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:34.628" endtime="20201029 12:48:34.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:34.660" endtime="20201029 12:48:34.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.667" endtime="20201029 12:48:34.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.621" endtime="20201029 12:48:34.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.615" endtime="20201029 12:48:34.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.690" endtime="20201029 12:48:35.018"></status>
</kw>
<msg timestamp="20201029 12:48:35.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047584875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047654847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:34.687" endtime="20201029 12:48:35.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047584875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047654847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:35.028" endtime="20201029 12:48:35.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.046" endtime="20201029 12:48:35.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.680" endtime="20201029 12:48:35.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.675" endtime="20201029 12:48:35.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:35.063" level="INFO">${RESULT} = [{'diff': 6.997200000000148e-05}, {'diff': 6.87359999999998e-05}, {'diff': 6.983299999999831e-05}, {'diff': 7.004199999999933e-05}, {'diff': 7.052699999999384e-05}, {'diff': 7.036199999999743e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:35.054" endtime="20201029 12:48:35.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:35.073" level="INFO">${ACCURACY} = {'diff': [6.997200000000148e-05, 6.87359999999998e-05, 6.983299999999831e-05, 7.004199999999933e-05, 7.052699999999384e-05, 7.036199999999743e-05, 6.965300000000285e-05, 7.052800000000026e-05, 7.05699...</msg>
<status status="PASS" starttime="20201029 12:48:35.065" endtime="20201029 12:48:35.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.083" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:48:35.081" endtime="20201029 12:48:35.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.089" level="INFO">VALUE: [6.997200000000148e-05, 6.87359999999998e-05, 6.983299999999831e-05, 7.004199999999933e-05, 7.052699999999384e-05, 7.036199999999743e-05, 6.965300000000285e-05, 7.052800000000026e-05, 7.056999999999897e-05, 7.032000000000566e-05, 6.977800000000645e-05, 6.991700000000267e-05, 7.012499999999727e-05, 6.977700000000003e-05, 7.002700000000028e-05, 7.012499999999727e-05, 7.047200000000198e-05, 7.054100000000035e-05, 6.992999999999583e-05, 6.976299999999352e-05, 7.048699999999408e-05, 7.034799999999786e-05, 7.04439999999959e-05, 6.968100000000199e-05, 7.019399999999565e-05, 6.977700000000003e-05, 6.993000000000277e-05, 7.04160000000037e-05, 6.966599999999601e-05, 6.980500000000611e-05, 6.987499999999702e-05, 6.983299999999831e-05, 7.034699999999838e-05, 7.036099999999795e-05, 6.997300000000095e-05, 7.033399999999829e-05, 6.89030000000021e-05, 6.90559999999979e-05, 7.008400000000498e-05, 7.048600000000155e-05, 6.995799999999497e-05, 7.009700000000507e-05, 7.044400000000284e-05, 6.962500000000371e-05, 6.994400000000234e-05, 6.972200000000123e-05, 6.908399999999704e-05, 7.029199999999958e-05, 6.941699999999523e-05, 7.006899999999899e-05]</msg>
<status status="PASS" starttime="20201029 12:48:35.086" endtime="20201029 12:48:35.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.074" endtime="20201029 12:48:35.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:35.107" endtime="20201029 12:48:35.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.101" endtime="20201029 12:48:35.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.099" endtime="20201029 12:48:35.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.610" endtime="20201029 12:48:35.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.609" endtime="20201029 12:48:35.132"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.154" endtime="20201029 12:48:35.172"></status>
</kw>
<msg timestamp="20201029 12:48:35.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:35.151" endtime="20201029 12:48:35.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:35.176" endtime="20201029 12:48:35.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.182" endtime="20201029 12:48:35.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.144" endtime="20201029 12:48:35.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.138" endtime="20201029 12:48:35.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.205" endtime="20201029 12:48:35.534"></status>
</kw>
<msg timestamp="20201029 12:48:35.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038869833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038941431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:35.202" endtime="20201029 12:48:35.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038869833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038941431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:35.544" endtime="20201029 12:48:35.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.562" endtime="20201029 12:48:35.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.195" endtime="20201029 12:48:35.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.190" endtime="20201029 12:48:35.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:35.579" level="INFO">${RESULT} = [{'diff': 7.159799999999911e-05}, {'diff': 7.086099999999845e-05}, {'diff': 7.136099999999895e-05}, {'diff': 7.100000000000162e-05}, {'diff': 7.062499999999777e-05}, {'diff': 7.147200000000298e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:35.571" endtime="20201029 12:48:35.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:35.590" level="INFO">${ACCURACY} = {'diff': [7.159799999999911e-05, 7.086099999999845e-05, 7.136099999999895e-05, 7.100000000000162e-05, 7.062499999999777e-05, 7.147200000000298e-05, 7.06109999999982e-05, 7.087499999999802e-05, 7.14019...</msg>
<status status="PASS" starttime="20201029 12:48:35.581" endtime="20201029 12:48:35.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.601" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:48:35.598" endtime="20201029 12:48:35.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.606" level="INFO">VALUE: [7.159799999999911e-05, 7.086099999999845e-05, 7.136099999999895e-05, 7.100000000000162e-05, 7.062499999999777e-05, 7.147200000000298e-05, 7.06109999999982e-05, 7.087499999999802e-05, 7.140199999999819e-05, 7.102800000000076e-05, 7.075000000000137e-05, 7.136099999999895e-05, 7.05559999999994e-05, 7.066600000000395e-05, 7.105500000000042e-05, 7.06109999999982e-05, 7.136099999999895e-05, 7.154200000000083e-05, 7.070900000000213e-05, 7.04030000000036e-05, 7.113799999999837e-05, 7.127799999999407e-05, 7.083299999999931e-05, 7.118000000000402e-05, 7.038800000000456e-05, 7.106999999999947e-05, 7.097300000000195e-05, 7.119500000000306e-05, 7.020800000000216e-05, 7.092999999999683e-05, 7.097200000000248e-05, 7.125000000000187e-05, 7.081999999999922e-05, 7.008299999999856e-05, 7.127800000000101e-05, 7.058299999999906e-05, 7.094400000000334e-05, 7.062499999999777e-05, 7.091700000000367e-05, 7.10559999999999e-05, 7.104200000000033e-05, 7.133299999999981e-05, 7.022200000000173e-05, 7.115300000000435e-05, 7.086100000000539e-05, 7.120899999999569e-05, 7.040299999999666e-05, 7.126400000000144e-05, 7.02360000000013e-05, 7.102800000000076e-05]</msg>
<status status="PASS" starttime="20201029 12:48:35.603" endtime="20201029 12:48:35.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.592" endtime="20201029 12:48:35.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:35.619" endtime="20201029 12:48:35.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.614" endtime="20201029 12:48:35.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.612" endtime="20201029 12:48:35.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.134" endtime="20201029 12:48:35.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.133" endtime="20201029 12:48:35.644"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.668" endtime="20201029 12:48:35.687"></status>
</kw>
<msg timestamp="20201029 12:48:35.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:35.664" endtime="20201029 12:48:35.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:35.690" endtime="20201029 12:48:35.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.696" endtime="20201029 12:48:35.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.657" endtime="20201029 12:48:35.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.651" endtime="20201029 12:48:35.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.720" endtime="20201029 12:48:36.049"></status>
</kw>
<msg timestamp="20201029 12:48:36.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041031194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041103222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:35.716" endtime="20201029 12:48:36.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041031194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041103222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:36.058" endtime="20201029 12:48:36.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.077" endtime="20201029 12:48:36.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.709" endtime="20201029 12:48:36.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.704" endtime="20201029 12:48:36.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:36.094" level="INFO">${RESULT} = [{'diff': 7.202800000000176e-05}, {'diff': 7.105500000000042e-05}, {'diff': 7.177799999999457e-05}, {'diff': 7.237499999999952e-05}, {'diff': 7.227700000000253e-05}, {'diff': 7.199999999999568e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:36.085" endtime="20201029 12:48:36.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:36.105" level="INFO">${ACCURACY} = {'diff': [7.202800000000176e-05, 7.105500000000042e-05, 7.177799999999457e-05, 7.237499999999952e-05, 7.227700000000253e-05, 7.199999999999568e-05, 7.166699999999748e-05, 7.238900000000603e-05, 7.2124...</msg>
<status status="PASS" starttime="20201029 12:48:36.096" endtime="20201029 12:48:36.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.116" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:48:36.114" endtime="20201029 12:48:36.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.121" level="INFO">VALUE: [7.202800000000176e-05, 7.105500000000042e-05, 7.177799999999457e-05, 7.237499999999952e-05, 7.227700000000253e-05, 7.199999999999568e-05, 7.166699999999748e-05, 7.238900000000603e-05, 7.212499999999927e-05, 7.237499999999952e-05, 7.119399999999665e-05, 7.198600000000305e-05, 7.242999999999833e-05, 7.163899999999834e-05, 7.236099999999995e-05, 7.227800000000201e-05, 7.125000000000187e-05, 7.251399999999575e-05, 7.230600000000115e-05, 7.168100000000399e-05, 7.075000000000137e-05, 7.195900000000338e-05, 7.208400000000004e-05, 7.220799999999722e-05, 7.220800000000416e-05, 7.183399999999979e-05, 7.198600000000305e-05, 7.125000000000187e-05, 7.076400000000094e-05, 7.16109999999992e-05, 7.177800000000151e-05, 7.236099999999995e-05, 7.090299999999716e-05, 7.180600000000065e-05, 7.159699999999963e-05, 7.216600000000545e-05, 7.247200000000398e-05, 7.209799999999961e-05, 7.226400000000244e-05, 7.14030000000046e-05, 7.181900000000074e-05, 7.202800000000176e-05, 7.076299999999452e-05, 7.158300000000006e-05, 7.212499999999927e-05, 7.187499999999902e-05, 7.17910000000016e-05, 7.213900000000578e-05, 7.254100000000235e-05, 7.24439999999979e-05]</msg>
<status status="PASS" starttime="20201029 12:48:36.118" endtime="20201029 12:48:36.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.107" endtime="20201029 12:48:36.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:36.134" endtime="20201029 12:48:36.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.130" endtime="20201029 12:48:36.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.127" endtime="20201029 12:48:36.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.646" endtime="20201029 12:48:36.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.645" endtime="20201029 12:48:36.159"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.181" endtime="20201029 12:48:36.200"></status>
</kw>
<msg timestamp="20201029 12:48:36.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:36.178" endtime="20201029 12:48:36.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:36.203" endtime="20201029 12:48:36.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.209" endtime="20201029 12:48:36.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.171" endtime="20201029 12:48:36.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.165" endtime="20201029 12:48:36.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.232" endtime="20201029 12:48:36.565"></status>
</kw>
<msg timestamp="20201029 12:48:36.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039156986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039229958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:36.229" endtime="20201029 12:48:36.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039156986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039229958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:36.574" endtime="20201029 12:48:36.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.593" endtime="20201029 12:48:36.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.222" endtime="20201029 12:48:36.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.217" endtime="20201029 12:48:36.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:36.610" level="INFO">${RESULT} = [{'diff': 7.297200000000448e-05}, {'diff': 7.307000000000147e-05}, {'diff': 7.284700000000088e-05}, {'diff': 7.315300000000635e-05}, {'diff': 7.266599999999901e-05}, {'diff': 7.176400000000194e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:36.602" endtime="20201029 12:48:36.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:36.620" level="INFO">${ACCURACY} = {'diff': [7.297200000000448e-05, 7.307000000000147e-05, 7.284700000000088e-05, 7.315300000000635e-05, 7.266599999999901e-05, 7.176400000000194e-05, 7.175000000000237e-05, 7.220899999999669e-05, 7.2875...</msg>
<status status="PASS" starttime="20201029 12:48:36.612" endtime="20201029 12:48:36.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.631" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:48:36.628" endtime="20201029 12:48:36.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.636" level="INFO">VALUE: [7.297200000000448e-05, 7.307000000000147e-05, 7.284700000000088e-05, 7.315300000000635e-05, 7.266599999999901e-05, 7.176400000000194e-05, 7.175000000000237e-05, 7.220899999999669e-05, 7.287500000000002e-05, 7.295899999999744e-05, 7.315199999999994e-05, 7.319399999999865e-05, 7.262499999999977e-05, 7.354199999999589e-05, 7.312500000000027e-05, 7.290299999999916e-05, 7.324999999999693e-05, 7.352800000000326e-05, 7.340299999999966e-05, 7.24439999999979e-05, 7.297299999999701e-05, 7.291699999999873e-05, 7.327800000000301e-05, 7.288899999999959e-05, 7.334699999999444e-05, 7.35560000000024e-05, 7.276400000000294e-05, 7.319399999999865e-05, 7.282000000000122e-05, 7.222200000000373e-05, 7.334700000000138e-05, 7.348599999999761e-05, 7.331900000000224e-05, 7.352799999999632e-05, 7.31110000000007e-05, 7.29309999999983e-05, 7.288800000000012e-05, 7.357000000000197e-05, 7.313899999999984e-05, 7.349999999999718e-05, 7.313899999999984e-05, 7.319499999999812e-05, 7.357000000000197e-05, 7.288899999999959e-05, 7.334699999999444e-05, 7.362500000000077e-05, 7.329200000000258e-05, 7.258299999999412e-05, 7.26110000000002e-05, 7.224999999999593e-05]</msg>
<status status="PASS" starttime="20201029 12:48:36.633" endtime="20201029 12:48:36.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.622" endtime="20201029 12:48:36.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:36.648" endtime="20201029 12:48:36.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.644" endtime="20201029 12:48:36.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.642" endtime="20201029 12:48:36.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.161" endtime="20201029 12:48:36.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.160" endtime="20201029 12:48:36.686"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.747" endtime="20201029 12:48:36.773"></status>
</kw>
<msg timestamp="20201029 12:48:36.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:36.740" endtime="20201029 12:48:36.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:36.778" endtime="20201029 12:48:36.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.788" endtime="20201029 12:48:36.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.708" endtime="20201029 12:48:36.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.697" endtime="20201029 12:48:36.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.825" endtime="20201029 12:48:37.165"></status>
</kw>
<msg timestamp="20201029 12:48:37.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.095522986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.09559725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:36.820" endtime="20201029 12:48:37.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.095522986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.09559725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:37.174" endtime="20201029 12:48:37.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.193" endtime="20201029 12:48:37.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.809" endtime="20201029 12:48:37.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.802" endtime="20201029 12:48:37.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:37.210" level="INFO">${RESULT} = [{'diff': 7.426399999999056e-05}, {'diff': 7.386100000000839e-05}, {'diff': 7.44719999999921e-05}, {'diff': 7.374999999999743e-05}, {'diff': 7.370800000000566e-05}, {'diff': 7.452800000000426e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:37.202" endtime="20201029 12:48:37.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:37.219" level="INFO">${ACCURACY} = {'diff': [7.426399999999056e-05, 7.386100000000839e-05, 7.44719999999921e-05, 7.374999999999743e-05, 7.370800000000566e-05, 7.452800000000426e-05, 7.458400000000254e-05, 7.426399999999056e-05, 7.39719...</msg>
<status status="PASS" starttime="20201029 12:48:37.212" endtime="20201029 12:48:37.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.230" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:48:37.228" endtime="20201029 12:48:37.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.236" level="INFO">VALUE: [7.426399999999056e-05, 7.386100000000839e-05, 7.44719999999921e-05, 7.374999999999743e-05, 7.370800000000566e-05, 7.452800000000426e-05, 7.458400000000254e-05, 7.426399999999056e-05, 7.39719999999916e-05, 7.422199999999879e-05, 7.424999999999793e-05, 7.337500000000052e-05, 7.340200000000019e-05, 7.358300000000206e-05, 7.417999999999314e-05, 7.451399999999775e-05, 7.387500000000102e-05, 7.363800000000087e-05, 7.415200000000788e-05, 7.37910000000036e-05, 7.443000000000033e-05, 7.408399999998816e-05, 7.448599999999861e-05, 7.394500000000581e-05, 7.454199999999689e-05, 7.422299999999826e-05, 7.274999999999643e-05, 7.40969999999952e-05, 7.391700000000667e-05, 7.387500000000102e-05, 7.398599999999811e-05, 7.290199999999969e-05, 7.381900000000274e-05, 7.42910000000041e-05, 7.41110000000017e-05, 7.398599999999811e-05, 7.45560000000034e-05, 7.322199999999779e-05, 7.452700000000478e-05, 7.431900000000324e-05, 7.427799999999707e-05, 7.395899999999844e-05, 7.358400000000154e-05, 7.359799999999417e-05, 7.433399999999535e-05, 7.376400000000394e-05, 7.451299999999828e-05, 7.395799999999897e-05, 7.384700000000188e-05, 7.451399999999775e-05]</msg>
<status status="PASS" starttime="20201029 12:48:37.233" endtime="20201029 12:48:37.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.221" endtime="20201029 12:48:37.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:37.250" endtime="20201029 12:48:37.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.244" endtime="20201029 12:48:37.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.241" endtime="20201029 12:48:37.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.689" endtime="20201029 12:48:37.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.687" endtime="20201029 12:48:37.275"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.297" endtime="20201029 12:48:37.316"></status>
</kw>
<msg timestamp="20201029 12:48:37.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:37.294" endtime="20201029 12:48:37.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:37.319" endtime="20201029 12:48:37.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.325" endtime="20201029 12:48:37.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.287" endtime="20201029 12:48:37.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.281" endtime="20201029 12:48:37.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.348" endtime="20201029 12:48:37.677"></status>
</kw>
<msg timestamp="20201029 12:48:37.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039027958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039102764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:37.345" endtime="20201029 12:48:37.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039027958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039102764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:37.687" endtime="20201029 12:48:37.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.706" endtime="20201029 12:48:37.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.338" endtime="20201029 12:48:37.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.333" endtime="20201029 12:48:37.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:37.723" level="INFO">${RESULT} = [{'diff': 7.480599999999671e-05}, {'diff': 7.557000000000397e-05}, {'diff': 7.515300000000141e-05}, {'diff': 7.479099999999766e-05}, {'diff': 7.490200000000169e-05}, {'diff': 7.52910000000051e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:37.714" endtime="20201029 12:48:37.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:37.734" level="INFO">${ACCURACY} = {'diff': [7.480599999999671e-05, 7.557000000000397e-05, 7.515300000000141e-05, 7.479099999999766e-05, 7.490200000000169e-05, 7.52910000000051e-05, 7.527799999999807e-05, 7.558300000000406e-05, 7.51110...</msg>
<status status="PASS" starttime="20201029 12:48:37.725" endtime="20201029 12:48:37.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.746" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:48:37.743" endtime="20201029 12:48:37.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.751" level="INFO">VALUE: [7.480599999999671e-05, 7.557000000000397e-05, 7.515300000000141e-05, 7.479099999999766e-05, 7.490200000000169e-05, 7.52910000000051e-05, 7.527799999999807e-05, 7.558300000000406e-05, 7.51110000000027e-05, 7.515200000000194e-05, 7.552799999999832e-05, 7.506899999999705e-05, 7.391699999999973e-05, 7.561099999999626e-05, 7.504099999999791e-05, 7.462500000000177e-05, 7.41110000000017e-05, 7.480499999999723e-05, 7.513900000000184e-05, 7.529099999999816e-05, 7.466700000000048e-05, 7.515200000000194e-05, 7.533299999999687e-05, 7.548599999999961e-05, 7.47360000000058e-05, 7.537500000000252e-05, 7.419399999999965e-05, 7.512499999999533e-05, 7.53189999999973e-05, 7.55969999999967e-05, 7.481900000000374e-05, 7.526400000000544e-05, 7.555500000000492e-05, 7.486099999999551e-05, 7.390300000000016e-05, 7.504199999999739e-05, 7.483399999999585e-05, 7.443000000000033e-05, 7.505499999999748e-05, 7.511099999999576e-05, 7.53189999999973e-05, 7.463900000000134e-05, 7.527800000000501e-05, 7.549999999999918e-05, 7.554199999999789e-05, 7.475000000000537e-05, 7.495799999999997e-05, 7.545800000000047e-05, 7.527799999999807e-05, 7.42360000000053e-05]</msg>
<status status="PASS" starttime="20201029 12:48:37.748" endtime="20201029 12:48:37.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.736" endtime="20201029 12:48:37.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:37.764" endtime="20201029 12:48:37.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.760" endtime="20201029 12:48:37.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.757" endtime="20201029 12:48:37.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.277" endtime="20201029 12:48:37.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.276" endtime="20201029 12:48:37.789"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.811" endtime="20201029 12:48:37.831"></status>
</kw>
<msg timestamp="20201029 12:48:37.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:37.808" endtime="20201029 12:48:37.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:37.834" endtime="20201029 12:48:37.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.840" endtime="20201029 12:48:37.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.801" endtime="20201029 12:48:37.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.795" endtime="20201029 12:48:37.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.863" endtime="20201029 12:48:38.193"></status>
</kw>
<msg timestamp="20201029 12:48:38.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039011583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039086639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:37.860" endtime="20201029 12:48:38.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039011583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039086639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:38.202" endtime="20201029 12:48:38.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.221" endtime="20201029 12:48:38.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.853" endtime="20201029 12:48:38.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.848" endtime="20201029 12:48:38.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:38.238" level="INFO">${RESULT} = [{'diff': 7.505599999999696e-05}, {'diff': 7.556999999999703e-05}, {'diff': 7.629199999999864e-05}, {'diff': 7.66110000000042e-05}, {'diff': 7.558300000000406e-05}, {'diff': 7.572200000000029e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:38.229" endtime="20201029 12:48:38.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:38.249" level="INFO">${ACCURACY} = {'diff': [7.505599999999696e-05, 7.556999999999703e-05, 7.629199999999864e-05, 7.66110000000042e-05, 7.558300000000406e-05, 7.572200000000029e-05, 7.595800000000097e-05, 7.581999999999728e-05, 7.61390...</msg>
<status status="PASS" starttime="20201029 12:48:38.240" endtime="20201029 12:48:38.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.260" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:48:38.257" endtime="20201029 12:48:38.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.265" level="INFO">VALUE: [7.505599999999696e-05, 7.556999999999703e-05, 7.629199999999864e-05, 7.66110000000042e-05, 7.558300000000406e-05, 7.572200000000029e-05, 7.595800000000097e-05, 7.581999999999728e-05, 7.613900000000284e-05, 7.630600000000515e-05, 7.516700000000098e-05, 7.618100000000155e-05, 7.595799999999403e-05, 7.587499999999608e-05, 7.627799999999907e-05, 7.622200000000079e-05, 7.581999999999728e-05, 7.612499999999633e-05, 7.570800000000072e-05, 7.579199999999814e-05, 7.63890000000031e-05, 7.523699999999883e-05, 7.579199999999814e-05, 7.659700000000463e-05, 7.584699999999694e-05, 7.629099999999917e-05, 7.638899999999615e-05, 7.631999999999778e-05, 7.579199999999814e-05, 7.630599999999821e-05, 7.523599999999936e-05, 7.651399999999975e-05, 7.590200000000269e-05, 7.565299999999497e-05, 7.56110000000032e-05, 7.60839999999971e-05, 7.637500000000352e-05, 7.579199999999814e-05, 7.58890000000026e-05, 7.573599999999986e-05, 7.60839999999971e-05, 7.654199999999889e-05, 7.608299999999762e-05, 7.651399999999975e-05, 7.636100000000395e-05, 7.524999999999893e-05, 7.618000000000208e-05, 7.486099999999551e-05, 7.631900000000524e-05, 7.612500000000327e-05]</msg>
<status status="PASS" starttime="20201029 12:48:38.262" endtime="20201029 12:48:38.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.251" endtime="20201029 12:48:38.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:38.278" endtime="20201029 12:48:38.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.273" endtime="20201029 12:48:38.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.271" endtime="20201029 12:48:38.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.791" endtime="20201029 12:48:38.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.790" endtime="20201029 12:48:38.302"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.325" endtime="20201029 12:48:38.344"></status>
</kw>
<msg timestamp="20201029 12:48:38.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:38.321" endtime="20201029 12:48:38.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:38.347" endtime="20201029 12:48:38.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.353" endtime="20201029 12:48:38.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.314" endtime="20201029 12:48:38.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.309" endtime="20201029 12:48:38.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.376" endtime="20201029 12:48:38.708"></status>
</kw>
<msg timestamp="20201029 12:48:38.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039118333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039195681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:38.373" endtime="20201029 12:48:38.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039118333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039195681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:38.717" endtime="20201029 12:48:38.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.736" endtime="20201029 12:48:38.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.366" endtime="20201029 12:48:38.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.361" endtime="20201029 12:48:38.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:38.753" level="INFO">${RESULT} = [{'diff': 7.734800000000486e-05}, {'diff': 7.72640000000005e-05}, {'diff': 7.752800000000032e-05}, {'diff': 7.574999999999943e-05}, {'diff': 7.704199999999939e-05}, {'diff': 7.70839999999981e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:38.744" endtime="20201029 12:48:38.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:38.763" level="INFO">${ACCURACY} = {'diff': [7.734800000000486e-05, 7.72640000000005e-05, 7.752800000000032e-05, 7.574999999999943e-05, 7.704199999999939e-05, 7.70839999999981e-05, 7.700000000000068e-05, 7.623600000000036e-05, 7.755599...</msg>
<status status="PASS" starttime="20201029 12:48:38.755" endtime="20201029 12:48:38.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.774" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:48:38.772" endtime="20201029 12:48:38.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.780" level="INFO">VALUE: [7.734800000000486e-05, 7.72640000000005e-05, 7.752800000000032e-05, 7.574999999999943e-05, 7.704199999999939e-05, 7.70839999999981e-05, 7.700000000000068e-05, 7.623600000000036e-05, 7.755599999999946e-05, 7.74440000000029e-05, 7.704199999999939e-05, 7.734800000000486e-05, 7.716700000000298e-05, 7.734699999999844e-05, 7.694500000000187e-05, 7.729100000000017e-05, 7.658299999999812e-05, 7.69440000000024e-05, 7.658299999999812e-05, 7.573599999999986e-05, 7.66110000000042e-05, 7.640199999999625e-05, 7.745900000000194e-05, 7.71389999999969e-05, 7.755499999999999e-05, 7.695900000000144e-05, 7.680599999999871e-05, 7.716700000000298e-05, 7.705500000000642e-05, 7.680499999999923e-05, 7.749999999999424e-05, 7.701400000000025e-05, 7.73189999999993e-05, 7.730600000000615e-05, 7.665299999999597e-05, 7.75839999999986e-05, 7.75839999999986e-05, 7.684699999999794e-05, 7.662500000000377e-05, 7.693099999999536e-05, 7.666700000000248e-05, 7.712500000000427e-05, 7.72640000000005e-05, 7.677799999999957e-05, 7.729199999999964e-05, 7.715300000000341e-05, 7.715200000000394e-05, 7.662499999999683e-05, 7.690300000000316e-05, 7.69440000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:48:38.777" endtime="20201029 12:48:38.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.765" endtime="20201029 12:48:38.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:38.793" endtime="20201029 12:48:38.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.789" endtime="20201029 12:48:38.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.786" endtime="20201029 12:48:38.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.304" endtime="20201029 12:48:38.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.303" endtime="20201029 12:48:38.818"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.841" endtime="20201029 12:48:38.861"></status>
</kw>
<msg timestamp="20201029 12:48:38.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:38.837" endtime="20201029 12:48:38.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:38.864" endtime="20201029 12:48:38.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.871" endtime="20201029 12:48:38.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.830" endtime="20201029 12:48:38.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.824" endtime="20201029 12:48:38.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.894" endtime="20201029 12:48:39.230"></status>
</kw>
<msg timestamp="20201029 12:48:39.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040985722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041063389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:38.891" endtime="20201029 12:48:39.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040985722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041063389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:39.240" endtime="20201029 12:48:39.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.258" endtime="20201029 12:48:39.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.884" endtime="20201029 12:48:39.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.879" endtime="20201029 12:48:39.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:39.275" level="INFO">${RESULT} = [{'diff': 7.766699999999654e-05}, {'diff': 7.72640000000005e-05}, {'diff': 7.826399999999456e-05}, {'diff': 7.822199999999585e-05}, {'diff': 7.768099999999611e-05}, {'diff': 7.829200000000064e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:39.267" endtime="20201029 12:48:39.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:39.285" level="INFO">${ACCURACY} = {'diff': [7.766699999999654e-05, 7.72640000000005e-05, 7.826399999999456e-05, 7.822199999999585e-05, 7.768099999999611e-05, 7.829200000000064e-05, 7.783399999999885e-05, 7.76110000000052e-05, 7.768099...</msg>
<status status="PASS" starttime="20201029 12:48:39.278" endtime="20201029 12:48:39.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.295" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:48:39.293" endtime="20201029 12:48:39.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.301" level="INFO">VALUE: [7.766699999999654e-05, 7.72640000000005e-05, 7.826399999999456e-05, 7.822199999999585e-05, 7.768099999999611e-05, 7.829200000000064e-05, 7.783399999999885e-05, 7.76110000000052e-05, 7.768099999999611e-05, 7.791700000000373e-05, 7.773600000000186e-05, 7.798600000000211e-05, 7.82640000000015e-05, 7.790299999999722e-05, 7.788899999999765e-05, 7.8151999999998e-05, 7.817999999999714e-05, 7.766599999999707e-05, 7.791600000000426e-05, 7.830500000000074e-05, 7.783299999999937e-05, 7.855600000000046e-05, 7.85839999999996e-05, 7.784699999999894e-05, 7.71110000000047e-05, 7.844499999999643e-05, 7.820800000000322e-05, 7.847200000000304e-05, 7.74310000000028e-05, 7.820900000000269e-05, 7.800000000000168e-05, 7.783399999999885e-05, 7.809799999999867e-05, 7.837499999999858e-05, 7.851399999999481e-05, 7.825000000000193e-05, 7.768100000000305e-05, 7.813799999999843e-05, 7.83049999999938e-05, 7.786099999999851e-05, 7.819399999999671e-05, 7.775000000000143e-05, 7.862499999999883e-05, 7.80969999999992e-05, 7.788899999999765e-05, 7.790300000000416e-05, 7.844499999999643e-05, 7.834699999999944e-05, 7.766599999999707e-05, 7.76110000000052e-05]</msg>
<status status="PASS" starttime="20201029 12:48:39.298" endtime="20201029 12:48:39.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.287" endtime="20201029 12:48:39.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:39.315" endtime="20201029 12:48:39.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.309" endtime="20201029 12:48:39.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.307" endtime="20201029 12:48:39.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.820" endtime="20201029 12:48:39.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.819" endtime="20201029 12:48:39.340"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.362" endtime="20201029 12:48:39.383"></status>
</kw>
<msg timestamp="20201029 12:48:39.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:39.359" endtime="20201029 12:48:39.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:39.386" endtime="20201029 12:48:39.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.392" endtime="20201029 12:48:39.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.352" endtime="20201029 12:48:39.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.346" endtime="20201029 12:48:39.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.417" endtime="20201029 12:48:39.759"></status>
</kw>
<msg timestamp="20201029 12:48:39.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039230639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039310181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:39.413" endtime="20201029 12:48:39.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039230639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039310181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:39.769" endtime="20201029 12:48:39.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.787" endtime="20201029 12:48:39.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.405" endtime="20201029 12:48:39.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.400" endtime="20201029 12:48:39.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:39.805" level="INFO">${RESULT} = [{'diff': 7.954200000000189e-05}, {'diff': 7.947200000000404e-05}, {'diff': 7.82640000000015e-05}, {'diff': 7.940300000000566e-05}, {'diff': 7.922199999999685e-05}, {'diff': 7.930500000000174e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:39.796" endtime="20201029 12:48:39.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:39.821" level="INFO">${ACCURACY} = {'diff': [7.954200000000189e-05, 7.947200000000404e-05, 7.82640000000015e-05, 7.940300000000566e-05, 7.922199999999685e-05, 7.930500000000174e-05, 7.877800000000157e-05, 7.943000000000533e-05, 7.92360...</msg>
<status status="PASS" starttime="20201029 12:48:39.807" endtime="20201029 12:48:39.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.832" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:48:39.829" endtime="20201029 12:48:39.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.837" level="INFO">VALUE: [7.954200000000189e-05, 7.947200000000404e-05, 7.82640000000015e-05, 7.940300000000566e-05, 7.922199999999685e-05, 7.930500000000174e-05, 7.877800000000157e-05, 7.943000000000533e-05, 7.923600000000336e-05, 7.883299999999344e-05, 7.809799999999867e-05, 7.900000000000268e-05, 7.82919999999937e-05, 7.937499999999958e-05, 7.927799999999513e-05, 7.87770000000021e-05, 7.955599999999452e-05, 7.811099999999876e-05, 7.808299999999962e-05, 7.904100000000192e-05, 7.906900000000106e-05, 7.879200000000114e-05, 7.873600000000286e-05, 7.877800000000157e-05, 7.955600000000146e-05, 7.919399999999771e-05, 7.893099999999736e-05, 7.809800000000561e-05, 7.930599999999427e-05, 7.96389999999994e-05, 7.768100000000305e-05, 7.930599999999427e-05, 7.895799999999703e-05, 7.936100000000001e-05, 7.86389999999984e-05, 7.925000000000293e-05, 7.894499999999693e-05, 7.902800000000182e-05, 7.930600000000121e-05, 7.89310000000043e-05, 7.859799999999917e-05, 7.952700000000285e-05, 7.923599999999642e-05, 7.952799999999538e-05, 7.944499999999743e-05, 7.948599999999667e-05, 7.870800000000372e-05, 7.9458999999997e-05, 7.948600000000361e-05, 7.869400000000415e-05]</msg>
<status status="PASS" starttime="20201029 12:48:39.834" endtime="20201029 12:48:39.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.822" endtime="20201029 12:48:39.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:39.849" endtime="20201029 12:48:39.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.845" endtime="20201029 12:48:39.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.843" endtime="20201029 12:48:39.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.342" endtime="20201029 12:48:39.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.341" endtime="20201029 12:48:39.874"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.897" endtime="20201029 12:48:39.918"></status>
</kw>
<msg timestamp="20201029 12:48:39.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:39.894" endtime="20201029 12:48:39.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:39.921" endtime="20201029 12:48:39.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.927" endtime="20201029 12:48:39.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.887" endtime="20201029 12:48:39.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.881" endtime="20201029 12:48:39.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.950" endtime="20201029 12:48:40.292"></status>
</kw>
<msg timestamp="20201029 12:48:40.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039348069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039428111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:39.947" endtime="20201029 12:48:40.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039348069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039428111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:40.302" endtime="20201029 12:48:40.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.320" endtime="20201029 12:48:40.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.940" endtime="20201029 12:48:40.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.935" endtime="20201029 12:48:40.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:40.337" level="INFO">${RESULT} = [{'diff': 8.004200000000239e-05}, {'diff': 7.96389999999994e-05}, {'diff': 7.99719999999976e-05}, {'diff': 7.970799999999778e-05}, {'diff': 7.955500000000199e-05}, {'diff': 7.977800000000257e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:40.329" endtime="20201029 12:48:40.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:40.348" level="INFO">${ACCURACY} = {'diff': [8.004200000000239e-05, 7.96389999999994e-05, 7.99719999999976e-05, 7.970799999999778e-05, 7.955500000000199e-05, 7.977800000000257e-05, 8.020799999999828e-05, 7.966699999999854e-05, 8.058299...</msg>
<status status="PASS" starttime="20201029 12:48:40.340" endtime="20201029 12:48:40.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.359" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:48:40.357" endtime="20201029 12:48:40.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.364" level="INFO">VALUE: [8.004200000000239e-05, 7.96389999999994e-05, 7.99719999999976e-05, 7.970799999999778e-05, 7.955500000000199e-05, 7.977800000000257e-05, 8.020799999999828e-05, 7.966699999999854e-05, 8.058299999999519e-05, 7.998599999999717e-05, 8.01389999999999e-05, 8.044499999999843e-05, 8.016599999999957e-05, 7.992999999999889e-05, 8.0152e-05, 7.970799999999778e-05, 8.034700000000145e-05, 7.873600000000286e-05, 8.016699999999904e-05, 7.995800000000497e-05, 7.988899999999965e-05, 7.984800000000042e-05, 8.054099999999648e-05, 8.037500000000058e-05, 7.961100000000026e-05, 8.036099999999408e-05, 7.972300000000376e-05, 7.970799999999778e-05, 7.874999999999549e-05, 7.965299999999897e-05, 7.968100000000505e-05, 7.970900000000419e-05, 7.923600000000336e-05, 8.019399999999871e-05, 7.984700000000094e-05, 8.0458999999998e-05, 8.017999999999914e-05, 8.044399999999896e-05, 8.044399999999896e-05, 7.999999999999674e-05, 8.061100000000126e-05, 8.051399999999681e-05, 7.986199999999999e-05, 8.037500000000058e-05, 8.016599999999957e-05, 8.055500000000299e-05, 8.044399999999896e-05, 7.99589999999975e-05, 8.019499999999818e-05, 8.054100000000342e-05]</msg>
<status status="PASS" starttime="20201029 12:48:40.361" endtime="20201029 12:48:40.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.350" endtime="20201029 12:48:40.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:40.382" endtime="20201029 12:48:40.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.378" endtime="20201029 12:48:40.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.375" endtime="20201029 12:48:40.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.877" endtime="20201029 12:48:40.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.875" endtime="20201029 12:48:40.408"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.430" endtime="20201029 12:48:40.451"></status>
</kw>
<msg timestamp="20201029 12:48:40.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:40.427" endtime="20201029 12:48:40.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:40.454" endtime="20201029 12:48:40.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.460" endtime="20201029 12:48:40.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.419" endtime="20201029 12:48:40.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.414" endtime="20201029 12:48:40.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.483" endtime="20201029 12:48:40.827"></status>
</kw>
<msg timestamp="20201029 12:48:40.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039519569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039600694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:40.480" endtime="20201029 12:48:40.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039519569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039600694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:40.837" endtime="20201029 12:48:40.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.856" endtime="20201029 12:48:40.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.473" endtime="20201029 12:48:40.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.468" endtime="20201029 12:48:40.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:40.873" level="INFO">${RESULT} = [{'diff': 8.112500000000133e-05}, {'diff': 8.145799999999953e-05}, {'diff': 7.973600000000386e-05}, {'diff': 8.138800000000168e-05}, {'diff': 8.087500000000108e-05}, {'diff': 8.118000000000014e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:40.864" endtime="20201029 12:48:40.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:40.882" level="INFO">${ACCURACY} = {'diff': [8.112500000000133e-05, 8.145799999999953e-05, 7.973600000000386e-05, 8.138800000000168e-05, 8.087500000000108e-05, 8.118000000000014e-05, 8.152800000000432e-05, 8.062500000000083e-05, 8.1290...</msg>
<status status="PASS" starttime="20201029 12:48:40.875" endtime="20201029 12:48:40.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.893" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:48:40.891" endtime="20201029 12:48:40.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.898" level="INFO">VALUE: [8.112500000000133e-05, 8.145799999999953e-05, 7.973600000000386e-05, 8.138800000000168e-05, 8.087500000000108e-05, 8.118000000000014e-05, 8.152800000000432e-05, 8.062500000000083e-05, 8.129099999999723e-05, 8.108299999999569e-05, 8.094399999999946e-05, 8.076399999999706e-05, 8.120799999999928e-05, 8.066600000000007e-05, 8.133300000000288e-05, 8.119499999999918e-05, 8.079200000000314e-05, 8.029099999999623e-05, 8.13190000000033e-05, 8.106900000000306e-05, 8.099999999999774e-05, 7.973600000000386e-05, 8.106899999999612e-05, 8.07770000000041e-05, 8.081899999999587e-05, 8.101399999999731e-05, 8.10269999999974e-05, 8.00970000000012e-05, 8.086100000000151e-05, 8.081899999999587e-05, 8.154200000000389e-05, 8.084800000000142e-05, 8.137500000000158e-05, 8.101299999999784e-05, 8.102799999999688e-05, 8.127699999999766e-05, 8.113799999999449e-05, 8.067999999999964e-05, 8.086100000000151e-05, 8.025000000000393e-05, 8.136100000000202e-05, 8.058299999999519e-05, 8.01389999999999e-05, 8.023599999999742e-05, 8.120899999999875e-05, 8.126399999999756e-05, 8.138900000000115e-05, 8.124999999999799e-05, 8.072199999999835e-05, 8.144399999999996e-05]</msg>
<status status="PASS" starttime="20201029 12:48:40.895" endtime="20201029 12:48:40.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.884" endtime="20201029 12:48:40.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:40.911" endtime="20201029 12:48:40.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.906" endtime="20201029 12:48:40.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.904" endtime="20201029 12:48:40.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.410" endtime="20201029 12:48:40.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.408" endtime="20201029 12:48:40.936"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.958" endtime="20201029 12:48:40.979"></status>
</kw>
<msg timestamp="20201029 12:48:40.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:40.955" endtime="20201029 12:48:40.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:40.982" endtime="20201029 12:48:40.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.988" endtime="20201029 12:48:40.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.948" endtime="20201029 12:48:40.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.942" endtime="20201029 12:48:40.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.012" endtime="20201029 12:48:41.342"></status>
</kw>
<msg timestamp="20201029 12:48:41.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040652222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040734458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:41.008" endtime="20201029 12:48:41.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040652222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040734458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:41.353" endtime="20201029 12:48:41.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.375" endtime="20201029 12:48:41.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.001" endtime="20201029 12:48:41.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.997" endtime="20201029 12:48:41.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:41.393" level="INFO">${RESULT} = [{'diff': 8.223599999999942e-05}, {'diff': 8.119399999999971e-05}, {'diff': 8.159699999999576e-05}, {'diff': 8.166700000000054e-05}, {'diff': 8.199999999999874e-05}, {'diff': 8.094399999999946e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:41.384" endtime="20201029 12:48:41.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:41.402" level="INFO">${ACCURACY} = {'diff': [8.223599999999942e-05, 8.119399999999971e-05, 8.159699999999576e-05, 8.166700000000054e-05, 8.199999999999874e-05, 8.094399999999946e-05, 8.179100000000467e-05, 8.170799999999978e-05, 8.1888...</msg>
<status status="PASS" starttime="20201029 12:48:41.395" endtime="20201029 12:48:41.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.413" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:48:41.411" endtime="20201029 12:48:41.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.419" level="INFO">VALUE: [8.223599999999942e-05, 8.119399999999971e-05, 8.159699999999576e-05, 8.166700000000054e-05, 8.199999999999874e-05, 8.094399999999946e-05, 8.179100000000467e-05, 8.170799999999978e-05, 8.188899999999472e-05, 8.19719999999996e-05, 8.224999999999899e-05, 8.220800000000028e-05, 8.21390000000019e-05, 8.205599999999702e-05, 8.238900000000215e-05, 8.251399999999881e-05, 8.194400000000046e-05, 8.22919999999977e-05, 8.176399999999806e-05, 8.186100000000252e-05, 8.206999999999659e-05, 8.169400000000021e-05, 8.186100000000252e-05, 8.234700000000345e-05, 8.237499999999565e-05, 8.198599999999917e-05, 8.194499999999993e-05, 8.24170000000013e-05, 8.250000000000618e-05, 8.23049999999978e-05, 8.222199999999985e-05, 8.252799999999838e-05, 8.240300000000172e-05, 8.251399999999881e-05, 8.220899999999975e-05, 8.227799999999813e-05, 8.215299999999454e-05, 8.213800000000243e-05, 8.170799999999978e-05, 8.252799999999838e-05, 8.188900000000165e-05, 8.19170000000008e-05, 8.220899999999975e-05, 8.252699999999891e-05, 8.201399999999831e-05, 8.211099999999583e-05, 8.24170000000013e-05, 8.216600000000157e-05, 8.201399999999831e-05, 8.180599999999677e-05]</msg>
<status status="PASS" starttime="20201029 12:48:41.415" endtime="20201029 12:48:41.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.404" endtime="20201029 12:48:41.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:41.433" endtime="20201029 12:48:41.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.427" endtime="20201029 12:48:41.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.424" endtime="20201029 12:48:41.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.938" endtime="20201029 12:48:41.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.937" endtime="20201029 12:48:41.458"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.480" endtime="20201029 12:48:41.501"></status>
</kw>
<msg timestamp="20201029 12:48:41.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:41.477" endtime="20201029 12:48:41.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:41.504" endtime="20201029 12:48:41.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.511" endtime="20201029 12:48:41.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.470" endtime="20201029 12:48:41.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.464" endtime="20201029 12:48:41.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.534" endtime="20201029 12:48:41.876"></status>
</kw>
<msg timestamp="20201029 12:48:41.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039210931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039294167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:41.530" endtime="20201029 12:48:41.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039210931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039294167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:41.886" endtime="20201029 12:48:41.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.904" endtime="20201029 12:48:41.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.523" endtime="20201029 12:48:41.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.519" endtime="20201029 12:48:41.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:41.921" level="INFO">${RESULT} = [{'diff': 8.323600000000042e-05}, {'diff': 8.277799999999863e-05}, {'diff': 8.311100000000377e-05}, {'diff': 8.343100000000186e-05}, {'diff': 8.208399999999616e-05}, {'diff': 8.191699999999386e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:41.913" endtime="20201029 12:48:41.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:41.932" level="INFO">${ACCURACY} = {'diff': [8.323600000000042e-05, 8.277799999999863e-05, 8.311100000000377e-05, 8.343100000000186e-05, 8.208399999999616e-05, 8.191699999999386e-05, 8.352799999999938e-05, 8.333299999999794e-05, 8.2569...</msg>
<status status="PASS" starttime="20201029 12:48:41.923" endtime="20201029 12:48:41.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.943" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:48:41.941" endtime="20201029 12:48:41.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.948" level="INFO">VALUE: [8.323600000000042e-05, 8.277799999999863e-05, 8.311100000000377e-05, 8.343100000000186e-05, 8.208399999999616e-05, 8.191699999999386e-05, 8.352799999999938e-05, 8.333299999999794e-05, 8.256999999999709e-05, 8.261100000000327e-05, 8.361100000000427e-05, 8.29170000000018e-05, 8.345800000000153e-05, 8.291600000000232e-05, 8.272200000000035e-05, 8.268000000000164e-05, 8.297300000000007e-05, 8.337499999999665e-05, 8.262500000000284e-05, 8.268000000000164e-05, 8.309699999999726e-05, 8.277799999999863e-05, 8.348600000000067e-05, 8.29170000000018e-05, 8.28190000000048e-05, 8.28049999999983e-05, 8.287500000000309e-05, 8.352800000000632e-05, 8.319400000000171e-05, 8.286099999999658e-05, 8.31249999999964e-05, 8.277799999999863e-05, 8.34720000000011e-05, 8.290200000000275e-05, 8.32369999999999e-05, 8.329099999999923e-05, 8.26799999999947e-05, 8.336200000000349e-05, 8.311100000000377e-05, 8.256999999999709e-05, 8.274999999999949e-05, 8.344500000000143e-05, 8.277799999999863e-05, 8.340300000000272e-05, 8.268100000000111e-05, 8.29590000000005e-05, 8.212500000000234e-05, 8.319500000000118e-05, 8.351399999999981e-05, 8.302799999999888e-05]</msg>
<status status="PASS" starttime="20201029 12:48:41.945" endtime="20201029 12:48:41.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.934" endtime="20201029 12:48:41.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:41.961" endtime="20201029 12:48:41.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.956" endtime="20201029 12:48:41.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.954" endtime="20201029 12:48:41.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.460" endtime="20201029 12:48:41.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.459" endtime="20201029 12:48:41.986"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.008" endtime="20201029 12:48:42.029"></status>
</kw>
<msg timestamp="20201029 12:48:42.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:42.005" endtime="20201029 12:48:42.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:42.033" endtime="20201029 12:48:42.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.039" endtime="20201029 12:48:42.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.998" endtime="20201029 12:48:42.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.992" endtime="20201029 12:48:42.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.062" endtime="20201029 12:48:42.405"></status>
</kw>
<msg timestamp="20201029 12:48:42.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039554958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039638917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:42.059" endtime="20201029 12:48:42.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039554958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039638917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:42.414" endtime="20201029 12:48:42.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.434" endtime="20201029 12:48:42.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.052" endtime="20201029 12:48:42.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.047" endtime="20201029 12:48:42.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:42.452" level="INFO">${RESULT} = [{'diff': 8.39590000000015e-05}, {'diff': 8.443099999999593e-05}, {'diff': 8.405599999999902e-05}, {'diff': 8.363899999999647e-05}, {'diff': 8.427800000000013e-05}, {'diff': 8.418100000000261e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:42.443" endtime="20201029 12:48:42.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:42.463" level="INFO">${ACCURACY} = {'diff': [8.39590000000015e-05, 8.443099999999593e-05, 8.405599999999902e-05, 8.363899999999647e-05, 8.427800000000013e-05, 8.418100000000261e-05, 8.444500000000243e-05, 8.390299999999629e-05, 8.45280...</msg>
<status status="PASS" starttime="20201029 12:48:42.454" endtime="20201029 12:48:42.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.474" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:48:42.471" endtime="20201029 12:48:42.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.479" level="INFO">VALUE: [8.39590000000015e-05, 8.443099999999593e-05, 8.405599999999902e-05, 8.363899999999647e-05, 8.427800000000013e-05, 8.418100000000261e-05, 8.444500000000243e-05, 8.390299999999629e-05, 8.452800000000038e-05, 8.433299999999894e-05, 8.39720000000016e-05, 8.390299999999629e-05, 8.456899999999962e-05, 8.405499999999955e-05, 8.365199999999656e-05, 8.368000000000264e-05, 8.423599999999448e-05, 8.41799999999962e-05, 8.44999999999943e-05, 8.454100000000048e-05, 8.401400000000031e-05, 8.37919999999992e-05, 8.436100000000502e-05, 8.381999999999834e-05, 8.324999999999999e-05, 8.388900000000366e-05, 8.41669999999961e-05, 8.375000000000049e-05, 8.437499999999765e-05, 8.413899999999697e-05, 8.454199999999995e-05, 8.398600000000117e-05, 8.372300000000082e-05, 8.433299999999894e-05, 8.426400000000056e-05, 8.415299999999654e-05, 8.419500000000218e-05, 8.401400000000031e-05, 8.444399999999602e-05, 8.415299999999654e-05, 8.377799999999963e-05, 8.46249999999979e-05, 8.398600000000117e-05, 8.423599999999448e-05, 8.398600000000117e-05, 8.418100000000261e-05, 8.369500000000168e-05, 8.401300000000084e-05, 8.366599999999613e-05, 8.372200000000135e-05]</msg>
<status status="PASS" starttime="20201029 12:48:42.476" endtime="20201029 12:48:42.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.465" endtime="20201029 12:48:42.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:42.492" endtime="20201029 12:48:42.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.487" endtime="20201029 12:48:42.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.485" endtime="20201029 12:48:42.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.988" endtime="20201029 12:48:42.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.987" endtime="20201029 12:48:42.517"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.540" endtime="20201029 12:48:42.561"></status>
</kw>
<msg timestamp="20201029 12:48:42.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:42.536" endtime="20201029 12:48:42.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:42.564" endtime="20201029 12:48:42.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.570" endtime="20201029 12:48:42.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.529" endtime="20201029 12:48:42.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.523" endtime="20201029 12:48:42.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.593" endtime="20201029 12:48:42.938"></status>
</kw>
<msg timestamp="20201029 12:48:42.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039550569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039635153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:42.590" endtime="20201029 12:48:42.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039550569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039635153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:42.947" endtime="20201029 12:48:42.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.966" endtime="20201029 12:48:42.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.583" endtime="20201029 12:48:42.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.578" endtime="20201029 12:48:42.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:42.983" level="INFO">${RESULT} = [{'diff': 8.458399999999866e-05}, {'diff': 8.481999999999934e-05}, {'diff': 8.50970000000062e-05}, {'diff': 8.502800000000088e-05}, {'diff': 8.466700000000354e-05}, {'diff': 8.536099999999908e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:42.974" endtime="20201029 12:48:42.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:42.993" level="INFO">${ACCURACY} = {'diff': [8.458399999999866e-05, 8.481999999999934e-05, 8.50970000000062e-05, 8.502800000000088e-05, 8.466700000000354e-05, 8.536099999999908e-05, 8.519499999999625e-05, 8.508299999999969e-05, 8.53050...</msg>
<status status="PASS" starttime="20201029 12:48:42.985" endtime="20201029 12:48:42.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.004" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:48:43.001" endtime="20201029 12:48:43.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.009" level="INFO">VALUE: [8.458399999999866e-05, 8.481999999999934e-05, 8.50970000000062e-05, 8.502800000000088e-05, 8.466700000000354e-05, 8.536099999999908e-05, 8.519499999999625e-05, 8.508299999999969e-05, 8.53050000000008e-05, 8.51669999999971e-05, 8.472200000000235e-05, 8.477700000000116e-05, 8.468000000000364e-05, 8.463899999999747e-05, 8.458299999999919e-05, 8.497199999999566e-05, 8.54720000000031e-05, 8.495800000000303e-05, 8.54170000000043e-05, 8.5152000000005e-05, 8.527700000000166e-05, 8.540299999999779e-05, 8.491699999999686e-05, 8.473599999999498e-05, 8.476400000000106e-05, 8.456999999999909e-05, 8.477700000000116e-05, 8.463899999999747e-05, 8.54999999999953e-05, 8.515299999999754e-05, 8.527800000000113e-05, 8.545800000000353e-05, 8.54999999999953e-05, 8.54999999999953e-05, 8.558399999999966e-05, 8.49999999999948e-05, 8.473600000000192e-05, 8.469399999999627e-05, 8.544400000000396e-05, 8.537499999999865e-05, 8.477800000000063e-05, 8.473600000000192e-05, 8.52920000000007e-05, 8.468099999999618e-05, 8.557000000000009e-05, 8.49590000000025e-05, 8.48050000000003e-05, 8.490200000000475e-05, 8.551400000000181e-05, 8.516700000000405e-05]</msg>
<status status="PASS" starttime="20201029 12:48:43.006" endtime="20201029 12:48:43.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.995" endtime="20201029 12:48:43.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:43.021" endtime="20201029 12:48:43.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.017" endtime="20201029 12:48:43.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.015" endtime="20201029 12:48:43.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.519" endtime="20201029 12:48:43.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.518" endtime="20201029 12:48:43.047"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.069" endtime="20201029 12:48:43.092"></status>
</kw>
<msg timestamp="20201029 12:48:43.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:43.066" endtime="20201029 12:48:43.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:43.095" endtime="20201029 12:48:43.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.101" endtime="20201029 12:48:43.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.059" endtime="20201029 12:48:43.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.053" endtime="20201029 12:48:43.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.124" endtime="20201029 12:48:43.465"></status>
</kw>
<msg timestamp="20201029 12:48:43.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040746514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040832528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:43.121" endtime="20201029 12:48:43.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040746514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040832528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:43.475" endtime="20201029 12:48:43.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.493" endtime="20201029 12:48:43.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.114" endtime="20201029 12:48:43.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.109" endtime="20201029 12:48:43.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:43.510" level="INFO">${RESULT} = [{'diff': 8.601400000000231e-05}, {'diff': 8.582000000000034e-05}, {'diff': 8.602800000000188e-05}, {'diff': 8.57920000000012e-05}, {'diff': 8.622200000000385e-05}, {'diff': 8.608300000000069e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:43.501" endtime="20201029 12:48:43.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:43.519" level="INFO">${ACCURACY} = {'diff': [8.601400000000231e-05, 8.582000000000034e-05, 8.602800000000188e-05, 8.57920000000012e-05, 8.622200000000385e-05, 8.608300000000069e-05, 8.505600000000002e-05, 8.611099999999983e-05, 8.62780...</msg>
<status status="PASS" starttime="20201029 12:48:43.512" endtime="20201029 12:48:43.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.530" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:48:43.528" endtime="20201029 12:48:43.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.535" level="INFO">VALUE: [8.601400000000231e-05, 8.582000000000034e-05, 8.602800000000188e-05, 8.57920000000012e-05, 8.622200000000385e-05, 8.608300000000069e-05, 8.505600000000002e-05, 8.611099999999983e-05, 8.627800000000213e-05, 8.619399999999777e-05, 8.577800000000163e-05, 8.525000000000199e-05, 8.63470000000005e-05, 8.582000000000034e-05, 8.538899999999822e-05, 8.568099999999718e-05, 8.615299999999854e-05, 8.633400000000041e-05, 8.588899999999872e-05, 8.648599999999673e-05, 8.605500000000155e-05, 8.54449999999965e-05, 8.61799999999982e-05, 8.566700000000455e-05, 8.648600000000367e-05, 8.56249999999989e-05, 8.626399999999562e-05, 8.58050000000013e-05, 8.655500000000205e-05, 8.602699999999547e-05, 8.641699999999836e-05, 8.56249999999989e-05, 8.568099999999718e-05, 8.633300000000094e-05, 8.475000000000149e-05, 8.620799999999734e-05, 8.615299999999854e-05, 8.59720000000036e-05, 8.473599999999498e-05, 8.636100000000008e-05, 8.577700000000216e-05, 8.620799999999734e-05, 8.555499999999411e-05, 8.525000000000199e-05, 8.573600000000292e-05, 8.637499999999965e-05, 8.654099999999554e-05, 8.65129999999964e-05, 8.661100000000033e-05, 8.637499999999965e-05]</msg>
<status status="PASS" starttime="20201029 12:48:43.532" endtime="20201029 12:48:43.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.521" endtime="20201029 12:48:43.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:43.549" endtime="20201029 12:48:43.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.544" endtime="20201029 12:48:43.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.541" endtime="20201029 12:48:43.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.049" endtime="20201029 12:48:43.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.048" endtime="20201029 12:48:43.575"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.597" endtime="20201029 12:48:43.618"></status>
</kw>
<msg timestamp="20201029 12:48:43.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:43.594" endtime="20201029 12:48:43.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:43.622" endtime="20201029 12:48:43.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.628" endtime="20201029 12:48:43.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.587" endtime="20201029 12:48:43.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.581" endtime="20201029 12:48:43.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.651" endtime="20201029 12:48:43.994"></status>
</kw>
<msg timestamp="20201029 12:48:44.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039457389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039544028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:43.648" endtime="20201029 12:48:44.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039457389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039544028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:44.004" endtime="20201029 12:48:44.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.022" endtime="20201029 12:48:44.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.641" endtime="20201029 12:48:44.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.636" endtime="20201029 12:48:44.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:44.039" level="INFO">${RESULT} = [{'diff': 8.663899999999947e-05}, {'diff': 8.71669999999991e-05}, {'diff': 8.672199999999741e-05}, {'diff': 8.702799999999594e-05}, {'diff': 8.731899999999543e-05}, {'diff': 8.593099999999743e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:44.030" endtime="20201029 12:48:44.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:44.050" level="INFO">${ACCURACY} = {'diff': [8.663899999999947e-05, 8.71669999999991e-05, 8.672199999999741e-05, 8.702799999999594e-05, 8.731899999999543e-05, 8.593099999999743e-05, 8.709800000000073e-05, 8.705600000000202e-05, 8.70420...</msg>
<status status="PASS" starttime="20201029 12:48:44.041" endtime="20201029 12:48:44.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.060" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:48:44.058" endtime="20201029 12:48:44.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.066" level="INFO">VALUE: [8.663899999999947e-05, 8.71669999999991e-05, 8.672199999999741e-05, 8.702799999999594e-05, 8.731899999999543e-05, 8.593099999999743e-05, 8.709800000000073e-05, 8.705600000000202e-05, 8.704200000000245e-05, 8.613899999999897e-05, 8.713899999999997e-05, 8.661100000000033e-05, 8.659800000000023e-05, 8.687500000000015e-05, 8.572300000000282e-05, 8.688899999999972e-05, 8.570799999999684e-05, 8.74999999999973e-05, 8.651400000000281e-05, 8.602800000000188e-05, 8.71250000000004e-05, 8.754200000000295e-05, 8.677800000000263e-05, 8.676399999999612e-05, 8.734800000000098e-05, 8.701400000000331e-05, 8.730600000000227e-05, 8.661100000000033e-05, 8.677799999999569e-05, 8.743000000000639e-05, 8.71250000000004e-05, 8.690300000000623e-05, 8.674999999999655e-05, 8.656900000000162e-05, 8.66249999999999e-05, 8.738900000000022e-05, 8.702799999999594e-05, 8.663899999999947e-05, 8.748599999999773e-05, 8.723599999999748e-05, 8.642999999999845e-05, 8.695799999999809e-05, 8.693000000000589e-05, 8.751400000000381e-05, 8.741599999999988e-05, 8.702700000000341e-05, 8.73050000000028e-05, 8.658299999999425e-05, 8.7332999999995e-05, 8.756899999999568e-05]</msg>
<status status="PASS" starttime="20201029 12:48:44.063" endtime="20201029 12:48:44.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.051" endtime="20201029 12:48:44.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:44.078" endtime="20201029 12:48:44.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.074" endtime="20201029 12:48:44.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.071" endtime="20201029 12:48:44.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.577" endtime="20201029 12:48:44.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.575" endtime="20201029 12:48:44.103"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.125" endtime="20201029 12:48:44.145"></status>
</kw>
<msg timestamp="20201029 12:48:44.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:44.122" endtime="20201029 12:48:44.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:44.148" endtime="20201029 12:48:44.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.154" endtime="20201029 12:48:44.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.115" endtime="20201029 12:48:44.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.109" endtime="20201029 12:48:44.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.177" endtime="20201029 12:48:44.507"></status>
</kw>
<msg timestamp="20201029 12:48:44.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0390925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039180333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:44.174" endtime="20201029 12:48:44.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0390925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039180333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:44.517" endtime="20201029 12:48:44.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.538" endtime="20201029 12:48:44.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.167" endtime="20201029 12:48:44.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.162" endtime="20201029 12:48:44.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:44.556" level="INFO">${RESULT} = [{'diff': 8.78329999999955e-05}, {'diff': 8.861099999999539e-05}, {'diff': 8.708299999999475e-05}, {'diff': 8.784700000000201e-05}, {'diff': 8.758299999999525e-05}, {'diff': 8.76669999999996e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:44.547" endtime="20201029 12:48:44.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:44.567" level="INFO">${ACCURACY} = {'diff': [8.78329999999955e-05, 8.861099999999539e-05, 8.708299999999475e-05, 8.784700000000201e-05, 8.758299999999525e-05, 8.76669999999996e-05, 8.804099999999704e-05, 8.845899999999907e-05, 8.790300...</msg>
<status status="PASS" starttime="20201029 12:48:44.558" endtime="20201029 12:48:44.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.578" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:48:44.576" endtime="20201029 12:48:44.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.583" level="INFO">VALUE: [8.78329999999955e-05, 8.861099999999539e-05, 8.708299999999475e-05, 8.784700000000201e-05, 8.758299999999525e-05, 8.76669999999996e-05, 8.804099999999704e-05, 8.845899999999907e-05, 8.790300000000029e-05, 8.765300000000004e-05, 8.805500000000355e-05, 8.848599999999873e-05, 8.859699999999582e-05, 8.808299999999575e-05, 8.813799999999455e-05, 8.788800000000124e-05, 8.84449999999995e-05, 8.76250000000009e-05, 8.787499999999421e-05, 8.79869999999977e-05, 8.7944999999999e-05, 8.83050000000038e-05, 8.776400000000406e-05, 8.787500000000115e-05, 8.813900000000097e-05, 8.852799999999744e-05, 8.843099999999993e-05, 8.787500000000115e-05, 8.786100000000158e-05, 8.723599999999748e-05, 8.707000000000159e-05, 8.84720000000061e-05, 8.690299999999929e-05, 8.819400000000671e-05, 8.827799999999719e-05, 8.784700000000201e-05, 8.759800000000123e-05, 8.82920000000037e-05, 8.84869999999982e-05, 8.856899999999668e-05, 8.77920000000032e-05, 8.838900000000122e-05, 8.847199999999916e-05, 8.765300000000004e-05, 8.819500000000619e-05, 8.724999999999705e-05, 8.776299999999765e-05, 8.84999999999983e-05, 8.81250000000014e-05, 8.819499999999925e-05]</msg>
<status status="PASS" starttime="20201029 12:48:44.580" endtime="20201029 12:48:44.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.569" endtime="20201029 12:48:44.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:44.596" endtime="20201029 12:48:44.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.592" endtime="20201029 12:48:44.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.589" endtime="20201029 12:48:44.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.105" endtime="20201029 12:48:44.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.104" endtime="20201029 12:48:44.621"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.644" endtime="20201029 12:48:44.663"></status>
</kw>
<msg timestamp="20201029 12:48:44.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:44.641" endtime="20201029 12:48:44.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:44.667" endtime="20201029 12:48:44.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.673" endtime="20201029 12:48:44.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.633" endtime="20201029 12:48:44.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.628" endtime="20201029 12:48:44.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.696" endtime="20201029 12:48:45.037"></status>
</kw>
<msg timestamp="20201029 12:48:45.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039611292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039700403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:44.693" endtime="20201029 12:48:45.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039611292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039700403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:45.046" endtime="20201029 12:48:45.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.065" endtime="20201029 12:48:45.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.686" endtime="20201029 12:48:45.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.681" endtime="20201029 12:48:45.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:45.082" level="INFO">${RESULT} = [{'diff': 8.911100000000283e-05}, {'diff': 8.952799999999844e-05}, {'diff': 8.927799999999819e-05}, {'diff': 8.943100000000093e-05}, {'diff': 8.893100000000043e-05}, {'diff': 8.911100000000283e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:45.073" endtime="20201029 12:48:45.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:45.091" level="INFO">${ACCURACY} = {'diff': [8.911100000000283e-05, 8.952799999999844e-05, 8.927799999999819e-05, 8.943100000000093e-05, 8.893100000000043e-05, 8.911100000000283e-05, 8.861100000000233e-05, 8.91529999999946e-05, 8.91389...</msg>
<status status="PASS" starttime="20201029 12:48:45.084" endtime="20201029 12:48:45.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.102" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:48:45.100" endtime="20201029 12:48:45.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.107" level="INFO">VALUE: [8.911100000000283e-05, 8.952799999999844e-05, 8.927799999999819e-05, 8.943100000000093e-05, 8.893100000000043e-05, 8.911100000000283e-05, 8.861100000000233e-05, 8.91529999999946e-05, 8.913899999999503e-05, 8.890300000000129e-05, 8.86670000000006e-05, 8.937500000000265e-05, 8.876399999999812e-05, 8.909700000000326e-05, 8.94999999999993e-05, 8.881899999999693e-05, 8.906999999999665e-05, 8.922199999999991e-05, 8.838900000000122e-05, 8.9332999999997e-05, 8.944400000000102e-05, 8.959699999999682e-05, 8.868100000000018e-05, 8.904199999999751e-05, 8.872199999999941e-05, 8.884700000000301e-05, 8.934699999999657e-05, 8.880600000000377e-05, 8.924999999999905e-05, 8.877799999999769e-05, 8.9332999999997e-05, 8.865300000000104e-05, 8.91250000000024e-05, 8.918100000000068e-05, 8.926399999999862e-05, 8.938900000000222e-05, 8.886100000000258e-05, 8.887500000000215e-05, 8.836099999999514e-05, 8.916600000000163e-05, 8.898599999999923e-05, 8.919400000000077e-05, 8.956899999999768e-05, 8.908400000000316e-05, 8.934699999999657e-05, 8.954199999999801e-05, 8.948599999999973e-05, 8.898599999999923e-05, 8.886099999999564e-05, 8.919400000000077e-05]</msg>
<status status="PASS" starttime="20201029 12:48:45.104" endtime="20201029 12:48:45.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.093" endtime="20201029 12:48:45.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:45.120" endtime="20201029 12:48:45.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.115" endtime="20201029 12:48:45.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.113" endtime="20201029 12:48:45.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.623" endtime="20201029 12:48:45.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.622" endtime="20201029 12:48:45.145"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.167" endtime="20201029 12:48:45.188"></status>
</kw>
<msg timestamp="20201029 12:48:45.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:45.164" endtime="20201029 12:48:45.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:45.191" endtime="20201029 12:48:45.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.197" endtime="20201029 12:48:45.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.156" endtime="20201029 12:48:45.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.151" endtime="20201029 12:48:45.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.220" endtime="20201029 12:48:45.551"></status>
</kw>
<msg timestamp="20201029 12:48:45.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040518653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040608333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:45.217" endtime="20201029 12:48:45.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040518653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040608333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:45.560" endtime="20201029 12:48:45.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.579" endtime="20201029 12:48:45.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.210" endtime="20201029 12:48:45.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.205" endtime="20201029 12:48:45.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:45.596" level="INFO">${RESULT} = [{'diff': 8.96800000000017e-05}, {'diff': 8.926399999999862e-05}, {'diff': 9.044400000000202e-05}, {'diff': 8.995800000000109e-05}, {'diff': 8.99999999999998e-05}, {'diff': 9.044400000000202e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:45.587" endtime="20201029 12:48:45.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:45.605" level="INFO">${ACCURACY} = {'diff': [8.96800000000017e-05, 8.926399999999862e-05, 9.044400000000202e-05, 8.995800000000109e-05, 8.99999999999998e-05, 9.044400000000202e-05, 8.976399999999912e-05, 9.027700000000666e-05, 8.959699...</msg>
<status status="PASS" starttime="20201029 12:48:45.598" endtime="20201029 12:48:45.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.616" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:48:45.614" endtime="20201029 12:48:45.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.621" level="INFO">VALUE: [8.96800000000017e-05, 8.926399999999862e-05, 9.044400000000202e-05, 8.995800000000109e-05, 8.99999999999998e-05, 9.044400000000202e-05, 8.976399999999912e-05, 9.027700000000666e-05, 8.959699999999682e-05, 8.987500000000315e-05, 9.048600000000073e-05, 8.959800000000323e-05, 9.01529999999956e-05, 8.99999999999998e-05, 8.991600000000238e-05, 9.006899999999818e-05, 9.038900000000322e-05, 8.943100000000093e-05, 8.895899999999957e-05, 9.045900000000107e-05, 8.977799999999869e-05, 9.009699999999732e-05, 9.013899999999603e-05, 9.004199999999851e-05, 9.038900000000322e-05, 9.009699999999732e-05, 9.002799999999894e-05, 9.03199999999979e-05, 9.038899999999628e-05, 9.052799999999944e-05, 8.99999999999998e-05, 8.943100000000093e-05, 9.041600000000288e-05, 8.893000000000095e-05, 9.052799999999944e-05, 8.983399999999697e-05, 8.908300000000369e-05, 9.019500000000125e-05, 8.98329999999975e-05, 8.963800000000299e-05, 9.041600000000288e-05, 9.045800000000159e-05, 9.031899999999843e-05, 9.026399999999962e-05, 9.005599999999808e-05, 8.96670000000016e-05, 8.969400000000127e-05, 9.043100000000193e-05, 9.048600000000073e-05, 8.991700000000186e-05]</msg>
<status status="PASS" starttime="20201029 12:48:45.618" endtime="20201029 12:48:45.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.607" endtime="20201029 12:48:45.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:45.635" endtime="20201029 12:48:45.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.629" endtime="20201029 12:48:45.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.627" endtime="20201029 12:48:45.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.147" endtime="20201029 12:48:45.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.145" endtime="20201029 12:48:45.660"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.683" endtime="20201029 12:48:45.702"></status>
</kw>
<msg timestamp="20201029 12:48:45.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:45.679" endtime="20201029 12:48:45.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:45.705" endtime="20201029 12:48:45.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.712" endtime="20201029 12:48:45.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.672" endtime="20201029 12:48:45.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.666" endtime="20201029 12:48:45.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.734" endtime="20201029 12:48:46.068"></status>
</kw>
<msg timestamp="20201029 12:48:46.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039283819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039375306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:45.731" endtime="20201029 12:48:46.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039283819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039375306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:46.078" endtime="20201029 12:48:46.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.096" endtime="20201029 12:48:46.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.724" endtime="20201029 12:48:46.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.720" endtime="20201029 12:48:46.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:46.113" level="INFO">${RESULT} = [{'diff': 9.14870000000012e-05}, {'diff': 9.088900000000372e-05}, {'diff': 9.08329999999985e-05}, {'diff': 9.130599999999933e-05}, {'diff': 9.159699999999882e-05}, {'diff': 9.102799999999994e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:46.105" endtime="20201029 12:48:46.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:46.124" level="INFO">${ACCURACY} = {'diff': [9.14870000000012e-05, 9.088900000000372e-05, 9.08329999999985e-05, 9.130599999999933e-05, 9.159699999999882e-05, 9.102799999999994e-05, 9.06670000000026e-05, 9.102799999999994e-05, 9.0973000...</msg>
<status status="PASS" starttime="20201029 12:48:46.115" endtime="20201029 12:48:46.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.135" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:48:46.132" endtime="20201029 12:48:46.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.140" level="INFO">VALUE: [9.14870000000012e-05, 9.088900000000372e-05, 9.08329999999985e-05, 9.130599999999933e-05, 9.159699999999882e-05, 9.102799999999994e-05, 9.06670000000026e-05, 9.102799999999994e-05, 9.097300000000114e-05, 9.11659999999967e-05, 9.14870000000012e-05, 9.102799999999994e-05, 9.159800000000523e-05, 9.090299999999635e-05, 9.109699999999832e-05, 8.990300000000229e-05, 9.129199999999976e-05, 9.115300000000354e-05, 9.137499999999771e-05, 9.151400000000087e-05, 9.102799999999994e-05, 9.076399999999318e-05, 9.104100000000004e-05, 9.042999999999551e-05, 9.11670000000031e-05, 9.083300000000544e-05, 9.137499999999771e-05, 9.109699999999832e-05, 9.154200000000001e-05, 9.063900000000347e-05, 9.136099999999814e-05, 9.133399999999847e-05, 9.151400000000087e-05, 9.073600000000098e-05, 9.108299999999875e-05, 9.044400000000202e-05, 9.105499999999961e-05, 9.070900000000132e-05, 9.080499999999936e-05, 9.127800000000019e-05, 9.118100000000268e-05, 9.102700000000047e-05, 9.113899999999703e-05, 9.109799999999779e-05, 9.070900000000132e-05, 9.154100000000054e-05, 9.144399999999608e-05, 9.061099999999739e-05, 9.086100000000458e-05, 9.129199999999976e-05]</msg>
<status status="PASS" starttime="20201029 12:48:46.137" endtime="20201029 12:48:46.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.125" endtime="20201029 12:48:46.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:46.152" endtime="20201029 12:48:46.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.148" endtime="20201029 12:48:46.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.146" endtime="20201029 12:48:46.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.662" endtime="20201029 12:48:46.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.661" endtime="20201029 12:48:46.177"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.200" endtime="20201029 12:48:46.219"></status>
</kw>
<msg timestamp="20201029 12:48:46.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:46.196" endtime="20201029 12:48:46.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:46.222" endtime="20201029 12:48:46.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.228" endtime="20201029 12:48:46.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.189" endtime="20201029 12:48:46.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.184" endtime="20201029 12:48:46.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.251" endtime="20201029 12:48:46.580"></status>
</kw>
<msg timestamp="20201029 12:48:46.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039000722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039092333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:46.248" endtime="20201029 12:48:46.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039000722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039092333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:46.590" endtime="20201029 12:48:46.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.608" endtime="20201029 12:48:46.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.241" endtime="20201029 12:48:46.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.236" endtime="20201029 12:48:46.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:46.625" level="INFO">${RESULT} = [{'diff': 9.161099999999839e-05}, {'diff': 9.163899999999753e-05}, {'diff': 9.179200000000026e-05}, {'diff': 9.20130000000019e-05}, {'diff': 9.224999999999511e-05}, {'diff': 9.184699999999907e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:46.616" endtime="20201029 12:48:46.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:46.636" level="INFO">${ACCURACY} = {'diff': [9.161099999999839e-05, 9.163899999999753e-05, 9.179200000000026e-05, 9.20130000000019e-05, 9.224999999999511e-05, 9.184699999999907e-05, 9.236100000000608e-05, 9.20000000000018e-05, 9.179200...</msg>
<status status="PASS" starttime="20201029 12:48:46.627" endtime="20201029 12:48:46.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.647" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:48:46.645" endtime="20201029 12:48:46.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.653" level="INFO">VALUE: [9.161099999999839e-05, 9.163899999999753e-05, 9.179200000000026e-05, 9.20130000000019e-05, 9.224999999999511e-05, 9.184699999999907e-05, 9.236100000000608e-05, 9.20000000000018e-05, 9.179200000000026e-05, 9.124999999999411e-05, 9.16250000000049e-05, 9.161099999999839e-05, 9.109700000000526e-05, 9.169499999999581e-05, 9.223699999999502e-05, 9.181899999999993e-05, 9.192999999999701e-05, 9.169500000000275e-05, 9.125000000000105e-05, 9.23199999999999e-05, 9.194399999999658e-05, 9.212499999999846e-05, 9.187499999999821e-05, 9.176400000000112e-05, 9.190199999999787e-05, 9.227799999999425e-05, 9.222199999999597e-05, 9.195799999999615e-05, 9.206999999999965e-05, 9.163899999999753e-05, 9.20000000000018e-05, 9.211099999999889e-05, 9.158299999999925e-05, 9.24859999999958e-05, 9.245900000000307e-05, 9.16670000000036e-05, 9.216600000000463e-05, 9.227800000000119e-05, 9.202800000000094e-05, 9.257000000000015e-05, 9.212499999999846e-05, 9.204200000000051e-05, 9.173600000000198e-05, 9.129100000000029e-05, 9.184699999999907e-05, 9.11250000000044e-05, 9.21800000000042e-05, 9.21800000000042e-05, 9.241700000000436e-05, 9.145799999999565e-05]</msg>
<status status="PASS" starttime="20201029 12:48:46.650" endtime="20201029 12:48:46.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.638" endtime="20201029 12:48:46.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:46.665" endtime="20201029 12:48:46.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.661" endtime="20201029 12:48:46.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.658" endtime="20201029 12:48:46.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.179" endtime="20201029 12:48:46.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.178" endtime="20201029 12:48:46.690"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.712" endtime="20201029 12:48:46.732"></status>
</kw>
<msg timestamp="20201029 12:48:46.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:46.709" endtime="20201029 12:48:46.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:46.735" endtime="20201029 12:48:46.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.741" endtime="20201029 12:48:46.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.702" endtime="20201029 12:48:46.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.696" endtime="20201029 12:48:46.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.764" endtime="20201029 12:48:47.108"></status>
</kw>
<msg timestamp="20201029 12:48:47.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039090722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039183736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:46.761" endtime="20201029 12:48:47.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039090722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039183736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:47.117" endtime="20201029 12:48:47.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.136" endtime="20201029 12:48:47.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.754" endtime="20201029 12:48:47.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.749" endtime="20201029 12:48:47.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:47.153" level="INFO">${RESULT} = [{'diff': 9.301399999999543e-05}, {'diff': 9.318100000000468e-05}, {'diff': 9.309799999999979e-05}, {'diff': 9.308400000000022e-05}, {'diff': 9.206999999999965e-05}, {'diff': 9.337499999999971e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:47.145" endtime="20201029 12:48:47.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:47.162" level="INFO">${ACCURACY} = {'diff': [9.301399999999543e-05, 9.318100000000468e-05, 9.309799999999979e-05, 9.308400000000022e-05, 9.206999999999965e-05, 9.337499999999971e-05, 9.333299999999406e-05, 9.269499999999681e-05, 9.3180...</msg>
<status status="PASS" starttime="20201029 12:48:47.155" endtime="20201029 12:48:47.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.173" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:48:47.171" endtime="20201029 12:48:47.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.178" level="INFO">VALUE: [9.301399999999543e-05, 9.318100000000468e-05, 9.309799999999979e-05, 9.308400000000022e-05, 9.206999999999965e-05, 9.337499999999971e-05, 9.333299999999406e-05, 9.269499999999681e-05, 9.318099999999774e-05, 9.288899999999878e-05, 9.307000000000065e-05, 9.2333e-05, 9.302699999999553e-05, 9.3333000000001e-05, 9.358299999999431e-05, 9.355500000000211e-05, 9.266700000000461e-05, 9.279200000000126e-05, 9.209699999999932e-05, 9.319399999999783e-05, 9.319399999999783e-05, 9.288899999999878e-05, 9.345799999999765e-05, 9.263900000000547e-05, 9.33200000000009e-05, 9.297199999999672e-05, 9.225000000000205e-05, 9.209699999999932e-05, 9.31529999999986e-05, 9.313799999999955e-05, 9.305500000000161e-05, 9.287499999999921e-05, 9.336100000000014e-05, 9.299999999999586e-05, 9.262499999999896e-05, 9.298600000000323e-05, 9.345799999999765e-05, 9.34859999999968e-05, 9.28200000000004e-05, 9.311199999999936e-05, 9.347300000000364e-05, 9.325000000000305e-05, 9.194399999999658e-05, 9.333400000000047e-05, 9.322299999999645e-05, 9.354200000000201e-05, 9.211099999999889e-05, 9.352800000000244e-05, 9.301400000000237e-05, 9.304199999999457e-05]</msg>
<status status="PASS" starttime="20201029 12:48:47.175" endtime="20201029 12:48:47.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.164" endtime="20201029 12:48:47.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:47.191" endtime="20201029 12:48:47.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.187" endtime="20201029 12:48:47.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.184" endtime="20201029 12:48:47.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.692" endtime="20201029 12:48:47.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.691" endtime="20201029 12:48:47.216"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.238" endtime="20201029 12:48:47.259"></status>
</kw>
<msg timestamp="20201029 12:48:47.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:47.235" endtime="20201029 12:48:47.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:47.263" endtime="20201029 12:48:47.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.269" endtime="20201029 12:48:47.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.228" endtime="20201029 12:48:47.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.222" endtime="20201029 12:48:47.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.292" endtime="20201029 12:48:47.621"></status>
</kw>
<msg timestamp="20201029 12:48:47.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040566861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040661167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:47.289" endtime="20201029 12:48:47.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040566861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040661167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:47.630" endtime="20201029 12:48:47.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.649" endtime="20201029 12:48:47.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.282" endtime="20201029 12:48:47.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.277" endtime="20201029 12:48:47.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:47.666" level="INFO">${RESULT} = [{'diff': 9.43059999999954e-05}, {'diff': 9.447199999999822e-05}, {'diff': 9.412500000000046e-05}, {'diff': 9.311099999999989e-05}, {'diff': 9.463900000000053e-05}, {'diff': 9.408399999999428e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:47.657" endtime="20201029 12:48:47.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:47.675" level="INFO">${ACCURACY} = {'diff': [9.43059999999954e-05, 9.447199999999822e-05, 9.412500000000046e-05, 9.311099999999989e-05, 9.463900000000053e-05, 9.408399999999428e-05, 9.324999999999611e-05, 9.408300000000175e-05, 9.44720...</msg>
<status status="PASS" starttime="20201029 12:48:47.668" endtime="20201029 12:48:47.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.685" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:48:47.683" endtime="20201029 12:48:47.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.691" level="INFO">VALUE: [9.43059999999954e-05, 9.447199999999822e-05, 9.412500000000046e-05, 9.311099999999989e-05, 9.463900000000053e-05, 9.408399999999428e-05, 9.324999999999611e-05, 9.408300000000175e-05, 9.447200000000516e-05, 9.424999999999711e-05, 9.4333000000002e-05, 9.406900000000218e-05, 9.431900000000243e-05, 9.308300000000075e-05, 9.425000000000405e-05, 9.451399999999693e-05, 9.412500000000046e-05, 9.452800000000344e-05, 9.370800000000484e-05, 9.447199999999822e-05, 9.277800000000169e-05, 9.380500000000236e-05, 9.447199999999822e-05, 9.370899999999738e-05, 9.451399999999693e-05, 9.437500000000071e-05, 9.423600000000448e-05, 9.422200000000491e-05, 9.369400000000527e-05, 9.386100000000064e-05, 9.386100000000064e-05, 9.452800000000344e-05, 9.384700000000107e-05, 9.445799999999865e-05, 9.380500000000236e-05, 9.455599999999564e-05, 9.426400000000362e-05, 9.433400000000147e-05, 9.40130000000039e-05, 9.394399999999858e-05, 9.38059999999949e-05, 9.438900000000028e-05, 9.307000000000065e-05, 9.451399999999693e-05, 9.416699999999917e-05, 9.374999999999661e-05, 9.359800000000029e-05, 9.326299999999621e-05, 9.379100000000279e-05, 9.415200000000012e-05]</msg>
<status status="PASS" starttime="20201029 12:48:47.688" endtime="20201029 12:48:47.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.676" endtime="20201029 12:48:47.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:47.705" endtime="20201029 12:48:47.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.699" endtime="20201029 12:48:47.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.697" endtime="20201029 12:48:47.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.218" endtime="20201029 12:48:47.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.217" endtime="20201029 12:48:47.730"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.752" endtime="20201029 12:48:47.772"></status>
</kw>
<msg timestamp="20201029 12:48:47.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:47.749" endtime="20201029 12:48:47.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:47.775" endtime="20201029 12:48:47.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.781" endtime="20201029 12:48:47.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.742" endtime="20201029 12:48:47.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.736" endtime="20201029 12:48:47.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.804" endtime="20201029 12:48:48.132"></status>
</kw>
<msg timestamp="20201029 12:48:48.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039140944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039235569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:47.801" endtime="20201029 12:48:48.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039140944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039235569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:48.141" endtime="20201029 12:48:48.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.160" endtime="20201029 12:48:48.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.794" endtime="20201029 12:48:48.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.789" endtime="20201029 12:48:48.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:48.176" level="INFO">${RESULT} = [{'diff': 9.462500000000096e-05}, {'diff': 9.505600000000308e-05}, {'diff': 9.495899999999863e-05}, {'diff': 9.494499999999906e-05}, {'diff': 9.473599999999804e-05}, {'diff': 9.55279999999975e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:48.168" endtime="20201029 12:48:48.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:48.187" level="INFO">${ACCURACY} = {'diff': [9.462500000000096e-05, 9.505600000000308e-05, 9.495899999999863e-05, 9.494499999999906e-05, 9.473599999999804e-05, 9.55279999999975e-05, 9.374999999999661e-05, 9.555500000000411e-05, 9.46250...</msg>
<status status="PASS" starttime="20201029 12:48:48.179" endtime="20201029 12:48:48.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.198" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:48:48.196" endtime="20201029 12:48:48.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.203" level="INFO">VALUE: [9.462500000000096e-05, 9.505600000000308e-05, 9.495899999999863e-05, 9.494499999999906e-05, 9.473599999999804e-05, 9.55279999999975e-05, 9.374999999999661e-05, 9.555500000000411e-05, 9.462500000000096e-05, 9.480499999999642e-05, 9.497199999999872e-05, 9.547199999999922e-05, 9.55279999999975e-05, 9.504200000000351e-05, 9.543000000000051e-05, 9.547199999999922e-05, 9.55279999999975e-05, 9.486100000000164e-05, 9.519399999999983e-05, 9.526399999999768e-05, 9.518099999999974e-05, 9.555500000000411e-05, 9.479099999999685e-05, 9.543099999999999e-05, 9.531999999999596e-05, 9.537499999999477e-05, 9.505600000000308e-05, 9.511100000000189e-05, 9.543099999999999e-05, 9.466699999999967e-05, 9.527699999999778e-05, 9.391599999999944e-05, 9.487500000000121e-05, 9.501399999999743e-05, 9.479100000000379e-05, 9.545799999999965e-05, 9.505599999999614e-05, 9.462500000000096e-05, 9.409799999999385e-05, 9.527800000000419e-05, 9.476400000000412e-05, 9.516700000000017e-05, 9.538899999999434e-05, 9.411099999999395e-05, 9.558299999999631e-05, 9.509799999999485e-05, 9.375000000000355e-05, 9.509699999999538e-05, 9.48330000000025e-05, 9.497199999999872e-05]</msg>
<status status="PASS" starttime="20201029 12:48:48.200" endtime="20201029 12:48:48.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.189" endtime="20201029 12:48:48.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:48.216" endtime="20201029 12:48:48.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.211" endtime="20201029 12:48:48.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.209" endtime="20201029 12:48:48.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.732" endtime="20201029 12:48:48.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.731" endtime="20201029 12:48:48.240"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.263" endtime="20201029 12:48:48.282"></status>
</kw>
<msg timestamp="20201029 12:48:48.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:48.260" endtime="20201029 12:48:48.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:48.286" endtime="20201029 12:48:48.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.292" endtime="20201029 12:48:48.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.252" endtime="20201029 12:48:48.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.247" endtime="20201029 12:48:48.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.315" endtime="20201029 12:48:48.643"></status>
</kw>
<msg timestamp="20201029 12:48:48.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038985764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039082083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:48.312" endtime="20201029 12:48:48.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038985764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039082083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:48.653" endtime="20201029 12:48:48.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.671" endtime="20201029 12:48:48.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.305" endtime="20201029 12:48:48.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.300" endtime="20201029 12:48:48.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:48.688" level="INFO">${RESULT} = [{'diff': 9.631899999999749e-05}, {'diff': 9.637499999999577e-05}, {'diff': 9.641699999999448e-05}, {'diff': 9.613900000000203e-05}, {'diff': 9.523599999999854e-05}, {'diff': 9.506899999999624e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:48.679" endtime="20201029 12:48:48.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:48.699" level="INFO">${ACCURACY} = {'diff': [9.631899999999749e-05, 9.637499999999577e-05, 9.641699999999448e-05, 9.613900000000203e-05, 9.523599999999854e-05, 9.506899999999624e-05, 9.611099999999595e-05, 9.543099999999999e-05, 9.5861...</msg>
<status status="PASS" starttime="20201029 12:48:48.690" endtime="20201029 12:48:48.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.710" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:48:48.707" endtime="20201029 12:48:48.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.715" level="INFO">VALUE: [9.631899999999749e-05, 9.637499999999577e-05, 9.641699999999448e-05, 9.613900000000203e-05, 9.523599999999854e-05, 9.506899999999624e-05, 9.611099999999595e-05, 9.543099999999999e-05, 9.586199999999517e-05, 9.59859999999993e-05, 9.634700000000357e-05, 9.618100000000074e-05, 9.651399999999893e-05, 9.618000000000126e-05, 9.616699999999423e-05, 9.59859999999993e-05, 9.584699999999613e-05, 9.622300000000639e-05, 9.586100000000264e-05, 9.631899999999749e-05, 9.565200000000162e-05, 9.654199999999807e-05, 9.663899999999559e-05, 9.599999999999886e-05, 9.6333000000004e-05, 9.569400000000033e-05, 9.56530000000011e-05, 9.608399999999628e-05, 9.570899999999938e-05, 9.512500000000146e-05, 9.580499999999742e-05, 9.559699999999588e-05, 9.569499999999981e-05, 9.574999999999861e-05, 9.604199999999757e-05, 9.58609999999957e-05, 9.540300000000085e-05, 9.634700000000357e-05, 9.47079999999989e-05, 9.581900000000393e-05, 9.559699999999588e-05, 9.66530000000021e-05, 9.658300000000425e-05, 9.647200000000022e-05, 9.634699999999663e-05, 9.569400000000033e-05, 9.613899999999509e-05, 9.623599999999954e-05, 9.627699999999878e-05, 9.58609999999957e-05]</msg>
<status status="PASS" starttime="20201029 12:48:48.712" endtime="20201029 12:48:48.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.701" endtime="20201029 12:48:48.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:48.727" endtime="20201029 12:48:48.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.723" endtime="20201029 12:48:48.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.721" endtime="20201029 12:48:48.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.243" endtime="20201029 12:48:48.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.241" endtime="20201029 12:48:48.752"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.775" endtime="20201029 12:48:48.796"></status>
</kw>
<msg timestamp="20201029 12:48:48.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:48.771" endtime="20201029 12:48:48.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:48.799" endtime="20201029 12:48:48.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.806" endtime="20201029 12:48:48.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.764" endtime="20201029 12:48:48.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.758" endtime="20201029 12:48:48.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.828" endtime="20201029 12:48:49.173"></status>
</kw>
<msg timestamp="20201029 12:48:49.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038967514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039064181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:48.825" endtime="20201029 12:48:49.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038967514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039064181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:49.183" endtime="20201029 12:48:49.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.201" endtime="20201029 12:48:49.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.818" endtime="20201029 12:48:49.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.814" endtime="20201029 12:48:49.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:49.218" level="INFO">${RESULT} = [{'diff': 9.666700000000167e-05}, {'diff': 9.745900000000113e-05}, {'diff': 9.754199999999907e-05}, {'diff': 9.73479999999971e-05}, {'diff': 9.681999999999746e-05}, {'diff': 9.66530000000021e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:49.209" endtime="20201029 12:48:49.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:49.227" level="INFO">${ACCURACY} = {'diff': [9.666700000000167e-05, 9.745900000000113e-05, 9.754199999999907e-05, 9.73479999999971e-05, 9.681999999999746e-05, 9.66530000000021e-05, 9.738900000000328e-05, 9.743100000000199e-05, 9.750000...</msg>
<status status="PASS" starttime="20201029 12:48:49.220" endtime="20201029 12:48:49.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.238" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:48:49.236" endtime="20201029 12:48:49.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.243" level="INFO">VALUE: [9.666700000000167e-05, 9.745900000000113e-05, 9.754199999999907e-05, 9.73479999999971e-05, 9.681999999999746e-05, 9.66530000000021e-05, 9.738900000000328e-05, 9.743100000000199e-05, 9.750000000000036e-05, 9.768100000000224e-05, 9.640299999999491e-05, 9.694400000000158e-05, 9.577799999999775e-05, 9.684699999999713e-05, 9.609699999999638e-05, 9.747200000000122e-05, 9.658299999999731e-05, 9.745900000000113e-05, 9.669400000000133e-05, 9.675000000000655e-05, 9.74730000000007e-05, 9.751399999999993e-05, 9.759699999999788e-05, 9.751399999999993e-05, 9.690300000000235e-05, 9.755599999999864e-05, 9.67359999999931e-05, 9.698699999999977e-05, 9.661099999999645e-05, 9.758400000000472e-05, 9.688900000000278e-05, 9.691600000000244e-05, 9.695900000000063e-05, 9.69159999999955e-05, 9.755600000000558e-05, 9.738899999999634e-05, 9.716700000000217e-05, 9.730499999999892e-05, 9.718000000000226e-05, 9.758399999999778e-05, 9.681899999999799e-05, 9.722200000000097e-05, 9.716599999999576e-05, 9.663899999999559e-05, 9.667999999999483e-05, 9.680600000000483e-05, 9.668100000000124e-05, 9.727799999999925e-05, 9.709699999999738e-05, 9.663899999999559e-05]</msg>
<status status="PASS" starttime="20201029 12:48:49.240" endtime="20201029 12:48:49.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.229" endtime="20201029 12:48:49.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:49.256" endtime="20201029 12:48:49.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.252" endtime="20201029 12:48:49.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.249" endtime="20201029 12:48:49.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.754" endtime="20201029 12:48:49.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.753" endtime="20201029 12:48:49.281"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.303" endtime="20201029 12:48:49.326"></status>
</kw>
<msg timestamp="20201029 12:48:49.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:49.300" endtime="20201029 12:48:49.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:49.330" endtime="20201029 12:48:49.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.336" endtime="20201029 12:48:49.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.293" endtime="20201029 12:48:49.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.287" endtime="20201029 12:48:49.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.359" endtime="20201029 12:48:49.700"></status>
</kw>
<msg timestamp="20201029 12:48:49.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040784111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040881139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:49.356" endtime="20201029 12:48:49.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040784111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040881139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:49.710" endtime="20201029 12:48:49.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.728" endtime="20201029 12:48:49.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.349" endtime="20201029 12:48:49.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.344" endtime="20201029 12:48:49.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:49.745" level="INFO">${RESULT} = [{'diff': 9.7027999999999e-05}, {'diff': 9.790299999999641e-05}, {'diff': 9.82080000000024e-05}, {'diff': 9.816700000000317e-05}, {'diff': 9.849999999999443e-05}, {'diff': 9.791700000000292e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:48:49.736" endtime="20201029 12:48:49.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:49.754" level="INFO">${ACCURACY} = {'diff': [9.7027999999999e-05, 9.790299999999641e-05, 9.82080000000024e-05, 9.816700000000317e-05, 9.849999999999443e-05, 9.791700000000292e-05, 9.769500000000181e-05, 9.78059999999989e-05, 9.85000000...</msg>
<status status="PASS" starttime="20201029 12:48:49.747" endtime="20201029 12:48:49.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.765" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:48:49.763" endtime="20201029 12:48:49.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.770" level="INFO">VALUE: [9.7027999999999e-05, 9.790299999999641e-05, 9.82080000000024e-05, 9.816700000000317e-05, 9.849999999999443e-05, 9.791700000000292e-05, 9.769500000000181e-05, 9.78059999999989e-05, 9.850000000000136e-05, 9.790300000000335e-05, 9.78609999999977e-05, 9.855599999999964e-05, 9.793000000000301e-05, 9.84860000000018e-05, 9.820799999999547e-05, 9.788899999999684e-05, 9.770900000000138e-05, 9.790299999999641e-05, 9.840299999999691e-05, 9.783399999999803e-05, 9.726399999999968e-05, 9.726399999999968e-05, 9.800000000000086e-05, 9.838900000000428e-05, 9.859699999999888e-05, 9.766699999999573e-05, 9.816700000000317e-05, 9.854099999999366e-05, 9.827800000000025e-05, 9.788899999999684e-05, 9.848599999999486e-05, 9.759699999999788e-05, 9.772200000000147e-05, 9.843000000000351e-05, 9.837499999999777e-05, 9.797299999999426e-05, 9.840299999999691e-05, 9.791699999999598e-05, 9.855599999999964e-05, 9.779099999999985e-05, 9.850000000000136e-05, 9.852700000000103e-05, 9.851400000000093e-05, 9.81660000000037e-05, 9.838900000000428e-05, 9.68479999999966e-05, 9.695799999999422e-05, 9.826400000000068e-05, 9.694400000000158e-05, 9.78059999999989e-05]</msg>
<status status="PASS" starttime="20201029 12:48:49.767" endtime="20201029 12:48:49.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.756" endtime="20201029 12:48:49.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:49.788" endtime="20201029 12:48:49.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.779" endtime="20201029 12:48:49.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.776" endtime="20201029 12:48:49.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.283" endtime="20201029 12:48:49.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.282" endtime="20201029 12:48:49.814"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.836" endtime="20201029 12:48:49.856"></status>
</kw>
<msg timestamp="20201029 12:48:49.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:49.833" endtime="20201029 12:48:49.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:49.859" endtime="20201029 12:48:49.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.865" endtime="20201029 12:48:49.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.825" endtime="20201029 12:48:49.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.820" endtime="20201029 12:48:49.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.888" endtime="20201029 12:48:50.216"></status>
</kw>
<msg timestamp="20201029 12:48:50.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039059458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039158375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:49.885" endtime="20201029 12:48:50.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039059458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039158375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:50.225" endtime="20201029 12:48:50.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.244" endtime="20201029 12:48:50.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.878" endtime="20201029 12:48:50.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.873" endtime="20201029 12:48:50.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:50.261" level="INFO">${RESULT} = [{'diff': 9.891700000000392e-05}, {'diff': 9.806899999999924e-05}, {'diff': 9.927800000000125e-05}, {'diff': 9.951400000000193e-05}, {'diff': 9.870900000000238e-05}, {'diff': 9.948599999999586e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:50.252" endtime="20201029 12:48:50.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:50.271" level="INFO">${ACCURACY} = {'diff': [9.891700000000392e-05, 9.806899999999924e-05, 9.927800000000125e-05, 9.951400000000193e-05, 9.870900000000238e-05, 9.948599999999586e-05, 9.922199999999604e-05, 9.919499999999637e-05, 9.8278...</msg>
<status status="PASS" starttime="20201029 12:48:50.263" endtime="20201029 12:48:50.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.282" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:48:50.280" endtime="20201029 12:48:50.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.287" level="INFO">VALUE: [9.891700000000392e-05, 9.806899999999924e-05, 9.927800000000125e-05, 9.951400000000193e-05, 9.870900000000238e-05, 9.948599999999586e-05, 9.922199999999604e-05, 9.919499999999637e-05, 9.827800000000025e-05, 9.884699999999913e-05, 9.894400000000358e-05, 9.959799999999935e-05, 9.89159999999975e-05, 9.866699999999673e-05, 9.891699999999698e-05, 9.933299999999312e-05, 9.876400000000118e-05, 9.933399999999953e-05, 9.905600000000014e-05, 9.957000000000021e-05, 9.958400000000672e-05, 9.951300000000246e-05, 9.962499999999902e-05, 9.950000000000236e-05, 9.794399999999565e-05, 9.875000000000161e-05, 9.866700000000367e-05, 9.937500000000571e-05, 9.875000000000161e-05, 9.879200000000032e-05, 9.894500000000306e-05, 9.955600000000064e-05, 9.87080000000029e-05, 9.884699999999913e-05, 9.940299999999791e-05, 9.909699999999938e-05, 9.876399999999425e-05, 9.951400000000193e-05, 9.930500000000092e-05, 9.811099999999795e-05, 9.954200000000107e-05, 9.922199999999604e-05, 9.958300000000031e-05, 9.812500000000446e-05, 9.812500000000446e-05, 9.858399999999878e-05, 9.870799999999597e-05, 9.925000000000211e-05, 9.954200000000107e-05, 9.916599999999776e-05]</msg>
<status status="PASS" starttime="20201029 12:48:50.284" endtime="20201029 12:48:50.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.273" endtime="20201029 12:48:50.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:50.300" endtime="20201029 12:48:50.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.296" endtime="20201029 12:48:50.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.293" endtime="20201029 12:48:50.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.816" endtime="20201029 12:48:50.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.814" endtime="20201029 12:48:50.325"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.347" endtime="20201029 12:48:50.367"></status>
</kw>
<msg timestamp="20201029 12:48:50.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:50.344" endtime="20201029 12:48:50.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:50.370" endtime="20201029 12:48:50.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.376" endtime="20201029 12:48:50.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.337" endtime="20201029 12:48:50.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.331" endtime="20201029 12:48:50.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.399" endtime="20201029 12:48:50.725"></status>
</kw>
<msg timestamp="20201029 12:48:50.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038874708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038973819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:50.396" endtime="20201029 12:48:50.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038874708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038973819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:50.735" endtime="20201029 12:48:50.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.753" endtime="20201029 12:48:50.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.389" endtime="20201029 12:48:50.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.384" endtime="20201029 12:48:50.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:50.770" level="INFO">${RESULT} = [{'diff': 9.911099999999895e-05}, {'diff': 0.00010038899999999934}, {'diff': 0.00010004200000000157}, {'diff': 0.00010013899999999909}, {'diff': 0.00010015299999999866}, {'diff': 0.0001003610000000002...</msg>
<status status="PASS" starttime="20201029 12:48:50.761" endtime="20201029 12:48:50.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:50.781" level="INFO">${ACCURACY} = {'diff': [9.911099999999895e-05, 0.00010038899999999934, 0.00010004200000000157, 0.00010013899999999909, 0.00010015299999999866, 0.0001003610000000002, 9.98060000000009e-05, 0.00010033300000000106, 0....</msg>
<status status="PASS" starttime="20201029 12:48:50.772" endtime="20201029 12:48:50.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.792" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:48:50.789" endtime="20201029 12:48:50.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.797" level="INFO">VALUE: [9.911099999999895e-05, 0.00010038899999999934, 0.00010004200000000157, 0.00010013899999999909, 0.00010015299999999866, 0.0001003610000000002, 9.98060000000009e-05, 0.00010033300000000106, 0.00010018000000000526, 9.894499999999612e-05, 0.00010000000000000286, 0.0001003610000000002, 9.963899999999859e-05, 0.00010008300000000081, 9.994400000000458e-05, 9.981900000000099e-05, 9.980500000000142e-05, 0.00010017999999999833, 9.972299999999601e-05, 9.963900000000553e-05, 0.000100513999999996, 0.00010059700000000088, 0.00010030500000000192, 0.00010038899999999934, 0.00010025000000000311, 9.98479999999996e-05, 0.00010000000000000286, 0.00010033300000000106, 0.00010058400000000078, 0.00010017999999999833, 9.974999999999568e-05, 9.958300000000031e-05, 0.00010006900000000124, 0.00010011099999999995, 0.00010029200000000182, 0.00010012499999999952, 9.990199999999894e-05, 0.00010041699999999848, 9.927800000000125e-05, 0.00010058300000000131, 0.00010000000000000286, 0.00010019499999999737, 0.00010038899999999934, 9.872300000000195e-05, 0.00010000000000000286, 0.00010016599999999876, 9.982000000000046e-05, 9.987499999999927e-05, 0.00010005600000000114, 0.00010038899999999934]</msg>
<status status="PASS" starttime="20201029 12:48:50.794" endtime="20201029 12:48:50.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.783" endtime="20201029 12:48:50.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:50.813" endtime="20201029 12:48:50.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.809" endtime="20201029 12:48:50.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.806" endtime="20201029 12:48:50.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.327" endtime="20201029 12:48:50.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.326" endtime="20201029 12:48:50.838"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.861" endtime="20201029 12:48:50.880"></status>
</kw>
<msg timestamp="20201029 12:48:50.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:50.857" endtime="20201029 12:48:50.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:50.884" endtime="20201029 12:48:50.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.890" endtime="20201029 12:48:50.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.850" endtime="20201029 12:48:50.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.844" endtime="20201029 12:48:50.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.913" endtime="20201029 12:48:51.246"></status>
</kw>
<msg timestamp="20201029 12:48:51.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039086764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039188181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:50.910" endtime="20201029 12:48:51.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039086764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039188181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:51.255" endtime="20201029 12:48:51.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.274" endtime="20201029 12:48:51.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.903" endtime="20201029 12:48:51.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.898" endtime="20201029 12:48:51.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:51.290" level="INFO">${RESULT} = [{'diff': 0.00010141699999999948}, {'diff': 0.00010047200000000422}, {'diff': 0.00010098599999999736}, {'diff': 0.00010166699999999973}, {'diff': 0.00010011099999999995}, {'diff': 0.000101375000000000...</msg>
<status status="PASS" starttime="20201029 12:48:51.282" endtime="20201029 12:48:51.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:51.299" level="INFO">${ACCURACY} = {'diff': [0.00010141699999999948, 0.00010047200000000422, 0.00010098599999999736, 0.00010166699999999973, 0.00010011099999999995, 0.00010137500000000077, 0.00010073600000000404, 0.0001013060000000024,...</msg>
<status status="PASS" starttime="20201029 12:48:51.292" endtime="20201029 12:48:51.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.310" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:48:51.308" endtime="20201029 12:48:51.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.315" level="INFO">VALUE: [0.00010141699999999948, 0.00010047200000000422, 0.00010098599999999736, 0.00010166699999999973, 0.00010011099999999995, 0.00010137500000000077, 0.00010073600000000404, 0.0001013060000000024, 0.00010027800000000225, 0.00010148599999999786, 0.00010099999999999693, 9.99730000000032e-05, 0.00010088899999999984, 0.00010009699999999344, 0.00010079200000000232, 0.00010104200000000257, 0.00010152799999999657, 0.00010138900000000034, 0.0001009860000000043, 0.00010074999999999668, 0.00010100000000000386, 0.00010084700000000113, 0.0001013610000000012, 0.00010011199999999942, 0.00010117999999999933, 0.00010032000000000096, 0.00010076399999999625, 0.00010155500000000317, 0.00010097200000000472, 0.0001011939999999989, 0.00010066599999999926, 0.00010081900000000199, 0.000101513999999997, 0.00010141699999999948, 0.00010026399999999575, 0.00010098599999999736, 0.000101416, 0.00010084700000000113, 0.00010122199999999804, 0.00010006900000000124, 0.00010143099999999905, 0.00010059700000000088, 0.00010086200000000017, 0.0001007359999999971, 0.00010081899999999505, 0.00010127800000000325, 0.00010087500000000027, 0.00010158400000000178, 0.00010059700000000088, 0.00010079100000000285]</msg>
<status status="PASS" starttime="20201029 12:48:51.312" endtime="20201029 12:48:51.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.301" endtime="20201029 12:48:51.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:51.328" endtime="20201029 12:48:51.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.323" endtime="20201029 12:48:51.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.321" endtime="20201029 12:48:51.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.840" endtime="20201029 12:48:51.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.839" endtime="20201029 12:48:51.352"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.375" endtime="20201029 12:48:51.396"></status>
</kw>
<msg timestamp="20201029 12:48:51.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:51.372" endtime="20201029 12:48:51.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:51.400" endtime="20201029 12:48:51.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.406" endtime="20201029 12:48:51.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.365" endtime="20201029 12:48:51.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.359" endtime="20201029 12:48:51.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.429" endtime="20201029 12:48:51.771"></status>
</kw>
<msg timestamp="20201029 12:48:51.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040797972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040898778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:51.426" endtime="20201029 12:48:51.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040797972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040898778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:51.780" endtime="20201029 12:48:51.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.798" endtime="20201029 12:48:51.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.419" endtime="20201029 12:48:51.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.414" endtime="20201029 12:48:51.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:51.815" level="INFO">${RESULT} = [{'diff': 0.00010080599999999496}, {'diff': 0.00010231900000000349}, {'diff': 0.00010190300000000041}, {'diff': 0.00010258399999999585}, {'diff': 0.0001018610000000017}, {'diff': 0.0001025829999999963...</msg>
<status status="PASS" starttime="20201029 12:48:51.807" endtime="20201029 12:48:51.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:51.824" level="INFO">${ACCURACY} = {'diff': [0.00010080599999999496, 0.00010231900000000349, 0.00010190300000000041, 0.00010258399999999585, 0.0001018610000000017, 0.00010258299999999637, 0.00010163900000000059, 0.00010180500000000342,...</msg>
<status status="PASS" starttime="20201029 12:48:51.817" endtime="20201029 12:48:51.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.835" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:48:51.833" endtime="20201029 12:48:51.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.840" level="INFO">VALUE: [0.00010080599999999496, 0.00010231900000000349, 0.00010190300000000041, 0.00010258399999999585, 0.0001018610000000017, 0.00010258299999999637, 0.00010163900000000059, 0.00010180500000000342, 0.00010198599999999836, 0.0001018060000000029, 0.000102513999999998, 0.0001012359999999976, 0.00010193000000000008, 0.0001020689999999963, 0.00010209700000000238, 0.00010170899999999844, 0.000102028000000004, 0.00010240300000000091, 0.00010233300000000306, 0.00010180500000000342, 0.00010180500000000342, 0.00010240300000000091, 0.0001017359999999981, 0.00010232000000000296, 0.00010249999999999843, 0.00010104199999999564, 0.00010204200000000357, 0.00010181899999999605, 0.00010170899999999844, 0.00010172199999999854, 0.00010079200000000232, 0.00010077799999999582, 0.00010188900000000084, 0.00010259700000000288, 0.00010170799999999897, 0.00010162500000000102, 0.00010237500000000177, 0.0001021939999999999, 0.00010256999999999628, 0.00010248599999999886, 0.0001020139999999975, 0.00010195799999999922, 0.00010216700000000023, 0.00010258400000000278, 0.00010213799999999468, 0.00010222199999999904, 0.00010207000000000271, 0.00010227799999999732, 0.0001016809999999993, 0.00010220799999999947]</msg>
<status status="PASS" starttime="20201029 12:48:51.837" endtime="20201029 12:48:51.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.826" endtime="20201029 12:48:51.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:51.854" endtime="20201029 12:48:51.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.848" endtime="20201029 12:48:51.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.846" endtime="20201029 12:48:51.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.354" endtime="20201029 12:48:51.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.353" endtime="20201029 12:48:51.879"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.902" endtime="20201029 12:48:51.923"></status>
</kw>
<msg timestamp="20201029 12:48:51.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:51.898" endtime="20201029 12:48:51.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:51.927" endtime="20201029 12:48:51.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.933" endtime="20201029 12:48:51.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.891" endtime="20201029 12:48:51.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.885" endtime="20201029 12:48:51.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.956" endtime="20201029 12:48:52.297"></status>
</kw>
<msg timestamp="20201029 12:48:52.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039138486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039241903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:51.953" endtime="20201029 12:48:52.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039138486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039241903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:52.306" endtime="20201029 12:48:52.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.324" endtime="20201029 12:48:52.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.945" endtime="20201029 12:48:52.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.941" endtime="20201029 12:48:52.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:52.341" level="INFO">${RESULT} = [{'diff': 0.00010341700000000148}, {'diff': 0.00010359699999999694}, {'diff': 0.00010270799999999997}, {'diff': 0.00010344500000000062}, {'diff': 0.00010352799999999857}, {'diff': 0.000103610999999996...</msg>
<status status="PASS" starttime="20201029 12:48:52.332" endtime="20201029 12:48:52.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:52.351" level="INFO">${ACCURACY} = {'diff': [0.00010341700000000148, 0.00010359699999999694, 0.00010270799999999997, 0.00010344500000000062, 0.00010352799999999857, 0.00010361099999999651, 0.00010290300000000141, 0.00010322299999999951...</msg>
<status status="PASS" starttime="20201029 12:48:52.343" endtime="20201029 12:48:52.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.362" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:48:52.359" endtime="20201029 12:48:52.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.367" level="INFO">VALUE: [0.00010341700000000148, 0.00010359699999999694, 0.00010270799999999997, 0.00010344500000000062, 0.00010352799999999857, 0.00010361099999999651, 0.00010290300000000141, 0.00010322299999999951, 0.00010287499999999533, 0.00010347299999999976, 0.00010336099999999626, 0.00010308400000000328, 0.00010290300000000141, 0.00010355500000000517, 0.00010293100000000055, 0.00010341700000000148, 0.00010329200000000482, 0.00010363899999999565, 0.00010355499999999823, 0.00010340200000000244, 0.00010359699999999694, 0.00010304099999999816, 0.00010232000000000296, 0.0001026940000000004, 0.00010282000000000346, 0.00010195799999999922, 0.00010287499999999533, 0.00010312500000000252, 0.00010306999999999678, 0.00010270799999999997, 0.00010322200000000004, 0.00010334700000000363, 0.0001028889999999949, 0.00010283299999999662, 0.00010263900000000159, 0.00010322200000000004, 0.0001033889999999954, 0.00010358299999999737, 0.00010294500000000012, 0.00010337500000000277, 0.00010308400000000328, 0.00010309700000000338, 0.00010326399999999875, 0.00010270899999999944, 0.00010280599999999696, 0.00010293099999999361, 0.00010295899999999969, 0.00010280499999999748, 0.00010343100000000105, 0.00010195799999999922]</msg>
<status status="PASS" starttime="20201029 12:48:52.364" endtime="20201029 12:48:52.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.353" endtime="20201029 12:48:52.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:52.379" endtime="20201029 12:48:52.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.375" endtime="20201029 12:48:52.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.373" endtime="20201029 12:48:52.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.881" endtime="20201029 12:48:52.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.880" endtime="20201029 12:48:52.404"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.427" endtime="20201029 12:48:52.449"></status>
</kw>
<msg timestamp="20201029 12:48:52.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:52.424" endtime="20201029 12:48:52.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:52.452" endtime="20201029 12:48:52.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.458" endtime="20201029 12:48:52.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.416" endtime="20201029 12:48:52.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.411" endtime="20201029 12:48:52.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.481" endtime="20201029 12:48:52.821"></status>
</kw>
<msg timestamp="20201029 12:48:52.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0392155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039318458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:52.478" endtime="20201029 12:48:52.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0392155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039318458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:52.830" endtime="20201029 12:48:52.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.848" endtime="20201029 12:48:52.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.471" endtime="20201029 12:48:52.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.466" endtime="20201029 12:48:52.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:52.865" level="INFO">${RESULT} = [{'diff': 0.00010295800000000022}, {'diff': 0.00010409700000000438}, {'diff': 0.00010462499999999708}, {'diff': 0.00010384699999999719}, {'diff': 0.00010419500000000137}, {'diff': 0.000104415999999996...</msg>
<status status="PASS" starttime="20201029 12:48:52.856" endtime="20201029 12:48:52.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:52.876" level="INFO">${ACCURACY} = {'diff': [0.00010295800000000022, 0.00010409700000000438, 0.00010462499999999708, 0.00010384699999999719, 0.00010419500000000137, 0.00010441599999999607, 0.00010327799999999832, 0.00010461099999999751...</msg>
<status status="PASS" starttime="20201029 12:48:52.867" endtime="20201029 12:48:52.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.886" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:48:52.884" endtime="20201029 12:48:52.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.892" level="INFO">VALUE: [0.00010295800000000022, 0.00010409700000000438, 0.00010462499999999708, 0.00010384699999999719, 0.00010419500000000137, 0.00010441599999999607, 0.00010327799999999832, 0.00010461099999999751, 0.00010381899999999805, 0.00010361100000000345, 0.00010380499999999848, 0.00010447300000000076, 0.00010280499999999748, 0.00010383299999999762, 0.00010305600000000414, 0.00010379199999999839, 0.00010322299999999951, 0.00010436099999999726, 0.00010422200000000104, 0.00010433400000000453, 0.00010370799999999403, 0.00010431899999999855, 0.00010438900000000334, 0.00010454099999999966, 0.00010452799999999957, 0.00010399999999999993, 0.00010379199999999839, 0.00010397300000000026, 0.0001040689999999983, 0.00010363899999999565, 0.00010399999999999993, 0.0001045559999999987, 0.00010277799999999782, 0.00010413900000000309, 0.00010386199999999624, 0.00010384700000000413, 0.00010395800000000122, 0.00010291599999999457, 0.00010429199999999889, 0.00010341700000000148, 0.0001045280000000065, 0.00010447200000000129, 0.0001043610000000042, 0.00010422200000000104, 0.00010404200000000557, 0.00010358399999999685, 0.0001045689999999988, 0.00010413899999999615, 0.0001041810000000018, 0.00010445900000000119]</msg>
<status status="PASS" starttime="20201029 12:48:52.889" endtime="20201029 12:48:52.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.877" endtime="20201029 12:48:52.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:52.904" endtime="20201029 12:48:52.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.900" endtime="20201029 12:48:52.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.897" endtime="20201029 12:48:52.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.406" endtime="20201029 12:48:52.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.405" endtime="20201029 12:48:52.929"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.951" endtime="20201029 12:48:52.973"></status>
</kw>
<msg timestamp="20201029 12:48:52.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:52.948" endtime="20201029 12:48:52.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:52.977" endtime="20201029 12:48:52.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.983" endtime="20201029 12:48:52.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.941" endtime="20201029 12:48:52.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.935" endtime="20201029 12:48:52.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.006" endtime="20201029 12:48:53.350"></status>
</kw>
<msg timestamp="20201029 12:48:53.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039128236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039232931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:53.003" endtime="20201029 12:48:53.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039128236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039232931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:53.359" endtime="20201029 12:48:53.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.377" endtime="20201029 12:48:53.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.996" endtime="20201029 12:48:53.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.991" endtime="20201029 12:48:53.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:53.394" level="INFO">${RESULT} = [{'diff': 0.00010469500000000187}, {'diff': 0.00010488900000000384}, {'diff': 0.00010530599999999946}, {'diff': 0.00010498600000000136}, {'diff': 0.00010491699999999604}, {'diff': 0.000104125000000003...</msg>
<status status="PASS" starttime="20201029 12:48:53.385" endtime="20201029 12:48:53.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:53.403" level="INFO">${ACCURACY} = {'diff': [0.00010469500000000187, 0.00010488900000000384, 0.00010530599999999946, 0.00010498600000000136, 0.00010491699999999604, 0.00010412500000000352, 0.00010501299999999408, 0.00010429199999999889...</msg>
<status status="PASS" starttime="20201029 12:48:53.396" endtime="20201029 12:48:53.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.414" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:48:53.411" endtime="20201029 12:48:53.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.419" level="INFO">VALUE: [0.00010469500000000187, 0.00010488900000000384, 0.00010530599999999946, 0.00010498600000000136, 0.00010491699999999604, 0.00010412500000000352, 0.00010501299999999408, 0.00010429199999999889, 0.00010536099999999826, 0.00010380499999999848, 0.00010462499999999708, 0.00010545899999999525, 0.00010556999999999928, 0.00010438900000000334, 0.00010526400000000075, 0.00010526400000000075, 0.00010504199999999964, 0.00010523599999999467, 0.00010500000000000093, 0.00010551300000000152, 0.00010430599999999846, 0.00010559799999999842, 0.00010479199999999939, 0.00010515299999999672, 0.00010558299999999937, 0.00010538900000000434, 0.00010480599999999896, 0.00010466600000000326, 0.00010488900000000384, 0.00010529199999999989, 0.00010465200000000369, 0.00010556999999999928, 0.00010487500000000427, 0.00010477799999999982, 0.00010511099999999801, 0.00010470900000000144, 0.00010526400000000075, 0.00010520799999999553, 0.00010540300000000391, 0.00010468099999999536, 0.00010537499999999783, 0.00010491700000000298, 0.00010540300000000391, 0.00010558299999999937, 0.00010555500000000023, 0.00010461100000000445, 0.00010518099999999586, 0.00010462499999999708, 0.00010548599999999492, 0.0001050689999999993]</msg>
<status status="PASS" starttime="20201029 12:48:53.416" endtime="20201029 12:48:53.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.405" endtime="20201029 12:48:53.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:53.431" endtime="20201029 12:48:53.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.427" endtime="20201029 12:48:53.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.424" endtime="20201029 12:48:53.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.931" endtime="20201029 12:48:53.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.930" endtime="20201029 12:48:53.456"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.479" endtime="20201029 12:48:53.502"></status>
</kw>
<msg timestamp="20201029 12:48:53.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:53.475" endtime="20201029 12:48:53.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:53.506" endtime="20201029 12:48:53.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.512" endtime="20201029 12:48:53.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.468" endtime="20201029 12:48:53.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.463" endtime="20201029 12:48:53.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.535" endtime="20201029 12:48:53.895"></status>
</kw>
<msg timestamp="20201029 12:48:53.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040822625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040929, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:48:53.532" endtime="20201029 12:48:53.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040822625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040929, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:48:53.905" endtime="20201029 12:48:53.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.923" endtime="20201029 12:48:53.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.524" endtime="20201029 12:48:53.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.520" endtime="20201029 12:48:53.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:53.941" level="INFO">${RESULT} = [{'diff': 0.00010637499999999883}, {'diff': 0.00010595799999999628}, {'diff': 0.00010580599999999996}, {'diff': 0.00010586099999999876}, {'diff': 0.00010580500000000048}, {'diff': 0.000105916999999997...</msg>
<status status="PASS" starttime="20201029 12:48:53.932" endtime="20201029 12:48:53.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:53.950" level="INFO">${ACCURACY} = {'diff': [0.00010637499999999883, 0.00010595799999999628, 0.00010580599999999996, 0.00010586099999999876, 0.00010580500000000048, 0.00010591699999999704, 0.00010630600000000046, 0.00010612499999999858...</msg>
<status status="PASS" starttime="20201029 12:48:53.943" endtime="20201029 12:48:53.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.961" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:48:53.958" endtime="20201029 12:48:53.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.966" level="INFO">VALUE: [0.00010637499999999883, 0.00010595799999999628, 0.00010580599999999996, 0.00010586099999999876, 0.00010580500000000048, 0.00010591699999999704, 0.00010630600000000046, 0.00010612499999999858, 0.00010591700000000398, 0.00010648599999999592, 0.00010606999999999978, 0.00010518000000000333, 0.00010584699999999919, 0.00010605500000000073, 0.00010579200000000039, 0.00010600000000000193, 0.00010570800000000297, 0.00010559699999999894, 0.00010602800000000107, 0.00010591599999999757, 0.00010612499999999858, 0.00010616699999999729, 0.00010650000000000243, 0.00010620799999999653, 0.0001052219999999951, 0.00010615299999999772, 0.00010637499999999883, 0.00010655500000000123, 0.00010616699999999729, 0.00010658300000000037, 0.00010608299999999987, 0.00010580599999999996, 0.00010649999999999549, 0.00010587500000000527, 0.00010595800000000322, 0.00010480599999999896, 0.0001057219999999956, 0.00010608299999999987, 0.00010608299999999987, 0.00010566699999999679, 0.00010570900000000244, 0.00010619499999999643, 0.00010606999999999978, 0.00010648599999999592, 0.00010644499999999668, 0.00010545799999999578, 0.00010513899999999715, 0.00010598600000000236, 0.00010661099999999951, 0.00010612499999999858]</msg>
<status status="PASS" starttime="20201029 12:48:53.963" endtime="20201029 12:48:53.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.952" endtime="20201029 12:48:53.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:53.981" endtime="20201029 12:48:54.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.975" endtime="20201029 12:48:54.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.972" endtime="20201029 12:48:54.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.458" endtime="20201029 12:48:54.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.457" endtime="20201029 12:48:54.007"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.030" endtime="20201029 12:48:54.053"></status>
</kw>
<msg timestamp="20201029 12:48:54.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:54.027" endtime="20201029 12:48:54.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:54.056" endtime="20201029 12:48:54.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.063" endtime="20201029 12:48:54.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.020" endtime="20201029 12:48:54.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.013" endtime="20201029 12:48:54.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.086" endtime="20201029 12:48:54.429"></status>
</kw>
<msg timestamp="20201029 12:48:54.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040735556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040843194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:54.083" endtime="20201029 12:48:54.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040735556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040843194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:54.439" endtime="20201029 12:48:54.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.457" endtime="20201029 12:48:54.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.076" endtime="20201029 12:48:54.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.071" endtime="20201029 12:48:54.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:54.478" level="INFO">${RESULT} = [{'diff': 0.00010763800000000018}, {'diff': 0.00010742999999999864}, {'diff': 0.00010694400000000465}, {'diff': 0.00010687499999999933}, {'diff': 0.00010679200000000139}, {'diff': 0.000107014000000002...</msg>
<status status="PASS" starttime="20201029 12:48:54.469" endtime="20201029 12:48:54.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:54.489" level="INFO">${ACCURACY} = {'diff': [0.00010763800000000018, 0.00010742999999999864, 0.00010694400000000465, 0.00010687499999999933, 0.00010679200000000139, 0.0001070140000000025, 0.00010736100000000026, 0.00010666700000000473,...</msg>
<status status="PASS" starttime="20201029 12:48:54.481" endtime="20201029 12:48:54.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.500" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:48:54.498" endtime="20201029 12:48:54.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.506" level="INFO">VALUE: [0.00010763800000000018, 0.00010742999999999864, 0.00010694400000000465, 0.00010687499999999933, 0.00010679200000000139, 0.0001070140000000025, 0.00010736100000000026, 0.00010666700000000473, 0.00010668099999999736, 0.00010747199999999735, 0.00010626400000000175, 0.00010675000000000268, 0.00010761100000000051, 0.00010705499999999479, 0.0001072360000000036, 0.00010761100000000051, 0.00010670799999999703, 0.00010576400000000125, 0.00010724999999999624, 0.00010736100000000026, 0.00010629200000000089, 0.00010729200000000189, 0.00010672300000000301, 0.00010655599999999377, 0.00010702700000000259, 0.00010751300000000352, 0.00010717999999999839, 0.00010737499999999983, 0.00010730500000000198, 0.00010734700000000069, 0.00010680599999999402, 0.00010677700000000234, 0.00010752699999999615, 0.00010684700000000019, 0.00010705500000000173, 0.00010729200000000189, 0.0001066810000000043, 0.00010658300000000037, 0.00010745900000000419, 0.00010713899999999915, 0.0001070690000000013, 0.00010695799999999728, 0.00010680500000000148, 0.00010622200000000304, 0.00010593099999999661, 0.00010684700000000019, 0.00010663900000000559, 0.00010762500000000008, 0.00010709700000000044, 0.00010734700000000069]</msg>
<status status="PASS" starttime="20201029 12:48:54.503" endtime="20201029 12:48:54.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.491" endtime="20201029 12:48:54.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:54.519" endtime="20201029 12:48:54.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.514" endtime="20201029 12:48:54.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.512" endtime="20201029 12:48:54.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.009" endtime="20201029 12:48:54.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.008" endtime="20201029 12:48:54.544"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.567" endtime="20201029 12:48:54.590"></status>
</kw>
<msg timestamp="20201029 12:48:54.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:54.564" endtime="20201029 12:48:54.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:54.593" endtime="20201029 12:48:54.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.600" endtime="20201029 12:48:54.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.556" endtime="20201029 12:48:54.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.551" endtime="20201029 12:48:54.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.623" endtime="20201029 12:48:54.966"></status>
</kw>
<msg timestamp="20201029 12:48:54.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040252194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040360583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:54.620" endtime="20201029 12:48:54.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040252194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040360583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:54.975" endtime="20201029 12:48:54.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.994" endtime="20201029 12:48:54.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.613" endtime="20201029 12:48:54.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.608" endtime="20201029 12:48:55.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:55.011" level="INFO">${RESULT} = [{'diff': 0.0001083890000000004}, {'diff': 0.0001081940000000059}, {'diff': 0.0001083890000000004}, {'diff': 0.00010859700000000194}, {'diff': 0.00010804099999999622}, {'diff': 0.00010804200000000264}...</msg>
<status status="PASS" starttime="20201029 12:48:55.002" endtime="20201029 12:48:55.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:55.026" level="INFO">${ACCURACY} = {'diff': [0.0001083890000000004, 0.0001081940000000059, 0.0001083890000000004, 0.00010859700000000194, 0.00010804099999999622, 0.00010804200000000264, 0.00010854099999999672, 0.0001080839999999944, 0....</msg>
<status status="PASS" starttime="20201029 12:48:55.013" endtime="20201029 12:48:55.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.037" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:48:55.035" endtime="20201029 12:48:55.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.043" level="INFO">VALUE: [0.0001083890000000004, 0.0001081940000000059, 0.0001083890000000004, 0.00010859700000000194, 0.00010804099999999622, 0.00010804200000000264, 0.00010854099999999672, 0.0001080839999999944, 0.00010816599999999982, 0.00010859700000000194, 0.00010790299999999947, 0.00010781900000000205, 0.00010797300000000426, 0.0001080969999999945, 0.00010836100000000126, 0.00010761100000000051, 0.0001080560000000022, 0.0001077769999999964, 0.00010858300000000237, 0.00010844499999999868, 0.00010776400000000325, 0.00010698599999999642, 0.00010859700000000194, 0.0001082219999999981, 0.00010801399999999656, 0.0001083890000000004, 0.00010781899999999511, 0.00010757000000000128, 0.00010837500000000083, 0.00010849999999999749, 0.00010802799999999613, 0.0001080560000000022, 0.00010862500000000108, 0.00010783299999999468, 0.00010831900000000255, 0.00010834700000000169, 0.00010786100000000076, 0.00010786099999999382, 0.0001077219999999976, 0.0001080560000000022, 0.00010852799999999663, 0.00010833399999999466, 0.00010847200000000529, 0.00010787500000000033, 0.00010693100000000455, 0.00010711199999999949, 0.00010830500000000298, 0.0001082360000000046, 0.00010807000000000178, 0.00010822299999999757]</msg>
<status status="PASS" starttime="20201029 12:48:55.040" endtime="20201029 12:48:55.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.028" endtime="20201029 12:48:55.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:55.056" endtime="20201029 12:48:55.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.051" endtime="20201029 12:48:55.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.049" endtime="20201029 12:48:55.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.546" endtime="20201029 12:48:55.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.545" endtime="20201029 12:48:55.081"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.104" endtime="20201029 12:48:55.127"></status>
</kw>
<msg timestamp="20201029 12:48:55.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:55.101" endtime="20201029 12:48:55.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:55.130" endtime="20201029 12:48:55.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.137" endtime="20201029 12:48:55.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.093" endtime="20201029 12:48:55.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.087" endtime="20201029 12:48:55.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.160" endtime="20201029 12:48:55.506"></status>
</kw>
<msg timestamp="20201029 12:48:55.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040205403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040314583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:55.157" endtime="20201029 12:48:55.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040205403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040314583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:55.515" endtime="20201029 12:48:55.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.534" endtime="20201029 12:48:55.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.150" endtime="20201029 12:48:55.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.145" endtime="20201029 12:48:55.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:55.552" level="INFO">${RESULT} = [{'diff': 0.00010918000000000039}, {'diff': 0.00010877800000000382}, {'diff': 0.00010841600000000007}, {'diff': 0.00010880500000000348}, {'diff': 0.00010955599999999677}, {'diff': 0.000108820000000002...</msg>
<status status="PASS" starttime="20201029 12:48:55.543" endtime="20201029 12:48:55.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:55.561" level="INFO">${ACCURACY} = {'diff': [0.00010918000000000039, 0.00010877800000000382, 0.00010841600000000007, 0.00010880500000000348, 0.00010955599999999677, 0.00010882000000000253, 0.0001087219999999986, 0.00010881899999999611,...</msg>
<status status="PASS" starttime="20201029 12:48:55.554" endtime="20201029 12:48:55.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.572" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:48:55.570" endtime="20201029 12:48:55.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.577" level="INFO">VALUE: [0.00010918000000000039, 0.00010877800000000382, 0.00010841600000000007, 0.00010880500000000348, 0.00010955599999999677, 0.00010882000000000253, 0.0001087219999999986, 0.00010881899999999611, 0.00010934700000000269, 0.00010940199999999456, 0.00010931900000000355, 0.00010909800000000192, 0.0001087219999999986, 0.00010908300000000287, 0.0001095560000000037, 0.00010941600000000107, 0.00010956899999999686, 0.00010929199999999695, 0.00010902699999999765, 0.00010897199999999885, 0.00010870799999999903, 0.00010911100000000201, 0.00010779200000000239, 0.00010945799999999978, 0.00010936099999999532, 0.00010886100000000176, 0.00010876400000000425, 0.00010873599999999817, 0.00010934700000000269, 0.00010811099999999407, 0.00010961100000000251, 0.00010888899999999396, 0.000109596999999996, 0.00010924999999999824, 0.00010898700000000483, 0.00010865200000000075, 0.00010923599999999867, 0.0001088340000000021, 0.00010905599999999627, 0.00010909799999999498, 0.00010923599999999867, 0.00010877800000000382, 0.00010876399999999731, 0.00010847199999999835, 0.00010884700000000219, 0.00010951399999999806, 0.00010940300000000097, 0.00010926399999999781, 0.00010826399999999681, 0.00010859700000000194]</msg>
<status status="PASS" starttime="20201029 12:48:55.574" endtime="20201029 12:48:55.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.563" endtime="20201029 12:48:55.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:55.590" endtime="20201029 12:48:55.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.586" endtime="20201029 12:48:55.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.583" endtime="20201029 12:48:55.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.083" endtime="20201029 12:48:55.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.082" endtime="20201029 12:48:55.615"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.638" endtime="20201029 12:48:55.663"></status>
</kw>
<msg timestamp="20201029 12:48:55.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:55.635" endtime="20201029 12:48:55.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:55.666" endtime="20201029 12:48:55.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.673" endtime="20201029 12:48:55.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.628" endtime="20201029 12:48:55.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.622" endtime="20201029 12:48:55.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.697" endtime="20201029 12:48:56.040"></status>
</kw>
<msg timestamp="20201029 12:48:56.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041829653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041939889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:55.693" endtime="20201029 12:48:56.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041829653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041939889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:56.050" endtime="20201029 12:48:56.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.068" endtime="20201029 12:48:56.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.686" endtime="20201029 12:48:56.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.681" endtime="20201029 12:48:56.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:56.085" level="INFO">${RESULT} = [{'diff': 0.00011023599999999967}, {'diff': 0.00011004099999999822}, {'diff': 0.00011049999999999949}, {'diff': 0.00011022299999999957}, {'diff': 0.00010979099999999797}, {'diff': 0.000110222000000000...</msg>
<status status="PASS" starttime="20201029 12:48:56.077" endtime="20201029 12:48:56.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:56.095" level="INFO">${ACCURACY} = {'diff': [0.00011023599999999967, 0.00011004099999999822, 0.00011049999999999949, 0.00011022299999999957, 0.00010979099999999797, 0.0001102220000000001, 0.00010999999999999899, 0.00010963900000000165,...</msg>
<status status="PASS" starttime="20201029 12:48:56.087" endtime="20201029 12:48:56.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.106" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:48:56.103" endtime="20201029 12:48:56.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.111" level="INFO">VALUE: [0.00011023599999999967, 0.00011004099999999822, 0.00011049999999999949, 0.00011022299999999957, 0.00010979099999999797, 0.0001102220000000001, 0.00010999999999999899, 0.00010963900000000165, 0.00011043100000000111, 0.00011007000000000378, 0.00011052799999999863, 0.0001102220000000001, 0.00011005500000000473, 0.00011004200000000464, 0.00011005599999999727, 0.00011056899999999786, 0.00011005500000000473, 0.00010969499999999993, 0.00010961100000000251, 0.00010897199999999885, 0.0001103340000000036, 0.00011033299999999718, 0.00011038899999999546, 0.00011065199999999581, 0.00010962500000000208, 0.00011027799999999838, 0.00010990300000000147, 0.00010993000000000114, 0.0001093890000000014, 0.00010962500000000208, 0.00011020800000000053, 0.00010926400000000475, 0.00010944499999999968, 0.00011043000000000164, 0.00010997199999999985, 0.00011058300000000437, 0.00010983299999999668, 0.00010994400000000071, 0.00010927799999999738, 0.00010944499999999968, 0.00011026399999999881, 0.00011019400000000096, 0.00010876400000000425, 0.00011023599999999967, 0.00011011099999999607, 0.00010967999999999395, 0.00011048599999999992, 0.00010979200000000439, 0.000110209, 0.00010874999999999774]</msg>
<status status="PASS" starttime="20201029 12:48:56.108" endtime="20201029 12:48:56.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.096" endtime="20201029 12:48:56.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:56.130" endtime="20201029 12:48:56.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.124" endtime="20201029 12:48:56.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.121" endtime="20201029 12:48:56.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.618" endtime="20201029 12:48:56.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.616" endtime="20201029 12:48:56.155"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.178" endtime="20201029 12:48:56.199"></status>
</kw>
<msg timestamp="20201029 12:48:56.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:56.175" endtime="20201029 12:48:56.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:56.202" endtime="20201029 12:48:56.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.209" endtime="20201029 12:48:56.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.168" endtime="20201029 12:48:56.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.162" endtime="20201029 12:48:56.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.232" endtime="20201029 12:48:56.562"></status>
</kw>
<msg timestamp="20201029 12:48:56.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040180681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040292181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:56.228" endtime="20201029 12:48:56.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040180681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040292181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:56.572" endtime="20201029 12:48:56.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.590" endtime="20201029 12:48:56.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.221" endtime="20201029 12:48:56.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.216" endtime="20201029 12:48:56.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:56.607" level="INFO">${RESULT} = [{'diff': 0.00011150000000000049}, {'diff': 0.0001115419999999992}, {'diff': 0.00011163799999999724}, {'diff': 0.00011087499999999639}, {'diff': 0.00011137499999999689}, {'diff': 0.0001114030000000029...</msg>
<status status="PASS" starttime="20201029 12:48:56.598" endtime="20201029 12:48:56.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:56.617" level="INFO">${ACCURACY} = {'diff': [0.00011150000000000049, 0.0001115419999999992, 0.00011163799999999724, 0.00011087499999999639, 0.00011137499999999689, 0.00011140300000000297, 0.00011067999999999495, 0.00011147200000000135,...</msg>
<status status="PASS" starttime="20201029 12:48:56.609" endtime="20201029 12:48:56.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.628" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:48:56.625" endtime="20201029 12:48:56.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.633" level="INFO">VALUE: [0.00011150000000000049, 0.0001115419999999992, 0.00011163799999999724, 0.00011087499999999639, 0.00011137499999999689, 0.00011140300000000297, 0.00011067999999999495, 0.00011147200000000135, 0.00011136099999999732, 0.00011105599999999827, 0.00011087499999999639, 0.00011084800000000367, 0.00011098600000000042, 0.00011118100000000186, 0.00011141600000000307, 0.00011074999999999974, 0.00011161100000000451, 0.00011106999999999784, 0.00011161099999999757, 0.00011132000000000503, 0.00011081900000000505, 0.00011066700000000179, 0.00011154099999999972, 0.00011070800000000103, 0.00011119500000000143, 0.00011106899999999836, 0.00011141600000000307, 0.00011129199999999895, 0.00011012500000000258, 0.00011151400000000006, 0.00011062499999999614, 0.00011115300000000272, 0.00011154099999999972, 0.00011123600000000067, 0.00011143100000000211, 0.00011090299999999553, 0.00011115300000000272, 0.00011080599999999802, 0.00011068000000000189, 0.00011066600000000232, 0.00011073600000000017, 0.00011134699999999775, 0.00011159700000000494, 0.00011140299999999603, 0.00011070800000000103, 0.0001110419999999987, 0.00011126399999999981, 0.00011159700000000494, 0.00011087499999999639, 0.0001107220000000006]</msg>
<status status="PASS" starttime="20201029 12:48:56.630" endtime="20201029 12:48:56.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.619" endtime="20201029 12:48:56.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:56.645" endtime="20201029 12:48:56.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.641" endtime="20201029 12:48:56.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.638" endtime="20201029 12:48:56.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.157" endtime="20201029 12:48:56.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.156" endtime="20201029 12:48:56.670"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.692" endtime="20201029 12:48:56.715"></status>
</kw>
<msg timestamp="20201029 12:48:56.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:56.689" endtime="20201029 12:48:56.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:56.718" endtime="20201029 12:48:56.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.724" endtime="20201029 12:48:56.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.682" endtime="20201029 12:48:56.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.676" endtime="20201029 12:48:56.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.747" endtime="20201029 12:48:57.077"></status>
</kw>
<msg timestamp="20201029 12:48:57.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038939917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039051625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:56.744" endtime="20201029 12:48:57.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038939917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039051625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:57.086" endtime="20201029 12:48:57.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.104" endtime="20201029 12:48:57.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.737" endtime="20201029 12:48:57.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.732" endtime="20201029 12:48:57.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:57.121" level="INFO">${RESULT} = [{'diff': 0.00011170800000000203}, {'diff': 0.00011256899999999986}, {'diff': 0.0001117220000000016}, {'diff': 0.00011244399999999627}, {'diff': 0.00011213899999999721}, {'diff': 0.0001117080000000020...</msg>
<status status="PASS" starttime="20201029 12:48:57.112" endtime="20201029 12:48:57.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:57.132" level="INFO">${ACCURACY} = {'diff': [0.00011170800000000203, 0.00011256899999999986, 0.0001117220000000016, 0.00011244399999999627, 0.00011213899999999721, 0.00011170800000000203, 0.00011184800000000467, 0.0001112769999999999, ...</msg>
<status status="PASS" starttime="20201029 12:48:57.123" endtime="20201029 12:48:57.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.143" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:48:57.140" endtime="20201029 12:48:57.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.148" level="INFO">VALUE: [0.00011170800000000203, 0.00011256899999999986, 0.0001117220000000016, 0.00011244399999999627, 0.00011213899999999721, 0.00011170800000000203, 0.00011184800000000467, 0.0001112769999999999, 0.00011245799999999584, 0.00011202800000000013, 0.00011220799999999559, 0.00011091700000000204, 0.00011167999999999595, 0.00011223600000000167, 0.00011116600000000282, 0.00011108399999999741, 0.0001120969999999985, 0.00011225000000000124, 0.0001123340000000056, 0.00011143100000000211, 0.00011223600000000167, 0.00011223600000000167, 0.00011195899999999481, 0.00011230500000000004, 0.00011083399999999716, 0.00011256999999999934, 0.00011175000000000074, 0.00011238799999999799, 0.0001123749999999979, 0.00011193100000000261, 0.00011127799999999938, 0.00011166699999999585, 0.00011144400000000221, 0.00011216700000000329, 0.00011234799999999823, 0.00011201399999999362, 0.00011258400000000585, 0.00011198600000000142, 0.00011215300000000372, 0.00011187500000000433, 0.00011219499999999549, 0.0001125420000000002, 0.00011198599999999448, 0.00011102799999999913, 0.00011250000000000149, 0.00011165200000000375, 0.00011125000000000024, 0.00011215300000000372, 0.00011181999999999859, 0.00011183399999999816]</msg>
<status status="PASS" starttime="20201029 12:48:57.145" endtime="20201029 12:48:57.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.134" endtime="20201029 12:48:57.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:57.160" endtime="20201029 12:48:57.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.156" endtime="20201029 12:48:57.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.153" endtime="20201029 12:48:57.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.672" endtime="20201029 12:48:57.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.671" endtime="20201029 12:48:57.185"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.207" endtime="20201029 12:48:57.228"></status>
</kw>
<msg timestamp="20201029 12:48:57.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.204" endtime="20201029 12:48:57.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.231" endtime="20201029 12:48:57.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.237" endtime="20201029 12:48:57.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.197" endtime="20201029 12:48:57.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.191" endtime="20201029 12:48:57.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.261" endtime="20201029 12:48:57.594"></status>
</kw>
<msg timestamp="20201029 12:48:57.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039096625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039209833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:57.257" endtime="20201029 12:48:57.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039096625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039209833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:57.603" endtime="20201029 12:48:57.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.622" endtime="20201029 12:48:57.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.250" endtime="20201029 12:48:57.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.245" endtime="20201029 12:48:57.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:57.640" level="INFO">${RESULT} = [{'diff': 0.00011320799999999659}, {'diff': 0.0001130969999999995}, {'diff': 0.00011312499999999864}, {'diff': 0.00011197200000000185}, {'diff': 0.000113597}, {'diff': 0.00011313899999999821}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:48:57.630" endtime="20201029 12:48:57.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:57.649" level="INFO">${ACCURACY} = {'diff': [0.00011320799999999659, 0.0001130969999999995, 0.00011312499999999864, 0.00011197200000000185, 0.000113597, 0.00011313899999999821, 0.00011359799999999948, 0.00011265299999999728, 0.00011349...</msg>
<status status="PASS" starttime="20201029 12:48:57.642" endtime="20201029 12:48:57.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.659" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:48:57.657" endtime="20201029 12:48:57.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.665" level="INFO">VALUE: [0.00011320799999999659, 0.0001130969999999995, 0.00011312499999999864, 0.00011197200000000185, 0.000113597, 0.00011313899999999821, 0.00011359799999999948, 0.00011265299999999728, 0.00011349999999999555, 0.00011247200000000235, 0.00011247300000000182, 0.00011315299999999778, 0.00011286099999999882, 0.00011355600000000077, 0.00011322300000000257, 0.00011336099999999932, 0.00011229199999999995, 0.00011281900000000011, 0.00011306999999999984, 0.00011266699999999685, 0.00011237500000000483, 0.00011325000000000224, 0.00011316599999999788, 0.0001130420000000007, 0.00011295800000000328, 0.00011275000000000174, 0.00011350000000000249, 0.000113209000000003, 0.00011247199999999541, 0.00011336100000000626, 0.00011334699999999975, 0.00011280600000000002, 0.00011288899999999796, 0.00011319400000000396, 0.00011317999999999745, 0.00011286099999999882, 0.00011325000000000224, 0.00011226399999999387, 0.00011348600000000292, 0.00011336099999999932, 0.00011229199999999995, 0.00011336099999999932, 0.00011279099999999403, 0.00011298599999999548, 0.00011347300000000282, 0.00011355600000000077, 0.00011290299999999753, 0.00011326399999999487, 0.00011222300000000157, 0.0001130969999999995]</msg>
<status status="PASS" starttime="20201029 12:48:57.662" endtime="20201029 12:48:57.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.650" endtime="20201029 12:48:57.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:57.677" endtime="20201029 12:48:57.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.673" endtime="20201029 12:48:57.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.670" endtime="20201029 12:48:57.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.187" endtime="20201029 12:48:57.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.186" endtime="20201029 12:48:57.702"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.724" endtime="20201029 12:48:57.746"></status>
</kw>
<msg timestamp="20201029 12:48:57.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.721" endtime="20201029 12:48:57.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.750" endtime="20201029 12:48:57.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.756" endtime="20201029 12:48:57.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.714" endtime="20201029 12:48:57.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.708" endtime="20201029 12:48:57.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.779" endtime="20201029 12:48:58.110"></status>
</kw>
<msg timestamp="20201029 12:48:58.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040666625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040780639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:57.776" endtime="20201029 12:48:58.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040666625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040780639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:58.119" endtime="20201029 12:48:58.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.138" endtime="20201029 12:48:58.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.769" endtime="20201029 12:48:58.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.764" endtime="20201029 12:48:58.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:58.155" level="INFO">${RESULT} = [{'diff': 0.00011401400000000256}, {'diff': 0.00011366699999999785}, {'diff': 0.00011330500000000104}, {'diff': 0.00011433400000000066}, {'diff': 0.00011398599999999648}, {'diff': 0.000114249999999996...</msg>
<status status="PASS" starttime="20201029 12:48:58.146" endtime="20201029 12:48:58.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:58.164" level="INFO">${ACCURACY} = {'diff': [0.00011401400000000256, 0.00011366699999999785, 0.00011330500000000104, 0.00011433400000000066, 0.00011398599999999648, 0.0001142499999999963, 0.00011433300000000118, 0.00011438899999999946,...</msg>
<status status="PASS" starttime="20201029 12:48:58.157" endtime="20201029 12:48:58.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.175" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:48:58.173" endtime="20201029 12:48:58.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.180" level="INFO">VALUE: [0.00011401400000000256, 0.00011366699999999785, 0.00011330500000000104, 0.00011433400000000066, 0.00011398599999999648, 0.0001142499999999963, 0.00011433300000000118, 0.00011438899999999946, 0.00011432000000000109, 0.00011343100000000411, 0.00011438799999999999, 0.00011458399999999397, 0.00011394399999999777, 0.00011400000000000299, 0.00011461100000000057, 0.00011348700000000239, 0.00011412499999999964, 0.00011412500000000658, 0.00011450000000000349, 0.00011408400000000041, 0.00011401400000000256, 0.00011401399999999562, 0.00011407000000000084, 0.00011340300000000497, 0.000114597000000001, 0.00011450000000000349, 0.00011452799999999569, 0.00011311099999999907, 0.00011420800000000453, 0.00011412499999999964, 0.00011280600000000002, 0.00011402800000000213, 0.00011445799999999784, 0.0001145550000000023, 0.00011450000000000349, 0.00011380500000000154, 0.00011380500000000154, 0.00011369499999999699, 0.00011419399999999802, 0.00011411100000000007, 0.0001142369999999962, 0.00011280600000000002, 0.00011366699999999785, 0.00011369399999999752, 0.00011444499999999774, 0.00011329100000000147, 0.00011432000000000109, 0.0001138749999999994, 0.00011434800000000023, 0.00011459699999999406]</msg>
<status status="PASS" starttime="20201029 12:48:58.177" endtime="20201029 12:48:58.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.166" endtime="20201029 12:48:58.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:58.194" endtime="20201029 12:48:58.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.189" endtime="20201029 12:48:58.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.186" endtime="20201029 12:48:58.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.704" endtime="20201029 12:48:58.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.703" endtime="20201029 12:48:58.219"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.243" endtime="20201029 12:48:58.266"></status>
</kw>
<msg timestamp="20201029 12:48:58.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:58.240" endtime="20201029 12:48:58.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:58.270" endtime="20201029 12:48:58.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.276" endtime="20201029 12:48:58.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.232" endtime="20201029 12:48:58.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.226" endtime="20201029 12:48:58.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.300" endtime="20201029 12:48:58.644"></status>
</kw>
<msg timestamp="20201029 12:48:58.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040798236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040913611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:58.297" endtime="20201029 12:48:58.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040798236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040913611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:58.654" endtime="20201029 12:48:58.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.672" endtime="20201029 12:48:58.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.289" endtime="20201029 12:48:58.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.285" endtime="20201029 12:48:58.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:58.690" level="INFO">${RESULT} = [{'diff': 0.0001153750000000009}, {'diff': 0.00011498599999999748}, {'diff': 0.00011529200000000295}, {'diff': 0.00011429100000000247}, {'diff': 0.00011494400000000571}, {'diff': 0.0001149999999999970...</msg>
<status status="PASS" starttime="20201029 12:48:58.681" endtime="20201029 12:48:58.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:58.701" level="INFO">${ACCURACY} = {'diff': [0.0001153750000000009, 0.00011498599999999748, 0.00011529200000000295, 0.00011429100000000247, 0.00011494400000000571, 0.00011499999999999705, 0.00011490200000000006, 0.00011513900000000021,...</msg>
<status status="PASS" starttime="20201029 12:48:58.692" endtime="20201029 12:48:58.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.712" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:48:58.709" endtime="20201029 12:48:58.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.717" level="INFO">VALUE: [0.0001153750000000009, 0.00011498599999999748, 0.00011529200000000295, 0.00011429100000000247, 0.00011494400000000571, 0.00011499999999999705, 0.00011490200000000006, 0.00011513900000000021, 0.00011463899999999971, 0.0001154299999999997, 0.00011516699999999935, 0.00011491599999999963, 0.00011494399999999877, 0.0001147220000000046, 0.00011504199999999576, 0.00011562500000000114, 0.00011447200000000435, 0.00011481999999999465, 0.00011463899999999971, 0.00011469500000000493, 0.00011519399999999902, 0.00011493099999999867, 0.00011520899999999806, 0.00011476400000000331, 0.0001149169999999991, 0.00011502800000000313, 0.00011544499999999874, 0.00011540300000000003, 0.00011555600000000277, 0.0001152220000000051, 0.00011481900000000211, 0.00011502799999999619, 0.00011515200000000031, 0.00011538900000000046, 0.00011504199999999576, 0.00011491599999999963, 0.00011427800000000238, 0.00011494399999999877, 0.00011558300000000243, 0.00011558300000000243, 0.0001148750000000004, 0.00011533400000000166, 0.00011455499999999535, 0.00011477800000000288, 0.00011491599999999963, 0.0001149169999999991, 0.00011498599999999748, 0.00011554199999999626, 0.00011397199999999691, 0.00011540300000000003]</msg>
<status status="PASS" starttime="20201029 12:48:58.714" endtime="20201029 12:48:58.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.702" endtime="20201029 12:48:58.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:58.730" endtime="20201029 12:48:58.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.726" endtime="20201029 12:48:58.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.723" endtime="20201029 12:48:58.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.222" endtime="20201029 12:48:58.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.220" endtime="20201029 12:48:58.755"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.778" endtime="20201029 12:48:58.801"></status>
</kw>
<msg timestamp="20201029 12:48:58.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:58.775" endtime="20201029 12:48:58.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:58.805" endtime="20201029 12:48:58.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.811" endtime="20201029 12:48:58.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.768" endtime="20201029 12:48:58.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.762" endtime="20201029 12:48:58.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.835" endtime="20201029 12:48:59.178"></status>
</kw>
<msg timestamp="20201029 12:48:59.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039960139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040076597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:58.831" endtime="20201029 12:48:59.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039960139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040076597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:59.187" endtime="20201029 12:48:59.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.206" endtime="20201029 12:48:59.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.824" endtime="20201029 12:48:59.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.819" endtime="20201029 12:48:59.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:59.223" level="INFO">${RESULT} = [{'diff': 0.00011645799999999984}, {'diff': 0.00011576399999999737}, {'diff': 0.00011548600000000492}, {'diff': 0.00011547200000000535}, {'diff': 0.00011647199999999941}, {'diff': 0.000115889000000000...</msg>
<status status="PASS" starttime="20201029 12:48:59.214" endtime="20201029 12:48:59.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:59.234" level="INFO">${ACCURACY} = {'diff': [0.00011645799999999984, 0.00011576399999999737, 0.00011548600000000492, 0.00011547200000000535, 0.00011647199999999941, 0.00011588900000000096, 0.0001159300000000002, 0.00011486100000000082,...</msg>
<status status="PASS" starttime="20201029 12:48:59.225" endtime="20201029 12:48:59.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.245" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:48:59.243" endtime="20201029 12:48:59.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.251" level="INFO">VALUE: [0.00011645799999999984, 0.00011576399999999737, 0.00011548600000000492, 0.00011547200000000535, 0.00011647199999999941, 0.00011588900000000096, 0.0001159300000000002, 0.00011486100000000082, 0.00011563900000000071, 0.00011577800000000388, 0.00011565200000000081, 0.00011620799999999959, 0.00011655600000000377, 0.0001165550000000043, 0.00011561100000000157, 0.00011672199999999966, 0.00011645899999999931, 0.00011562500000000114, 0.00011590300000000053, 0.00011616700000000035, 0.00011644400000000027, 0.00011577799999999694, 0.00011627799999999744, 0.00011609799999999504, 0.00011622199999999916, 0.00011595899999999881, 0.0001158049999999966, 0.00011650000000000549, 0.00011599999999999805, 0.00011626399999999787, 0.00011601399999999762, 0.0001163750000000019, 0.00011641599999999419, 0.0001163049999999971, 0.00011584700000000225, 0.0001162629999999984, 0.00011650000000000549, 0.00011650000000000549, 0.00011604199999999676, 0.00011577799999999694, 0.00011647300000000582, 0.00011649999999999855, 0.0001162499999999983, 0.00011620899999999906, 0.00011602800000000413, 0.00011636100000000232, 0.0001150970000000015, 0.00011586099999999488, 0.00011631900000000361, 0.00011567999999999995]</msg>
<status status="PASS" starttime="20201029 12:48:59.248" endtime="20201029 12:48:59.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.236" endtime="20201029 12:48:59.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:59.263" endtime="20201029 12:48:59.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.259" endtime="20201029 12:48:59.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.256" endtime="20201029 12:48:59.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.757" endtime="20201029 12:48:59.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.756" endtime="20201029 12:48:59.289"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.312" endtime="20201029 12:48:59.335"></status>
</kw>
<msg timestamp="20201029 12:48:59.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:59.308" endtime="20201029 12:48:59.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:59.338" endtime="20201029 12:48:59.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.345" endtime="20201029 12:48:59.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.301" endtime="20201029 12:48:59.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.295" endtime="20201029 12:48:59.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.368" endtime="20201029 12:48:59.713"></status>
</kw>
<msg timestamp="20201029 12:48:59.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040125597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040242208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:59.365" endtime="20201029 12:48:59.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040125597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040242208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:59.722" endtime="20201029 12:48:59.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.741" endtime="20201029 12:48:59.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.358" endtime="20201029 12:48:59.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.353" endtime="20201029 12:48:59.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:59.758" level="INFO">${RESULT} = [{'diff': 0.00011661100000000257}, {'diff': 0.00011719400000000102}, {'diff': 0.00011755599999999783}, {'diff': 0.00011676399999999837}, {'diff': 0.00011741600000000213}, {'diff': 0.000116653000000001...</msg>
<status status="PASS" starttime="20201029 12:48:59.750" endtime="20201029 12:48:59.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:59.767" level="INFO">${ACCURACY} = {'diff': [0.00011661100000000257, 0.00011719400000000102, 0.00011755599999999783, 0.00011676399999999837, 0.00011741600000000213, 0.00011665300000000128, 0.0001167499999999988, 0.00011695899999999981,...</msg>
<status status="PASS" starttime="20201029 12:48:59.760" endtime="20201029 12:48:59.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.779" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:48:59.776" endtime="20201029 12:48:59.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.784" level="INFO">VALUE: [0.00011661100000000257, 0.00011719400000000102, 0.00011755599999999783, 0.00011676399999999837, 0.00011741600000000213, 0.00011665300000000128, 0.0001167499999999988, 0.00011695899999999981, 0.00011701399999999862, 0.00011716700000000135, 0.00011762500000000314, 0.00011737499999999595, 0.0001172629999999994, 0.00011615300000000078, 0.00011765300000000228, 0.00011647199999999941, 0.00011722199999999322, 0.00011715199999999537, 0.00011695899999999981, 0.00011631899999999668, 0.0001172499999999993, 0.00011740300000000203, 0.00011716700000000135, 0.00011752799999999869, 0.00011763900000000271, 0.00011726399999999887, 0.0001168750000000024, 0.00011641600000000113, 0.0001176379999999963, 0.00011738900000000246, 0.00011681899999999718, 0.00011615300000000078, 0.00011716600000000188, 0.00011686099999999588, 0.0001169170000000011, 0.00011679099999999804, 0.00011616600000000088, 0.0001167499999999988, 0.00011747200000000041, 0.00011694399999999383, 0.00011683400000000316, 0.00011702799999999819, 0.00011677799999999794, 0.00011713900000000221, 0.00011595799999999934, 0.00011613900000000121, 0.00011666600000000138, 0.00011751399999999912, 0.00011738899999999552, 0.00011754199999999826]</msg>
<status status="PASS" starttime="20201029 12:48:59.781" endtime="20201029 12:48:59.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.769" endtime="20201029 12:48:59.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:59.797" endtime="20201029 12:48:59.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.793" endtime="20201029 12:48:59.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.790" endtime="20201029 12:48:59.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.291" endtime="20201029 12:48:59.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.290" endtime="20201029 12:48:59.822"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.845" endtime="20201029 12:48:59.875"></status>
</kw>
<msg timestamp="20201029 12:48:59.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:59.842" endtime="20201029 12:48:59.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:59.878" endtime="20201029 12:48:59.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.885" endtime="20201029 12:48:59.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.835" endtime="20201029 12:48:59.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.829" endtime="20201029 12:48:59.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.908" endtime="20201029 12:49:00.251"></status>
</kw>
<msg timestamp="20201029 12:49:00.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046121111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046239708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:59.905" endtime="20201029 12:49:00.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046121111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046239708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:00.260" endtime="20201029 12:49:00.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.279" endtime="20201029 12:49:00.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.898" endtime="20201029 12:49:00.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.893" endtime="20201029 12:49:00.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:00.296" level="INFO">${RESULT} = [{'diff': 0.00011859699999999807}, {'diff': 0.0001171249999999957}, {'diff': 0.000117597000000004}, {'diff': 0.00011827799999999944}, {'diff': 0.00011693100000000067}, {'diff': 0.0001184170000000026},...</msg>
<status status="PASS" starttime="20201029 12:49:00.287" endtime="20201029 12:49:00.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:00.305" level="INFO">${ACCURACY} = {'diff': [0.00011859699999999807, 0.0001171249999999957, 0.000117597000000004, 0.00011827799999999944, 0.00011693100000000067, 0.0001184170000000026, 0.0001181950000000015, 0.00011798699999999995, 0.0...</msg>
<status status="PASS" starttime="20201029 12:49:00.298" endtime="20201029 12:49:00.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.316" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:49:00.313" endtime="20201029 12:49:00.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.321" level="INFO">VALUE: [0.00011859699999999807, 0.0001171249999999957, 0.000117597000000004, 0.00011827799999999944, 0.00011693100000000067, 0.0001184170000000026, 0.0001181950000000015, 0.00011798699999999995, 0.0001181249999999967, 0.00011716700000000135, 0.00011788899999999602, 0.00011766700000000185, 0.00011815300000000278, 0.00011811100000000407, 0.00011830599999999858, 0.00011854199999999926, 0.00011779199999999851, 0.00011838899999999652, 0.00011849999999999361, 0.00011852799999999969, 0.0001178750000000034, 0.00011820800000000159, 0.00011790200000000306, 0.00011791600000000263, 0.00011834700000000475, 0.00011788899999999602, 0.00011763800000000324, 0.00011819499999999455, 0.00011804099999999929, 0.0001172499999999993, 0.00011790300000000253, 0.00011765300000000228, 0.00011841599999999619, 0.00011841699999999566, 0.00011815299999999584, 0.00011731899999999768, 0.00011763800000000324, 0.00011820799999999465, 0.00011855599999999883, 0.00011848600000000098, 0.00011806899999999843, 0.0001177499999999998, 0.00011820900000000106, 0.00011773600000000023, 0.00011772200000000066, 0.00011793100000000167, 0.00011861200000000405, 0.00011809699999999757, 0.00011852799999999969, 0.00011836100000000432]</msg>
<status status="PASS" starttime="20201029 12:49:00.318" endtime="20201029 12:49:00.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.306" endtime="20201029 12:49:00.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:00.335" endtime="20201029 12:49:00.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.329" endtime="20201029 12:49:00.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.327" endtime="20201029 12:49:00.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.824" endtime="20201029 12:49:00.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.823" endtime="20201029 12:49:00.360"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.383" endtime="20201029 12:49:00.404"></status>
</kw>
<msg timestamp="20201029 12:49:00.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:00.379" endtime="20201029 12:49:00.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:00.407" endtime="20201029 12:49:00.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.413" endtime="20201029 12:49:00.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.372" endtime="20201029 12:49:00.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.366" endtime="20201029 12:49:00.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.437" endtime="20201029 12:49:00.778"></status>
</kw>
<msg timestamp="20201029 12:49:00.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039440292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03956, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:49:00.433" endtime="20201029 12:49:00.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039440292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03956, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:49:00.787" endtime="20201029 12:49:00.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.805" endtime="20201029 12:49:00.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.426" endtime="20201029 12:49:00.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.421" endtime="20201029 12:49:00.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:00.822" level="INFO">${RESULT} = [{'diff': 0.00011970799999999615}, {'diff': 0.00011923599999999479}, {'diff': 0.00011793099999999473}, {'diff': 0.0001192500000000013}, {'diff': 0.00011956899999999993}, {'diff': 0.0001190559999999993...</msg>
<status status="PASS" starttime="20201029 12:49:00.813" endtime="20201029 12:49:00.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:00.832" level="INFO">${ACCURACY} = {'diff': [0.00011970799999999615, 0.00011923599999999479, 0.00011793099999999473, 0.0001192500000000013, 0.00011956899999999993, 0.00011905599999999933, 0.00011904100000000029, 0.00011911099999999814,...</msg>
<status status="PASS" starttime="20201029 12:49:00.824" endtime="20201029 12:49:00.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.843" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:49:00.841" endtime="20201029 12:49:00.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.848" level="INFO">VALUE: [0.00011970799999999615, 0.00011923599999999479, 0.00011793099999999473, 0.0001192500000000013, 0.00011956899999999993, 0.00011905599999999933, 0.00011904100000000029, 0.00011911099999999814, 0.00011948600000000198, 0.00011897199999999497, 0.00011955599999999983, 0.00011791699999999516, 0.00011911200000000455, 0.00011918100000000292, 0.00011879100000000004, 0.00011945800000000284, 0.00011772300000000013, 0.00011807000000000484, 0.0001191950000000025, 0.00011857000000000534, 0.00011879199999999951, 0.00011947199999999547, 0.00011940300000000403, 0.00011916700000000335, 0.0001187500000000008, 0.0001190699999999989, 0.00011954200000000026, 0.00011791699999999516, 0.00011952800000000069, 0.00011900000000000105, 0.00011922199999999522, 0.00011904199999999976, 0.0001194300000000037, 0.00011954200000000026, 0.00011873600000000123, 0.00011867999999999601, 0.00011904100000000029, 0.00011950000000000155, 0.00011923600000000173, 0.00011866700000000285, 0.00011865199999999687, 0.00011811199999999661, 0.00011912500000000464, 0.00011929200000000001, 0.00011867999999999601, 0.00011940200000000456, 0.00011948600000000198, 0.00011841599999999619, 0.00011899999999999411, 0.00011955599999999983]</msg>
<status status="PASS" starttime="20201029 12:49:00.845" endtime="20201029 12:49:00.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.834" endtime="20201029 12:49:00.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:00.861" endtime="20201029 12:49:00.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.856" endtime="20201029 12:49:00.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.854" endtime="20201029 12:49:00.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.362" endtime="20201029 12:49:00.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.361" endtime="20201029 12:49:00.886"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.908" endtime="20201029 12:49:00.931"></status>
</kw>
<msg timestamp="20201029 12:49:00.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:00.905" endtime="20201029 12:49:00.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:00.934" endtime="20201029 12:49:00.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.941" endtime="20201029 12:49:00.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.898" endtime="20201029 12:49:00.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.892" endtime="20201029 12:49:00.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.964" endtime="20201029 12:49:01.306"></status>
</kw>
<msg timestamp="20201029 12:49:01.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039251431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039371736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:00.960" endtime="20201029 12:49:01.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039251431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039371736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:01.315" endtime="20201029 12:49:01.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.333" endtime="20201029 12:49:01.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.953" endtime="20201029 12:49:01.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.949" endtime="20201029 12:49:01.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:01.350" level="INFO">${RESULT} = [{'diff': 0.00012030499999999417}, {'diff': 0.00012047199999999647}, {'diff': 0.00011974999999999486}, {'diff': 0.00011959800000000548}, {'diff': 0.00012045899999999637}, {'diff': 0.000119082999999999...</msg>
<status status="PASS" starttime="20201029 12:49:01.341" endtime="20201029 12:49:01.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:01.361" level="INFO">${ACCURACY} = {'diff': [0.00012030499999999417, 0.00012047199999999647, 0.00011974999999999486, 0.00011959800000000548, 0.00012045899999999637, 0.000119082999999999, 0.00012016699999999741, 0.00011968100000000342, ...</msg>
<status status="PASS" starttime="20201029 12:49:01.352" endtime="20201029 12:49:01.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.371" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:49:01.369" endtime="20201029 12:49:01.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.377" level="INFO">VALUE: [0.00012030499999999417, 0.00012047199999999647, 0.00011974999999999486, 0.00011959800000000548, 0.00012045899999999637, 0.000119082999999999, 0.00012016699999999741, 0.00011968100000000342, 0.00011988899999999802, 0.00011972199999999572, 0.00011973600000000223, 0.00011979200000000051, 0.00012055499999999442, 0.00012001400000000162, 0.00011997199999999597, 0.00012059700000000007, 0.00011991600000000463, 0.00011983299999999975, 0.00011970900000000256, 0.00011894400000000277, 0.00011973600000000223, 0.00012020900000000306, 0.00012027800000000144, 0.00012055500000000136, 0.00012038899999999852, 0.00012022200000000316, 0.00012045800000000384, 0.00012038899999999852, 0.00011982000000000659, 0.00012040199999999862, 0.00012026400000000187, 0.00012031900000000068, 0.00011993100000000367, 0.0001203750000000059, 0.00011915299999999684, 0.00012024999999999536, 0.00012020800000000359, 0.00012019499999999655, 0.00012044399999999733, 0.00012026400000000187, 0.00011988900000000496, 0.00012061099999999964, 0.00012023599999999579, 0.00011990300000000453, 0.00012019399999999708, 0.00011969499999999605, 0.00012019499999999655, 0.00012022200000000316, 0.00011966699999999691, 0.00012013899999999827]</msg>
<status status="PASS" starttime="20201029 12:49:01.374" endtime="20201029 12:49:01.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.362" endtime="20201029 12:49:01.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:01.395" endtime="20201029 12:49:01.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.391" endtime="20201029 12:49:01.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.388" endtime="20201029 12:49:01.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.888" endtime="20201029 12:49:01.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.887" endtime="20201029 12:49:01.420"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.443" endtime="20201029 12:49:01.464"></status>
</kw>
<msg timestamp="20201029 12:49:01.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:01.440" endtime="20201029 12:49:01.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:01.467" endtime="20201029 12:49:01.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.473" endtime="20201029 12:49:01.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.432" endtime="20201029 12:49:01.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.427" endtime="20201029 12:49:01.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.496" endtime="20201029 12:49:01.834"></status>
</kw>
<msg timestamp="20201029 12:49:01.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039346708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039468028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:01.493" endtime="20201029 12:49:01.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039346708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039468028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:01.843" endtime="20201029 12:49:01.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.861" endtime="20201029 12:49:01.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.486" endtime="20201029 12:49:01.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.481" endtime="20201029 12:49:01.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:01.878" level="INFO">${RESULT} = [{'diff': 0.00012132000000000115}, {'diff': 0.0001209170000000051}, {'diff': 0.00012134700000000082}, {'diff': 0.00012106900000000143}, {'diff': 0.0001207500000000028}, {'diff': 0.00012012500000000564...</msg>
<status status="PASS" starttime="20201029 12:49:01.869" endtime="20201029 12:49:01.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:01.887" level="INFO">${ACCURACY} = {'diff': [0.00012132000000000115, 0.0001209170000000051, 0.00012134700000000082, 0.00012106900000000143, 0.0001207500000000028, 0.00012012500000000564, 0.00012066699999999791, 0.00012076400000000237, ...</msg>
<status status="PASS" starttime="20201029 12:49:01.880" endtime="20201029 12:49:01.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.898" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:49:01.895" endtime="20201029 12:49:01.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.903" level="INFO">VALUE: [0.00012132000000000115, 0.0001209170000000051, 0.00012134700000000082, 0.00012106900000000143, 0.0001207500000000028, 0.00012012500000000564, 0.00012066699999999791, 0.00012076400000000237, 0.00012065300000000528, 0.00012006900000000043, 0.00012090199999999912, 0.00012158299999999456, 0.00012134700000000082, 0.00012043100000000417, 0.00012136100000000039, 0.00012118099999999798, 0.0001213050000000021, 0.00012147199999999747, 0.0001212909999999956, 0.00012038799999999905, 0.00012091699999999816, 0.00012081900000000118, 0.00012155500000000236, 0.0001208050000000016, 0.00012104200000000176, 0.0001212500000000033, 0.00012097199999999697, 0.0001209029999999986, 0.00012154200000000226, 0.0001209029999999986, 0.00012068099999999748, 0.00012119499999999755, 0.00012137499999999996, 0.00012087499999999946, 0.00012147200000000441, 0.00012132000000000115, 0.00012140300000000603, 0.0001211950000000045, 0.00012151300000000365, 0.00011997200000000291, 0.00012043099999999723, 0.00012170799999999815, 0.00012115299999999884, 0.000121083000000001, 0.0001214029999999991, 0.00012136100000000039, 0.00012154200000000226, 0.00012138900000000646, 0.0001208750000000064, 0.00012152800000000269]</msg>
<status status="PASS" starttime="20201029 12:49:01.900" endtime="20201029 12:49:01.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.889" endtime="20201029 12:49:01.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:01.915" endtime="20201029 12:49:01.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.911" endtime="20201029 12:49:01.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.908" endtime="20201029 12:49:01.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.422" endtime="20201029 12:49:01.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.421" endtime="20201029 12:49:01.940"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.962" endtime="20201029 12:49:01.986"></status>
</kw>
<msg timestamp="20201029 12:49:01.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:01.959" endtime="20201029 12:49:01.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:01.990" endtime="20201029 12:49:01.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.997" endtime="20201029 12:49:02.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.952" endtime="20201029 12:49:02.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.946" endtime="20201029 12:49:02.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:02.026" endtime="20201029 12:49:02.381"></status>
</kw>
<msg timestamp="20201029 12:49:02.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0404025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040524889, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:02.022" endtime="20201029 12:49:02.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0404025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040524889, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:02.391" endtime="20201029 12:49:02.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:02.410" endtime="20201029 12:49:02.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.012" endtime="20201029 12:49:02.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.007" endtime="20201029 12:49:02.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:02.427" level="INFO">${RESULT} = [{'diff': 0.00012238900000000053}, {'diff': 0.00012083300000000075}, {'diff': 0.000121777999999996}, {'diff': 0.00012115199999999937}, {'diff': 0.00012202799999999625}, {'diff': 0.00012101399999999568...</msg>
<status status="PASS" starttime="20201029 12:49:02.418" endtime="20201029 12:49:02.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:02.436" level="INFO">${ACCURACY} = {'diff': [0.00012238900000000053, 0.00012083300000000075, 0.000121777999999996, 0.00012115199999999937, 0.00012202799999999625, 0.00012101399999999568, 0.00012268, 0.00012256900000000293, 0.0001217219...</msg>
<status status="PASS" starttime="20201029 12:49:02.429" endtime="20201029 12:49:02.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.447" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:49:02.445" endtime="20201029 12:49:02.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.453" level="INFO">VALUE: [0.00012238900000000053, 0.00012083300000000075, 0.000121777999999996, 0.00012115199999999937, 0.00012202799999999625, 0.00012101399999999568, 0.00012268, 0.00012256900000000293, 0.00012172199999999772, 0.00012259700000000207, 0.00012199999999999711, 0.0001219170000000061, 0.0001222359999999978, 0.00012238900000000053, 0.00012241699999999966, 0.00012248699999999751, 0.00012236100000000139, 0.0001222359999999978, 0.00012180599999999514, 0.0001225280000000037, 0.00012111100000000014, 0.0001211249999999997, 0.00012209700000000157, 0.00012254100000000379, 0.00012237500000000096, 0.0001222080000000056, 0.00012188900000000003, 0.00012184800000000079, 0.0001217500000000038, 0.0001219449999999983, 0.00012168099999999848, 0.00012226400000000387, 0.00012098600000000348, 0.00012211100000000114, 0.0001224030000000001, 0.00012163899999999978, 0.00012220799999999865, 0.00012222300000000463, 0.00012222199999999822, 0.00012254200000000326, 0.00012244399999999933, 0.0001221109999999942, 0.00012166699999999891, 0.00012248699999999751, 0.00012216599999999994, 0.0001215830000000015, 0.00012084700000000032, 0.00012143099999999823, 0.00012174999999999686, 0.00012255500000000336]</msg>
<status status="PASS" starttime="20201029 12:49:02.450" endtime="20201029 12:49:02.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.438" endtime="20201029 12:49:02.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:02.467" endtime="20201029 12:49:02.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.461" endtime="20201029 12:49:02.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.459" endtime="20201029 12:49:02.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.942" endtime="20201029 12:49:02.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.941" endtime="20201029 12:49:02.493"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:02.516" endtime="20201029 12:49:02.539"></status>
</kw>
<msg timestamp="20201029 12:49:02.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:02.512" endtime="20201029 12:49:02.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:02.543" endtime="20201029 12:49:02.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:02.550" endtime="20201029 12:49:02.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.505" endtime="20201029 12:49:02.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.499" endtime="20201029 12:49:02.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:02.574" endtime="20201029 12:49:02.917"></status>
</kw>
<msg timestamp="20201029 12:49:02.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039991944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040115444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:02.571" endtime="20201029 12:49:02.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039991944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040115444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:02.926" endtime="20201029 12:49:02.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:02.945" endtime="20201029 12:49:02.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.563" endtime="20201029 12:49:02.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.558" endtime="20201029 12:49:02.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:02.962" level="INFO">${RESULT} = [{'diff': 0.0001234999999999986}, {'diff': 0.00012297299999999844}, {'diff': 0.0001235979999999956}, {'diff': 0.00012333400000000272}, {'diff': 0.00012255499999999642}, {'diff': 0.00012286100000000189...</msg>
<status status="PASS" starttime="20201029 12:49:02.953" endtime="20201029 12:49:02.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:02.973" level="INFO">${ACCURACY} = {'diff': [0.0001234999999999986, 0.00012297299999999844, 0.0001235979999999956, 0.00012333400000000272, 0.00012255499999999642, 0.00012286100000000189, 0.00012359700000000307, 0.00012287500000000146, ...</msg>
<status status="PASS" starttime="20201029 12:49:02.964" endtime="20201029 12:49:02.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.984" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:49:02.982" endtime="20201029 12:49:02.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.989" level="INFO">VALUE: [0.0001234999999999986, 0.00012297299999999844, 0.0001235979999999956, 0.00012333400000000272, 0.00012255499999999642, 0.00012286100000000189, 0.00012359700000000307, 0.00012287500000000146, 0.0001226250000000012, 0.0001226380000000013, 0.00012270900000000556, 0.00012316700000000042, 0.00012280599999999614, 0.00012287499999999452, 0.00012330599999999664, 0.00012311100000000214, 0.0001227359999999983, 0.00012320900000000606, 0.00012237500000000096, 0.00012316700000000042, 0.00012266699999999991, 0.00012288899999999409, 0.0001232500000000053, 0.00012269499999999905, 0.00012340200000000162, 0.00012333300000000325, 0.0001228050000000036, 0.000123083000000003, 0.00012311100000000214, 0.00012290200000000112, 0.00012302799999999725, 0.00012291700000000017, 0.0001234030000000011, 0.0001233329999999963, 0.00012300000000000505, 0.00012176399999999643, 0.0001232359999999988, 0.00012243099999999923, 0.0001235700000000034, 0.0001229579999999994, 0.00012192999999999926, 0.0001234999999999986, 0.00012359699999999613, 0.00012334699999999588, 0.00012266600000000044, 0.00012301400000000462, 0.00012301399999999768, 0.00012351399999999818, 0.00012305600000000333, 0.00012309699999999563]</msg>
<status status="PASS" starttime="20201029 12:49:02.986" endtime="20201029 12:49:02.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.975" endtime="20201029 12:49:02.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:03.002" endtime="20201029 12:49:03.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.998" endtime="20201029 12:49:03.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.995" endtime="20201029 12:49:03.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.495" endtime="20201029 12:49:03.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.493" endtime="20201029 12:49:03.028"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.052" endtime="20201029 12:49:03.076"></status>
</kw>
<msg timestamp="20201029 12:49:03.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:03.048" endtime="20201029 12:49:03.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:03.079" endtime="20201029 12:49:03.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.085" endtime="20201029 12:49:03.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.040" endtime="20201029 12:49:03.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.034" endtime="20201029 12:49:03.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.109" endtime="20201029 12:49:03.451"></status>
</kw>
<msg timestamp="20201029 12:49:03.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041430069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041554292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:03.106" endtime="20201029 12:49:03.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041430069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041554292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:03.461" endtime="20201029 12:49:03.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.479" endtime="20201029 12:49:03.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.098" endtime="20201029 12:49:03.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.094" endtime="20201029 12:49:03.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:03.500" level="INFO">${RESULT} = [{'diff': 0.0001242229999999997}, {'diff': 0.0001229579999999994}, {'diff': 0.0001241120000000026}, {'diff': 0.00012363900000000178}, {'diff': 0.00012441699999999473}, {'diff': 0.0001244439999999944},...</msg>
<status status="PASS" starttime="20201029 12:49:03.488" endtime="20201029 12:49:03.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:03.512" level="INFO">${ACCURACY} = {'diff': [0.0001242229999999997, 0.0001229579999999994, 0.0001241120000000026, 0.00012363900000000178, 0.00012441699999999473, 0.0001244439999999944, 0.00012454199999999832, 0.00012404199999999782, 0....</msg>
<status status="PASS" starttime="20201029 12:49:03.503" endtime="20201029 12:49:03.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.524" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:49:03.521" endtime="20201029 12:49:03.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.529" level="INFO">VALUE: [0.0001242229999999997, 0.0001229579999999994, 0.0001241120000000026, 0.00012363900000000178, 0.00012441699999999473, 0.0001244439999999944, 0.00012454199999999832, 0.00012404199999999782, 0.0001242359999999998, 0.00012436100000000339, 0.00012369400000000058, 0.00012405500000000486, 0.00012430599999999764, 0.00012388800000000255, 0.00012438900000000253, 0.00012466700000000192, 0.00012405500000000486, 0.0001236250000000022, 0.00012461100000000364, 0.0001240559999999974, 0.00012413899999999534, 0.00012315300000000085, 0.00012462499999999627, 0.00012359699999999613, 0.00012416600000000194, 0.00012409700000000357, 0.0001238199999999967, 0.0001242359999999998, 0.00012413899999999534, 0.00012448600000000004, 0.00012347199999999947, 0.0001237500000000058, 0.0001239030000000016, 0.00012416600000000194, 0.00012418100000000099, 0.00012365199999999493, 0.00012426399999999893, 0.0001241120000000026, 0.0001241250000000027, 0.00012448600000000004, 0.00012422200000000022, 0.0001239160000000017, 0.0001244030000000021, 0.00012452799999999875, 0.0001231250000000017, 0.00012397199999999997, 0.0001245979999999966, 0.0001237359999999993, 0.00012329199999999707, 0.00012391699999999423]</msg>
<status status="PASS" starttime="20201029 12:49:03.526" endtime="20201029 12:49:03.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.514" endtime="20201029 12:49:03.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:03.542" endtime="20201029 12:49:03.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.537" endtime="20201029 12:49:03.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.535" endtime="20201029 12:49:03.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.030" endtime="20201029 12:49:03.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.029" endtime="20201029 12:49:03.567"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.592" endtime="20201029 12:49:03.615"></status>
</kw>
<msg timestamp="20201029 12:49:03.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:03.588" endtime="20201029 12:49:03.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:03.618" endtime="20201029 12:49:03.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.624" endtime="20201029 12:49:03.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.581" endtime="20201029 12:49:03.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.574" endtime="20201029 12:49:03.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.648" endtime="20201029 12:49:03.993"></status>
</kw>
<msg timestamp="20201029 12:49:04.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042000917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04212475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:03.645" endtime="20201029 12:49:04.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042000917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04212475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:04.002" endtime="20201029 12:49:04.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.021" endtime="20201029 12:49:04.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.637" endtime="20201029 12:49:04.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.633" endtime="20201029 12:49:04.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:04.037" level="INFO">${RESULT} = [{'diff': 0.00012383300000000375}, {'diff': 0.00012395899999999987}, {'diff': 0.00012541700000000267}, {'diff': 0.00012469500000000105}, {'diff': 0.0001253889999999966}, {'diff': 0.0001247080000000011...</msg>
<status status="PASS" starttime="20201029 12:49:04.029" endtime="20201029 12:49:04.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:04.047" level="INFO">${ACCURACY} = {'diff': [0.00012383300000000375, 0.00012395899999999987, 0.00012541700000000267, 0.00012469500000000105, 0.0001253889999999966, 0.00012470800000000115, 0.0001253889999999966, 0.00012547300000000094, ...</msg>
<status status="PASS" starttime="20201029 12:49:04.039" endtime="20201029 12:49:04.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.057" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:49:04.055" endtime="20201029 12:49:04.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.063" level="INFO">VALUE: [0.00012383300000000375, 0.00012395899999999987, 0.00012541700000000267, 0.00012469500000000105, 0.0001253889999999966, 0.00012470800000000115, 0.0001253889999999966, 0.00012547300000000094, 0.00012397199999999997, 0.00012481899999999824, 0.00012554199999999932, 0.00012479100000000604, 0.00012380599999999714, 0.00012481900000000518, 0.00012491699999999523, 0.0001254580000000019, 0.00012526399999999993, 0.00012548600000000104, 0.00012523599999999385, 0.00012534699999999788, 0.000124777999999999, 0.00012493100000000174, 0.0001246529999999954, 0.00012533399999999778, 0.00012466700000000192, 0.00012498600000000054, 0.00012492999999999532, 0.00012530599999999864, 0.00012519499999999462, 0.00012562499999999727, 0.0001247360000000003, 0.00012530599999999864, 0.00012529199999999907, 0.00012470900000000062, 0.0001246250000000032, 0.0001255000000000006, 0.00012391700000000117, 0.00012476399999999943, 0.00012526399999999993, 0.0001254580000000019, 0.00012525000000000036, 0.00012525000000000036, 0.00012541699999999573, 0.00012551400000000018, 0.00012486200000000336, 0.0001256109999999977, 0.00012559699999999813, 0.00012522200000000122, 0.00012543000000000276, 0.00012547199999999453]</msg>
<status status="PASS" starttime="20201029 12:49:04.060" endtime="20201029 12:49:04.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.048" endtime="20201029 12:49:04.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:04.075" endtime="20201029 12:49:04.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.071" endtime="20201029 12:49:04.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.068" endtime="20201029 12:49:04.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.570" endtime="20201029 12:49:04.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.568" endtime="20201029 12:49:04.100"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.123" endtime="20201029 12:49:04.147"></status>
</kw>
<msg timestamp="20201029 12:49:04.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.119" endtime="20201029 12:49:04.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.150" endtime="20201029 12:49:04.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.156" endtime="20201029 12:49:04.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.112" endtime="20201029 12:49:04.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.106" endtime="20201029 12:49:04.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.180" endtime="20201029 12:49:04.520"></status>
</kw>
<msg timestamp="20201029 12:49:04.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040838083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040964597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:04.176" endtime="20201029 12:49:04.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040838083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040964597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:04.529" endtime="20201029 12:49:04.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.547" endtime="20201029 12:49:04.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.169" endtime="20201029 12:49:04.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.164" endtime="20201029 12:49:04.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:04.564" level="INFO">${RESULT} = [{'diff': 0.00012651400000000118}, {'diff': 0.00012565300000000335}, {'diff': 0.00012575000000000086}, {'diff': 0.00012570800000000215}, {'diff': 0.0001263889999999976}, {'diff': 0.0001261250000000047...</msg>
<status status="PASS" starttime="20201029 12:49:04.556" endtime="20201029 12:49:04.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:04.577" level="INFO">${ACCURACY} = {'diff': [0.00012651400000000118, 0.00012565300000000335, 0.00012575000000000086, 0.00012570800000000215, 0.0001263889999999976, 0.0001261250000000047, 0.0001256120000000041, 0.0001265000000000016, 0....</msg>
<status status="PASS" starttime="20201029 12:49:04.567" endtime="20201029 12:49:04.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.591" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:49:04.588" endtime="20201029 12:49:04.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.597" level="INFO">VALUE: [0.00012651400000000118, 0.00012565300000000335, 0.00012575000000000086, 0.00012570800000000215, 0.0001263889999999976, 0.0001261250000000047, 0.0001256120000000041, 0.0001265000000000016, 0.00012640299999999716, 0.00012604100000000035, 0.00012598600000000154, 0.00012480499999999867, 0.00012634699999999888, 0.00012631899999999974, 0.00012663899999999784, 0.00012652800000000075, 0.00012645799999999596, 0.00012508399999999753, 0.00012655500000000042, 0.00012513900000000328, 0.00012640299999999716, 0.00012548600000000104, 0.00012636099999999845, 0.00012618099999999605, 0.00012630599999999964, 0.0001265000000000016, 0.00012640299999999716, 0.00012637499999999802, 0.00012588900000000403, 0.00012638900000000453, 0.00012619500000000256, 0.00012619400000000308, 0.0001265000000000016, 0.0001264030000000041, 0.0001259160000000037, 0.0001265559999999999, 0.00012613899999999734, 0.00012604199999999982, 0.00012609699999999863, 0.00012637499999999802, 0.00012625000000000136, 0.00012602700000000078, 0.00012513900000000328, 0.00012568099999999555, 0.00012634700000000582, 0.00012651399999999424, 0.00012636099999999845, 0.00012591699999999623, 0.0001256529999999964, 0.00012622200000000222]</msg>
<status status="PASS" starttime="20201029 12:49:04.594" endtime="20201029 12:49:04.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.579" endtime="20201029 12:49:04.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:04.620" endtime="20201029 12:49:04.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.614" endtime="20201029 12:49:04.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.612" endtime="20201029 12:49:04.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.102" endtime="20201029 12:49:04.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.101" endtime="20201029 12:49:04.646"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.668" endtime="20201029 12:49:04.690"></status>
</kw>
<msg timestamp="20201029 12:49:04.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.665" endtime="20201029 12:49:04.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.694" endtime="20201029 12:49:04.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.701" endtime="20201029 12:49:04.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.658" endtime="20201029 12:49:04.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.652" endtime="20201029 12:49:04.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.723" endtime="20201029 12:49:05.060"></status>
</kw>
<msg timestamp="20201029 12:49:05.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040030167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040156625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:04.720" endtime="20201029 12:49:05.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040030167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040156625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.069" endtime="20201029 12:49:05.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.087" endtime="20201029 12:49:05.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.713" endtime="20201029 12:49:05.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.708" endtime="20201029 12:49:05.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:05.105" level="INFO">${RESULT} = [{'diff': 0.0001264580000000029}, {'diff': 0.00012766600000000544}, {'diff': 0.00012681900000000024}, {'diff': 0.00012747199999999653}, {'diff': 0.0001257910000000001}, {'diff': 0.00012741699999999773...</msg>
<status status="PASS" starttime="20201029 12:49:05.096" endtime="20201029 12:49:05.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:05.119" level="INFO">${ACCURACY} = {'diff': [0.0001264580000000029, 0.00012766600000000544, 0.00012681900000000024, 0.00012747199999999653, 0.0001257910000000001, 0.00012741699999999773, 0.00012690299999999766, 0.00012729200000000107, ...</msg>
<status status="PASS" starttime="20201029 12:49:05.107" endtime="20201029 12:49:05.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.130" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:49:05.128" endtime="20201029 12:49:05.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.135" level="INFO">VALUE: [0.0001264580000000029, 0.00012766600000000544, 0.00012681900000000024, 0.00012747199999999653, 0.0001257910000000001, 0.00012741699999999773, 0.00012690299999999766, 0.00012729200000000107, 0.00012713899999999834, 0.00012672200000000272, 0.00012731900000000074, 0.0001270560000000004, 0.00012752800000000175, 0.00012726400000000193, 0.00012743000000000476, 0.0001264439999999964, 0.00012763899999999884, 0.00012715200000000537, 0.00012747200000000347, 0.00012693100000000374, 0.00012752800000000175, 0.00012666699999999698, 0.00012681900000000024, 0.00012663900000000478, 0.00012695899999999594, 0.00012688900000000503, 0.0001273889999999986, 0.0001265000000000016, 0.0001274439999999974, 0.0001273889999999986, 0.0001268889999999981, 0.00012704199999999388, 0.00012698699999999508, 0.00012706999999999996, 0.0001270979999999991, 0.0001271529999999979, 0.00012686099999999895, 0.00012718099999999705, 0.0001272780000000015, 0.00012722199999999628, 0.0001274309999999973, 0.0001271109999999992, 0.00012618099999999605, 0.0001274859999999961, 0.00012713899999999834, 0.0001273879999999991, 0.00012706999999999996, 0.00012672200000000272, 0.00012734799999999935, 0.00012745799999999696]</msg>
<status status="PASS" starttime="20201029 12:49:05.132" endtime="20201029 12:49:05.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.121" endtime="20201029 12:49:05.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:05.147" endtime="20201029 12:49:05.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.143" endtime="20201029 12:49:05.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.141" endtime="20201029 12:49:05.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.648" endtime="20201029 12:49:05.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.646" endtime="20201029 12:49:05.172"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.195" endtime="20201029 12:49:05.216"></status>
</kw>
<msg timestamp="20201029 12:49:05.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.191" endtime="20201029 12:49:05.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.219" endtime="20201029 12:49:05.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.225" endtime="20201029 12:49:05.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.184" endtime="20201029 12:49:05.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.179" endtime="20201029 12:49:05.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.248" endtime="20201029 12:49:05.577"></status>
</kw>
<msg timestamp="20201029 12:49:05.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038955986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039084583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.245" endtime="20201029 12:49:05.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038955986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039084583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.586" endtime="20201029 12:49:05.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.604" endtime="20201029 12:49:05.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.238" endtime="20201029 12:49:05.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.233" endtime="20201029 12:49:05.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:05.621" level="INFO">${RESULT} = [{'diff': 0.00012859700000000113}, {'diff': 0.00012795900000000388}, {'diff': 0.00012829099999999566}, {'diff': 0.00012747200000000347}, {'diff': 0.00012827700000000303}, {'diff': 0.000128388999999999...</msg>
<status status="PASS" starttime="20201029 12:49:05.612" endtime="20201029 12:49:05.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:05.632" level="INFO">${ACCURACY} = {'diff': [0.00012859700000000113, 0.00012795900000000388, 0.00012829099999999566, 0.00012747200000000347, 0.00012827700000000303, 0.0001283889999999996, 0.00012867999999999907, 0.0001283189999999948, ...</msg>
<status status="PASS" starttime="20201029 12:49:05.623" endtime="20201029 12:49:05.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.643" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:49:05.640" endtime="20201029 12:49:05.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.648" level="INFO">VALUE: [0.00012859700000000113, 0.00012795900000000388, 0.00012829099999999566, 0.00012747200000000347, 0.00012827700000000303, 0.0001283889999999996, 0.00012867999999999907, 0.0001283189999999948, 0.00012784799999999985, 0.00012829200000000207, 0.00012695799999999646, 0.00012818100000000499, 0.00012802800000000225, 0.00012847300000000395, 0.00012813899999999934, 0.00012770900000000363, 0.000128263999999996, 0.00012858300000000156, 0.00012820900000000413, 0.00012844400000000533, 0.00012842999999999882, 0.0001285279999999958, 0.0001269030000000046, 0.00012807000000000096, 0.00012844499999999787, 0.0001279030000000056, 0.00012825000000000336, 0.00012758400000000003, 0.000127778000000002, 0.00012836199999999992, 0.00012704100000000135, 0.00012768100000000449, 0.00012854200000000232, 0.00012813899999999934, 0.00012790299999999866, 0.00012686099999999895, 0.0001281110000000002, 0.0001283330000000013, 0.00012822199999999728, 0.00012784700000000038, 0.00012717999999999757, 0.00012855499999999548, 0.0001286659999999995, 0.00012825000000000336, 0.0001285279999999958, 0.0001278879999999996, 0.0001279729999999965, 0.00012791700000000517, 0.0001285560000000019, 0.0001284859999999971]</msg>
<status status="PASS" starttime="20201029 12:49:05.645" endtime="20201029 12:49:05.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.633" endtime="20201029 12:49:05.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:05.661" endtime="20201029 12:49:05.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.657" endtime="20201029 12:49:05.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.654" endtime="20201029 12:49:05.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.174" endtime="20201029 12:49:05.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.173" endtime="20201029 12:49:05.687"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.709" endtime="20201029 12:49:05.730"></status>
</kw>
<msg timestamp="20201029 12:49:05.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.706" endtime="20201029 12:49:05.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.734" endtime="20201029 12:49:05.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.740" endtime="20201029 12:49:05.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.699" endtime="20201029 12:49:05.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.693" endtime="20201029 12:49:05.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.763" endtime="20201029 12:49:06.094"></status>
</kw>
<msg timestamp="20201029 12:49:06.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039311764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039440875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.760" endtime="20201029 12:49:06.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039311764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039440875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:06.104" endtime="20201029 12:49:06.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.122" endtime="20201029 12:49:06.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.753" endtime="20201029 12:49:06.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.748" endtime="20201029 12:49:06.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:06.139" level="INFO">${RESULT} = [{'diff': 0.0001291110000000012}, {'diff': 0.0001295969999999952}, {'diff': 0.00012912500000000077}, {'diff': 0.00012884700000000138}, {'diff': 0.0001290000000000041}, {'diff': 0.00012887500000000052}...</msg>
<status status="PASS" starttime="20201029 12:49:06.130" endtime="20201029 12:49:06.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:06.147" level="INFO">${ACCURACY} = {'diff': [0.0001291110000000012, 0.0001295969999999952, 0.00012912500000000077, 0.00012884700000000138, 0.0001290000000000041, 0.00012887500000000052, 0.00012922199999999828, 0.00012958300000000256, 0...</msg>
<status status="PASS" starttime="20201029 12:49:06.141" endtime="20201029 12:49:06.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.158" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:49:06.156" endtime="20201029 12:49:06.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.163" level="INFO">VALUE: [0.0001291110000000012, 0.0001295969999999952, 0.00012912500000000077, 0.00012884700000000138, 0.0001290000000000041, 0.00012887500000000052, 0.00012922199999999828, 0.00012958300000000256, 0.00012945899999999844, 0.00012941699999999973, 0.00012913900000000034, 0.0001295409999999969, 0.00012899999999999717, 0.0001291529999999999, 0.00012959799999999466, 0.0001293890000000006, 0.0001290690000000025, 0.0001296110000000017, 0.0001294580000000059, 0.00012962500000000127, 0.0001287639999999965, 0.0001287910000000031, 0.00012929099999999666, 0.00012890299999999966, 0.00012890299999999966, 0.0001289309999999988, 0.00012933299999999537, 0.00012880500000000267, 0.00012887500000000052, 0.00012959700000000213, 0.00012816700000000542, 0.00012954200000000332, 0.0001290690000000025, 0.00012884700000000138, 0.0001290969999999947, 0.000129166, 0.00012907000000000196, 0.00012959700000000213, 0.00012883299999999487, 0.0001296530000000004, 0.00012941699999999973, 0.00012898600000000454, 0.00012901399999999674, 0.0001290690000000025, 0.00012869399999999864, 0.00012847199999999753, 0.0001293609999999945, 0.0001290000000000041, 0.00012780500000000167, 0.00012961099999999476]</msg>
<status status="PASS" starttime="20201029 12:49:06.161" endtime="20201029 12:49:06.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.149" endtime="20201029 12:49:06.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:06.176" endtime="20201029 12:49:06.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.172" endtime="20201029 12:49:06.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.169" endtime="20201029 12:49:06.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.689" endtime="20201029 12:49:06.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.687" endtime="20201029 12:49:06.201"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.223" endtime="20201029 12:49:06.246"></status>
</kw>
<msg timestamp="20201029 12:49:06.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.220" endtime="20201029 12:49:06.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.249" endtime="20201029 12:49:06.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.256" endtime="20201029 12:49:06.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.213" endtime="20201029 12:49:06.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.207" endtime="20201029 12:49:06.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.279" endtime="20201029 12:49:06.608"></status>
</kw>
<msg timestamp="20201029 12:49:06.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040604806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040735167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:06.275" endtime="20201029 12:49:06.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040604806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040735167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:06.617" endtime="20201029 12:49:06.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.635" endtime="20201029 12:49:06.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.268" endtime="20201029 12:49:06.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.264" endtime="20201029 12:49:06.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:06.653" level="INFO">${RESULT} = [{'diff': 0.00013036100000000245}, {'diff': 0.00013016700000000048}, {'diff': 0.00013019499999999962}, {'diff': 0.0001301110000000022}, {'diff': 0.00013058299999999662}, {'diff': 0.0001299719999999990...</msg>
<status status="PASS" starttime="20201029 12:49:06.644" endtime="20201029 12:49:06.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:06.661" level="INFO">${ACCURACY} = {'diff': [0.00013036100000000245, 0.00013016700000000048, 0.00013019499999999962, 0.0001301110000000022, 0.00013058299999999662, 0.00012997199999999903, 0.00013055500000000442, 0.000129778000000004, 0...</msg>
<status status="PASS" starttime="20201029 12:49:06.655" endtime="20201029 12:49:06.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.672" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:49:06.670" endtime="20201029 12:49:06.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.678" level="INFO">VALUE: [0.00013036100000000245, 0.00013016700000000048, 0.00013019499999999962, 0.0001301110000000022, 0.00013058299999999662, 0.00012997199999999903, 0.00013055500000000442, 0.000129778000000004, 0.00013008300000000306, 0.0001305969999999962, 0.0001303609999999955, 0.00012966699999999998, 0.00012877799999999606, 0.00013051399999999824, 0.000129472999999998, 0.00013040200000000168, 0.00013051299999999877, 0.00013047199999999953, 0.0001299439999999999, 0.0001290560000000024, 0.00013033399999999584, 0.00012887500000000052, 0.00013052700000000528, 0.00013018100000000005, 0.0001304859999999991, 0.00012886100000000095, 0.00013024999999999842, 0.00013002700000000478, 0.0001291529999999999, 0.0001304859999999991, 0.00012995899999999894, 0.00013033299999999637, 0.00013001399999999774, 0.0001303890000000016, 0.00013022199999999928, 0.00013043000000000082, 0.00013036100000000245, 0.00013036100000000245, 0.0001304310000000003, 0.00013068000000000107, 0.00013009700000000263, 0.00013062500000000227, 0.00013034700000000288, 0.0001305409999999979, 0.00013073599999999935, 0.00012968000000000007, 0.0001294439999999994, 0.00013022299999999876, 0.00013063900000000184, 0.00012908299999999512]</msg>
<status status="PASS" starttime="20201029 12:49:06.675" endtime="20201029 12:49:06.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.663" endtime="20201029 12:49:06.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:06.693" endtime="20201029 12:49:06.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.687" endtime="20201029 12:49:06.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.684" endtime="20201029 12:49:06.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.203" endtime="20201029 12:49:06.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.202" endtime="20201029 12:49:06.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.860" endtime="20201029 12:49:06.718"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:13.736" endtime="20201029 12:49:06.720" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:06.736" endtime="20201029 12:49:06.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.733" endtime="20201029 12:49:06.760"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.792" endtime="20201029 12:49:06.807"></status>
</kw>
<msg timestamp="20201029 12:49:06.808" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.789" endtime="20201029 12:49:06.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.815" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.811" endtime="20201029 12:49:06.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.821" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:49:06.817" endtime="20201029 12:49:06.822"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:06.782" endtime="20201029 12:49:06.824"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:06.775" endtime="20201029 12:49:06.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.773" endtime="20201029 12:49:06.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:49:06.834" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:49:06.832" endtime="20201029 12:49:06.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.828" endtime="20201029 12:49:06.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.771" endtime="20201029 12:49:06.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.769" endtime="20201029 12:49:06.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.837" endtime="20201029 12:49:06.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.765" endtime="20201029 12:49:06.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.761" endtime="20201029 12:49:06.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.730" endtime="20201029 12:49:06.844"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.870" endtime="20201029 12:49:06.888"></status>
</kw>
<msg timestamp="20201029 12:49:06.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.867" endtime="20201029 12:49:06.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.891" endtime="20201029 12:49:06.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.898" endtime="20201029 12:49:06.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.858" endtime="20201029 12:49:06.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.853" endtime="20201029 12:49:06.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.921" endtime="20201029 12:49:07.260"></status>
</kw>
<msg timestamp="20201029 12:49:07.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126066583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126143236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:06.918" endtime="20201029 12:49:07.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126066583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126143236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.269" endtime="20201029 12:49:07.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.288" endtime="20201029 12:49:07.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.911" endtime="20201029 12:49:07.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.906" endtime="20201029 12:49:07.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:07.305" level="INFO">${RESULT} = [{'diff': 7.66529999999821e-05}, {'diff': 7.665300000000985e-05}, {'diff': 7.59160000000092e-05}, {'diff': 7.601399999998537e-05}, {'diff': 7.531900000001812e-05}, {'diff': 7.60000000000205e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:49:07.296" endtime="20201029 12:49:07.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:07.314" level="INFO">${ACCURACY} = {'diff': [7.66529999999821e-05, 7.665300000000985e-05, 7.59160000000092e-05, 7.601399999998537e-05, 7.531900000001812e-05, 7.60000000000205e-05, 7.665199999998262e-05, 7.615299999999547e-05, 7.5819000...</msg>
<status status="PASS" starttime="20201029 12:49:07.307" endtime="20201029 12:49:07.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.325" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:49:07.323" endtime="20201029 12:49:07.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.332" level="INFO">VALUE: [7.66529999999821e-05, 7.665300000000985e-05, 7.59160000000092e-05, 7.601399999998537e-05, 7.531900000001812e-05, 7.60000000000205e-05, 7.665199999998262e-05, 7.615299999999547e-05, 7.581900000000474e-05, 7.566600000000201e-05, 7.649999999997936e-05, 7.64719999999941e-05, 7.666600000000301e-05, 7.58340000000246e-05, 7.583399999999685e-05, 7.599999999999274e-05, 7.6332999999984e-05, 7.665300000000985e-05, 7.667999999999564e-05, 7.631999999999084e-05, 7.601400000001313e-05, 7.581999999997646e-05, 7.616700000001586e-05, 7.634800000000386e-05, 7.663899999998947e-05, 7.626399999999256e-05, 7.666700000000248e-05, 7.665199999998262e-05, 7.64169999999953e-05, 7.648600000001449e-05, 7.669400000001603e-05, 7.630599999999821e-05, 7.6151999999996e-05, 7.650000000000712e-05, 7.597200000000748e-05, 7.666700000000248e-05, 7.6151999999996e-05, 7.56110000000032e-05, 7.598699999999958e-05, 7.581900000000474e-05, 7.576400000000594e-05, 7.665300000000985e-05, 7.615300000002323e-05, 7.620799999999428e-05, 7.583299999999737e-05, 7.651300000000028e-05, 7.618100000000849e-05, 7.636099999999701e-05, 7.498599999999911e-05, 7.577799999999857e-05]</msg>
<status status="PASS" starttime="20201029 12:49:07.329" endtime="20201029 12:49:07.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.316" endtime="20201029 12:49:07.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:07.343" endtime="20201029 12:49:07.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.339" endtime="20201029 12:49:07.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.337" endtime="20201029 12:49:07.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.848" endtime="20201029 12:49:07.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.847" endtime="20201029 12:49:07.368"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.390" endtime="20201029 12:49:07.409"></status>
</kw>
<msg timestamp="20201029 12:49:07.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.387" endtime="20201029 12:49:07.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.412" endtime="20201029 12:49:07.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.418" endtime="20201029 12:49:07.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.380" endtime="20201029 12:49:07.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.374" endtime="20201029 12:49:07.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.441" endtime="20201029 12:49:07.776"></status>
</kw>
<msg timestamp="20201029 12:49:07.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039683431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039759806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.438" endtime="20201029 12:49:07.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039683431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039759806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.786" endtime="20201029 12:49:07.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.804" endtime="20201029 12:49:07.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.431" endtime="20201029 12:49:07.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.426" endtime="20201029 12:49:07.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:07.821" level="INFO">${RESULT} = [{'diff': 7.637500000000352e-05}, {'diff': 7.612499999999633e-05}, {'diff': 7.584700000000388e-05}, {'diff': 7.618000000000208e-05}, {'diff': 7.616700000000198e-05}, {'diff': 7.629099999999917e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:07.813" endtime="20201029 12:49:07.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:07.832" level="INFO">${ACCURACY} = {'diff': [7.637500000000352e-05, 7.612499999999633e-05, 7.584700000000388e-05, 7.618000000000208e-05, 7.616700000000198e-05, 7.629099999999917e-05, 7.638899999999615e-05, 7.63189999999983e-05, 7.59860...</msg>
<status status="PASS" starttime="20201029 12:49:07.823" endtime="20201029 12:49:07.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.843" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:49:07.841" endtime="20201029 12:49:07.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.848" level="INFO">VALUE: [7.637500000000352e-05, 7.612499999999633e-05, 7.584700000000388e-05, 7.618000000000208e-05, 7.616700000000198e-05, 7.629099999999917e-05, 7.638899999999615e-05, 7.63189999999983e-05, 7.598600000000011e-05, 7.615300000000241e-05, 7.634699999999744e-05, 7.534699999999644e-05, 7.533300000000381e-05, 7.61389999999959e-05, 7.599999999999968e-05, 7.599999999999968e-05, 7.583299999999737e-05, 7.584799999999642e-05, 7.616700000000198e-05, 7.583299999999737e-05, 7.601399999999925e-05, 7.616699999999504e-05, 7.633299999999787e-05, 7.650000000000018e-05, 7.668000000000258e-05, 7.667999999999564e-05, 7.650000000000018e-05, 7.647300000000051e-05, 7.636099999999701e-05, 7.669400000000215e-05, 7.633400000000429e-05, 7.600000000000662e-05, 7.601399999999925e-05, 7.619500000000112e-05, 7.637500000000352e-05, 7.665200000000344e-05, 7.633299999999787e-05, 7.634699999999744e-05, 7.584699999999694e-05, 7.634799999999692e-05, 7.616699999999504e-05, 7.605599999999796e-05, 7.617999999999514e-05, 7.651399999999975e-05, 7.62769999999996e-05, 7.669400000000215e-05, 7.58890000000026e-05, 7.687499999999708e-05, 7.687500000000402e-05, 7.620800000000122e-05]</msg>
<status status="PASS" starttime="20201029 12:49:07.845" endtime="20201029 12:49:07.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.834" endtime="20201029 12:49:07.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:07.860" endtime="20201029 12:49:07.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.856" endtime="20201029 12:49:07.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.853" endtime="20201029 12:49:07.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.370" endtime="20201029 12:49:07.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.369" endtime="20201029 12:49:07.885"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.909" endtime="20201029 12:49:07.928"></status>
</kw>
<msg timestamp="20201029 12:49:07.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.905" endtime="20201029 12:49:07.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.932" endtime="20201029 12:49:07.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.938" endtime="20201029 12:49:07.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.898" endtime="20201029 12:49:07.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.892" endtime="20201029 12:49:07.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.961" endtime="20201029 12:49:08.304"></status>
</kw>
<msg timestamp="20201029 12:49:08.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040362111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040438236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.958" endtime="20201029 12:49:08.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040362111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040438236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:08.313" endtime="20201029 12:49:08.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.332" endtime="20201029 12:49:08.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.950" endtime="20201029 12:49:08.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.946" endtime="20201029 12:49:08.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:08.348" level="INFO">${RESULT} = [{'diff': 7.612500000000327e-05}, {'diff': 7.624999999999993e-05}, {'diff': 7.650000000000018e-05}, {'diff': 7.62769999999996e-05}, {'diff': 7.598600000000011e-05}, {'diff': 7.601399999999925e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:08.340" endtime="20201029 12:49:08.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:08.360" level="INFO">${ACCURACY} = {'diff': [7.612500000000327e-05, 7.624999999999993e-05, 7.650000000000018e-05, 7.62769999999996e-05, 7.598600000000011e-05, 7.601399999999925e-05, 7.519500000000012e-05, 7.665300000000291e-05, 7.63610...</msg>
<status status="PASS" starttime="20201029 12:49:08.351" endtime="20201029 12:49:08.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.371" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:49:08.368" endtime="20201029 12:49:08.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.376" level="INFO">VALUE: [7.612500000000327e-05, 7.624999999999993e-05, 7.650000000000018e-05, 7.62769999999996e-05, 7.598600000000011e-05, 7.601399999999925e-05, 7.519500000000012e-05, 7.665300000000291e-05, 7.636100000000395e-05, 7.599999999999968e-05, 7.650000000000018e-05, 7.599999999999968e-05, 7.599999999999968e-05, 7.661099999999726e-05, 7.601399999999925e-05, 7.651399999999975e-05, 7.530499999999773e-05, 7.634700000000438e-05, 7.634699999999744e-05, 7.627799999999907e-05, 7.597200000000054e-05, 7.665300000000291e-05, 7.66389999999964e-05, 7.615299999999547e-05, 7.617999999999514e-05, 7.584699999999694e-05, 7.598600000000011e-05, 7.648600000000061e-05, 7.650000000000018e-05, 7.668100000000205e-05, 7.665300000000291e-05, 7.670900000000119e-05, 7.618100000000155e-05, 7.598600000000011e-05, 7.580599999999771e-05, 7.648600000000061e-05, 7.615300000000241e-05, 7.633300000000481e-05, 7.620800000000122e-05, 7.495799999999997e-05, 7.647200000000104e-05, 7.59440000000014e-05, 7.518100000000055e-05, 7.648700000000008e-05, 7.582000000000422e-05, 7.583399999999685e-05, 7.515300000000141e-05, 7.66389999999964e-05, 7.665300000000291e-05, 7.513900000000184e-05]</msg>
<status status="PASS" starttime="20201029 12:49:08.373" endtime="20201029 12:49:08.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.362" endtime="20201029 12:49:08.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:08.387" endtime="20201029 12:49:08.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.383" endtime="20201029 12:49:08.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.381" endtime="20201029 12:49:08.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.887" endtime="20201029 12:49:08.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.886" endtime="20201029 12:49:08.413"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.436" endtime="20201029 12:49:08.455"></status>
</kw>
<msg timestamp="20201029 12:49:08.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.433" endtime="20201029 12:49:08.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.458" endtime="20201029 12:49:08.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.465" endtime="20201029 12:49:08.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.425" endtime="20201029 12:49:08.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.420" endtime="20201029 12:49:08.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.488" endtime="20201029 12:49:08.830"></status>
</kw>
<msg timestamp="20201029 12:49:08.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040092056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04016875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:08.484" endtime="20201029 12:49:08.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040092056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04016875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:08.839" endtime="20201029 12:49:08.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.858" endtime="20201029 12:49:08.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.477" endtime="20201029 12:49:08.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.473" endtime="20201029 12:49:08.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:08.875" level="INFO">${RESULT} = [{'diff': 7.669400000000215e-05}, {'diff': 7.634699999999744e-05}, {'diff': 7.669399999999521e-05}, {'diff': 7.618100000000155e-05}, {'diff': 7.549999999999918e-05}, {'diff': 7.619400000000165e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:08.866" endtime="20201029 12:49:08.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:08.884" level="INFO">${ACCURACY} = {'diff': [7.669400000000215e-05, 7.634699999999744e-05, 7.669399999999521e-05, 7.618100000000155e-05, 7.549999999999918e-05, 7.619400000000165e-05, 7.583299999999737e-05, 7.668000000000258e-05, 7.6332...</msg>
<status status="PASS" starttime="20201029 12:49:08.877" endtime="20201029 12:49:08.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.895" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:49:08.893" endtime="20201029 12:49:08.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.900" level="INFO">VALUE: [7.669400000000215e-05, 7.634699999999744e-05, 7.669399999999521e-05, 7.618100000000155e-05, 7.549999999999918e-05, 7.619400000000165e-05, 7.583299999999737e-05, 7.668000000000258e-05, 7.633299999999787e-05, 7.620900000000069e-05, 7.636100000000395e-05, 7.648600000000061e-05, 7.652800000000626e-05, 7.602699999999935e-05, 7.668100000000205e-05, 7.651399999999975e-05, 7.666599999999607e-05, 7.631999999999778e-05, 7.533299999999687e-05, 7.592999999999489e-05, 7.63189999999983e-05, 7.602699999999935e-05, 7.586100000000345e-05, 7.620799999999428e-05, 7.617999999999514e-05, 7.602799999999882e-05, 7.588899999999565e-05, 7.636200000000343e-05, 7.58890000000026e-05, 7.602800000000576e-05, 7.669500000000162e-05, 7.634699999999744e-05, 7.620900000000069e-05, 7.666699999999554e-05, 7.601399999999925e-05, 7.519500000000012e-05, 7.666600000000301e-05, 7.604199999999839e-05, 7.633300000000481e-05, 7.586100000000345e-05, 7.633400000000429e-05, 7.599999999999968e-05, 7.651399999999975e-05, 7.549999999999918e-05, 7.669500000000162e-05, 7.601399999999925e-05, 7.602799999999882e-05, 7.615300000000241e-05, 7.586100000000345e-05, 7.615299999999547e-05]</msg>
<status status="PASS" starttime="20201029 12:49:08.897" endtime="20201029 12:49:08.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.886" endtime="20201029 12:49:08.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:08.913" endtime="20201029 12:49:08.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.909" endtime="20201029 12:49:08.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.906" endtime="20201029 12:49:08.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.415" endtime="20201029 12:49:08.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.414" endtime="20201029 12:49:08.938"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.961" endtime="20201029 12:49:08.980"></status>
</kw>
<msg timestamp="20201029 12:49:08.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.957" endtime="20201029 12:49:08.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.983" endtime="20201029 12:49:08.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.989" endtime="20201029 12:49:08.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.950" endtime="20201029 12:49:08.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.944" endtime="20201029 12:49:08.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.012" endtime="20201029 12:49:09.342"></status>
</kw>
<msg timestamp="20201029 12:49:09.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040955861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041031347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:09.009" endtime="20201029 12:49:09.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040955861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041031347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:09.352" endtime="20201029 12:49:09.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.370" endtime="20201029 12:49:09.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.002" endtime="20201029 12:49:09.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.997" endtime="20201029 12:49:09.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:09.387" level="INFO">${RESULT} = [{'diff': 7.548599999999961e-05}, {'diff': 7.616700000000198e-05}, {'diff': 7.650000000000018e-05}, {'diff': 7.651399999999975e-05}, {'diff': 7.633299999999787e-05}, {'diff': 7.652799999999932e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:09.379" endtime="20201029 12:49:09.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:09.396" level="INFO">${ACCURACY} = {'diff': [7.548599999999961e-05, 7.616700000000198e-05, 7.650000000000018e-05, 7.651399999999975e-05, 7.633299999999787e-05, 7.652799999999932e-05, 7.566699999999454e-05, 7.598600000000011e-05, 7.5999...</msg>
<status status="PASS" starttime="20201029 12:49:09.389" endtime="20201029 12:49:09.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.407" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:49:09.405" endtime="20201029 12:49:09.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.413" level="INFO">VALUE: [7.548599999999961e-05, 7.616700000000198e-05, 7.650000000000018e-05, 7.651399999999975e-05, 7.633299999999787e-05, 7.652799999999932e-05, 7.566699999999454e-05, 7.598600000000011e-05, 7.599999999999968e-05, 7.631999999999778e-05, 7.587499999999608e-05, 7.619400000000165e-05, 7.633399999999735e-05, 7.618100000000155e-05, 7.584800000000336e-05, 7.633299999999787e-05, 7.599999999999968e-05, 7.634699999999744e-05, 7.584699999999694e-05, 7.586100000000345e-05, 7.615200000000294e-05, 7.582000000000422e-05, 7.665300000000291e-05, 7.602799999999882e-05, 7.549999999999918e-05, 7.601399999999925e-05, 7.666600000000301e-05, 7.498699999999858e-05, 7.599999999999968e-05, 7.583299999999737e-05, 7.656999999999803e-05, 7.618100000000155e-05, 7.634700000000438e-05, 7.601399999999925e-05, 7.620800000000122e-05, 7.630599999999821e-05, 7.587499999999608e-05, 7.588899999999565e-05, 7.648600000000061e-05, 7.619400000000165e-05, 7.500000000000562e-05, 7.648600000000061e-05, 7.644500000000137e-05, 7.599999999999968e-05, 7.604099999999892e-05, 7.636099999999701e-05, 7.618100000000155e-05, 7.599999999999968e-05, 7.670799999999478e-05, 7.651399999999975e-05]</msg>
<status status="PASS" starttime="20201029 12:49:09.409" endtime="20201029 12:49:09.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.398" endtime="20201029 12:49:09.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:09.427" endtime="20201029 12:49:09.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.421" endtime="20201029 12:49:09.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.418" endtime="20201029 12:49:09.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.940" endtime="20201029 12:49:09.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.939" endtime="20201029 12:49:09.452"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.474" endtime="20201029 12:49:09.492"></status>
</kw>
<msg timestamp="20201029 12:49:09.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:09.471" endtime="20201029 12:49:09.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:09.495" endtime="20201029 12:49:09.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.501" endtime="20201029 12:49:09.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.464" endtime="20201029 12:49:09.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.458" endtime="20201029 12:49:09.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.527" endtime="20201029 12:49:09.858"></status>
</kw>
<msg timestamp="20201029 12:49:09.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039367083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039442944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:09.523" endtime="20201029 12:49:09.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039367083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039442944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:09.867" endtime="20201029 12:49:09.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.886" endtime="20201029 12:49:09.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.514" endtime="20201029 12:49:09.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.509" endtime="20201029 12:49:09.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:09.903" level="INFO">${RESULT} = [{'diff': 7.586100000000345e-05}, {'diff': 7.651300000000028e-05}, {'diff': 7.502700000000528e-05}, {'diff': 7.518000000000108e-05}, {'diff': 7.636100000000395e-05}, {'diff': 7.663799999999693e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:09.894" endtime="20201029 12:49:09.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:09.918" level="INFO">${ACCURACY} = {'diff': [7.586100000000345e-05, 7.651300000000028e-05, 7.502700000000528e-05, 7.518000000000108e-05, 7.636100000000395e-05, 7.663799999999693e-05, 7.599999999999968e-05, 7.616700000000198e-05, 7.5167...</msg>
<status status="PASS" starttime="20201029 12:49:09.905" endtime="20201029 12:49:09.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.929" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:49:09.927" endtime="20201029 12:49:09.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.934" level="INFO">VALUE: [7.586100000000345e-05, 7.651300000000028e-05, 7.502700000000528e-05, 7.518000000000108e-05, 7.636100000000395e-05, 7.663799999999693e-05, 7.599999999999968e-05, 7.616700000000198e-05, 7.516700000000098e-05, 7.58189999999978e-05, 7.608299999999762e-05, 7.583400000000379e-05, 7.584800000000336e-05, 7.617999999999514e-05, 7.684800000000436e-05, 7.668000000000258e-05, 7.680599999999871e-05, 7.631999999999778e-05, 7.644399999999496e-05, 7.499999999999868e-05, 7.598600000000011e-05, 7.618000000000208e-05, 7.598699999999958e-05, 7.584799999999642e-05, 7.669500000000162e-05, 7.673700000000033e-05, 7.59440000000014e-05, 7.666700000000248e-05, 7.636099999999701e-05, 7.606999999999753e-05, 7.650000000000018e-05, 7.616600000000251e-05, 7.656899999999855e-05, 7.654099999999942e-05, 7.670800000000172e-05, 7.599999999999968e-05, 7.568000000000158e-05, 7.587500000000302e-05, 7.597200000000054e-05, 7.63189999999983e-05, 7.661099999999726e-05, 7.648600000000061e-05, 7.668099999999511e-05, 7.598600000000011e-05, 7.665299999999597e-05, 7.498599999999911e-05, 7.584699999999694e-05, 7.584699999999694e-05, 7.598600000000011e-05, 7.586100000000345e-05]</msg>
<status status="PASS" starttime="20201029 12:49:09.931" endtime="20201029 12:49:09.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.920" endtime="20201029 12:49:09.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:09.947" endtime="20201029 12:49:09.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.942" endtime="20201029 12:49:09.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.940" endtime="20201029 12:49:09.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.454" endtime="20201029 12:49:09.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.453" endtime="20201029 12:49:09.971"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.994" endtime="20201029 12:49:10.012"></status>
</kw>
<msg timestamp="20201029 12:49:10.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:09.991" endtime="20201029 12:49:10.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.015" endtime="20201029 12:49:10.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.021" endtime="20201029 12:49:10.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.984" endtime="20201029 12:49:10.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.978" endtime="20201029 12:49:10.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.044" endtime="20201029 12:49:10.374"></status>
</kw>
<msg timestamp="20201029 12:49:10.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038984028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039059194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:10.041" endtime="20201029 12:49:10.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038984028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039059194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:10.383" endtime="20201029 12:49:10.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.401" endtime="20201029 12:49:10.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.034" endtime="20201029 12:49:10.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.029" endtime="20201029 12:49:10.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:10.418" level="INFO">${RESULT} = [{'diff': 7.516600000000151e-05}, {'diff': 7.633299999999787e-05}, {'diff': 7.583300000000431e-05}, {'diff': 7.581999999999728e-05}, {'diff': 7.650000000000018e-05}, {'diff': 7.666699999999554e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:10.409" endtime="20201029 12:49:10.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:10.429" level="INFO">${ACCURACY} = {'diff': [7.516600000000151e-05, 7.633299999999787e-05, 7.583300000000431e-05, 7.581999999999728e-05, 7.650000000000018e-05, 7.666699999999554e-05, 7.599999999999968e-05, 7.620800000000122e-05, 7.6499...</msg>
<status status="PASS" starttime="20201029 12:49:10.420" endtime="20201029 12:49:10.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.440" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:49:10.438" endtime="20201029 12:49:10.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.445" level="INFO">VALUE: [7.516600000000151e-05, 7.633299999999787e-05, 7.583300000000431e-05, 7.581999999999728e-05, 7.650000000000018e-05, 7.666699999999554e-05, 7.599999999999968e-05, 7.620800000000122e-05, 7.649999999999324e-05, 7.618000000000208e-05, 7.618100000000155e-05, 7.618100000000155e-05, 7.586100000000345e-05, 7.601399999999925e-05, 7.583299999999737e-05, 7.587500000000302e-05, 7.616700000000198e-05, 7.636099999999701e-05, 7.583300000000431e-05, 7.668099999999511e-05, 7.666699999999554e-05, 7.6151999999996e-05, 7.650000000000018e-05, 7.536100000000295e-05, 7.616699999999504e-05, 7.669400000000215e-05, 7.584800000000336e-05, 7.580599999999771e-05, 7.598600000000011e-05, 7.668100000000205e-05, 7.584699999999694e-05, 7.622200000000079e-05, 7.58189999999978e-05, 7.615300000000241e-05, 7.651399999999975e-05, 7.668100000000205e-05, 7.666700000000248e-05, 7.666700000000248e-05, 7.602799999999882e-05, 7.673600000000086e-05, 7.638899999999615e-05, 7.572200000000029e-05, 7.651399999999975e-05, 7.634799999999692e-05, 7.570800000000072e-05, 7.622300000000026e-05, 7.502799999999782e-05, 7.601399999999925e-05, 7.634699999999744e-05, 7.637500000000352e-05]</msg>
<status status="PASS" starttime="20201029 12:49:10.442" endtime="20201029 12:49:10.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.431" endtime="20201029 12:49:10.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:10.458" endtime="20201029 12:49:10.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.454" endtime="20201029 12:49:10.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.451" endtime="20201029 12:49:10.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.973" endtime="20201029 12:49:10.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.972" endtime="20201029 12:49:10.483"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.505" endtime="20201029 12:49:10.522"></status>
</kw>
<msg timestamp="20201029 12:49:10.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.502" endtime="20201029 12:49:10.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.526" endtime="20201029 12:49:10.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.532" endtime="20201029 12:49:10.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.495" endtime="20201029 12:49:10.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.489" endtime="20201029 12:49:10.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.555" endtime="20201029 12:49:10.898"></status>
</kw>
<msg timestamp="20201029 12:49:10.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038950639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039026653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:10.551" endtime="20201029 12:49:10.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038950639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039026653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:10.908" endtime="20201029 12:49:10.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.927" endtime="20201029 12:49:10.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.544" endtime="20201029 12:49:10.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.540" endtime="20201029 12:49:10.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:10.944" level="INFO">${RESULT} = [{'diff': 7.601399999999925e-05}, {'diff': 7.680599999999871e-05}, {'diff': 7.601399999999925e-05}, {'diff': 7.683399999999785e-05}, {'diff': 7.672200000000129e-05}, {'diff': 7.663900000000334e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:10.935" endtime="20201029 12:49:10.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:10.954" level="INFO">${ACCURACY} = {'diff': [7.601399999999925e-05, 7.680599999999871e-05, 7.601399999999925e-05, 7.683399999999785e-05, 7.672200000000129e-05, 7.663900000000334e-05, 7.673600000000086e-05, 7.651399999999975e-05, 7.6459...</msg>
<status status="PASS" starttime="20201029 12:49:10.946" endtime="20201029 12:49:10.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.965" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:49:10.963" endtime="20201029 12:49:10.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.971" level="INFO">VALUE: [7.601399999999925e-05, 7.680599999999871e-05, 7.601399999999925e-05, 7.683399999999785e-05, 7.672200000000129e-05, 7.663900000000334e-05, 7.673600000000086e-05, 7.651399999999975e-05, 7.645900000000094e-05, 7.617999999999514e-05, 7.619400000000165e-05, 7.499999999999868e-05, 7.602699999999935e-05, 7.650000000000018e-05, 7.615300000000241e-05, 7.654199999999889e-05, 7.651399999999975e-05, 7.599999999999968e-05, 7.599999999999968e-05, 7.519500000000012e-05, 7.648600000000061e-05, 7.572299999999976e-05, 7.515300000000141e-05, 7.583299999999737e-05, 7.581900000000474e-05, 7.497199999999954e-05, 7.631900000000524e-05, 7.616600000000251e-05, 7.650000000000018e-05, 7.597200000000054e-05, 7.615299999999547e-05, 7.598600000000011e-05, 7.619400000000165e-05, 7.663900000000334e-05, 7.534699999999644e-05, 7.516599999999457e-05, 7.661099999999726e-05, 7.63189999999983e-05, 7.650000000000018e-05, 7.531900000000424e-05, 7.634699999999744e-05, 7.618000000000208e-05, 7.654100000000635e-05, 7.668100000000205e-05, 7.651399999999975e-05, 7.599999999999968e-05, 7.655599999999846e-05, 7.593099999999436e-05, 7.598600000000011e-05, 7.647200000000104e-05]</msg>
<status status="PASS" starttime="20201029 12:49:10.967" endtime="20201029 12:49:10.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.956" endtime="20201029 12:49:10.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:10.983" endtime="20201029 12:49:11.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.979" endtime="20201029 12:49:11.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.976" endtime="20201029 12:49:11.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.485" endtime="20201029 12:49:11.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.483" endtime="20201029 12:49:11.009"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.032" endtime="20201029 12:49:11.055"></status>
</kw>
<msg timestamp="20201029 12:49:11.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:11.029" endtime="20201029 12:49:11.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:11.058" endtime="20201029 12:49:11.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.065" endtime="20201029 12:49:11.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.021" endtime="20201029 12:49:11.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.015" endtime="20201029 12:49:11.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.090" endtime="20201029 12:49:11.438"></status>
</kw>
<msg timestamp="20201029 12:49:11.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041998069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042074028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:11.086" endtime="20201029 12:49:11.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041998069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042074028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:11.448" endtime="20201029 12:49:11.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.467" endtime="20201029 12:49:11.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.078" endtime="20201029 12:49:11.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.073" endtime="20201029 12:49:11.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:11.489" level="INFO">${RESULT} = [{'diff': 7.595900000000044e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.665300000000291e-05}, {'diff': 7.597200000000054e-05}, {'diff': 7.666700000000248e-05}, {'diff': 7.650000000000018e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:11.475" endtime="20201029 12:49:11.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:11.504" level="INFO">${ACCURACY} = {'diff': [7.595900000000044e-05, 7.599999999999968e-05, 7.665300000000291e-05, 7.597200000000054e-05, 7.666700000000248e-05, 7.650000000000018e-05, 7.630599999999821e-05, 7.631999999999778e-05, 7.6318...</msg>
<status status="PASS" starttime="20201029 12:49:11.492" endtime="20201029 12:49:11.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.517" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:49:11.514" endtime="20201029 12:49:11.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.525" level="INFO">VALUE: [7.595900000000044e-05, 7.599999999999968e-05, 7.665300000000291e-05, 7.597200000000054e-05, 7.666700000000248e-05, 7.650000000000018e-05, 7.630599999999821e-05, 7.631999999999778e-05, 7.63189999999983e-05, 7.599999999999968e-05, 7.612500000000327e-05, 7.641700000000223e-05, 7.599999999999968e-05, 7.608400000000404e-05, 7.648599999999367e-05, 7.651399999999975e-05, 7.580600000000465e-05, 7.648600000000061e-05, 7.53189999999973e-05, 7.641700000000223e-05, 7.634699999999744e-05, 7.650000000000018e-05, 7.622300000000026e-05, 7.595800000000097e-05, 7.66389999999964e-05, 7.579199999999814e-05, 7.632000000000472e-05, 7.581900000000474e-05, 7.594399999999446e-05, 7.581900000000474e-05, 7.6151999999996e-05, 7.647200000000104e-05, 7.616599999999557e-05, 7.590300000000216e-05, 7.583300000000431e-05, 7.662500000000377e-05, 7.630499999999873e-05, 7.579199999999814e-05, 7.561200000000268e-05, 7.665300000000291e-05, 7.597300000000001e-05, 7.665299999999597e-05, 7.598600000000011e-05, 7.575000000000637e-05, 7.619399999999471e-05, 7.630599999999821e-05, 7.6151999999996e-05, 7.647200000000104e-05, 7.612500000000327e-05, 7.598699999999958e-05]</msg>
<status status="PASS" starttime="20201029 12:49:11.520" endtime="20201029 12:49:11.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.506" endtime="20201029 12:49:11.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:11.543" endtime="20201029 12:49:11.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.536" endtime="20201029 12:49:11.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.532" endtime="20201029 12:49:11.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.011" endtime="20201029 12:49:11.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.010" endtime="20201029 12:49:11.568"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.590" endtime="20201029 12:49:11.610"></status>
</kw>
<msg timestamp="20201029 12:49:11.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:11.587" endtime="20201029 12:49:11.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:11.613" endtime="20201029 12:49:11.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.620" endtime="20201029 12:49:11.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.580" endtime="20201029 12:49:11.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.574" endtime="20201029 12:49:11.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.643" endtime="20201029 12:49:11.989"></status>
</kw>
<msg timestamp="20201029 12:49:11.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039453264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039529917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:11.639" endtime="20201029 12:49:11.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039453264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039529917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:11.998" endtime="20201029 12:49:12.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.017" endtime="20201029 12:49:12.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.632" endtime="20201029 12:49:12.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.628" endtime="20201029 12:49:12.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:12.035" level="INFO">${RESULT} = [{'diff': 7.665299999999597e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.601399999999925e-05}, {'diff': 7.598600000000011e-05}, {'diff': 7.669500000000162e-05}, {'diff': 7.651400000000669e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:12.026" endtime="20201029 12:49:12.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:12.060" level="INFO">${ACCURACY} = {'diff': [7.665299999999597e-05, 7.599999999999968e-05, 7.601399999999925e-05, 7.598600000000011e-05, 7.669500000000162e-05, 7.651400000000669e-05, 7.663800000000387e-05, 7.616700000000198e-05, 7.5917...</msg>
<status status="PASS" starttime="20201029 12:49:12.037" endtime="20201029 12:49:12.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.100" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:49:12.093" endtime="20201029 12:49:12.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.116" level="INFO">VALUE: [7.665299999999597e-05, 7.599999999999968e-05, 7.601399999999925e-05, 7.598600000000011e-05, 7.669500000000162e-05, 7.651400000000669e-05, 7.663800000000387e-05, 7.616700000000198e-05, 7.591700000000173e-05, 7.597200000000054e-05, 7.666600000000301e-05, 7.601399999999925e-05, 7.583400000000379e-05, 7.636100000000395e-05, 7.597200000000054e-05, 7.665300000000291e-05, 7.666700000000248e-05, 7.497199999999954e-05, 7.580599999999771e-05, 7.650000000000018e-05, 7.655599999999846e-05, 7.652799999999932e-05, 7.665200000000344e-05, 7.599999999999968e-05, 7.498600000000605e-05, 7.579199999999814e-05, 7.662499999999683e-05, 7.597200000000054e-05, 7.663900000000334e-05, 7.593000000000183e-05, 7.665300000000291e-05, 7.599999999999968e-05, 7.599999999999968e-05, 7.662500000000377e-05, 7.597200000000054e-05, 7.613900000000284e-05, 7.63189999999983e-05, 7.598699999999958e-05, 7.554199999999789e-05, 7.63189999999983e-05, 7.663799999999693e-05, 7.650000000000018e-05, 7.591600000000226e-05, 7.615299999999547e-05, 7.619400000000165e-05, 7.662499999999683e-05, 7.654199999999889e-05, 7.650000000000018e-05, 7.683299999999837e-05, 7.519400000000065e-05]</msg>
<status status="PASS" starttime="20201029 12:49:12.108" endtime="20201029 12:49:12.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.069" endtime="20201029 12:49:12.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:12.141" endtime="20201029 12:49:12.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.136" endtime="20201029 12:49:12.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.132" endtime="20201029 12:49:12.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.570" endtime="20201029 12:49:12.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.569" endtime="20201029 12:49:12.167"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.190" endtime="20201029 12:49:12.211"></status>
</kw>
<msg timestamp="20201029 12:49:12.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:12.187" endtime="20201029 12:49:12.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:12.214" endtime="20201029 12:49:12.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.220" endtime="20201029 12:49:12.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.180" endtime="20201029 12:49:12.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.174" endtime="20201029 12:49:12.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.244" endtime="20201029 12:49:12.598"></status>
</kw>
<msg timestamp="20201029 12:49:12.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040646764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040723111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:12.241" endtime="20201029 12:49:12.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040646764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040723111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:12.607" endtime="20201029 12:49:12.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.626" endtime="20201029 12:49:12.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.233" endtime="20201029 12:49:12.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.229" endtime="20201029 12:49:12.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:12.643" level="INFO">${RESULT} = [{'diff': 7.634699999999744e-05}, {'diff': 7.583399999999685e-05}, {'diff': 7.633300000000481e-05}, {'diff': 7.601399999999925e-05}, {'diff': 7.502799999999782e-05}, {'diff': 7.599999999999968e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:12.634" endtime="20201029 12:49:12.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:12.654" level="INFO">${ACCURACY} = {'diff': [7.634699999999744e-05, 7.583399999999685e-05, 7.633300000000481e-05, 7.601399999999925e-05, 7.502799999999782e-05, 7.599999999999968e-05, 7.634699999999744e-05, 7.584799999999642e-05, 7.6236...</msg>
<status status="PASS" starttime="20201029 12:49:12.645" endtime="20201029 12:49:12.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.665" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:49:12.663" endtime="20201029 12:49:12.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.671" level="INFO">VALUE: [7.634699999999744e-05, 7.583399999999685e-05, 7.633300000000481e-05, 7.601399999999925e-05, 7.502799999999782e-05, 7.599999999999968e-05, 7.634699999999744e-05, 7.584799999999642e-05, 7.623600000000036e-05, 7.583400000000379e-05, 7.65560000000054e-05, 7.586199999999599e-05, 7.647200000000104e-05, 7.644500000000137e-05, 7.572200000000029e-05, 7.613900000000284e-05, 7.601399999999925e-05, 7.534700000000338e-05, 7.650000000000018e-05, 7.619400000000165e-05, 7.616700000000198e-05, 7.666699999999554e-05, 7.587499999999608e-05, 7.601399999999925e-05, 7.620900000000069e-05, 7.540300000000166e-05, 7.633299999999787e-05, 7.651399999999975e-05, 7.618099999999461e-05, 7.650000000000018e-05, 7.618000000000208e-05, 7.650000000000018e-05, 7.618100000000155e-05, 7.672300000000076e-05, 7.654199999999889e-05, 7.666700000000248e-05, 7.650000000000018e-05, 7.663900000000334e-05, 7.666600000000301e-05, 7.599999999999968e-05, 7.584699999999694e-05, 7.668100000000205e-05, 7.63189999999983e-05, 7.599999999999968e-05, 7.604199999999839e-05, 7.636099999999701e-05, 7.618099999999461e-05, 7.668100000000205e-05, 7.601399999999925e-05, 7.586100000000345e-05]</msg>
<status status="PASS" starttime="20201029 12:49:12.667" endtime="20201029 12:49:12.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.656" endtime="20201029 12:49:12.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:12.683" endtime="20201029 12:49:12.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.679" endtime="20201029 12:49:12.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.676" endtime="20201029 12:49:12.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.169" endtime="20201029 12:49:12.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.168" endtime="20201029 12:49:12.708"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.731" endtime="20201029 12:49:12.750"></status>
</kw>
<msg timestamp="20201029 12:49:12.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:12.727" endtime="20201029 12:49:12.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:12.757" endtime="20201029 12:49:12.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.768" endtime="20201029 12:49:12.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.720" endtime="20201029 12:49:12.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.714" endtime="20201029 12:49:12.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.805" endtime="20201029 12:49:13.148"></status>
</kw>
<msg timestamp="20201029 12:49:13.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039707361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0397835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:12.800" endtime="20201029 12:49:13.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039707361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0397835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:13.158" endtime="20201029 12:49:13.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.176" endtime="20201029 12:49:13.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.790" endtime="20201029 12:49:13.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.781" endtime="20201029 12:49:13.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:13.193" level="INFO">${RESULT} = [{'diff': 7.613900000000284e-05}, {'diff': 7.579199999999814e-05}, {'diff': 7.598699999999958e-05}, {'diff': 7.587500000000302e-05}, {'diff': 7.629199999999864e-05}, {'diff': 7.584699999999694e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:13.185" endtime="20201029 12:49:13.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:13.203" level="INFO">${ACCURACY} = {'diff': [7.613900000000284e-05, 7.579199999999814e-05, 7.598699999999958e-05, 7.587500000000302e-05, 7.629199999999864e-05, 7.584699999999694e-05, 7.587499999999608e-05, 7.627799999999907e-05, 7.6375...</msg>
<status status="PASS" starttime="20201029 12:49:13.195" endtime="20201029 12:49:13.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.213" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:49:13.211" endtime="20201029 12:49:13.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.219" level="INFO">VALUE: [7.613900000000284e-05, 7.579199999999814e-05, 7.598699999999958e-05, 7.587500000000302e-05, 7.629199999999864e-05, 7.584699999999694e-05, 7.587499999999608e-05, 7.627799999999907e-05, 7.637500000000352e-05, 7.66389999999964e-05, 7.580599999999771e-05, 7.595800000000097e-05, 7.551400000000569e-05, 7.663800000000387e-05, 7.6151999999996e-05, 7.598600000000011e-05, 7.597200000000054e-05, 7.648600000000061e-05, 7.613900000000284e-05, 7.598600000000011e-05, 7.663900000000334e-05, 7.648600000000061e-05, 7.595900000000044e-05, 7.630499999999873e-05, 7.515300000000141e-05, 7.59719999999936e-05, 7.62639999999995e-05, 7.579199999999814e-05, 7.64440000000019e-05, 7.66389999999964e-05, 7.579099999999866e-05, 7.599999999999968e-05, 7.608299999999762e-05, 7.595800000000097e-05, 7.597300000000001e-05, 7.616700000000198e-05, 7.63189999999983e-05, 7.631900000000524e-05, 7.583400000000379e-05, 7.583400000000379e-05, 7.594500000000087e-05, 7.666699999999554e-05, 7.627799999999907e-05, 7.63189999999983e-05, 7.648600000000061e-05, 7.498699999999858e-05, 7.63189999999983e-05, 7.666699999999554e-05, 7.577799999999857e-05, 7.549999999999918e-05]</msg>
<status status="PASS" starttime="20201029 12:49:13.216" endtime="20201029 12:49:13.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.204" endtime="20201029 12:49:13.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:13.231" endtime="20201029 12:49:13.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.227" endtime="20201029 12:49:13.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.224" endtime="20201029 12:49:13.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.710" endtime="20201029 12:49:13.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.709" endtime="20201029 12:49:13.256"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.279" endtime="20201029 12:49:13.298"></status>
</kw>
<msg timestamp="20201029 12:49:13.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:13.276" endtime="20201029 12:49:13.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:13.302" endtime="20201029 12:49:13.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.308" endtime="20201029 12:49:13.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.268" endtime="20201029 12:49:13.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.263" endtime="20201029 12:49:13.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.337" endtime="20201029 12:49:13.689"></status>
</kw>
<msg timestamp="20201029 12:49:13.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041110194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041186736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:13.330" endtime="20201029 12:49:13.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041110194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041186736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:13.699" endtime="20201029 12:49:13.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.718" endtime="20201029 12:49:13.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.320" endtime="20201029 12:49:13.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.316" endtime="20201029 12:49:13.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:13.735" level="INFO">${RESULT} = [{'diff': 7.654199999999889e-05}, {'diff': 7.597200000000054e-05}, {'diff': 7.618100000000155e-05}, {'diff': 7.516700000000098e-05}, {'diff': 7.640300000000266e-05}, {'diff': 7.684699999999794e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:13.726" endtime="20201029 12:49:13.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:13.745" level="INFO">${ACCURACY} = {'diff': [7.654199999999889e-05, 7.597200000000054e-05, 7.618100000000155e-05, 7.516700000000098e-05, 7.640300000000266e-05, 7.684699999999794e-05, 7.601399999999925e-05, 7.68189999999988e-05, 7.63329...</msg>
<status status="PASS" starttime="20201029 12:49:13.737" endtime="20201029 12:49:13.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.756" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:49:13.753" endtime="20201029 12:49:13.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.761" level="INFO">VALUE: [7.654199999999889e-05, 7.597200000000054e-05, 7.618100000000155e-05, 7.516700000000098e-05, 7.640300000000266e-05, 7.684699999999794e-05, 7.601399999999925e-05, 7.68189999999988e-05, 7.633299999999787e-05, 7.616699999999504e-05, 7.615300000000241e-05, 7.650000000000018e-05, 7.668100000000205e-05, 7.651399999999975e-05, 7.616700000000198e-05, 7.530600000000415e-05, 7.618000000000208e-05, 7.599999999999968e-05, 7.615300000000241e-05, 7.580499999999823e-05, 7.583299999999737e-05, 7.666700000000248e-05, 7.619400000000165e-05, 7.669500000000162e-05, 7.616600000000251e-05, 7.619500000000112e-05, 7.636099999999701e-05, 7.618100000000155e-05, 7.634799999999692e-05, 7.666700000000248e-05, 7.599999999999968e-05, 7.595900000000044e-05, 7.534700000000338e-05, 7.56519999999955e-05, 7.602699999999935e-05, 7.633399999999735e-05, 7.668100000000205e-05, 7.616700000000198e-05, 7.633299999999787e-05, 7.616699999999504e-05, 7.618000000000208e-05, 7.615300000000241e-05, 7.634700000000438e-05, 7.599999999999968e-05, 7.584800000000336e-05, 7.683299999999837e-05, 7.602800000000576e-05, 7.623600000000036e-05, 7.583299999999737e-05, 7.548599999999961e-05]</msg>
<status status="PASS" starttime="20201029 12:49:13.758" endtime="20201029 12:49:13.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.747" endtime="20201029 12:49:13.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:13.776" endtime="20201029 12:49:13.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.770" endtime="20201029 12:49:13.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.767" endtime="20201029 12:49:13.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.258" endtime="20201029 12:49:13.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.257" endtime="20201029 12:49:13.801"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.824" endtime="20201029 12:49:13.845"></status>
</kw>
<msg timestamp="20201029 12:49:13.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:13.821" endtime="20201029 12:49:13.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:13.848" endtime="20201029 12:49:13.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.854" endtime="20201029 12:49:13.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.813" endtime="20201029 12:49:13.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.807" endtime="20201029 12:49:13.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.878" endtime="20201029 12:49:14.233"></status>
</kw>
<msg timestamp="20201029 12:49:14.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040266819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040344583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:13.875" endtime="20201029 12:49:14.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040266819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040344583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:14.243" endtime="20201029 12:49:14.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.261" endtime="20201029 12:49:14.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.867" endtime="20201029 12:49:14.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.863" endtime="20201029 12:49:14.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:14.278" level="INFO">${RESULT} = [{'diff': 7.7764000000001e-05}, {'diff': 7.895799999999703e-05}, {'diff': 7.713800000000437e-05}, {'diff': 7.93049999999948e-05}, {'diff': 7.727799999999313e-05}, {'diff': 7.768099999999611e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:49:14.269" endtime="20201029 12:49:14.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:14.289" level="INFO">${ACCURACY} = {'diff': [7.7764000000001e-05, 7.895799999999703e-05, 7.713800000000437e-05, 7.93049999999948e-05, 7.727799999999313e-05, 7.768099999999611e-05, 7.93190000000013e-05, 7.769500000000262e-05, 7.90000000...</msg>
<status status="PASS" starttime="20201029 12:49:14.280" endtime="20201029 12:49:14.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.299" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:49:14.297" endtime="20201029 12:49:14.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.305" level="INFO">VALUE: [7.7764000000001e-05, 7.895799999999703e-05, 7.713800000000437e-05, 7.93049999999948e-05, 7.727799999999313e-05, 7.768099999999611e-05, 7.93190000000013e-05, 7.769500000000262e-05, 7.900000000000268e-05, 7.731999999999878e-05, 7.701400000000025e-05, 7.943000000000533e-05, 7.779100000000067e-05, 7.907000000000053e-05, 7.765300000000391e-05, 7.769500000000262e-05, 7.79719999999956e-05, 7.606899999999805e-05, 7.75969999999987e-05, 7.90970000000002e-05, 7.630599999999821e-05, 7.702799999999982e-05, 7.93190000000013e-05, 7.787500000000502e-05, 7.647200000000104e-05, 7.898699999999564e-05, 7.69719999999946e-05, 7.727800000000007e-05, 7.952799999999538e-05, 7.752800000000032e-05, 7.762499999999783e-05, 7.940199999999925e-05, 7.74169999999963e-05, 7.661099999999726e-05, 7.966700000000548e-05, 7.700000000000068e-05, 7.919500000000412e-05, 7.711199999999724e-05, 7.741600000000376e-05, 7.962499999999983e-05, 7.658300000000506e-05, 7.722199999999485e-05, 7.92640000000025e-05, 7.733399999999835e-05, 7.718099999999561e-05, 7.898599999999617e-05, 7.697200000000154e-05, 7.91389999999989e-05, 7.686099999999751e-05, 7.911099999999976e-05]</msg>
<status status="PASS" starttime="20201029 12:49:14.302" endtime="20201029 12:49:14.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.290" endtime="20201029 12:49:14.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:14.317" endtime="20201029 12:49:14.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.313" endtime="20201029 12:49:14.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.310" endtime="20201029 12:49:14.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.803" endtime="20201029 12:49:14.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.802" endtime="20201029 12:49:14.342"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.364" endtime="20201029 12:49:14.384"></status>
</kw>
<msg timestamp="20201029 12:49:14.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:14.361" endtime="20201029 12:49:14.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:14.387" endtime="20201029 12:49:14.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.394" endtime="20201029 12:49:14.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.354" endtime="20201029 12:49:14.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.348" endtime="20201029 12:49:14.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.416" endtime="20201029 12:49:14.758"></status>
</kw>
<msg timestamp="20201029 12:49:14.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039359764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039440292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:14.413" endtime="20201029 12:49:14.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039359764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039440292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:14.768" endtime="20201029 12:49:14.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.786" endtime="20201029 12:49:14.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.406" endtime="20201029 12:49:14.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.402" endtime="20201029 12:49:14.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:14.813" level="INFO">${RESULT} = [{'diff': 8.052800000000332e-05}, {'diff': 8.001399999999631e-05}, {'diff': 8.069499999999868e-05}, {'diff': 8.073599999999792e-05}, {'diff': 8.019399999999871e-05}, {'diff': 8.068099999999911e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:14.801" endtime="20201029 12:49:14.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:14.832" level="INFO">${ACCURACY} = {'diff': [8.052800000000332e-05, 8.001399999999631e-05, 8.069499999999868e-05, 8.073599999999792e-05, 8.019399999999871e-05, 8.068099999999911e-05, 7.9458999999997e-05, 8.076399999999706e-05, 7.904200...</msg>
<status status="PASS" starttime="20201029 12:49:14.818" endtime="20201029 12:49:14.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.844" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:49:14.842" endtime="20201029 12:49:14.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.850" level="INFO">VALUE: [8.052800000000332e-05, 8.001399999999631e-05, 8.069499999999868e-05, 8.073599999999792e-05, 8.019399999999871e-05, 8.068099999999911e-05, 7.9458999999997e-05, 8.076399999999706e-05, 7.904200000000139e-05, 8.037500000000058e-05, 8.036100000000101e-05, 8.002799999999588e-05, 8.037500000000058e-05, 8.052800000000332e-05, 8.038900000000015e-05, 7.970799999999778e-05, 8.002800000000282e-05, 8.052800000000332e-05, 8.069399999999921e-05, 8.070799999999878e-05, 8.069399999999921e-05, 8.020799999999828e-05, 8.037499999999365e-05, 7.904200000000139e-05, 8.024999999999699e-05, 7.918099999999761e-05, 7.984800000000042e-05, 8.002700000000335e-05, 8.038900000000015e-05, 8.052800000000332e-05, 8.038900000000015e-05, 8.036100000000101e-05, 8.068099999999911e-05, 8.038900000000015e-05, 8.002799999999588e-05, 8.020899999999775e-05, 8.054199999999595e-05, 7.917999999999814e-05, 7.987500000000008e-05, 7.918100000000455e-05, 8.02919999999957e-05, 8.001400000000325e-05, 8.070799999999878e-05, 7.969500000000462e-05, 8.04169999999993e-05, 7.94169999999983e-05, 8.018100000000555e-05, 7.987500000000008e-05, 8.033400000000135e-05, 8.019500000000512e-05]</msg>
<status status="PASS" starttime="20201029 12:49:14.847" endtime="20201029 12:49:14.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.835" endtime="20201029 12:49:14.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:14.862" endtime="20201029 12:49:14.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.858" endtime="20201029 12:49:14.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.855" endtime="20201029 12:49:14.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.344" endtime="20201029 12:49:14.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.343" endtime="20201029 12:49:14.887"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.910" endtime="20201029 12:49:14.930"></status>
</kw>
<msg timestamp="20201029 12:49:14.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:14.906" endtime="20201029 12:49:14.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:14.933" endtime="20201029 12:49:14.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.939" endtime="20201029 12:49:14.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.899" endtime="20201029 12:49:14.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.894" endtime="20201029 12:49:14.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.963" endtime="20201029 12:49:15.313"></status>
</kw>
<msg timestamp="20201029 12:49:15.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039524458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039605, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:49:14.960" endtime="20201029 12:49:15.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039524458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039605, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:49:15.322" endtime="20201029 12:49:15.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.341" endtime="20201029 12:49:15.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.953" endtime="20201029 12:49:15.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.948" endtime="20201029 12:49:15.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:15.358" level="INFO">${RESULT} = [{'diff': 8.054200000000289e-05}, {'diff': 7.923599999999642e-05}, {'diff': 8.004099999999598e-05}, {'diff': 7.904100000000192e-05}, {'diff': 8.070800000000572e-05}, {'diff': 8.05269999999969e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:15.349" endtime="20201029 12:49:15.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:15.367" level="INFO">${ACCURACY} = {'diff': [8.054200000000289e-05, 7.923599999999642e-05, 8.004099999999598e-05, 7.904100000000192e-05, 8.070800000000572e-05, 8.05269999999969e-05, 8.036100000000101e-05, 8.002800000000282e-05, 8.06809...</msg>
<status status="PASS" starttime="20201029 12:49:15.360" endtime="20201029 12:49:15.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.378" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:49:15.376" endtime="20201029 12:49:15.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.383" level="INFO">VALUE: [8.054200000000289e-05, 7.923599999999642e-05, 8.004099999999598e-05, 7.904100000000192e-05, 8.070800000000572e-05, 8.05269999999969e-05, 8.036100000000101e-05, 8.002800000000282e-05, 8.068099999999911e-05, 7.942999999999839e-05, 7.98190000000018e-05, 8.002799999999588e-05, 8.037500000000058e-05, 7.994500000000487e-05, 8.034700000000145e-05, 8.019399999999871e-05, 7.951400000000275e-05, 8.043099999999886e-05, 7.984700000000094e-05, 8.05269999999969e-05, 7.986100000000051e-05, 8.000000000000368e-05, 7.936100000000001e-05, 7.986100000000051e-05, 8.048699999999714e-05, 8.020800000000522e-05, 7.983300000000138e-05, 7.908300000000063e-05, 7.984700000000094e-05, 7.950000000000318e-05, 7.887499999999908e-05, 8.017999999999914e-05, 8.002800000000282e-05, 8.051299999999734e-05, 7.986100000000051e-05, 7.979200000000214e-05, 8.033300000000188e-05, 8.073600000000486e-05, 8.019399999999871e-05, 7.999999999999674e-05, 8.036100000000101e-05, 7.918099999999761e-05, 8.049999999999724e-05, 8.06520000000005e-05, 7.984700000000094e-05, 8.023599999999742e-05, 7.952799999999538e-05, 7.986100000000051e-05, 8.033400000000135e-05, 8.019399999999871e-05]</msg>
<status status="PASS" starttime="20201029 12:49:15.380" endtime="20201029 12:49:15.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.369" endtime="20201029 12:49:15.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:15.396" endtime="20201029 12:49:15.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.392" endtime="20201029 12:49:15.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.389" endtime="20201029 12:49:15.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.889" endtime="20201029 12:49:15.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.888" endtime="20201029 12:49:15.421"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.443" endtime="20201029 12:49:15.465"></status>
</kw>
<msg timestamp="20201029 12:49:15.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.440" endtime="20201029 12:49:15.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.468" endtime="20201029 12:49:15.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.475" endtime="20201029 12:49:15.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.433" endtime="20201029 12:49:15.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.427" endtime="20201029 12:49:15.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.498" endtime="20201029 12:49:15.840"></status>
</kw>
<msg timestamp="20201029 12:49:15.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041061028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041147264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:15.495" endtime="20201029 12:49:15.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041061028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041147264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:15.850" endtime="20201029 12:49:15.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.868" endtime="20201029 12:49:15.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.487" endtime="20201029 12:49:15.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.483" endtime="20201029 12:49:15.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:15.885" level="INFO">${RESULT} = [{'diff': 8.623600000000342e-05}, {'diff': 8.772300000000482e-05}, {'diff': 8.768099999999918e-05}, {'diff': 8.719399999999877e-05}, {'diff': 8.706900000000212e-05}, {'diff': 8.756999999999515e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:15.877" endtime="20201029 12:49:15.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:15.895" level="INFO">${ACCURACY} = {'diff': [8.623600000000342e-05, 8.772300000000482e-05, 8.768099999999918e-05, 8.719399999999877e-05, 8.706900000000212e-05, 8.756999999999515e-05, 8.734800000000098e-05, 8.772199999999841e-05, 8.6847...</msg>
<status status="PASS" starttime="20201029 12:49:15.888" endtime="20201029 12:49:15.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.906" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:49:15.903" endtime="20201029 12:49:15.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.911" level="INFO">VALUE: [8.623600000000342e-05, 8.772300000000482e-05, 8.768099999999918e-05, 8.719399999999877e-05, 8.706900000000212e-05, 8.756999999999515e-05, 8.734800000000098e-05, 8.772199999999841e-05, 8.6847000000001e-05, 8.726299999999715e-05, 8.758400000000166e-05, 8.627799999999519e-05, 8.698600000000417e-05, 8.722200000000485e-05, 8.691699999999886e-05, 8.697299999999714e-05, 8.69999999999968e-05, 8.731900000000237e-05, 8.69170000000058e-05, 8.770799999999884e-05, 8.690299999999929e-05, 8.715200000000006e-05, 8.734800000000098e-05, 8.78050000000033e-05, 8.702800000000288e-05, 8.631900000000137e-05, 8.715299999999954e-05, 8.697199999999766e-05, 8.727699999999672e-05, 8.7332999999995e-05, 8.686100000000058e-05, 8.740299999999979e-05, 8.71669999999991e-05, 8.777699999999722e-05, 8.761100000000133e-05, 8.727800000000313e-05, 8.695799999999809e-05, 8.74720000000051e-05, 8.756899999999568e-05, 8.609799999999973e-05, 8.709700000000126e-05, 8.758400000000166e-05, 8.626400000000256e-05, 8.687500000000015e-05, 8.659700000000076e-05, 8.719499999999825e-05, 8.73470000000015e-05, 8.608400000000016e-05, 8.727799999999619e-05, 8.761100000000133e-05]</msg>
<status status="PASS" starttime="20201029 12:49:15.908" endtime="20201029 12:49:15.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.897" endtime="20201029 12:49:15.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:15.925" endtime="20201029 12:49:15.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.919" endtime="20201029 12:49:15.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.917" endtime="20201029 12:49:15.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.423" endtime="20201029 12:49:15.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.422" endtime="20201029 12:49:15.950"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.972" endtime="20201029 12:49:15.991"></status>
</kw>
<msg timestamp="20201029 12:49:15.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.969" endtime="20201029 12:49:15.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.994" endtime="20201029 12:49:15.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.000" endtime="20201029 12:49:16.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.962" endtime="20201029 12:49:16.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.956" endtime="20201029 12:49:16.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.024" endtime="20201029 12:49:16.355"></status>
</kw>
<msg timestamp="20201029 12:49:16.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039092583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039182069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:16.021" endtime="20201029 12:49:16.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039092583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039182069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:16.364" endtime="20201029 12:49:16.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.383" endtime="20201029 12:49:16.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.014" endtime="20201029 12:49:16.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.009" endtime="20201029 12:49:16.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:16.400" level="INFO">${RESULT} = [{'diff': 8.948599999999973e-05}, {'diff': 8.959699999999682e-05}, {'diff': 8.916600000000163e-05}, {'diff': 8.794399999999952e-05}, {'diff': 8.902699999999847e-05}, {'diff': 8.808300000000269e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:16.391" endtime="20201029 12:49:16.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:16.411" level="INFO">${ACCURACY} = {'diff': [8.948599999999973e-05, 8.959699999999682e-05, 8.916600000000163e-05, 8.794399999999952e-05, 8.902699999999847e-05, 8.808300000000269e-05, 8.870799999999984e-05, 8.94450000000005e-05, 8.91390...</msg>
<status status="PASS" starttime="20201029 12:49:16.402" endtime="20201029 12:49:16.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.421" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:49:16.419" endtime="20201029 12:49:16.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.426" level="INFO">VALUE: [8.948599999999973e-05, 8.959699999999682e-05, 8.916600000000163e-05, 8.794399999999952e-05, 8.902699999999847e-05, 8.808300000000269e-05, 8.870799999999984e-05, 8.94450000000005e-05, 8.913900000000197e-05, 8.847199999999916e-05, 8.930499999999786e-05, 8.898599999999923e-05, 8.955499999999811e-05, 8.697199999999766e-05, 8.831900000000337e-05, 8.894400000000052e-05, 8.915300000000154e-05, 8.747199999999816e-05, 8.936100000000308e-05, 8.941700000000136e-05, 8.888899999999478e-05, 8.898599999999923e-05, 8.911100000000283e-05, 8.83050000000038e-05, 8.890200000000181e-05, 8.906900000000412e-05, 8.888899999999478e-05, 8.815300000000054e-05, 8.902799999999794e-05, 8.895800000000009e-05, 8.913900000000197e-05, 8.954099999999854e-05, 8.869400000000027e-05, 8.765300000000004e-05, 8.961100000000333e-05, 8.948599999999973e-05, 8.870799999999984e-05, 8.936100000000308e-05, 8.697199999999766e-05, 8.83199999999959e-05, 8.897199999999966e-05, 8.911100000000283e-05, 8.81670000000001e-05, 8.961099999999639e-05, 8.91670000000011e-05, 8.888900000000172e-05, 8.925000000000599e-05, 8.898599999999923e-05, 8.966600000000213e-05, 8.78329999999955e-05]</msg>
<status status="PASS" starttime="20201029 12:49:16.423" endtime="20201029 12:49:16.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.412" endtime="20201029 12:49:16.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:16.439" endtime="20201029 12:49:16.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.435" endtime="20201029 12:49:16.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.432" endtime="20201029 12:49:16.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.952" endtime="20201029 12:49:16.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.951" endtime="20201029 12:49:16.464"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.486" endtime="20201029 12:49:16.505"></status>
</kw>
<msg timestamp="20201029 12:49:16.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:16.483" endtime="20201029 12:49:16.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:16.508" endtime="20201029 12:49:16.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.515" endtime="20201029 12:49:16.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.476" endtime="20201029 12:49:16.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.470" endtime="20201029 12:49:16.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.538" endtime="20201029 12:49:16.868"></status>
</kw>
<msg timestamp="20201029 12:49:16.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039273458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039363042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:16.535" endtime="20201029 12:49:16.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039273458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039363042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:16.883" endtime="20201029 12:49:16.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.906" endtime="20201029 12:49:16.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.527" endtime="20201029 12:49:16.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.523" endtime="20201029 12:49:16.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:16.925" level="INFO">${RESULT} = [{'diff': 8.958400000000366e-05}, {'diff': 9.06529999999961e-05}, {'diff': 9.023600000000048e-05}, {'diff': 8.901400000000531e-05}, {'diff': 9.057000000000509e-05}, {'diff': 9.072200000000141e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:16.917" endtime="20201029 12:49:16.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:16.937" level="INFO">${ACCURACY} = {'diff': [8.958400000000366e-05, 9.06529999999961e-05, 9.023600000000048e-05, 8.901400000000531e-05, 9.057000000000509e-05, 9.072200000000141e-05, 8.987500000000315e-05, 9.01670000000021e-05, 9.083399...</msg>
<status status="PASS" starttime="20201029 12:49:16.927" endtime="20201029 12:49:16.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.947" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:49:16.945" endtime="20201029 12:49:16.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.953" level="INFO">VALUE: [8.958400000000366e-05, 9.06529999999961e-05, 9.023600000000048e-05, 8.901400000000531e-05, 9.057000000000509e-05, 9.072200000000141e-05, 8.987500000000315e-05, 9.01670000000021e-05, 9.083399999999797e-05, 8.987499999999621e-05, 8.995800000000109e-05, 9.073600000000098e-05, 9.088900000000372e-05, 9.05000000000003e-05, 9.062499999999696e-05, 9.061099999999739e-05, 9.069399999999533e-05, 9.048600000000073e-05, 9.054200000000595e-05, 9.023600000000048e-05, 9.018099999999474e-05, 9.013900000000297e-05, 9.061099999999739e-05, 9.013900000000297e-05, 9.008399999999722e-05, 9.005499999999861e-05, 9.052799999999944e-05, 9.005500000000555e-05, 9.034700000000451e-05, 9.03879999999968e-05, 9.01670000000021e-05, 8.930599999999733e-05, 9.045800000000159e-05, 8.977799999999869e-05, 9.040300000000279e-05, 9.01670000000021e-05, 8.998600000000023e-05, 9.048600000000073e-05, 9.069399999999533e-05, 9.058299999999825e-05, 9.043100000000193e-05, 9.061199999999686e-05, 8.980599999999783e-05, 9.027799999999919e-05, 9.056899999999868e-05, 8.984699999999707e-05, 8.89999999999988e-05, 9.012499999999646e-05, 8.977799999999869e-05, 8.980600000000477e-05]</msg>
<status status="PASS" starttime="20201029 12:49:16.950" endtime="20201029 12:49:16.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.938" endtime="20201029 12:49:16.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:16.965" endtime="20201029 12:49:16.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.961" endtime="20201029 12:49:16.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.958" endtime="20201029 12:49:16.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.466" endtime="20201029 12:49:16.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.465" endtime="20201029 12:49:16.990"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.013" endtime="20201029 12:49:17.032"></status>
</kw>
<msg timestamp="20201029 12:49:17.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.010" endtime="20201029 12:49:17.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.036" endtime="20201029 12:49:17.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.042" endtime="20201029 12:49:17.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.002" endtime="20201029 12:49:17.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.997" endtime="20201029 12:49:17.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.065" endtime="20201029 12:49:17.398"></status>
</kw>
<msg timestamp="20201029 12:49:17.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039872792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039963444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:17.062" endtime="20201029 12:49:17.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039872792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039963444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:17.408" endtime="20201029 12:49:17.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.426" endtime="20201029 12:49:17.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.055" endtime="20201029 12:49:17.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.050" endtime="20201029 12:49:17.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:17.443" level="INFO">${RESULT} = [{'diff': 9.065200000000356e-05}, {'diff': 9.134700000000551e-05}, {'diff': 9.156999999999915e-05}, {'diff': 9.145899999999513e-05}, {'diff': 9.151400000000087e-05}, {'diff': 9.108299999999875e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:17.435" endtime="20201029 12:49:17.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:17.453" level="INFO">${ACCURACY} = {'diff': [9.065200000000356e-05, 9.134700000000551e-05, 9.156999999999915e-05, 9.145899999999513e-05, 9.151400000000087e-05, 9.108299999999875e-05, 9.119400000000277e-05, 9.147200000000216e-05, 9.1527...</msg>
<status status="PASS" starttime="20201029 12:49:17.445" endtime="20201029 12:49:17.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.463" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:49:17.461" endtime="20201029 12:49:17.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.469" level="INFO">VALUE: [9.065200000000356e-05, 9.134700000000551e-05, 9.156999999999915e-05, 9.145899999999513e-05, 9.151400000000087e-05, 9.108299999999875e-05, 9.119400000000277e-05, 9.147200000000216e-05, 9.15279999999935e-05, 9.10000000000008e-05, 9.102799999999994e-05, 9.175000000000155e-05, 9.165199999999762e-05, 9.104199999999951e-05, 9.180599999999983e-05, 9.176300000000165e-05, 9.097300000000114e-05, 9.163899999999753e-05, 9.0945000000002e-05, 9.134699999999857e-05, 9.158299999999925e-05, 9.111100000000483e-05, 9.140199999999737e-05, 9.077700000000022e-05, 9.15000000000013e-05, 9.175000000000155e-05, 9.095900000000157e-05, 9.138899999999728e-05, 9.161099999999839e-05, 9.136099999999814e-05, 9.173599999999504e-05, 9.126400000000062e-05, 9.176400000000112e-05, 9.147200000000216e-05, 9.172200000000241e-05, 9.1332999999999e-05, 9.130599999999933e-05, 9.161099999999839e-05, 9.173599999999504e-05, 9.087500000000415e-05, 9.084799999999754e-05, 9.151400000000087e-05, 9.087499999999721e-05, 9.091700000000286e-05, 9.041700000000236e-05, 9.113900000000397e-05, 9.125000000000105e-05, 9.152800000000044e-05, 9.147300000000164e-05, 9.1332999999999e-05]</msg>
<status status="PASS" starttime="20201029 12:49:17.466" endtime="20201029 12:49:17.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.454" endtime="20201029 12:49:17.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:17.486" endtime="20201029 12:49:17.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.482" endtime="20201029 12:49:17.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.479" endtime="20201029 12:49:17.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.992" endtime="20201029 12:49:17.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.991" endtime="20201029 12:49:17.511"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.534" endtime="20201029 12:49:17.554"></status>
</kw>
<msg timestamp="20201029 12:49:17.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.530" endtime="20201029 12:49:17.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.557" endtime="20201029 12:49:17.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.563" endtime="20201029 12:49:17.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.523" endtime="20201029 12:49:17.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.517" endtime="20201029 12:49:17.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.587" endtime="20201029 12:49:17.916"></status>
</kw>
<msg timestamp="20201029 12:49:17.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040984486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041076486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:17.583" endtime="20201029 12:49:17.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040984486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041076486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:17.926" endtime="20201029 12:49:17.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.945" endtime="20201029 12:49:17.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.576" endtime="20201029 12:49:17.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.571" endtime="20201029 12:49:17.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:17.962" level="INFO">${RESULT} = [{'diff': 9.20000000000018e-05}, {'diff': 9.179100000000079e-05}, {'diff': 9.166699999999667e-05}, {'diff': 9.255500000000111e-05}, {'diff': 9.251400000000187e-05}, {'diff': 9.227800000000119e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:17.953" endtime="20201029 12:49:17.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:17.971" level="INFO">${ACCURACY} = {'diff': [9.20000000000018e-05, 9.179100000000079e-05, 9.166699999999667e-05, 9.255500000000111e-05, 9.251400000000187e-05, 9.227800000000119e-05, 9.222200000000291e-05, 9.270899999999638e-05, 9.17500...</msg>
<status status="PASS" starttime="20201029 12:49:17.964" endtime="20201029 12:49:17.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.982" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:49:17.979" endtime="20201029 12:49:17.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.987" level="INFO">VALUE: [9.20000000000018e-05, 9.179100000000079e-05, 9.166699999999667e-05, 9.255500000000111e-05, 9.251400000000187e-05, 9.227800000000119e-05, 9.222200000000291e-05, 9.270899999999638e-05, 9.175000000000155e-05, 9.269400000000427e-05, 9.224999999999511e-05, 9.206900000000018e-05, 9.140200000000431e-05, 9.248699999999527e-05, 9.231900000000043e-05, 9.184699999999907e-05, 9.201400000000137e-05, 9.205500000000061e-05, 9.220900000000282e-05, 9.201400000000137e-05, 9.272199999999647e-05, 9.225000000000205e-05, 9.204200000000051e-05, 9.218099999999674e-05, 9.269500000000375e-05, 9.172200000000241e-05, 9.213899999999803e-05, 9.247199999999622e-05, 9.187499999999821e-05, 9.187499999999821e-05, 9.180500000000036e-05, 9.201399999999443e-05, 9.1945000000003e-05, 9.261099999999939e-05, 9.255600000000058e-05, 9.104199999999951e-05, 9.144399999999608e-05, 9.244399999999708e-05, 9.091699999999592e-05, 9.193000000000395e-05, 9.241699999999742e-05, 9.20000000000018e-05, 9.245800000000359e-05, 9.259799999999929e-05, 9.236099999999914e-05, 9.219499999999631e-05, 9.206999999999965e-05, 9.193099999999649e-05, 9.18329999999995e-05, 9.201399999999443e-05]</msg>
<status status="PASS" starttime="20201029 12:49:17.984" endtime="20201029 12:49:17.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.973" endtime="20201029 12:49:17.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:18.001" endtime="20201029 12:49:18.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.995" endtime="20201029 12:49:18.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.993" endtime="20201029 12:49:18.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.513" endtime="20201029 12:49:18.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.512" endtime="20201029 12:49:18.026"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.049" endtime="20201029 12:49:18.069"></status>
</kw>
<msg timestamp="20201029 12:49:18.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:18.046" endtime="20201029 12:49:18.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:18.072" endtime="20201029 12:49:18.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.079" endtime="20201029 12:49:18.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.039" endtime="20201029 12:49:18.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.033" endtime="20201029 12:49:18.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.102" endtime="20201029 12:49:18.482"></status>
</kw>
<msg timestamp="20201029 12:49:18.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040124222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040217931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:18.099" endtime="20201029 12:49:18.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040124222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040217931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:18.493" endtime="20201029 12:49:18.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.514" endtime="20201029 12:49:18.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.092" endtime="20201029 12:49:18.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.087" endtime="20201029 12:49:18.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:18.539" level="INFO">${RESULT} = [{'diff': 9.370899999999738e-05}, {'diff': 9.359700000000082e-05}, {'diff': 9.359800000000029e-05}, {'diff': 9.293099999999749e-05}, {'diff': 9.309700000000032e-05}, {'diff': 9.349999999999636e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:18.525" endtime="20201029 12:49:18.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:18.553" level="INFO">${ACCURACY} = {'diff': [9.370899999999738e-05, 9.359700000000082e-05, 9.359800000000029e-05, 9.293099999999749e-05, 9.309700000000032e-05, 9.349999999999636e-05, 9.358400000000072e-05, 9.366700000000561e-05, 9.3583...</msg>
<status status="PASS" starttime="20201029 12:49:18.542" endtime="20201029 12:49:18.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.565" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:49:18.563" endtime="20201029 12:49:18.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.571" level="INFO">VALUE: [9.370899999999738e-05, 9.359700000000082e-05, 9.359800000000029e-05, 9.293099999999749e-05, 9.309700000000032e-05, 9.349999999999636e-05, 9.358400000000072e-05, 9.366700000000561e-05, 9.358300000000125e-05, 9.354200000000201e-05, 9.290299999999835e-05, 9.362499999999996e-05, 9.340299999999885e-05, 9.330600000000133e-05, 9.280600000000083e-05, 9.302800000000194e-05, 9.362499999999996e-05, 9.301400000000237e-05, 9.236099999999914e-05, 9.293099999999749e-05, 9.316700000000511e-05, 9.304200000000151e-05, 9.318100000000468e-05, 9.280600000000083e-05, 9.187499999999821e-05, 9.341599999999894e-05, 9.213899999999803e-05, 9.234699999999957e-05, 9.363899999999953e-05, 9.284700000000007e-05, 9.320899999999688e-05, 9.369499999999781e-05, 9.299999999999586e-05, 9.308400000000022e-05, 9.309700000000032e-05, 9.326400000000262e-05, 9.222300000000239e-05, 9.306900000000118e-05, 9.372199999999747e-05, 9.369399999999833e-05, 9.336100000000014e-05, 9.329200000000176e-05, 9.36659999999992e-05, 9.34450000000045e-05, 9.236099999999914e-05, 9.284700000000007e-05, 9.342999999999851e-05, 9.281900000000093e-05, 9.18329999999995e-05, 9.331900000000143e-05]</msg>
<status status="PASS" starttime="20201029 12:49:18.567" endtime="20201029 12:49:18.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.556" endtime="20201029 12:49:18.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:18.584" endtime="20201029 12:49:18.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.579" endtime="20201029 12:49:18.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.577" endtime="20201029 12:49:18.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.028" endtime="20201029 12:49:18.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.027" endtime="20201029 12:49:18.609"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.632" endtime="20201029 12:49:18.654"></status>
</kw>
<msg timestamp="20201029 12:49:18.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:18.629" endtime="20201029 12:49:18.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:18.657" endtime="20201029 12:49:18.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.663" endtime="20201029 12:49:18.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.621" endtime="20201029 12:49:18.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.615" endtime="20201029 12:49:18.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.687" endtime="20201029 12:49:19.029"></status>
</kw>
<msg timestamp="20201029 12:49:19.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040568111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040662444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:18.684" endtime="20201029 12:49:19.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040568111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040662444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:19.039" endtime="20201029 12:49:19.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.058" endtime="20201029 12:49:19.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.676" endtime="20201029 12:49:19.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.672" endtime="20201029 12:49:19.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:19.075" level="INFO">${RESULT} = [{'diff': 9.4333000000002e-05}, {'diff': 9.474999999999761e-05}, {'diff': 9.451400000000387e-05}, {'diff': 9.43059999999954e-05}, {'diff': 9.477799999999675e-05}, {'diff': 9.443100000000593e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:49:19.067" endtime="20201029 12:49:19.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:19.087" level="INFO">${ACCURACY} = {'diff': [9.4333000000002e-05, 9.474999999999761e-05, 9.451400000000387e-05, 9.43059999999954e-05, 9.477799999999675e-05, 9.443100000000593e-05, 9.473599999999804e-05, 9.33200000000009e-05, 9.41250000...</msg>
<status status="PASS" starttime="20201029 12:49:19.078" endtime="20201029 12:49:19.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.099" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:49:19.097" endtime="20201029 12:49:19.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.105" level="INFO">VALUE: [9.4333000000002e-05, 9.474999999999761e-05, 9.451400000000387e-05, 9.43059999999954e-05, 9.477799999999675e-05, 9.443100000000593e-05, 9.473599999999804e-05, 9.33200000000009e-05, 9.412500000000046e-05, 9.395800000000509e-05, 9.440299999999985e-05, 9.474999999999761e-05, 9.427800000000319e-05, 9.427799999999625e-05, 9.438899999999334e-05, 9.424999999999711e-05, 9.39859999999973e-05, 9.438900000000028e-05, 9.316700000000511e-05, 9.463900000000053e-05, 9.316699999999817e-05, 9.458400000000172e-05, 9.463900000000053e-05, 9.445799999999865e-05, 9.41800000000062e-05, 9.413900000000003e-05, 9.49859999999983e-05, 9.419500000000525e-05, 9.491699999999992e-05, 9.40000000000038e-05, 9.483299999999556e-05, 9.391699999999892e-05, 9.422199999999797e-05, 9.529199999999682e-05, 9.40000000000038e-05, 9.473700000000446e-05, 9.442999999999951e-05, 9.427799999999625e-05, 9.419399999999883e-05, 9.409700000000132e-05, 9.441699999999942e-05, 9.519499999999931e-05, 9.438900000000028e-05, 9.462500000000096e-05, 9.431900000000243e-05, 9.455600000000258e-05, 9.347199999999722e-05, 9.393099999999849e-05, 9.534800000000204e-05, 9.390199999999987e-05]</msg>
<status status="PASS" starttime="20201029 12:49:19.102" endtime="20201029 12:49:19.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.089" endtime="20201029 12:49:19.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:19.118" endtime="20201029 12:49:19.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.114" endtime="20201029 12:49:19.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.111" endtime="20201029 12:49:19.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.611" endtime="20201029 12:49:19.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.610" endtime="20201029 12:49:19.144"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.167" endtime="20201029 12:49:19.188"></status>
</kw>
<msg timestamp="20201029 12:49:19.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.164" endtime="20201029 12:49:19.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.192" endtime="20201029 12:49:19.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.199" endtime="20201029 12:49:19.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.156" endtime="20201029 12:49:19.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.150" endtime="20201029 12:49:19.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.222" endtime="20201029 12:49:19.565"></status>
</kw>
<msg timestamp="20201029 12:49:19.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040656847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040752931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:19.219" endtime="20201029 12:49:19.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040656847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040752931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:19.575" endtime="20201029 12:49:19.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.594" endtime="20201029 12:49:19.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.212" endtime="20201029 12:49:19.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.207" endtime="20201029 12:49:19.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:19.612" level="INFO">${RESULT} = [{'diff': 9.608399999999628e-05}, {'diff': 9.679199999999832e-05}, {'diff': 9.584699999999613e-05}, {'diff': 9.586100000000264e-05}, {'diff': 9.577799999999775e-05}, {'diff': 9.687500000000321e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:19.603" endtime="20201029 12:49:19.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:19.621" level="INFO">${ACCURACY} = {'diff': [9.608399999999628e-05, 9.679199999999832e-05, 9.584699999999613e-05, 9.586100000000264e-05, 9.577799999999775e-05, 9.687500000000321e-05, 9.587500000000221e-05, 9.619400000000083e-05, 9.6027...</msg>
<status status="PASS" starttime="20201029 12:49:19.614" endtime="20201029 12:49:19.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.632" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:49:19.630" endtime="20201029 12:49:19.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.638" level="INFO">VALUE: [9.608399999999628e-05, 9.679199999999832e-05, 9.584699999999613e-05, 9.586100000000264e-05, 9.577799999999775e-05, 9.687500000000321e-05, 9.587500000000221e-05, 9.619400000000083e-05, 9.6027999999998e-05, 9.640299999999491e-05, 9.604200000000451e-05, 9.629199999999782e-05, 9.587500000000221e-05, 9.630500000000486e-05, 9.638899999999534e-05, 9.591700000000092e-05, 9.649999999999936e-05, 9.495899999999863e-05, 9.673600000000004e-05, 9.613900000000203e-05, 9.60130000000059e-05, 9.663799999999612e-05, 9.641700000000142e-05, 9.674999999999961e-05, 9.668100000000124e-05, 9.627799999999825e-05, 9.655599999999764e-05, 9.644400000000108e-05, 9.608300000000375e-05, 9.630600000000433e-05, 9.62080000000004e-05, 9.618000000000126e-05, 9.593100000000049e-05, 9.640300000000185e-05, 9.591699999999398e-05, 9.591700000000092e-05, 9.64859999999998e-05, 9.668000000000176e-05, 9.60409999999981e-05, 9.622199999999997e-05, 9.638899999999534e-05, 9.659699999999688e-05, 9.633299999999706e-05, 9.643000000000151e-05, 9.608400000000322e-05, 9.669400000000133e-05, 9.638900000000228e-05, 9.658299999999731e-05, 9.495799999999915e-05, 9.636199999999567e-05]</msg>
<status status="PASS" starttime="20201029 12:49:19.635" endtime="20201029 12:49:19.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.623" endtime="20201029 12:49:19.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:19.651" endtime="20201029 12:49:19.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.646" endtime="20201029 12:49:19.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.644" endtime="20201029 12:49:19.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.146" endtime="20201029 12:49:19.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.145" endtime="20201029 12:49:19.676"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.699" endtime="20201029 12:49:19.722"></status>
</kw>
<msg timestamp="20201029 12:49:19.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.696" endtime="20201029 12:49:19.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.725" endtime="20201029 12:49:19.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.732" endtime="20201029 12:49:19.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.688" endtime="20201029 12:49:19.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.683" endtime="20201029 12:49:19.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.756" endtime="20201029 12:49:20.105"></status>
</kw>
<msg timestamp="20201029 12:49:20.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042034375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042131222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:19.752" endtime="20201029 12:49:20.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042034375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042131222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:20.115" endtime="20201029 12:49:20.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.134" endtime="20201029 12:49:20.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.745" endtime="20201029 12:49:20.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.740" endtime="20201029 12:49:20.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:20.152" level="INFO">${RESULT} = [{'diff': 9.684700000000407e-05}, {'diff': 9.690300000000235e-05}, {'diff': 9.755599999999864e-05}, {'diff': 9.72080000000014e-05}, {'diff': 9.73609999999972e-05}, {'diff': 9.766699999999573e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:49:20.143" endtime="20201029 12:49:20.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:20.162" level="INFO">${ACCURACY} = {'diff': [9.684700000000407e-05, 9.690300000000235e-05, 9.755599999999864e-05, 9.72080000000014e-05, 9.73609999999972e-05, 9.766699999999573e-05, 9.725000000000011e-05, 9.761099999999745e-05, 9.726399...</msg>
<status status="PASS" starttime="20201029 12:49:20.155" endtime="20201029 12:49:20.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.173" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:49:20.171" endtime="20201029 12:49:20.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.178" level="INFO">VALUE: [9.684700000000407e-05, 9.690300000000235e-05, 9.755599999999864e-05, 9.72080000000014e-05, 9.73609999999972e-05, 9.766699999999573e-05, 9.725000000000011e-05, 9.761099999999745e-05, 9.726399999999968e-05, 9.722200000000097e-05, 9.773700000000052e-05, 9.683400000000397e-05, 9.71809999999948e-05, 9.694400000000158e-05, 9.706900000000518e-05, 9.631899999999749e-05, 9.76809999999953e-05, 9.68059999999979e-05, 9.761100000000439e-05, 9.704199999999857e-05, 9.636100000000314e-05, 9.706899999999824e-05, 9.595899999999963e-05, 9.71530000000026e-05, 9.709699999999738e-05, 9.659699999999688e-05, 9.725000000000011e-05, 9.737499999999677e-05, 9.711100000000389e-05, 9.74730000000007e-05, 9.725000000000011e-05, 9.751399999999993e-05, 9.723600000000054e-05, 9.688899999999584e-05, 9.758300000000525e-05, 9.73609999999972e-05, 9.713900000000303e-05, 9.684800000000354e-05, 9.676399999999918e-05, 9.766700000000267e-05, 9.684800000000354e-05, 9.762500000000396e-05, 9.762500000000396e-05, 9.69860000000003e-05, 9.790300000000335e-05, 9.705499999999867e-05, 9.686100000000364e-05, 9.763799999999712e-05, 9.743100000000199e-05, 9.741600000000294e-05]</msg>
<status status="PASS" starttime="20201029 12:49:20.175" endtime="20201029 12:49:20.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.164" endtime="20201029 12:49:20.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:20.197" endtime="20201029 12:49:20.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.186" endtime="20201029 12:49:20.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.184" endtime="20201029 12:49:20.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.678" endtime="20201029 12:49:20.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.677" endtime="20201029 12:49:20.222"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.244" endtime="20201029 12:49:20.263"></status>
</kw>
<msg timestamp="20201029 12:49:20.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:20.241" endtime="20201029 12:49:20.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:20.267" endtime="20201029 12:49:20.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.273" endtime="20201029 12:49:20.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.234" endtime="20201029 12:49:20.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.228" endtime="20201029 12:49:20.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.296" endtime="20201029 12:49:20.630"></status>
</kw>
<msg timestamp="20201029 12:49:20.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0396815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03978025, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:49:20.293" endtime="20201029 12:49:20.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0396815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03978025, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:49:20.640" endtime="20201029 12:49:20.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.658" endtime="20201029 12:49:20.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.286" endtime="20201029 12:49:20.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.281" endtime="20201029 12:49:20.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:20.675" level="INFO">${RESULT} = [{'diff': 9.875000000000161e-05}, {'diff': 9.859699999999888e-05}, {'diff': 9.847199999999529e-05}, {'diff': 9.861099999999845e-05}, {'diff': 9.781999999999846e-05}, {'diff': 9.855500000000017e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:20.667" endtime="20201029 12:49:20.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:20.686" level="INFO">${ACCURACY} = {'diff': [9.875000000000161e-05, 9.859699999999888e-05, 9.847199999999529e-05, 9.861099999999845e-05, 9.781999999999846e-05, 9.855500000000017e-05, 9.851400000000093e-05, 9.836200000000461e-05, 9.8417...</msg>
<status status="PASS" starttime="20201029 12:49:20.678" endtime="20201029 12:49:20.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.697" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:49:20.695" endtime="20201029 12:49:20.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.702" level="INFO">VALUE: [9.875000000000161e-05, 9.859699999999888e-05, 9.847199999999529e-05, 9.861099999999845e-05, 9.781999999999846e-05, 9.855500000000017e-05, 9.851400000000093e-05, 9.836200000000461e-05, 9.841700000000342e-05, 9.862499999999802e-05, 9.694500000000106e-05, 9.775000000000061e-05, 9.837500000000471e-05, 9.709699999999738e-05, 9.867999999999683e-05, 9.75409999999996e-05, 9.869500000000281e-05, 9.795799999999522e-05, 9.851400000000093e-05, 9.784700000000507e-05, 9.805499999999967e-05, 9.81939999999959e-05, 9.863900000000453e-05, 9.870799999999597e-05, 9.790299999999641e-05, 9.838899999999734e-05, 9.86530000000041e-05, 9.850000000000136e-05, 9.834700000000557e-05, 9.830499999999992e-05, 9.795799999999522e-05, 9.691699999999498e-05, 9.84860000000018e-05, 9.85410000000006e-05, 9.742999999999558e-05, 9.818100000000274e-05, 9.799999999999393e-05, 9.812499999999752e-05, 9.840299999999691e-05, 9.848599999999486e-05, 9.836199999999767e-05, 9.862499999999802e-05, 9.873700000000152e-05, 9.797200000000172e-05, 9.826400000000068e-05, 9.783399999999803e-05, 9.787499999999727e-05, 9.837499999999777e-05, 9.709700000000432e-05, 9.845800000000265e-05]</msg>
<status status="PASS" starttime="20201029 12:49:20.699" endtime="20201029 12:49:20.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.688" endtime="20201029 12:49:20.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:20.715" endtime="20201029 12:49:20.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.711" endtime="20201029 12:49:20.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.708" endtime="20201029 12:49:20.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.224" endtime="20201029 12:49:20.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.223" endtime="20201029 12:49:20.740"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.763" endtime="20201029 12:49:20.782"></status>
</kw>
<msg timestamp="20201029 12:49:20.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:20.760" endtime="20201029 12:49:20.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:20.785" endtime="20201029 12:49:20.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.792" endtime="20201029 12:49:20.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.752" endtime="20201029 12:49:20.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.747" endtime="20201029 12:49:20.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.815" endtime="20201029 12:49:21.149"></status>
</kw>
<msg timestamp="20201029 12:49:21.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039850111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039949458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:20.812" endtime="20201029 12:49:21.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039850111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039949458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:21.159" endtime="20201029 12:49:21.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.178" endtime="20201029 12:49:21.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.805" endtime="20201029 12:49:21.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.800" endtime="20201029 12:49:21.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:21.195" level="INFO">${RESULT} = [{'diff': 9.934699999999963e-05}, {'diff': 9.906900000000024e-05}, {'diff': 9.806899999999924e-05}, {'diff': 9.913899999999809e-05}, {'diff': 9.958300000000031e-05}, {'diff': 9.965299999999816e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:21.186" endtime="20201029 12:49:21.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:21.206" level="INFO">${ACCURACY} = {'diff': [9.934699999999963e-05, 9.906900000000024e-05, 9.806899999999924e-05, 9.913899999999809e-05, 9.958300000000031e-05, 9.965299999999816e-05, 9.887499999999827e-05, 9.883299999999956e-05, 9.9472...</msg>
<status status="PASS" starttime="20201029 12:49:21.197" endtime="20201029 12:49:21.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.217" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:49:21.215" endtime="20201029 12:49:21.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.223" level="INFO">VALUE: [9.934699999999963e-05, 9.906900000000024e-05, 9.806899999999924e-05, 9.913899999999809e-05, 9.958300000000031e-05, 9.965299999999816e-05, 9.887499999999827e-05, 9.883299999999956e-05, 9.947200000000322e-05, 9.831999999999896e-05, 9.902700000000153e-05, 9.890299999999741e-05, 9.96939999999974e-05, 9.97359999999961e-05, 9.958300000000031e-05, 9.895799999999622e-05, 9.912499999999852e-05, 9.979100000000185e-05, 9.91660000000047e-05, 9.954099999999466e-05, 9.845800000000265e-05, 9.949999999999543e-05, 9.89860000000023e-05, 9.938900000000528e-05, 9.919499999999637e-05, 9.909699999999938e-05, 9.906900000000024e-05, 9.794499999999512e-05, 9.961099999999945e-05, 9.879100000000085e-05, 9.797200000000172e-05, 9.877800000000075e-05, 9.945899999999619e-05, 9.947200000000322e-05, 9.897199999999579e-05, 9.920899999999594e-05, 9.976400000000218e-05, 9.923600000000254e-05, 9.965299999999816e-05, 9.943099999999705e-05, 9.905500000000067e-05, 9.981900000000099e-05, 9.970900000000338e-05, 9.968100000000424e-05, 9.926399999999475e-05, 9.831999999999896e-05, 9.891600000000444e-05, 9.959699999999988e-05, 9.899999999999493e-05, 9.934699999999963e-05]</msg>
<status status="PASS" starttime="20201029 12:49:21.220" endtime="20201029 12:49:21.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.208" endtime="20201029 12:49:21.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:21.235" endtime="20201029 12:49:21.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.231" endtime="20201029 12:49:21.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.229" endtime="20201029 12:49:21.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.742" endtime="20201029 12:49:21.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.741" endtime="20201029 12:49:21.260"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.283" endtime="20201029 12:49:21.302"></status>
</kw>
<msg timestamp="20201029 12:49:21.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:21.280" endtime="20201029 12:49:21.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:21.306" endtime="20201029 12:49:21.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.312" endtime="20201029 12:49:21.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.273" endtime="20201029 12:49:21.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.267" endtime="20201029 12:49:21.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.335" endtime="20201029 12:49:21.672"></status>
</kw>
<msg timestamp="20201029 12:49:21.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039564653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039663667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:21.332" endtime="20201029 12:49:21.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039564653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039663667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:21.681" endtime="20201029 12:49:21.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.700" endtime="20201029 12:49:21.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.325" endtime="20201029 12:49:21.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.320" endtime="20201029 12:49:21.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:21.719" level="INFO">${RESULT} = [{'diff': 9.901400000000143e-05}, {'diff': 9.99159999999985e-05}, {'diff': 0.00010073700000000352}, {'diff': 9.98609999999997e-05}, {'diff': 9.983300000000056e-05}, {'diff': 0.00010077800000000275}, {...</msg>
<status status="PASS" starttime="20201029 12:49:21.708" endtime="20201029 12:49:21.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:21.729" level="INFO">${ACCURACY} = {'diff': [9.901400000000143e-05, 9.99159999999985e-05, 0.00010073700000000352, 9.98609999999997e-05, 9.983300000000056e-05, 0.00010077800000000275, 9.902699999999459e-05, 0.00010029200000000182, 0.000...</msg>
<status status="PASS" starttime="20201029 12:49:21.722" endtime="20201029 12:49:21.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.742" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:49:21.740" endtime="20201029 12:49:21.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.749" level="INFO">VALUE: [9.901400000000143e-05, 9.99159999999985e-05, 0.00010073700000000352, 9.98609999999997e-05, 9.983300000000056e-05, 0.00010077800000000275, 9.902699999999459e-05, 0.00010029200000000182, 0.00010030500000000192, 9.951400000000193e-05, 0.00010022199999999704, 0.00010022199999999704, 0.00010024999999999618, 9.984700000000013e-05, 9.981900000000099e-05, 0.0001003610000000002, 0.00010000000000000286, 0.00010043099999999805, 0.00010041699999999848, 0.00010058400000000078, 0.00010075000000000361, 0.00010055600000000164, 0.00010047199999999729, 0.00010093099999999855, 0.00010059700000000088, 0.00010009700000000038, 0.00010020799999999747, 9.983300000000056e-05, 0.00010032000000000096, 0.00010016699999999823, 9.998699999999583e-05, 0.00010077800000000275, 0.00010076399999999625, 0.00010043099999999805, 0.00010037499999999977, 0.00010013899999999909, 0.00010068100000000524, 0.00010057000000000121, 0.00010033300000000106, 0.00010006900000000124, 0.00010059800000000035, 0.000100028000000002, 0.00010077799999999582, 0.00010062500000000002, 0.00010033400000000053, 9.99159999999985e-05, 9.981900000000099e-05, 0.00010011099999999995, 0.00010017999999999833, 9.898700000000177e-05]</msg>
<status status="PASS" starttime="20201029 12:49:21.745" endtime="20201029 12:49:21.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.731" endtime="20201029 12:49:21.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:21.765" endtime="20201029 12:49:21.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.759" endtime="20201029 12:49:21.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.756" endtime="20201029 12:49:21.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.263" endtime="20201029 12:49:21.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.261" endtime="20201029 12:49:21.790"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.813" endtime="20201029 12:49:21.834"></status>
</kw>
<msg timestamp="20201029 12:49:21.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:21.810" endtime="20201029 12:49:21.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:21.837" endtime="20201029 12:49:21.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.843" endtime="20201029 12:49:21.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.802" endtime="20201029 12:49:21.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.796" endtime="20201029 12:49:21.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.867" endtime="20201029 12:49:22.201"></status>
</kw>
<msg timestamp="20201029 12:49:22.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041422458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041523653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:21.863" endtime="20201029 12:49:22.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041422458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041523653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:22.211" endtime="20201029 12:49:22.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.229" endtime="20201029 12:49:22.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.856" endtime="20201029 12:49:22.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.852" endtime="20201029 12:49:22.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:22.246" level="INFO">${RESULT} = [{'diff': 0.00010119499999999837}, {'diff': 0.00010137500000000077}, {'diff': 0.00010143099999999905}, {'diff': 0.00010129199999999589}, {'diff': 0.00010082000000000146}, {'diff': 0.000100973000000004...</msg>
<status status="PASS" starttime="20201029 12:49:22.238" endtime="20201029 12:49:22.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:22.256" level="INFO">${ACCURACY} = {'diff': [0.00010119499999999837, 0.00010137500000000077, 0.00010143099999999905, 0.00010129199999999589, 0.00010082000000000146, 0.0001009730000000042, 0.00010076400000000318, 0.00010140200000000044,...</msg>
<status status="PASS" starttime="20201029 12:49:22.249" endtime="20201029 12:49:22.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.266" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:49:22.264" endtime="20201029 12:49:22.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.272" level="INFO">VALUE: [0.00010119499999999837, 0.00010137500000000077, 0.00010143099999999905, 0.00010129199999999589, 0.00010082000000000146, 0.0001009730000000042, 0.00010076400000000318, 0.00010140200000000044, 0.00010082000000000146, 0.00010147199999999829, 0.00010126400000000368, 0.00010134700000000163, 0.00010119400000000583, 0.00010099999999999693, 0.00010180499999999648, 0.0001016809999999993, 0.00010126399999999675, 0.00010112500000000052, 0.00010127799999999632, 0.00010052799999999557, 0.00010166699999999973, 0.00010015299999999866, 0.00010098599999999736, 0.00010038899999999934, 0.00010115299999999966, 0.0001015559999999957, 0.00010140299999999991, 0.000101513999999997, 0.0001008060000000019, 0.00010120799999999847, 0.00010037499999999977, 0.00010144399999999915, 0.00010082000000000146, 0.00010113900000000009, 0.00010124999999999718, 0.00010054199999999514, 0.00010105500000000267, 0.00010095799999999822, 0.00010134799999999416, 0.00010125000000000411, 0.00010175000000000461, 0.00010081900000000199, 0.00010094399999999865, 0.00010093099999999855, 0.00010141699999999948, 0.000101513999999997, 0.00010115299999999966, 0.00010097200000000472, 0.00010165200000000069, 9.998700000000277e-05]</msg>
<status status="PASS" starttime="20201029 12:49:22.269" endtime="20201029 12:49:22.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.257" endtime="20201029 12:49:22.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:22.286" endtime="20201029 12:49:22.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.280" endtime="20201029 12:49:22.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.278" endtime="20201029 12:49:22.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.792" endtime="20201029 12:49:22.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.791" endtime="20201029 12:49:22.311"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.334" endtime="20201029 12:49:22.353"></status>
</kw>
<msg timestamp="20201029 12:49:22.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:22.330" endtime="20201029 12:49:22.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:22.356" endtime="20201029 12:49:22.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.363" endtime="20201029 12:49:22.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.323" endtime="20201029 12:49:22.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.317" endtime="20201029 12:49:22.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.386" endtime="20201029 12:49:22.720"></status>
</kw>
<msg timestamp="20201029 12:49:22.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039693417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039795903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:22.383" endtime="20201029 12:49:22.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039693417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039795903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:22.729" endtime="20201029 12:49:22.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.747" endtime="20201029 12:49:22.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.375" endtime="20201029 12:49:22.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.371" endtime="20201029 12:49:22.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:22.764" level="INFO">${RESULT} = [{'diff': 0.00010248599999999886}, {'diff': 0.00010193099999999955}, {'diff': 0.00010177799999999682}, {'diff': 0.00010180499999999648}, {'diff': 0.00010183400000000203}, {'diff': 0.000100875000000000...</msg>
<status status="PASS" starttime="20201029 12:49:22.755" endtime="20201029 12:49:22.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:22.775" level="INFO">${ACCURACY} = {'diff': [0.00010248599999999886, 0.00010193099999999955, 0.00010177799999999682, 0.00010180499999999648, 0.00010183400000000203, 0.00010087500000000027, 0.00010229199999999689, 0.00010245799999999972...</msg>
<status status="PASS" starttime="20201029 12:49:22.766" endtime="20201029 12:49:22.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.785" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:49:22.783" endtime="20201029 12:49:22.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.791" level="INFO">VALUE: [0.00010248599999999886, 0.00010193099999999955, 0.00010177799999999682, 0.00010180499999999648, 0.00010183400000000203, 0.00010087500000000027, 0.00010229199999999689, 0.00010245799999999972, 0.00010194499999999912, 0.00010213899999999415, 0.00010276399999999825, 0.00010191699999999998, 0.00010237500000000177, 0.00010248599999999886, 0.00010177799999999682, 0.00010188900000000084, 0.00010211200000000142, 0.00010212499999999458, 0.00010124999999999718, 0.00010162500000000102, 0.0001020559999999962, 0.00010226399999999775, 0.00010215300000000066, 0.0001012359999999976, 0.00010234799999999517, 0.00010234700000000263, 0.00010126300000000421, 0.00010236200000000167, 0.0001010559999999952, 0.00010262500000000202, 0.00010233300000000306, 0.00010207000000000271, 0.00010177799999999682, 0.00010145799999999872, 0.00010157000000000221, 0.00010227700000000478, 0.00010227800000000425, 0.00010224999999999818, 0.00010159700000000188, 0.00010163900000000059, 0.00010183400000000203, 0.00010204199999999664, 0.00010226400000000468, 0.00010241700000000048, 0.00010279200000000432, 0.00010252799999999757, 0.00010199999999999793, 0.0001019860000000053, 0.00010238900000000134, 0.0001026810000000003]</msg>
<status status="PASS" starttime="20201029 12:49:22.788" endtime="20201029 12:49:22.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.776" endtime="20201029 12:49:22.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:22.803" endtime="20201029 12:49:22.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.799" endtime="20201029 12:49:22.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.796" endtime="20201029 12:49:22.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.313" endtime="20201029 12:49:22.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.312" endtime="20201029 12:49:22.828"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.851" endtime="20201029 12:49:22.870"></status>
</kw>
<msg timestamp="20201029 12:49:22.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:22.848" endtime="20201029 12:49:22.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:22.874" endtime="20201029 12:49:22.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.880" endtime="20201029 12:49:22.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.841" endtime="20201029 12:49:22.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.835" endtime="20201029 12:49:22.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.903" endtime="20201029 12:49:23.236"></status>
</kw>
<msg timestamp="20201029 12:49:23.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039822514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:22.900" endtime="20201029 12:49:23.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039822514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:23.246" endtime="20201029 12:49:23.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.264" endtime="20201029 12:49:23.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.893" endtime="20201029 12:49:23.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.888" endtime="20201029 12:49:23.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:23.281" level="INFO">${RESULT} = [{'diff': 0.00010301400000000543}, {'diff': 0.00010327799999999832}, {'diff': 0.00010315299999999472}, {'diff': 0.0001031940000000009}, {'diff': 0.0001028610000000027}, {'diff': 0.00010297199999999979...</msg>
<status status="PASS" starttime="20201029 12:49:23.273" endtime="20201029 12:49:23.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:23.292" level="INFO">${ACCURACY} = {'diff': [0.00010301400000000543, 0.00010327799999999832, 0.00010315299999999472, 0.0001031940000000009, 0.0001028610000000027, 0.00010297199999999979, 0.0001033339999999966, 0.00010345800000000072, 0...</msg>
<status status="PASS" starttime="20201029 12:49:23.283" endtime="20201029 12:49:23.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.303" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:49:23.301" endtime="20201029 12:49:23.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.308" level="INFO">VALUE: [0.00010301400000000543, 0.00010327799999999832, 0.00010315299999999472, 0.0001031940000000009, 0.0001028610000000027, 0.00010297199999999979, 0.0001033339999999966, 0.00010345800000000072, 0.00010262499999999508, 0.00010311100000000295, 0.00010363900000000259, 0.00010291700000000098, 0.00010345800000000072, 0.00010315300000000166, 0.00010312500000000252, 0.00010294500000000012, 0.00010279199999999739, 0.00010302799999999807, 0.00010307000000000371, 0.00010334700000000363, 0.00010333299999999712, 0.0001038060000000049, 0.00010329099999999841, 0.00010309700000000338, 0.00010297299999999926, 0.00010223600000000554, 0.00010331999999999703, 0.00010318099999999386, 0.00010300000000000586, 0.00010193000000000008, 0.00010294500000000012, 0.00010337499999999583, 0.00010334799999999617, 0.00010308299999999687, 0.0001033480000000031, 0.00010337500000000277, 0.00010302799999999807, 0.00010349999999999943, 0.0001036810000000013, 0.0001038060000000049, 0.00010283299999999662, 0.00010352799999999857, 0.00010354099999999866, 0.00010204199999999664, 0.00010302799999999807, 0.00010354200000000507, 0.00010363900000000259, 0.00010359800000000335, 0.00010372200000000054, 0.000103028000000005]</msg>
<status status="PASS" starttime="20201029 12:49:23.305" endtime="20201029 12:49:23.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.294" endtime="20201029 12:49:23.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:23.321" endtime="20201029 12:49:23.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.317" endtime="20201029 12:49:23.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.314" endtime="20201029 12:49:23.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.831" endtime="20201029 12:49:23.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.829" endtime="20201029 12:49:23.346"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.369" endtime="20201029 12:49:23.388"></status>
</kw>
<msg timestamp="20201029 12:49:23.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:23.366" endtime="20201029 12:49:23.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:23.392" endtime="20201029 12:49:23.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.398" endtime="20201029 12:49:23.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.358" endtime="20201029 12:49:23.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.353" endtime="20201029 12:49:23.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.421" endtime="20201029 12:49:23.755"></status>
</kw>
<msg timestamp="20201029 12:49:23.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039761875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039866333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:23.418" endtime="20201029 12:49:23.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039761875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039866333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:23.764" endtime="20201029 12:49:23.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.782" endtime="20201029 12:49:23.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.411" endtime="20201029 12:49:23.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.406" endtime="20201029 12:49:23.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:23.799" level="INFO">${RESULT} = [{'diff': 0.00010445799999999478}, {'diff': 0.00010448600000000086}, {'diff': 0.00010390299999999547}, {'diff': 0.0001045559999999987}, {'diff': 0.00010332000000000396}, {'diff': 0.0001042080000000014...</msg>
<status status="PASS" starttime="20201029 12:49:23.791" endtime="20201029 12:49:23.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:23.808" level="INFO">${ACCURACY} = {'diff': [0.00010445799999999478, 0.00010448600000000086, 0.00010390299999999547, 0.0001045559999999987, 0.00010332000000000396, 0.00010420800000000147, 0.00010455499999999923, 0.0001042360000000006, ...</msg>
<status status="PASS" starttime="20201029 12:49:23.801" endtime="20201029 12:49:23.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.819" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:49:23.817" endtime="20201029 12:49:23.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.824" level="INFO">VALUE: [0.00010445799999999478, 0.00010448600000000086, 0.00010390299999999547, 0.0001045559999999987, 0.00010332000000000396, 0.00010420800000000147, 0.00010455499999999923, 0.0001042360000000006, 0.00010473599999999417, 0.00010402799999999907, 0.00010475000000000068, 0.00010420900000000094, 0.00010434699999999769, 0.00010411099999999701, 0.00010384700000000413, 0.00010463900000000359, 0.00010422200000000104, 0.00010366700000000173, 0.00010393100000000155, 0.00010472200000000154, 0.00010411100000000395, 0.00010405499999999873, 0.00010397300000000026, 0.00010465300000000316, 0.00010293000000000108, 0.00010420799999999453, 0.00010463799999999718, 0.0001038480000000036, 0.00010466699999999579, 0.00010387499999999633, 0.00010416699999999529, 0.00010331900000000449, 0.00010397200000000079, 0.00010440299999999597, 0.00010422200000000104, 0.00010452799999999957, 0.00010444500000000162, 0.00010327799999999832, 0.00010468000000000283, 0.00010448600000000086, 0.00010455600000000564, 0.00010445800000000172, 0.00010476400000000025, 0.00010441700000000248, 0.00010452700000000009, 0.00010463900000000359, 0.00010381899999999805, 0.00010445800000000172, 0.00010486099999999776, 0.00010431999999999803]</msg>
<status status="PASS" starttime="20201029 12:49:23.821" endtime="20201029 12:49:23.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.810" endtime="20201029 12:49:23.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:23.837" endtime="20201029 12:49:23.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.833" endtime="20201029 12:49:23.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.830" endtime="20201029 12:49:23.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.348" endtime="20201029 12:49:23.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.347" endtime="20201029 12:49:23.862"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.885" endtime="20201029 12:49:23.906"></status>
</kw>
<msg timestamp="20201029 12:49:23.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:23.882" endtime="20201029 12:49:23.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:23.909" endtime="20201029 12:49:23.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.915" endtime="20201029 12:49:23.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.874" endtime="20201029 12:49:23.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.868" endtime="20201029 12:49:23.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.939" endtime="20201029 12:49:24.273"></status>
</kw>
<msg timestamp="20201029 12:49:24.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041326417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041431806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:23.936" endtime="20201029 12:49:24.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041326417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041431806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:24.283" endtime="20201029 12:49:24.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.301" endtime="20201029 12:49:24.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.928" endtime="20201029 12:49:24.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.924" endtime="20201029 12:49:24.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:24.318" level="INFO">${RESULT} = [{'diff': 0.00010538900000000434}, {'diff': 0.00010552800000000057}, {'diff': 0.0001053889999999974}, {'diff': 0.00010497199999999485}, {'diff': 0.00010504100000000016}, {'diff': 0.0001050969999999984...</msg>
<status status="PASS" starttime="20201029 12:49:24.310" endtime="20201029 12:49:24.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:24.327" level="INFO">${ACCURACY} = {'diff': [0.00010538900000000434, 0.00010552800000000057, 0.0001053889999999974, 0.00010497199999999485, 0.00010504100000000016, 0.00010509699999999844, 0.00010527800000000032, 0.00010498600000000136,...</msg>
<status status="PASS" starttime="20201029 12:49:24.320" endtime="20201029 12:49:24.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.338" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:49:24.336" endtime="20201029 12:49:24.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.344" level="INFO">VALUE: [0.00010538900000000434, 0.00010552800000000057, 0.0001053889999999974, 0.00010497199999999485, 0.00010504100000000016, 0.00010509699999999844, 0.00010527800000000032, 0.00010498600000000136, 0.00010427799999999932, 0.00010552700000000109, 0.00010577800000000082, 0.00010450000000000043, 0.00010543099999999611, 0.00010531899999999955, 0.00010505499999999973, 0.00010516699999999629, 0.00010544399999999621, 0.00010550000000000143, 0.000105514000000001, 0.00010547200000000229, 0.00010587500000000527, 0.00010504199999999964, 0.00010398600000000036, 0.00010463900000000359, 0.00010487500000000427, 0.00010556999999999928, 0.0001053480000000051, 0.0001041810000000018, 0.0001051810000000028, 0.0001053889999999974, 0.00010465199999999675, 0.00010563899999999765, 0.00010520900000000194, 0.00010541699999999654, 0.0001052360000000016, 0.00010512499999999758, 0.00010520900000000194, 0.0001056810000000033, 0.00010495799999999528, 0.0001043339999999976, 0.00010481999999999853, 0.0001050559999999992, 0.00010537499999999783, 0.00010565199999999775, 0.00010520800000000247, 0.00010505499999999973, 0.0001052360000000016, 0.00010522200000000204, 0.00010513799999999768, 0.00010550000000000143]</msg>
<status status="PASS" starttime="20201029 12:49:24.341" endtime="20201029 12:49:24.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.329" endtime="20201029 12:49:24.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:24.358" endtime="20201029 12:49:24.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.352" endtime="20201029 12:49:24.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.350" endtime="20201029 12:49:24.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.864" endtime="20201029 12:49:24.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.863" endtime="20201029 12:49:24.383"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.406" endtime="20201029 12:49:24.425"></status>
</kw>
<msg timestamp="20201029 12:49:24.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:24.403" endtime="20201029 12:49:24.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:24.429" endtime="20201029 12:49:24.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.435" endtime="20201029 12:49:24.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.395" endtime="20201029 12:49:24.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.390" endtime="20201029 12:49:24.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.461" endtime="20201029 12:49:24.795"></status>
</kw>
<msg timestamp="20201029 12:49:24.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039643361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039749875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:24.457" endtime="20201029 12:49:24.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039643361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039749875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:24.805" endtime="20201029 12:49:24.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.823" endtime="20201029 12:49:24.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.450" endtime="20201029 12:49:24.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.445" endtime="20201029 12:49:24.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:24.840" level="INFO">${RESULT} = [{'diff': 0.00010651399999999506}, {'diff': 0.00010604200000000064}, {'diff': 0.00010570900000000244}, {'diff': 0.00010670900000000344}, {'diff': 0.00010641599999999807}, {'diff': 0.000106735999999996...</msg>
<status status="PASS" starttime="20201029 12:49:24.831" endtime="20201029 12:49:24.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:24.851" level="INFO">${ACCURACY} = {'diff': [0.00010651399999999506, 0.00010604200000000064, 0.00010570900000000244, 0.00010670900000000344, 0.00010641599999999807, 0.00010673599999999617, 0.00010609699999999944, 0.00010655500000000123...</msg>
<status status="PASS" starttime="20201029 12:49:24.842" endtime="20201029 12:49:24.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.863" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:49:24.860" endtime="20201029 12:49:24.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.868" level="INFO">VALUE: [0.00010651399999999506, 0.00010604200000000064, 0.00010570900000000244, 0.00010670900000000344, 0.00010641599999999807, 0.00010673599999999617, 0.00010609699999999944, 0.00010655500000000123, 0.00010552799999999363, 0.00010606999999999978, 0.0001065690000000008, 0.0001065690000000008, 0.00010516600000000376, 0.00010667999999999789, 0.00010651399999999506, 0.00010549999999999449, 0.00010657000000000028, 0.00010641699999999754, 0.00010638799999999893, 0.00010647199999999635, 0.0001067769999999954, 0.00010612499999999858, 0.00010670800000000397, 0.00010670799999999703, 0.00010608299999999987, 0.00010576400000000125, 0.00010630600000000046, 0.00010672200000000354, 0.000106514000000002, 0.00010611099999999901, 0.00010662499999999908, 0.00010583299999999962, 0.00010641700000000448, 0.00010600000000000193, 0.00010652799999999463, 0.00010634699999999969, 0.00010615300000000466, 0.00010593100000000355, 0.00010620900000000294, 0.00010663900000000559, 0.0001067219999999966, 0.00010600000000000193, 0.00010500000000000093, 0.00010520799999999553, 0.00010673599999999617, 0.00010612499999999858, 0.00010679100000000191, 0.00010616699999999729, 0.00010602800000000107, 0.00010666599999999832]</msg>
<status status="PASS" starttime="20201029 12:49:24.865" endtime="20201029 12:49:24.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.853" endtime="20201029 12:49:24.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:24.881" endtime="20201029 12:49:24.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.876" endtime="20201029 12:49:24.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.874" endtime="20201029 12:49:24.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.385" endtime="20201029 12:49:24.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.384" endtime="20201029 12:49:24.906"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.929" endtime="20201029 12:49:24.948"></status>
</kw>
<msg timestamp="20201029 12:49:24.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:24.925" endtime="20201029 12:49:24.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:24.952" endtime="20201029 12:49:24.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.958" endtime="20201029 12:49:24.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.918" endtime="20201029 12:49:24.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.912" endtime="20201029 12:49:24.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.982" endtime="20201029 12:49:25.315"></status>
</kw>
<msg timestamp="20201029 12:49:25.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039800222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039907208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:24.978" endtime="20201029 12:49:25.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039800222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039907208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:25.324" endtime="20201029 12:49:25.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.343" endtime="20201029 12:49:25.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.971" endtime="20201029 12:49:25.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.966" endtime="20201029 12:49:25.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:25.360" level="INFO">${RESULT} = [{'diff': 0.00010698599999999642}, {'diff': 0.00010775000000000368}, {'diff': 0.00010745900000000419}, {'diff': 0.00010734700000000069}, {'diff': 0.0001075549999999953}, {'diff': 0.0001077779999999958...</msg>
<status status="PASS" starttime="20201029 12:49:25.351" endtime="20201029 12:49:25.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:25.375" level="INFO">${ACCURACY} = {'diff': [0.00010698599999999642, 0.00010775000000000368, 0.00010745900000000419, 0.00010734700000000069, 0.0001075549999999953, 0.00010777799999999588, 0.00010695799999999728, 0.0001067360000000031, ...</msg>
<status status="PASS" starttime="20201029 12:49:25.362" endtime="20201029 12:49:25.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.386" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:49:25.384" endtime="20201029 12:49:25.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.391" level="INFO">VALUE: [0.00010698599999999642, 0.00010775000000000368, 0.00010745900000000419, 0.00010734700000000069, 0.0001075549999999953, 0.00010777799999999588, 0.00010695799999999728, 0.0001067360000000031, 0.00010751399999999606, 0.00010779200000000239, 0.00010734700000000069, 0.00010767999999999889, 0.00010769499999999793, 0.00010692999999999814, 0.00010770799999999803, 0.00010716699999999829, 0.0001063889999999984, 0.00010708299999999393, 0.0001075549999999953, 0.00010699999999999599, 0.00010769399999999846, 0.00010747200000000429, 0.00010744499999999768, 0.00010704100000000216, 0.00010748599999999692, 0.0001073889999999994, 0.0001070560000000012, 0.00010702800000000207, 0.00010748599999999692, 0.00010658399999999985, 0.00010743100000000505, 0.00010762500000000008, 0.00010695800000000422, 0.00010773599999999717, 0.00010737499999999983, 0.00010672300000000301, 0.00010750000000000343, 0.00010730499999999504, 0.0001067769999999954, 0.00010620799999999653, 0.0001071940000000049, 0.00010712499999999958, 0.00010736099999999332, 0.0001060560000000002, 0.00010750000000000343, 0.00010786100000000076, 0.00010694400000000465, 0.00010768099999999836, 0.00010736100000000026, 0.00010733300000000112]</msg>
<status status="PASS" starttime="20201029 12:49:25.388" endtime="20201029 12:49:25.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.377" endtime="20201029 12:49:25.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:25.404" endtime="20201029 12:49:25.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.400" endtime="20201029 12:49:25.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.397" endtime="20201029 12:49:25.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.908" endtime="20201029 12:49:25.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.907" endtime="20201029 12:49:25.429"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.451" endtime="20201029 12:49:25.471"></status>
</kw>
<msg timestamp="20201029 12:49:25.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:25.448" endtime="20201029 12:49:25.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:25.474" endtime="20201029 12:49:25.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.481" endtime="20201029 12:49:25.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.441" endtime="20201029 12:49:25.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.435" endtime="20201029 12:49:25.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.504" endtime="20201029 12:49:25.839"></status>
</kw>
<msg timestamp="20201029 12:49:25.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039513778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039622097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:25.500" endtime="20201029 12:49:25.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039513778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039622097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:25.848" endtime="20201029 12:49:25.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.867" endtime="20201029 12:49:25.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.493" endtime="20201029 12:49:25.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.489" endtime="20201029 12:49:25.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:25.884" level="INFO">${RESULT} = [{'diff': 0.00010831900000000255}, {'diff': 0.00010755500000000223}, {'diff': 0.00010829200000000289}, {'diff': 0.00010743099999999811}, {'diff': 0.00010795899999999775}, {'diff': 0.000108263999999996...</msg>
<status status="PASS" starttime="20201029 12:49:25.875" endtime="20201029 12:49:25.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:25.893" level="INFO">${ACCURACY} = {'diff': [0.00010831900000000255, 0.00010755500000000223, 0.00010829200000000289, 0.00010743099999999811, 0.00010795899999999775, 0.00010826399999999681, 0.00010820799999999853, 0.00010812500000000058...</msg>
<status status="PASS" starttime="20201029 12:49:25.886" endtime="20201029 12:49:25.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.904" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:49:25.901" endtime="20201029 12:49:25.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.909" level="INFO">VALUE: [0.00010831900000000255, 0.00010755500000000223, 0.00010829200000000289, 0.00010743099999999811, 0.00010795899999999775, 0.00010826399999999681, 0.00010820799999999853, 0.00010812500000000058, 0.0001078889999999999, 0.00010861100000000151, 0.00010827800000000332, 0.0001080140000000035, 0.00010832000000000203, 0.00010831900000000255, 0.00010811100000000101, 0.00010791699999999904, 0.00010851399999999706, 0.00010769500000000487, 0.00010816599999999982, 0.00010717999999999839, 0.00010798600000000436, 0.00010813900000000015, 0.00010883399999999516, 0.00010779199999999545, 0.00010829099999999647, 0.00010831900000000255, 0.00010819499999999843, 0.00010811199999999355, 0.00010726400000000275, 0.0001083340000000016, 0.00010813900000000015, 0.00010851399999999706, 0.0001073340000000006, 0.00010825000000000418, 0.00010887499999999439, 0.00010809700000000144, 0.0001070419999999947, 0.00010826399999999681, 0.00010875000000000468, 0.00010782000000000153, 0.00010830600000000246, 0.00010863900000000065, 0.00010845899999999825, 0.00010820799999999853, 0.00010799999999999699, 0.00010793099999999861, 0.00010776399999999631, 0.00010827800000000332, 0.0001080140000000035, 0.00010793099999999861]</msg>
<status status="PASS" starttime="20201029 12:49:25.906" endtime="20201029 12:49:25.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.894" endtime="20201029 12:49:25.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:25.921" endtime="20201029 12:49:25.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.917" endtime="20201029 12:49:25.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.915" endtime="20201029 12:49:25.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.431" endtime="20201029 12:49:25.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.430" endtime="20201029 12:49:25.946"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.969" endtime="20201029 12:49:25.990"></status>
</kw>
<msg timestamp="20201029 12:49:25.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:25.966" endtime="20201029 12:49:25.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:25.994" endtime="20201029 12:49:25.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.000" endtime="20201029 12:49:26.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.959" endtime="20201029 12:49:26.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.953" endtime="20201029 12:49:26.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.023" endtime="20201029 12:49:26.356"></status>
</kw>
<msg timestamp="20201029 12:49:26.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041179597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041288486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:26.020" endtime="20201029 12:49:26.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041179597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041288486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:26.366" endtime="20201029 12:49:26.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.384" endtime="20201029 12:49:26.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.013" endtime="20201029 12:49:26.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.008" endtime="20201029 12:49:26.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:26.401" level="INFO">${RESULT} = [{'diff': 0.0001088890000000009}, {'diff': 0.00010886100000000176}, {'diff': 0.00010899999999999799}, {'diff': 0.0001092219999999991}, {'diff': 0.00010901299999999808}, {'diff': 0.00010845900000000519...</msg>
<status status="PASS" starttime="20201029 12:49:26.392" endtime="20201029 12:49:26.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:26.410" level="INFO">${ACCURACY} = {'diff': [0.0001088890000000009, 0.00010886100000000176, 0.00010899999999999799, 0.0001092219999999991, 0.00010901299999999808, 0.00010845900000000519, 0.00010895899999999875, 0.00010948599999999892, ...</msg>
<status status="PASS" starttime="20201029 12:49:26.403" endtime="20201029 12:49:26.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.421" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:49:26.419" endtime="20201029 12:49:26.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.426" level="INFO">VALUE: [0.0001088890000000009, 0.00010886100000000176, 0.00010899999999999799, 0.0001092219999999991, 0.00010901299999999808, 0.00010845900000000519, 0.00010895899999999875, 0.00010948599999999892, 0.00010937500000000183, 0.00010793099999999861, 0.00010970800000000003, 0.00010923599999999867, 0.00010887500000000133, 0.00010894399999999971, 0.00010844400000000615, 0.00010893099999999961, 0.0001088340000000021, 0.00010808300000000187, 0.00010894499999999918, 0.00010894399999999971, 0.00010941600000000107, 0.00010934700000000269, 0.00010962500000000208, 0.00010940199999999456, 0.00010858300000000237, 0.00010861100000000151, 0.0001090560000000032, 0.00010966700000000079, 0.00010895899999999875, 0.00010826399999999681, 0.00010969400000000046, 0.00010977799999999788, 0.00010930500000000398, 0.00010881900000000305, 0.00010934700000000269, 0.00010858300000000237, 0.00010837500000000083, 0.0001095690000000038, 0.00010912499999999464, 0.00010941600000000107, 0.00010912500000000158, 0.00010890300000000047, 0.00010916700000000029, 0.0001090690000000033, 0.00010845900000000519, 0.00010966700000000079, 0.00010926400000000475, 0.00010845899999999825, 0.00010891700000000004, 0.00010886200000000124]</msg>
<status status="PASS" starttime="20201029 12:49:26.423" endtime="20201029 12:49:26.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.412" endtime="20201029 12:49:26.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:26.440" endtime="20201029 12:49:26.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.435" endtime="20201029 12:49:26.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.432" endtime="20201029 12:49:26.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.949" endtime="20201029 12:49:26.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.947" endtime="20201029 12:49:26.466"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.488" endtime="20201029 12:49:26.508"></status>
</kw>
<msg timestamp="20201029 12:49:26.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:26.485" endtime="20201029 12:49:26.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:26.511" endtime="20201029 12:49:26.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.518" endtime="20201029 12:49:26.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.478" endtime="20201029 12:49:26.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.472" endtime="20201029 12:49:26.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.541" endtime="20201029 12:49:26.878"></status>
</kw>
<msg timestamp="20201029 12:49:26.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039795903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039906556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:26.538" endtime="20201029 12:49:26.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039795903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039906556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:26.887" endtime="20201029 12:49:26.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.905" endtime="20201029 12:49:26.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.531" endtime="20201029 12:49:26.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.526" endtime="20201029 12:49:26.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:26.923" level="INFO">${RESULT} = [{'diff': 0.00011065300000000222}, {'diff': 0.00011047200000000035}, {'diff': 0.00011002800000000507}, {'diff': 0.00010887500000000133}, {'diff': 0.00011066700000000179}, {'diff': 0.000110068999999997...</msg>
<status status="PASS" starttime="20201029 12:49:26.914" endtime="20201029 12:49:26.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:26.933" level="INFO">${ACCURACY} = {'diff': [0.00011065300000000222, 0.00011047200000000035, 0.00011002800000000507, 0.00010887500000000133, 0.00011066700000000179, 0.00011006899999999736, 0.00010920799999999953, 0.0001102220000000001,...</msg>
<status status="PASS" starttime="20201029 12:49:26.925" endtime="20201029 12:49:26.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.944" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:49:26.942" endtime="20201029 12:49:26.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.949" level="INFO">VALUE: [0.00011065300000000222, 0.00011047200000000035, 0.00011002800000000507, 0.00010887500000000133, 0.00011066700000000179, 0.00011006899999999736, 0.00010920799999999953, 0.0001102220000000001, 0.00011066700000000179, 0.00010990300000000147, 0.00011051399999999906, 0.00010980599999999702, 0.00011073600000000017, 0.00011065199999999581, 0.00011015199999999531, 0.00011005500000000473, 0.00010983299999999668, 0.00011049999999999949, 0.00010934699999999575, 0.00011063900000000265, 0.0001103340000000036, 0.0001100549999999978, 0.00010902799999999713, 0.00011015300000000172, 0.00010951399999999806, 0.00011079099999999897, 0.00011052799999999863, 0.00011002799999999813, 0.00010987500000000233, 0.000110209, 0.00011030599999999752, 0.00011069399999999452, 0.00011029199999999795, 0.00011055599999999777, 0.00011019400000000096, 0.00010991700000000104, 0.00010999999999999899, 0.00010923599999999867, 0.00011023599999999967, 0.00011034699999999675, 0.00010984700000000319, 0.00010995800000000028, 0.000110514000000006, 0.00010983299999999668, 0.00011016599999999488, 0.00010994400000000071, 0.00010981899999999711, 0.00011057000000000428, 0.00011044399999999427, 0.00011043100000000111]</msg>
<status status="PASS" starttime="20201029 12:49:26.946" endtime="20201029 12:49:26.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.935" endtime="20201029 12:49:26.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:26.962" endtime="20201029 12:49:26.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.957" endtime="20201029 12:49:26.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.955" endtime="20201029 12:49:26.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.468" endtime="20201029 12:49:26.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.466" endtime="20201029 12:49:26.987"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.010" endtime="20201029 12:49:27.030"></status>
</kw>
<msg timestamp="20201029 12:49:27.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:27.007" endtime="20201029 12:49:27.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:27.033" endtime="20201029 12:49:27.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.040" endtime="20201029 12:49:27.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.999" endtime="20201029 12:49:27.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.994" endtime="20201029 12:49:27.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.063" endtime="20201029 12:49:27.396"></status>
</kw>
<msg timestamp="20201029 12:49:27.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040510583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040622097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:27.060" endtime="20201029 12:49:27.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040510583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040622097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:27.405" endtime="20201029 12:49:27.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.424" endtime="20201029 12:49:27.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.053" endtime="20201029 12:49:27.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.048" endtime="20201029 12:49:27.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:27.441" level="INFO">${RESULT} = [{'diff': 0.00011151400000000006}, {'diff': 0.00011083300000000462}, {'diff': 0.00011102799999999913}, {'diff': 0.00011083299999999768}, {'diff': 0.00011145800000000178}, {'diff': 0.000110403000000001...</msg>
<status status="PASS" starttime="20201029 12:49:27.432" endtime="20201029 12:49:27.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:27.452" level="INFO">${ACCURACY} = {'diff': [0.00011151400000000006, 0.00011083300000000462, 0.00011102799999999913, 0.00011083299999999768, 0.00011145800000000178, 0.00011040300000000197, 0.00011093100000000161, 0.00011152799999999963...</msg>
<status status="PASS" starttime="20201029 12:49:27.443" endtime="20201029 12:49:27.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.463" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:49:27.461" endtime="20201029 12:49:27.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.468" level="INFO">VALUE: [0.00011151400000000006, 0.00011083300000000462, 0.00011102799999999913, 0.00011083299999999768, 0.00011145800000000178, 0.00011040300000000197, 0.00011093100000000161, 0.00011152799999999963, 0.00011183300000000562, 0.000111209000000001, 0.00011122300000000057, 0.00010990300000000147, 0.00011161100000000451, 0.0001100140000000055, 0.00011094500000000118, 0.0001107220000000006, 0.00011145800000000178, 0.00011095800000000128, 0.00011162499999999714, 0.00011105599999999827, 0.00011156999999999834, 0.00011029099999999847, 0.00011008400000000335, 0.00010997199999999985, 0.00011094400000000171, 0.00011152799999999963, 0.00011091599999999563, 0.00011099999999999999, 0.00011151400000000006, 0.00011158299999999843, 0.00011166700000000279, 0.00011143100000000211, 0.00011167999999999595, 0.00011136099999999732, 0.0001117220000000016, 0.00011084699999999725, 0.00011081899999999811, 0.00011133299999999818, 0.00011131899999999861, 0.00011080499999999854, 0.00011161099999999757, 0.00011158399999999791, 0.00011169500000000193, 0.00011132000000000503, 0.00011120800000000153, 0.00011091600000000257, 0.00011104099999999922, 0.00011079199999999845, 0.00011056899999999786, 0.00011161099999999757]</msg>
<status status="PASS" starttime="20201029 12:49:27.465" endtime="20201029 12:49:27.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.454" endtime="20201029 12:49:27.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:27.481" endtime="20201029 12:49:27.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.476" endtime="20201029 12:49:27.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.474" endtime="20201029 12:49:27.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.989" endtime="20201029 12:49:27.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.988" endtime="20201029 12:49:27.506"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.528" endtime="20201029 12:49:27.548"></status>
</kw>
<msg timestamp="20201029 12:49:27.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:27.525" endtime="20201029 12:49:27.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:27.552" endtime="20201029 12:49:27.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.558" endtime="20201029 12:49:27.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.518" endtime="20201029 12:49:27.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.512" endtime="20201029 12:49:27.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.583" endtime="20201029 12:49:27.918"></status>
</kw>
<msg timestamp="20201029 12:49:27.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039780306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039892542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:27.578" endtime="20201029 12:49:27.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039780306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039892542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:27.928" endtime="20201029 12:49:27.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.946" endtime="20201029 12:49:27.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.571" endtime="20201029 12:49:27.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.566" endtime="20201029 12:49:27.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:27.963" level="INFO">${RESULT} = [{'diff': 0.00011223600000000167}, {'diff': 0.0001125550000000003}, {'diff': 0.00011273600000000217}, {'diff': 0.000112209000000002}, {'diff': 0.00011227800000000038}, {'diff': 0.00011216700000000329}...</msg>
<status status="PASS" starttime="20201029 12:49:27.954" endtime="20201029 12:49:27.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:27.972" level="INFO">${ACCURACY} = {'diff': [0.00011223600000000167, 0.0001125550000000003, 0.00011273600000000217, 0.000112209000000002, 0.00011227800000000038, 0.00011216700000000329, 0.00011223700000000114, 0.00011276400000000131, 0...</msg>
<status status="PASS" starttime="20201029 12:49:27.965" endtime="20201029 12:49:27.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.983" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:49:27.981" endtime="20201029 12:49:27.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.988" level="INFO">VALUE: [0.00011223600000000167, 0.0001125550000000003, 0.00011273600000000217, 0.000112209000000002, 0.00011227800000000038, 0.00011216700000000329, 0.00011223700000000114, 0.00011276400000000131, 0.00011284699999999925, 0.00011243000000000364, 0.00011205599999999927, 0.00011200000000000099, 0.00011248600000000192, 0.00011201400000000056, 0.00011233299999999918, 0.00011094399999999477, 0.00011191700000000304, 0.0001123749999999979, 0.00011270899999999556, 0.00011277800000000088, 0.00011204100000000022, 0.00011266699999999685, 0.0001124169999999966, 0.00011218100000000286, 0.0001123749999999979, 0.0001119169999999961, 0.0001127090000000025, 0.00011247200000000235, 0.00011240300000000397, 0.0001122220000000021, 0.00011269399999999652, 0.00011212499999999764, 0.00011238899999999746, 0.0001127499999999948, 0.00011223599999999473, 0.00011162500000000408, 0.00011194399999999577, 0.00011205599999999927, 0.00011234700000000569, 0.00011234700000000569, 0.00011240300000000397, 0.00011123600000000067, 0.00011194400000000271, 0.00011223600000000167, 0.00011213800000000468, 0.00011258299999999943, 0.00011241600000000407, 0.00011240299999999703, 0.00011261099999999857, 0.0001112220000000011]</msg>
<status status="PASS" starttime="20201029 12:49:27.985" endtime="20201029 12:49:27.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.974" endtime="20201029 12:49:27.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:28.006" endtime="20201029 12:49:28.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.002" endtime="20201029 12:49:28.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.999" endtime="20201029 12:49:28.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.508" endtime="20201029 12:49:28.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.507" endtime="20201029 12:49:28.031"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.054" endtime="20201029 12:49:28.075"></status>
</kw>
<msg timestamp="20201029 12:49:28.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:28.050" endtime="20201029 12:49:28.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:28.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:28.078" endtime="20201029 12:49:28.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.085" endtime="20201029 12:49:28.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.043" endtime="20201029 12:49:28.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.037" endtime="20201029 12:49:28.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.108" endtime="20201029 12:49:28.442"></status>
</kw>
<msg timestamp="20201029 12:49:28.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041236361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041349944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:28.105" endtime="20201029 12:49:28.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:28.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041236361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041349944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:28.451" endtime="20201029 12:49:28.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.470" endtime="20201029 12:49:28.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.097" endtime="20201029 12:49:28.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.093" endtime="20201029 12:49:28.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:28.487" level="INFO">${RESULT} = [{'diff': 0.00011358300000000043}, {'diff': 0.00011376400000000231}, {'diff': 0.00011247300000000182}, {'diff': 0.00011362499999999914}, {'diff': 0.00011301300000000208}, {'diff': 0.000112999999999995...</msg>
<status status="PASS" starttime="20201029 12:49:28.478" endtime="20201029 12:49:28.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:28.496" level="INFO">${ACCURACY} = {'diff': [0.00011358300000000043, 0.00011376400000000231, 0.00011247300000000182, 0.00011362499999999914, 0.00011301300000000208, 0.00011299999999999505, 0.0001132499999999953, 0.00011305600000000027,...</msg>
<status status="PASS" starttime="20201029 12:49:28.489" endtime="20201029 12:49:28.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:28.507" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:49:28.505" endtime="20201029 12:49:28.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:28.512" level="INFO">VALUE: [0.00011358300000000043, 0.00011376400000000231, 0.00011247300000000182, 0.00011362499999999914, 0.00011301300000000208, 0.00011299999999999505, 0.0001132499999999953, 0.00011305600000000027, 0.00011338899999999846, 0.00011316599999999788, 0.00011306999999999984, 0.00011327800000000138, 0.00011379200000000145, 0.00011291600000000457, 0.00011220800000000253, 0.00011368099999999742, 0.00011337500000000583, 0.00011332000000000009, 0.00011379200000000145, 0.00011305600000000027, 0.00011293099999999667, 0.00011341700000000454, 0.00011231899999999961, 0.000113597, 0.00011380500000000154, 0.00011383300000000068, 0.00011325000000000224, 0.0001137499999999958, 0.00011326400000000181, 0.00011357000000000034, 0.00011306999999999984, 0.00011373600000000317, 0.00011290299999999753, 0.00011347199999999641, 0.0001135420000000012, 0.00011330500000000104, 0.00011334699999999975, 0.00011288899999999796, 0.00011348700000000239, 0.00011230500000000004, 0.00011283399999999916, 0.00011312499999999864, 0.0001137090000000035, 0.00011338899999999846, 0.00011294399999999677, 0.00011247200000000235, 0.00011370799999999709, 0.00011370799999999709, 0.0001123749999999979, 0.00011294399999999677]</msg>
<status status="PASS" starttime="20201029 12:49:28.509" endtime="20201029 12:49:28.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.498" endtime="20201029 12:49:28.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:28.526" endtime="20201029 12:49:28.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.520" endtime="20201029 12:49:28.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.518" endtime="20201029 12:49:28.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.033" endtime="20201029 12:49:28.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.032" endtime="20201029 12:49:28.551"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.574" endtime="20201029 12:49:28.594"></status>
</kw>
<msg timestamp="20201029 12:49:28.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:28.571" endtime="20201029 12:49:28.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:28.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:28.597" endtime="20201029 12:49:28.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.604" endtime="20201029 12:49:28.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.564" endtime="20201029 12:49:28.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.558" endtime="20201029 12:49:28.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.627" endtime="20201029 12:49:28.961"></status>
</kw>
<msg timestamp="20201029 12:49:28.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039900639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040015361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:28.624" endtime="20201029 12:49:28.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:28.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039900639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040015361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:28.970" endtime="20201029 12:49:28.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.989" endtime="20201029 12:49:28.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.617" endtime="20201029 12:49:28.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.612" endtime="20201029 12:49:28.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:29.006" level="INFO">${RESULT} = [{'diff': 0.00011472199999999766}, {'diff': 0.0001138749999999994}, {'diff': 0.00011416699999999835}, {'diff': 0.00011477800000000288}, {'diff': 0.00011398600000000342}, {'diff': 0.0001142910000000024...</msg>
<status status="PASS" starttime="20201029 12:49:28.997" endtime="20201029 12:49:29.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:29.016" level="INFO">${ACCURACY} = {'diff': [0.00011472199999999766, 0.0001138749999999994, 0.00011416699999999835, 0.00011477800000000288, 0.00011398600000000342, 0.00011429100000000247, 0.00011449999999999655, 0.00011402800000000213,...</msg>
<status status="PASS" starttime="20201029 12:49:29.008" endtime="20201029 12:49:29.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.027" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:49:29.025" endtime="20201029 12:49:29.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.033" level="INFO">VALUE: [0.00011472199999999766, 0.0001138749999999994, 0.00011416699999999835, 0.00011477800000000288, 0.00011398600000000342, 0.00011429100000000247, 0.00011449999999999655, 0.00011402800000000213, 0.00011427799999999544, 0.0001147499999999968, 0.0001135420000000012, 0.0001144169999999986, 0.00011462500000000014, 0.00011347299999999588, 0.00011463899999999971, 0.00011405600000000127, 0.00011399999999999605, 0.00011330599999999358, 0.00011415299999999878, 0.00011463899999999971, 0.00011441599999999913, 0.00011445799999999784, 0.00011445799999999784, 0.00011429200000000195, 0.00011423600000000367, 0.00011476400000000331, 0.00011477799999999594, 0.00011332000000000009, 0.00011456900000000186, 0.00011466700000000579, 0.00011481999999999465, 0.00011313899999999821, 0.00011395899999999681, 0.00011336099999999932, 0.00011404100000000222, 0.00011413899999999921, 0.00011334699999999975, 0.00011320899999999606, 0.00011426399999999587, 0.00011468099999999842, 0.00011427800000000238, 0.00011458400000000091, 0.00011479200000000245, 0.00011362499999999914, 0.00011486100000000082, 0.00011452800000000263, 0.00011436100000000032, 0.00011431899999999467, 0.00011484700000000125, 0.00011400000000000299]</msg>
<status status="PASS" starttime="20201029 12:49:29.030" endtime="20201029 12:49:29.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.018" endtime="20201029 12:49:29.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:29.045" endtime="20201029 12:49:29.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.041" endtime="20201029 12:49:29.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.038" endtime="20201029 12:49:29.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.553" endtime="20201029 12:49:29.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.552" endtime="20201029 12:49:29.070"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.093" endtime="20201029 12:49:29.113"></status>
</kw>
<msg timestamp="20201029 12:49:29.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:29.090" endtime="20201029 12:49:29.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:29.116" endtime="20201029 12:49:29.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.123" endtime="20201029 12:49:29.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.083" endtime="20201029 12:49:29.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.077" endtime="20201029 12:49:29.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.146" endtime="20201029 12:49:29.482"></status>
</kw>
<msg timestamp="20201029 12:49:29.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039702014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039817694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:29.143" endtime="20201029 12:49:29.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039702014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039817694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:29.492" endtime="20201029 12:49:29.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.510" endtime="20201029 12:49:29.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.135" endtime="20201029 12:49:29.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.131" endtime="20201029 12:49:29.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:29.527" level="INFO">${RESULT} = [{'diff': 0.00011567999999999995}, {'diff': 0.00011563800000000124}, {'diff': 0.00011561200000000105}, {'diff': 0.00011536099999999438}, {'diff': 0.00011548599999999798}, {'diff': 0.000115846999999995...</msg>
<status status="PASS" starttime="20201029 12:49:29.518" endtime="20201029 12:49:29.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:29.538" level="INFO">${ACCURACY} = {'diff': [0.00011567999999999995, 0.00011563800000000124, 0.00011561200000000105, 0.00011536099999999438, 0.00011548599999999798, 0.00011584699999999531, 0.0001150970000000015, 0.00011536100000000132,...</msg>
<status status="PASS" starttime="20201029 12:49:29.529" endtime="20201029 12:49:29.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.549" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:49:29.546" endtime="20201029 12:49:29.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.554" level="INFO">VALUE: [0.00011567999999999995, 0.00011563800000000124, 0.00011561200000000105, 0.00011536099999999438, 0.00011548599999999798, 0.00011584699999999531, 0.0001150970000000015, 0.00011536100000000132, 0.00011462500000000014, 0.00011501399999999662, 0.00011507000000000184, 0.00011561100000000157, 0.00011506900000000236, 0.00011584700000000225, 0.00011529200000000295, 0.00011484700000000125, 0.00011500000000000399, 0.00011526400000000381, 0.00011573599999999823, 0.00011551399999999712, 0.00011572199999999866, 0.00011533300000000218, 0.00011591600000000063, 0.00011552800000000363, 0.00011520799999999859, 0.00011586099999999488, 0.00011493099999999867, 0.00011584700000000225, 0.00011580600000000302, 0.00011502800000000313, 0.00011483300000000168, 0.00011590300000000053, 0.00011580500000000354, 0.0001152499999999973, 0.00011401400000000256, 0.00011550000000000449, 0.00011450000000000349, 0.00011508400000000141, 0.00011419499999999749, 0.00011569399999999952, 0.00011501400000000356, 0.00011550000000000449, 0.000115597000000002, 0.00011567999999999995, 0.0001158049999999966, 0.00011565199999999387, 0.00011516699999999935, 0.00011579100000000397, 0.00011530500000000304, 0.00011498599999999748]</msg>
<status status="PASS" starttime="20201029 12:49:29.551" endtime="20201029 12:49:29.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.540" endtime="20201029 12:49:29.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:29.567" endtime="20201029 12:49:29.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.562" endtime="20201029 12:49:29.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.560" endtime="20201029 12:49:29.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.072" endtime="20201029 12:49:29.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.071" endtime="20201029 12:49:29.592"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.615" endtime="20201029 12:49:29.636"></status>
</kw>
<msg timestamp="20201029 12:49:29.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:29.611" endtime="20201029 12:49:29.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:29.640" endtime="20201029 12:49:29.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.646" endtime="20201029 12:49:29.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.604" endtime="20201029 12:49:29.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.598" endtime="20201029 12:49:29.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.669" endtime="20201029 12:49:30.025"></status>
</kw>
<msg timestamp="20201029 12:49:30.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039873472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039990097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:29.666" endtime="20201029 12:49:30.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039873472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039990097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:30.034" endtime="20201029 12:49:30.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.053" endtime="20201029 12:49:30.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.659" endtime="20201029 12:49:30.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.654" endtime="20201029 12:49:30.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:30.070" level="INFO">${RESULT} = [{'diff': 0.00011662500000000214}, {'diff': 0.00011658400000000291}, {'diff': 0.00011644399999999333}, {'diff': 0.00011640300000000103}, {'diff': 0.00011694500000000024}, {'diff': 0.000116721999999999...</msg>
<status status="PASS" starttime="20201029 12:49:30.061" endtime="20201029 12:49:30.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:30.079" level="INFO">${ACCURACY} = {'diff': [0.00011662500000000214, 0.00011658400000000291, 0.00011644399999999333, 0.00011640300000000103, 0.00011694500000000024, 0.00011672199999999966, 0.00011658399999999597, 0.00011684699999999631...</msg>
<status status="PASS" starttime="20201029 12:49:30.072" endtime="20201029 12:49:30.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.090" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:49:30.087" endtime="20201029 12:49:30.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.095" level="INFO">VALUE: [0.00011662500000000214, 0.00011658400000000291, 0.00011644399999999333, 0.00011640300000000103, 0.00011694500000000024, 0.00011672199999999966, 0.00011658399999999597, 0.00011684699999999631, 0.00011643100000000017, 0.00011602800000000413, 0.0001163750000000019, 0.00011669400000000052, 0.00011533300000000218, 0.00011568100000000636, 0.00011627799999999744, 0.00011623599999999873, 0.00011519499999999849, 0.00011662500000000214, 0.00011661100000000257, 0.00011636100000000232, 0.00011629200000000395, 0.00011644499999999974, 0.00011501399999999662, 0.00011598599999999848, 0.00011588900000000096, 0.00011566600000000038, 0.00011636100000000232, 0.00011605600000000327, 0.00011588900000000096, 0.00011618099999999992, 0.00011590300000000053, 0.00011606900000000336, 0.0001165550000000043, 0.00011640300000000103, 0.00011656899999999693, 0.00011551400000000406, 0.00011501400000000356, 0.00011529199999999601, 0.00011495800000000528, 0.00011631899999999668, 0.00011612500000000164, 0.00011584800000000173, 0.00011616700000000035, 0.00011495899999999781, 0.0001155420000000032, 0.00011593099999999967, 0.00011548600000000492, 0.0001160970000000025, 0.00011684699999999631, 0.00011547200000000535]</msg>
<status status="PASS" starttime="20201029 12:49:30.092" endtime="20201029 12:49:30.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.081" endtime="20201029 12:49:30.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:30.107" endtime="20201029 12:49:30.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.103" endtime="20201029 12:49:30.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.101" endtime="20201029 12:49:30.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.594" endtime="20201029 12:49:30.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.593" endtime="20201029 12:49:30.133"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.155" endtime="20201029 12:49:30.181"></status>
</kw>
<msg timestamp="20201029 12:49:30.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:30.152" endtime="20201029 12:49:30.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:30.184" endtime="20201029 12:49:30.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.191" endtime="20201029 12:49:30.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.145" endtime="20201029 12:49:30.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.139" endtime="20201029 12:49:30.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.214" endtime="20201029 12:49:30.548"></status>
</kw>
<msg timestamp="20201029 12:49:30.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045607625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045724569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:30.211" endtime="20201029 12:49:30.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045607625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045724569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:30.557" endtime="20201029 12:49:30.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.576" endtime="20201029 12:49:30.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.204" endtime="20201029 12:49:30.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.199" endtime="20201029 12:49:30.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:30.594" level="INFO">${RESULT} = [{'diff': 0.00011694400000000077}, {'diff': 0.00011727799999999844}, {'diff': 0.00011645799999999984}, {'diff': 0.00011727799999999844}, {'diff': 0.0001177499999999998}, {'diff': 0.0001169859999999994...</msg>
<status status="PASS" starttime="20201029 12:49:30.584" endtime="20201029 12:49:30.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:30.604" level="INFO">${ACCURACY} = {'diff': [0.00011694400000000077, 0.00011727799999999844, 0.00011645799999999984, 0.00011727799999999844, 0.0001177499999999998, 0.00011698599999999948, 0.00011719500000000049, 0.00011737499999999595,...</msg>
<status status="PASS" starttime="20201029 12:49:30.597" endtime="20201029 12:49:30.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.615" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:49:30.613" endtime="20201029 12:49:30.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.621" level="INFO">VALUE: [0.00011694400000000077, 0.00011727799999999844, 0.00011645799999999984, 0.00011727799999999844, 0.0001177499999999998, 0.00011698599999999948, 0.00011719500000000049, 0.00011737499999999595, 0.00011729199999999801, 0.00011649999999999855, 0.00011776399999999937, 0.00011759699999999706, 0.00011781899999999818, 0.00011722200000000016, 0.00011726399999999887, 0.00011772200000000066, 0.00011681999999999665, 0.00011688799999999555, 0.00011722199999999322, 0.00011763900000000271, 0.00011731899999999768, 0.00011669400000000052, 0.00011740200000000256, 0.00011722200000000016, 0.00011744400000000127, 0.0001168049999999976, 0.00011759699999999706, 0.00011744400000000127, 0.00011745800000000084, 0.00011694500000000024, 0.00011698599999999948, 0.00011698599999999948, 0.00011620799999999959, 0.00011598599999999848, 0.00011633300000000318, 0.00011644400000000027, 0.00011745800000000084, 0.00011736100000000332, 0.00011634800000000223, 0.00011702799999999819, 0.0001174170000000016, 0.000117082999999997, 0.00011726399999999887, 0.00011762500000000314, 0.00011755599999999783, 0.00011758300000000443, 0.00011743100000000117, 0.00011770800000000109, 0.00011729200000000495, 0.00011738899999999552]</msg>
<status status="PASS" starttime="20201029 12:49:30.618" endtime="20201029 12:49:30.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.606" endtime="20201029 12:49:30.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:30.635" endtime="20201029 12:49:30.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.629" endtime="20201029 12:49:30.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.627" endtime="20201029 12:49:30.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.135" endtime="20201029 12:49:30.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.133" endtime="20201029 12:49:30.660"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.683" endtime="20201029 12:49:30.703"></status>
</kw>
<msg timestamp="20201029 12:49:30.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:30.680" endtime="20201029 12:49:30.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:30.707" endtime="20201029 12:49:30.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.713" endtime="20201029 12:49:30.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.672" endtime="20201029 12:49:30.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.667" endtime="20201029 12:49:30.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.736" endtime="20201029 12:49:31.068"></status>
</kw>
<msg timestamp="20201029 12:49:31.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040030292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:30.733" endtime="20201029 12:49:31.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040030292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:31.077" endtime="20201029 12:49:31.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.095" endtime="20201029 12:49:31.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.726" endtime="20201029 12:49:31.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.721" endtime="20201029 12:49:31.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:31.113" level="INFO">${RESULT} = [{'diff': 0.00011831899999999868}, {'diff': 0.00011831999999999815}, {'diff': 0.0001184170000000026}, {'diff': 0.0001183750000000039}, {'diff': 0.00011848600000000098}, {'diff': 0.00011879199999999951...</msg>
<status status="PASS" starttime="20201029 12:49:31.104" endtime="20201029 12:49:31.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:31.123" level="INFO">${ACCURACY} = {'diff': [0.00011831899999999868, 0.00011831999999999815, 0.0001184170000000026, 0.0001183750000000039, 0.00011848600000000098, 0.00011879199999999951, 0.00011800000000000005, 0.0001185829999999985, 0...</msg>
<status status="PASS" starttime="20201029 12:49:31.115" endtime="20201029 12:49:31.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.134" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:49:31.132" endtime="20201029 12:49:31.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.139" level="INFO">VALUE: [0.00011831899999999868, 0.00011831999999999815, 0.0001184170000000026, 0.0001183750000000039, 0.00011848600000000098, 0.00011879199999999951, 0.00011800000000000005, 0.0001185829999999985, 0.00011755600000000477, 0.00011822200000000116, 0.00011800000000000005, 0.00011879199999999951, 0.00011847200000000141, 0.00011861099999999763, 0.0001181950000000015, 0.00011852700000000022, 0.00011876400000000037, 0.0001180970000000045, 0.00011847299999999394, 0.0001185829999999985, 0.00011852799999999969, 0.00011697199999999991, 0.00011868099999999548, 0.00011865200000000381, 0.00011844500000000174, 0.00011849999999999361, 0.00011843100000000217, 0.00011865299999999634, 0.00011880599999999908, 0.00011838900000000346, 0.00011830599999999858, 0.00011873600000000123, 0.00011888900000000396, 0.00011861100000000457, 0.00011848600000000098, 0.00011838899999999652, 0.00011866700000000285, 0.00011831899999999868, 0.0001181950000000015, 0.0001181950000000015, 0.00011873600000000123, 0.0001184170000000026, 0.00011816600000000288, 0.00011765300000000228, 0.00011859699999999807, 0.0001179300000000022, 0.00011833299999999825, 0.00011797300000000038, 0.00011852799999999969, 0.00011805599999999833]</msg>
<status status="PASS" starttime="20201029 12:49:31.136" endtime="20201029 12:49:31.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.125" endtime="20201029 12:49:31.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:31.152" endtime="20201029 12:49:31.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.147" endtime="20201029 12:49:31.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.145" endtime="20201029 12:49:31.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.662" endtime="20201029 12:49:31.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.661" endtime="20201029 12:49:31.177"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.200" endtime="20201029 12:49:31.222"></status>
</kw>
<msg timestamp="20201029 12:49:31.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:31.196" endtime="20201029 12:49:31.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:31.226" endtime="20201029 12:49:31.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.233" endtime="20201029 12:49:31.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.189" endtime="20201029 12:49:31.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.183" endtime="20201029 12:49:31.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.256" endtime="20201029 12:49:31.604"></status>
</kw>
<msg timestamp="20201029 12:49:31.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039740264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039859958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:31.253" endtime="20201029 12:49:31.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039740264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039859958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:31.613" endtime="20201029 12:49:31.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.632" endtime="20201029 12:49:31.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.246" endtime="20201029 12:49:31.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.241" endtime="20201029 12:49:31.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:31.649" level="INFO">${RESULT} = [{'diff': 0.00011969400000000352}, {'diff': 0.00011818000000000245}, {'diff': 0.00011891600000000363}, {'diff': 0.00011852799999999969}, {'diff': 0.00011986199999999836}, {'diff': 0.000119458000000002...</msg>
<status status="PASS" starttime="20201029 12:49:31.640" endtime="20201029 12:49:31.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:31.660" level="INFO">${ACCURACY} = {'diff': [0.00011969400000000352, 0.00011818000000000245, 0.00011891600000000363, 0.00011852799999999969, 0.00011986199999999836, 0.00011945800000000284, 0.00011972200000000266, 0.00011801399999999962...</msg>
<status status="PASS" starttime="20201029 12:49:31.651" endtime="20201029 12:49:31.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.671" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:49:31.668" endtime="20201029 12:49:31.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.676" level="INFO">VALUE: [0.00011969400000000352, 0.00011818000000000245, 0.00011891600000000363, 0.00011852799999999969, 0.00011986199999999836, 0.00011945800000000284, 0.00011972200000000266, 0.00011801399999999962, 0.00011816600000000288, 0.00011945800000000284, 0.00011947199999999547, 0.00011973600000000223, 0.00011905599999999933, 0.00011843099999999523, 0.00011955599999999983, 0.00011931899999999968, 0.00011976400000000137, 0.00011919499999999555, 0.00011950000000000155, 0.00011934699999999882, 0.00011984800000000573, 0.0001188750000000044, 0.00011931999999999915, 0.00011930599999999958, 0.00011931899999999968, 0.00011898600000000148, 0.00011981900000000018, 0.00011920800000000259, 0.00011894400000000277, 0.00011973600000000223, 0.00011869499999999505, 0.0001197500000000018, 0.00011895900000000181, 0.00011834699999999782, 0.00011906899999999943, 0.00011802799999999919, 0.00011850000000000055, 0.00011942999999999676, 0.00011879100000000004, 0.00011909699999999857, 0.00011869400000000252, 0.00011901400000000062, 0.00011890300000000353, 0.00011927700000000097, 0.00011986099999999889, 0.00011956899999999993, 0.0001189029999999966, 0.00011933400000000566, 0.00011895800000000234, 0.000119082999999999]</msg>
<status status="PASS" starttime="20201029 12:49:31.673" endtime="20201029 12:49:31.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.662" endtime="20201029 12:49:31.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:31.689" endtime="20201029 12:49:31.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.684" endtime="20201029 12:49:31.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.682" endtime="20201029 12:49:31.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.179" endtime="20201029 12:49:31.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.178" endtime="20201029 12:49:31.714"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.737" endtime="20201029 12:49:31.758"></status>
</kw>
<msg timestamp="20201029 12:49:31.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:31.733" endtime="20201029 12:49:31.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:31.762" endtime="20201029 12:49:31.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.768" endtime="20201029 12:49:31.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.726" endtime="20201029 12:49:31.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.720" endtime="20201029 12:49:31.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.792" endtime="20201029 12:49:32.142"></status>
</kw>
<msg timestamp="20201029 12:49:32.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039909597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040030042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:31.788" endtime="20201029 12:49:32.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039909597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040030042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:32.151" endtime="20201029 12:49:32.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.169" endtime="20201029 12:49:32.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.781" endtime="20201029 12:49:32.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.776" endtime="20201029 12:49:32.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:32.187" level="INFO">${RESULT} = [{'diff': 0.00012044500000000374}, {'diff': 0.00012026299999999546}, {'diff': 0.00011919400000000302}, {'diff': 0.00011997300000000238}, {'diff': 0.00012050000000000255}, {'diff': 0.000120166999999997...</msg>
<status status="PASS" starttime="20201029 12:49:32.178" endtime="20201029 12:49:32.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:32.196" level="INFO">${ACCURACY} = {'diff': [0.00012044500000000374, 0.00012026299999999546, 0.00011919400000000302, 0.00011997300000000238, 0.00012050000000000255, 0.00012016699999999741, 0.00012000000000000205, 0.00011997200000000291...</msg>
<status status="PASS" starttime="20201029 12:49:32.189" endtime="20201029 12:49:32.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.206" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:49:32.204" endtime="20201029 12:49:32.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.212" level="INFO">VALUE: [0.00012044500000000374, 0.00012026299999999546, 0.00011919400000000302, 0.00011997300000000238, 0.00012050000000000255, 0.00012016699999999741, 0.00012000000000000205, 0.00011997200000000291, 0.00011952800000000069, 0.00012055600000000083, 0.00011918000000000345, 0.0001200699999999999, 0.00012069399999999758, 0.00012031900000000068, 0.00012011099999999914, 0.00012041699999999766, 0.00012083400000000022, 0.0001207500000000028, 0.00012026400000000187, 0.00012055500000000136, 0.00012084700000000032, 0.00012076399999999543, 0.00011967999999999701, 0.00012022200000000316, 0.00012001400000000162, 0.00011999999999999511, 0.00012050000000000255, 0.00011917999999999651, 0.00012080600000000108, 0.00012005500000000086, 0.00012016599999999794, 0.00012045899999999637, 0.000120083, 0.00012069399999999758, 0.00012038899999999852, 0.00011967999999999701, 0.0001201249999999987, 0.00012026400000000187, 0.000120083, 0.00012030600000000058, 0.00012061099999999964, 0.00011998599999999554, 0.0001204579999999969, 0.0001201249999999987, 0.00012037499999999896, 0.00012073600000000323, 0.00012059700000000007, 0.00012008399999999947, 0.00012026399999999493, 0.00012032000000000015]</msg>
<status status="PASS" starttime="20201029 12:49:32.209" endtime="20201029 12:49:32.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.197" endtime="20201029 12:49:32.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:32.224" endtime="20201029 12:49:32.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.220" endtime="20201029 12:49:32.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.217" endtime="20201029 12:49:32.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.716" endtime="20201029 12:49:32.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.715" endtime="20201029 12:49:32.250"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.272" endtime="20201029 12:49:32.296"></status>
</kw>
<msg timestamp="20201029 12:49:32.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:32.269" endtime="20201029 12:49:32.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:32.299" endtime="20201029 12:49:32.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.306" endtime="20201029 12:49:32.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.262" endtime="20201029 12:49:32.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.256" endtime="20201029 12:49:32.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.329" endtime="20201029 12:49:32.676"></status>
</kw>
<msg timestamp="20201029 12:49:32.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041441958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041562986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:32.326" endtime="20201029 12:49:32.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041441958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041562986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:32.685" endtime="20201029 12:49:32.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.703" endtime="20201029 12:49:32.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.318" endtime="20201029 12:49:32.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.314" endtime="20201029 12:49:32.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:32.720" level="INFO">${RESULT} = [{'diff': 0.00012102800000000219}, {'diff': 0.00012020800000000359}, {'diff': 0.0001211249999999997}, {'diff': 0.00012132000000000115}, {'diff': 0.00012172300000000413}, {'diff': 0.0001209029999999986...</msg>
<status status="PASS" starttime="20201029 12:49:32.712" endtime="20201029 12:49:32.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:32.730" level="INFO">${ACCURACY} = {'diff': [0.00012102800000000219, 0.00012020800000000359, 0.0001211249999999997, 0.00012132000000000115, 0.00012172300000000413, 0.0001209029999999986, 0.00012002800000000119, 0.00012134700000000082, ...</msg>
<status status="PASS" starttime="20201029 12:49:32.723" endtime="20201029 12:49:32.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.740" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:49:32.738" endtime="20201029 12:49:32.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.746" level="INFO">VALUE: [0.00012102800000000219, 0.00012020800000000359, 0.0001211249999999997, 0.00012132000000000115, 0.00012172300000000413, 0.0001209029999999986, 0.00012002800000000119, 0.00012134700000000082, 0.00012069499999999705, 0.00012002800000000119, 0.00012113899999999928, 0.00012137499999999996, 0.00012176400000000337, 0.00012145899999999737, 0.00012111199999999961, 0.00012166699999999891, 0.00012155600000000183, 0.00012169399999999858, 0.00012076400000000237, 0.00012070799999999715, 0.00012115299999999884, 0.00012179200000000251, 0.00012183300000000175, 0.00012144399999999833, 0.00012129200000000201, 0.00012097199999999697, 0.00012165300000000628, 0.00012180600000000208, 0.000121777999999996, 0.00012152800000000269, 0.00012115199999999937, 0.00012108400000000047, 0.00012151400000000312, 0.00012159700000000107, 0.00012186100000000089, 0.00012099999999999611, 0.00012150000000000355, 0.0001210700000000009, 0.00012004199999999382, 0.00012186100000000089, 0.00012122199999999722, 0.00012179200000000251, 0.00012170800000000509, 0.00012120900000000406, 0.00012129199999999507, 0.00012111100000000014, 0.0001214579999999979, 0.0001214579999999979, 0.00012147199999999747, 0.00012166699999999891]</msg>
<status status="PASS" starttime="20201029 12:49:32.743" endtime="20201029 12:49:32.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.731" endtime="20201029 12:49:32.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:32.760" endtime="20201029 12:49:32.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.754" endtime="20201029 12:49:32.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.752" endtime="20201029 12:49:32.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.252" endtime="20201029 12:49:32.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.251" endtime="20201029 12:49:32.785"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.808" endtime="20201029 12:49:32.830"></status>
</kw>
<msg timestamp="20201029 12:49:32.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:32.805" endtime="20201029 12:49:32.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:32.834" endtime="20201029 12:49:32.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.840" endtime="20201029 12:49:32.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.797" endtime="20201029 12:49:32.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.792" endtime="20201029 12:49:32.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.863" endtime="20201029 12:49:33.208"></status>
</kw>
<msg timestamp="20201029 12:49:33.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04007275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040195597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:32.860" endtime="20201029 12:49:33.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04007275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040195597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:33.218" endtime="20201029 12:49:33.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.236" endtime="20201029 12:49:33.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.853" endtime="20201029 12:49:33.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.848" endtime="20201029 12:49:33.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:33.253" level="INFO">${RESULT} = [{'diff': 0.00012284700000000232}, {'diff': 0.0001226250000000012}, {'diff': 0.0001220700000000019}, {'diff': 0.00012219400000000602}, {'diff': 0.0001222500000000043}, {'diff': 0.00012211100000000114}...</msg>
<status status="PASS" starttime="20201029 12:49:33.244" endtime="20201029 12:49:33.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:33.263" level="INFO">${ACCURACY} = {'diff': [0.00012284700000000232, 0.0001226250000000012, 0.0001220700000000019, 0.00012219400000000602, 0.0001222500000000043, 0.00012211100000000114, 0.0001227229999999982, 0.00012204100000000329, 0....</msg>
<status status="PASS" starttime="20201029 12:49:33.255" endtime="20201029 12:49:33.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.274" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:49:33.272" endtime="20201029 12:49:33.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.280" level="INFO">VALUE: [0.00012284700000000232, 0.0001226250000000012, 0.0001220700000000019, 0.00012219400000000602, 0.0001222500000000043, 0.00012211100000000114, 0.0001227229999999982, 0.00012204100000000329, 0.00012236200000000086, 0.00012284700000000232, 0.00012251399999999718, 0.00012281900000000318, 0.0001225559999999959, 0.0001221250000000007, 0.00012272199999999872, 0.00012237500000000096, 0.00012199999999999711, 0.00012293000000000026, 0.00012206900000000243, 0.00012280600000000308, 0.00012194399999999883, 0.00012211100000000114, 0.0001229030000000006, 0.00012209700000000157, 0.00012276399999999743, 0.00012202799999999625, 0.0001227909999999971, 0.00012248600000000498, 0.00012269399999999958, 0.00012269499999999905, 0.00012226400000000387, 0.0001219449999999983, 0.0001212500000000033, 0.00012123599999999679, 0.00012274999999999786, 0.00012240200000000062, 0.00012266699999999991, 0.00012286200000000136, 0.00012233300000000225, 0.00012263899999999384, 0.00012209699999999463, 0.00012259700000000207, 0.00012270799999999915, 0.00012191699999999916, 0.00012224999999999736, 0.00012233400000000172, 0.00012224999999999736, 0.00012170899999999762, 0.0001225830000000025, 0.00012201400000000362]</msg>
<status status="PASS" starttime="20201029 12:49:33.277" endtime="20201029 12:49:33.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.265" endtime="20201029 12:49:33.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:33.298" endtime="20201029 12:49:33.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.294" endtime="20201029 12:49:33.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.291" endtime="20201029 12:49:33.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.787" endtime="20201029 12:49:33.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.786" endtime="20201029 12:49:33.323"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.346" endtime="20201029 12:49:33.368"></status>
</kw>
<msg timestamp="20201029 12:49:33.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:33.343" endtime="20201029 12:49:33.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:33.372" endtime="20201029 12:49:33.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.378" endtime="20201029 12:49:33.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.335" endtime="20201029 12:49:33.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.330" endtime="20201029 12:49:33.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.401" endtime="20201029 12:49:33.747"></status>
</kw>
<msg timestamp="20201029 12:49:33.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039944681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040067778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:33.398" endtime="20201029 12:49:33.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039944681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040067778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:33.757" endtime="20201029 12:49:33.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.775" endtime="20201029 12:49:33.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.391" endtime="20201029 12:49:33.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.386" endtime="20201029 12:49:33.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:33.792" level="INFO">${RESULT} = [{'diff': 0.00012309699999999563}, {'diff': 0.00012372199999999972}, {'diff': 0.0001237920000000045}, {'diff': 0.00012332000000000315}, {'diff': 0.00012318099999999998}, {'diff': 0.0001230000000000050...</msg>
<status status="PASS" starttime="20201029 12:49:33.783" endtime="20201029 12:49:33.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:33.803" level="INFO">${ACCURACY} = {'diff': [0.00012309699999999563, 0.00012372199999999972, 0.0001237920000000045, 0.00012332000000000315, 0.00012318099999999998, 0.00012300000000000505, 0.00012343000000000076, 0.00012388900000000203,...</msg>
<status status="PASS" starttime="20201029 12:49:33.794" endtime="20201029 12:49:33.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.814" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:49:33.812" endtime="20201029 12:49:33.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.819" level="INFO">VALUE: [0.00012309699999999563, 0.00012372199999999972, 0.0001237920000000045, 0.00012332000000000315, 0.00012318099999999998, 0.00012300000000000505, 0.00012343000000000076, 0.00012388900000000203, 0.00012298599999999854, 0.0001232779999999975, 0.0001236109999999957, 0.0001236109999999957, 0.00012377800000000494, 0.00012329199999999707, 0.00012374999999999886, 0.0001232909999999976, 0.00012358400000000297, 0.00012219400000000602, 0.00012347199999999947, 0.00012363900000000178, 0.00012323699999999826, 0.00012319400000000008, 0.00012312499999999477, 0.00012348599999999904, 0.00012304099999999735, 0.00012305499999999692, 0.00012313900000000128, 0.00012394400000000083, 0.00012359700000000307, 0.00012379199999999757, 0.0001229999999999981, 0.00012319400000000008, 0.00012269499999999905, 0.0001235830000000035, 0.00012381899999999724, 0.00012365300000000135, 0.00012379199999999757, 0.00012311100000000214, 0.00012380499999999767, 0.00012284700000000232, 0.00012301399999999768, 0.000123777999999998, 0.00012298599999999854, 0.00012251400000000412, 0.00012326399999999793, 0.0001237359999999993, 0.00012348599999999904, 0.0001233329999999963, 0.00012320899999999912, 0.00012388900000000203]</msg>
<status status="PASS" starttime="20201029 12:49:33.816" endtime="20201029 12:49:33.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.805" endtime="20201029 12:49:33.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:33.832" endtime="20201029 12:49:33.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.827" endtime="20201029 12:49:33.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.825" endtime="20201029 12:49:33.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.325" endtime="20201029 12:49:33.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.324" endtime="20201029 12:49:33.860"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.891" endtime="20201029 12:49:33.914"></status>
</kw>
<msg timestamp="20201029 12:49:33.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:33.886" endtime="20201029 12:49:33.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:33.917" endtime="20201029 12:49:33.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.924" endtime="20201029 12:49:33.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.877" endtime="20201029 12:49:33.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.869" endtime="20201029 12:49:33.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.947" endtime="20201029 12:49:34.297"></status>
</kw>
<msg timestamp="20201029 12:49:34.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051663778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051788681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:33.944" endtime="20201029 12:49:34.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051663778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051788681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:34.306" endtime="20201029 12:49:34.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.324" endtime="20201029 12:49:34.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.937" endtime="20201029 12:49:34.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.932" endtime="20201029 12:49:34.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:34.341" level="INFO">${RESULT} = [{'diff': 0.0001249030000000026}, {'diff': 0.00012463899999999584}, {'diff': 0.00012470800000000115}, {'diff': 0.00012491699999999523}, {'diff': 0.00012420900000000012}, {'diff': 0.0001239030000000016...</msg>
<status status="PASS" starttime="20201029 12:49:34.333" endtime="20201029 12:49:34.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:34.350" level="INFO">${ACCURACY} = {'diff': [0.0001249030000000026, 0.00012463899999999584, 0.00012470800000000115, 0.00012491699999999523, 0.00012420900000000012, 0.0001239030000000016, 0.00012419400000000108, 0.0001239450000000003, 0...</msg>
<status status="PASS" starttime="20201029 12:49:34.343" endtime="20201029 12:49:34.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.361" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:49:34.359" endtime="20201029 12:49:34.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.367" level="INFO">VALUE: [0.0001249030000000026, 0.00012463899999999584, 0.00012470800000000115, 0.00012491699999999523, 0.00012420900000000012, 0.0001239030000000016, 0.00012419400000000108, 0.0001239450000000003, 0.00012481899999999824, 0.00012395899999999987, 0.0001247360000000003, 0.00012434699999999688, 0.0001231250000000017, 0.00012448600000000004, 0.00012433300000000425, 0.00012476399999999943, 0.00012476399999999943, 0.00012420800000000065, 0.00012472299999999326, 0.00012448600000000004, 0.00012438899999999559, 0.00012486099999999695, 0.00012440299999999516, 0.0001246380000000033, 0.0001244580000000009, 0.0001245280000000057, 0.0001244160000000022, 0.00012420900000000012, 0.00012406900000000443, 0.00012454099999999885, 0.00012441700000000167, 0.00012426400000000587, 0.00012351399999999818, 0.00012448600000000004, 0.00012343000000000076, 0.00012416700000000142, 0.00012465199999999593, 0.0001247360000000003, 0.00012424999999999936, 0.0001246109999999967, 0.00012445900000000037, 0.00012444400000000133, 0.0001242359999999998, 0.00012476399999999943, 0.0001245559999999979, 0.00012393000000000126, 0.00012413900000000228, 0.00012415300000000185, 0.0001240689999999975, 0.0001248329999999978]</msg>
<status status="PASS" starttime="20201029 12:49:34.364" endtime="20201029 12:49:34.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.352" endtime="20201029 12:49:34.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:34.379" endtime="20201029 12:49:34.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.375" endtime="20201029 12:49:34.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.372" endtime="20201029 12:49:34.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.863" endtime="20201029 12:49:34.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.861" endtime="20201029 12:49:34.404"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.427" endtime="20201029 12:49:34.451"></status>
</kw>
<msg timestamp="20201029 12:49:34.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:34.424" endtime="20201029 12:49:34.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:34.455" endtime="20201029 12:49:34.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.461" endtime="20201029 12:49:34.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.417" endtime="20201029 12:49:34.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.411" endtime="20201029 12:49:34.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.484" endtime="20201029 12:49:34.830"></status>
</kw>
<msg timestamp="20201029 12:49:34.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041724111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041849375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:34.481" endtime="20201029 12:49:34.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041724111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041849375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:34.839" endtime="20201029 12:49:34.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.857" endtime="20201029 12:49:34.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.474" endtime="20201029 12:49:34.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.469" endtime="20201029 12:49:34.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:34.874" level="INFO">${RESULT} = [{'diff': 0.00012526399999999993}, {'diff': 0.00012558399999999803}, {'diff': 0.00012508299999999806}, {'diff': 0.00012547200000000147}, {'diff': 0.0001253889999999966}, {'diff': 0.0001249020000000031...</msg>
<status status="PASS" starttime="20201029 12:49:34.866" endtime="20201029 12:49:34.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:34.883" level="INFO">${ACCURACY} = {'diff': [0.00012526399999999993, 0.00012558399999999803, 0.00012508299999999806, 0.00012547200000000147, 0.0001253889999999966, 0.00012490200000000312, 0.00012458399999999703, 0.00012572199999999478,...</msg>
<status status="PASS" starttime="20201029 12:49:34.877" endtime="20201029 12:49:34.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.894" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:49:34.892" endtime="20201029 12:49:34.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.900" level="INFO">VALUE: [0.00012526399999999993, 0.00012558399999999803, 0.00012508299999999806, 0.00012547200000000147, 0.0001253889999999966, 0.00012490200000000312, 0.00012458399999999703, 0.00012572199999999478, 0.00012534699999999788, 0.00012554199999999932, 0.0001245830000000045, 0.000124777999999999, 0.00012563900000000378, 0.0001253480000000043, 0.00012522199999999428, 0.00012402799999999825, 0.00012441700000000167, 0.0001255559999999989, 0.0001253329999999983, 0.00012522199999999428, 0.00012516700000000242, 0.0001257360000000013, 0.00012515300000000285, 0.0001252779999999995, 0.00012536099999999745, 0.0001258199999999987, 0.0001255000000000006, 0.00012586099999999795, 0.00012511100000000414, 0.00012584699999999838, 0.0001256250000000042, 0.00012527700000000003, 0.00012563799999999736, 0.00012565300000000335, 0.00012549999999999367, 0.0001256120000000041, 0.0001250689999999985, 0.00012551400000000018, 0.00012409700000000357, 0.0001252909999999996, 0.00012568100000000249, 0.00012420900000000012, 0.000125292000000006, 0.00012436100000000339, 0.00012543000000000276, 0.00012518100000000199, 0.00012419400000000108, 0.0001247230000000002, 0.000125165999999996, 0.00012575000000000086]</msg>
<status status="PASS" starttime="20201029 12:49:34.897" endtime="20201029 12:49:34.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.885" endtime="20201029 12:49:34.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:34.914" endtime="20201029 12:49:34.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.908" endtime="20201029 12:49:34.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.905" endtime="20201029 12:49:34.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.407" endtime="20201029 12:49:34.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.405" endtime="20201029 12:49:34.939"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.962" endtime="20201029 12:49:34.984"></status>
</kw>
<msg timestamp="20201029 12:49:34.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:34.958" endtime="20201029 12:49:34.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:34.987" endtime="20201029 12:49:34.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.994" endtime="20201029 12:49:34.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.951" endtime="20201029 12:49:34.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.946" endtime="20201029 12:49:35.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:35.017" endtime="20201029 12:49:35.350"></status>
</kw>
<msg timestamp="20201029 12:49:35.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040199375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040326319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:35.014" endtime="20201029 12:49:35.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:35.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040199375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040326319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:35.360" endtime="20201029 12:49:35.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:35.378" endtime="20201029 12:49:35.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.007" endtime="20201029 12:49:35.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.002" endtime="20201029 12:49:35.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:35.395" level="INFO">${RESULT} = [{'diff': 0.0001269439999999969}, {'diff': 0.00012598600000000154}, {'diff': 0.00012649999999999467}, {'diff': 0.0001263329999999993}, {'diff': 0.00012648600000000204}, {'diff': 0.00012648600000000204...</msg>
<status status="PASS" starttime="20201029 12:49:35.386" endtime="20201029 12:49:35.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:35.410" level="INFO">${ACCURACY} = {'diff': [0.0001269439999999969, 0.00012598600000000154, 0.00012649999999999467, 0.0001263329999999993, 0.00012648600000000204, 0.00012648600000000204, 0.0001262360000000018, 0.00012637499999999802, 0...</msg>
<status status="PASS" starttime="20201029 12:49:35.397" endtime="20201029 12:49:35.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:35.421" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:49:35.418" endtime="20201029 12:49:35.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:35.426" level="INFO">VALUE: [0.0001269439999999969, 0.00012598600000000154, 0.00012649999999999467, 0.0001263329999999993, 0.00012648600000000204, 0.00012648600000000204, 0.0001262360000000018, 0.00012637499999999802, 0.00012655500000000042, 0.0001266109999999987, 0.00012599999999999417, 0.0001265830000000065, 0.00012679199999999363, 0.00012634699999999888, 0.00012613900000000428, 0.00012491700000000217, 0.00012675000000000186, 0.00012631899999999974, 0.00012630500000000017, 0.00012522200000000122, 0.000126778000000001, 0.00012609700000000557, 0.00012558399999999803, 0.00012641599999999725, 0.00012629200000000007, 0.00012655500000000042, 0.00012630599999999964, 0.0001262910000000006, 0.0001265000000000016, 0.00012595900000000188, 0.0001257360000000013, 0.00012643100000000324, 0.00012663899999999784, 0.00012666700000000392, 0.00012538800000000405, 0.0001266109999999987, 0.00012604100000000035, 0.0001259859999999946, 0.00012652699999999434, 0.00012537499999999702, 0.00012630500000000017, 0.0001260000000000011, 0.00012536199999999692, 0.00012687500000000546, 0.00012523599999999385, 0.00012590299999999666, 0.00012659699999999913, 0.00012630599999999964, 0.00012598600000000154, 0.00012675000000000186]</msg>
<status status="PASS" starttime="20201029 12:49:35.423" endtime="20201029 12:49:35.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.412" endtime="20201029 12:49:35.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:35.438" endtime="20201029 12:49:35.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.434" endtime="20201029 12:49:35.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.432" endtime="20201029 12:49:35.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.941" endtime="20201029 12:49:35.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.940" endtime="20201029 12:49:35.463"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:35.486" endtime="20201029 12:49:35.506"></status>
</kw>
<msg timestamp="20201029 12:49:35.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:35.483" endtime="20201029 12:49:35.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:35.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:35.510" endtime="20201029 12:49:35.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:35.516" endtime="20201029 12:49:35.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.476" endtime="20201029 12:49:35.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.470" endtime="20201029 12:49:35.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:35.540" endtime="20201029 12:49:35.873"></status>
</kw>
<msg timestamp="20201029 12:49:35.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039528306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039655986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:35.536" endtime="20201029 12:49:35.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:35.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039528306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039655986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:35.882" endtime="20201029 12:49:35.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:35.900" endtime="20201029 12:49:35.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.529" endtime="20201029 12:49:35.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.524" endtime="20201029 12:49:35.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:35.917" level="INFO">${RESULT} = [{'diff': 0.00012767999999999807}, {'diff': 0.00012765300000000535}, {'diff': 0.00012736200000000586}, {'diff': 0.00012719500000000356}, {'diff': 0.00012774999999999592}, {'diff': 0.000127736000000003...</msg>
<status status="PASS" starttime="20201029 12:49:35.909" endtime="20201029 12:49:35.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:36.003" level="INFO">${ACCURACY} = {'diff': [0.00012767999999999807, 0.00012765300000000535, 0.00012736200000000586, 0.00012719500000000356, 0.00012774999999999592, 0.0001277360000000033, 0.00012776300000000296, 0.00012766699999999798,...</msg>
<status status="PASS" starttime="20201029 12:49:35.919" endtime="20201029 12:49:36.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.014" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:49:36.011" endtime="20201029 12:49:36.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.019" level="INFO">VALUE: [0.00012767999999999807, 0.00012765300000000535, 0.00012736200000000586, 0.00012719500000000356, 0.00012774999999999592, 0.0001277360000000033, 0.00012776300000000296, 0.00012766699999999798, 0.00012763900000000578, 0.00012763900000000578, 0.00012766699999999798, 0.00012709699999999963, 0.0001269309999999968, 0.00012786099999999995, 0.00012694400000000383, 0.00012786099999999995, 0.0001278200000000007, 0.0001276109999999997, 0.00012770899999999669, 0.0001278200000000007, 0.00012712499999999877, 0.0001270690000000005, 0.00012704199999999388, 0.000127165999999998, 0.00012625000000000136, 0.00012720800000000365, 0.00012779200000000157, 0.00012624999999999442, 0.0001273889999999986, 0.00012747300000000295, 0.0001272780000000015, 0.00012717999999999757, 0.00012624999999999442, 0.00012783400000000028, 0.00012776400000000243, 0.0001278879999999996, 0.0001270560000000004, 0.00012713899999999834, 0.00012740199999999868, 0.00012779200000000157, 0.00012708300000000006, 0.00012777700000000253, 0.00012787499999999952, 0.00012790299999999866, 0.00012787499999999952, 0.00012751400000000218, 0.00012672200000000272, 0.00012712499999999877, 0.00012701400000000168, 0.00012761199999999917]</msg>
<status status="PASS" starttime="20201029 12:49:36.016" endtime="20201029 12:49:36.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.004" endtime="20201029 12:49:36.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:36.031" endtime="20201029 12:49:36.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.027" endtime="20201029 12:49:36.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.025" endtime="20201029 12:49:36.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.465" endtime="20201029 12:49:36.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.464" endtime="20201029 12:49:36.056"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.080" endtime="20201029 12:49:36.103"></status>
</kw>
<msg timestamp="20201029 12:49:36.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:36.076" endtime="20201029 12:49:36.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:36.106" endtime="20201029 12:49:36.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.112" endtime="20201029 12:49:36.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.068" endtime="20201029 12:49:36.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.063" endtime="20201029 12:49:36.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.136" endtime="20201029 12:49:36.481"></status>
</kw>
<msg timestamp="20201029 12:49:36.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040745847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040874417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:36.132" endtime="20201029 12:49:36.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040745847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040874417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:36.490" endtime="20201029 12:49:36.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.508" endtime="20201029 12:49:36.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.125" endtime="20201029 12:49:36.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.121" endtime="20201029 12:49:36.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:36.525" level="INFO">${RESULT} = [{'diff': 0.00012857000000000146}, {'diff': 0.00012808300000000106}, {'diff': 0.0001286659999999995}, {'diff': 0.00012891699999999923}, {'diff': 0.00012863899999999984}, {'diff': 0.0001279860000000035...</msg>
<status status="PASS" starttime="20201029 12:49:36.516" endtime="20201029 12:49:36.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:36.534" level="INFO">${ACCURACY} = {'diff': [0.00012857000000000146, 0.00012808300000000106, 0.0001286659999999995, 0.00012891699999999923, 0.00012863899999999984, 0.00012798600000000354, 0.00012801400000000268, 0.0001285279999999958, ...</msg>
<status status="PASS" starttime="20201029 12:49:36.527" endtime="20201029 12:49:36.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.545" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:49:36.543" endtime="20201029 12:49:36.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.552" level="INFO">VALUE: [0.00012857000000000146, 0.00012808300000000106, 0.0001286659999999995, 0.00012891699999999923, 0.00012863899999999984, 0.00012798600000000354, 0.00012801400000000268, 0.0001285279999999958, 0.00012826400000000293, 0.00012854100000000285, 0.00012862500000000027, 0.00012880600000000214, 0.00012816699999999848, 0.00012851400000000318, 0.0001276109999999997, 0.00012776300000000296, 0.00012825000000000336, 0.0001282079999999977, 0.000128569000000002, 0.00012708300000000006, 0.00012762499999999927, 0.0001283200000000012, 0.00012834800000000035, 0.00012716699999999748, 0.00012813899999999934, 0.00012863899999999984, 0.0001282780000000025, 0.0001288330000000018, 0.00012892999999999932, 0.00012725000000000236, 0.00012872299999999726, 0.00012801400000000268, 0.00012855500000000242, 0.0001280560000000014, 0.00012854200000000232, 0.0001280690000000015, 0.00012870899999999769, 0.00012890299999999966, 0.00012847199999999753, 0.00012869499999999812, 0.00012790200000000612, 0.00012816600000000594, 0.00012840299999999916, 0.00012859700000000113, 0.00012836100000000045, 0.00012837500000000002, 0.00012852800000000275, 0.00012830600000000164, 0.00012822199999999728, 0.00012851400000000318]</msg>
<status status="PASS" starttime="20201029 12:49:36.547" endtime="20201029 12:49:36.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.536" endtime="20201029 12:49:36.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:36.564" endtime="20201029 12:49:36.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.560" endtime="20201029 12:49:36.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.557" endtime="20201029 12:49:36.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.058" endtime="20201029 12:49:36.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.057" endtime="20201029 12:49:36.589"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.613" endtime="20201029 12:49:36.635"></status>
</kw>
<msg timestamp="20201029 12:49:36.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:36.609" endtime="20201029 12:49:36.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:36.638" endtime="20201029 12:49:36.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.645" endtime="20201029 12:49:36.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.602" endtime="20201029 12:49:36.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.596" endtime="20201029 12:49:36.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.669" endtime="20201029 12:49:37.002"></status>
</kw>
<msg timestamp="20201029 12:49:37.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042026528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042155889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:36.666" endtime="20201029 12:49:37.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042026528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042155889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:37.011" endtime="20201029 12:49:37.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.029" endtime="20201029 12:49:37.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.658" endtime="20201029 12:49:37.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.653" endtime="20201029 12:49:37.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:37.046" level="INFO">${RESULT} = [{'diff': 0.00012936100000000145}, {'diff': 0.00012904200000000282}, {'diff': 0.00012980499999999673}, {'diff': 0.00012990199999999424}, {'diff': 0.00012954200000000332}, {'diff': 0.000129513999999997...</msg>
<status status="PASS" starttime="20201029 12:49:37.037" endtime="20201029 12:49:37.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:37.057" level="INFO">${ACCURACY} = {'diff': [0.00012936100000000145, 0.00012904200000000282, 0.00012980499999999673, 0.00012990199999999424, 0.00012954200000000332, 0.00012951399999999724, 0.00012913900000000034, 0.0001289439999999989,...</msg>
<status status="PASS" starttime="20201029 12:49:37.048" endtime="20201029 12:49:37.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.067" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:49:37.065" endtime="20201029 12:49:37.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.073" level="INFO">VALUE: [0.00012936100000000145, 0.00012904200000000282, 0.00012980499999999673, 0.00012990199999999424, 0.00012954200000000332, 0.00012951399999999724, 0.00012913900000000034, 0.0001289439999999989, 0.00012951399999999724, 0.00012897199999999803, 0.00012934800000000135, 0.00012979199999999663, 0.00012952700000000428, 0.00012817999999999857, 0.00012979099999999716, 0.0001296110000000017, 0.0001289439999999989, 0.00012990300000000066, 0.00012945799999999896, 0.00012948600000000504, 0.00012945799999999896, 0.00012894499999999837, 0.0001292079999999987, 0.0001293330000000023, 0.00012937500000000102, 0.00012958300000000256, 0.00012825000000000336, 0.00012906899999999555, 0.00012923699999999733, 0.00012929199999999613, 0.00012958400000000203, 0.0001291529999999999, 0.0001290000000000041, 0.00012924999999999742, 0.00012895799999999846, 0.00012947200000000547, 0.0001280690000000015, 0.0001291110000000012, 0.00012924999999999742, 0.0001294580000000059, 0.00012952800000000375, 0.00012968000000000007, 0.0001289439999999989, 0.0001295980000000016, 0.0001298330000000028, 0.0001297360000000053, 0.0001296660000000005, 0.00012951399999999724, 0.0001290980000000011, 0.00012927799999999656]</msg>
<status status="PASS" starttime="20201029 12:49:37.070" endtime="20201029 12:49:37.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.058" endtime="20201029 12:49:37.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:37.086" endtime="20201029 12:49:37.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.081" endtime="20201029 12:49:37.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.079" endtime="20201029 12:49:37.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.592" endtime="20201029 12:49:37.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.590" endtime="20201029 12:49:37.111"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.133" endtime="20201029 12:49:37.154"></status>
</kw>
<msg timestamp="20201029 12:49:37.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:37.130" endtime="20201029 12:49:37.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:37.157" endtime="20201029 12:49:37.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.163" endtime="20201029 12:49:37.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.123" endtime="20201029 12:49:37.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.117" endtime="20201029 12:49:37.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.187" endtime="20201029 12:49:37.520"></status>
</kw>
<msg timestamp="20201029 12:49:37.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039615972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039746722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:37.183" endtime="20201029 12:49:37.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039615972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039746722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:37.529" endtime="20201029 12:49:37.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.547" endtime="20201029 12:49:37.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.176" endtime="20201029 12:49:37.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.172" endtime="20201029 12:49:37.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:37.564" level="INFO">${RESULT} = [{'diff': 0.00013074999999999892}, {'diff': 0.00013024999999999842}, {'diff': 0.0001300279999999973}, {'diff': 0.00013030600000000364}, {'diff': 0.0001306939999999937}, {'diff': 0.00012966699999999998...</msg>
<status status="PASS" starttime="20201029 12:49:37.555" endtime="20201029 12:49:37.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:37.575" level="INFO">${ACCURACY} = {'diff': [0.00013074999999999892, 0.00013024999999999842, 0.0001300279999999973, 0.00013030600000000364, 0.0001306939999999937, 0.00012966699999999998, 0.00013009700000000263, 0.000130263999999998, 0....</msg>
<status status="PASS" starttime="20201029 12:49:37.566" endtime="20201029 12:49:37.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.586" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:49:37.583" endtime="20201029 12:49:37.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.591" level="INFO">VALUE: [0.00013074999999999892, 0.00013024999999999842, 0.0001300279999999973, 0.00013030600000000364, 0.0001306939999999937, 0.00012966699999999998, 0.00013009700000000263, 0.000130263999999998, 0.00013034700000000288, 0.0001303059999999967, 0.0001308200000000037, 0.0001291110000000012, 0.00013029199999999713, 0.0001301530000000009, 0.00013006999999999602, 0.00013002800000000425, 0.0001304440000000004, 0.00013066700000000098, 0.00013068000000000107, 0.0001298890000000011, 0.0001307080000000002, 0.0001306389999999949, 0.000130166000000001, 0.00013011099999999526, 0.00012993000000000032, 0.00012959700000000213, 0.00013086100000000295, 0.00013012499999999483, 0.00013043000000000082, 0.00013063900000000184, 0.0001305279999999978, 0.000130472999999999, 0.00012997199999999903, 0.00013068000000000107, 0.00013029099999999766, 0.00013034700000000288, 0.0001307089999999997, 0.00012922199999999828, 0.0001306660000000015, 0.00013005499999999698, 0.0001307230000000062, 0.0001308059999999972, 0.00013073599999999935, 0.00012990300000000066, 0.0001299729999999985, 0.00013051399999999824, 0.00013087500000000252, 0.00013093000000000132, 0.00013023599999999885, 0.00013083299999999687]</msg>
<status status="PASS" starttime="20201029 12:49:37.588" endtime="20201029 12:49:37.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.577" endtime="20201029 12:49:37.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:37.604" endtime="20201029 12:49:37.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.599" endtime="20201029 12:49:37.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.597" endtime="20201029 12:49:37.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.113" endtime="20201029 12:49:37.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.111" endtime="20201029 12:49:37.629"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.651" endtime="20201029 12:49:37.672"></status>
</kw>
<msg timestamp="20201029 12:49:37.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:37.648" endtime="20201029 12:49:37.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:37.675" endtime="20201029 12:49:37.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.682" endtime="20201029 12:49:37.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.641" endtime="20201029 12:49:37.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.635" endtime="20201029 12:49:37.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.708" endtime="20201029 12:49:38.041"></status>
</kw>
<msg timestamp="20201029 12:49:38.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039683694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039814681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:37.703" endtime="20201029 12:49:38.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039683694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039814681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:38.050" endtime="20201029 12:49:38.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.068" endtime="20201029 12:49:38.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.695" endtime="20201029 12:49:38.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.690" endtime="20201029 12:49:38.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:38.085" level="INFO">${RESULT} = [{'diff': 0.00013098699999999908}, {'diff': 0.00013184699999999744}, {'diff': 0.00013141700000000173}, {'diff': 0.0001319169999999953}, {'diff': 0.00013104199999999788}, {'diff': 0.0001311800000000015...</msg>
<status status="PASS" starttime="20201029 12:49:38.077" endtime="20201029 12:49:38.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:38.094" level="INFO">${ACCURACY} = {'diff': [0.00013098699999999908, 0.00013184699999999744, 0.00013141700000000173, 0.0001319169999999953, 0.00013104199999999788, 0.00013118000000000157, 0.000131569000000005, 0.00013145800000000096, 0...</msg>
<status status="PASS" starttime="20201029 12:49:38.087" endtime="20201029 12:49:38.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.105" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:49:38.103" endtime="20201029 12:49:38.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.111" level="INFO">VALUE: [0.00013098699999999908, 0.00013184699999999744, 0.00013141700000000173, 0.0001319169999999953, 0.00013104199999999788, 0.00013118000000000157, 0.000131569000000005, 0.00013145800000000096, 0.00013162499999999633, 0.00013122200000000028, 0.0001302360000000058, 0.00013102800000000525, 0.00013134699999999694, 0.0001309440000000009, 0.00013137500000000302, 0.00013137499999999608, 0.000131166000000002, 0.00013027799999999756, 0.00013180500000000567, 0.00013099999999999917, 0.0001314310000000013, 0.0001314169999999948, 0.00013062500000000227, 0.00013065299999999447, 0.00013173699999999983, 0.00013056899999999705, 0.00013134699999999694, 0.00013190200000000318, 0.000131860999999997, 0.00013113900000000234, 0.00013102800000000525, 0.00013166700000000198, 0.00013133399999999684, 0.00013162499999999633, 0.00013123599999999985, 0.0001310980000000031, 0.0001301110000000022, 0.0001313059999999977, 0.00013022199999999928, 0.00013156999999999752, 0.0001313059999999977, 0.00013112500000000277, 0.0001302360000000058, 0.00013126400000000593, 0.00013005499999999698, 0.00013184699999999744, 0.00013174999999999992, 0.0001312780000000055, 0.00013156899999999805, 0.00013163900000000284]</msg>
<status status="PASS" starttime="20201029 12:49:38.108" endtime="20201029 12:49:38.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.096" endtime="20201029 12:49:38.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:38.123" endtime="20201029 12:49:38.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.119" endtime="20201029 12:49:38.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.116" endtime="20201029 12:49:38.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.631" endtime="20201029 12:49:38.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.630" endtime="20201029 12:49:38.148"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.173" endtime="20201029 12:49:38.195"></status>
</kw>
<msg timestamp="20201029 12:49:38.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:38.168" endtime="20201029 12:49:38.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:38.199" endtime="20201029 12:49:38.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.205" endtime="20201029 12:49:38.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.161" endtime="20201029 12:49:38.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.155" endtime="20201029 12:49:38.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.228" endtime="20201029 12:49:38.570"></status>
</kw>
<msg timestamp="20201029 12:49:38.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041322889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041454958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:38.225" endtime="20201029 12:49:38.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041322889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041454958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:38.580" endtime="20201029 12:49:38.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.598" endtime="20201029 12:49:38.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.218" endtime="20201029 12:49:38.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.213" endtime="20201029 12:49:38.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:38.615" level="INFO">${RESULT} = [{'diff': 0.00013206899999999855}, {'diff': 0.00013200000000000017}, {'diff': 0.00013288799999999767}, {'diff': 0.00013238899999999665}, {'diff': 0.00013229199999999913}, {'diff': 0.000132195000000001...</msg>
<status status="PASS" starttime="20201029 12:49:38.607" endtime="20201029 12:49:38.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:38.624" level="INFO">${ACCURACY} = {'diff': [0.00013206899999999855, 0.00013200000000000017, 0.00013288799999999767, 0.00013238899999999665, 0.00013229199999999913, 0.00013219500000000162, 0.0001323609999999975, 0.00013243000000000282,...</msg>
<status status="PASS" starttime="20201029 12:49:38.617" endtime="20201029 12:49:38.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.635" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:49:38.633" endtime="20201029 12:49:38.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.641" level="INFO">VALUE: [0.00013206899999999855, 0.00013200000000000017, 0.00013288799999999767, 0.00013238899999999665, 0.00013229199999999913, 0.00013219500000000162, 0.0001323609999999975, 0.00013243000000000282, 0.00013245800000000196, 0.00013272200000000178, 0.00013254199999999938, 0.00013162500000000327, 0.00013138899999999565, 0.00013243000000000282, 0.00013240299999999622, 0.0001328059999999992, 0.00013219400000000214, 0.000132264, 0.00013245799999999502, 0.00013233299999999837, 0.0001327640000000005, 0.00013144500000000087, 0.00013188899999999615, 0.0001322090000000012, 0.00013237499999999708, 0.0001314440000000014, 0.00013255499999999948, 0.00013269400000000264, 0.00013212500000000377, 0.00013240300000000316, 0.00013186100000000395, 0.0001322090000000012, 0.00013108300000000406, 0.00013230499999999923, 0.00013258299999999862, 0.00013204199999999888, 0.00013140200000000268, 0.00013241599999999631, 0.00013261099999999776, 0.00013275000000000092, 0.00013287499999999758, 0.00013279199999999963, 0.0001319860000000006, 0.00013229199999999913, 0.00013234699999999794, 0.00013225000000000042, 0.00013108299999999712, 0.00013279100000000016, 0.00013273600000000135, 0.0001323189999999988]</msg>
<status status="PASS" starttime="20201029 12:49:38.637" endtime="20201029 12:49:38.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.626" endtime="20201029 12:49:38.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:38.655" endtime="20201029 12:49:38.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.649" endtime="20201029 12:49:38.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.646" endtime="20201029 12:49:38.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.150" endtime="20201029 12:49:38.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.149" endtime="20201029 12:49:38.680"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.703" endtime="20201029 12:49:38.725"></status>
</kw>
<msg timestamp="20201029 12:49:38.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:38.699" endtime="20201029 12:49:38.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:38.729" endtime="20201029 12:49:38.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.735" endtime="20201029 12:49:38.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.692" endtime="20201029 12:49:38.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.686" endtime="20201029 12:49:38.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.765" endtime="20201029 12:49:39.144"></status>
</kw>
<msg timestamp="20201029 12:49:39.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039819597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039952917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:38.761" endtime="20201029 12:49:39.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039819597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039952917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:39.154" endtime="20201029 12:49:39.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.172" endtime="20201029 12:49:39.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.753" endtime="20201029 12:49:39.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.746" endtime="20201029 12:49:39.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:39.189" level="INFO">${RESULT} = [{'diff': 0.00013331999999999927}, {'diff': 0.00013316699999999654}, {'diff': 0.00013318000000000357}, {'diff': 0.0001330969999999987}, {'diff': 0.00013284700000000538}, {'diff': 0.0001332090000000022...</msg>
<status status="PASS" starttime="20201029 12:49:39.181" endtime="20201029 12:49:39.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:39.200" level="INFO">${ACCURACY} = {'diff': [0.00013331999999999927, 0.00013316699999999654, 0.00013318000000000357, 0.0001330969999999987, 0.00013284700000000538, 0.0001332090000000022, 0.00013200000000000017, 0.00013340299999999722, ...</msg>
<status status="PASS" starttime="20201029 12:49:39.192" endtime="20201029 12:49:39.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.212" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:49:39.209" endtime="20201029 12:49:39.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.217" level="INFO">VALUE: [0.00013331999999999927, 0.00013316699999999654, 0.00013318000000000357, 0.0001330969999999987, 0.00013284700000000538, 0.0001332090000000022, 0.00013200000000000017, 0.00013340299999999722, 0.00013351400000000124, 0.00013350000000000167, 0.00013340300000000416, 0.0001334310000000033, 0.00013338899999999765, 0.00013330500000000023, 0.0001333479999999984, 0.0001330280000000003, 0.0001338190000000003, 0.00013340299999999722, 0.00013348599999999516, 0.00013241600000000325, 0.00013300000000000117, 0.00013338899999999765, 0.0001336389999999979, 0.0001332080000000027, 0.0001333609999999985, 0.00013323700000000133, 0.00013206899999999855, 0.00013316700000000348, 0.00013333299999999937, 0.00013383299999999987, 0.00013344499999999593, 0.00013338800000000511, 0.00013329100000000066, 0.00013329200000000013, 0.0001331530000000039, 0.000133860999999999, 0.00013387499999999858, 0.00013311099999999826, 0.00013234699999999794, 0.0001336660000000045, 0.00013351400000000124, 0.0001327090000000017, 0.00013284699999999844, 0.00013383299999999987, 0.00013306899999999955, 0.0001327640000000005, 0.00013222200000000128, 0.00013200000000000017, 0.0001333059999999997, 0.00013223600000000085]</msg>
<status status="PASS" starttime="20201029 12:49:39.214" endtime="20201029 12:49:39.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.202" endtime="20201029 12:49:39.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:39.230" endtime="20201029 12:49:39.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.225" endtime="20201029 12:49:39.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.223" endtime="20201029 12:49:39.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.682" endtime="20201029 12:49:39.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.681" endtime="20201029 12:49:39.255"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.278" endtime="20201029 12:49:39.303"></status>
</kw>
<msg timestamp="20201029 12:49:39.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:39.275" endtime="20201029 12:49:39.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:39.306" endtime="20201029 12:49:39.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.312" endtime="20201029 12:49:39.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.267" endtime="20201029 12:49:39.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.262" endtime="20201029 12:49:39.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.336" endtime="20201029 12:49:39.691"></status>
</kw>
<msg timestamp="20201029 12:49:39.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040384653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040518236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:39.333" endtime="20201029 12:49:39.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040384653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040518236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:39.701" endtime="20201029 12:49:39.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.719" endtime="20201029 12:49:39.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.326" endtime="20201029 12:49:39.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.321" endtime="20201029 12:49:39.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:39.737" level="INFO">${RESULT} = [{'diff': 0.00013358299999999962}, {'diff': 0.00013441599999999831}, {'diff': 0.00013466699999999804}, {'diff': 0.00013373600000000235}, {'diff': 0.00013433399999999984}, {'diff': 0.000133832999999999...</msg>
<status status="PASS" starttime="20201029 12:49:39.728" endtime="20201029 12:49:39.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:39.748" level="INFO">${ACCURACY} = {'diff': [0.00013358299999999962, 0.00013441599999999831, 0.00013466699999999804, 0.00013373600000000235, 0.00013433399999999984, 0.00013383299999999987, 0.00013408300000000012, 0.0001343479999999994,...</msg>
<status status="PASS" starttime="20201029 12:49:39.739" endtime="20201029 12:49:39.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.759" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:49:39.756" endtime="20201029 12:49:39.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.765" level="INFO">VALUE: [0.00013358299999999962, 0.00013441599999999831, 0.00013466699999999804, 0.00013373600000000235, 0.00013433399999999984, 0.00013383299999999987, 0.00013408300000000012, 0.0001343479999999994, 0.00013429200000000113, 0.00013444399999999745, 0.00013469499999999718, 0.0001329310000000028, 0.000134264000000002, 0.00013500000000000317, 0.00013444500000000387, 0.00013462499999999933, 0.00013468100000000455, 0.00013383299999999987, 0.000134473000000003, 0.00013422200000000328, 0.00013461199999999923, 0.00013416699999999754, 0.0001340969999999997, 0.00013386100000000595, 0.00013419400000000414, 0.0001340280000000013, 0.00013404200000000088, 0.00013465299999999847, 0.00013398599999999566, 0.0001342080000000037, 0.0001341389999999984, 0.00013340300000000416, 0.00013418000000000457, 0.00013358299999999962, 0.00013422200000000328, 0.00013490299999999872, 0.0001337640000000015, 0.00013480500000000173, 0.0001338190000000003, 0.0001345840000000001, 0.00013395799999999652, 0.00013343099999999636, 0.000134861, 0.0001341389999999984, 0.00013406900000000055, 0.00013487499999999958, 0.00013454200000000138, 0.000134264000000002, 0.00013423600000000285, 0.00013418100000000405]</msg>
<status status="PASS" starttime="20201029 12:49:39.761" endtime="20201029 12:49:39.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.750" endtime="20201029 12:49:39.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:39.779" endtime="20201029 12:49:39.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.774" endtime="20201029 12:49:39.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.771" endtime="20201029 12:49:39.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.257" endtime="20201029 12:49:39.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.256" endtime="20201029 12:49:39.804"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.828" endtime="20201029 12:49:39.852"></status>
</kw>
<msg timestamp="20201029 12:49:39.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:39.824" endtime="20201029 12:49:39.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:39.856" endtime="20201029 12:49:39.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.862" endtime="20201029 12:49:39.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.817" endtime="20201029 12:49:39.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.811" endtime="20201029 12:49:39.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.886" endtime="20201029 12:49:40.243"></status>
</kw>
<msg timestamp="20201029 12:49:40.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04095725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0410925, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:49:39.883" endtime="20201029 12:49:40.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04095725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0410925, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:49:40.252" endtime="20201029 12:49:40.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.271" endtime="20201029 12:49:40.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.875" endtime="20201029 12:49:40.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.871" endtime="20201029 12:49:40.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:40.288" level="INFO">${RESULT} = [{'diff': 0.00013524999999999648}, {'diff': 0.00013566599999999956}, {'diff': 0.00013572200000000478}, {'diff': 0.00013506900000000155}, {'diff': 0.00013512499999999983}, {'diff': 0.000134056000000000...</msg>
<status status="PASS" starttime="20201029 12:49:40.280" endtime="20201029 12:49:40.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:40.298" level="INFO">${ACCURACY} = {'diff': [0.00013524999999999648, 0.00013566599999999956, 0.00013572200000000478, 0.00013506900000000155, 0.00013512499999999983, 0.00013405600000000045, 0.00013572200000000478, 0.0001350280000000023,...</msg>
<status status="PASS" starttime="20201029 12:49:40.291" endtime="20201029 12:49:40.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.309" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:49:40.306" endtime="20201029 12:49:40.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.314" level="INFO">VALUE: [0.00013524999999999648, 0.00013566599999999956, 0.00013572200000000478, 0.00013506900000000155, 0.00013512499999999983, 0.00013405600000000045, 0.00013572200000000478, 0.0001350280000000023, 0.00013594499999999843, 0.00013501400000000274, 0.00013504099999999547, 0.0001357640000000035, 0.00013566699999999904, 0.00013526399999999605, 0.00013570799999999827, 0.0001351519999999995, 0.00013581899999999536, 0.00013507000000000102, 0.00013520799999999777, 0.0001359440000000059, 0.00013569499999999818, 0.00013545799999999802, 0.00013544499999999793, 0.0001350689999999946, 0.0001353610000000005, 0.0001353060000000017, 0.0001359169999999993, 0.0001357080000000052, 0.00013477799999999512, 0.00013502799999999537, 0.00013520799999999777, 0.00013555600000000195, 0.00013408300000000012, 0.00013522199999999734, 0.00013577799999999612, 0.00013558300000000162, 0.00013536199999999998, 0.0001353060000000017, 0.00013516700000000548, 0.00013462499999999933, 0.00013558300000000162, 0.00013406900000000055, 0.00013475000000000292, 0.0001351939999999982, 0.00013594399999999895, 0.00013577699999999665, 0.0001349169999999983, 0.00013499999999999623, 0.00013429099999999472, 0.00013504199999999494]</msg>
<status status="PASS" starttime="20201029 12:49:40.311" endtime="20201029 12:49:40.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.299" endtime="20201029 12:49:40.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:40.327" endtime="20201029 12:49:40.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.322" endtime="20201029 12:49:40.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.320" endtime="20201029 12:49:40.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.807" endtime="20201029 12:49:40.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.805" endtime="20201029 12:49:40.352"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.377" endtime="20201029 12:49:40.402"></status>
</kw>
<msg timestamp="20201029 12:49:40.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:40.372" endtime="20201029 12:49:40.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:40.405" endtime="20201029 12:49:40.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.412" endtime="20201029 12:49:40.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.365" endtime="20201029 12:49:40.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.359" endtime="20201029 12:49:40.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.435" endtime="20201029 12:49:40.782"></status>
</kw>
<msg timestamp="20201029 12:49:40.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042123569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042260486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:40.432" endtime="20201029 12:49:40.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042123569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042260486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:40.792" endtime="20201029 12:49:40.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.810" endtime="20201029 12:49:40.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.425" endtime="20201029 12:49:40.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.420" endtime="20201029 12:49:40.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:40.829" level="INFO">${RESULT} = [{'diff': 0.0001369170000000003}, {'diff': 0.0001360689999999956}, {'diff': 0.00013574999999999698}, {'diff': 0.00013672300000000526}, {'diff': 0.00013665300000000047}, {'diff': 0.0001361809999999991}...</msg>
<status status="PASS" starttime="20201029 12:49:40.820" endtime="20201029 12:49:40.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:40.838" level="INFO">${ACCURACY} = {'diff': [0.0001369170000000003, 0.0001360689999999956, 0.00013574999999999698, 0.00013672300000000526, 0.00013665300000000047, 0.0001361809999999991, 0.00013648599999999816, 0.00013688799999999474, 0...</msg>
<status status="PASS" starttime="20201029 12:49:40.831" endtime="20201029 12:49:40.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.849" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:49:40.847" endtime="20201029 12:49:40.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.855" level="INFO">VALUE: [0.0001369170000000003, 0.0001360689999999956, 0.00013574999999999698, 0.00013672300000000526, 0.00013665300000000047, 0.0001361809999999991, 0.00013648599999999816, 0.00013688799999999474, 0.00013640300000000022, 0.00013558300000000162, 0.00013636200000000098, 0.00013599999999999723, 0.00013642999999999988, 0.00013632000000000227, 0.00013579100000000316, 0.0001360840000000016, 0.000136346999999995, 0.00013617999999999963, 0.00013605600000000245, 0.00013548599999999716, 0.00013649999999999773, 0.00013593099999999886, 0.00013668000000000013, 0.00013622199999999834, 0.00013592999999999938, 0.00013690300000000072, 0.00013604099999999647, 0.0001366939999999997, 0.0001353190000000018, 0.00013625000000000442, 0.00013545900000000444, 0.00013690300000000072, 0.0001350970000000007, 0.00013609699999999475, 0.0001362919999999962, 0.00013511100000000026, 0.00013527799999999562, 0.00013600000000000417, 0.00013619500000000562, 0.00013682000000000277, 0.00013637500000000108, 0.0001368469999999955, 0.00013645900000000544, 0.00013605500000000298, 0.00013612500000000083, 0.00013693000000000038, 0.00013670799999999927, 0.0001354440000000054, 0.00013644399999999945, 0.00013627800000000356]</msg>
<status status="PASS" starttime="20201029 12:49:40.852" endtime="20201029 12:49:40.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.840" endtime="20201029 12:49:40.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:40.873" endtime="20201029 12:49:40.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.863" endtime="20201029 12:49:40.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.861" endtime="20201029 12:49:40.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.354" endtime="20201029 12:49:40.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.353" endtime="20201029 12:49:40.898"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.921" endtime="20201029 12:49:40.944"></status>
</kw>
<msg timestamp="20201029 12:49:40.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:40.918" endtime="20201029 12:49:40.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:40.948" endtime="20201029 12:49:40.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.954" endtime="20201029 12:49:40.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.910" endtime="20201029 12:49:40.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.904" endtime="20201029 12:49:40.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.978" endtime="20201029 12:49:41.322"></status>
</kw>
<msg timestamp="20201029 12:49:41.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040481125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040618306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:40.974" endtime="20201029 12:49:41.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040481125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040618306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:41.331" endtime="20201029 12:49:41.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.350" endtime="20201029 12:49:41.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.967" endtime="20201029 12:49:41.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.962" endtime="20201029 12:49:41.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:41.367" level="INFO">${RESULT} = [{'diff': 0.0001371810000000001}, {'diff': 0.00013693000000000038}, {'diff': 0.00013762500000000233}, {'diff': 0.00013755599999999701}, {'diff': 0.00013777799999999812}, {'diff': 0.0001373610000000025...</msg>
<status status="PASS" starttime="20201029 12:49:41.358" endtime="20201029 12:49:41.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:41.378" level="INFO">${ACCURACY} = {'diff': [0.0001371810000000001, 0.00013693000000000038, 0.00013762500000000233, 0.00013755599999999701, 0.00013777799999999812, 0.0001373610000000025, 0.000137346999999996, 0.00013737500000000208, 0....</msg>
<status status="PASS" starttime="20201029 12:49:41.369" endtime="20201029 12:49:41.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.388" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:49:41.386" endtime="20201029 12:49:41.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.394" level="INFO">VALUE: [0.0001371810000000001, 0.00013693000000000038, 0.00013762500000000233, 0.00013755599999999701, 0.00013777799999999812, 0.0001373610000000025, 0.000137346999999996, 0.00013737500000000208, 0.00013786200000000248, 0.0001371810000000001, 0.0001368060000000032, 0.00013781999999999683, 0.00013716700000000054, 0.00013755500000000448, 0.0001371390000000014, 0.0001378469999999965, 0.00013679200000000363, 0.00013772199999999984, 0.00013751400000000524, 0.00013770800000000027, 0.00013751299999999883, 0.00013740300000000122, 0.00013797299999999957, 0.00013743100000000036, 0.00013786099999999607, 0.00013748599999999916, 0.00013744400000000045, 0.00013763799999999549, 0.00013802799999999837, 0.0001374719999999996, 0.00013794400000000095, 0.00013784799999999597, 0.00013661100000000176, 0.0001370139999999978, 0.0001375139999999983, 0.00013755600000000395, 0.00013797299999999957, 0.00013756999999999658, 0.00013649999999999773, 0.00013627800000000356, 0.00013770800000000027, 0.00013774999999999898, 0.00013732000000000327, 0.00013772299999999932, 0.00013711100000000226, 0.00013769500000000018, 0.00013783400000000334, 0.00013730500000000423, 0.00013762500000000233, 0.0001379170000000013]</msg>
<status status="PASS" starttime="20201029 12:49:41.391" endtime="20201029 12:49:41.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.379" endtime="20201029 12:49:41.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:41.407" endtime="20201029 12:49:41.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.402" endtime="20201029 12:49:41.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.400" endtime="20201029 12:49:41.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.900" endtime="20201029 12:49:41.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.899" endtime="20201029 12:49:41.432"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.455" endtime="20201029 12:49:41.478"></status>
</kw>
<msg timestamp="20201029 12:49:41.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:41.452" endtime="20201029 12:49:41.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:41.482" endtime="20201029 12:49:41.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.488" endtime="20201029 12:49:41.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.444" endtime="20201029 12:49:41.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.439" endtime="20201029 12:49:41.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.512" endtime="20201029 12:49:41.857"></status>
</kw>
<msg timestamp="20201029 12:49:41.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040225764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04036425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:41.509" endtime="20201029 12:49:41.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040225764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04036425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:41.867" endtime="20201029 12:49:41.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.886" endtime="20201029 12:49:41.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.501" endtime="20201029 12:49:41.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.496" endtime="20201029 12:49:41.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:41.903" level="INFO">${RESULT} = [{'diff': 0.00013848600000000016}, {'diff': 0.00013848600000000016}, {'diff': 0.00013863899999999596}, {'diff': 0.00013804199999999794}, {'diff': 0.00013877799999999912}, {'diff': 0.000138014000000005...</msg>
<status status="PASS" starttime="20201029 12:49:41.894" endtime="20201029 12:49:41.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:41.914" level="INFO">${ACCURACY} = {'diff': [0.00013848600000000016, 0.00013848600000000016, 0.00013863899999999596, 0.00013804199999999794, 0.00013877799999999912, 0.00013801400000000574, 0.00013841699999999485, 0.00013794400000000095...</msg>
<status status="PASS" starttime="20201029 12:49:41.905" endtime="20201029 12:49:41.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.925" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:49:41.923" endtime="20201029 12:49:41.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.931" level="INFO">VALUE: [0.00013848600000000016, 0.00013848600000000016, 0.00013863899999999596, 0.00013804199999999794, 0.00013877799999999912, 0.00013801400000000574, 0.00013841699999999485, 0.00013794400000000095, 0.00013820800000000077, 0.00013774999999999898, 0.00013787500000000258, 0.00013829099999999872, 0.00013795800000000052, 0.00013893100000000186, 0.00013813899999999546, 0.00013805599999999751, 0.00013838799999999624, 0.00013793100000000086, 0.00013868000000000213, 0.00013872200000000084, 0.00013879099999999922, 0.0001379720000000001, 0.00013870800000000127, 0.000138861000000004, 0.00013833400000000384, 0.00013820800000000077, 0.00013836200000000298, 0.0001379720000000001, 0.00013799999999999923, 0.00013822200000000034, 0.0001383049999999983, 0.00013884700000000444, 0.00013783299999999693, 0.00013712500000000183, 0.00013840300000000222, 0.00013872200000000084, 0.00013861100000000376, 0.00013849999999999973, 0.00013840300000000222, 0.00013869500000000118, 0.00013847199999999366, 0.00013822299999999982, 0.000138346999999997, 0.00013876399999999955, 0.00013822299999999982, 0.00013856999999999758, 0.00013874999999999998, 0.00013856999999999758, 0.00013831899999999786, 0.00013872200000000084]</msg>
<status status="PASS" starttime="20201029 12:49:41.928" endtime="20201029 12:49:41.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.916" endtime="20201029 12:49:41.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:41.944" endtime="20201029 12:49:41.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.939" endtime="20201029 12:49:41.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.937" endtime="20201029 12:49:41.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.434" endtime="20201029 12:49:41.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.433" endtime="20201029 12:49:41.969"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.992" endtime="20201029 12:49:42.017"></status>
</kw>
<msg timestamp="20201029 12:49:42.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:41.989" endtime="20201029 12:49:42.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:42.021" endtime="20201029 12:49:42.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.027" endtime="20201029 12:49:42.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.982" endtime="20201029 12:49:42.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.976" endtime="20201029 12:49:42.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.051" endtime="20201029 12:49:42.383"></status>
</kw>
<msg timestamp="20201029 12:49:42.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040466403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040605736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:42.048" endtime="20201029 12:49:42.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040466403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040605736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:42.392" endtime="20201029 12:49:42.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.410" endtime="20201029 12:49:42.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.040" endtime="20201029 12:49:42.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.036" endtime="20201029 12:49:42.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:42.427" level="INFO">${RESULT} = [{'diff': 0.00013933300000000537}, {'diff': 0.00013952799999999987}, {'diff': 0.00013904199999999894}, {'diff': 0.00013991699999999635}, {'diff': 0.0001396940000000027}, {'diff': 0.0001397919999999997...</msg>
<status status="PASS" starttime="20201029 12:49:42.419" endtime="20201029 12:49:42.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:42.436" level="INFO">${ACCURACY} = {'diff': [0.00013933300000000537, 0.00013952799999999987, 0.00013904199999999894, 0.00013991699999999635, 0.0001396940000000027, 0.0001397919999999997, 0.000139346999999998, 0.00013950000000000073, 0....</msg>
<status status="PASS" starttime="20201029 12:49:42.429" endtime="20201029 12:49:42.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.447" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:49:42.445" endtime="20201029 12:49:42.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.452" level="INFO">VALUE: [0.00013933300000000537, 0.00013952799999999987, 0.00013904199999999894, 0.00013991699999999635, 0.0001396940000000027, 0.0001397919999999997, 0.000139346999999998, 0.00013950000000000073, 0.0001396810000000026, 0.0001394170000000028, 0.00013933299999999843, 0.0001393190000000058, 0.00013900000000000023, 0.00013976400000000055, 0.00013994399999999602, 0.0001398889999999972, 0.0001384590000000005, 0.0001392219999999944, 0.00013952799999999987, 0.00013965300000000347, 0.00013916600000000307, 0.00013988799999999774, 0.00013915299999999603, 0.00013895800000000152, 0.0001398469999999985, 0.0001394170000000028, 0.000139346999999998, 0.00013919500000000168, 0.00013841600000000231, 0.00013940299999999628, 0.0001390689999999986, 0.00013926400000000005, 0.0001397919999999997, 0.00013937499999999714, 0.0001394170000000028, 0.00013927799999999962, 0.00013987500000000458, 0.00013961099999999782, 0.00013829100000000566, 0.0001390269999999999, 0.0001393610000000045, 0.00013911200000000373, 0.00013972300000000132, 0.00013952799999999987, 0.00013925000000000048, 0.00013887500000000358, 0.00013919399999999527, 0.00013922200000000134, 0.00013970800000000227, 0.0001398889999999972]</msg>
<status status="PASS" starttime="20201029 12:49:42.449" endtime="20201029 12:49:42.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.438" endtime="20201029 12:49:42.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:42.465" endtime="20201029 12:49:42.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.460" endtime="20201029 12:49:42.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.458" endtime="20201029 12:49:42.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.971" endtime="20201029 12:49:42.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.970" endtime="20201029 12:49:42.489"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.512" endtime="20201029 12:49:42.534"></status>
</kw>
<msg timestamp="20201029 12:49:42.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:42.508" endtime="20201029 12:49:42.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:42.537" endtime="20201029 12:49:42.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.544" endtime="20201029 12:49:42.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.501" endtime="20201029 12:49:42.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.496" endtime="20201029 12:49:42.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.567" endtime="20201029 12:49:42.901"></status>
</kw>
<msg timestamp="20201029 12:49:42.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040546875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040687097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:42.564" endtime="20201029 12:49:42.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040546875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040687097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:42.911" endtime="20201029 12:49:42.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.930" endtime="20201029 12:49:42.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.556" endtime="20201029 12:49:42.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.552" endtime="20201029 12:49:42.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:42.947" level="INFO">${RESULT} = [{'diff': 0.0001402219999999954}, {'diff': 0.00014076400000000155}, {'diff': 0.0001393339999999979}, {'diff': 0.0001398049999999998}, {'diff': 0.00014015299999999703}, {'diff': 0.0001401799999999967},...</msg>
<status status="PASS" starttime="20201029 12:49:42.938" endtime="20201029 12:49:42.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:42.956" level="INFO">${ACCURACY} = {'diff': [0.0001402219999999954, 0.00014076400000000155, 0.0001393339999999979, 0.0001398049999999998, 0.00014015299999999703, 0.0001401799999999967, 0.00014008299999999918, 0.0001408889999999982, 0.0...</msg>
<status status="PASS" starttime="20201029 12:49:42.949" endtime="20201029 12:49:42.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.967" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:49:42.965" endtime="20201029 12:49:42.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.973" level="INFO">VALUE: [0.0001402219999999954, 0.00014076400000000155, 0.0001393339999999979, 0.0001398049999999998, 0.00014015299999999703, 0.0001401799999999967, 0.00014008299999999918, 0.0001408889999999982, 0.0001399999999999943, 0.00014004199999999994, 0.00014047299999999513, 0.00014030599999999976, 0.00014008299999999918, 0.00014020900000000225, 0.00014061100000000576, 0.00014061099999999882, 0.00014022200000000234, 0.00014005599999999951, 0.00014073600000000241, 0.00014075000000000198, 0.00013893099999999492, 0.00014077800000000112, 0.00014005500000000004, 0.00013990300000000372, 0.00014030599999999976, 0.0001402219999999954, 0.00013957000000000552, 0.00014013899999999746, 0.00014015299999999703, 0.0001399999999999943, 0.0001406810000000036, 0.00014005599999999951, 0.0001401940000000032, 0.00014020800000000277, 0.00014029100000000072, 0.00013994400000000295, 0.0001405690000000001, 0.00014022200000000234, 0.0001405140000000013, 0.00014025000000000148, 0.00014048600000000216, 0.00013926400000000005, 0.0001398469999999985, 0.00014055500000000054, 0.00014027800000000062, 0.00014047300000000207, 0.00014023600000000191, 0.0001401669999999966, 0.00014026400000000105, 0.0001398469999999985]</msg>
<status status="PASS" starttime="20201029 12:49:42.970" endtime="20201029 12:49:42.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.958" endtime="20201029 12:49:42.976"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:42.987" endtime="20201029 12:49:43.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.981" endtime="20201029 12:49:43.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.979" endtime="20201029 12:49:43.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.491" endtime="20201029 12:49:43.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.490" endtime="20201029 12:49:43.013"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.036" endtime="20201029 12:49:43.059"></status>
</kw>
<msg timestamp="20201029 12:49:43.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:43.032" endtime="20201029 12:49:43.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:43.063" endtime="20201029 12:49:43.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.069" endtime="20201029 12:49:43.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.025" endtime="20201029 12:49:43.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.019" endtime="20201029 12:49:43.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.093" endtime="20201029 12:49:43.435"></status>
</kw>
<msg timestamp="20201029 12:49:43.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040353069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040494819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:43.089" endtime="20201029 12:49:43.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040353069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040494819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:43.445" endtime="20201029 12:49:43.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.463" endtime="20201029 12:49:43.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.082" endtime="20201029 12:49:43.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.077" endtime="20201029 12:49:43.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:43.481" level="INFO">${RESULT} = [{'diff': 0.00014175000000000298}, {'diff': 0.00014193099999999792}, {'diff': 0.00014133300000000043}, {'diff': 0.00014097199999999616}, {'diff': 0.00014191599999999888}, {'diff': 0.000141166999999997...</msg>
<status status="PASS" starttime="20201029 12:49:43.472" endtime="20201029 12:49:43.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:43.491" level="INFO">${ACCURACY} = {'diff': [0.00014175000000000298, 0.00014193099999999792, 0.00014133300000000043, 0.00014097199999999616, 0.00014191599999999888, 0.0001411669999999976, 0.00014105500000000104, 0.0001419019999999993, ...</msg>
<status status="PASS" starttime="20201029 12:49:43.483" endtime="20201029 12:49:43.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.502" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:49:43.500" endtime="20201029 12:49:43.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.508" level="INFO">VALUE: [0.00014175000000000298, 0.00014193099999999792, 0.00014133300000000043, 0.00014097199999999616, 0.00014191599999999888, 0.0001411669999999976, 0.00014105500000000104, 0.0001419019999999993, 0.00014177800000000212, 0.00014158400000000015, 0.00014105599999999358, 0.00014155500000000154, 0.0001413050000000013, 0.0001418889999999992, 0.000141347, 0.0001410140000000018, 0.00014195799999999759, 0.00014181900000000136, 0.0001416669999999981, 0.00014111099999999932, 0.00014104200000000094, 0.0001416799999999982, 0.00014012500000000483, 0.00014111099999999932, 0.00014115300000000497, 0.00014158300000000068, 0.00014138900000000565, 0.00014107000000000008, 0.00014123599999999598, 0.000141347, 0.00014105500000000104, 0.00014143000000000489, 0.0001411119999999988, 0.00014086099999999907, 0.00014175000000000298, 0.00014104200000000094, 0.0001410690000000006, 0.0001409720000000031, 0.00014031899999999986, 0.00014044400000000345, 0.00014097199999999616, 0.00014058299999999968, 0.00014127799999999469, 0.00014044500000000293, 0.00014179100000000222, 0.00014077800000000112, 0.0001415419999999945, 0.00014102800000000137, 0.00014159700000000025, 0.00014126400000000205]</msg>
<status status="PASS" starttime="20201029 12:49:43.505" endtime="20201029 12:49:43.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.493" endtime="20201029 12:49:43.511"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:43.520" endtime="20201029 12:49:43.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.516" endtime="20201029 12:49:43.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.513" endtime="20201029 12:49:43.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.015" endtime="20201029 12:49:43.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.014" endtime="20201029 12:49:43.546"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.569" endtime="20201029 12:49:43.593"></status>
</kw>
<msg timestamp="20201029 12:49:43.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:43.565" endtime="20201029 12:49:43.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:43.596" endtime="20201029 12:49:43.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.603" endtime="20201029 12:49:43.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.558" endtime="20201029 12:49:43.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.552" endtime="20201029 12:49:43.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.626" endtime="20201029 12:49:43.972"></status>
</kw>
<msg timestamp="20201029 12:49:43.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040447236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040589556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:43.623" endtime="20201029 12:49:43.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040447236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040589556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:43.981" endtime="20201029 12:49:43.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.000" endtime="20201029 12:49:44.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.616" endtime="20201029 12:49:44.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.611" endtime="20201029 12:49:44.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:44.017" level="INFO">${RESULT} = [{'diff': 0.00014232000000000133}, {'diff': 0.0001421669999999986}, {'diff': 0.0001423889999999997}, {'diff': 0.0001427219999999979}, {'diff': 0.00014225000000000348}, {'diff': 0.00014227799999999569}...</msg>
<status status="PASS" starttime="20201029 12:49:44.008" endtime="20201029 12:49:44.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:44.028" level="INFO">${ACCURACY} = {'diff': [0.00014232000000000133, 0.0001421669999999986, 0.0001423889999999997, 0.0001427219999999979, 0.00014225000000000348, 0.00014227799999999569, 0.0001426669999999991, 0.00014252800000000287, 0....</msg>
<status status="PASS" starttime="20201029 12:49:44.019" endtime="20201029 12:49:44.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.039" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:49:44.037" endtime="20201029 12:49:44.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.045" level="INFO">VALUE: [0.00014232000000000133, 0.0001421669999999986, 0.0001423889999999997, 0.0001427219999999979, 0.00014225000000000348, 0.00014227799999999569, 0.0001426669999999991, 0.00014252800000000287, 0.00014241699999999885, 0.0001421799999999987, 0.0001423340000000009, 0.0001419170000000053, 0.00014226400000000305, 0.00014209800000000022, 0.00014265299999999953, 0.0001426669999999991, 0.00014222200000000434, 0.00014241699999999885, 0.00014193099999999792, 0.00014202800000000237, 0.0001421799999999987, 0.0001424590000000045, 0.00014262499999999345, 0.00014216599999999913, 0.00014265299999999953, 0.0001419720000000041, 0.00014209700000000075, 0.0001418889999999992, 0.00014213899999999946, 0.00014198599999999673, 0.00014237500000000014, 0.00014204100000000247, 0.00014281899999999542, 0.00014277799999999619, 0.00014242999999999895, 0.00014144400000000446, 0.0001428890000000002, 0.0001411249999999989, 0.00014263899999999996, 0.00014280599999999533, 0.00014223599999999698, 0.0001421249999999999, 0.0001428890000000002, 0.00014198599999999673, 0.00014220800000000478, 0.00014200000000000323, 0.00014159799999999972, 0.000142444999999998, 0.0001427219999999979, 0.0001426940000000057]</msg>
<status status="PASS" starttime="20201029 12:49:44.042" endtime="20201029 12:49:44.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.030" endtime="20201029 12:49:44.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:44.062" endtime="20201029 12:49:44.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.058" endtime="20201029 12:49:44.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.055" endtime="20201029 12:49:44.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.548" endtime="20201029 12:49:44.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.547" endtime="20201029 12:49:44.089"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.128" endtime="20201029 12:49:44.150"></status>
</kw>
<msg timestamp="20201029 12:49:44.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:44.124" endtime="20201029 12:49:44.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:44.153" endtime="20201029 12:49:44.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.160" endtime="20201029 12:49:44.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.114" endtime="20201029 12:49:44.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.107" endtime="20201029 12:49:44.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.183" endtime="20201029 12:49:44.530"></status>
</kw>
<msg timestamp="20201029 12:49:44.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.05847875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058622208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:44.180" endtime="20201029 12:49:44.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.05847875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058622208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:44.539" endtime="20201029 12:49:44.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.558" endtime="20201029 12:49:44.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.173" endtime="20201029 12:49:44.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.168" endtime="20201029 12:49:44.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:44.575" level="INFO">${RESULT} = [{'diff': 0.00014345799999999909}, {'diff': 0.00014313900000000046}, {'diff': 0.00014308300000000218}, {'diff': 0.0001437769999999977}, {'diff': 0.0001434999999999978}, {'diff': 0.00014313900000000046...</msg>
<status status="PASS" starttime="20201029 12:49:44.566" endtime="20201029 12:49:44.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:44.584" level="INFO">${ACCURACY} = {'diff': [0.00014345799999999909, 0.00014313900000000046, 0.00014308300000000218, 0.0001437769999999977, 0.0001434999999999978, 0.00014313900000000046, 0.00014326399999999712, 0.0001436250000000014, 0...</msg>
<status status="PASS" starttime="20201029 12:49:44.577" endtime="20201029 12:49:44.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.595" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:49:44.593" endtime="20201029 12:49:44.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.600" level="INFO">VALUE: [0.00014345799999999909, 0.00014313900000000046, 0.00014308300000000218, 0.0001437769999999977, 0.0001434999999999978, 0.00014313900000000046, 0.00014326399999999712, 0.0001436250000000014, 0.00014330499999999635, 0.00014351300000000483, 0.00014379099999999728, 0.00014311100000000132, 0.00014319399999999927, 0.00014323599999999798, 0.00014329199999999626, 0.0001429999999999973, 0.00014337500000000114, 0.00014280599999999533, 0.00014381900000000336, 0.00014326399999999712, 0.00014302800000000337, 0.00014386100000000207, 0.00014330599999999583, 0.0001436670000000001, 0.00014298599999999773, 0.000142832999999995, 0.00014231899999999492, 0.00014295799999999859, 0.0001434169999999929, 0.00014306999999999515, 0.0001436380000000015, 0.00014301399999999687, 0.00014287500000000064, 0.00014381900000000336, 0.000143347000000002, 0.00014390300000000078, 0.00014307000000000902, 0.00014351400000001124, 0.00014326400000000405, 0.0001434860000000121, 0.00014308399999998778, 0.00014326399999999018, 0.0001438470000000025, 0.00014312499999999395, 0.00014347199999999172, 0.00014326399999999018, 0.00014288899999999327, 0.000143041999999996, 0.00014211100000000032, 0.0001431810000000061]</msg>
<status status="PASS" starttime="20201029 12:49:44.597" endtime="20201029 12:49:44.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.586" endtime="20201029 12:49:44.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:44.614" endtime="20201029 12:49:44.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.609" endtime="20201029 12:49:44.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.606" endtime="20201029 12:49:44.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.093" endtime="20201029 12:49:44.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.090" endtime="20201029 12:49:44.640"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.662" endtime="20201029 12:49:44.687"></status>
</kw>
<msg timestamp="20201029 12:49:44.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:44.659" endtime="20201029 12:49:44.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:44.691" endtime="20201029 12:49:44.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.697" endtime="20201029 12:49:44.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.652" endtime="20201029 12:49:44.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.646" endtime="20201029 12:49:44.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.728" endtime="20201029 12:49:45.078"></status>
</kw>
<msg timestamp="20201029 12:49:45.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041544639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041688722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:44.724" endtime="20201029 12:49:45.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041544639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041688722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:45.087" endtime="20201029 12:49:45.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.106" endtime="20201029 12:49:45.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.712" endtime="20201029 12:49:45.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.705" endtime="20201029 12:49:45.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:45.123" level="INFO">${RESULT} = [{'diff': 0.00014408299999999624}, {'diff': 0.00014415300000000103}, {'diff': 0.00014419499999999974}, {'diff': 0.00014424999999999855}, {'diff': 0.00014468100000000067}, {'diff': 0.000144111000000002...</msg>
<status status="PASS" starttime="20201029 12:49:45.114" endtime="20201029 12:49:45.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:45.132" level="INFO">${ACCURACY} = {'diff': [0.00014408299999999624, 0.00014415300000000103, 0.00014419499999999974, 0.00014424999999999855, 0.00014468100000000067, 0.00014411100000000232, 0.00014476299999999914, 0.00014445899999999956...</msg>
<status status="PASS" starttime="20201029 12:49:45.125" endtime="20201029 12:49:45.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.143" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:49:45.141" endtime="20201029 12:49:45.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.148" level="INFO">VALUE: [0.00014408299999999624, 0.00014415300000000103, 0.00014419499999999974, 0.00014424999999999855, 0.00014468100000000067, 0.00014411100000000232, 0.00014476299999999914, 0.00014445899999999956, 0.00014393099999999992, 0.00014441700000000085, 0.00014431899999999692, 0.00014386200000000154, 0.00014397299999999863, 0.0001446250000000024, 0.00014493100000000092, 0.00014474999999999905, 0.00014386100000000207, 0.0001445969999999963, 0.00014443000000000095, 0.00014405599999999658, 0.00014470800000000034, 0.00014424999999999855, 0.00014365300000000053, 0.00014365300000000053, 0.00014451399999999837, 0.00014444400000000052, 0.00014298599999999773, 0.00014315300000000003, 0.00014469500000000024, 0.00014329199999999626, 0.00014402799999999744, 0.00014382000000000283, 0.00014424999999999855, 0.00014455599999999708, 0.00014448599999999923, 0.0001446120000000023, 0.0001443329999999965, 0.0001441120000000018, 0.00014408299999999624, 0.00014443100000000042, 0.0001444590000000065, 0.00014432000000000333, 0.0001443890000000017, 0.0001445549999999976, 0.0001447920000000047, 0.00014341699999999985, 0.00014458300000000368, 0.00014441700000000085, 0.00014468100000000067, 0.00014451399999999837]</msg>
<status status="PASS" starttime="20201029 12:49:45.145" endtime="20201029 12:49:45.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.134" endtime="20201029 12:49:45.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:45.162" endtime="20201029 12:49:45.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.157" endtime="20201029 12:49:45.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.154" endtime="20201029 12:49:45.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.642" endtime="20201029 12:49:45.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.641" endtime="20201029 12:49:45.188"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.211" endtime="20201029 12:49:45.234"></status>
</kw>
<msg timestamp="20201029 12:49:45.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:45.207" endtime="20201029 12:49:45.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:45.238" endtime="20201029 12:49:45.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.244" endtime="20201029 12:49:45.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.200" endtime="20201029 12:49:45.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.194" endtime="20201029 12:49:45.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.267" endtime="20201029 12:49:45.614"></status>
</kw>
<msg timestamp="20201029 12:49:45.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040528653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040673903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:45.264" endtime="20201029 12:49:45.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040528653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040673903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:45.623" endtime="20201029 12:49:45.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.643" endtime="20201029 12:49:45.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.257" endtime="20201029 12:49:45.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.252" endtime="20201029 12:49:45.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:45.662" level="INFO">${RESULT} = [{'diff': 0.00014524999999999955}, {'diff': 0.00014534799999999654}, {'diff': 0.0001444020000000018}, {'diff': 0.00014550000000000674}, {'diff': 0.00014448599999999923}, {'diff': 0.0001453880000000032...</msg>
<status status="PASS" starttime="20201029 12:49:45.653" endtime="20201029 12:49:45.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:45.672" level="INFO">${ACCURACY} = {'diff': [0.00014524999999999955, 0.00014534799999999654, 0.0001444020000000018, 0.00014550000000000674, 0.00014448599999999923, 0.00014538800000000324, 0.0001453890000000027, 0.00014581899999999842, ...</msg>
<status status="PASS" starttime="20201029 12:49:45.664" endtime="20201029 12:49:45.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.683" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:49:45.681" endtime="20201029 12:49:45.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.689" level="INFO">VALUE: [0.00014524999999999955, 0.00014534799999999654, 0.0001444020000000018, 0.00014550000000000674, 0.00014448599999999923, 0.00014538800000000324, 0.0001453890000000027, 0.00014581899999999842, 0.00014533399999999697, 0.00014486100000000307, 0.00014534800000000347, 0.0001453890000000027, 0.00014543000000000195, 0.00014498599999999973, 0.00014495900000000006, 0.00014430600000000376, 0.00014551399999999937, 0.0001455549999999986, 0.00014508299999999724, 0.00014461099999999588, 0.0001449999999999993, 0.00014519400000000127, 0.0001448470000000035, 0.00014551399999999937, 0.00014565300000000253, 0.00014479099999999828, 0.0001443050000000043, 0.0001452090000000003, 0.0001455419999999985, 0.00014558399999999722, 0.00014486100000000307, 0.00014483399999999647, 0.0001456670000000021, 0.0001457920000000057, 0.00014536099999999663, 0.00014415300000000103, 0.00014554200000000544, 0.00014529199999999826, 0.0001451529999999951, 0.00014484699999999656, 0.00014562499999999645, 0.0001455549999999986, 0.0001448199999999969, 0.0001454169999999949, 0.000145445000000001, 0.00014561100000000382, 0.0001444999999999988, 0.00014597199999999422, 0.0001451670000000016, 0.0001453890000000027]</msg>
<status status="PASS" starttime="20201029 12:49:45.686" endtime="20201029 12:49:45.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.674" endtime="20201029 12:49:45.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:45.701" endtime="20201029 12:49:45.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.697" endtime="20201029 12:49:45.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.695" endtime="20201029 12:49:45.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.190" endtime="20201029 12:49:45.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.189" endtime="20201029 12:49:45.727"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.750" endtime="20201029 12:49:45.773"></status>
</kw>
<msg timestamp="20201029 12:49:45.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:45.746" endtime="20201029 12:49:45.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:45.777" endtime="20201029 12:49:45.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.783" endtime="20201029 12:49:45.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.739" endtime="20201029 12:49:45.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.733" endtime="20201029 12:49:45.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.806" endtime="20201029 12:49:46.152"></status>
</kw>
<msg timestamp="20201029 12:49:46.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040364181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040510153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:45.803" endtime="20201029 12:49:46.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040364181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040510153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:46.161" endtime="20201029 12:49:46.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.179" endtime="20201029 12:49:46.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.796" endtime="20201029 12:49:46.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.791" endtime="20201029 12:49:46.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:46.196" level="INFO">${RESULT} = [{'diff': 0.00014597200000000116}, {'diff': 0.00014656899999999917}, {'diff': 0.00014547200000000066}, {'diff': 0.00014641600000000338}, {'diff': 0.00014677800000000019}, {'diff': 0.000146360999999997...</msg>
<status status="PASS" starttime="20201029 12:49:46.188" endtime="20201029 12:49:46.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:46.211" level="INFO">${ACCURACY} = {'diff': [0.00014597200000000116, 0.00014656899999999917, 0.00014547200000000066, 0.00014641600000000338, 0.00014677800000000019, 0.00014636099999999763, 0.00014584799999999704, 0.00014590300000000278...</msg>
<status status="PASS" starttime="20201029 12:49:46.198" endtime="20201029 12:49:46.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.222" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:49:46.220" endtime="20201029 12:49:46.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.227" level="INFO">VALUE: [0.00014597200000000116, 0.00014656899999999917, 0.00014547200000000066, 0.00014641600000000338, 0.00014677800000000019, 0.00014636099999999763, 0.00014584799999999704, 0.00014590300000000278, 0.0001465969999999983, 0.00014618099999999523, 0.0001464169999999959, 0.00014640299999999634, 0.00014625000000000055, 0.00014641600000000338, 0.0001459299999999955, 0.00014597200000000116, 0.0001458749999999967, 0.00014626300000000064, 0.0001458050000000058, 0.00014631899999999892, 0.00014617999999999576, 0.00014634699999999806, 0.0001463890000000037, 0.00014661099999999788, 0.00014612499999999695, 0.0001454999999999998, 0.00014677800000000019, 0.00014581899999999842, 0.00014617999999999576, 0.00014616699999999566, 0.00014681899999999942, 0.00014625000000000055, 0.00014645899999999462, 0.00014636099999999763, 0.0001462090000000013, 0.00014670899999999487, 0.00014629199999999926, 0.00014688899999999727, 0.00014661099999999788, 0.00014669399999999583, 0.00014613899999999652, 0.00014690299999999684, 0.00014629199999999926, 0.0001465000000000008, 0.00014617999999999576, 0.00014686099999999813, 0.00014683300000000593, 0.00014576300000000014, 0.00014598600000000073, 0.0001465419999999995]</msg>
<status status="PASS" starttime="20201029 12:49:46.224" endtime="20201029 12:49:46.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.213" endtime="20201029 12:49:46.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:46.240" endtime="20201029 12:49:46.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.235" endtime="20201029 12:49:46.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.233" endtime="20201029 12:49:46.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.729" endtime="20201029 12:49:46.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.728" endtime="20201029 12:49:46.265"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.288" endtime="20201029 12:49:46.311"></status>
</kw>
<msg timestamp="20201029 12:49:46.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:46.285" endtime="20201029 12:49:46.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:46.315" endtime="20201029 12:49:46.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.321" endtime="20201029 12:49:46.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.277" endtime="20201029 12:49:46.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.271" endtime="20201029 12:49:46.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.345" endtime="20201029 12:49:46.692"></status>
</kw>
<msg timestamp="20201029 12:49:46.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040074444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040222153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:46.341" endtime="20201029 12:49:46.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040074444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040222153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:46.701" endtime="20201029 12:49:46.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.720" endtime="20201029 12:49:46.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.334" endtime="20201029 12:49:46.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.329" endtime="20201029 12:49:46.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:46.737" level="INFO">${RESULT} = [{'diff': 0.00014770899999999587}, {'diff': 0.00014784799999999904}, {'diff': 0.000147429999999997}, {'diff': 0.0001468890000000042}, {'diff': 0.00014752800000000094}, {'diff': 0.00014740299999999734}...</msg>
<status status="PASS" starttime="20201029 12:49:46.728" endtime="20201029 12:49:46.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:46.746" level="INFO">${ACCURACY} = {'diff': [0.00014770899999999587, 0.00014784799999999904, 0.000147429999999997, 0.0001468890000000042, 0.00014752800000000094, 0.00014740299999999734, 0.00014770800000000334, 0.000147445000000003, 0.0...</msg>
<status status="PASS" starttime="20201029 12:49:46.739" endtime="20201029 12:49:46.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.757" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:49:46.754" endtime="20201029 12:49:46.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.762" level="INFO">VALUE: [0.00014770899999999587, 0.00014784799999999904, 0.000147429999999997, 0.0001468890000000042, 0.00014752800000000094, 0.00014740299999999734, 0.00014770800000000334, 0.000147445000000003, 0.00014725000000000155, 0.0001477220000000029, 0.0001476800000000042, 0.00014775000000000205, 0.00014727800000000069, 0.00014787500000000564, 0.00014734699999999906, 0.00014737500000000514, 0.00014712499999999795, 0.00014765199999999812, 0.00014702800000000044, 0.00014748600000000223, 0.0001475969999999993, 0.0001477499999999951, 0.00014725000000000155, 0.00014755600000000008, 0.0001470550000000001, 0.00014769399999999683, 0.00014744399999999658, 0.00014740299999999734, 0.00014773599999999554, 0.00014688899999999727, 0.00014729099999999384, 0.00014727800000000069, 0.0001468890000000042, 0.00014776400000000162, 0.00014691700000000335, 0.0001473749999999982, 0.00014748600000000223, 0.0001476250000000054, 0.00014779100000000128, 0.00014762499999999845, 0.00014632000000000533, 0.00014745900000000256, 0.00014769399999999683, 0.00014772199999999597, 0.0001468619999999976, 0.00014740300000000428, 0.00014756900000000017, 0.00014697200000000216, 0.00014611100000000432, 0.00014738899999999777]</msg>
<status status="PASS" starttime="20201029 12:49:46.759" endtime="20201029 12:49:46.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.747" endtime="20201029 12:49:46.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:46.774" endtime="20201029 12:49:46.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.770" endtime="20201029 12:49:46.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.768" endtime="20201029 12:49:46.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.267" endtime="20201029 12:49:46.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.266" endtime="20201029 12:49:46.800"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.822" endtime="20201029 12:49:46.845"></status>
</kw>
<msg timestamp="20201029 12:49:46.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:46.819" endtime="20201029 12:49:46.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:46.849" endtime="20201029 12:49:46.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.855" endtime="20201029 12:49:46.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.812" endtime="20201029 12:49:46.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.806" endtime="20201029 12:49:46.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.878" endtime="20201029 12:49:47.218"></status>
</kw>
<msg timestamp="20201029 12:49:47.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041127319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041274972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:46.875" endtime="20201029 12:49:47.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041127319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041274972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:47.227" endtime="20201029 12:49:47.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.245" endtime="20201029 12:49:47.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.867" endtime="20201029 12:49:47.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.863" endtime="20201029 12:49:47.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:47.263" level="INFO">${RESULT} = [{'diff': 0.0001476529999999976}, {'diff': 0.00014798600000000273}, {'diff': 0.0001481800000000047}, {'diff': 0.00014780500000000085}, {'diff': 0.00014856899999999423}, {'diff': 0.00014851399999999543...</msg>
<status status="PASS" starttime="20201029 12:49:47.254" endtime="20201029 12:49:47.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:47.272" level="INFO">${ACCURACY} = {'diff': [0.0001476529999999976, 0.00014798600000000273, 0.0001481800000000047, 0.00014780500000000085, 0.00014856899999999423, 0.00014851399999999543, 0.00014808300000000024, 0.00014791599999999794, ...</msg>
<status status="PASS" starttime="20201029 12:49:47.265" endtime="20201029 12:49:47.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.283" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:49:47.280" endtime="20201029 12:49:47.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.288" level="INFO">VALUE: [0.0001476529999999976, 0.00014798600000000273, 0.0001481800000000047, 0.00014780500000000085, 0.00014856899999999423, 0.00014851399999999543, 0.00014808300000000024, 0.00014791599999999794, 0.00014848600000000323, 0.00014801399999999493, 0.00014851400000000237, 0.00014854199999999457, 0.00014794499999999655, 0.00014802700000000196, 0.00014866699999999816, 0.0001482220000000034, 0.0001484870000000027, 0.00014862499999999945, 0.000148042000000001, 0.00014815200000000556, 0.00014861199999999936, 0.00014834700000000006, 0.00014784699999999956, 0.000148833000000001, 0.00014844399999999758, 0.0001485000000000028, 0.00014793100000000392, 0.00014879199999999482, 0.0001482079999999969, 0.00014869400000000477, 0.00014708399999999872, 0.0001480000000000023, 0.00014762499999999845, 0.0001480969999999998, 0.00014867999999999826, 0.00014802800000000144, 0.0001483619999999991, 0.00014817999999999776, 0.0001478749999999987, 0.00014884700000000056, 0.00014827799999999475, 0.00014829200000000126, 0.0001487079999999974, 0.00014808300000000024, 0.0001480130000000024, 0.0001487079999999974, 0.00014838899999999877, 0.00014798600000000273, 0.00014840199999999887, 0.0001483879999999993]</msg>
<status status="PASS" starttime="20201029 12:49:47.285" endtime="20201029 12:49:47.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.273" endtime="20201029 12:49:47.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:47.302" endtime="20201029 12:49:47.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.296" endtime="20201029 12:49:47.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.294" endtime="20201029 12:49:47.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.802" endtime="20201029 12:49:47.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.801" endtime="20201029 12:49:47.327"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.350" endtime="20201029 12:49:47.372"></status>
</kw>
<msg timestamp="20201029 12:49:47.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:47.347" endtime="20201029 12:49:47.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:47.375" endtime="20201029 12:49:47.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.381" endtime="20201029 12:49:47.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.339" endtime="20201029 12:49:47.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.334" endtime="20201029 12:49:47.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.405" endtime="20201029 12:49:47.737"></status>
</kw>
<msg timestamp="20201029 12:49:47.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039973194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040122819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:47.401" endtime="20201029 12:49:47.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039973194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040122819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:47.746" endtime="20201029 12:49:47.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.765" endtime="20201029 12:49:47.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.394" endtime="20201029 12:49:47.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.390" endtime="20201029 12:49:47.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:47.782" level="INFO">${RESULT} = [{'diff': 0.00014962500000000045}, {'diff': 0.0001491529999999991}, {'diff': 0.00014908300000000124}, {'diff': 0.000148833000000001}, {'diff': 0.00014986100000000113}, {'diff': 0.00014963900000000002}...</msg>
<status status="PASS" starttime="20201029 12:49:47.773" endtime="20201029 12:49:47.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:47.792" level="INFO">${ACCURACY} = {'diff': [0.00014962500000000045, 0.0001491529999999991, 0.00014908300000000124, 0.000148833000000001, 0.00014986100000000113, 0.00014963900000000002, 0.00014911199999999986, 0.00014901400000000287, 0...</msg>
<status status="PASS" starttime="20201029 12:49:47.784" endtime="20201029 12:49:47.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.803" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:49:47.801" endtime="20201029 12:49:47.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.808" level="INFO">VALUE: [0.00014962500000000045, 0.0001491529999999991, 0.00014908300000000124, 0.000148833000000001, 0.00014986100000000113, 0.00014963900000000002, 0.00014911199999999986, 0.00014901400000000287, 0.00014863899999999902, 0.00014940299999999934, 0.0001490970000000008, 0.00014938899999999977, 0.00014980600000000233, 0.0001492220000000044, 0.00014980600000000233, 0.0001492220000000044, 0.00014851400000000237, 0.00014983400000000147, 0.00014919400000000527, 0.00014919500000000474, 0.0001498200000000019, 0.0001494859999999973, 0.0001490970000000008, 0.00014940299999999934, 0.00014943099999999848, 0.00014938899999999977, 0.00014933299999999455, 0.00014936100000000063, 0.00014944399999999858, 0.0001496529999999996, 0.00014972199999999797, 0.0001481949999999968, 0.00014922300000000388, 0.00014980499999999591, 0.00014898600000000373, 0.0001497499999999971, 0.00014927699999999627, 0.00014890299999999884, 0.000150042000000003, 0.0001492220000000044, 0.00014911100000000038, 0.00014904199999999507, 0.00014987499999999376, 0.00014952800000000294, 0.00014931900000000192, 0.00014948600000000423, 0.00014988900000000027, 0.000149042000000002, 0.00014965200000000012, 0.000149833000000002]</msg>
<status status="PASS" starttime="20201029 12:49:47.806" endtime="20201029 12:49:47.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.794" endtime="20201029 12:49:47.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:47.821" endtime="20201029 12:49:47.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.817" endtime="20201029 12:49:47.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.814" endtime="20201029 12:49:47.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.329" endtime="20201029 12:49:47.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.328" endtime="20201029 12:49:47.846"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.869" endtime="20201029 12:49:47.891"></status>
</kw>
<msg timestamp="20201029 12:49:47.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:47.866" endtime="20201029 12:49:47.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:47.894" endtime="20201029 12:49:47.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.900" endtime="20201029 12:49:47.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.858" endtime="20201029 12:49:47.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.853" endtime="20201029 12:49:47.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.924" endtime="20201029 12:49:48.265"></status>
</kw>
<msg timestamp="20201029 12:49:48.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039648833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039799042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:47.920" endtime="20201029 12:49:48.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039648833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039799042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:48.275" endtime="20201029 12:49:48.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.293" endtime="20201029 12:49:48.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.913" endtime="20201029 12:49:48.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.908" endtime="20201029 12:49:48.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:48.310" level="INFO">${RESULT} = [{'diff': 0.00015020899999999837}, {'diff': 0.00015040300000000034}, {'diff': 0.00015004199999999607}, {'diff': 0.0001506949999999993}, {'diff': 0.00015066700000000016}, {'diff': 0.0001504439999999995...</msg>
<status status="PASS" starttime="20201029 12:49:48.301" endtime="20201029 12:49:48.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:48.321" level="INFO">${ACCURACY} = {'diff': [0.00015020899999999837, 0.00015040300000000034, 0.00015004199999999607, 0.0001506949999999993, 0.00015066700000000016, 0.00015044399999999958, 0.00015051399999999743, 0.00015068000000000026,...</msg>
<status status="PASS" starttime="20201029 12:49:48.312" endtime="20201029 12:49:48.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.332" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:49:48.329" endtime="20201029 12:49:48.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.337" level="INFO">VALUE: [0.00015020899999999837, 0.00015040300000000034, 0.00015004199999999607, 0.0001506949999999993, 0.00015066700000000016, 0.00015044399999999958, 0.00015051399999999743, 0.00015068000000000026, 0.00015009699999999487, 0.00015019399999999933, 0.0001491529999999991, 0.00014930600000000183, 0.00015038900000000077, 0.0001508609999999952, 0.00015004199999999607, 0.00015044399999999958, 0.0001504729999999982, 0.00015076399999999768, 0.00015062500000000145, 0.00015066700000000016, 0.00015066700000000016, 0.00014995899999999812, 0.00015043099999999948, 0.00015093099999999998, 0.00015045799999999915, 0.000150042000000003, 0.00015063900000000102, 0.00015002800000000344, 0.00015054100000000403, 0.00015075000000000505, 0.000150527999999997, 0.00015077799999999725, 0.0001501379999999941, 0.00014968099999999873, 0.00015005499999999616, 0.0001500550000000031, 0.00014936100000000063, 0.00015073600000000548, 0.00015027799999999675, 0.00015043, 0.00015008300000000224, 0.0001500829999999953, 0.00015102800000000444, 0.00015029199999999632, 0.00015027800000000369, 0.00015045799999999915, 0.0001495000000000038, 0.00014995799999999865, 0.00014995799999999865, 0.00014933400000000097]</msg>
<status status="PASS" starttime="20201029 12:49:48.334" endtime="20201029 12:49:48.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.323" endtime="20201029 12:49:48.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:48.350" endtime="20201029 12:49:48.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.345" endtime="20201029 12:49:48.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.343" endtime="20201029 12:49:48.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.848" endtime="20201029 12:49:48.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.847" endtime="20201029 12:49:48.375"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.398" endtime="20201029 12:49:48.421"></status>
</kw>
<msg timestamp="20201029 12:49:48.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:48.394" endtime="20201029 12:49:48.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:48.425" endtime="20201029 12:49:48.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.431" endtime="20201029 12:49:48.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.387" endtime="20201029 12:49:48.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.381" endtime="20201029 12:49:48.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.454" endtime="20201029 12:49:48.791"></status>
</kw>
<msg timestamp="20201029 12:49:48.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040016236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040167694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:48.451" endtime="20201029 12:49:48.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040016236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040167694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:48.800" endtime="20201029 12:49:48.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.818" endtime="20201029 12:49:48.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.444" endtime="20201029 12:49:48.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.439" endtime="20201029 12:49:48.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:48.835" level="INFO">${RESULT} = [{'diff': 0.00015145800000000015}, {'diff': 0.0001513620000000021}, {'diff': 0.0001512369999999985}, {'diff': 0.00015127799999999775}, {'diff': 0.00015188900000000227}, {'diff': 0.00015125000000000555...</msg>
<status status="PASS" starttime="20201029 12:49:48.827" endtime="20201029 12:49:48.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:48.844" level="INFO">${ACCURACY} = {'diff': [0.00015145800000000015, 0.0001513620000000021, 0.0001512369999999985, 0.00015127799999999775, 0.00015188900000000227, 0.00015125000000000555, 0.00015123599999999904, 0.0001506530000000006, 0...</msg>
<status status="PASS" starttime="20201029 12:49:48.837" endtime="20201029 12:49:48.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.855" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:49:48.853" endtime="20201029 12:49:48.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.861" level="INFO">VALUE: [0.00015145800000000015, 0.0001513620000000021, 0.0001512369999999985, 0.00015127799999999775, 0.00015188900000000227, 0.00015125000000000555, 0.00015123599999999904, 0.0001506530000000006, 0.00015145899999999962, 0.0001516950000000003, 0.00015158300000000374, 0.00015144400000000058, 0.00015155599999999714, 0.00015159699999999637, 0.0001503200000000024, 0.00015184700000000356, 0.0001510550000000041, 0.00015120899999999937, 0.00015090300000000084, 0.00015144400000000058, 0.00015097199999999922, 0.00015177799999999825, 0.00015109699999999587, 0.00015138900000000177, 0.0001514170000000009, 0.00015123599999999904, 0.0001507780000000042, 0.0001511530000000011, 0.00015181900000000442, 0.00015143100000000048, 0.00015181900000000442, 0.0001508200000000029, 0.00015134800000000254, 0.00015101399999999793, 0.00015168100000000073, 0.00015159699999999637, 0.00015144500000000005, 0.00015169400000000083, 0.00015049999999999786, 0.00015134700000000306, 0.00015158400000000322, 0.00015086100000000213, 0.00015123599999999904, 0.00015116700000000066, 0.00015179199999999782, 0.00015173599999999954, 0.0001517499999999991, 0.00015141600000000144, 0.0001512369999999985, 0.0001512499999999986]</msg>
<status status="PASS" starttime="20201029 12:49:48.857" endtime="20201029 12:49:48.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.846" endtime="20201029 12:49:48.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:48.873" endtime="20201029 12:49:48.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.869" endtime="20201029 12:49:48.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.866" endtime="20201029 12:49:48.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.377" endtime="20201029 12:49:48.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.376" endtime="20201029 12:49:48.898"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.921" endtime="20201029 12:49:48.944"></status>
</kw>
<msg timestamp="20201029 12:49:48.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:48.917" endtime="20201029 12:49:48.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:48.948" endtime="20201029 12:49:48.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.954" endtime="20201029 12:49:48.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.910" endtime="20201029 12:49:48.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.905" endtime="20201029 12:49:48.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.977" endtime="20201029 12:49:49.311"></status>
</kw>
<msg timestamp="20201029 12:49:49.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041253181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041405458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:48.974" endtime="20201029 12:49:49.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041253181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041405458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:49.320" endtime="20201029 12:49:49.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.339" endtime="20201029 12:49:49.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.967" endtime="20201029 12:49:49.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.962" endtime="20201029 12:49:49.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:49.356" level="INFO">${RESULT} = [{'diff': 0.00015227699999999927}, {'diff': 0.00015244400000000158}, {'diff': 0.00015195800000000065}, {'diff': 0.00015192999999999457}, {'diff': 0.00015168100000000073}, {'diff': 0.000152013999999998...</msg>
<status status="PASS" starttime="20201029 12:49:49.347" endtime="20201029 12:49:49.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:49.365" level="INFO">${ACCURACY} = {'diff': [0.00015227699999999927, 0.00015244400000000158, 0.00015195800000000065, 0.00015192999999999457, 0.00015168100000000073, 0.00015201399999999893, 0.00015300000000000036, 0.00015272300000000044...</msg>
<status status="PASS" starttime="20201029 12:49:49.358" endtime="20201029 12:49:49.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.376" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:49:49.374" endtime="20201029 12:49:49.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.381" level="INFO">VALUE: [0.00015227699999999927, 0.00015244400000000158, 0.00015195800000000065, 0.00015192999999999457, 0.00015168100000000073, 0.00015201399999999893, 0.00015300000000000036, 0.00015272300000000044, 0.00015244400000000158, 0.00015268100000000173, 0.0001525699999999977, 0.00015233399999999703, 0.00015240200000000287, 0.00015223600000000004, 0.00015134699999999612, 0.00015222200000000047, 0.00015243100000000148, 0.00015204199999999807, 0.00015266700000000216, 0.0001519170000000014, 0.00015288900000000327, 0.0001520829999999973, 0.0001522499999999996, 0.00015266699999999522, 0.00015113900000000152, 0.0001526950000000013, 0.00015245800000000115, 0.0001527500000000001, 0.00015252800000000594, 0.000152430000000002, 0.00015222299999999994, 0.00015199999999999936, 0.00015290300000000284, 0.0001525970000000043, 0.00015154199999999757, 0.00015249999999999986, 0.00015209799999999635, 0.00015134800000000254, 0.00015223600000000004, 0.00015237499999999626, 0.00015229199999999832, 0.00015202800000000544, 0.00015168000000000126, 0.00015211099999999644, 0.00015134699999999612, 0.00015259699999999737, 0.0001523750000000032, 0.00015245800000000115, 0.00015229099999999884, 0.00015222200000000047]</msg>
<status status="PASS" starttime="20201029 12:49:49.378" endtime="20201029 12:49:49.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.367" endtime="20201029 12:49:49.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:49.400" endtime="20201029 12:49:49.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.394" endtime="20201029 12:49:49.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.392" endtime="20201029 12:49:49.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.900" endtime="20201029 12:49:49.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.899" endtime="20201029 12:49:49.425"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.448" endtime="20201029 12:49:49.469"></status>
</kw>
<msg timestamp="20201029 12:49:49.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:49.444" endtime="20201029 12:49:49.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:49.473" endtime="20201029 12:49:49.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.479" endtime="20201029 12:49:49.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.437" endtime="20201029 12:49:49.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.431" endtime="20201029 12:49:49.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.503" endtime="20201029 12:49:49.836"></status>
</kw>
<msg timestamp="20201029 12:49:49.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039698583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039851806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:49.499" endtime="20201029 12:49:49.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039698583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039851806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:49.846" endtime="20201029 12:49:49.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.864" endtime="20201029 12:49:49.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.492" endtime="20201029 12:49:49.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.487" endtime="20201029 12:49:49.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:49.881" level="INFO">${RESULT} = [{'diff': 0.000153222999999994}, {'diff': 0.0001530409999999996}, {'diff': 0.00015318000000000276}, {'diff': 0.00015279200000000576}, {'diff': 0.00015372200000000197}, {'diff': 0.00015313800000000405}...</msg>
<status status="PASS" starttime="20201029 12:49:49.872" endtime="20201029 12:49:49.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:49.891" level="INFO">${ACCURACY} = {'diff': [0.000153222999999994, 0.0001530409999999996, 0.00015318000000000276, 0.00015279200000000576, 0.00015372200000000197, 0.00015313800000000405, 0.00015326400000000018, 0.0001530699999999982, 0....</msg>
<status status="PASS" starttime="20201029 12:49:49.883" endtime="20201029 12:49:49.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.902" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:49:49.900" endtime="20201029 12:49:49.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.907" level="INFO">VALUE: [0.000153222999999994, 0.0001530409999999996, 0.00015318000000000276, 0.00015279200000000576, 0.00015372200000000197, 0.00015313800000000405, 0.00015326400000000018, 0.0001530699999999982, 0.00015283400000000447, 0.00015309699999999787, 0.0001536950000000023, 0.00015307000000000515, 0.0001531939999999954, 0.00015311100000000438, 0.00015334699999999812, 0.00015368100000000273, 0.00015380499999999991, 0.0001519729999999997, 0.0001532500000000006, 0.00015368100000000273, 0.00015323600000000104, 0.0001531660000000032, 0.00015372200000000197, 0.00015193100000000098, 0.00015262500000000345, 0.00015329199999999932, 0.00015317999999999582, 0.00015300000000000036, 0.00015373600000000154, 0.00015347200000000172, 0.0001536530000000036, 0.0001537080000000024, 0.00015242999999999507, 0.00015366700000000316, 0.0001536249999999975, 0.00015350000000000086, 0.0001532500000000006, 0.0001535410000000001, 0.00015369499999999536, 0.0001530829999999983, 0.00015243100000000148, 0.0001534860000000013, 0.00015223600000000004, 0.00015322199999999453, 0.00015302800000000644, 0.00015362500000000445, 0.0001532500000000006, 0.00015329199999999932, 0.00015291699999999547, 0.00015277799999999925]</msg>
<status status="PASS" starttime="20201029 12:49:49.905" endtime="20201029 12:49:49.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.893" endtime="20201029 12:49:49.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:49.920" endtime="20201029 12:49:49.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.916" endtime="20201029 12:49:49.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.913" endtime="20201029 12:49:49.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.427" endtime="20201029 12:49:49.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.426" endtime="20201029 12:49:49.945"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.968" endtime="20201029 12:49:49.990"></status>
</kw>
<msg timestamp="20201029 12:49:49.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:49.964" endtime="20201029 12:49:49.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:49.993" endtime="20201029 12:49:49.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.999" endtime="20201029 12:49:50.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.957" endtime="20201029 12:49:50.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.952" endtime="20201029 12:49:50.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.023" endtime="20201029 12:49:50.357"></status>
</kw>
<msg timestamp="20201029 12:49:50.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039634222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039788847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:50.020" endtime="20201029 12:49:50.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039634222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039788847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:50.366" endtime="20201029 12:49:50.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.384" endtime="20201029 12:49:50.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.012" endtime="20201029 12:49:50.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.008" endtime="20201029 12:49:50.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:50.402" level="INFO">${RESULT} = [{'diff': 0.00015462500000000545}, {'diff': 0.00015455500000000066}, {'diff': 0.00015479200000000082}, {'diff': 0.00015422200000000247}, {'diff': 0.0001539029999999969}, {'diff': 0.0001548480000000060...</msg>
<status status="PASS" starttime="20201029 12:49:50.393" endtime="20201029 12:49:50.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:50.412" level="INFO">${ACCURACY} = {'diff': [0.00015462500000000545, 0.00015455500000000066, 0.00015479200000000082, 0.00015422200000000247, 0.0001539029999999969, 0.00015484800000000604, 0.00015442999999999707, 0.00015300000000000036,...</msg>
<status status="PASS" starttime="20201029 12:49:50.404" endtime="20201029 12:49:50.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.423" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:49:50.421" endtime="20201029 12:49:50.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.429" level="INFO">VALUE: [0.00015462500000000545, 0.00015455500000000066, 0.00015479200000000082, 0.00015422200000000247, 0.0001539029999999969, 0.00015484800000000604, 0.00015442999999999707, 0.00015300000000000036, 0.00015390200000000437, 0.00015377800000000025, 0.0001540280000000005, 0.00015411200000000486, 0.00015450000000000186, 0.00015442999999999707, 0.00015447199999999578, 0.00015423600000000204, 0.0001540829999999993, 0.0001548060000000004, 0.00015412500000000495, 0.00015443099999999654, 0.00015411100000000538, 0.00015351400000000043, 0.0001548060000000004, 0.00015336199999999717, 0.00015484800000000604, 0.00015348700000000076, 0.0001536249999999975, 0.00015466699999999722, 0.00015409699999999887, 0.00015330499999999941, 0.00015479200000000082, 0.00015479200000000082, 0.00015401400000000093, 0.00015405599999999964, 0.00015454099999999416, 0.0001539029999999969, 0.00015422199999999553, 0.0001543059999999999, 0.0001544860000000023, 0.00015329099999999984, 0.00015431999999999946, 0.0001540829999999993, 0.00015388899999999733, 0.0001547500000000021, 0.0001543609999999987, 0.00015350000000000086, 0.00015427700000000127, 0.00015437499999999826, 0.00015470799999999646, 0.00015479100000000134]</msg>
<status status="PASS" starttime="20201029 12:49:50.426" endtime="20201029 12:49:50.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.414" endtime="20201029 12:49:50.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:50.441" endtime="20201029 12:49:50.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.437" endtime="20201029 12:49:50.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.434" endtime="20201029 12:49:50.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.947" endtime="20201029 12:49:50.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.946" endtime="20201029 12:49:50.466"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.490" endtime="20201029 12:49:50.512"></status>
</kw>
<msg timestamp="20201029 12:49:50.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:50.486" endtime="20201029 12:49:50.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:50.515" endtime="20201029 12:49:50.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.521" endtime="20201029 12:49:50.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.479" endtime="20201029 12:49:50.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.473" endtime="20201029 12:49:50.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.545" endtime="20201029 12:49:50.890"></status>
</kw>
<msg timestamp="20201029 12:49:50.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040445847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040601417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:50.542" endtime="20201029 12:49:50.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040445847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040601417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:50.899" endtime="20201029 12:49:50.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.917" endtime="20201029 12:49:50.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.534" endtime="20201029 12:49:50.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.530" endtime="20201029 12:49:50.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:50.934" level="INFO">${RESULT} = [{'diff': 0.0001555700000000007}, {'diff': 0.00015411099999999844}, {'diff': 0.00015568100000000473}, {'diff': 0.00015500000000000236}, {'diff': 0.0001548060000000004}, {'diff': 0.00015534700000000012...</msg>
<status status="PASS" starttime="20201029 12:49:50.926" endtime="20201029 12:49:50.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:50.943" level="INFO">${ACCURACY} = {'diff': [0.0001555700000000007, 0.00015411099999999844, 0.00015568100000000473, 0.00015500000000000236, 0.0001548060000000004, 0.00015534700000000012, 0.00015538799999999936, 0.00015559700000000037, ...</msg>
<status status="PASS" starttime="20201029 12:49:50.936" endtime="20201029 12:49:50.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.954" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:49:50.952" endtime="20201029 12:49:50.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.960" level="INFO">VALUE: [0.0001555700000000007, 0.00015411099999999844, 0.00015568100000000473, 0.00015500000000000236, 0.0001548060000000004, 0.00015534700000000012, 0.00015538799999999936, 0.00015559700000000037, 0.00015548699999999582, 0.00015444399999999664, 0.00015548599999999635, 0.00015479200000000082, 0.00015534700000000012, 0.00015580500000000191, 0.0001555700000000007, 0.00015498599999999585, 0.0001548609999999992, 0.00015411099999999844, 0.00015520799999999696, 0.00015581899999999455, 0.00015555600000000114, 0.00015519499999999686, 0.00015541699999999797, 0.00015522200000000347, 0.00015556900000000123, 0.00015508399999999978, 0.00015483300000000005, 0.0001557359999999966, 0.00015512499999999901, 0.00015393099999999604, 0.00015561099999999994, 0.00015520799999999696, 0.00015582000000000096, 0.00015541699999999797, 0.00015513899999999858, 0.0001551530000000051, 0.00015520900000000337, 0.0001554449999999971, 0.00015511099999999944, 0.00015524999999999567, 0.00015544500000000405, 0.0001555410000000021, 0.00015563900000000602, 0.00015545900000000362, 0.00015493099999999704, 0.0001551660000000052, 0.00015447200000000272, 0.00015572300000000344, 0.00015505500000000116, 0.00015541699999999797]</msg>
<status status="PASS" starttime="20201029 12:49:50.957" endtime="20201029 12:49:50.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.945" endtime="20201029 12:49:50.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:50.972" endtime="20201029 12:49:50.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.968" endtime="20201029 12:49:50.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.965" endtime="20201029 12:49:50.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.468" endtime="20201029 12:49:50.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.467" endtime="20201029 12:49:50.997"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.020" endtime="20201029 12:49:51.048"></status>
</kw>
<msg timestamp="20201029 12:49:51.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:51.017" endtime="20201029 12:49:51.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:51.051" endtime="20201029 12:49:51.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.058" endtime="20201029 12:49:51.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.010" endtime="20201029 12:49:51.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.004" endtime="20201029 12:49:51.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.081" endtime="20201029 12:49:51.415"></status>
</kw>
<msg timestamp="20201029 12:49:51.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045709792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045866167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:51.078" endtime="20201029 12:49:51.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045709792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045866167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:51.425" endtime="20201029 12:49:51.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.443" endtime="20201029 12:49:51.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.071" endtime="20201029 12:49:51.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.066" endtime="20201029 12:49:51.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:51.460" level="INFO">${RESULT} = [{'diff': 0.00015637500000000026}, {'diff': 0.00015662500000000051}, {'diff': 0.00015645899999999768}, {'diff': 0.00015631900000000198}, {'diff': 0.00015652700000000352}, {'diff': 0.000156318999999995...</msg>
<status status="PASS" starttime="20201029 12:49:51.451" endtime="20201029 12:49:51.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:51.469" level="INFO">${ACCURACY} = {'diff': [0.00015637500000000026, 0.00015662500000000051, 0.00015645899999999768, 0.00015631900000000198, 0.00015652700000000352, 0.00015631899999999505, 0.0001563060000000019, 0.0001561809999999983, ...</msg>
<status status="PASS" starttime="20201029 12:49:51.462" endtime="20201029 12:49:51.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.480" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:49:51.477" endtime="20201029 12:49:51.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.485" level="INFO">VALUE: [0.00015637500000000026, 0.00015662500000000051, 0.00015645899999999768, 0.00015631900000000198, 0.00015652700000000352, 0.00015631899999999505, 0.0001563060000000019, 0.0001561809999999983, 0.0001568060000000024, 0.00015633400000000103, 0.00015701400000000393, 0.0001561809999999983, 0.00015687500000000076, 0.00015592999999999857, 0.00015633300000000155, 0.00015615199999999968, 0.00015616699999999872, 0.00015638899999999983, 0.00015584700000000062, 0.00015638899999999983, 0.0001564029999999994, 0.00015532000000000046, 0.000156528000000003, 0.00015669499999999836, 0.00015593099999999804, 0.00015679200000000282, 0.00015672199999999803, 0.0001560830000000013, 0.00015615299999999915, 0.000156222999999997, 0.00015613899999999958, 0.0001565139999999965, 0.00015516699999999772, 0.00015677800000000325, 0.00015662500000000051, 0.0001562080000000049, 0.00015677800000000325, 0.0001568060000000024, 0.00015598599999999685, 0.00015638899999999983, 0.00015604199999999513, 0.00015587499999999976, 0.0001559579999999977, 0.00015662500000000051, 0.00015593100000000498, 0.00015612500000000001, 0.00015593099999999804, 0.00015670799999999846, 0.00015644400000000558, 0.00015655600000000214]</msg>
<status status="PASS" starttime="20201029 12:49:51.482" endtime="20201029 12:49:51.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.471" endtime="20201029 12:49:51.488"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:51.499" endtime="20201029 12:49:51.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.493" endtime="20201029 12:49:51.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.491" endtime="20201029 12:49:51.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.000" endtime="20201029 12:49:51.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.998" endtime="20201029 12:49:51.524"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.547" endtime="20201029 12:49:51.569"></status>
</kw>
<msg timestamp="20201029 12:49:51.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:51.544" endtime="20201029 12:49:51.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:51.573" endtime="20201029 12:49:51.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.579" endtime="20201029 12:49:51.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.537" endtime="20201029 12:49:51.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.531" endtime="20201029 12:49:51.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.602" endtime="20201029 12:49:51.936"></status>
</kw>
<msg timestamp="20201029 12:49:51.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039995167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040152861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:51.599" endtime="20201029 12:49:51.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039995167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040152861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:51.945" endtime="20201029 12:49:51.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.963" endtime="20201029 12:49:51.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.592" endtime="20201029 12:49:51.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.587" endtime="20201029 12:49:51.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:51.980" level="INFO">${RESULT} = [{'diff': 0.0001576939999999999}, {'diff': 0.00015704199999999613}, {'diff': 0.00015758299999999587}, {'diff': 0.00015781899999999655}, {'diff': 0.00015720899999999843}, {'diff': 0.0001572639999999972...</msg>
<status status="PASS" starttime="20201029 12:49:51.972" endtime="20201029 12:49:51.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:51.991" level="INFO">${ACCURACY} = {'diff': [0.0001576939999999999, 0.00015704199999999613, 0.00015758299999999587, 0.00015781899999999655, 0.00015720899999999843, 0.00015726399999999724, 0.00015712500000000101, 0.00015613899999999958,...</msg>
<status status="PASS" starttime="20201029 12:49:51.983" endtime="20201029 12:49:51.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:52.002" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:49:52.000" endtime="20201029 12:49:52.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:52.007" level="INFO">VALUE: [0.0001576939999999999, 0.00015704199999999613, 0.00015758299999999587, 0.00015781899999999655, 0.00015720899999999843, 0.00015726399999999724, 0.00015712500000000101, 0.00015613899999999958, 0.00015633300000000155, 0.00015770799999999946, 0.00015734700000000212, 0.00015617999999999882, 0.00015781900000000348, 0.0001571109999999945, 0.00015763899999999414, 0.00015602799999999556, 0.00015726399999999724, 0.00015738900000000083, 0.00015730599999999595, 0.00015663900000000008, 0.00015732000000000246, 0.00015615299999999915, 0.00015734699999999519, 0.0001574449999999991, 0.00015774999999999817, 0.00015741699999999997, 0.0001567779999999963, 0.000157013999999997, 0.00015684700000000162, 0.00015773600000000554, 0.00015738900000000083, 0.00015677699999999684, 0.00015690200000000043, 0.00015741699999999997, 0.00015763899999999414, 0.00015754099999999716, 0.00015631900000000198, 0.00015769499999999936, 0.00015704199999999613, 0.00015774999999999817, 0.00015761100000000194, 0.00015759700000000237, 0.00015776399999999774, 0.00015772199999999903, 0.00015724999999999767, 0.0001572359999999981, 0.00015758299999999587, 0.00015761100000000194, 0.00015695899999999818, 0.00015783400000000253]</msg>
<status status="PASS" starttime="20201029 12:49:52.004" endtime="20201029 12:49:52.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.993" endtime="20201029 12:49:52.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:52.020" endtime="20201029 12:49:52.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.015" endtime="20201029 12:49:52.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.013" endtime="20201029 12:49:52.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.526" endtime="20201029 12:49:52.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.525" endtime="20201029 12:49:52.045"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:52.067" endtime="20201029 12:49:52.091"></status>
</kw>
<msg timestamp="20201029 12:49:52.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:52.064" endtime="20201029 12:49:52.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:52.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:52.095" endtime="20201029 12:49:52.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:52.101" endtime="20201029 12:49:52.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.057" endtime="20201029 12:49:52.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.051" endtime="20201029 12:49:52.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:52.124" endtime="20201029 12:49:52.470"></status>
</kw>
<msg timestamp="20201029 12:49:52.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039655042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039813167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:52.121" endtime="20201029 12:49:52.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:52.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039655042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039813167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:52.480" endtime="20201029 12:49:52.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:52.498" endtime="20201029 12:49:52.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.114" endtime="20201029 12:49:52.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.109" endtime="20201029 12:49:52.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:52.515" level="INFO">${RESULT} = [{'diff': 0.00015812499999999508}, {'diff': 0.00015841700000000097}, {'diff': 0.00015837500000000226}, {'diff': 0.0001583610000000027}, {'diff': 0.00015862500000000251}, {'diff': 0.0001579310000000000...</msg>
<status status="PASS" starttime="20201029 12:49:52.506" endtime="20201029 12:49:52.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:52.526" level="INFO">${ACCURACY} = {'diff': [0.00015812499999999508, 0.00015841700000000097, 0.00015837500000000226, 0.0001583610000000027, 0.00015862500000000251, 0.00015793100000000004, 0.00015862500000000251, 0.00015823699999999857,...</msg>
<status status="PASS" starttime="20201029 12:49:52.517" endtime="20201029 12:49:52.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:52.537" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:49:52.534" endtime="20201029 12:49:52.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:52.542" level="INFO">VALUE: [0.00015812499999999508, 0.00015841700000000097, 0.00015837500000000226, 0.0001583610000000027, 0.00015862500000000251, 0.00015793100000000004, 0.00015862500000000251, 0.00015823699999999857, 0.0001581810000000003, 0.00015730500000000341, 0.00015822199999999953, 0.0001584580000000002, 0.0001587229999999995, 0.00015847299999999925, 0.00015699999999999742, 0.0001587779999999983, 0.0001582359999999991, 0.00015822199999999953, 0.00015820899999999943, 0.00015824999999999867, 0.0001584450000000001, 0.00015793100000000004, 0.00015804199999999713, 0.0001571950000000058, 0.00015809699999999594, 0.00015877700000000577, 0.0001584580000000002, 0.0001583610000000027, 0.0001586940000000009, 0.00015879199999999788, 0.0001586940000000009, 0.0001584030000000014, 0.00015827700000000527, 0.00015812500000000201, 0.00015852799999999806, 0.00015843100000000054, 0.0001584580000000002, 0.00015883300000000405, 0.0001579030000000009, 0.00015854199999999763, 0.00015727800000000375, 0.000158528000000005, 0.00015849999999999892, 0.00015870800000000046, 0.00015858299999999687, 0.00015762500000000151, 0.0001582359999999991, 0.0001588610000000032, 0.00015850000000000586, 0.0001586940000000009]</msg>
<status status="PASS" starttime="20201029 12:49:52.539" endtime="20201029 12:49:52.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.528" endtime="20201029 12:49:52.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:52.554" endtime="20201029 12:49:52.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.550" endtime="20201029 12:49:52.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.548" endtime="20201029 12:49:52.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.047" endtime="20201029 12:49:52.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.046" endtime="20201029 12:49:52.580"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:52.602" endtime="20201029 12:49:52.626"></status>
</kw>
<msg timestamp="20201029 12:49:52.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:52.599" endtime="20201029 12:49:52.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:52.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:52.630" endtime="20201029 12:49:52.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:52.636" endtime="20201029 12:49:52.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.592" endtime="20201029 12:49:52.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.586" endtime="20201029 12:49:52.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:52.660" endtime="20201029 12:49:53.006"></status>
</kw>
<msg timestamp="20201029 12:49:53.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039950903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040110653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:52.656" endtime="20201029 12:49:53.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:53.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039950903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040110653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:53.016" endtime="20201029 12:49:53.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:53.034" endtime="20201029 12:49:53.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.649" endtime="20201029 12:49:53.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.644" endtime="20201029 12:49:53.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:53.051" level="INFO">${RESULT} = [{'diff': 0.00015975000000000017}, {'diff': 0.00015968000000000232}, {'diff': 0.00015959800000000385}, {'diff': 0.00015911100000000344}, {'diff': 0.00015913900000000258}, {'diff': 0.000158971999999993...</msg>
<status status="PASS" starttime="20201029 12:49:53.042" endtime="20201029 12:49:53.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:53.060" level="INFO">${ACCURACY} = {'diff': [0.00015975000000000017, 0.00015968000000000232, 0.00015959800000000385, 0.00015911100000000344, 0.00015913900000000258, 0.00015897199999999334, 0.0001589030000000019, 0.00015918000000000182,...</msg>
<status status="PASS" starttime="20201029 12:49:53.053" endtime="20201029 12:49:53.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:53.071" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:49:53.068" endtime="20201029 12:49:53.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:53.076" level="INFO">VALUE: [0.00015975000000000017, 0.00015968000000000232, 0.00015959800000000385, 0.00015911100000000344, 0.00015913900000000258, 0.00015897199999999334, 0.0001589030000000019, 0.00015918000000000182, 0.00015898599999999985, 0.00015897199999999334, 0.00015912500000000301, 0.00015909699999999694, 0.00015895900000000018, 0.0001591109999999965, 0.00015975000000000017, 0.00015926400000000618, 0.00015949999999999992, 0.0001594580000000012, 0.0001594030000000024, 0.00015888900000000233, 0.0001597360000000006, 0.0001598889999999964, 0.00015894400000000114, 0.00015941700000000197, 0.0001593610000000037, 0.00015898599999999985, 0.00015937499999999633, 0.0001596810000000018, 0.00015963900000000308, 0.00015961100000000394, 0.00015970800000000146, 0.0001591109999999965, 0.00015886099999999626, 0.00015912500000000301, 0.00015965300000000265, 0.0001588610000000032, 0.00015943000000000207, 0.00015941700000000197, 0.00015844400000000064, 0.00015902799999999856, 0.0001588610000000032, 0.00015906900000000473, 0.00015916700000000172, 0.00015904200000000507, 0.00015902799999999856, 0.00015981899999999855, 0.0001595689999999983, 0.0001594439999999947, 0.0001594030000000024, 0.0001591109999999965]</msg>
<status status="PASS" starttime="20201029 12:49:53.073" endtime="20201029 12:49:53.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.062" endtime="20201029 12:49:53.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:53.089" endtime="20201029 12:49:53.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.084" endtime="20201029 12:49:53.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.082" endtime="20201029 12:49:53.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.582" endtime="20201029 12:49:53.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.581" endtime="20201029 12:49:53.114"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:53.136" endtime="20201029 12:49:53.162"></status>
</kw>
<msg timestamp="20201029 12:49:53.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:53.133" endtime="20201029 12:49:53.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:53.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:53.166" endtime="20201029 12:49:53.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:53.172" endtime="20201029 12:49:53.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.126" endtime="20201029 12:49:53.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.120" endtime="20201029 12:49:53.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:53.195" endtime="20201029 12:49:53.540"></status>
</kw>
<msg timestamp="20201029 12:49:53.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041423792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041583653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:53.192" endtime="20201029 12:49:53.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:53.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041423792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041583653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:53.549" endtime="20201029 12:49:53.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:53.567" endtime="20201029 12:49:53.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.185" endtime="20201029 12:49:53.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.180" endtime="20201029 12:49:53.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:53.585" level="INFO">${RESULT} = [{'diff': 0.00015986099999999726}, {'diff': 0.00015899999999999942}, {'diff': 0.00015983299999999812}, {'diff': 0.00015904199999999813}, {'diff': 0.000160014}, {'diff': 0.000160014}, {'diff': 0.000160...</msg>
<status status="PASS" starttime="20201029 12:49:53.576" endtime="20201029 12:49:53.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:53.594" level="INFO">${ACCURACY} = {'diff': [0.00015986099999999726, 0.00015899999999999942, 0.00015983299999999812, 0.00015904199999999813, 0.000160014, 0.000160014, 0.0001607780000000003, 0.00016052800000000006, 0.0001599030000000029...</msg>
<status status="PASS" starttime="20201029 12:49:53.587" endtime="20201029 12:49:53.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:53.605" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:49:53.602" endtime="20201029 12:49:53.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:53.610" level="INFO">VALUE: [0.00015986099999999726, 0.00015899999999999942, 0.00015983299999999812, 0.00015904199999999813, 0.000160014, 0.000160014, 0.0001607780000000003, 0.00016052800000000006, 0.0001599030000000029, 0.0001603889999999969, 0.00016033299999999862, 0.00016079199999999988, 0.0001601109999999975, 0.0001599859999999939, 0.00016011100000000444, 0.00016043100000000254, 0.00016050000000000092, 0.00016006999999999827, 0.00016050000000000092, 0.00016077700000000084, 0.00016020800000000196, 0.00015984700000000462, 0.00016006999999999827, 0.00016044500000000211, 0.00015993100000000204, 0.00016081999999999902, 0.00016076400000000074, 0.000160610999999998, 0.00015980599999999845, 0.00016082000000000596, 0.0001593610000000037, 0.00016030599999999895, 0.00016008399999999784, 0.00016062499999999758, 0.00016012500000000401, 0.00015899999999999942, 0.00016044400000000264, 0.00016002799999999956, 0.00016059700000000537, 0.00016076400000000074, 0.00016011100000000444, 0.00016070900000000193, 0.00016070800000000246, 0.0001605559999999992, 0.00016063899999999715, 0.00016029200000000632, 0.0001605559999999992, 0.00016025000000000067, 0.00016065200000000418, 0.00016061100000000494]</msg>
<status status="PASS" starttime="20201029 12:49:53.607" endtime="20201029 12:49:53.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.595" endtime="20201029 12:49:53.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:53.624" endtime="20201029 12:49:53.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.618" endtime="20201029 12:49:53.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.616" endtime="20201029 12:49:53.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.116" endtime="20201029 12:49:53.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.115" endtime="20201029 12:49:53.649"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:53.672" endtime="20201029 12:49:53.695"></status>
</kw>
<msg timestamp="20201029 12:49:53.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:53.668" endtime="20201029 12:49:53.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:53.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:53.698" endtime="20201029 12:49:53.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:53.705" endtime="20201029 12:49:53.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.661" endtime="20201029 12:49:53.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.656" endtime="20201029 12:49:53.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:53.728" endtime="20201029 12:49:54.061"></status>
</kw>
<msg timestamp="20201029 12:49:54.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03983225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039994125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:53.725" endtime="20201029 12:49:54.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:54.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03983225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039994125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:54.071" endtime="20201029 12:49:54.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:54.089" endtime="20201029 12:49:54.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.717" endtime="20201029 12:49:54.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.713" endtime="20201029 12:49:54.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:54.106" level="INFO">${RESULT} = [{'diff': 0.00016187499999999883}, {'diff': 0.00016112499999999808}, {'diff': 0.00016158299999999987}, {'diff': 0.0001618059999999935}, {'diff': 0.00016169500000000336}, {'diff': 0.0001615840000000062...</msg>
<status status="PASS" starttime="20201029 12:49:54.097" endtime="20201029 12:49:54.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:54.116" level="INFO">${ACCURACY} = {'diff': [0.00016187499999999883, 0.00016112499999999808, 0.00016158299999999987, 0.0001618059999999935, 0.00016169500000000336, 0.00016158400000000628, 0.00016136099999999876, 0.0001612780000000008, ...</msg>
<status status="PASS" starttime="20201029 12:49:54.108" endtime="20201029 12:49:54.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:54.127" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:49:54.125" endtime="20201029 12:49:54.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:54.133" level="INFO">VALUE: [0.00016187499999999883, 0.00016112499999999808, 0.00016158299999999987, 0.0001618059999999935, 0.00016169500000000336, 0.00016158400000000628, 0.00016136099999999876, 0.0001612780000000008, 0.0001619859999999959, 0.0001608889999999974, 0.000161610999999999, 0.00016155500000000073, 0.00016195900000000318, 0.00016100000000000142, 0.00016156999999999977, 0.00016130500000000048, 0.00016131900000000005, 0.00016050000000000092, 0.00016138799999999842, 0.00016180500000000098, 0.00016156999999999977, 0.0001616659999999978, 0.00016148600000000235, 0.0001609439999999962, 0.00016136099999999876, 0.0001613339999999991, 0.00016105500000000023, 0.00016061100000000494, 0.00016111100000000544, 0.00016130599999999995, 0.00016097200000000228, 0.00016115300000000415, 0.00016104200000000013, 0.00016158299999999987, 0.0001612219999999956, 0.0001612360000000021, 0.00016002700000000009, 0.00016158299999999987, 0.00016163899999999815, 0.00016148600000000235, 0.00016093000000000357, 0.0001612219999999956, 0.00016020800000000196, 0.00016179200000000088, 0.0001611380000000051, 0.00016095900000000218, 0.00016170900000000293, 0.00016125000000000167, 0.00016184799999999916, 0.0001617780000000013]</msg>
<status status="PASS" starttime="20201029 12:49:54.130" endtime="20201029 12:49:54.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.118" endtime="20201029 12:49:54.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:54.145" endtime="20201029 12:49:54.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.141" endtime="20201029 12:49:54.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.138" endtime="20201029 12:49:54.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.651" endtime="20201029 12:49:54.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:53.650" endtime="20201029 12:49:54.170"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:54.193" endtime="20201029 12:49:54.215"></status>
</kw>
<msg timestamp="20201029 12:49:54.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:54.190" endtime="20201029 12:49:54.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:54.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:54.219" endtime="20201029 12:49:54.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:54.225" endtime="20201029 12:49:54.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.182" endtime="20201029 12:49:54.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.177" endtime="20201029 12:49:54.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:54.249" endtime="20201029 12:49:54.584"></status>
</kw>
<msg timestamp="20201029 12:49:54.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039599778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039762056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:54.246" endtime="20201029 12:49:54.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:54.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039599778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039762056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:54.593" endtime="20201029 12:49:54.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:54.611" endtime="20201029 12:49:54.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.238" endtime="20201029 12:49:54.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.233" endtime="20201029 12:49:54.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:54.628" level="INFO">${RESULT} = [{'diff': 0.00016227799999999487}, {'diff': 0.0001624439999999977}, {'diff': 0.0001622910000000019}, {'diff': 0.0001622910000000019}, {'diff': 0.00016202800000000156}, {'diff': 0.00016254100000000216}...</msg>
<status status="PASS" starttime="20201029 12:49:54.620" endtime="20201029 12:49:54.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:54.639" level="INFO">${ACCURACY} = {'diff': [0.00016227799999999487, 0.0001624439999999977, 0.0001622910000000019, 0.0001622910000000019, 0.00016202800000000156, 0.00016254100000000216, 0.00016183300000000012, 0.00016276400000000274, 0...</msg>
<status status="PASS" starttime="20201029 12:49:54.631" endtime="20201029 12:49:54.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:54.650" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:49:54.648" endtime="20201029 12:49:54.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:54.656" level="INFO">VALUE: [0.00016227799999999487, 0.0001624439999999977, 0.0001622910000000019, 0.0001622910000000019, 0.00016202800000000156, 0.00016254100000000216, 0.00016183300000000012, 0.00016276400000000274, 0.00016263899999999915, 0.00016215299999999822, 0.00016232000000000052, 0.00016233300000000062, 0.00016212499999999908, 0.00016229200000000138, 0.00016261199999999948, 0.00016276400000000274, 0.0001620560000000007, 0.00016147300000000225, 0.0001627360000000036, 0.00016191700000000447, 0.00016231900000000105, 0.00016190299999999797, 0.00016238900000000583, 0.0001613339999999991, 0.000162611, 0.00016211100000000644, 0.00016150000000000192, 0.0001624439999999977, 0.00016252799999999512, 0.0001622639999999953, 0.0001622780000000018, 0.00016275000000000317, 0.00016199999999999548, 0.00016236099999999976, 0.00016232000000000052, 0.00016236099999999976, 0.00016256899999999436, 0.0001625690000000013, 0.00016287499999999983, 0.00016212499999999908, 0.00016194500000000361, 0.00016241700000000497, 0.00016191699999999754, 0.00016254200000000163, 0.00016204200000000113, 0.00016204200000000113, 0.00016287499999999983, 0.00016222200000000353, 0.00016195799999999677, 0.0001622780000000018]</msg>
<status status="PASS" starttime="20201029 12:49:54.653" endtime="20201029 12:49:54.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.641" endtime="20201029 12:49:54.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:54.672" endtime="20201029 12:49:54.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.667" endtime="20201029 12:49:54.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.665" endtime="20201029 12:49:54.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.172" endtime="20201029 12:49:54.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.171" endtime="20201029 12:49:54.698"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:54.721" endtime="20201029 12:49:54.743"></status>
</kw>
<msg timestamp="20201029 12:49:54.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:54.717" endtime="20201029 12:49:54.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:54.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:54.747" endtime="20201029 12:49:54.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:54.753" endtime="20201029 12:49:54.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.710" endtime="20201029 12:49:54.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.704" endtime="20201029 12:49:54.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:54.777" endtime="20201029 12:49:55.112"></status>
</kw>
<msg timestamp="20201029 12:49:55.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040378417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040541889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:54.773" endtime="20201029 12:49:55.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:55.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040378417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040541889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:55.121" endtime="20201029 12:49:55.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:55.139" endtime="20201029 12:49:55.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.766" endtime="20201029 12:49:55.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.761" endtime="20201029 12:49:55.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:55.157" level="INFO">${RESULT} = [{'diff': 0.00016347199999999784}, {'diff': 0.00016304200000000213}, {'diff': 0.00016369500000000536}, {'diff': 0.0001629859999999969}, {'diff': 0.00016340299999999947}, {'diff': 0.0001634859999999974...</msg>
<status status="PASS" starttime="20201029 12:49:55.148" endtime="20201029 12:49:55.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:55.166" level="INFO">${ACCURACY} = {'diff': [0.00016347199999999784, 0.00016304200000000213, 0.00016369500000000536, 0.0001629859999999969, 0.00016340299999999947, 0.0001634859999999974, 0.00016324999999999673, 0.00016345899999999774, ...</msg>
<status status="PASS" starttime="20201029 12:49:55.159" endtime="20201029 12:49:55.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:55.177" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:49:55.174" endtime="20201029 12:49:55.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:55.182" level="INFO">VALUE: [0.00016347199999999784, 0.00016304200000000213, 0.00016369500000000536, 0.0001629859999999969, 0.00016340299999999947, 0.0001634859999999974, 0.00016324999999999673, 0.00016345899999999774, 0.00016379199999999594, 0.00016259700000000044, 0.00016318099999999836, 0.00016369500000000536, 0.00016363900000000015, 0.00016304099999999572, 0.00016358300000000187, 0.00016265199999999924, 0.0001632639999999963, 0.00016352799999999612, 0.00016379200000000288, 0.00016294500000000461, 0.00016334700000000119, 0.00016330499999999554, 0.00016287499999999983, 0.00016345900000000468, 0.00016361099999999407, 0.00016362500000000058, 0.0001635969999999945, 0.00016304200000000213, 0.00016326400000000324, 0.00016355500000000273, 0.0001625140000000025, 0.000162014000000002, 0.00016354200000000263, 0.00016331900000000205, 0.00016299999999999648, 0.0001632219999999976, 0.00016308400000000084, 0.00016295799999999777, 0.00016368099999999886, 0.0001631110000000005, 0.00016359700000000144, 0.00016322200000000453, 0.00016362500000000058, 0.00016308299999999443, 0.00016319500000000486, 0.00016374999999999723, 0.00016342999999999913, 0.00016383300000000212, 0.00016349999999999698, 0.00016349999999999698]</msg>
<status status="PASS" starttime="20201029 12:49:55.179" endtime="20201029 12:49:55.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.167" endtime="20201029 12:49:55.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:55.194" endtime="20201029 12:49:55.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.190" endtime="20201029 12:49:55.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.188" endtime="20201029 12:49:55.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.700" endtime="20201029 12:49:55.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:54.699" endtime="20201029 12:49:55.220"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:55.242" endtime="20201029 12:49:55.266"></status>
</kw>
<msg timestamp="20201029 12:49:55.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:55.239" endtime="20201029 12:49:55.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:55.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:55.270" endtime="20201029 12:49:55.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:55.276" endtime="20201029 12:49:55.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.232" endtime="20201029 12:49:55.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.226" endtime="20201029 12:49:55.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:55.301" endtime="20201029 12:49:55.634"></status>
</kw>
<msg timestamp="20201029 12:49:55.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041141917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041306764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:55.298" endtime="20201029 12:49:55.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:55.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041141917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041306764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:55.643" endtime="20201029 12:49:55.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:55.662" endtime="20201029 12:49:55.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.290" endtime="20201029 12:49:55.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.285" endtime="20201029 12:49:55.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:55.679" level="INFO">${RESULT} = [{'diff': 0.00016484700000000269}, {'diff': 0.00016470799999999952}, {'diff': 0.00016433300000000262}, {'diff': 0.00016419399999999945}, {'diff': 0.00016465299999999378}, {'diff': 0.000164805999999996...</msg>
<status status="PASS" starttime="20201029 12:49:55.670" endtime="20201029 12:49:55.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:55.688" level="INFO">${ACCURACY} = {'diff': [0.00016484700000000269, 0.00016470799999999952, 0.00016433300000000262, 0.00016419399999999945, 0.00016465299999999378, 0.0001648059999999965, 0.0001638890000000004, 0.00016468099999999986, ...</msg>
<status status="PASS" starttime="20201029 12:49:55.681" endtime="20201029 12:49:55.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:55.699" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:49:55.697" endtime="20201029 12:49:55.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:55.704" level="INFO">VALUE: [0.00016484700000000269, 0.00016470799999999952, 0.00016433300000000262, 0.00016419399999999945, 0.00016465299999999378, 0.0001648059999999965, 0.0001638890000000004, 0.00016468099999999986, 0.00016483399999999565, 0.00016422299999999806, 0.0001641110000000015, 0.00016480600000000345, 0.00016432000000000252, 0.00016461099999999507, 0.00016408300000000237, 0.0001644309999999996, 0.00016440300000000047, 0.00016434699999999525, 0.00016432000000000252, 0.00016400000000000442, 0.0001648059999999965, 0.00016412500000000108, 0.0001639859999999979, 0.0001639309999999991, 0.0001645419999999967, 0.00016318099999999836, 0.00016391700000000647, 0.00016438800000000142, 0.000164611000000002, 0.00016394400000000614, 0.0001647639999999978, 0.00016411099999999457, 0.00016422299999999806, 0.00016452800000000406, 0.0001640839999999949, 0.00016463900000000115, 0.00016452799999999712, 0.0001643749999999944, 0.00016457000000000277, 0.0001644309999999996, 0.00016477799999999737, 0.00016399999999999748, 0.0001647230000000055, 0.00016413900000000065, 0.0001640419999999962, 0.0001648189999999966, 0.00016391700000000647, 0.00016399999999999748, 0.0001642769999999974, 0.00016347199999999784]</msg>
<status status="PASS" starttime="20201029 12:49:55.701" endtime="20201029 12:49:55.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.690" endtime="20201029 12:49:55.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:55.718" endtime="20201029 12:49:55.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.713" endtime="20201029 12:49:55.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.710" endtime="20201029 12:49:55.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.222" endtime="20201029 12:49:55.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.220" endtime="20201029 12:49:55.744"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:55.766" endtime="20201029 12:49:55.789"></status>
</kw>
<msg timestamp="20201029 12:49:55.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:55.763" endtime="20201029 12:49:55.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:55.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:55.793" endtime="20201029 12:49:55.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:55.799" endtime="20201029 12:49:55.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.756" endtime="20201029 12:49:55.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.750" endtime="20201029 12:49:55.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:55.822" endtime="20201029 12:49:56.155"></status>
</kw>
<msg timestamp="20201029 12:49:56.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03977825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039943444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:55.819" endtime="20201029 12:49:56.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:56.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03977825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039943444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:56.164" endtime="20201029 12:49:56.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.182" endtime="20201029 12:49:56.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.812" endtime="20201029 12:49:56.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.807" endtime="20201029 12:49:56.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:56.199" level="INFO">${RESULT} = [{'diff': 0.00016519400000000045}, {'diff': 0.0001657639999999988}, {'diff': 0.00016505500000000423}, {'diff': 0.0001656389999999952}, {'diff': 0.00016549999999999898}, {'diff': 0.00016544500000000018...</msg>
<status status="PASS" starttime="20201029 12:49:56.191" endtime="20201029 12:49:56.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:56.214" level="INFO">${ACCURACY} = {'diff': [0.00016519400000000045, 0.0001657639999999988, 0.00016505500000000423, 0.0001656389999999952, 0.00016549999999999898, 0.00016544500000000018, 0.00016583299999999718, 0.00016568000000000138, ...</msg>
<status status="PASS" starttime="20201029 12:49:56.201" endtime="20201029 12:49:56.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:56.225" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:49:56.223" endtime="20201029 12:49:56.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:56.230" level="INFO">VALUE: [0.00016519400000000045, 0.0001657639999999988, 0.00016505500000000423, 0.0001656389999999952, 0.00016549999999999898, 0.00016544500000000018, 0.00016583299999999718, 0.00016568000000000138, 0.0001657639999999988, 0.0001655419999999977, 0.00016518100000000036, 0.00016525000000000567, 0.00016484700000000269, 0.00016565300000000172, 0.00016537500000000233, 0.00016515300000000122, 0.00016418099999999936, 0.00016562500000000258, 0.00016569500000000043, 0.00016402800000000356, 0.00016523599999999916, 0.00016402700000000409, 0.00016566599999999487, 0.00016404200000000313, 0.0001649169999999936, 0.00016498600000000585, 0.0001651389999999947, 0.0001648189999999966, 0.00016509700000000294, 0.00016561099999999607, 0.00016490300000000097, 0.00016447199999999884, 0.00016569400000000095, 0.00016565200000000224, 0.00016523599999999916, 0.0001649440000000002, 0.00016562500000000258, 0.00016487500000000183, 0.00016575000000000617, 0.00016413900000000065, 0.00016511099999999557, 0.00016499999999999848, 0.00016486200000000173, 0.00016486099999999532, 0.00016552699999999865, 0.00016584699999999675, 0.00016579200000000488, 0.0001650419999999972, 0.00016538899999999496, 0.0001657639999999988]</msg>
<status status="PASS" starttime="20201029 12:49:56.227" endtime="20201029 12:49:56.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.216" endtime="20201029 12:49:56.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:56.243" endtime="20201029 12:49:56.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.238" endtime="20201029 12:49:56.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.236" endtime="20201029 12:49:56.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.746" endtime="20201029 12:49:56.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.745" endtime="20201029 12:49:56.268"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.290" endtime="20201029 12:49:56.314"></status>
</kw>
<msg timestamp="20201029 12:49:56.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:56.287" endtime="20201029 12:49:56.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:56.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:56.318" endtime="20201029 12:49:56.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.324" endtime="20201029 12:49:56.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.280" endtime="20201029 12:49:56.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.274" endtime="20201029 12:49:56.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.349" endtime="20201029 12:49:56.681"></status>
</kw>
<msg timestamp="20201029 12:49:56.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039558222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039724847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:56.345" endtime="20201029 12:49:56.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:56.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039558222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039724847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:56.691" endtime="20201029 12:49:56.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.709" endtime="20201029 12:49:56.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.338" endtime="20201029 12:49:56.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.333" endtime="20201029 12:49:56.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:56.726" level="INFO">${RESULT} = [{'diff': 0.00016662500000000358}, {'diff': 0.00016627799999999887}, {'diff': 0.00016636099999999682}, {'diff': 0.0001669310000000021}, {'diff': 0.0001663890000000029}, {'diff': 0.00016630499999999854...</msg>
<status status="PASS" starttime="20201029 12:49:56.717" endtime="20201029 12:49:56.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:56.737" level="INFO">${ACCURACY} = {'diff': [0.00016662500000000358, 0.00016627799999999887, 0.00016636099999999682, 0.0001669310000000021, 0.0001663890000000029, 0.00016630499999999854, 0.00016649999999999998, 0.00016688899999999646, ...</msg>
<status status="PASS" starttime="20201029 12:49:56.728" endtime="20201029 12:49:56.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:56.748" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:49:56.745" endtime="20201029 12:49:56.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:56.753" level="INFO">VALUE: [0.00016662500000000358, 0.00016627799999999887, 0.00016636099999999682, 0.0001669310000000021, 0.0001663890000000029, 0.00016630499999999854, 0.00016649999999999998, 0.00016688899999999646, 0.00016602799999999862, 0.0001664860000000004, 0.000166014000000006, 0.00016656999999999783, 0.00016615300000000222, 0.00016620800000000102, 0.00016673600000000066, 0.00016655599999999826, 0.00016623600000000016, 0.0001667220000000011, 0.00016618000000000188, 0.00016609799999999647, 0.00016604200000000513, 0.00016616700000000179, 0.00016648599999999347, 0.0001664860000000004, 0.00016615300000000222, 0.00016633300000000462, 0.00016615300000000222, 0.00016684700000000469, 0.00016612499999999614, 0.00016569400000000095, 0.0001663749999999964, 0.00016690299999999603, 0.00016666599999999587, 0.00016605599999999776, 0.00016616700000000179, 0.00016677799999999937, 0.00016624999999999973, 0.00016624999999999973, 0.0001650560000000037, 0.00016669500000000143, 0.00016583399999999665, 0.00016552800000000506, 0.00016654099999999922, 0.00016668100000000186, 0.000166709000000001, 0.00016663900000000315, 0.00016573599999999966, 0.00016595800000000077, 0.00016558299999999693, 0.0001668189999999986]</msg>
<status status="PASS" starttime="20201029 12:49:56.750" endtime="20201029 12:49:56.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.739" endtime="20201029 12:49:56.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:56.766" endtime="20201029 12:49:56.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.761" endtime="20201029 12:49:56.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.759" endtime="20201029 12:49:56.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.270" endtime="20201029 12:49:56.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.268" endtime="20201029 12:49:56.791"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.813" endtime="20201029 12:49:56.836"></status>
</kw>
<msg timestamp="20201029 12:49:56.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:56.810" endtime="20201029 12:49:56.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:56.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:56.839" endtime="20201029 12:49:56.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.845" endtime="20201029 12:49:56.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.803" endtime="20201029 12:49:56.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.797" endtime="20201029 12:49:56.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.869" endtime="20201029 12:49:57.204"></status>
</kw>
<msg timestamp="20201029 12:49:57.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039656556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039823681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:56.866" endtime="20201029 12:49:57.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:57.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039656556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039823681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:57.214" endtime="20201029 12:49:57.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:57.232" endtime="20201029 12:49:57.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.858" endtime="20201029 12:49:57.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.854" endtime="20201029 12:49:57.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:57.249" level="INFO">${RESULT} = [{'diff': 0.00016712499999999714}, {'diff': 0.00016727799999999987}, {'diff': 0.0001668749999999969}, {'diff': 0.0001670549999999993}, {'diff': 0.00016752800000000012}, {'diff': 0.0001677499999999943}...</msg>
<status status="PASS" starttime="20201029 12:49:57.240" endtime="20201029 12:49:57.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:57.258" level="INFO">${ACCURACY} = {'diff': [0.00016712499999999714, 0.00016727799999999987, 0.0001668749999999969, 0.0001670549999999993, 0.00016752800000000012, 0.0001677499999999943, 0.00016769400000000295, 0.00016729099999999997, 0...</msg>
<status status="PASS" starttime="20201029 12:49:57.251" endtime="20201029 12:49:57.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:57.269" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:49:57.267" endtime="20201029 12:49:57.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:57.274" level="INFO">VALUE: [0.00016712499999999714, 0.00016727799999999987, 0.0001668749999999969, 0.0001670549999999993, 0.00016752800000000012, 0.0001677499999999943, 0.00016769400000000295, 0.00016729099999999997, 0.00016718000000000288, 0.0001672640000000003, 0.00016777800000000037, 0.0001676389999999972, 0.00016720799999999508, 0.00016716599999999637, 0.00016762499999999764, 0.00016700000000000048, 0.00016777800000000037, 0.00016684700000000469, 0.000167305999999999, 0.00016750000000000098, 0.00016698700000000039, 0.00016683399999999765, 0.00016705599999999876, 0.00016745799999999533, 0.00016755599999999926, 0.00016786200000000473, 0.00016752800000000012, 0.0001672220000000016, 0.00016780500000000004, 0.00016716599999999637, 0.0001678059999999995, 0.0001675419999999997, 0.00016732000000000552, 0.0001669440000000022, 0.0001672770000000004, 0.00016720800000000202, 0.00016715299999999628, 0.00016738899999999696, 0.00016733299999999868, 0.00016612500000000308, 0.00016788899999999746, 0.00016758299999999893, 0.0001665140000000065, 0.00016727799999999987, 0.00016766700000000329, 0.00016773600000000166, 0.00016773600000000166, 0.0001669299999999957, 0.00016716699999999585, 0.0001668749999999969]</msg>
<status status="PASS" starttime="20201029 12:49:57.271" endtime="20201029 12:49:57.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.260" endtime="20201029 12:49:57.277"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:57.287" endtime="20201029 12:49:57.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.282" endtime="20201029 12:49:57.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.280" endtime="20201029 12:49:57.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.793" endtime="20201029 12:49:57.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.792" endtime="20201029 12:49:57.312"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:57.334" endtime="20201029 12:49:57.360"></status>
</kw>
<msg timestamp="20201029 12:49:57.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:57.331" endtime="20201029 12:49:57.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:57.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:57.363" endtime="20201029 12:49:57.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:57.370" endtime="20201029 12:49:57.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.324" endtime="20201029 12:49:57.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.318" endtime="20201029 12:49:57.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:57.393" endtime="20201029 12:49:57.736"></status>
</kw>
<msg timestamp="20201029 12:49:57.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041443444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041612097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:57.390" endtime="20201029 12:49:57.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:57.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041443444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041612097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:57.746" endtime="20201029 12:49:57.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:57.764" endtime="20201029 12:49:57.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.383" endtime="20201029 12:49:57.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.378" endtime="20201029 12:49:57.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:57.781" level="INFO">${RESULT} = [{'diff': 0.00016865299999999778}, {'diff': 0.00016836099999999882}, {'diff': 0.00016883399999999965}, {'diff': 0.0001678749999999979}, {'diff': 0.00016873600000000266}, {'diff': 0.0001686109999999990...</msg>
<status status="PASS" starttime="20201029 12:49:57.773" endtime="20201029 12:49:57.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:57.791" level="INFO">${ACCURACY} = {'diff': [0.00016865299999999778, 0.00016836099999999882, 0.00016883399999999965, 0.0001678749999999979, 0.00016873600000000266, 0.00016861099999999907, 0.00016836100000000576, 0.00016880500000000104,...</msg>
<status status="PASS" starttime="20201029 12:49:57.784" endtime="20201029 12:49:57.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:57.801" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:49:57.799" endtime="20201029 12:49:57.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:57.807" level="INFO">VALUE: [0.00016865299999999778, 0.00016836099999999882, 0.00016883399999999965, 0.0001678749999999979, 0.00016873600000000266, 0.00016861099999999907, 0.00016836100000000576, 0.00016880500000000104, 0.00016772300000000157, 0.000168693999999997, 0.00016895800000000377, 0.00016831999999999958, 0.00016852800000000112, 0.000168096999999999, 0.00016884799999999922, 0.00016845799999999633, 0.00016840299999999753, 0.00016794399999999626, 0.00016801400000000105, 0.00016841599999999762, 0.00016884799999999922, 0.00016823599999999522, 0.0001685420000000007, 0.0001688060000000005, 0.00016751400000000055, 0.00016863900000000515, 0.00016777800000000037, 0.00016848599999999547, 0.0001682499999999948, 0.00016870800000000352, 0.00016868000000000438, 0.00016783299999999918, 0.00016844500000000318, 0.0001683749999999984, 0.00016879100000000147, 0.00016880500000000104, 0.00016702799999999962, 0.00016815300000000422, 0.00016848700000000189, 0.0001680550000000003, 0.00016822199999999565, 0.0001678890000000044, 0.00016845900000000275, 0.0001677220000000021, 0.0001684440000000037, 0.00016701400000000005, 0.00016869500000000343, 0.00016872199999999615, 0.0001682090000000025, 0.00016838899999999796]</msg>
<status status="PASS" starttime="20201029 12:49:57.804" endtime="20201029 12:49:57.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.792" endtime="20201029 12:49:57.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:57.821" endtime="20201029 12:49:57.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.815" endtime="20201029 12:49:57.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.813" endtime="20201029 12:49:57.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.314" endtime="20201029 12:49:57.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.313" endtime="20201029 12:49:57.846"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:57.869" endtime="20201029 12:49:57.891"></status>
</kw>
<msg timestamp="20201029 12:49:57.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:57.865" endtime="20201029 12:49:57.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:57.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:57.895" endtime="20201029 12:49:57.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:57.901" endtime="20201029 12:49:57.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.858" endtime="20201029 12:49:57.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.852" endtime="20201029 12:49:57.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:57.924" endtime="20201029 12:49:58.258"></status>
</kw>
<msg timestamp="20201029 12:49:58.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039646444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039814431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:57.921" endtime="20201029 12:49:58.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:58.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039646444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039814431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:58.267" endtime="20201029 12:49:58.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:58.285" endtime="20201029 12:49:58.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.914" endtime="20201029 12:49:58.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.909" endtime="20201029 12:49:58.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:58.302" level="INFO">${RESULT} = [{'diff': 0.00016798699999999445}, {'diff': 0.00016933300000000068}, {'diff': 0.00016966599999999887}, {'diff': 0.00016915299999999828}, {'diff': 0.00016949999999999604}, {'diff': 0.000169750000000003...</msg>
<status status="PASS" starttime="20201029 12:49:58.294" endtime="20201029 12:49:58.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:58.313" level="INFO">${ACCURACY} = {'diff': [0.00016798699999999445, 0.00016933300000000068, 0.00016966599999999887, 0.00016915299999999828, 0.00016949999999999604, 0.00016975000000000323, 0.0001696389999999992, 0.0001698190000000016, ...</msg>
<status status="PASS" starttime="20201029 12:49:58.304" endtime="20201029 12:49:58.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:58.324" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:49:58.322" endtime="20201029 12:49:58.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:58.329" level="INFO">VALUE: [0.00016798699999999445, 0.00016933300000000068, 0.00016966599999999887, 0.00016915299999999828, 0.00016949999999999604, 0.00016975000000000323, 0.0001696389999999992, 0.0001698190000000016, 0.00016817999999999694, 0.00016923600000000316, 0.00016973600000000366, 0.0001685420000000007, 0.0001698749999999999, 0.00016933400000000015, 0.0001683749999999984, 0.00016976300000000333, 0.00016965299999999878, 0.00016940199999999905, 0.00016912499999999914, 0.00016849999999999504, 0.00016888899999999846, 0.00016904100000000172, 0.0001696389999999992, 0.00016834699999999925, 0.00016894399999999726, 0.00016982000000000108, 0.0001690420000000012, 0.00016894399999999726, 0.00016927800000000187, 0.0001693890000000059, 0.00016955600000000126, 0.0001691389999999987, 0.0001691389999999987, 0.00016962499999999964, 0.00016916599999999837, 0.0001690839999999999, 0.00016938899999999896, 0.00016980500000000204, 0.00016915299999999828, 0.00016977800000000237, 0.00016916699999999785, 0.0001694440000000047, 0.00016894499999999674, 0.00016966700000000529, 0.00016938899999999896, 0.00016912499999999914, 0.00016934700000000025, 0.00016979200000000194, 0.00016927799999999493, 0.00016918100000000436]</msg>
<status status="PASS" starttime="20201029 12:49:58.326" endtime="20201029 12:49:58.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.315" endtime="20201029 12:49:58.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:58.342" endtime="20201029 12:49:58.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.337" endtime="20201029 12:49:58.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.335" endtime="20201029 12:49:58.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.848" endtime="20201029 12:49:58.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:57.847" endtime="20201029 12:49:58.367"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:58.391" endtime="20201029 12:49:58.414"></status>
</kw>
<msg timestamp="20201029 12:49:58.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:58.387" endtime="20201029 12:49:58.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:58.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:58.417" endtime="20201029 12:49:58.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:58.424" endtime="20201029 12:49:58.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.380" endtime="20201029 12:49:58.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.374" endtime="20201029 12:49:58.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:58.447" endtime="20201029 12:49:58.781"></status>
</kw>
<msg timestamp="20201029 12:49:58.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041266611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041436653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:58.444" endtime="20201029 12:49:58.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:58.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041266611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041436653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:58.791" endtime="20201029 12:49:58.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:58.812" endtime="20201029 12:49:58.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.436" endtime="20201029 12:49:58.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.432" endtime="20201029 12:49:58.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:58.832" level="INFO">${RESULT} = [{'diff': 0.00017004199999999525}, {'diff': 0.00017077800000000337}, {'diff': 0.00017061099999999413}, {'diff': 0.0001702499999999968}, {'diff': 0.00017036100000000082}, {'diff': 0.0001698609999999933...</msg>
<status status="PASS" starttime="20201029 12:49:58.823" endtime="20201029 12:49:58.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:58.843" level="INFO">${ACCURACY} = {'diff': [0.00017004199999999525, 0.00017077800000000337, 0.00017061099999999413, 0.0001702499999999968, 0.00017036100000000082, 0.00016986099999999338, 0.0001704719999999979, 0.00017015299999999928, ...</msg>
<status status="PASS" starttime="20201029 12:49:58.834" endtime="20201029 12:49:58.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:58.855" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:49:58.853" endtime="20201029 12:49:58.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:58.861" level="INFO">VALUE: [0.00017004199999999525, 0.00017077800000000337, 0.00017061099999999413, 0.0001702499999999968, 0.00017036100000000082, 0.00016986099999999338, 0.0001704719999999979, 0.00017015299999999928, 0.00017065299999999978, 0.0001704169999999991, 0.00017047200000000484, 0.00017018099999999842, 0.00016895799999999683, 0.00016993099999999817, 0.00017034700000000125, 0.00017041599999999962, 0.00017017999999999894, 0.00016908300000000043, 0.00017065299999999978, 0.0001701519999999998, 0.0001702640000000033, 0.00017025000000000373, 0.00017051300000000408, 0.000169306000000001, 0.00017052799999999618, 0.00016998599999999697, 0.00017079200000000294, 0.00016994500000000468, 0.0001706390000000002, 0.00017017999999999894, 0.00017062500000000064, 0.00017040200000000005, 0.00017070800000000552, 0.000169306000000001, 0.00017062500000000064, 0.00017065299999999978, 0.0001706390000000002, 0.000169306000000001, 0.0001704860000000044, 0.00016899999999999554, 0.00017018099999999842, 0.00017070799999999858, 0.000170693999999999, 0.00017048700000000389, 0.0001702640000000033, 0.00017049999999999704, 0.0001706520000000003, 0.0001706390000000002, 0.00016984800000000022, 0.00016915299999999828]</msg>
<status status="PASS" starttime="20201029 12:49:58.858" endtime="20201029 12:49:58.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.846" endtime="20201029 12:49:58.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:58.873" endtime="20201029 12:49:58.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.869" endtime="20201029 12:49:58.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.866" endtime="20201029 12:49:58.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.369" endtime="20201029 12:49:58.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.368" endtime="20201029 12:49:58.898"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:58.921" endtime="20201029 12:49:58.944"></status>
</kw>
<msg timestamp="20201029 12:49:58.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:58.918" endtime="20201029 12:49:58.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:58.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:58.947" endtime="20201029 12:49:58.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:58.954" endtime="20201029 12:49:58.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.911" endtime="20201029 12:49:58.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.905" endtime="20201029 12:49:58.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:58.978" endtime="20201029 12:49:59.313"></status>
</kw>
<msg timestamp="20201029 12:49:59.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040007681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040179333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:58.974" endtime="20201029 12:49:59.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:59.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040007681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040179333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:59.322" endtime="20201029 12:49:59.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:59.340" endtime="20201029 12:49:59.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.967" endtime="20201029 12:49:59.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.962" endtime="20201029 12:49:59.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:59.357" level="INFO">${RESULT} = [{'diff': 0.00017165199999999436}, {'diff': 0.0001701939999999985}, {'diff': 0.00017141600000000062}, {'diff': 0.00017102800000000362}, {'diff': 0.0001712499999999978}, {'diff': 0.00017129200000000344...</msg>
<status status="PASS" starttime="20201029 12:49:59.349" endtime="20201029 12:49:59.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:59.367" level="INFO">${ACCURACY} = {'diff': [0.00017165199999999436, 0.0001701939999999985, 0.00017141600000000062, 0.00017102800000000362, 0.0001712499999999978, 0.00017129200000000344, 0.00017198599999999897, 0.00017105600000000276, ...</msg>
<status status="PASS" starttime="20201029 12:49:59.360" endtime="20201029 12:49:59.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:59.378" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:49:59.375" endtime="20201029 12:49:59.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:59.383" level="INFO">VALUE: [0.00017165199999999436, 0.0001701939999999985, 0.00017141600000000062, 0.00017102800000000362, 0.0001712499999999978, 0.00017129200000000344, 0.00017198599999999897, 0.00017105600000000276, 0.00017091600000000012, 0.0001709169999999996, 0.00017084700000000175, 0.0001709719999999984, 0.00017162500000000164, 0.0001714170000000001, 0.00017172199999999915, 0.00017106899999999592, 0.00017166700000000035, 0.00017020799999999808, 0.00017018099999999842, 0.000171582999999996, 0.00017155499999999685, 0.00017166600000000087, 0.00017141599999999368, 0.0001715699999999959, 0.0001714589999999988, 0.00017111099999999463, 0.00017148599999999847, 0.00017118099999999942, 0.00017116600000000037, 0.00017170899999999906, 0.00017154099999999728, 0.00017162500000000164, 0.00017130599999999607, 0.00017186099999999538, 0.00017179200000000394, 0.00017111100000000157, 0.00017170799999999958, 0.00017116699999999985, 0.0001717499999999983, 0.00017144399999999976, 0.00017136100000000182, 0.00017190300000000103, 0.0001703190000000021, 0.00017036100000000082, 0.0001715420000000037, 0.00017108300000000243, 0.0001703190000000021, 0.00017183300000000318, 0.00017150000000000498, 0.000171582999999996]</msg>
<status status="PASS" starttime="20201029 12:49:59.380" endtime="20201029 12:49:59.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:59.368" endtime="20201029 12:49:59.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:59.395" endtime="20201029 12:49:59.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:59.391" endtime="20201029 12:49:59.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:59.389" endtime="20201029 12:49:59.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.901" endtime="20201029 12:49:59.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:58.899" endtime="20201029 12:49:59.421"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:59.445" endtime="20201029 12:49:59.469"></status>
</kw>
<msg timestamp="20201029 12:49:59.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:59.441" endtime="20201029 12:49:59.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:59.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:59.473" endtime="20201029 12:49:59.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:59.479" endtime="20201029 12:49:59.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:59.434" endtime="20201029 12:49:59.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:59.428" endtime="20201029 12:49:59.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:59.502" endtime="20201029 12:49:59.835"></status>
</kw>
<msg timestamp="20201029 12:49:59.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042833597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043005514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:59.499" endtime="20201029 12:49:59.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:59.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042833597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043005514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:59.844" endtime="20201029 12:49:59.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:59.863" endtime="20201029 12:49:59.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:59.492" endtime="20201029 12:49:59.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:59.487" endtime="20201029 12:49:59.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:59.880" level="INFO">${RESULT} = [{'diff': 0.0001719170000000006}, {'diff': 0.00017262500000000264}, {'diff': 0.00017188900000000146}, {'diff': 0.0001724589999999998}, {'diff': 0.000172694000000001}, {'diff': 0.00017215299999999434},...</msg>
<status status="PASS" starttime="20201029 12:49:59.871" endtime="20201029 12:49:59.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:59.889" level="INFO">${ACCURACY} = {'diff': [0.0001719170000000006, 0.00017262500000000264, 0.00017188900000000146, 0.0001724589999999998, 0.000172694000000001, 0.00017215299999999434, 0.00017256900000000436, 0.00017238900000000196, 0....</msg>
<status status="PASS" starttime="20201029 12:49:59.882" endtime="20201029 12:49:59.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:59.900" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:49:59.897" endtime="20201029 12:49:59.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:59.905" level="INFO">VALUE: [0.0001719170000000006, 0.00017262500000000264, 0.00017188900000000146, 0.0001724589999999998, 0.000172694000000001, 0.00017215299999999434, 0.00017256900000000436, 0.00017238900000000196, 0.0001719300000000007, 0.00017213899999999477, 0.00017229099999999803, 0.00017241600000000162, 0.0001723750000000024, 0.00017238899999999502, 0.00017286099999999638, 0.00017245800000000033, 0.00017255600000000426, 0.00017230599999999707, 0.00017212500000000214, 0.00017288900000000246, 0.0001723469999999963, 0.00017252700000000565, 0.00017237499999999545, 0.00017284700000000375, 0.00017265300000000178, 0.00017220899999999956, 0.0001728190000000046, 0.0001724860000000064, 0.00017152800000000412, 0.00017233299999999674, 0.0001721940000000005, 0.00017237499999999545, 0.00017195799999999983, 0.00017298599999999997, 0.00017279200000000494, 0.00017240300000000153, 0.00017265299999999484, 0.00017118099999999942, 0.0001726950000000005, 0.00017283299999999724, 0.00017258300000000393, 0.00017215300000000128, 0.00017194499999999974, 0.00017230599999999707, 0.00017229200000000444, 0.0001726669999999944, 0.00017259699999999656, 0.00017231899999999717, 0.000172306000000004, 0.00017266600000000187]</msg>
<status status="PASS" starttime="20201029 12:49:59.902" endtime="20201029 12:49:59.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:59.891" endtime="20201029 12:49:59.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:59.924" endtime="20201029 12:49:59.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:59.918" endtime="20201029 12:49:59.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:59.915" endtime="20201029 12:49:59.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:59.423" endtime="20201029 12:49:59.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:59.422" endtime="20201029 12:49:59.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.845" endtime="20201029 12:49:59.949"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:49:06.724" endtime="20201029 12:49:59.951" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:48:11.179" endtime="20201029 12:49:59.960"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:50:00.095" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:50:00.111" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:50:02.121" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:50:00.092" endtime="20201029 12:50:02.123"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.128" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:50:02.125" endtime="20201029 12:50:02.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:00.089" endtime="20201029 12:50:02.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:02.135" endtime="20201029 12:50:02.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.132" endtime="20201029 12:50:02.468"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:02.498" endtime="20201029 12:50:02.514"></status>
</kw>
<msg timestamp="20201029 12:50:02.515" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:02.494" endtime="20201029 12:50:02.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:02.517" endtime="20201029 12:50:02.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.529" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:50:02.524" endtime="20201029 12:50:02.531"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:02.488" endtime="20201029 12:50:02.533"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:02.483" endtime="20201029 12:50:02.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.480" endtime="20201029 12:50:02.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:50:02.544" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:50:02.543" endtime="20201029 12:50:02.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.538" endtime="20201029 12:50:02.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.478" endtime="20201029 12:50:02.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.476" endtime="20201029 12:50:02.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:02.548" endtime="20201029 12:50:02.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.473" endtime="20201029 12:50:02.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:02.555" endtime="20201029 12:50:02.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.470" endtime="20201029 12:50:02.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:00.086" endtime="20201029 12:50:02.561"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:02.575" endtime="20201029 12:50:02.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.571" endtime="20201029 12:50:02.598"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:02.631" endtime="20201029 12:50:02.647"></status>
</kw>
<msg timestamp="20201029 12:50:02.648" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:02.628" endtime="20201029 12:50:02.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.654" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:02.650" endtime="20201029 12:50:02.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.661" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:50:02.657" endtime="20201029 12:50:02.662"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:02.621" endtime="20201029 12:50:02.663"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:02.614" endtime="20201029 12:50:02.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.611" endtime="20201029 12:50:02.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:50:02.674" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:50:02.672" endtime="20201029 12:50:02.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.668" endtime="20201029 12:50:02.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.610" endtime="20201029 12:50:02.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.608" endtime="20201029 12:50:02.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:02.677" endtime="20201029 12:50:02.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.604" endtime="20201029 12:50:02.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.600" endtime="20201029 12:50:02.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.568" endtime="20201029 12:50:02.684"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:02.707" endtime="20201029 12:50:08.839"></status>
</kw>
<msg timestamp="20201029 12:50:08.841" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:02.704" endtime="20201029 12:50:08.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:08.847" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:08.843" endtime="20201029 12:50:08.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:08.849" endtime="20201029 12:50:08.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.697" endtime="20201029 12:50:08.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.690" endtime="20201029 12:50:08.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:08.862" level="INFO">${RESULT} = {'bg-timer-count': 0, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:50:08.857" endtime="20201029 12:50:08.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:08.872" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:08.870" endtime="20201029 12:50:08.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:08.877" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:50:08.875" endtime="20201029 12:50:08.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:08.863" endtime="20201029 12:50:08.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:08.889" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:08.887" endtime="20201029 12:50:08.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:08.893" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:50:08.891" endtime="20201029 12:50:08.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:08.881" endtime="20201029 12:50:08.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:08.905" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:50:08.903" endtime="20201029 12:50:08.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:08.909" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:50:08.907" endtime="20201029 12:50:08.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:08.897" endtime="20201029 12:50:08.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:08.928" endtime="20201029 12:50:09.286"></status>
</kw>
<msg timestamp="20201029 12:50:09.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.223752986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.223753542, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:50:08.925" endtime="20201029 12:50:09.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.223752986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.223753542, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:50:09.295" endtime="20201029 12:50:09.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:09.313" endtime="20201029 12:50:09.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:08.918" endtime="20201029 12:50:09.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:08.913" endtime="20201029 12:50:09.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:50:09.331" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.10018122199999999}, {'diff': 0.100186194}, {'diff': 0.10017208300000002}, {'diff': 0.10017233299999995}, {'diff': 0.10017715300000007}, {'diff': 0.10017933300000004}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:50:09.322" endtime="20201029 12:50:09.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:09.341" level="INFO">${RESULT} = {'diff': [0, 0.10018122199999999, 0.100186194, 0.10017208300000002, 0.10017233299999995, 0.10017715300000007, 0.10017933300000004, 0.10018390300000002, 0.10018647199999997, 0.10019098600000009, 0.1001...</msg>
<status status="PASS" starttime="20201029 12:50:09.333" endtime="20201029 12:50:09.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.351" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:50:09.349" endtime="20201029 12:50:09.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.356" level="INFO">VALUE: [0, 0.10018122199999999, 0.100186194, 0.10017208300000002, 0.10017233299999995, 0.10017715300000007, 0.10017933300000004, 0.10018390300000002, 0.10018647199999997, 0.10019098600000009, 0.10019488899999995, 0.10019130599999992, 0.10018848599999997, 0.10018812499999985, 0.10019033300000002, 0.10018737499999997, 0.10018516600000016, 0.10017017999999989, 0.10018176399999978, 0.10018955500000004, 0.10019967999999979, 0.10018177700000042, 0.10018552699999983, 0.10018473600000011, 0.10017370800000025, 0.10018262499999997, 0.10017233299999972, 0.10018052799999966, 0.10018697199999993, 0.10019101399999997, 0.10019034699999985, 0.10019501399999964, 0.100183833, 0.10018647199999986, 0.10017647299999988, 0.10018219499999992, 0.10017734800000033, 0.10017254200000014, 0.10016876399999974, 0.10016486099999966, 0.10015762499999958, 0.10015979199999947, 0.10018062500000013, 0.10018063899999952, 0.10017652699999946, 0.1001775269999996, 0.10018955500000004, 0.10017472200000022, 0.10017854200000009, 0.10016444499999988, 0.10018306999999993]</msg>
<status status="PASS" starttime="20201029 12:50:09.353" endtime="20201029 12:50:09.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.343" endtime="20201029 12:50:09.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.685" endtime="20201029 12:50:09.360"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:50:02.562" endtime="20201029 12:50:09.362" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:09.379" endtime="20201029 12:50:09.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.375" endtime="20201029 12:50:09.402"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:09.435" endtime="20201029 12:50:09.452"></status>
</kw>
<msg timestamp="20201029 12:50:09.453" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:09.432" endtime="20201029 12:50:09.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.463" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:09.456" endtime="20201029 12:50:09.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.471" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:50:09.466" endtime="20201029 12:50:09.473"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:09.424" endtime="20201029 12:50:09.475"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:09.418" endtime="20201029 12:50:09.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.415" endtime="20201029 12:50:09.478"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:50:09.488" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:50:09.486" endtime="20201029 12:50:09.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.480" endtime="20201029 12:50:09.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.414" endtime="20201029 12:50:09.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.412" endtime="20201029 12:50:09.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:09.492" endtime="20201029 12:50:09.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.408" endtime="20201029 12:50:09.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.403" endtime="20201029 12:50:09.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.372" endtime="20201029 12:50:09.502"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:09.524" endtime="20201029 12:50:15.656"></status>
</kw>
<msg timestamp="20201029 12:50:15.657" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:09.521" endtime="20201029 12:50:15.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.664" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:15.660" endtime="20201029 12:50:15.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:15.666" endtime="20201029 12:50:15.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.513" endtime="20201029 12:50:15.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.508" endtime="20201029 12:50:15.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:15.678" level="INFO">${RESULT} = {'bg-timer-count': 5, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:50:15.674" endtime="20201029 12:50:15.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.689" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:15.687" endtime="20201029 12:50:15.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.694" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:50:15.692" endtime="20201029 12:50:15.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:15.681" endtime="20201029 12:50:15.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.706" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:15.703" endtime="20201029 12:50:15.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.710" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:50:15.708" endtime="20201029 12:50:15.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:15.697" endtime="20201029 12:50:15.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.722" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:50:15.720" endtime="20201029 12:50:15.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.726" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:50:15.724" endtime="20201029 12:50:15.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:15.714" endtime="20201029 12:50:15.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:15.747" endtime="20201029 12:50:16.103"></status>
</kw>
<msg timestamp="20201029 12:50:16.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136559806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.236790125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:15.743" endtime="20201029 12:50:16.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:16.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136559806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.236790125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:16.113" endtime="20201029 12:50:16.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:16.131" endtime="20201029 12:50:16.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:15.735" endtime="20201029 12:50:16.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:15.730" endtime="20201029 12:50:16.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:50:16.149" level="INFO">${FILTERED} = [{'diff': 0.10023031899999998}, {'diff': 0.10015518100000001}, {'diff': 0.10016888800000001}, {'diff': 0.10018363899999999}, {'diff': 0.10016968100000001}, {'diff': 0.10016616700000003}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 12:50:16.140" endtime="20201029 12:50:16.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:16.158" level="INFO">${RESULT} = {'diff': [0.10023031899999998, 0.10015518100000001, 0.10016888800000001, 0.10018363899999999, 0.10016968100000001, 0.10016616700000003, 0.10016523600000005, 0.100162223, 0.10016620899999995, 0.1001779...</msg>
<status status="PASS" starttime="20201029 12:50:16.151" endtime="20201029 12:50:16.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:16.168" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:50:16.166" endtime="20201029 12:50:16.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:16.173" level="INFO">VALUE: [0.10023031899999998, 0.10015518100000001, 0.10016888800000001, 0.10018363899999999, 0.10016968100000001, 0.10016616700000003, 0.10016523600000005, 0.100162223, 0.10016620899999995, 0.10017794400000013, 0.10017280500000014, 0.1002001669999999, 0.10018973599999992, 0.10018008300000014, 0.1001810139999999, 0.10018116700000013, 0.10018712500000015, 0.10018947199999984, 0.10019027800000013, 0.10017758299999979, 0.10018472200000028, 0.10018091699999987, 0.10018087499999995, 0.10018361099999984, 0.10018868000000003, 0.10017750000000003, 0.10018081999999984, 0.10019359800000016, 0.10019043100000014, 0.1001737920000001, 0.10017477699999988, 0.10017338900000006, 0.1001805, 0.1001816670000002, 0.10017427800000034, 0.100186361, 0.1001805280000001, 0.10017988899999963, 0.10017965300000009, 0.10017779199999932, 0.10017434700000027, 0.10017144399999989, 0.10018395899999977, 0.1001752499999995, 0.10017741700000027, 0.10017138899999978, 0.10016629099999985, 0.10017377700000019, 0.10017947199999977, 0.10018099999999919, 0.10017679200000007]</msg>
<status status="PASS" starttime="20201029 12:50:16.170" endtime="20201029 12:50:16.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.160" endtime="20201029 12:50:16.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.503" endtime="20201029 12:50:16.178"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:50:09.367" endtime="20201029 12:50:16.179" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:16.196" endtime="20201029 12:50:16.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.192" endtime="20201029 12:50:16.220"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:16.255" endtime="20201029 12:50:16.274"></status>
</kw>
<msg timestamp="20201029 12:50:16.275" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:16.251" endtime="20201029 12:50:16.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:16.282" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:16.277" endtime="20201029 12:50:16.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:50:16.288" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:50:16.284" endtime="20201029 12:50:16.289"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:16.244" endtime="20201029 12:50:16.291"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:16.237" endtime="20201029 12:50:16.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.233" endtime="20201029 12:50:16.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:50:16.301" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:50:16.300" endtime="20201029 12:50:16.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.295" endtime="20201029 12:50:16.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.231" endtime="20201029 12:50:16.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.230" endtime="20201029 12:50:16.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:16.305" endtime="20201029 12:50:16.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.225" endtime="20201029 12:50:16.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.221" endtime="20201029 12:50:16.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.190" endtime="20201029 12:50:16.312"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:16.333" endtime="20201029 12:50:22.471"></status>
</kw>
<msg timestamp="20201029 12:50:22.472" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:16.330" endtime="20201029 12:50:22.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.478" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:22.474" endtime="20201029 12:50:22.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:22.481" endtime="20201029 12:50:22.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.323" endtime="20201029 12:50:22.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.317" endtime="20201029 12:50:22.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:22.494" level="INFO">${RESULT} = {'bg-timer-count': 10, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:50:22.489" endtime="20201029 12:50:22.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.505" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:22.502" endtime="20201029 12:50:22.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.509" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:50:22.507" endtime="20201029 12:50:22.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:22.496" endtime="20201029 12:50:22.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.521" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:22.519" endtime="20201029 12:50:22.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.526" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:50:22.524" endtime="20201029 12:50:22.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:22.513" endtime="20201029 12:50:22.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.540" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:50:22.535" endtime="20201029 12:50:22.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.544" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:50:22.542" endtime="20201029 12:50:22.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:22.529" endtime="20201029 12:50:22.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:22.563" endtime="20201029 12:50:22.920"></status>
</kw>
<msg timestamp="20201029 12:50:22.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128348917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228728514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:22.560" endtime="20201029 12:50:22.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128348917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228728514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:22.929" endtime="20201029 12:50:22.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:22.948" endtime="20201029 12:50:22.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:22.553" endtime="20201029 12:50:22.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:22.548" endtime="20201029 12:50:22.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:50:22.965" level="INFO">${FILTERED} = [{'diff': 0.10037959699999999}, {'diff': 0.10018954200000002}, {'diff': 0.10006255599999997}, {'diff': 0.10017779099999996}, {'diff': 0.10018027799999996}, {'diff': 0.10017052799999993}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 12:50:22.956" endtime="20201029 12:50:22.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:22.974" level="INFO">${RESULT} = {'diff': [0.10037959699999999, 0.10018954200000002, 0.10006255599999997, 0.10017779099999996, 0.10018027799999996, 0.10017052799999993, 0.10017359700000006, 0.10016893100000002, 0.10016900000000006, 0...</msg>
<status status="PASS" starttime="20201029 12:50:22.967" endtime="20201029 12:50:22.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.985" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:50:22.982" endtime="20201029 12:50:22.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.990" level="INFO">VALUE: [0.10037959699999999, 0.10018954200000002, 0.10006255599999997, 0.10017779099999996, 0.10018027799999996, 0.10017052799999993, 0.10017359700000006, 0.10016893100000002, 0.10016900000000006, 0.10016929199999991, 0.10016938899999994, 0.100169709, 0.1001696110000001, 0.10016938899999994, 0.10017379199999987, 0.10017936100000013, 0.10018861099999987, 0.10018454200000004, 0.1001910549999998, 0.10019558399999973, 0.10018437499999999, 0.10018344399999979, 0.10017748699999984, 0.10017366699999997, 0.1001770839999998, 0.10018133400000018, 0.10018261100000014, 0.10019463900000014, 0.10018209700000025, 0.10017656899999983, 0.10019819399999985, 0.10017927800000015, 0.10018066700000006, 0.10017438800000011, 0.10018320800000025, 0.10018720799999992, 0.1001806799999998, 0.10017452700000007, 0.10017933300000026, 0.10017743100000054, 0.10018952799999958, 0.10018077700000028, 0.10018924999999967, 0.1001842909999997, 0.10018741599999981, 0.1002049860000005, 0.10020518099999975, 0.10019979099999965, 0.10019124999999995, 0.10018609699999992, 0.1001916249999999]</msg>
<status status="PASS" starttime="20201029 12:50:22.987" endtime="20201029 12:50:22.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:22.976" endtime="20201029 12:50:22.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.313" endtime="20201029 12:50:22.994"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:50:16.184" endtime="20201029 12:50:22.996" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:23.014" endtime="20201029 12:50:23.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.009" endtime="20201029 12:50:23.038"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:23.071" endtime="20201029 12:50:23.090"></status>
</kw>
<msg timestamp="20201029 12:50:23.092" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:23.068" endtime="20201029 12:50:23.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:23.098" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:23.094" endtime="20201029 12:50:23.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:50:23.105" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:50:23.101" endtime="20201029 12:50:23.105"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:23.061" endtime="20201029 12:50:23.107"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:23.054" endtime="20201029 12:50:23.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.051" endtime="20201029 12:50:23.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:50:23.117" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:50:23.116" endtime="20201029 12:50:23.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.112" endtime="20201029 12:50:23.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.050" endtime="20201029 12:50:23.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.048" endtime="20201029 12:50:23.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:23.121" endtime="20201029 12:50:23.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.044" endtime="20201029 12:50:23.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.039" endtime="20201029 12:50:23.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.006" endtime="20201029 12:50:23.128"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:23.150" endtime="20201029 12:50:29.293"></status>
</kw>
<msg timestamp="20201029 12:50:29.295" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:23.146" endtime="20201029 12:50:29.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.303" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:29.297" endtime="20201029 12:50:29.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:29.306" endtime="20201029 12:50:29.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.139" endtime="20201029 12:50:29.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.134" endtime="20201029 12:50:29.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:29.319" level="INFO">${RESULT} = {'bg-timer-count': 15, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:50:29.314" endtime="20201029 12:50:29.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.331" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:29.327" endtime="20201029 12:50:29.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.336" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:50:29.334" endtime="20201029 12:50:29.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.321" endtime="20201029 12:50:29.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.348" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:29.346" endtime="20201029 12:50:29.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.353" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:50:29.351" endtime="20201029 12:50:29.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.340" endtime="20201029 12:50:29.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.365" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:50:29.363" endtime="20201029 12:50:29.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.370" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:50:29.367" endtime="20201029 12:50:29.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.357" endtime="20201029 12:50:29.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:29.389" endtime="20201029 12:50:29.756"></status>
</kw>
<msg timestamp="20201029 12:50:29.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126884833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227453403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:29.385" endtime="20201029 12:50:29.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126884833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227453403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:29.766" endtime="20201029 12:50:29.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:29.785" endtime="20201029 12:50:29.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.378" endtime="20201029 12:50:29.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.373" endtime="20201029 12:50:29.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:50:29.802" level="INFO">${FILTERED} = [{'diff': 0.10056857}, {'diff': 0.09984315299999996}, {'diff': 0.10015980499999999}, {'diff': 0.10017312500000003}, {'diff': 0.10018145899999997}, {'diff': 0.10017094500000001}, {'diff': 0.10017600000...</msg>
<status status="PASS" starttime="20201029 12:50:29.793" endtime="20201029 12:50:29.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:29.813" level="INFO">${RESULT} = {'diff': [0.10056857, 0.09984315299999996, 0.10015980499999999, 0.10017312500000003, 0.10018145899999997, 0.10017094500000001, 0.10017600000000004, 0.10018612500000001, 0.10017283399999999, 0.10017927...</msg>
<status status="PASS" starttime="20201029 12:50:29.804" endtime="20201029 12:50:29.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.823" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:50:29.821" endtime="20201029 12:50:29.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.828" level="INFO">VALUE: [0.10056857, 0.09984315299999996, 0.10015980499999999, 0.10017312500000003, 0.10018145899999997, 0.10017094500000001, 0.10017600000000004, 0.10018612500000001, 0.10017283399999999, 0.10017927799999993, 0.10018082000000006, 0.10017519400000019, 0.10017330499999999, 0.10017222200000009, 0.10017306999999986, 0.10017038900000008, 0.10017312499999997, 0.10017942999999985, 0.10017733299999998, 0.10016061099999973, 0.10017577700000002, 0.10017309699999988, 0.10017336099999996, 0.10016511099999992, 0.10015126399999996, 0.10016612500000033, 0.10016802799999969, 0.10017488899999982, 0.10017773600000002, 0.10017394500000032, 0.10017547300000018, 0.10017087499999988, 0.10017383299999993, 0.10016465300000021, 0.10017256900000016, 0.10016405500000003, 0.10015797199999987, 0.10015811199999991, 0.10016431899999967, 0.10016575000000039, 0.10017611099999968, 0.10017555499999986, 0.10016687500000021, 0.10016611099999917, 0.10017347199999982, 0.10017231900000034, 0.10017156999999965, 0.10019122300000038, 0.10017402799999964, 0.10017370899999989, 0.10017184800000045]</msg>
<status status="PASS" starttime="20201029 12:50:29.825" endtime="20201029 12:50:29.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.815" endtime="20201029 12:50:29.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.130" endtime="20201029 12:50:29.838"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:50:23.000" endtime="20201029 12:50:29.839" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:29.856" endtime="20201029 12:50:29.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.852" endtime="20201029 12:50:29.880"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:29.913" endtime="20201029 12:50:29.934"></status>
</kw>
<msg timestamp="20201029 12:50:29.935" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:29.909" endtime="20201029 12:50:29.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.942" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:29.937" endtime="20201029 12:50:29.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.948" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:50:29.944" endtime="20201029 12:50:29.949"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:29.902" endtime="20201029 12:50:29.951"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:29.896" endtime="20201029 12:50:29.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.893" endtime="20201029 12:50:29.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:50:29.961" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:50:29.960" endtime="20201029 12:50:29.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.955" endtime="20201029 12:50:29.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.891" endtime="20201029 12:50:29.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.889" endtime="20201029 12:50:29.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:29.965" endtime="20201029 12:50:29.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.885" endtime="20201029 12:50:29.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.881" endtime="20201029 12:50:29.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.849" endtime="20201029 12:50:29.972"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:29.996" endtime="20201029 12:50:36.135"></status>
</kw>
<msg timestamp="20201029 12:50:36.137" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:29.992" endtime="20201029 12:50:36.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.143" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:36.139" endtime="20201029 12:50:36.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:36.145" endtime="20201029 12:50:36.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.983" endtime="20201029 12:50:36.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.977" endtime="20201029 12:50:36.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:36.159" level="INFO">${RESULT} = {'bg-timer-count': 20, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:50:36.154" endtime="20201029 12:50:36.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.169" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:36.167" endtime="20201029 12:50:36.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.174" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:50:36.171" endtime="20201029 12:50:36.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.161" endtime="20201029 12:50:36.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.186" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:36.183" endtime="20201029 12:50:36.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.190" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:50:36.188" endtime="20201029 12:50:36.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.177" endtime="20201029 12:50:36.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.202" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:50:36.200" endtime="20201029 12:50:36.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.207" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:50:36.205" endtime="20201029 12:50:36.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.194" endtime="20201029 12:50:36.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:36.226" endtime="20201029 12:50:36.658"></status>
</kw>
<msg timestamp="20201029 12:50:36.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131380778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.232044569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:36.223" endtime="20201029 12:50:36.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131380778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.232044569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:36.667" endtime="20201029 12:50:36.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:36.685" endtime="20201029 12:50:36.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.215" endtime="20201029 12:50:36.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.210" endtime="20201029 12:50:36.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:50:36.703" level="INFO">${FILTERED} = [{'diff': 0.100663791}, {'diff': 0.09973379200000002}, {'diff': 0.100155612}, {'diff': 0.10016759699999994}, {'diff': 0.10015583300000008}, {'diff': 0.10015598599999997}, {'diff': 0.10016968100000001}...</msg>
<status status="PASS" starttime="20201029 12:50:36.694" endtime="20201029 12:50:36.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:36.714" level="INFO">${RESULT} = {'diff': [0.100663791, 0.09973379200000002, 0.100155612, 0.10016759699999994, 0.10015583300000008, 0.10015598599999997, 0.10016968100000001, 0.100166486, 0.10015116700000004, 0.1001592360000001, 0.100...</msg>
<status status="PASS" starttime="20201029 12:50:36.705" endtime="20201029 12:50:36.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.724" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:50:36.722" endtime="20201029 12:50:36.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.730" level="INFO">VALUE: [0.100663791, 0.09973379200000002, 0.100155612, 0.10016759699999994, 0.10015583300000008, 0.10015598599999997, 0.10016968100000001, 0.100166486, 0.10015116700000004, 0.1001592360000001, 0.10016166699999984, 0.10016969400000009, 0.1001863890000001, 0.10017307000000009, 0.10017483399999993, 0.10016770800000008, 0.10016995800000017, 0.10017102700000002, 0.10015854099999988, 0.10016009700000028, 0.10016201299999983, 0.100163153, 0.10015844499999993, 0.10016520799999995, 0.1001729440000001, 0.10016552800000023, 0.10017612499999995, 0.10018069500000015, 0.10016843100000017, 0.10016837499999998, 0.10017130499999993, 0.10017054100000022, 0.10016775000000022, 0.10016963899999975, 0.10016094399999975, 0.1001634720000002, 0.10016422200000008, 0.10018051399999983, 0.10017523599999967, 0.10016709699999993, 0.10016787500000035, 0.10017590299999934, 0.10018455500000023, 0.10017140300000005, 0.10017643000000032, 0.10017561100000005, 0.10017488899999982, 0.1001694999999998, 0.10017344500000025, 0.10018020799999938, 0.10017567999999955]</msg>
<status status="PASS" starttime="20201029 12:50:36.727" endtime="20201029 12:50:36.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.716" endtime="20201029 12:50:36.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.973" endtime="20201029 12:50:36.734"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:50:29.844" endtime="20201029 12:50:36.736" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:36.752" endtime="20201029 12:50:36.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.748" endtime="20201029 12:50:36.776"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:36.809" endtime="20201029 12:50:36.826"></status>
</kw>
<msg timestamp="20201029 12:50:36.827" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:36.805" endtime="20201029 12:50:36.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.834" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:36.830" endtime="20201029 12:50:36.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.841" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:50:36.836" endtime="20201029 12:50:36.841"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:36.798" endtime="20201029 12:50:36.843"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:36.792" endtime="20201029 12:50:36.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.789" endtime="20201029 12:50:36.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:50:36.853" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:50:36.852" endtime="20201029 12:50:36.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.847" endtime="20201029 12:50:36.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.787" endtime="20201029 12:50:36.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.786" endtime="20201029 12:50:36.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:36.863" endtime="20201029 12:50:36.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.782" endtime="20201029 12:50:36.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.777" endtime="20201029 12:50:36.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.746" endtime="20201029 12:50:36.871"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:36.892" endtime="20201029 12:50:43.023"></status>
</kw>
<msg timestamp="20201029 12:50:43.024" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:36.888" endtime="20201029 12:50:43.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:43.031" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:43.026" endtime="20201029 12:50:43.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:43.033" endtime="20201029 12:50:43.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.881" endtime="20201029 12:50:43.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.876" endtime="20201029 12:50:43.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:43.046" level="INFO">${RESULT} = {'bg-timer-count': 25, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:50:43.041" endtime="20201029 12:50:43.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:43.056" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:43.054" endtime="20201029 12:50:43.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:43.061" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:50:43.058" endtime="20201029 12:50:43.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:43.048" endtime="20201029 12:50:43.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:43.072" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:43.070" endtime="20201029 12:50:43.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:43.077" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:50:43.075" endtime="20201029 12:50:43.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:43.064" endtime="20201029 12:50:43.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:43.089" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:50:43.086" endtime="20201029 12:50:43.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:43.093" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:50:43.091" endtime="20201029 12:50:43.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:43.081" endtime="20201029 12:50:43.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:43.112" endtime="20201029 12:50:43.469"></status>
</kw>
<msg timestamp="20201029 12:50:43.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130809306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.231600722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:43.109" endtime="20201029 12:50:43.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:43.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130809306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.231600722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:43.478" endtime="20201029 12:50:43.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:43.496" endtime="20201029 12:50:43.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:43.102" endtime="20201029 12:50:43.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:43.097" endtime="20201029 12:50:43.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:50:43.513" level="INFO">${FILTERED} = [{'diff': 0.10079141600000002}, {'diff': 0.099612}, {'diff': 0.10017345900000002}, {'diff': 0.10017112500000003}, {'diff': 0.10016252799999992}, {'diff': 0.100173014}, {'diff': 0.10016580500000005}, {...</msg>
<status status="PASS" starttime="20201029 12:50:43.504" endtime="20201029 12:50:43.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:43.523" level="INFO">${RESULT} = {'diff': [0.10079141600000002, 0.099612, 0.10017345900000002, 0.10017112500000003, 0.10016252799999992, 0.100173014, 0.10016580500000005, 0.10015654200000002, 0.10016868099999987, 0.10016966599999999,...</msg>
<status status="PASS" starttime="20201029 12:50:43.516" endtime="20201029 12:50:43.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:43.533" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:50:43.531" endtime="20201029 12:50:43.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:43.538" level="INFO">VALUE: [0.10079141600000002, 0.099612, 0.10017345900000002, 0.10017112500000003, 0.10016252799999992, 0.100173014, 0.10016580500000005, 0.10015654200000002, 0.10016868099999987, 0.10016966599999999, 0.10016309700000003, 0.10015898699999992, 0.1001629169999998, 0.10016172199999995, 0.10015695800000013, 0.1001532919999999, 0.10015219499999994, 0.10014501399999998, 0.10014301399999992, 0.10014815300000013, 0.10013891700000022, 0.10014481900000005, 0.100148291, 0.10016037499999975, 0.10015797299999996, 0.10016866700000016, 0.10016692999999988, 0.10015786100000001, 0.10016150000000001, 0.10016436100000004, 0.10016562499999981, 0.100160625, 0.10016047199999978, 0.10016134700000023, 0.10015504199999992, 0.10016409800000003, 0.10015955499999984, 0.10016465299999977, 0.10016880500000047, 0.10015788900000011, 0.10015758399999974, 0.10015748600000052, 0.10015412500000043, 0.10016000000000069, 0.10015804100000025, 0.10015379099999944, 0.10015327800000051, 0.10014676399999978, 0.10015163800000071, 0.10016302799999988, 0.1001683609999997]</msg>
<status status="PASS" starttime="20201029 12:50:43.535" endtime="20201029 12:50:43.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:43.525" endtime="20201029 12:50:43.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.872" endtime="20201029 12:50:43.543"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:50:36.740" endtime="20201029 12:50:43.544" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:49:59.982" endtime="20201029 12:50:43.561"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:47:08.408" endtime="20201029 12:50:43.637"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_samr21-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
