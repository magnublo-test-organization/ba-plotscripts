<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201030 15:55:11.805" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.140" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:55:13.157" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:55:15.178" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:55:13.136" endtime="20201030 15:55:15.179"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.185" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:55:15.181" endtime="20201030 15:55:15.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.133" endtime="20201030 15:55:15.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.192" endtime="20201030 15:55:15.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.189" endtime="20201030 15:55:15.533"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.573" endtime="20201030 15:55:15.591"></status>
</kw>
<msg timestamp="20201030 15:55:15.593" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.569" endtime="20201030 15:55:15.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.601" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.596" endtime="20201030 15:55:15.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.611" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:15.605" endtime="20201030 15:55:15.612"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:15.560" endtime="20201030 15:55:15.614"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:15.552" endtime="20201030 15:55:15.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.548" endtime="20201030 15:55:15.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:15.629" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:15.627" endtime="20201030 15:55:15.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.620" endtime="20201030 15:55:15.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.546" endtime="20201030 15:55:15.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.543" endtime="20201030 15:55:15.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.634" endtime="20201030 15:55:15.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.538" endtime="20201030 15:55:15.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.643" endtime="20201030 15:55:15.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.535" endtime="20201030 15:55:15.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.130" endtime="20201030 15:55:15.651"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.670" endtime="20201030 15:55:15.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.665" endtime="20201030 15:55:15.695"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.734" endtime="20201030 15:55:15.749"></status>
</kw>
<msg timestamp="20201030 15:55:15.750" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.730" endtime="20201030 15:55:15.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.757" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.753" endtime="20201030 15:55:15.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.763" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:15.759" endtime="20201030 15:55:15.764"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:15.723" endtime="20201030 15:55:15.766"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:15.717" endtime="20201030 15:55:15.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.712" endtime="20201030 15:55:15.768"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:15.776" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:15.774" endtime="20201030 15:55:15.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.770" endtime="20201030 15:55:15.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.710" endtime="20201030 15:55:15.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.708" endtime="20201030 15:55:15.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.779" endtime="20201030 15:55:15.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.703" endtime="20201030 15:55:15.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.697" endtime="20201030 15:55:15.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.661" endtime="20201030 15:55:15.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.803" endtime="20201030 15:55:15.814"></status>
</kw>
<msg timestamp="20201030 15:55:15.815" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.800" endtime="20201030 15:55:15.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.821" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.817" endtime="20201030 15:55:15.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.823" endtime="20201030 15:55:15.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.793" endtime="20201030 15:55:15.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.788" endtime="20201030 15:55:15.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.839" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:55:15.837" endtime="20201030 15:55:15.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.844" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 15:55:15.842" endtime="20201030 15:55:15.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.831" endtime="20201030 15:55:15.846"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:15.653" endtime="20201030 15:55:15.848" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:55:12.093" endtime="20201030 15:55:15.854"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.987" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:55:16.002" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:55:18.065" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:55:15.983" endtime="20201030 15:55:18.067"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.072" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:55:18.069" endtime="20201030 15:55:18.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.980" endtime="20201030 15:55:18.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.079" endtime="20201030 15:55:18.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.076" endtime="20201030 15:55:18.422"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.451" endtime="20201030 15:55:18.467"></status>
</kw>
<msg timestamp="20201030 15:55:18.468" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.448" endtime="20201030 15:55:18.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.475" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.470" endtime="20201030 15:55:18.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.482" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:18.477" endtime="20201030 15:55:18.483"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:18.441" endtime="20201030 15:55:18.485"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:18.436" endtime="20201030 15:55:18.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.433" endtime="20201030 15:55:18.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:18.496" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:18.494" endtime="20201030 15:55:18.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.489" endtime="20201030 15:55:18.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.432" endtime="20201030 15:55:18.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.430" endtime="20201030 15:55:18.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.500" endtime="20201030 15:55:18.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.426" endtime="20201030 15:55:18.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.506" endtime="20201030 15:55:18.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.423" endtime="20201030 15:55:18.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.977" endtime="20201030 15:55:18.512"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.530" endtime="20201030 15:55:18.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.524" endtime="20201030 15:55:18.554"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.648" endtime="20201030 15:55:18.664"></status>
</kw>
<msg timestamp="20201030 15:55:18.665" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.645" endtime="20201030 15:55:18.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.672" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.668" endtime="20201030 15:55:18.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.679" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:18.675" endtime="20201030 15:55:18.679"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:18.638" endtime="20201030 15:55:18.681"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:18.570" endtime="20201030 15:55:18.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.567" endtime="20201030 15:55:18.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:18.691" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:18.690" endtime="20201030 15:55:18.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.685" endtime="20201030 15:55:18.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.565" endtime="20201030 15:55:18.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.563" endtime="20201030 15:55:18.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.695" endtime="20201030 15:55:18.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.559" endtime="20201030 15:55:18.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.555" endtime="20201030 15:55:18.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.520" endtime="20201030 15:55:18.702"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.724" endtime="20201030 15:55:18.735"></status>
</kw>
<msg timestamp="20201030 15:55:18.736" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.721" endtime="20201030 15:55:18.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.742" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.738" endtime="20201030 15:55:18.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.745" endtime="20201030 15:55:18.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.714" endtime="20201030 15:55:18.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.709" endtime="20201030 15:55:18.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.770" endtime="20201030 15:55:19.123"></status>
</kw>
<msg timestamp="20201030 15:55:19.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.184265403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.184265875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.766" endtime="20201030 15:55:19.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.184265403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.184265875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.134" endtime="20201030 15:55:19.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.155" endtime="20201030 15:55:19.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.757" endtime="20201030 15:55:19.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.753" endtime="20201030 15:55:19.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.176" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 15:55:19.166" endtime="20201030 15:55:19.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:19.189" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.41...</msg>
<status status="PASS" starttime="20201030 15:55:19.179" endtime="20201030 15:55:19.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.201" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:19.198" endtime="20201030 15:55:19.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.208" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:19.204" endtime="20201030 15:55:19.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.191" endtime="20201030 15:55:19.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.223" endtime="20201030 15:55:19.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.218" endtime="20201030 15:55:19.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.215" endtime="20201030 15:55:19.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.705" endtime="20201030 15:55:19.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.704" endtime="20201030 15:55:19.252"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.280" endtime="20201030 15:55:19.292"></status>
</kw>
<msg timestamp="20201030 15:55:19.293" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.274" endtime="20201030 15:55:19.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.299" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.295" endtime="20201030 15:55:19.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.302" endtime="20201030 15:55:19.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.265" endtime="20201030 15:55:19.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.258" endtime="20201030 15:55:19.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.331" endtime="20201030 15:55:19.682"></status>
</kw>
<msg timestamp="20201030 15:55:19.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045856514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045856986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.327" endtime="20201030 15:55:19.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045856514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045856986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.695" endtime="20201030 15:55:19.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.718" endtime="20201030 15:55:19.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.318" endtime="20201030 15:55:19.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.313" endtime="20201030 15:55:19.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.735" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07...</msg>
<status status="PASS" starttime="20201030 15:55:19.726" endtime="20201030 15:55:19.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:19.746" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:55:19.738" endtime="20201030 15:55:19.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.757" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:19.754" endtime="20201030 15:55:19.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.762" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:55:19.759" endtime="20201030 15:55:19.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.748" endtime="20201030 15:55:19.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.774" endtime="20201030 15:55:19.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.770" endtime="20201030 15:55:19.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.767" endtime="20201030 15:55:19.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.254" endtime="20201030 15:55:19.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.253" endtime="20201030 15:55:19.799"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.820" endtime="20201030 15:55:19.832"></status>
</kw>
<msg timestamp="20201030 15:55:19.833" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.816" endtime="20201030 15:55:19.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.835" endtime="20201030 15:55:19.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.841" endtime="20201030 15:55:19.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.809" endtime="20201030 15:55:19.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.804" endtime="20201030 15:55:19.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.865" endtime="20201030 15:55:20.220"></status>
</kw>
<msg timestamp="20201030 15:55:20.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035927903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035928375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.861" endtime="20201030 15:55:20.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035927903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035928375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.230" endtime="20201030 15:55:20.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.249" endtime="20201030 15:55:20.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.854" endtime="20201030 15:55:20.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.849" endtime="20201030 15:55:20.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.266" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:55:20.258" endtime="20201030 15:55:20.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:20.278" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:55:20.269" endtime="20201030 15:55:20.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.288" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:20.286" endtime="20201030 15:55:20.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.293" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:20.290" endtime="20201030 15:55:20.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.280" endtime="20201030 15:55:20.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.305" endtime="20201030 15:55:20.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.301" endtime="20201030 15:55:20.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.298" endtime="20201030 15:55:20.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.801" endtime="20201030 15:55:20.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.800" endtime="20201030 15:55:20.330"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.350" endtime="20201030 15:55:20.362"></status>
</kw>
<msg timestamp="20201030 15:55:20.363" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.347" endtime="20201030 15:55:20.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.369" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.365" endtime="20201030 15:55:20.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.371" endtime="20201030 15:55:20.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.340" endtime="20201030 15:55:20.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.335" endtime="20201030 15:55:20.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.395" endtime="20201030 15:55:20.738"></status>
</kw>
<msg timestamp="20201030 15:55:20.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035715153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035715625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.391" endtime="20201030 15:55:20.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035715153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035715625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.747" endtime="20201030 15:55:20.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.767" endtime="20201030 15:55:20.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.384" endtime="20201030 15:55:20.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.379" endtime="20201030 15:55:20.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.784" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7299999999389497e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07...</msg>
<status status="PASS" starttime="20201030 15:55:20.775" endtime="20201030 15:55:20.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:20.793" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4...</msg>
<status status="PASS" starttime="20201030 15:55:20.786" endtime="20201030 15:55:20.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.803" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:20.801" endtime="20201030 15:55:20.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.808" level="INFO">VALUE: [4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:55:20.805" endtime="20201030 15:55:20.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.795" endtime="20201030 15:55:20.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.820" endtime="20201030 15:55:20.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.815" endtime="20201030 15:55:20.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.813" endtime="20201030 15:55:20.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.332" endtime="20201030 15:55:20.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.331" endtime="20201030 15:55:20.845"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.865" endtime="20201030 15:55:20.877"></status>
</kw>
<msg timestamp="20201030 15:55:20.878" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.862" endtime="20201030 15:55:20.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.884" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.880" endtime="20201030 15:55:20.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.887" endtime="20201030 15:55:20.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.854" endtime="20201030 15:55:20.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.850" endtime="20201030 15:55:20.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.910" endtime="20201030 15:55:21.253"></status>
</kw>
<msg timestamp="20201030 15:55:21.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036643181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036643653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.907" endtime="20201030 15:55:21.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036643181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036643653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.263" endtime="20201030 15:55:21.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.282" endtime="20201030 15:55:21.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.900" endtime="20201030 15:55:21.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.895" endtime="20201030 15:55:21.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.299" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7299999999389497e-07}...</msg>
<status status="PASS" starttime="20201030 15:55:21.290" endtime="20201030 15:55:21.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:21.308" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:55:21.301" endtime="20201030 15:55:21.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.318" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:21.316" endtime="20201030 15:55:21.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.323" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:21.320" endtime="20201030 15:55:21.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.310" endtime="20201030 15:55:21.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.337" endtime="20201030 15:55:21.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.331" endtime="20201030 15:55:21.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.328" endtime="20201030 15:55:21.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.846" endtime="20201030 15:55:21.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.846" endtime="20201030 15:55:21.361"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.382" endtime="20201030 15:55:21.392"></status>
</kw>
<msg timestamp="20201030 15:55:21.393" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.378" endtime="20201030 15:55:21.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.400" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.396" endtime="20201030 15:55:21.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.402" endtime="20201030 15:55:21.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.371" endtime="20201030 15:55:21.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.367" endtime="20201030 15:55:21.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.425" endtime="20201030 15:55:21.759"></status>
</kw>
<msg timestamp="20201030 15:55:21.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035133486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035133958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.421" endtime="20201030 15:55:21.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035133486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035133958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.769" endtime="20201030 15:55:21.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.788" endtime="20201030 15:55:21.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.414" endtime="20201030 15:55:21.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.410" endtime="20201030 15:55:21.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.806" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-0...</msg>
<status status="PASS" starttime="20201030 15:55:21.796" endtime="20201030 15:55:21.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:21.820" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, ...</msg>
<status status="PASS" starttime="20201030 15:55:21.809" endtime="20201030 15:55:21.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.834" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:21.830" endtime="20201030 15:55:21.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.841" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:21.836" endtime="20201030 15:55:21.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.822" endtime="20201030 15:55:21.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.856" endtime="20201030 15:55:21.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.851" endtime="20201030 15:55:21.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.848" endtime="20201030 15:55:21.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.363" endtime="20201030 15:55:21.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.362" endtime="20201030 15:55:21.882"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.902" endtime="20201030 15:55:21.913"></status>
</kw>
<msg timestamp="20201030 15:55:21.914" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.899" endtime="20201030 15:55:21.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.920" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.916" endtime="20201030 15:55:21.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.922" endtime="20201030 15:55:21.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.891" endtime="20201030 15:55:21.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.887" endtime="20201030 15:55:21.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.946" endtime="20201030 15:55:22.278"></status>
</kw>
<msg timestamp="20201030 15:55:22.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035304708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035305181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.943" endtime="20201030 15:55:22.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035304708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035305181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.287" endtime="20201030 15:55:22.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.306" endtime="20201030 15:55:22.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.935" endtime="20201030 15:55:22.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.930" endtime="20201030 15:55:22.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.323" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:55:22.314" endtime="20201030 15:55:22.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:22.334" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.719...</msg>
<status status="PASS" starttime="20201030 15:55:22.325" endtime="20201030 15:55:22.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.344" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:22.341" endtime="20201030 15:55:22.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.349" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:22.346" endtime="20201030 15:55:22.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.335" endtime="20201030 15:55:22.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.361" endtime="20201030 15:55:22.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.356" endtime="20201030 15:55:22.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.354" endtime="20201030 15:55:22.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.883" endtime="20201030 15:55:22.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.882" endtime="20201030 15:55:22.385"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.405" endtime="20201030 15:55:22.416"></status>
</kw>
<msg timestamp="20201030 15:55:22.417" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.402" endtime="20201030 15:55:22.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.423" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.419" endtime="20201030 15:55:22.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.425" endtime="20201030 15:55:22.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.395" endtime="20201030 15:55:22.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.390" endtime="20201030 15:55:22.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.450" endtime="20201030 15:55:22.838"></status>
</kw>
<msg timestamp="20201030 15:55:22.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034992486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034992958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.446" endtime="20201030 15:55:22.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034992486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034992958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.848" endtime="20201030 15:55:22.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.866" endtime="20201030 15:55:22.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.439" endtime="20201030 15:55:22.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.434" endtime="20201030 15:55:22.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.884" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 15:55:22.875" endtime="20201030 15:55:22.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:22.893" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:55:22.886" endtime="20201030 15:55:22.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.904" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:22.901" endtime="20201030 15:55:22.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.909" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:22.906" endtime="20201030 15:55:22.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.895" endtime="20201030 15:55:22.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.921" endtime="20201030 15:55:22.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.916" endtime="20201030 15:55:22.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.914" endtime="20201030 15:55:22.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.387" endtime="20201030 15:55:22.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.386" endtime="20201030 15:55:22.946"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.966" endtime="20201030 15:55:22.979"></status>
</kw>
<msg timestamp="20201030 15:55:22.980" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.963" endtime="20201030 15:55:22.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.986" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.982" endtime="20201030 15:55:22.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.989" endtime="20201030 15:55:22.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.956" endtime="20201030 15:55:22.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.951" endtime="20201030 15:55:22.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.013" endtime="20201030 15:55:23.347"></status>
</kw>
<msg timestamp="20201030 15:55:23.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037276764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037277236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.010" endtime="20201030 15:55:23.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037276764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037277236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.356" endtime="20201030 15:55:23.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.375" endtime="20201030 15:55:23.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.002" endtime="20201030 15:55:23.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.997" endtime="20201030 15:55:23.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.393" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7299999999389497e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:55:23.384" endtime="20201030 15:55:23.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:23.402" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:55:23.395" endtime="20201030 15:55:23.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.412" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:23.410" endtime="20201030 15:55:23.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.418" level="INFO">VALUE: [4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:23.415" endtime="20201030 15:55:23.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.404" endtime="20201030 15:55:23.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.435" endtime="20201030 15:55:23.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.425" endtime="20201030 15:55:23.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.423" endtime="20201030 15:55:23.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.948" endtime="20201030 15:55:23.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.947" endtime="20201030 15:55:23.460"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.480" endtime="20201030 15:55:23.491"></status>
</kw>
<msg timestamp="20201030 15:55:23.493" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.477" endtime="20201030 15:55:23.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.499" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.495" endtime="20201030 15:55:23.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.501" endtime="20201030 15:55:23.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.469" endtime="20201030 15:55:23.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.465" endtime="20201030 15:55:23.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.525" endtime="20201030 15:55:23.879"></status>
</kw>
<msg timestamp="20201030 15:55:23.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035683792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035684264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.521" endtime="20201030 15:55:23.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035683792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035684264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.889" endtime="20201030 15:55:23.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.908" endtime="20201030 15:55:23.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.514" endtime="20201030 15:55:23.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.510" endtime="20201030 15:55:23.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.926" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:55:23.917" endtime="20201030 15:55:23.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:23.937" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 15:55:23.928" endtime="20201030 15:55:23.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.947" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:23.945" endtime="20201030 15:55:23.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.953" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:23.949" endtime="20201030 15:55:23.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.938" endtime="20201030 15:55:23.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.964" endtime="20201030 15:55:23.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.960" endtime="20201030 15:55:23.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.958" endtime="20201030 15:55:23.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.462" endtime="20201030 15:55:23.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.461" endtime="20201030 15:55:23.990"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.019" endtime="20201030 15:55:24.032"></status>
</kw>
<msg timestamp="20201030 15:55:24.033" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.015" endtime="20201030 15:55:24.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.040" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.035" endtime="20201030 15:55:24.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.042" endtime="20201030 15:55:24.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.000" endtime="20201030 15:55:24.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.995" endtime="20201030 15:55:24.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.065" endtime="20201030 15:55:24.422"></status>
</kw>
<msg timestamp="20201030 15:55:24.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044651292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044651764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.062" endtime="20201030 15:55:24.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044651292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044651764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.432" endtime="20201030 15:55:24.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.451" endtime="20201030 15:55:24.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.055" endtime="20201030 15:55:24.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.050" endtime="20201030 15:55:24.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.469" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07},...</msg>
<status status="PASS" starttime="20201030 15:55:24.460" endtime="20201030 15:55:24.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:24.480" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:55:24.471" endtime="20201030 15:55:24.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.490" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:24.488" endtime="20201030 15:55:24.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.496" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:24.493" endtime="20201030 15:55:24.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.482" endtime="20201030 15:55:24.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.508" endtime="20201030 15:55:24.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.503" endtime="20201030 15:55:24.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.501" endtime="20201030 15:55:24.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.992" endtime="20201030 15:55:24.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.991" endtime="20201030 15:55:24.533"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.557" endtime="20201030 15:55:24.570"></status>
</kw>
<msg timestamp="20201030 15:55:24.571" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.554" endtime="20201030 15:55:24.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.578" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.574" endtime="20201030 15:55:24.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.581" endtime="20201030 15:55:24.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.545" endtime="20201030 15:55:24.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.539" endtime="20201030 15:55:24.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.605" endtime="20201030 15:55:24.953"></status>
</kw>
<msg timestamp="20201030 15:55:24.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039574069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039574542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.602" endtime="20201030 15:55:24.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039574069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039574542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.963" endtime="20201030 15:55:24.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.981" endtime="20201030 15:55:24.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.594" endtime="20201030 15:55:24.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.590" endtime="20201030 15:55:24.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.999" level="INFO">${RESULT} = [{'diff': 4.7299999999389497e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7299999999389497e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-0...</msg>
<status status="PASS" starttime="20201030 15:55:24.990" endtime="20201030 15:55:24.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:25.008" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7299999999389497e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, ...</msg>
<status status="PASS" starttime="20201030 15:55:25.001" endtime="20201030 15:55:25.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.018" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:25.016" endtime="20201030 15:55:25.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.024" level="INFO">VALUE: [4.7299999999389497e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:25.021" endtime="20201030 15:55:25.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.010" endtime="20201030 15:55:25.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.036" endtime="20201030 15:55:25.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.031" endtime="20201030 15:55:25.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.029" endtime="20201030 15:55:25.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.536" endtime="20201030 15:55:25.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.535" endtime="20201030 15:55:25.061"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.082" endtime="20201030 15:55:25.094"></status>
</kw>
<msg timestamp="20201030 15:55:25.095" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.078" endtime="20201030 15:55:25.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.101" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.097" endtime="20201030 15:55:25.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.104" endtime="20201030 15:55:25.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.071" endtime="20201030 15:55:25.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.066" endtime="20201030 15:55:25.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.127" endtime="20201030 15:55:25.462"></status>
</kw>
<msg timestamp="20201030 15:55:25.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036978222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036978694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.124" endtime="20201030 15:55:25.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036978222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036978694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.471" endtime="20201030 15:55:25.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.490" endtime="20201030 15:55:25.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.116" endtime="20201030 15:55:25.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.112" endtime="20201030 15:55:25.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.507" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 15:55:25.498" endtime="20201030 15:55:25.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:25.517" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:55:25.509" endtime="20201030 15:55:25.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.527" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:25.525" endtime="20201030 15:55:25.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.532" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:25.529" endtime="20201030 15:55:25.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.518" endtime="20201030 15:55:25.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.546" endtime="20201030 15:55:25.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.541" endtime="20201030 15:55:25.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.538" endtime="20201030 15:55:25.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.063" endtime="20201030 15:55:25.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.062" endtime="20201030 15:55:25.571"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.592" endtime="20201030 15:55:25.603"></status>
</kw>
<msg timestamp="20201030 15:55:25.604" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.588" endtime="20201030 15:55:25.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.610" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.606" endtime="20201030 15:55:25.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.612" endtime="20201030 15:55:25.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.581" endtime="20201030 15:55:25.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.576" endtime="20201030 15:55:25.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.636" endtime="20201030 15:55:25.982"></status>
</kw>
<msg timestamp="20201030 15:55:25.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035859167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035859639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.632" endtime="20201030 15:55:25.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035859167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035859639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.991" endtime="20201030 15:55:26.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.010" endtime="20201030 15:55:26.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.625" endtime="20201030 15:55:26.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.621" endtime="20201030 15:55:26.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.027" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:55:26.018" endtime="20201030 15:55:26.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:26.045" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:55:26.029" endtime="20201030 15:55:26.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.061" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:26.055" endtime="20201030 15:55:26.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.069" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:26.065" endtime="20201030 15:55:26.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.048" endtime="20201030 15:55:26.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.088" endtime="20201030 15:55:26.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.081" endtime="20201030 15:55:26.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.078" endtime="20201030 15:55:26.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.573" endtime="20201030 15:55:26.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.572" endtime="20201030 15:55:26.113"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.134" endtime="20201030 15:55:26.144"></status>
</kw>
<msg timestamp="20201030 15:55:26.145" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.130" endtime="20201030 15:55:26.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.152" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.148" endtime="20201030 15:55:26.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.154" endtime="20201030 15:55:26.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.123" endtime="20201030 15:55:26.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.119" endtime="20201030 15:55:26.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.179" endtime="20201030 15:55:26.510"></status>
</kw>
<msg timestamp="20201030 15:55:26.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035379528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03538, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:55:26.174" endtime="20201030 15:55:26.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035379528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03538, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:55:26.519" endtime="20201030 15:55:26.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.538" endtime="20201030 15:55:26.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.167" endtime="20201030 15:55:26.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.162" endtime="20201030 15:55:26.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.555" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:55:26.546" endtime="20201030 15:55:26.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:26.566" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.73...</msg>
<status status="PASS" starttime="20201030 15:55:26.557" endtime="20201030 15:55:26.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.576" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:26.574" endtime="20201030 15:55:26.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.581" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:26.578" endtime="20201030 15:55:26.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.568" endtime="20201030 15:55:26.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.594" endtime="20201030 15:55:26.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.589" endtime="20201030 15:55:26.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.587" endtime="20201030 15:55:26.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.115" endtime="20201030 15:55:26.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.114" endtime="20201030 15:55:26.619"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.639" endtime="20201030 15:55:26.649"></status>
</kw>
<msg timestamp="20201030 15:55:26.651" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.635" endtime="20201030 15:55:26.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.657" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.653" endtime="20201030 15:55:26.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.659" endtime="20201030 15:55:26.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.628" endtime="20201030 15:55:26.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.624" endtime="20201030 15:55:26.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.682" endtime="20201030 15:55:27.014"></status>
</kw>
<msg timestamp="20201030 15:55:27.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035189778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03519025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:26.679" endtime="20201030 15:55:27.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035189778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03519025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:27.024" endtime="20201030 15:55:27.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.042" endtime="20201030 15:55:27.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.672" endtime="20201030 15:55:27.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.667" endtime="20201030 15:55:27.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.059" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:55:27.051" endtime="20201030 15:55:27.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:27.068" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:55:27.061" endtime="20201030 15:55:27.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.078" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:27.076" endtime="20201030 15:55:27.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.084" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 15:55:27.081" endtime="20201030 15:55:27.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.070" endtime="20201030 15:55:27.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.096" endtime="20201030 15:55:27.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.092" endtime="20201030 15:55:27.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.089" endtime="20201030 15:55:27.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.620" endtime="20201030 15:55:27.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.619" endtime="20201030 15:55:27.121"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.141" endtime="20201030 15:55:27.155"></status>
</kw>
<msg timestamp="20201030 15:55:27.156" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.138" endtime="20201030 15:55:27.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.162" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.158" endtime="20201030 15:55:27.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.164" endtime="20201030 15:55:27.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.131" endtime="20201030 15:55:27.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.126" endtime="20201030 15:55:27.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.187" endtime="20201030 15:55:27.531"></status>
</kw>
<msg timestamp="20201030 15:55:27.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037078778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03707925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:27.184" endtime="20201030 15:55:27.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037078778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03707925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:27.541" endtime="20201030 15:55:27.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.561" endtime="20201030 15:55:27.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.177" endtime="20201030 15:55:27.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.172" endtime="20201030 15:55:27.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.579" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 15:55:27.570" endtime="20201030 15:55:27.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:27.588" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:55:27.581" endtime="20201030 15:55:27.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.598" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:27.596" endtime="20201030 15:55:27.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.604" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:55:27.600" endtime="20201030 15:55:27.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.590" endtime="20201030 15:55:27.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.617" endtime="20201030 15:55:27.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.612" endtime="20201030 15:55:27.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.609" endtime="20201030 15:55:27.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.123" endtime="20201030 15:55:27.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.122" endtime="20201030 15:55:27.650"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.689" endtime="20201030 15:55:27.703"></status>
</kw>
<msg timestamp="20201030 15:55:27.704" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.686" endtime="20201030 15:55:27.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.710" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.706" endtime="20201030 15:55:27.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.712" endtime="20201030 15:55:27.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.672" endtime="20201030 15:55:27.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.666" endtime="20201030 15:55:27.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.736" endtime="20201030 15:55:28.084"></status>
</kw>
<msg timestamp="20201030 15:55:28.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062257167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062257639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.733" endtime="20201030 15:55:28.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062257167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062257639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.094" endtime="20201030 15:55:28.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.113" endtime="20201030 15:55:28.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.725" endtime="20201030 15:55:28.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.721" endtime="20201030 15:55:28.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.130" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:55:28.121" endtime="20201030 15:55:28.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:28.141" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:55:28.132" endtime="20201030 15:55:28.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.151" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:28.149" endtime="20201030 15:55:28.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.156" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07]</msg>
<status status="PASS" starttime="20201030 15:55:28.153" endtime="20201030 15:55:28.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.143" endtime="20201030 15:55:28.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.169" endtime="20201030 15:55:28.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.164" endtime="20201030 15:55:28.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.162" endtime="20201030 15:55:28.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.656" endtime="20201030 15:55:28.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.655" endtime="20201030 15:55:28.194"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.214" endtime="20201030 15:55:28.225"></status>
</kw>
<msg timestamp="20201030 15:55:28.226" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.211" endtime="20201030 15:55:28.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.233" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.229" endtime="20201030 15:55:28.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.235" endtime="20201030 15:55:28.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.204" endtime="20201030 15:55:28.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.199" endtime="20201030 15:55:28.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.258" endtime="20201030 15:55:28.591"></status>
</kw>
<msg timestamp="20201030 15:55:28.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035494361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035494833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.255" endtime="20201030 15:55:28.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035494361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035494833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.601" endtime="20201030 15:55:28.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.620" endtime="20201030 15:55:28.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.248" endtime="20201030 15:55:28.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.243" endtime="20201030 15:55:28.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.637" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:55:28.628" endtime="20201030 15:55:28.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:28.651" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:55:28.639" endtime="20201030 15:55:28.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.662" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:28.659" endtime="20201030 15:55:28.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.667" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:55:28.664" endtime="20201030 15:55:28.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.653" endtime="20201030 15:55:28.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.680" endtime="20201030 15:55:28.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.675" endtime="20201030 15:55:28.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.673" endtime="20201030 15:55:28.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.196" endtime="20201030 15:55:28.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.195" endtime="20201030 15:55:28.705"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.725" endtime="20201030 15:55:28.736"></status>
</kw>
<msg timestamp="20201030 15:55:28.737" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.722" endtime="20201030 15:55:28.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.743" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.739" endtime="20201030 15:55:28.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.746" endtime="20201030 15:55:28.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.714" endtime="20201030 15:55:28.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.710" endtime="20201030 15:55:28.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.769" endtime="20201030 15:55:29.114"></status>
</kw>
<msg timestamp="20201030 15:55:29.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035455556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035456028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.766" endtime="20201030 15:55:29.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035455556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035456028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.123" endtime="20201030 15:55:29.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.142" endtime="20201030 15:55:29.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.758" endtime="20201030 15:55:29.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.754" endtime="20201030 15:55:29.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.159" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 15:55:29.150" endtime="20201030 15:55:29.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:29.168" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:55:29.161" endtime="20201030 15:55:29.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.178" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:29.176" endtime="20201030 15:55:29.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.183" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 15:55:29.180" endtime="20201030 15:55:29.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.170" endtime="20201030 15:55:29.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.201" endtime="20201030 15:55:29.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.197" endtime="20201030 15:55:29.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.194" endtime="20201030 15:55:29.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.706" endtime="20201030 15:55:29.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.705" endtime="20201030 15:55:29.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.703" endtime="20201030 15:55:29.227"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:18.514" endtime="20201030 15:55:29.228" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.245" endtime="20201030 15:55:29.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.241" endtime="20201030 15:55:29.269"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.303" endtime="20201030 15:55:29.320"></status>
</kw>
<msg timestamp="20201030 15:55:29.321" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.299" endtime="20201030 15:55:29.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.327" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.323" endtime="20201030 15:55:29.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.334" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:29.330" endtime="20201030 15:55:29.334"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:29.292" endtime="20201030 15:55:29.336"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:29.286" endtime="20201030 15:55:29.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.283" endtime="20201030 15:55:29.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:29.346" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:29.345" endtime="20201030 15:55:29.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.340" endtime="20201030 15:55:29.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.282" endtime="20201030 15:55:29.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.278" endtime="20201030 15:55:29.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.350" endtime="20201030 15:55:29.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.274" endtime="20201030 15:55:29.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.270" endtime="20201030 15:55:29.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.239" endtime="20201030 15:55:29.357"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.378" endtime="20201030 15:55:29.391"></status>
</kw>
<msg timestamp="20201030 15:55:29.393" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.375" endtime="20201030 15:55:29.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.399" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.395" endtime="20201030 15:55:29.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.402" endtime="20201030 15:55:29.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.368" endtime="20201030 15:55:29.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.363" endtime="20201030 15:55:29.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.425" endtime="20201030 15:55:29.788"></status>
</kw>
<msg timestamp="20201030 15:55:29.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124155389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.124164389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.422" endtime="20201030 15:55:29.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124155389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.124164389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.798" endtime="20201030 15:55:29.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.817" endtime="20201030 15:55:29.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.415" endtime="20201030 15:55:29.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.410" endtime="20201030 15:55:29.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.846" level="INFO">${RESULT} = [{'diff': 8.999999999995123e-06}, {'diff': 9.514000000002132e-06}, {'diff': 8.832999999999758e-06}, {'diff': 9.486999999988588e-06}, {'diff': 8.986000000002492e-06}, {'diff': 9.514000000002132e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:29.825" endtime="20201030 15:55:29.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:29.861" level="INFO">${OVERHEAD} = {'diff': [8.999999999995123e-06, 9.514000000002132e-06, 8.832999999999758e-06, 9.486999999988588e-06, 8.986000000002492e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.679999999998024e-06, 9.6950...</msg>
<status status="PASS" starttime="20201030 15:55:29.851" endtime="20201030 15:55:29.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.876" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:29.873" endtime="20201030 15:55:29.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.886" level="INFO">VALUE: [8.999999999995123e-06, 9.514000000002132e-06, 8.832999999999758e-06, 9.486999999988588e-06, 8.986000000002492e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.679999999998024e-06, 9.695000000004006e-06, 9.333999999999731e-06, 9.069000000000438e-06, 9.680999999997497e-06, 9.319999999993223e-06, 9.514000000002132e-06, 9.680999999997497e-06, 9.027000000008667e-06, 9.499999999995623e-06, 9.514000000002132e-06, 9.347000000006767e-06, 9.860999999999898e-06, 9.346999999992889e-06, 9.013000000002158e-06, 9.333000000000258e-06, 8.819999999992723e-06, 9.096999999999578e-06, 9.346999999992889e-06, 9.082999999993069e-06, 8.778000000000952e-06, 9.179999999997523e-06, 9.180999999996997e-06, 8.8200000000066e-06, 8.833999999999231e-06, 9.333000000000258e-06, 9.667000000004866e-06, 9.014000000001632e-06, 9.333000000000258e-06, 9.5000000000095e-06, 8.832999999999758e-06, 9.499999999995623e-06, 9.042000000000772e-06, 9.02699999999479e-06, 8.999999999995123e-06, 9.166999999990488e-06, 9.180999999996997e-06, 9.180999999996997e-06, 9.679999999998024e-06, 9.319999999993223e-06, 9.179999999997523e-06, 9.333000000000258e-06, 9.138999999991348e-06]</msg>
<status status="PASS" starttime="20201030 15:55:29.881" endtime="20201030 15:55:29.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.864" endtime="20201030 15:55:29.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.900" endtime="20201030 15:55:29.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.896" endtime="20201030 15:55:29.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.892" endtime="20201030 15:55:29.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.360" endtime="20201030 15:55:29.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.359" endtime="20201030 15:55:29.925"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.946" endtime="20201030 15:55:29.961"></status>
</kw>
<msg timestamp="20201030 15:55:29.962" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.942" endtime="20201030 15:55:29.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.969" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.965" endtime="20201030 15:55:29.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.971" endtime="20201030 15:55:29.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.935" endtime="20201030 15:55:29.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.931" endtime="20201030 15:55:29.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.994" endtime="20201030 15:55:30.350"></status>
</kw>
<msg timestamp="20201030 15:55:30.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038249222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038258208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.991" endtime="20201030 15:55:30.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038249222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038258208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.359" endtime="20201030 15:55:30.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.378" endtime="20201030 15:55:30.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.984" endtime="20201030 15:55:30.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.979" endtime="20201030 15:55:30.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.395" level="INFO">${RESULT} = [{'diff': 8.986000000002492e-06}, {'diff': 9.014000000001632e-06}, {'diff': 8.833999999999231e-06}, {'diff': 9.681000000004436e-06}, {'diff': 9.333000000000258e-06}, {'diff': 9.181000000003936e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:30.386" endtime="20201030 15:55:30.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:30.404" level="INFO">${OVERHEAD} = {'diff': [8.986000000002492e-06, 9.014000000001632e-06, 8.833999999999231e-06, 9.681000000004436e-06, 9.333000000000258e-06, 9.181000000003936e-06, 8.972000000002922e-06, 9.500000000002562e-06, 9.3330...</msg>
<status status="PASS" starttime="20201030 15:55:30.397" endtime="20201030 15:55:30.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.414" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:30.412" endtime="20201030 15:55:30.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.420" level="INFO">VALUE: [8.986000000002492e-06, 9.014000000001632e-06, 8.833999999999231e-06, 9.681000000004436e-06, 9.333000000000258e-06, 9.181000000003936e-06, 8.972000000002922e-06, 9.500000000002562e-06, 9.333000000000258e-06, 9.028000000001202e-06, 9.332999999993319e-06, 9.195000000003506e-06, 8.944999999996317e-06, 9.346999999999828e-06, 9.528000000001702e-06, 9.430999999997247e-06, 9.389000000005476e-06, 9.152000000005323e-06, 9.514000000002132e-06, 9.193999999997093e-06, 9.665999999998454e-06, 9.693999999997593e-06, 8.860999999998898e-06, 9.152999999997857e-06, 9.194999999996567e-06, 9.180000000004462e-06, 8.832999999999758e-06, 8.764000000001382e-06, 9.166999999997427e-06, 9.680000000004962e-06, 9.528000000001702e-06, 9.707999999997163e-06, 9.333999999999731e-06, 9.665999999998454e-06, 9.791999999994583e-06, 9.514000000002132e-06, 9.027999999994263e-06, 9.541999999994333e-06, 9.014000000001632e-06, 9.167000000004366e-06, 9.471999999996483e-06, 9.680999999997497e-06, 9.014000000001632e-06, 9.695000000004006e-06, 9.347999999999301e-06, 9.165999999997954e-06, 9.694000000004532e-06, 9.860999999999898e-06, 9.027000000001728e-06, 9.527999999994763e-06]</msg>
<status status="PASS" starttime="20201030 15:55:30.417" endtime="20201030 15:55:30.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.406" endtime="20201030 15:55:30.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.433" endtime="20201030 15:55:30.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.427" endtime="20201030 15:55:30.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.425" endtime="20201030 15:55:30.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.927" endtime="20201030 15:55:30.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.926" endtime="20201030 15:55:30.458"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.479" endtime="20201030 15:55:30.492"></status>
</kw>
<msg timestamp="20201030 15:55:30.493" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.475" endtime="20201030 15:55:30.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.499" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.495" endtime="20201030 15:55:30.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.502" endtime="20201030 15:55:30.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.468" endtime="20201030 15:55:30.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.463" endtime="20201030 15:55:30.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.525" endtime="20201030 15:55:30.923"></status>
</kw>
<msg timestamp="20201030 15:55:30.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036792694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036801542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.521" endtime="20201030 15:55:30.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036792694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036801542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.942" endtime="20201030 15:55:30.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.961" endtime="20201030 15:55:30.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.514" endtime="20201030 15:55:30.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.510" endtime="20201030 15:55:30.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.978" level="INFO">${RESULT} = [{'diff': 8.847999999998801e-06}, {'diff': 9.083999999999481e-06}, {'diff': 9.055000000000868e-06}, {'diff': 9.860999999999898e-06}, {'diff': 9.000000000002062e-06}, {'diff': 9.679999999998024e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:30.969" endtime="20201030 15:55:30.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:30.989" level="INFO">${OVERHEAD} = {'diff': [8.847999999998801e-06, 9.083999999999481e-06, 9.055000000000868e-06, 9.860999999999898e-06, 9.000000000002062e-06, 9.679999999998024e-06, 9.680999999997497e-06, 9.666000000005393e-06, 9.2089...</msg>
<status status="PASS" starttime="20201030 15:55:30.980" endtime="20201030 15:55:30.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.999" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:30.997" endtime="20201030 15:55:31.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.005" level="INFO">VALUE: [8.847999999998801e-06, 9.083999999999481e-06, 9.055000000000868e-06, 9.860999999999898e-06, 9.000000000002062e-06, 9.679999999998024e-06, 9.680999999997497e-06, 9.666000000005393e-06, 9.208999999996137e-06, 9.666000000005393e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.347999999999301e-06, 9.513000000002658e-06, 9.568999999993999e-06, 8.929999999997273e-06, 8.860999999998898e-06, 9.153000000004796e-06, 9.583999999999981e-06, 9.346999999999828e-06, 9.360999999999398e-06, 8.86200000000531e-06, 9.013000000002158e-06, 9.165999999997954e-06, 9.652999999998357e-06, 9.333999999999731e-06, 9.513999999995193e-06, 9.679999999998024e-06, 9.181000000003936e-06, 9.680000000004962e-06, 9.166999999997427e-06, 9.194000000004032e-06, 9.528000000001702e-06, 9.346999999999828e-06, 9.346999999999828e-06, 9.000000000002062e-06, 9.027999999994263e-06, 8.846999999999328e-06, 9.500000000002562e-06, 9.014000000001632e-06, 9.542000000001272e-06, 9.014000000001632e-06, 9.167000000004366e-06, 9.528000000001702e-06, 8.819000000000188e-06, 9.346999999999828e-06, 9.500000000002562e-06, 9.207999999996663e-06, 9.472999999995957e-06, 9.513000000002658e-06]</msg>
<status status="PASS" starttime="20201030 15:55:31.001" endtime="20201030 15:55:31.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.991" endtime="20201030 15:55:31.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.016" endtime="20201030 15:55:31.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.012" endtime="20201030 15:55:31.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.009" endtime="20201030 15:55:31.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.460" endtime="20201030 15:55:31.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.459" endtime="20201030 15:55:31.041"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.062" endtime="20201030 15:55:31.074"></status>
</kw>
<msg timestamp="20201030 15:55:31.075" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.059" endtime="20201030 15:55:31.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.081" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.077" endtime="20201030 15:55:31.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.083" endtime="20201030 15:55:31.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.052" endtime="20201030 15:55:31.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.047" endtime="20201030 15:55:31.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.106" endtime="20201030 15:55:31.445"></status>
</kw>
<msg timestamp="20201030 15:55:31.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036689667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036699028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.103" endtime="20201030 15:55:31.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036689667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036699028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.455" endtime="20201030 15:55:31.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.474" endtime="20201030 15:55:31.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.096" endtime="20201030 15:55:31.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.091" endtime="20201030 15:55:31.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.491" level="INFO">${RESULT} = [{'diff': 9.360999999999398e-06}, {'diff': 9.346999999999828e-06}, {'diff': 9.847999999999801e-06}, {'diff': 9.333999999999731e-06}, {'diff': 9.665999999998454e-06}, {'diff': 9.708000000004102e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:31.482" endtime="20201030 15:55:31.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:31.502" level="INFO">${OVERHEAD} = {'diff': [9.360999999999398e-06, 9.346999999999828e-06, 9.847999999999801e-06, 9.333999999999731e-06, 9.665999999998454e-06, 9.708000000004102e-06, 9.513999999995193e-06, 9.500000000002562e-06, 9.1799...</msg>
<status status="PASS" starttime="20201030 15:55:31.493" endtime="20201030 15:55:31.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.512" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:31.510" endtime="20201030 15:55:31.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.517" level="INFO">VALUE: [9.360999999999398e-06, 9.346999999999828e-06, 9.847999999999801e-06, 9.333999999999731e-06, 9.665999999998454e-06, 9.708000000004102e-06, 9.513999999995193e-06, 9.500000000002562e-06, 9.179999999997523e-06, 8.833999999999231e-06, 9.195000000003506e-06, 9.180000000004462e-06, 9.346999999999828e-06, 9.319000000000688e-06, 9.679999999998024e-06, 9.181000000003936e-06, 9.402999999998107e-06, 9.847999999999801e-06, 9.514000000002132e-06, 9.027999999994263e-06, 9.847000000000328e-06, 9.333000000000258e-06, 9.027000000001728e-06, 9.346999999999828e-06, 9.013999999994693e-06, 9.500000000002562e-06, 9.180000000004462e-06, 9.472000000003422e-06, 9.194000000004032e-06, 9.000000000002062e-06, 8.860999999998898e-06, 9.054999999993929e-06, 8.846999999999328e-06, 9.847999999999801e-06, 9.167000000004366e-06, 9.02699999999479e-06, 8.847999999998801e-06, 9.500000000002562e-06, 9.166000000004892e-06, 9.486000000002992e-06, 9.346999999999828e-06, 9.346999999999828e-06, 8.861999999998371e-06, 9.52699999999529e-06, 9.542000000001272e-06, 9.415999999998204e-06, 9.681000000004436e-06, 9.347999999999301e-06, 8.832999999999758e-06, 8.847999999998801e-06]</msg>
<status status="PASS" starttime="20201030 15:55:31.514" endtime="20201030 15:55:31.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.504" endtime="20201030 15:55:31.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.529" endtime="20201030 15:55:31.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.525" endtime="20201030 15:55:31.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.522" endtime="20201030 15:55:31.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.043" endtime="20201030 15:55:31.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.042" endtime="20201030 15:55:31.554"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.575" endtime="20201030 15:55:31.586"></status>
</kw>
<msg timestamp="20201030 15:55:31.587" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.571" endtime="20201030 15:55:31.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.594" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.590" endtime="20201030 15:55:31.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.596" endtime="20201030 15:55:31.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.564" endtime="20201030 15:55:31.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.560" endtime="20201030 15:55:31.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.619" endtime="20201030 15:55:31.958"></status>
</kw>
<msg timestamp="20201030 15:55:31.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036332625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036341778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.616" endtime="20201030 15:55:31.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036332625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036341778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.968" endtime="20201030 15:55:31.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.986" endtime="20201030 15:55:31.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.609" endtime="20201030 15:55:31.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.604" endtime="20201030 15:55:31.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.004" level="INFO">${RESULT} = [{'diff': 9.152999999997857e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.320000000000161e-06}, {'diff': 9.153000000004796e-06}, {'diff': 9.652999999998357e-06}, {'diff': 8.833999999999231e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:31.995" endtime="20201030 15:55:32.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:32.013" level="INFO">${OVERHEAD} = {'diff': [9.152999999997857e-06, 9.360999999999398e-06, 9.320000000000161e-06, 9.153000000004796e-06, 9.652999999998357e-06, 8.833999999999231e-06, 9.180000000004462e-06, 9.346999999999828e-06, 9.3330...</msg>
<status status="PASS" starttime="20201030 15:55:32.006" endtime="20201030 15:55:32.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.023" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:32.021" endtime="20201030 15:55:32.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.028" level="INFO">VALUE: [9.152999999997857e-06, 9.360999999999398e-06, 9.320000000000161e-06, 9.153000000004796e-06, 9.652999999998357e-06, 8.833999999999231e-06, 9.180000000004462e-06, 9.346999999999828e-06, 9.333000000000258e-06, 9.000000000002062e-06, 9.181000000003936e-06, 9.333999999999731e-06, 8.986000000002492e-06, 8.819000000000188e-06, 9.528000000001702e-06, 8.846999999999328e-06, 9.681000000004436e-06, 9.014000000001632e-06, 9.679999999998024e-06, 9.014000000001632e-06, 9.347999999999301e-06, 9.681000000004436e-06, 9.013999999994693e-06, 9.222000000003172e-06, 9.472000000003422e-06, 9.693999999997593e-06, 9.097000000006517e-06, 9.166000000004892e-06, 9.014000000001632e-06, 9.347999999999301e-06, 9.513999999995193e-06, 9.861000000006837e-06, 9.167000000004366e-06, 9.513999999995193e-06, 9.792000000001522e-06, 9.805000000001618e-06, 8.860999999998898e-06, 9.680999999997497e-06, 9.333000000000258e-06, 9.056000000000342e-06, 9.014000000001632e-06, 9.320000000000161e-06, 9.513999999995193e-06, 9.346999999999828e-06, 9.346999999999828e-06, 9.500000000002562e-06, 9.736000000003242e-06, 9.833000000000758e-06, 9.320000000000161e-06, 9.152999999997857e-06]</msg>
<status status="PASS" starttime="20201030 15:55:32.025" endtime="20201030 15:55:32.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.015" endtime="20201030 15:55:32.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.041" endtime="20201030 15:55:32.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.036" endtime="20201030 15:55:32.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.034" endtime="20201030 15:55:32.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.556" endtime="20201030 15:55:32.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.555" endtime="20201030 15:55:32.065"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.085" endtime="20201030 15:55:32.097"></status>
</kw>
<msg timestamp="20201030 15:55:32.099" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.082" endtime="20201030 15:55:32.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.105" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.101" endtime="20201030 15:55:32.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.107" endtime="20201030 15:55:32.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.075" endtime="20201030 15:55:32.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.071" endtime="20201030 15:55:32.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.132" endtime="20201030 15:55:32.470"></status>
</kw>
<msg timestamp="20201030 15:55:32.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035638333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035648208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.128" endtime="20201030 15:55:32.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035638333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035648208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.480" endtime="20201030 15:55:32.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.499" endtime="20201030 15:55:32.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.121" endtime="20201030 15:55:32.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.117" endtime="20201030 15:55:32.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.516" level="INFO">${RESULT} = [{'diff': 9.874999999999468e-06}, {'diff': 9.014000000001632e-06}, {'diff': 9.527000000002228e-06}, {'diff': 9.333999999999731e-06}, {'diff': 9.514000000002132e-06}, {'diff': 9.514000000002132e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:32.507" endtime="20201030 15:55:32.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:32.525" level="INFO">${OVERHEAD} = {'diff': [9.874999999999468e-06, 9.014000000001632e-06, 9.527000000002228e-06, 9.333999999999731e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.652999999998357e-06, 9.027999999994263e-06, 9.7779...</msg>
<status status="PASS" starttime="20201030 15:55:32.518" endtime="20201030 15:55:32.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.535" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:32.533" endtime="20201030 15:55:32.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.541" level="INFO">VALUE: [9.874999999999468e-06, 9.014000000001632e-06, 9.527000000002228e-06, 9.333999999999731e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.652999999998357e-06, 9.027999999994263e-06, 9.777999999995013e-06, 9.028000000001202e-06, 9.250000000002312e-06, 9.166999999997427e-06, 9.180000000004462e-06, 8.846999999999328e-06, 9.680999999997497e-06, 9.320000000000161e-06, 9.180000000004462e-06, 9.847999999999801e-06, 8.945000000003256e-06, 9.666000000005393e-06, 9.902999999998607e-06, 9.360999999999398e-06, 9.028000000001202e-06, 8.887999999998564e-06, 9.694999999997067e-06, 9.736000000003242e-06, 9.181000000003936e-06, 9.333999999999731e-06, 9.347999999999301e-06, 9.666999999997927e-06, 9.346999999999828e-06, 9.181000000003936e-06, 9.361000000006336e-06, 9.069000000000438e-06, 9.500000000002562e-06, 9.695000000004006e-06, 9.013999999994693e-06, 9.402000000005573e-06, 9.833000000000758e-06, 9.736000000003242e-06, 8.83400000000617e-06, 9.027000000001728e-06, 9.514000000002132e-06, 8.958000000003352e-06, 9.527999999994763e-06, 9.333999999999731e-06, 9.152999999997857e-06, 9.014000000001632e-06, 8.84800000000574e-06, 9.319000000000688e-06]</msg>
<status status="PASS" starttime="20201030 15:55:32.537" endtime="20201030 15:55:32.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.527" endtime="20201030 15:55:32.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.555" endtime="20201030 15:55:32.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.549" endtime="20201030 15:55:32.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.546" endtime="20201030 15:55:32.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.067" endtime="20201030 15:55:32.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.066" endtime="20201030 15:55:32.580"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.600" endtime="20201030 15:55:32.612"></status>
</kw>
<msg timestamp="20201030 15:55:32.613" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.596" endtime="20201030 15:55:32.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.619" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.615" endtime="20201030 15:55:32.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.621" endtime="20201030 15:55:32.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.589" endtime="20201030 15:55:32.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.585" endtime="20201030 15:55:32.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.644" endtime="20201030 15:55:32.976"></status>
</kw>
<msg timestamp="20201030 15:55:32.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035711028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035720056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.641" endtime="20201030 15:55:32.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035711028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035720056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.986" endtime="20201030 15:55:33.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.005" endtime="20201030 15:55:33.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.634" endtime="20201030 15:55:33.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.629" endtime="20201030 15:55:33.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.023" level="INFO">${RESULT} = [{'diff': 9.028000000001202e-06}, {'diff': 9.194000000004032e-06}, {'diff': 9.152999999997857e-06}, {'diff': 9.693999999997593e-06}, {'diff': 9.681000000004436e-06}, {'diff': 9.014000000001632e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:33.014" endtime="20201030 15:55:33.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:33.034" level="INFO">${OVERHEAD} = {'diff': [9.028000000001202e-06, 9.194000000004032e-06, 9.152999999997857e-06, 9.693999999997593e-06, 9.681000000004436e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.013999999994693e-06, 9.1670...</msg>
<status status="PASS" starttime="20201030 15:55:33.025" endtime="20201030 15:55:33.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.044" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:33.042" endtime="20201030 15:55:33.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.049" level="INFO">VALUE: [9.028000000001202e-06, 9.194000000004032e-06, 9.152999999997857e-06, 9.693999999997593e-06, 9.681000000004436e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.013999999994693e-06, 9.167000000004366e-06, 9.513000000002658e-06, 9.333000000000258e-06, 8.833999999999231e-06, 9.360999999999398e-06, 9.013999999994693e-06, 9.346999999999828e-06, 8.819000000000188e-06, 9.346999999999828e-06, 9.514000000002132e-06, 8.846999999999328e-06, 9.514000000002132e-06, 9.679999999998024e-06, 9.499999999995623e-06, 9.528000000001702e-06, 9.347999999999301e-06, 8.985999999995553e-06, 9.527999999994763e-06, 8.833999999999231e-06, 9.666999999997927e-06, 9.179999999997523e-06, 9.013999999994693e-06, 9.680999999997497e-06, 9.541999999994333e-06, 8.791999999993583e-06, 9.333000000000258e-06, 9.166000000004892e-06, 9.500000000002562e-06, 9.569000000000938e-06, 9.721999999996733e-06, 8.833999999999231e-06, 9.485999999996053e-06, 8.999999999995123e-06, 9.514000000002132e-06, 9.028000000001202e-06, 9.194000000004032e-06, 8.819999999999661e-06, 9.36200000000581e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.487000000002466e-06, 8.819000000000188e-06]</msg>
<status status="PASS" starttime="20201030 15:55:33.046" endtime="20201030 15:55:33.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.036" endtime="20201030 15:55:33.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.062" endtime="20201030 15:55:33.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.057" endtime="20201030 15:55:33.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.055" endtime="20201030 15:55:33.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.581" endtime="20201030 15:55:33.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.580" endtime="20201030 15:55:33.087"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.107" endtime="20201030 15:55:33.119"></status>
</kw>
<msg timestamp="20201030 15:55:33.120" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.104" endtime="20201030 15:55:33.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.126" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.123" endtime="20201030 15:55:33.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.129" endtime="20201030 15:55:33.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.096" endtime="20201030 15:55:33.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.092" endtime="20201030 15:55:33.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.152" endtime="20201030 15:55:33.492"></status>
</kw>
<msg timestamp="20201030 15:55:33.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036371958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036380958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.149" endtime="20201030 15:55:33.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036371958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036380958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.502" endtime="20201030 15:55:33.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.520" endtime="20201030 15:55:33.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.141" endtime="20201030 15:55:33.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.137" endtime="20201030 15:55:33.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.538" level="INFO">${RESULT} = [{'diff': 8.999999999995123e-06}, {'diff': 9.513999999995193e-06}, {'diff': 9.167000000004366e-06}, {'diff': 9.138999999998287e-06}, {'diff': 8.944999999996317e-06}, {'diff': 9.652999999998357e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:33.529" endtime="20201030 15:55:33.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:33.553" level="INFO">${OVERHEAD} = {'diff': [8.999999999995123e-06, 9.513999999995193e-06, 9.167000000004366e-06, 9.138999999998287e-06, 8.944999999996317e-06, 9.652999999998357e-06, 9.181000000003936e-06, 9.680999999997497e-06, 9.6669...</msg>
<status status="PASS" starttime="20201030 15:55:33.540" endtime="20201030 15:55:33.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.563" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:33.561" endtime="20201030 15:55:33.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.569" level="INFO">VALUE: [8.999999999995123e-06, 9.513999999995193e-06, 9.167000000004366e-06, 9.138999999998287e-06, 8.944999999996317e-06, 9.652999999998357e-06, 9.181000000003936e-06, 9.680999999997497e-06, 9.666999999997927e-06, 9.500000000002562e-06, 8.847999999998801e-06, 9.679999999998024e-06, 8.972000000002922e-06, 9.346999999999828e-06, 9.847000000000328e-06, 9.666999999997927e-06, 8.986000000002492e-06, 9.180000000004462e-06, 9.667000000004866e-06, 8.860999999998898e-06, 9.346999999999828e-06, 9.847999999999801e-06, 9.346999999999828e-06, 9.666999999997927e-06, 9.666999999997927e-06, 8.999999999995123e-06, 9.333000000000258e-06, 9.138000000005753e-06, 9.403000000005046e-06, 9.346999999999828e-06, 9.000000000002062e-06, 8.999999999995123e-06, 9.679999999998024e-06, 9.194000000004032e-06, 9.166999999997427e-06, 9.458000000003852e-06, 9.179999999997523e-06, 9.499999999995623e-06, 9.193999999997093e-06, 9.346999999999828e-06, 9.887999999999564e-06, 9.014000000001632e-06, 9.681000000004436e-06, 9.500000000002562e-06, 9.014000000001632e-06, 8.832999999999758e-06, 9.777999999995013e-06, 9.361999999998871e-06, 9.250000000002312e-06, 9.680999999997497e-06]</msg>
<status status="PASS" starttime="20201030 15:55:33.565" endtime="20201030 15:55:33.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.555" endtime="20201030 15:55:33.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.583" endtime="20201030 15:55:33.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.578" endtime="20201030 15:55:33.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.575" endtime="20201030 15:55:33.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.089" endtime="20201030 15:55:33.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.088" endtime="20201030 15:55:33.609"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.629" endtime="20201030 15:55:33.641"></status>
</kw>
<msg timestamp="20201030 15:55:33.642" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.625" endtime="20201030 15:55:33.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.648" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.644" endtime="20201030 15:55:33.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.650" endtime="20201030 15:55:33.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.618" endtime="20201030 15:55:33.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.614" endtime="20201030 15:55:33.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.673" endtime="20201030 15:55:34.007"></status>
</kw>
<msg timestamp="20201030 15:55:34.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035986625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035995806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.670" endtime="20201030 15:55:34.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035986625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035995806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.017" endtime="20201030 15:55:34.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.035" endtime="20201030 15:55:34.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.663" endtime="20201030 15:55:34.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.658" endtime="20201030 15:55:34.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.052" level="INFO">${RESULT} = [{'diff': 9.180999999996997e-06}, {'diff': 9.361000000006336e-06}, {'diff': 9.346999999999828e-06}, {'diff': 9.221999999996233e-06}, {'diff': 9.291000000001548e-06}, {'diff': 9.165999999997954e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:34.043" endtime="20201030 15:55:34.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:34.062" level="INFO">${OVERHEAD} = {'diff': [9.180999999996997e-06, 9.361000000006336e-06, 9.346999999999828e-06, 9.221999999996233e-06, 9.291000000001548e-06, 9.165999999997954e-06, 9.180999999996997e-06, 9.679999999998024e-06, 9.3330...</msg>
<status status="PASS" starttime="20201030 15:55:34.054" endtime="20201030 15:55:34.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.071" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:34.069" endtime="20201030 15:55:34.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.077" level="INFO">VALUE: [9.180999999996997e-06, 9.361000000006336e-06, 9.346999999999828e-06, 9.221999999996233e-06, 9.291000000001548e-06, 9.165999999997954e-06, 9.180999999996997e-06, 9.679999999998024e-06, 9.333000000000258e-06, 9.181000000003936e-06, 9.680999999997497e-06, 9.028000000001202e-06, 9.014000000001632e-06, 9.166000000004892e-06, 9.166999999997427e-06, 9.194999999996567e-06, 9.709000000003576e-06, 9.346999999999828e-06, 9.013999999994693e-06, 9.181000000003936e-06, 9.000000000002062e-06, 8.860999999998898e-06, 9.666999999997927e-06, 9.721999999996733e-06, 9.665999999998454e-06, 9.527000000002228e-06, 9.180999999996997e-06, 8.860999999998898e-06, 9.014000000001632e-06, 9.207999999996663e-06, 9.499999999995623e-06, 9.679999999998024e-06, 9.360999999999398e-06, 8.792000000000522e-06, 9.263000000002408e-06, 9.750000000002812e-06, 9.194999999996567e-06, 8.860999999998898e-06, 9.000000000002062e-06, 9.180999999996997e-06, 8.901999999998134e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.166999999997427e-06, 9.499999999995623e-06, 9.333999999999731e-06, 9.458999999996387e-06, 9.680000000004962e-06, 9.485999999996053e-06, 9.389000000005476e-06]</msg>
<status status="PASS" starttime="20201030 15:55:34.074" endtime="20201030 15:55:34.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.063" endtime="20201030 15:55:34.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.089" endtime="20201030 15:55:34.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.085" endtime="20201030 15:55:34.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.082" endtime="20201030 15:55:34.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.610" endtime="20201030 15:55:34.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.609" endtime="20201030 15:55:34.114"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.134" endtime="20201030 15:55:34.152"></status>
</kw>
<msg timestamp="20201030 15:55:34.154" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.131" endtime="20201030 15:55:34.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.162" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.157" endtime="20201030 15:55:34.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.167" endtime="20201030 15:55:34.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.124" endtime="20201030 15:55:34.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.119" endtime="20201030 15:55:34.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.197" endtime="20201030 15:55:34.529"></status>
</kw>
<msg timestamp="20201030 15:55:34.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038324333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038334, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:34.193" endtime="20201030 15:55:34.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038324333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038334, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:34.538" endtime="20201030 15:55:34.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.556" endtime="20201030 15:55:34.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.184" endtime="20201030 15:55:34.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.178" endtime="20201030 15:55:34.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.574" level="INFO">${RESULT} = [{'diff': 9.666999999997927e-06}, {'diff': 9.693999999997593e-06}, {'diff': 9.681000000004436e-06}, {'diff': 9.901999999999134e-06}, {'diff': 9.679999999998024e-06}, {'diff': 9.485999999996053e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:34.565" endtime="20201030 15:55:34.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:34.583" level="INFO">${OVERHEAD} = {'diff': [9.666999999997927e-06, 9.693999999997593e-06, 9.681000000004436e-06, 9.901999999999134e-06, 9.679999999998024e-06, 9.485999999996053e-06, 9.681000000004436e-06, 9.194000000004032e-06, 9.5139...</msg>
<status status="PASS" starttime="20201030 15:55:34.576" endtime="20201030 15:55:34.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.593" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:34.591" endtime="20201030 15:55:34.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.598" level="INFO">VALUE: [9.666999999997927e-06, 9.693999999997593e-06, 9.681000000004436e-06, 9.901999999999134e-06, 9.679999999998024e-06, 9.485999999996053e-06, 9.681000000004436e-06, 9.194000000004032e-06, 9.513999999995193e-06, 9.542000000001272e-06, 8.999999999995123e-06, 9.028000000001202e-06, 9.556000000000842e-06, 8.986000000002492e-06, 9.097999999999051e-06, 9.01299999999522e-06, 9.666999999997927e-06, 9.180999999996997e-06, 9.624999999999218e-06, 9.042000000000772e-06, 8.846999999999328e-06, 9.027000000001728e-06, 9.681000000004436e-06, 9.500000000002562e-06, 9.179999999997523e-06, 9.500000000002562e-06, 9.374999999998967e-06, 9.514000000002132e-06, 9.652999999998357e-06, 9.681000000004436e-06, 9.514000000002132e-06, 9.680999999997497e-06, 9.513999999995193e-06, 9.167000000004366e-06, 9.166999999997427e-06, 9.680999999997497e-06, 9.290999999994609e-06, 9.096999999999578e-06, 9.514000000002132e-06, 9.347999999999301e-06, 9.000000000002062e-06, 9.51299999999572e-06, 9.51299999999572e-06, 9.610999999999648e-06, 9.346999999999828e-06, 9.000000000002062e-06, 9.514000000002132e-06, 9.36200000000581e-06, 8.999999999995123e-06, 9.000000000002062e-06]</msg>
<status status="PASS" starttime="20201030 15:55:34.595" endtime="20201030 15:55:34.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.585" endtime="20201030 15:55:34.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.612" endtime="20201030 15:55:34.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.606" endtime="20201030 15:55:34.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.604" endtime="20201030 15:55:34.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.116" endtime="20201030 15:55:34.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.115" endtime="20201030 15:55:34.637"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.657" endtime="20201030 15:55:34.670"></status>
</kw>
<msg timestamp="20201030 15:55:34.671" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.654" endtime="20201030 15:55:34.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.677" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.673" endtime="20201030 15:55:34.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.679" endtime="20201030 15:55:34.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.647" endtime="20201030 15:55:34.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.642" endtime="20201030 15:55:34.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.702" endtime="20201030 15:55:35.034"></status>
</kw>
<msg timestamp="20201030 15:55:35.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035923694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035933028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.699" endtime="20201030 15:55:35.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035923694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035933028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.043" endtime="20201030 15:55:35.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.062" endtime="20201030 15:55:35.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.692" endtime="20201030 15:55:35.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.687" endtime="20201030 15:55:35.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.079" level="INFO">${RESULT} = [{'diff': 9.333999999999731e-06}, {'diff': 9.694000000004532e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.624999999999218e-06}, {'diff': 9.360999999999398e-06}, {'diff': 8.902999999997607e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:35.070" endtime="20201030 15:55:35.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:35.089" level="INFO">${OVERHEAD} = {'diff': [9.333999999999731e-06, 9.694000000004532e-06, 9.360999999999398e-06, 9.624999999999218e-06, 9.360999999999398e-06, 8.902999999997607e-06, 9.193999999997093e-06, 9.514000000002132e-06, 9.5000...</msg>
<status status="PASS" starttime="20201030 15:55:35.081" endtime="20201030 15:55:35.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.099" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:35.097" endtime="20201030 15:55:35.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.105" level="INFO">VALUE: [9.333999999999731e-06, 9.694000000004532e-06, 9.360999999999398e-06, 9.624999999999218e-06, 9.360999999999398e-06, 8.902999999997607e-06, 9.193999999997093e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.110999999999148e-06, 9.056000000000342e-06, 9.028000000001202e-06, 9.680000000004962e-06, 8.999999999995123e-06, 9.667000000004866e-06, 9.181000000003936e-06, 9.222999999995707e-06, 9.680999999997497e-06, 9.180000000004462e-06, 9.166999999997427e-06, 9.013999999994693e-06, 9.014000000001632e-06, 9.679999999998024e-06, 9.083999999999481e-06, 8.819999999999661e-06, 9.680999999997497e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.028000000001202e-06, 9.694000000004532e-06, 8.860999999998898e-06, 9.51299999999572e-06, 9.651999999998884e-06, 9.346999999999828e-06, 9.014000000001632e-06, 8.832999999999758e-06, 9.194999999996567e-06, 9.179999999997523e-06, 9.528000000001702e-06, 8.846999999999328e-06, 9.166999999997427e-06, 9.431000000004186e-06, 9.528000000001702e-06, 9.014000000001632e-06, 9.180999999996997e-06, 9.179999999997523e-06, 9.180999999996997e-06, 9.151999999998384e-06, 9.166999999997427e-06, 9.679999999998024e-06]</msg>
<status status="PASS" starttime="20201030 15:55:35.102" endtime="20201030 15:55:35.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.091" endtime="20201030 15:55:35.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.117" endtime="20201030 15:55:35.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.113" endtime="20201030 15:55:35.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.110" endtime="20201030 15:55:35.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.639" endtime="20201030 15:55:35.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.638" endtime="20201030 15:55:35.142"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.162" endtime="20201030 15:55:35.174"></status>
</kw>
<msg timestamp="20201030 15:55:35.175" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.159" endtime="20201030 15:55:35.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.181" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.177" endtime="20201030 15:55:35.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.183" endtime="20201030 15:55:35.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.152" endtime="20201030 15:55:35.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.147" endtime="20201030 15:55:35.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.206" endtime="20201030 15:55:35.553"></status>
</kw>
<msg timestamp="20201030 15:55:35.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035766556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035776236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.203" endtime="20201030 15:55:35.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035766556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035776236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.563" endtime="20201030 15:55:35.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.581" endtime="20201030 15:55:35.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.196" endtime="20201030 15:55:35.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.191" endtime="20201030 15:55:35.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.598" level="INFO">${RESULT} = [{'diff': 9.680000000004962e-06}, {'diff': 9.500000000002562e-06}, {'diff': 9.083999999999481e-06}, {'diff': 9.485999999996053e-06}, {'diff': 9.513999999995193e-06}, {'diff': 9.014000000001632e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:35.590" endtime="20201030 15:55:35.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:35.609" level="INFO">${OVERHEAD} = {'diff': [9.680000000004962e-06, 9.500000000002562e-06, 9.083999999999481e-06, 9.485999999996053e-06, 9.513999999995193e-06, 9.014000000001632e-06, 9.680999999997497e-06, 9.819000000001188e-06, 9.5280...</msg>
<status status="PASS" starttime="20201030 15:55:35.600" endtime="20201030 15:55:35.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.619" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:35.617" endtime="20201030 15:55:35.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.625" level="INFO">VALUE: [9.680000000004962e-06, 9.500000000002562e-06, 9.083999999999481e-06, 9.485999999996053e-06, 9.513999999995193e-06, 9.014000000001632e-06, 9.680999999997497e-06, 9.819000000001188e-06, 9.528000000001702e-06, 8.846999999999328e-06, 9.000000000002062e-06, 9.180999999996997e-06, 9.014000000001632e-06, 9.180999999996997e-06, 8.832999999999758e-06, 9.320000000000161e-06, 9.513999999995193e-06, 9.834000000000231e-06, 9.181000000003936e-06, 9.693999999997593e-06, 1.0875000000000468e-05, 9.833000000000758e-06, 9.541999999994333e-06, 8.778000000000952e-06, 9.346999999999828e-06, 9.333000000000258e-06, 9.056000000000342e-06, 8.846999999999328e-06, 9.333000000000258e-06, 9.360999999999398e-06, 9.347999999999301e-06, 9.193999999997093e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.165999999997954e-06, 9.360999999999398e-06, 9.014000000001632e-06, 9.027000000001728e-06, 9.624999999999218e-06, 9.416999999997677e-06, 8.846999999999328e-06, 8.846999999999328e-06, 9.166000000004892e-06, 9.528000000001702e-06, 8.846999999999328e-06, 9.028000000001202e-06, 9.416999999997677e-06, 8.959000000002826e-06, 9.083000000000008e-06]</msg>
<status status="PASS" starttime="20201030 15:55:35.622" endtime="20201030 15:55:35.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.611" endtime="20201030 15:55:35.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.637" endtime="20201030 15:55:35.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.633" endtime="20201030 15:55:35.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.630" endtime="20201030 15:55:35.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.144" endtime="20201030 15:55:35.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.143" endtime="20201030 15:55:35.662"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.682" endtime="20201030 15:55:35.695"></status>
</kw>
<msg timestamp="20201030 15:55:35.696" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.679" endtime="20201030 15:55:35.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.703" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.699" endtime="20201030 15:55:35.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.705" endtime="20201030 15:55:35.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.672" endtime="20201030 15:55:35.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.667" endtime="20201030 15:55:35.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.728" endtime="20201030 15:55:36.074"></status>
</kw>
<msg timestamp="20201030 15:55:36.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036050986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036060486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.725" endtime="20201030 15:55:36.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036050986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036060486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.083" endtime="20201030 15:55:36.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.102" endtime="20201030 15:55:36.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.718" endtime="20201030 15:55:36.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.713" endtime="20201030 15:55:36.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.119" level="INFO">${RESULT} = [{'diff': 9.500000000002562e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.680999999997497e-06}, {'diff': 9.014000000001632e-06}, {'diff': 9.389000000005476e-06}, {'diff': 9.014000000001632e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:36.110" endtime="20201030 15:55:36.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:36.129" level="INFO">${OVERHEAD} = {'diff': [9.500000000002562e-06, 9.360999999999398e-06, 9.680999999997497e-06, 9.014000000001632e-06, 9.389000000005476e-06, 9.014000000001632e-06, 9.860999999999898e-06, 9.360999999999398e-06, 9.3469...</msg>
<status status="PASS" starttime="20201030 15:55:36.121" endtime="20201030 15:55:36.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.138" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:36.136" endtime="20201030 15:55:36.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.144" level="INFO">VALUE: [9.500000000002562e-06, 9.360999999999398e-06, 9.680999999997497e-06, 9.014000000001632e-06, 9.389000000005476e-06, 9.014000000001632e-06, 9.860999999999898e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.374999999998967e-06, 8.819000000000188e-06, 9.347999999999301e-06, 8.986000000002492e-06, 9.667000000004866e-06, 9.500000000002562e-06, 8.847999999998801e-06, 9.34800000000624e-06, 9.513999999995193e-06, 9.709000000003576e-06, 8.986000000002492e-06, 8.860999999998898e-06, 9.320000000000161e-06, 8.889000000004976e-06, 8.84800000000574e-06, 9.680999999997497e-06, 8.986000000002492e-06, 9.374999999998967e-06, 9.222000000003172e-06, 9.679999999998024e-06, 9.096999999999578e-06, 9.679999999998024e-06, 9.528000000001702e-06, 8.819999999999661e-06, 9.165999999997954e-06, 9.333000000000258e-06, 9.500000000002562e-06, 9.346999999999828e-06, 9.000000000002062e-06, 9.458000000003852e-06, 9.680000000004962e-06, 9.305000000001118e-06, 9.680000000004962e-06, 9.374999999998967e-06, 9.667000000004866e-06, 8.846999999999328e-06, 8.957999999996413e-06, 9.180000000004462e-06, 9.320000000000161e-06]</msg>
<status status="PASS" starttime="20201030 15:55:36.141" endtime="20201030 15:55:36.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.130" endtime="20201030 15:55:36.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.156" endtime="20201030 15:55:36.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.152" endtime="20201030 15:55:36.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.149" endtime="20201030 15:55:36.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.664" endtime="20201030 15:55:36.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.663" endtime="20201030 15:55:36.181"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.201" endtime="20201030 15:55:36.216"></status>
</kw>
<msg timestamp="20201030 15:55:36.217" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.198" endtime="20201030 15:55:36.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.223" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.219" endtime="20201030 15:55:36.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.225" endtime="20201030 15:55:36.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.191" endtime="20201030 15:55:36.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.186" endtime="20201030 15:55:36.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.248" endtime="20201030 15:55:36.594"></status>
</kw>
<msg timestamp="20201030 15:55:36.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035928431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03593725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:36.245" endtime="20201030 15:55:36.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035928431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03593725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:36.603" endtime="20201030 15:55:36.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.628" endtime="20201030 15:55:36.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.238" endtime="20201030 15:55:36.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.233" endtime="20201030 15:55:36.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.652" level="INFO">${RESULT} = [{'diff': 8.819000000000188e-06}, {'diff': 9.000000000002062e-06}, {'diff': 9.346999999999828e-06}, {'diff': 9.042000000000772e-06}, {'diff': 9.667000000004866e-06}, {'diff': 9.181000000003936e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:36.641" endtime="20201030 15:55:36.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:36.663" level="INFO">${OVERHEAD} = {'diff': [8.819000000000188e-06, 9.000000000002062e-06, 9.346999999999828e-06, 9.042000000000772e-06, 9.667000000004866e-06, 9.181000000003936e-06, 9.000000000002062e-06, 9.347999999999301e-06, 8.8469...</msg>
<status status="PASS" starttime="20201030 15:55:36.655" endtime="20201030 15:55:36.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.675" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:36.673" endtime="20201030 15:55:36.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.680" level="INFO">VALUE: [8.819000000000188e-06, 9.000000000002062e-06, 9.346999999999828e-06, 9.042000000000772e-06, 9.667000000004866e-06, 9.181000000003936e-06, 9.000000000002062e-06, 9.347999999999301e-06, 8.846999999999328e-06, 9.583999999999981e-06, 9.167000000004366e-06, 8.902999999997607e-06, 9.000000000002062e-06, 9.389000000005476e-06, 9.013999999994693e-06, 9.514000000002132e-06, 9.665999999998454e-06, 9.166999999997427e-06, 9.013999999994693e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.014000000001632e-06, 9.721999999996733e-06, 9.347999999999301e-06, 9.916999999998177e-06, 8.986000000002492e-06, 8.999999999995123e-06, 8.986000000002492e-06, 9.666999999997927e-06, 9.360999999999398e-06, 9.165999999997954e-06, 9.347999999999301e-06, 9.000000000002062e-06, 9.666999999997927e-06, 9.347999999999301e-06, 9.222000000003172e-06, 8.986000000002492e-06, 9.014000000001632e-06, 8.847999999998801e-06, 9.513999999995193e-06, 9.000000000002062e-06, 9.681000000004436e-06, 9.514000000002132e-06, 9.000000000002062e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.167000000004366e-06, 9.666999999997927e-06, 8.819000000000188e-06, 9.514000000002132e-06]</msg>
<status status="PASS" starttime="20201030 15:55:36.677" endtime="20201030 15:55:36.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.666" endtime="20201030 15:55:36.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.694" endtime="20201030 15:55:36.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.688" endtime="20201030 15:55:36.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.686" endtime="20201030 15:55:36.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.183" endtime="20201030 15:55:36.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.182" endtime="20201030 15:55:36.719"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.740" endtime="20201030 15:55:36.753"></status>
</kw>
<msg timestamp="20201030 15:55:36.754" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.736" endtime="20201030 15:55:36.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.760" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.756" endtime="20201030 15:55:36.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.762" endtime="20201030 15:55:36.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.729" endtime="20201030 15:55:36.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.724" endtime="20201030 15:55:36.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.785" endtime="20201030 15:55:37.129"></status>
</kw>
<msg timestamp="20201030 15:55:37.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036254056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036263403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.782" endtime="20201030 15:55:37.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036254056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036263403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.139" endtime="20201030 15:55:37.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.157" endtime="20201030 15:55:37.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.775" endtime="20201030 15:55:37.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.770" endtime="20201030 15:55:37.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.174" level="INFO">${RESULT} = [{'diff': 9.346999999999828e-06}, {'diff': 9.514000000002132e-06}, {'diff': 8.888000000005503e-06}, {'diff': 9.013999999994693e-06}, {'diff': 9.000000000002062e-06}, {'diff': 9.513999999995193e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:37.166" endtime="20201030 15:55:37.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:37.185" level="INFO">${OVERHEAD} = {'diff': [9.346999999999828e-06, 9.514000000002132e-06, 8.888000000005503e-06, 9.013999999994693e-06, 9.000000000002062e-06, 9.513999999995193e-06, 9.333000000000258e-06, 9.01299999999522e-06, 9.01400...</msg>
<status status="PASS" starttime="20201030 15:55:37.176" endtime="20201030 15:55:37.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.195" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:37.193" endtime="20201030 15:55:37.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.200" level="INFO">VALUE: [9.346999999999828e-06, 9.514000000002132e-06, 8.888000000005503e-06, 9.013999999994693e-06, 9.000000000002062e-06, 9.513999999995193e-06, 9.333000000000258e-06, 9.01299999999522e-06, 9.014000000001632e-06, 9.167000000004366e-06, 9.193999999997093e-06, 9.665999999998454e-06, 9.680999999997497e-06, 9.513999999995193e-06, 9.513999999995193e-06, 9.681000000004436e-06, 8.846999999999328e-06, 9.542000000001272e-06, 8.847000000006267e-06, 9.457999999996913e-06, 9.000000000002062e-06, 9.360999999999398e-06, 9.333000000000258e-06, 9.834000000000231e-06, 9.473000000002896e-06, 9.679999999998024e-06, 9.500000000002562e-06, 9.693999999997593e-06, 9.528000000001702e-06, 9.487000000002466e-06, 8.973000000002396e-06, 9.181000000003936e-06, 9.347999999999301e-06, 9.514000000002132e-06, 9.346999999999828e-06, 9.514000000002132e-06, 8.847999999998801e-06, 9.610999999999648e-06, 9.679999999998024e-06, 9.333999999999731e-06, 9.180999999996997e-06, 9.681000000004436e-06, 9.680000000004962e-06, 9.193999999997093e-06, 9.666999999997927e-06, 9.485999999996053e-06, 8.832999999999758e-06, 9.666999999997927e-06, 9.014000000001632e-06, 9.346999999999828e-06]</msg>
<status status="PASS" starttime="20201030 15:55:37.197" endtime="20201030 15:55:37.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.187" endtime="20201030 15:55:37.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.212" endtime="20201030 15:55:37.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.208" endtime="20201030 15:55:37.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.206" endtime="20201030 15:55:37.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.721" endtime="20201030 15:55:37.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.720" endtime="20201030 15:55:37.237"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.257" endtime="20201030 15:55:37.271"></status>
</kw>
<msg timestamp="20201030 15:55:37.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.254" endtime="20201030 15:55:37.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.278" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.274" endtime="20201030 15:55:37.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.280" endtime="20201030 15:55:37.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.247" endtime="20201030 15:55:37.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.243" endtime="20201030 15:55:37.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.303" endtime="20201030 15:55:37.647"></status>
</kw>
<msg timestamp="20201030 15:55:37.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035820292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035829097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.300" endtime="20201030 15:55:37.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035820292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035829097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.656" endtime="20201030 15:55:37.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.675" endtime="20201030 15:55:37.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.293" endtime="20201030 15:55:37.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.288" endtime="20201030 15:55:37.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.692" level="INFO">${RESULT} = [{'diff': 8.805000000000618e-06}, {'diff': 9.320000000000161e-06}, {'diff': 9.847999999999801e-06}, {'diff': 8.847999999998801e-06}, {'diff': 9.666999999997927e-06}, {'diff': 9.166999999997427e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:37.683" endtime="20201030 15:55:37.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:37.703" level="INFO">${OVERHEAD} = {'diff': [8.805000000000618e-06, 9.320000000000161e-06, 9.847999999999801e-06, 8.847999999998801e-06, 9.666999999997927e-06, 9.166999999997427e-06, 8.985999999995553e-06, 9.027000000001728e-06, 9.1939...</msg>
<status status="PASS" starttime="20201030 15:55:37.694" endtime="20201030 15:55:37.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.713" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:37.711" endtime="20201030 15:55:37.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.718" level="INFO">VALUE: [8.805000000000618e-06, 9.320000000000161e-06, 9.847999999999801e-06, 8.847999999998801e-06, 9.666999999997927e-06, 9.166999999997427e-06, 8.985999999995553e-06, 9.027000000001728e-06, 9.193999999997093e-06, 9.013999999994693e-06, 9.180999999996997e-06, 9.679999999998024e-06, 9.180999999996997e-06, 9.346999999999828e-06, 9.943999999997843e-06, 9.319000000000688e-06, 9.693999999997593e-06, 9.167000000004366e-06, 9.27699999999504e-06, 9.679999999998024e-06, 9.513999999995193e-06, 9.028000000001202e-06, 9.361000000006336e-06, 9.193999999997093e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.166000000004892e-06, 9.680999999997497e-06, 9.346999999999828e-06, 9.083000000000008e-06, 9.333999999999731e-06, 9.652999999998357e-06, 9.541000000001798e-06, 9.401999999998634e-06, 9.694000000004532e-06, 9.152999999997857e-06, 9.179999999997523e-06, 9.902999999998607e-06, 9.680000000004962e-06, 9.167000000004366e-06, 9.792000000001522e-06, 9.055000000000868e-06, 9.486000000002992e-06, 9.167000000004366e-06, 9.820000000000662e-06, 9.179999999997523e-06, 9.346999999999828e-06, 9.513999999995193e-06, 9.694999999997067e-06]</msg>
<status status="PASS" starttime="20201030 15:55:37.715" endtime="20201030 15:55:37.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.705" endtime="20201030 15:55:37.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.731" endtime="20201030 15:55:37.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.726" endtime="20201030 15:55:37.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.724" endtime="20201030 15:55:37.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.239" endtime="20201030 15:55:37.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.238" endtime="20201030 15:55:37.756"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.776" endtime="20201030 15:55:37.789"></status>
</kw>
<msg timestamp="20201030 15:55:37.790" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.773" endtime="20201030 15:55:37.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.796" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.792" endtime="20201030 15:55:37.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.799" endtime="20201030 15:55:37.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.765" endtime="20201030 15:55:37.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.761" endtime="20201030 15:55:37.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.822" endtime="20201030 15:55:38.161"></status>
</kw>
<msg timestamp="20201030 15:55:38.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036202139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036210972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.819" endtime="20201030 15:55:38.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036202139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036210972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.170" endtime="20201030 15:55:38.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.189" endtime="20201030 15:55:38.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.811" endtime="20201030 15:55:38.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.807" endtime="20201030 15:55:38.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.206" level="INFO">${RESULT} = [{'diff': 8.832999999999758e-06}, {'diff': 9.472999999995957e-06}, {'diff': 8.999999999995123e-06}, {'diff': 9.680999999997497e-06}, {'diff': 9.014000000001632e-06}, {'diff': 9.181000000003936e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:38.198" endtime="20201030 15:55:38.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:38.217" level="INFO">${OVERHEAD} = {'diff': [8.832999999999758e-06, 9.472999999995957e-06, 8.999999999995123e-06, 9.680999999997497e-06, 9.014000000001632e-06, 9.181000000003936e-06, 8.917000000004116e-06, 9.028000000001202e-06, 8.9860...</msg>
<status status="PASS" starttime="20201030 15:55:38.208" endtime="20201030 15:55:38.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.229" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:38.226" endtime="20201030 15:55:38.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.236" level="INFO">VALUE: [8.832999999999758e-06, 9.472999999995957e-06, 8.999999999995123e-06, 9.680999999997497e-06, 9.014000000001632e-06, 9.181000000003936e-06, 8.917000000004116e-06, 9.028000000001202e-06, 8.986000000002492e-06, 9.000000000002062e-06, 8.986000000002492e-06, 9.028000000001202e-06, 9.680999999997497e-06, 9.499999999995623e-06, 9.679999999998024e-06, 9.681000000004436e-06, 9.832999999993819e-06, 9.666999999997927e-06, 9.278000000001452e-06, 9.514000000002132e-06, 8.902999999997607e-06, 9.165999999997954e-06, 9.346999999999828e-06, 9.667000000004866e-06, 8.832999999999758e-06, 9.346999999999828e-06, 8.846999999999328e-06, 9.374999999998967e-06, 9.472000000003422e-06, 9.680000000004962e-06, 9.513999999995193e-06, 8.986000000002492e-06, 8.832999999999758e-06, 9.624999999999218e-06, 9.416999999997677e-06, 9.665999999998454e-06, 9.152999999997857e-06, 9.000000000002062e-06, 9.500000000002562e-06, 9.471999999996483e-06, 9.194000000004032e-06, 9.360999999999398e-06, 9.014000000001632e-06, 9.791000000002048e-06, 9.527999999994763e-06, 9.194999999996567e-06, 8.972999999995457e-06, 9.096999999999578e-06, 9.499999999995623e-06, 9.193999999997093e-06]</msg>
<status status="PASS" starttime="20201030 15:55:38.231" endtime="20201030 15:55:38.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.219" endtime="20201030 15:55:38.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.257" endtime="20201030 15:55:38.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.250" endtime="20201030 15:55:38.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.246" endtime="20201030 15:55:38.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.757" endtime="20201030 15:55:38.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.757" endtime="20201030 15:55:38.283"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.304" endtime="20201030 15:55:38.323"></status>
</kw>
<msg timestamp="20201030 15:55:38.324" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.301" endtime="20201030 15:55:38.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.330" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.326" endtime="20201030 15:55:38.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.333" endtime="20201030 15:55:38.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.293" endtime="20201030 15:55:38.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.289" endtime="20201030 15:55:38.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.382" endtime="20201030 15:55:38.729"></status>
</kw>
<msg timestamp="20201030 15:55:38.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043023722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043032722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.376" endtime="20201030 15:55:38.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043023722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043032722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.739" endtime="20201030 15:55:38.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.757" endtime="20201030 15:55:38.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.362" endtime="20201030 15:55:38.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.348" endtime="20201030 15:55:38.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.774" level="INFO">${RESULT} = [{'diff': 9.000000000002062e-06}, {'diff': 9.694999999997067e-06}, {'diff': 9.513999999995193e-06}, {'diff': 9.000000000002062e-06}, {'diff': 9.679999999998024e-06}, {'diff': 9.500000000002562e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:38.765" endtime="20201030 15:55:38.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:38.783" level="INFO">${OVERHEAD} = {'diff': [9.000000000002062e-06, 9.694999999997067e-06, 9.513999999995193e-06, 9.000000000002062e-06, 9.679999999998024e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.056000000000342e-06, 9.4439...</msg>
<status status="PASS" starttime="20201030 15:55:38.776" endtime="20201030 15:55:38.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.793" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:38.791" endtime="20201030 15:55:38.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.799" level="INFO">VALUE: [9.000000000002062e-06, 9.694999999997067e-06, 9.513999999995193e-06, 9.000000000002062e-06, 9.679999999998024e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.056000000000342e-06, 9.443999999997343e-06, 8.860999999998898e-06, 9.597999999999551e-06, 9.014000000001632e-06, 9.499999999995623e-06, 9.486000000002992e-06, 8.999999999995123e-06, 8.986000000002492e-06, 8.846999999999328e-06, 9.319000000000688e-06, 9.693999999997593e-06, 9.860999999999898e-06, 8.860999999998898e-06, 8.847999999998801e-06, 9.124999999998717e-06, 9.666999999997927e-06, 8.846999999999328e-06, 9.180999999996997e-06, 9.457999999996913e-06, 9.346999999999828e-06, 9.749999999995873e-06, 9.847000000000328e-06, 9.165999999997954e-06, 8.819000000000188e-06, 9.541999999994333e-06, 9.680999999997497e-06, 9.179999999997523e-06, 9.235999999995803e-06, 9.667000000004866e-06, 9.665999999998454e-06, 9.167000000004366e-06, 9.346999999999828e-06, 9.514000000002132e-06, 9.736000000003242e-06, 9.333000000000258e-06, 9.292000000001022e-06, 9.528000000001702e-06, 9.194000000004032e-06, 9.153000000004796e-06, 9.666999999997927e-06, 9.445000000003756e-06, 9.000000000002062e-06]</msg>
<status status="PASS" starttime="20201030 15:55:38.796" endtime="20201030 15:55:38.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.785" endtime="20201030 15:55:38.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.812" endtime="20201030 15:55:38.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.807" endtime="20201030 15:55:38.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.804" endtime="20201030 15:55:38.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.285" endtime="20201030 15:55:38.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.284" endtime="20201030 15:55:38.837"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.857" endtime="20201030 15:55:38.869"></status>
</kw>
<msg timestamp="20201030 15:55:38.871" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.854" endtime="20201030 15:55:38.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.877" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.873" endtime="20201030 15:55:38.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.879" endtime="20201030 15:55:38.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.847" endtime="20201030 15:55:38.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.842" endtime="20201030 15:55:38.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.902" endtime="20201030 15:55:39.235"></status>
</kw>
<msg timestamp="20201030 15:55:39.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035857181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035866361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.899" endtime="20201030 15:55:39.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035857181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035866361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.244" endtime="20201030 15:55:39.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.263" endtime="20201030 15:55:39.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.892" endtime="20201030 15:55:39.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.887" endtime="20201030 15:55:39.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.280" level="INFO">${RESULT} = [{'diff': 9.179999999997523e-06}, {'diff': 8.832999999999758e-06}, {'diff': 9.333000000000258e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.166999999997427e-06}, {'diff': 8.999999999995123e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:39.271" endtime="20201030 15:55:39.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:39.291" level="INFO">${OVERHEAD} = {'diff': [9.179999999997523e-06, 8.832999999999758e-06, 9.333000000000258e-06, 9.360999999999398e-06, 9.166999999997427e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.514000000002132e-06, 9.1939...</msg>
<status status="PASS" starttime="20201030 15:55:39.282" endtime="20201030 15:55:39.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.301" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:39.298" endtime="20201030 15:55:39.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.306" level="INFO">VALUE: [9.179999999997523e-06, 8.832999999999758e-06, 9.333000000000258e-06, 9.360999999999398e-06, 9.166999999997427e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.514000000002132e-06, 9.193999999997093e-06, 9.180999999996997e-06, 8.860999999998898e-06, 9.514000000002132e-06, 9.360999999999398e-06, 9.666999999997927e-06, 8.999999999995123e-06, 9.499999999995623e-06, 9.652999999998357e-06, 9.152999999997857e-06, 9.014000000001632e-06, 9.528000000001702e-06, 9.222000000003172e-06, 9.513999999995193e-06, 9.486000000002992e-06, 9.61200000000606e-06, 8.846999999999328e-06, 9.652999999998357e-06, 8.846999999999328e-06, 9.333000000000258e-06, 9.666999999997927e-06, 9.181000000003936e-06, 9.847000000000328e-06, 9.166999999997427e-06, 9.513000000002658e-06, 9.180999999996997e-06, 8.986000000002492e-06, 9.346999999999828e-06, 9.166999999997427e-06, 8.874999999998467e-06, 8.846999999999328e-06, 9.346999999999828e-06, 9.181000000003936e-06, 9.028000000001202e-06, 9.180999999996997e-06, 9.52699999999529e-06, 9.000000000002062e-06, 9.096999999999578e-06, 9.514000000002132e-06, 9.527999999994763e-06, 9.042000000000772e-06, 9.666999999997927e-06]</msg>
<status status="PASS" starttime="20201030 15:55:39.303" endtime="20201030 15:55:39.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.292" endtime="20201030 15:55:39.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.318" endtime="20201030 15:55:39.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.314" endtime="20201030 15:55:39.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.311" endtime="20201030 15:55:39.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.839" endtime="20201030 15:55:39.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.838" endtime="20201030 15:55:39.343"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.363" endtime="20201030 15:55:39.375"></status>
</kw>
<msg timestamp="20201030 15:55:39.376" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.360" endtime="20201030 15:55:39.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.382" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.378" endtime="20201030 15:55:39.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.385" endtime="20201030 15:55:39.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.353" endtime="20201030 15:55:39.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.348" endtime="20201030 15:55:39.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.407" endtime="20201030 15:55:39.742"></status>
</kw>
<msg timestamp="20201030 15:55:39.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035599639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035609153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.404" endtime="20201030 15:55:39.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035599639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035609153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.751" endtime="20201030 15:55:39.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.769" endtime="20201030 15:55:39.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.397" endtime="20201030 15:55:39.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.393" endtime="20201030 15:55:39.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.787" level="INFO">${RESULT} = [{'diff': 9.513999999995193e-06}, {'diff': 9.694999999997067e-06}, {'diff': 9.165999999997954e-06}, {'diff': 9.249999999995373e-06}, {'diff': 8.999999999995123e-06}, {'diff': 8.986000000002492e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:39.778" endtime="20201030 15:55:39.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:39.798" level="INFO">${OVERHEAD} = {'diff': [9.513999999995193e-06, 9.694999999997067e-06, 9.165999999997954e-06, 9.249999999995373e-06, 8.999999999995123e-06, 8.986000000002492e-06, 9.333000000000258e-06, 9.777000000002478e-06, 9.1799...</msg>
<status status="PASS" starttime="20201030 15:55:39.789" endtime="20201030 15:55:39.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.808" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:39.805" endtime="20201030 15:55:39.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.813" level="INFO">VALUE: [9.513999999995193e-06, 9.694999999997067e-06, 9.165999999997954e-06, 9.249999999995373e-06, 8.999999999995123e-06, 8.986000000002492e-06, 9.333000000000258e-06, 9.777000000002478e-06, 9.179999999997523e-06, 9.458000000003852e-06, 8.846999999999328e-06, 9.333000000000258e-06, 9.693999999997593e-06, 9.013999999994693e-06, 8.943999999996843e-06, 8.846999999999328e-06, 9.014000000001632e-06, 9.388999999998537e-06, 9.346999999999828e-06, 9.874999999999468e-06, 9.346999999999828e-06, 9.597999999999551e-06, 9.166999999997427e-06, 9.181000000003936e-06, 9.013999999994693e-06, 9.333000000000258e-06, 9.000000000002062e-06, 8.819000000000188e-06, 9.166999999997427e-06, 9.360999999999398e-06, 9.360999999999398e-06, 8.999999999995123e-06, 9.361999999998871e-06, 9.166999999997427e-06, 8.874999999998467e-06, 9.528000000001702e-06, 9.694999999997067e-06, 8.833999999999231e-06, 9.193999999997093e-06, 9.680000000004962e-06, 9.52699999999529e-06, 9.485999999996053e-06, 9.415999999998204e-06, 9.138999999998287e-06, 9.208000000003602e-06, 9.027999999994263e-06, 9.528000000001702e-06, 9.667000000004866e-06, 9.388999999998537e-06, 9.459000000003326e-06]</msg>
<status status="PASS" starttime="20201030 15:55:39.810" endtime="20201030 15:55:39.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.799" endtime="20201030 15:55:39.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.830" endtime="20201030 15:55:39.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.825" endtime="20201030 15:55:39.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.823" endtime="20201030 15:55:39.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.345" endtime="20201030 15:55:39.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.344" endtime="20201030 15:55:39.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.358" endtime="20201030 15:55:39.855"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:29.233" endtime="20201030 15:55:39.856" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.874" endtime="20201030 15:55:39.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.870" endtime="20201030 15:55:39.897"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.931" endtime="20201030 15:55:39.946"></status>
</kw>
<msg timestamp="20201030 15:55:39.948" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.926" endtime="20201030 15:55:39.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.954" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.950" endtime="20201030 15:55:39.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.960" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:39.956" endtime="20201030 15:55:39.961"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:39.919" endtime="20201030 15:55:39.963"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:39.913" endtime="20201030 15:55:39.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.910" endtime="20201030 15:55:39.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:39.973" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:39.971" endtime="20201030 15:55:39.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.967" endtime="20201030 15:55:39.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.908" endtime="20201030 15:55:39.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.907" endtime="20201030 15:55:39.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.977" endtime="20201030 15:55:39.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.903" endtime="20201030 15:55:39.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.898" endtime="20201030 15:55:39.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.867" endtime="20201030 15:55:39.983"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.006" endtime="20201030 15:55:40.026"></status>
</kw>
<msg timestamp="20201030 15:55:40.027" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.002" endtime="20201030 15:55:40.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.033" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.030" endtime="20201030 15:55:40.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.036" endtime="20201030 15:55:40.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.995" endtime="20201030 15:55:40.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.989" endtime="20201030 15:55:40.043"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.048" endtime="20201030 15:55:40.052"></status>
</kw>
<msg timestamp="20201030 15:55:40.053" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:55:40.045" endtime="20201030 15:55:40.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.063" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:55:40.061" endtime="20201030 15:55:40.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.068" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:55:40.065" endtime="20201030 15:55:40.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.055" endtime="20201030 15:55:40.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.080" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:55:40.077" endtime="20201030 15:55:40.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.084" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:55:40.082" endtime="20201030 15:55:40.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.071" endtime="20201030 15:55:40.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.102" endtime="20201030 15:55:40.494"></status>
</kw>
<msg timestamp="20201030 15:55:40.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123679264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.123701861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.099" endtime="20201030 15:55:40.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123679264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.123701861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.504" endtime="20201030 15:55:40.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.523" endtime="20201030 15:55:40.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.092" endtime="20201030 15:55:40.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.087" endtime="20201030 15:55:40.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.540" level="INFO">${RESULT} = [{'diff': 2.25969999999992e-05}, {'diff': 2.3915999999998827e-05}, {'diff': 2.4806000000002215e-05}, {'diff': 2.456900000000206e-05}, {'diff': 2.4070000000001035e-05}, {'diff': 2.4402999999992292e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:40.531" endtime="20201030 15:55:40.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:40.549" level="INFO">${OVERHEAD} = {'diff': [2.25969999999992e-05, 2.3915999999998827e-05, 2.4806000000002215e-05, 2.456900000000206e-05, 2.4070000000001035e-05, 2.4402999999992292e-05, 2.3874999999992652e-05, 2.47369999999969e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 15:55:40.542" endtime="20201030 15:55:40.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.560" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:55:40.558" endtime="20201030 15:55:40.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.565" level="INFO">VALUE: [2.25969999999992e-05, 2.3915999999998827e-05, 2.4806000000002215e-05, 2.456900000000206e-05, 2.4070000000001035e-05, 2.4402999999992292e-05, 2.3874999999992652e-05, 2.47369999999969e-05, 2.472300000000427e-05, 2.3958000000004476e-05, 2.3930000000005336e-05, 2.4235999999996927e-05, 2.386100000000002e-05, 2.4570000000001535e-05, 2.4610999999993832e-05, 2.388899999999916e-05, 2.4736000000011305e-05, 2.4250000000003435e-05, 2.3916000000012705e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.3902999999991792e-05, 2.4570000000001535e-05, 2.390300000000567e-05, 2.4277999999988698e-05, 2.390300000000567e-05, 2.4762999999997093e-05, 2.4055999999994526e-05, 2.3915999999998827e-05, 2.462500000000034e-05, 2.4402999999992292e-05, 2.4235999999996927e-05, 2.422299999998989e-05, 2.4250000000003435e-05, 2.4485999999990238e-05, 2.39169999999983e-05, 2.4374999999993152e-05, 2.390300000000567e-05, 2.440300000000617e-05, 2.4735999999997427e-05, 2.4055999999994526e-05, 2.3902999999991792e-05, 2.3916000000012705e-05, 2.4054999999995053e-05, 2.3735999999996427e-05, 2.4804999999988864e-05, 2.440300000000617e-05, 2.4070000000014913e-05, 2.4570000000001535e-05, 2.4749999999990058e-05]</msg>
<status status="PASS" starttime="20201030 15:55:40.562" endtime="20201030 15:55:40.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.551" endtime="20201030 15:55:40.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.578" endtime="20201030 15:55:40.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.574" endtime="20201030 15:55:40.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.571" endtime="20201030 15:55:40.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.985" endtime="20201030 15:55:40.603"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:39.861" endtime="20201030 15:55:40.604" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.621" endtime="20201030 15:55:40.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.618" endtime="20201030 15:55:40.645"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.679" endtime="20201030 15:55:40.697"></status>
</kw>
<msg timestamp="20201030 15:55:40.698" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.676" endtime="20201030 15:55:40.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.705" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.701" endtime="20201030 15:55:40.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.711" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:40.707" endtime="20201030 15:55:40.712"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:40.669" endtime="20201030 15:55:40.714"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:40.662" endtime="20201030 15:55:40.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.660" endtime="20201030 15:55:40.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:40.724" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:40.722" endtime="20201030 15:55:40.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.718" endtime="20201030 15:55:40.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.658" endtime="20201030 15:55:40.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.654" endtime="20201030 15:55:40.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.727" endtime="20201030 15:55:40.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.650" endtime="20201030 15:55:40.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.646" endtime="20201030 15:55:40.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.615" endtime="20201030 15:55:40.734"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.756" endtime="20201030 15:55:40.839"></status>
</kw>
<msg timestamp="20201030 15:55:40.840" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.753" endtime="20201030 15:55:40.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.846" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.842" endtime="20201030 15:55:40.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.849" endtime="20201030 15:55:40.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.746" endtime="20201030 15:55:40.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.740" endtime="20201030 15:55:40.856"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.860" endtime="20201030 15:55:40.865"></status>
</kw>
<msg timestamp="20201030 15:55:40.866" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:55:40.857" endtime="20201030 15:55:40.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.876" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:55:40.874" endtime="20201030 15:55:40.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.881" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:55:40.879" endtime="20201030 15:55:40.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.868" endtime="20201030 15:55:40.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.894" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:55:40.890" endtime="20201030 15:55:40.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.899" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:55:40.896" endtime="20201030 15:55:40.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.884" endtime="20201030 15:55:40.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.917" endtime="20201030 15:55:41.269"></status>
</kw>
<msg timestamp="20201030 15:55:41.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127615819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127641167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.914" endtime="20201030 15:55:41.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127615819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127641167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.279" endtime="20201030 15:55:41.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.297" endtime="20201030 15:55:41.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.907" endtime="20201030 15:55:41.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.902" endtime="20201030 15:55:41.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.314" level="INFO">${RESULT} = [{'diff': 2.5348000000008364e-05}, {'diff': 3.426400000000607e-05}, {'diff': 3.4096999999982947e-05}, {'diff': 3.4292000000019085e-05}, {'diff': 3.424999999998568e-05}, {'diff': 3.423599999999305e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:41.305" endtime="20201030 15:55:41.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:41.323" level="INFO">${OVERHEAD} = {'diff': [2.5348000000008364e-05, 3.426400000000607e-05, 3.4096999999982947e-05, 3.4292000000019085e-05, 3.424999999998568e-05, 3.423599999999305e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.409...</msg>
<status status="PASS" starttime="20201030 15:55:41.316" endtime="20201030 15:55:41.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.334" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:55:41.332" endtime="20201030 15:55:41.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.340" level="INFO">VALUE: [2.5348000000008364e-05, 3.426400000000607e-05, 3.4096999999982947e-05, 3.4292000000019085e-05, 3.424999999998568e-05, 3.423599999999305e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.40970000000107e-05, 3.424999999998568e-05, 3.422200000000042e-05, 3.4263000000006594e-05, 3.42779999999987e-05, 3.426400000000607e-05, 3.422200000000042e-05, 3.4250000000013436e-05, 3.40970000000107e-05, 3.42779999999987e-05, 3.429199999999133e-05, 3.4098000000010176e-05, 3.4236999999992523e-05, 3.420800000000779e-05, 3.426299999997884e-05, 3.426400000000607e-05, 3.423599999999305e-05, 3.426399999997831e-05, 3.4276999999999225e-05, 3.4068999999997684e-05, 3.411100000000333e-05, 3.420800000000779e-05, 3.429100000001961e-05, 3.4290999999991856e-05, 3.422200000000042e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.4082999999990315e-05, 3.426299999997884e-05, 3.40970000000107e-05, 3.429100000001961e-05, 3.4250000000013436e-05, 3.4276999999999225e-05, 3.42779999999987e-05, 3.4098000000010176e-05, 3.429199999999133e-05, 3.4250000000013436e-05, 3.429199999999133e-05, 3.429199999999133e-05, 3.4292000000019085e-05, 3.4096999999982947e-05, 3.4290999999991856e-05]</msg>
<status status="PASS" starttime="20201030 15:55:41.337" endtime="20201030 15:55:41.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.325" endtime="20201030 15:55:41.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.354" endtime="20201030 15:55:41.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.348" endtime="20201030 15:55:41.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.345" endtime="20201030 15:55:41.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.735" endtime="20201030 15:55:41.379"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:40.609" endtime="20201030 15:55:41.380" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.397" endtime="20201030 15:55:41.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.393" endtime="20201030 15:55:41.420"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.455" endtime="20201030 15:55:41.473"></status>
</kw>
<msg timestamp="20201030 15:55:41.474" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.451" endtime="20201030 15:55:41.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.482" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.477" endtime="20201030 15:55:41.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.492" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:41.486" endtime="20201030 15:55:41.493"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:41.443" endtime="20201030 15:55:41.496"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:41.436" endtime="20201030 15:55:41.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.434" endtime="20201030 15:55:41.499"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:41.508" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:41.506" endtime="20201030 15:55:41.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.501" endtime="20201030 15:55:41.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.432" endtime="20201030 15:55:41.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.430" endtime="20201030 15:55:41.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.512" endtime="20201030 15:55:41.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.426" endtime="20201030 15:55:41.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.422" endtime="20201030 15:55:41.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.391" endtime="20201030 15:55:41.519"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.543" endtime="20201030 15:55:41.736"></status>
</kw>
<msg timestamp="20201030 15:55:41.737" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.537" endtime="20201030 15:55:41.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.744" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.740" endtime="20201030 15:55:41.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.746" endtime="20201030 15:55:41.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.530" endtime="20201030 15:55:41.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.524" endtime="20201030 15:55:41.753"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.758" endtime="20201030 15:55:41.764"></status>
</kw>
<msg timestamp="20201030 15:55:41.765" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:55:41.755" endtime="20201030 15:55:41.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.779" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:55:41.776" endtime="20201030 15:55:41.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.786" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:55:41.783" endtime="20201030 15:55:41.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.767" endtime="20201030 15:55:41.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.802" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:55:41.799" endtime="20201030 15:55:41.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.809" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:55:41.805" endtime="20201030 15:55:41.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.791" endtime="20201030 15:55:41.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.828" endtime="20201030 15:55:42.175"></status>
</kw>
<msg timestamp="20201030 15:55:42.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139765208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139802431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.824" endtime="20201030 15:55:42.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139765208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139802431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.184" endtime="20201030 15:55:42.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.202" endtime="20201030 15:55:42.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.817" endtime="20201030 15:55:42.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.813" endtime="20201030 15:55:42.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.219" level="INFO">${RESULT} = [{'diff': 3.722300000000289e-05}, {'diff': 5.42780000000187e-05}, {'diff': 5.433299999998975e-05}, {'diff': 5.430600000000396e-05}, {'diff': 5.4277999999990945e-05}, {'diff': 5.4347999999981855e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:42.211" endtime="20201030 15:55:42.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:42.231" level="INFO">${OVERHEAD} = {'diff': [3.722300000000289e-05, 5.42780000000187e-05, 5.433299999998975e-05, 5.430600000000396e-05, 5.4277999999990945e-05, 5.4347999999981855e-05, 5.440299999998066e-05, 5.433400000001698e-05, 5.433...</msg>
<status status="PASS" starttime="20201030 15:55:42.221" endtime="20201030 15:55:42.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.242" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:55:42.240" endtime="20201030 15:55:42.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.248" level="INFO">VALUE: [3.722300000000289e-05, 5.42780000000187e-05, 5.433299999998975e-05, 5.430600000000396e-05, 5.4277999999990945e-05, 5.4347999999981855e-05, 5.440299999998066e-05, 5.433400000001698e-05, 5.4333999999989224e-05, 5.433299999998975e-05, 5.4291999999983576e-05, 5.430500000000449e-05, 5.431999999999659e-05, 5.431899999999712e-05, 5.42780000000187e-05, 5.430600000000396e-05, 5.431999999999659e-05, 5.4291999999983576e-05, 5.430500000000449e-05, 5.430500000000449e-05, 5.432000000002435e-05, 5.430600000000396e-05, 5.431899999999712e-05, 5.434699999998238e-05, 5.430600000000396e-05, 5.431899999999712e-05, 5.432000000002435e-05, 5.42909999999841e-05, 5.4319000000024875e-05, 5.41390000000086e-05, 5.4347999999981855e-05, 5.430500000000449e-05, 5.436100000000277e-05, 5.429200000001133e-05, 5.43749999999954e-05, 5.42780000000187e-05, 5.4305000000032244e-05, 5.4332999999961995e-05, 5.431999999999659e-05, 5.430600000000396e-05, 5.42780000000187e-05, 5.431999999999659e-05, 5.416699999999386e-05, 5.429200000001133e-05, 5.4333000000017506e-05, 5.4318999999969364e-05, 5.4320000000052104e-05, 5.431999999999659e-05, 5.4333000000017506e-05, 5.431999999999659e-05]</msg>
<status status="PASS" starttime="20201030 15:55:42.245" endtime="20201030 15:55:42.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.233" endtime="20201030 15:55:42.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.261" endtime="20201030 15:55:42.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.257" endtime="20201030 15:55:42.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.254" endtime="20201030 15:55:42.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.520" endtime="20201030 15:55:42.293"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:41.384" endtime="20201030 15:55:42.297" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.347" endtime="20201030 15:55:42.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.338" endtime="20201030 15:55:42.375"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.407" endtime="20201030 15:55:42.425"></status>
</kw>
<msg timestamp="20201030 15:55:42.426" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.404" endtime="20201030 15:55:42.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.433" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.428" endtime="20201030 15:55:42.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.439" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:42.435" endtime="20201030 15:55:42.440"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:42.397" endtime="20201030 15:55:42.442"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:42.391" endtime="20201030 15:55:42.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.388" endtime="20201030 15:55:42.444"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:42.452" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:42.450" endtime="20201030 15:55:42.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.446" endtime="20201030 15:55:42.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.386" endtime="20201030 15:55:42.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.385" endtime="20201030 15:55:42.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.457" endtime="20201030 15:55:42.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.381" endtime="20201030 15:55:42.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.376" endtime="20201030 15:55:42.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.328" endtime="20201030 15:55:42.464"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.486" endtime="20201030 15:55:42.512"></status>
</kw>
<msg timestamp="20201030 15:55:42.513" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.483" endtime="20201030 15:55:42.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.519" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.515" endtime="20201030 15:55:42.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.522" endtime="20201030 15:55:42.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.475" endtime="20201030 15:55:42.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.470" endtime="20201030 15:55:42.529"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.537" endtime="20201030 15:55:42.546"></status>
</kw>
<msg timestamp="20201030 15:55:42.550" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:55:42.531" endtime="20201030 15:55:42.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.564" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:55:42.560" endtime="20201030 15:55:42.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.572" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:55:42.568" endtime="20201030 15:55:42.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.552" endtime="20201030 15:55:42.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.586" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:55:42.584" endtime="20201030 15:55:42.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.591" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:55:42.589" endtime="20201030 15:55:42.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.577" endtime="20201030 15:55:42.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.611" endtime="20201030 15:55:42.963"></status>
</kw>
<msg timestamp="20201030 15:55:42.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127187708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127212819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.607" endtime="20201030 15:55:42.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127187708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127212819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.972" endtime="20201030 15:55:42.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.991" endtime="20201030 15:55:42.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.599" endtime="20201030 15:55:42.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.594" endtime="20201030 15:55:42.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.008" level="INFO">${RESULT} = [{'diff': 2.5110999999994332e-05}, {'diff': 2.4166999999991612e-05}, {'diff': 2.4151999999999507e-05}, {'diff': 2.4166000000019894e-05}, {'diff': 2.4082999999980315e-05}, {'diff': 2.5070000000015913e-...</msg>
<status status="PASS" starttime="20201030 15:55:42.999" endtime="20201030 15:55:43.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:43.023" level="INFO">${OVERHEAD} = {'diff': [2.5110999999994332e-05, 2.4166999999991612e-05, 2.4151999999999507e-05, 2.4166000000019894e-05, 2.4082999999980315e-05, 2.5070000000015913e-05, 2.415299999999898e-05, 2.413900000000635e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:43.010" endtime="20201030 15:55:43.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.034" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:55:43.032" endtime="20201030 15:55:43.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.040" level="INFO">VALUE: [2.5110999999994332e-05, 2.4166999999991612e-05, 2.4151999999999507e-05, 2.4166000000019894e-05, 2.4082999999980315e-05, 2.5070000000015913e-05, 2.415299999999898e-05, 2.413900000000635e-05, 2.412500000001372e-05, 2.4151999999999507e-05, 2.4151999999999507e-05, 2.5042000000002895e-05, 2.423599999998305e-05, 2.4167000000019367e-05, 2.4111999999992806e-05, 2.40970000000007e-05, 2.4180000000012525e-05, 2.415299999999898e-05, 2.5070000000015913e-05, 2.5084000000008544e-05, 2.5054999999996053e-05, 2.4110999999993332e-05, 2.5070000000015913e-05, 2.4138999999978594e-05, 2.4166999999991612e-05, 2.4180000000012525e-05, 2.5054999999996053e-05, 2.5042000000002895e-05, 2.412500000001372e-05, 2.5013999999989878e-05, 2.417999999998477e-05, 2.4180000000012525e-05, 2.4194000000005156e-05, 2.413900000000635e-05, 2.4194999999976874e-05, 2.4236000000010804e-05, 2.504100000000342e-05, 2.506900000001644e-05, 2.5055999999995526e-05, 2.4098000000000175e-05, 2.4999999999997247e-05, 2.5124999999986963e-05, 2.50970000000017e-05, 2.4069999999987157e-05, 2.4084000000007544e-05, 2.5055000000023808e-05, 2.50970000000017e-05, 2.40970000000007e-05, 2.420899999999726e-05, 2.5042000000002895e-05]</msg>
<status status="PASS" starttime="20201030 15:55:43.037" endtime="20201030 15:55:43.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.025" endtime="20201030 15:55:43.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.052" endtime="20201030 15:55:43.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.048" endtime="20201030 15:55:43.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.045" endtime="20201030 15:55:43.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.465" endtime="20201030 15:55:43.077"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:42.311" endtime="20201030 15:55:43.078" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.095" endtime="20201030 15:55:43.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.092" endtime="20201030 15:55:43.119"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.153" endtime="20201030 15:55:43.168"></status>
</kw>
<msg timestamp="20201030 15:55:43.169" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.148" endtime="20201030 15:55:43.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.175" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.171" endtime="20201030 15:55:43.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.182" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:43.178" endtime="20201030 15:55:43.182"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:43.141" endtime="20201030 15:55:43.184"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:43.134" endtime="20201030 15:55:43.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.132" endtime="20201030 15:55:43.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:43.194" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:43.193" endtime="20201030 15:55:43.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.188" endtime="20201030 15:55:43.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.130" endtime="20201030 15:55:43.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.128" endtime="20201030 15:55:43.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.198" endtime="20201030 15:55:43.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.124" endtime="20201030 15:55:43.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.120" endtime="20201030 15:55:43.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.089" endtime="20201030 15:55:43.209"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.241" endtime="20201030 15:55:43.324"></status>
</kw>
<msg timestamp="20201030 15:55:43.325" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.236" endtime="20201030 15:55:43.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.332" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.328" endtime="20201030 15:55:43.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.335" endtime="20201030 15:55:43.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.227" endtime="20201030 15:55:43.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.221" endtime="20201030 15:55:43.342"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.346" endtime="20201030 15:55:43.351"></status>
</kw>
<msg timestamp="20201030 15:55:43.352" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:55:43.344" endtime="20201030 15:55:43.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.363" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:55:43.361" endtime="20201030 15:55:43.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.368" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:55:43.366" endtime="20201030 15:55:43.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.355" endtime="20201030 15:55:43.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.380" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:55:43.377" endtime="20201030 15:55:43.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.384" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:55:43.382" endtime="20201030 15:55:43.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.371" endtime="20201030 15:55:43.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.403" endtime="20201030 15:55:43.756"></status>
</kw>
<msg timestamp="20201030 15:55:43.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139147639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139179278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.400" endtime="20201030 15:55:43.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139147639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139179278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.765" endtime="20201030 15:55:43.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.784" endtime="20201030 15:55:43.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.393" endtime="20201030 15:55:43.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.388" endtime="20201030 15:55:43.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.801" level="INFO">${RESULT} = [{'diff': 3.163899999999997e-05}, {'diff': 3.147200000000461e-05}, {'diff': 3.1666999999985235e-05}, {'diff': 3.165300000002036e-05}, {'diff': 3.148599999999724e-05}, {'diff': 3.149999999998987e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:43.792" endtime="20201030 15:55:43.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:43.811" level="INFO">${OVERHEAD} = {'diff': [3.163899999999997e-05, 3.147200000000461e-05, 3.1666999999985235e-05, 3.165300000002036e-05, 3.148599999999724e-05, 3.149999999998987e-05, 3.147200000000461e-05, 3.166700000001299e-05, 3.148...</msg>
<status status="PASS" starttime="20201030 15:55:43.803" endtime="20201030 15:55:43.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.822" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:55:43.819" endtime="20201030 15:55:43.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.827" level="INFO">VALUE: [3.163899999999997e-05, 3.147200000000461e-05, 3.1666999999985235e-05, 3.165300000002036e-05, 3.148599999999724e-05, 3.149999999998987e-05, 3.147200000000461e-05, 3.166700000001299e-05, 3.148599999999724e-05, 3.149999999998987e-05, 3.158300000000169e-05, 3.148599999999724e-05, 3.162500000000734e-05, 3.168100000000562e-05, 3.168100000000562e-05, 3.166700000001299e-05, 3.167999999997839e-05, 3.149999999998987e-05, 3.1652000000020886e-05, 3.148699999999671e-05, 3.148599999999724e-05, 3.170799999999141e-05, 3.149999999998987e-05, 3.1652999999992604e-05, 3.149999999998987e-05, 3.14170000000058e-05, 3.16380000000005e-05, 3.148599999999724e-05, 3.1666999999985235e-05, 3.148599999999724e-05, 3.168000000000615e-05, 3.149999999998987e-05, 3.167999999997839e-05, 3.149999999998987e-05, 3.1652999999992604e-05, 3.148599999999724e-05, 3.165199999999313e-05, 3.149999999998987e-05, 3.163899999999997e-05, 3.148599999999724e-05, 3.166599999998576e-05, 3.1500000000017625e-05, 3.147300000000408e-05, 3.1652999999992604e-05, 3.148599999999724e-05, 3.1652999999992604e-05, 3.147200000000461e-05, 3.165199999999313e-05, 3.149999999998987e-05, 3.149999999998987e-05]</msg>
<status status="PASS" starttime="20201030 15:55:43.824" endtime="20201030 15:55:43.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.812" endtime="20201030 15:55:43.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.840" endtime="20201030 15:55:43.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.835" endtime="20201030 15:55:43.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.833" endtime="20201030 15:55:43.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.211" endtime="20201030 15:55:43.866"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:43.083" endtime="20201030 15:55:43.868" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.892" endtime="20201030 15:55:43.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.885" endtime="20201030 15:55:43.916"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.952" endtime="20201030 15:55:43.973"></status>
</kw>
<msg timestamp="20201030 15:55:43.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.949" endtime="20201030 15:55:43.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.981" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.977" endtime="20201030 15:55:43.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.988" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:43.983" endtime="20201030 15:55:43.988"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:43.941" endtime="20201030 15:55:43.990"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:43.935" endtime="20201030 15:55:43.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.930" endtime="20201030 15:55:43.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:44.001" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:43.999" endtime="20201030 15:55:44.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.994" endtime="20201030 15:55:44.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.928" endtime="20201030 15:55:44.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.926" endtime="20201030 15:55:44.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.004" endtime="20201030 15:55:44.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.922" endtime="20201030 15:55:44.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.918" endtime="20201030 15:55:44.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.881" endtime="20201030 15:55:44.011"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.034" endtime="20201030 15:55:44.237"></status>
</kw>
<msg timestamp="20201030 15:55:44.238" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.031" endtime="20201030 15:55:44.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.244" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.240" endtime="20201030 15:55:44.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.247" endtime="20201030 15:55:44.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.023" endtime="20201030 15:55:44.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.017" endtime="20201030 15:55:44.255"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.259" endtime="20201030 15:55:44.264"></status>
</kw>
<msg timestamp="20201030 15:55:44.265" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:55:44.256" endtime="20201030 15:55:44.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.275" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:55:44.273" endtime="20201030 15:55:44.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.280" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:55:44.277" endtime="20201030 15:55:44.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.267" endtime="20201030 15:55:44.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.292" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:55:44.290" endtime="20201030 15:55:44.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.297" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:55:44.295" endtime="20201030 15:55:44.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.283" endtime="20201030 15:55:44.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.320" endtime="20201030 15:55:44.691"></status>
</kw>
<msg timestamp="20201030 15:55:44.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135944111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135984167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.316" endtime="20201030 15:55:44.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135944111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135984167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.700" endtime="20201030 15:55:44.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.719" endtime="20201030 15:55:44.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.306" endtime="20201030 15:55:44.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.301" endtime="20201030 15:55:44.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.736" level="INFO">${RESULT} = [{'diff': 4.005599999998277e-05}, {'diff': 3.9180999999999244e-05}, {'diff': 4.001400000000488e-05}, {'diff': 3.9194999999991875e-05}, {'diff': 3.917999999999977e-05}, {'diff': 3.9125000000000965e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:44.727" endtime="20201030 15:55:44.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:44.746" level="INFO">${OVERHEAD} = {'diff': [4.005599999998277e-05, 3.9180999999999244e-05, 4.001400000000488e-05, 3.9194999999991875e-05, 3.917999999999977e-05, 3.9125000000000965e-05, 3.9180999999999244e-05, 3.900000000001125e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:55:44.738" endtime="20201030 15:55:44.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.757" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:55:44.755" endtime="20201030 15:55:44.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.763" level="INFO">VALUE: [4.005599999998277e-05, 3.9180999999999244e-05, 4.001400000000488e-05, 3.9194999999991875e-05, 3.917999999999977e-05, 3.9125000000000965e-05, 3.9180999999999244e-05, 3.900000000001125e-05, 3.900000000001125e-05, 3.9180999999999244e-05, 3.898599999999086e-05, 3.916700000000661e-05, 3.897199999999823e-05, 4.0138999999994596e-05, 3.900000000001125e-05, 4.018000000000077e-05, 3.91939999999924e-05, 3.997199999999923e-05, 3.901400000000388e-05, 3.923599999999805e-05, 4.001400000000488e-05, 3.9180999999999244e-05, 3.915300000001398e-05, 3.898599999999086e-05, 3.902799999999651e-05, 3.894399999998521e-05, 4.002799999999751e-05, 4.020800000001379e-05, 3.901400000000388e-05, 3.898599999999086e-05, 4.001400000000488e-05, 3.901400000000388e-05, 3.998599999999186e-05, 3.900000000001125e-05, 3.901400000000388e-05, 4.016700000003537e-05, 3.901400000000388e-05, 3.902799999999651e-05, 3.902799999999651e-05, 3.902699999996928e-05, 4.016700000003537e-05, 3.9165999999979384e-05, 3.916700000000661e-05, 4.018000000000077e-05, 3.900000000001125e-05, 4.0014000000032635e-05, 3.915299999995847e-05, 4.0013999999977123e-05, 3.901400000000388e-05, 4.0125000000001965e-05]</msg>
<status status="PASS" starttime="20201030 15:55:44.760" endtime="20201030 15:55:44.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.748" endtime="20201030 15:55:44.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.776" endtime="20201030 15:55:44.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.771" endtime="20201030 15:55:44.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.769" endtime="20201030 15:55:44.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.013" endtime="20201030 15:55:44.806"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:43.873" endtime="20201030 15:55:44.809" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.841" endtime="20201030 15:55:44.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.833" endtime="20201030 15:55:44.867"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.901" endtime="20201030 15:55:44.921"></status>
</kw>
<msg timestamp="20201030 15:55:44.923" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.897" endtime="20201030 15:55:44.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.929" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.925" endtime="20201030 15:55:44.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.936" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:44.932" endtime="20201030 15:55:44.936"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:44.890" endtime="20201030 15:55:44.938"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:44.883" endtime="20201030 15:55:44.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.880" endtime="20201030 15:55:44.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:44.949" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:44.947" endtime="20201030 15:55:44.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.943" endtime="20201030 15:55:44.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.879" endtime="20201030 15:55:44.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.877" endtime="20201030 15:55:44.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.952" endtime="20201030 15:55:44.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.873" endtime="20201030 15:55:44.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.868" endtime="20201030 15:55:44.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.829" endtime="20201030 15:55:44.964"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.979" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:55:44.998" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:55:47.064" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:55:44.974" endtime="20201030 15:55:47.065"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.071" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:55:47.067" endtime="20201030 15:55:47.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.967" endtime="20201030 15:55:47.073"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.101" endtime="20201030 15:55:47.112"></status>
</kw>
<msg timestamp="20201030 15:55:47.113" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.095" endtime="20201030 15:55:47.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.120" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.116" endtime="20201030 15:55:47.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.122" endtime="20201030 15:55:47.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.087" endtime="20201030 15:55:47.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.082" endtime="20201030 15:55:47.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.147" endtime="20201030 15:55:47.506"></status>
</kw>
<msg timestamp="20201030 15:55:47.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.802691986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.133685875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.143" endtime="20201030 15:55:47.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.802691986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.133685875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.517" endtime="20201030 15:55:47.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.536" endtime="20201030 15:55:47.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.136" endtime="20201030 15:55:47.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.131" endtime="20201030 15:55:47.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:47.553" level="INFO">${PHILIP_RES} = [{'diff': 0.33099388899999993}, {'diff': 0.006901888999999883}, {'diff': 2.324999999991917e-05}, {'diff': 2.4860999999987143e-05}, {'diff': 2.4860999999987143e-05}, {'diff': 2.4860999999987143e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:47.545" endtime="20201030 15:55:47.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.563" level="INFO">${RESULT} = {'diff': [0.33099388899999993, 0.006901888999999883, 2.324999999991917e-05, 2.4860999999987143e-05, 2.4860999999987143e-05, 2.4860999999987143e-05, 2.487500000025733e-05, 2.487500000025733e-05, 2.4860...</msg>
<status status="PASS" starttime="20201030 15:55:47.555" endtime="20201030 15:55:47.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.574" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:47.572" endtime="20201030 15:55:47.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.579" level="INFO">VALUE: [0.33099388899999993, 0.006901888999999883, 2.324999999991917e-05, 2.4860999999987143e-05, 2.4860999999987143e-05, 2.4860999999987143e-05, 2.487500000025733e-05, 2.487500000025733e-05, 2.4860999999987143e-05, 2.4792000000051218e-05, 2.4860999999987143e-05, 2.487499999981324e-05, 2.487499999981324e-05, 2.4860999999987143e-05, 2.487499999981324e-05, 2.4847999999799697e-05, 2.48339999999736e-05, 2.4861999999625795e-05, 2.487499999981324e-05, 2.290300000007406e-05, 2.487500000025733e-05, 2.487499999981324e-05, 2.4804999999794575e-05, 2.487500000025733e-05, 2.4860999999987143e-05, 2.477800000022512e-05, 2.4860999999987143e-05, 2.4860999999987143e-05, 2.487499999981324e-05, 2.4860999999987143e-05, 2.492999999992307e-05, 2.4860999999987143e-05, 2.4860999999987143e-05, 2.4846999999716957e-05, 2.4902999999909525e-05, 2.4860999999987143e-05, 2.487499999981324e-05, 2.4804999999794575e-05, 2.4860999999987143e-05, 2.483299999989086e-05, 2.4847000000161046e-05, 2.290300000007406e-05, 2.4860999999987143e-05, 2.4889000000083428e-05, 2.4846999999716957e-05, 2.4860999999987143e-05, 2.4860999999987143e-05, 2.4806000000321404e-05, 2.4860999999987143e-05, 2.4860999999987143e-05, 2.4889000000083428e-05, 2.487499999981324e-05]</msg>
<status status="PASS" starttime="20201030 15:55:47.576" endtime="20201030 15:55:47.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.565" endtime="20201030 15:55:47.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.593" endtime="20201030 15:55:47.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.587" endtime="20201030 15:55:47.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.585" endtime="20201030 15:55:47.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.077" endtime="20201030 15:55:47.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.076" endtime="20201030 15:55:47.618"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.648" endtime="20201030 15:55:47.661"></status>
</kw>
<msg timestamp="20201030 15:55:47.663" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.645" endtime="20201030 15:55:47.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.671" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.666" endtime="20201030 15:55:47.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.674" endtime="20201030 15:55:47.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.632" endtime="20201030 15:55:47.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.624" endtime="20201030 15:55:47.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.701" endtime="20201030 15:55:48.032"></status>
</kw>
<msg timestamp="20201030 15:55:48.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045148514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045184722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.697" endtime="20201030 15:55:48.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045148514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045184722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.041" endtime="20201030 15:55:48.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.060" endtime="20201030 15:55:48.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.689" endtime="20201030 15:55:48.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.683" endtime="20201030 15:55:48.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:48.076" level="INFO">${PHILIP_RES} = [{'diff': 3.620799999999591e-05}, {'diff': 3.9653000000000604e-05}, {'diff': 3.9680999999999744e-05}, {'diff': 3.9639000000001035e-05}, {'diff': 3.9653000000000604e-05}, {'diff': 3.9653000000000604e-0...</msg>
<status status="PASS" starttime="20201030 15:55:48.068" endtime="20201030 15:55:48.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.087" level="INFO">${RESULT} = {'diff': [3.620799999999591e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.9639000000001035e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9639000000001035e-05, 3.9639000000001035e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:48.078" endtime="20201030 15:55:48.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.097" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:48.095" endtime="20201030 15:55:48.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.103" level="INFO">VALUE: [3.620799999999591e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.9639000000001035e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9639000000001035e-05, 3.9639000000001035e-05, 3.9625000000001465e-05, 3.965200000000113e-05, 3.970799999999941e-05, 3.9624999999994526e-05, 3.96660000000007e-05, 3.958399999999529e-05, 3.9653000000000604e-05, 3.9625000000001465e-05, 3.9680999999999744e-05, 3.9611000000001895e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9639000000001035e-05, 3.963800000000156e-05, 3.9625000000001465e-05, 3.9653000000000604e-05, 3.96660000000007e-05, 3.9625000000001465e-05, 3.9625000000001465e-05, 3.9653000000000604e-05, 3.9610999999994956e-05, 3.676400000000163e-05, 3.9625000000001465e-05, 3.9653000000000604e-05, 3.965199999999419e-05, 3.96660000000007e-05, 3.9625000000001465e-05, 3.968000000000027e-05, 3.958400000000223e-05, 3.9652999999993666e-05, 3.9639000000001035e-05, 3.9597000000002325e-05, 3.9694999999999314e-05, 3.9625000000001465e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.9639000000001035e-05, 3.9624999999994526e-05, 3.9736999999998024e-05]</msg>
<status status="PASS" starttime="20201030 15:55:48.099" endtime="20201030 15:55:48.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.089" endtime="20201030 15:55:48.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.114" endtime="20201030 15:55:48.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.110" endtime="20201030 15:55:48.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.108" endtime="20201030 15:55:48.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.621" endtime="20201030 15:55:48.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.619" endtime="20201030 15:55:48.140"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.162" endtime="20201030 15:55:48.175"></status>
</kw>
<msg timestamp="20201030 15:55:48.176" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.158" endtime="20201030 15:55:48.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.182" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.178" endtime="20201030 15:55:48.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.185" endtime="20201030 15:55:48.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.151" endtime="20201030 15:55:48.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.146" endtime="20201030 15:55:48.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.208" endtime="20201030 15:55:48.589"></status>
</kw>
<msg timestamp="20201030 15:55:48.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036861903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036911375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.204" endtime="20201030 15:55:48.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036861903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036911375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.601" endtime="20201030 15:55:48.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.623" endtime="20201030 15:55:48.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.197" endtime="20201030 15:55:48.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.193" endtime="20201030 15:55:48.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:48.648" level="INFO">${PHILIP_RES} = [{'diff': 4.947200000000179e-05}, {'diff': 5.2679999999999394e-05}, {'diff': 5.263900000000016e-05}, {'diff': 5.2721999999998104e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.2665999999999824e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:48.638" endtime="20201030 15:55:48.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.662" level="INFO">${RESULT} = {'diff': [4.947200000000179e-05, 5.2679999999999394e-05, 5.263900000000016e-05, 5.2721999999998104e-05, 5.265299999999973e-05, 5.2665999999999824e-05, 5.263900000000016e-05, 5.2693999999998964e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:55:48.651" endtime="20201030 15:55:48.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.674" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:48.671" endtime="20201030 15:55:48.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.679" level="INFO">VALUE: [4.947200000000179e-05, 5.2679999999999394e-05, 5.263900000000016e-05, 5.2721999999998104e-05, 5.265299999999973e-05, 5.2665999999999824e-05, 5.263900000000016e-05, 5.2693999999998964e-05, 5.270800000000547e-05, 5.268099999999887e-05, 5.268099999999887e-05, 5.2665999999999824e-05, 5.26669999999993e-05, 5.26669999999993e-05, 5.258400000000135e-05, 5.268099999999887e-05, 5.2665999999999824e-05, 5.265299999999973e-05, 5.2652000000000254e-05, 5.268099999999887e-05, 5.262500000000059e-05, 5.262499999999365e-05, 5.26669999999993e-05, 5.2679999999999394e-05, 5.26669999999993e-05, 5.2665999999999824e-05, 5.272200000000504e-05, 5.2679999999999394e-05, 5.26669999999993e-05, 5.26669999999993e-05, 5.265300000000667e-05, 5.2679999999999394e-05, 5.265299999999973e-05, 5.263900000000016e-05, 5.265299999999973e-05, 5.259700000000145e-05, 5.26669999999993e-05, 5.2652000000000254e-05, 5.265299999999973e-05, 5.2652000000000254e-05, 5.26669999999993e-05, 5.2652000000000254e-05, 5.2665999999999824e-05, 5.26669999999993e-05, 5.265299999999973e-05, 5.265299999999973e-05, 5.263900000000016e-05, 5.265299999999973e-05, 5.2665999999999824e-05, 5.26669999999993e-05]</msg>
<status status="PASS" starttime="20201030 15:55:48.676" endtime="20201030 15:55:48.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.665" endtime="20201030 15:55:48.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.691" endtime="20201030 15:55:48.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.687" endtime="20201030 15:55:48.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.685" endtime="20201030 15:55:48.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.142" endtime="20201030 15:55:48.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.141" endtime="20201030 15:55:48.716"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.738" endtime="20201030 15:55:48.753"></status>
</kw>
<msg timestamp="20201030 15:55:48.755" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.735" endtime="20201030 15:55:48.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.761" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.757" endtime="20201030 15:55:48.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.763" endtime="20201030 15:55:48.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.727" endtime="20201030 15:55:48.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.722" endtime="20201030 15:55:48.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.786" endtime="20201030 15:55:49.121"></status>
</kw>
<msg timestamp="20201030 15:55:49.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036341167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036403667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.783" endtime="20201030 15:55:49.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036341167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036403667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.130" endtime="20201030 15:55:49.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.149" endtime="20201030 15:55:49.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.776" endtime="20201030 15:55:49.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.771" endtime="20201030 15:55:49.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:49.165" level="INFO">${PHILIP_RES} = [{'diff': 6.250000000000006e-05}, {'diff': 6.598599999999705e-05}, {'diff': 6.597199999999748e-05}, {'diff': 6.59029999999991e-05}, {'diff': 6.594399999999834e-05}, {'diff': 6.595799999999791e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:49.157" endtime="20201030 15:55:49.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.174" level="INFO">${RESULT} = {'diff': [6.250000000000006e-05, 6.598599999999705e-05, 6.597199999999748e-05, 6.59029999999991e-05, 6.594399999999834e-05, 6.595799999999791e-05, 6.592999999999877e-05, 6.595800000000485e-05, 6.59310...</msg>
<status status="PASS" starttime="20201030 15:55:49.167" endtime="20201030 15:55:49.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.184" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:49.182" endtime="20201030 15:55:49.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.190" level="INFO">VALUE: [6.250000000000006e-05, 6.598599999999705e-05, 6.597199999999748e-05, 6.59029999999991e-05, 6.594399999999834e-05, 6.595799999999791e-05, 6.592999999999877e-05, 6.595800000000485e-05, 6.593100000000518e-05, 6.595800000000485e-05, 6.595899999999738e-05, 6.595899999999738e-05, 6.598599999999705e-05, 6.598600000000399e-05, 6.601400000000313e-05, 6.601399999999619e-05, 6.591699999999867e-05, 6.595799999999791e-05, 6.595799999999791e-05, 6.597199999999748e-05, 6.593099999999824e-05, 6.594399999999834e-05, 6.594399999999834e-05, 6.595800000000485e-05, 6.594400000000528e-05, 6.595799999999791e-05, 6.595899999999738e-05, 6.594399999999834e-05, 6.597199999999748e-05, 6.595900000000432e-05, 6.597200000000442e-05, 6.598600000000399e-05, 6.595799999999791e-05, 6.601400000000313e-05, 6.594499999999781e-05, 6.595800000000485e-05, 6.597200000000442e-05, 6.594400000000528e-05, 6.597200000000442e-05, 6.594499999999781e-05, 6.592999999999877e-05, 6.594499999999781e-05, 6.587499999999996e-05, 6.597299999999695e-05, 6.595799999999791e-05, 6.593099999999824e-05, 6.595799999999791e-05, 6.597299999999695e-05, 6.595799999999791e-05, 6.595899999999738e-05]</msg>
<status status="PASS" starttime="20201030 15:55:49.187" endtime="20201030 15:55:49.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.176" endtime="20201030 15:55:49.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.202" endtime="20201030 15:55:49.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.198" endtime="20201030 15:55:49.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.195" endtime="20201030 15:55:49.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.718" endtime="20201030 15:55:49.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.717" endtime="20201030 15:55:49.227"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.248" endtime="20201030 15:55:49.268"></status>
</kw>
<msg timestamp="20201030 15:55:49.269" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.245" endtime="20201030 15:55:49.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.275" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.271" endtime="20201030 15:55:49.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.277" endtime="20201030 15:55:49.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.238" endtime="20201030 15:55:49.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.233" endtime="20201030 15:55:49.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.301" endtime="20201030 15:55:49.659"></status>
</kw>
<msg timestamp="20201030 15:55:49.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037648722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037724444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.297" endtime="20201030 15:55:49.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037648722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037724444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.668" endtime="20201030 15:55:49.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.686" endtime="20201030 15:55:49.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.290" endtime="20201030 15:55:49.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.286" endtime="20201030 15:55:49.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:49.702" level="INFO">${PHILIP_RES} = [{'diff': 7.572200000000029e-05}, {'diff': 7.915300000000541e-05}, {'diff': 7.915299999999847e-05}, {'diff': 7.915299999999847e-05}, {'diff': 7.91389999999989e-05}, {'diff': 7.916699999999804e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:49.695" endtime="20201030 15:55:49.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.712" level="INFO">${RESULT} = {'diff': [7.572200000000029e-05, 7.915300000000541e-05, 7.915299999999847e-05, 7.915299999999847e-05, 7.91389999999989e-05, 7.916699999999804e-05, 7.916699999999804e-05, 7.920899999999675e-05, 7.91249...</msg>
<status status="PASS" starttime="20201030 15:55:49.704" endtime="20201030 15:55:49.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.722" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:49.720" endtime="20201030 15:55:49.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.727" level="INFO">VALUE: [7.572200000000029e-05, 7.915300000000541e-05, 7.915299999999847e-05, 7.915299999999847e-05, 7.91389999999989e-05, 7.916699999999804e-05, 7.916699999999804e-05, 7.920899999999675e-05, 7.912499999999933e-05, 7.916600000000551e-05, 7.915300000000541e-05, 7.91389999999989e-05, 7.9151999999999e-05, 7.9151999999999e-05, 7.913900000000584e-05, 7.912499999999933e-05, 7.91389999999989e-05, 7.912499999999933e-05, 7.91389999999989e-05, 7.916599999999857e-05, 7.915300000000541e-05, 7.913900000000584e-05, 7.918100000000455e-05, 7.915299999999847e-05, 7.918099999999761e-05, 7.915299999999847e-05, 7.915299999999847e-05, 7.91389999999989e-05, 7.926399999999556e-05, 7.919499999999718e-05, 7.915299999999847e-05, 7.916599999999857e-05, 7.915299999999847e-05, 7.913799999999943e-05, 7.918099999999761e-05, 7.915300000000541e-05, 7.9151999999999e-05, 7.916699999999804e-05, 7.919399999999771e-05, 7.919499999999718e-05, 7.91389999999989e-05, 7.916599999999857e-05, 7.915300000000541e-05, 7.912500000000627e-05, 7.91389999999989e-05, 7.918099999999761e-05, 7.918099999999761e-05, 7.915299999999847e-05, 7.916699999999804e-05, 7.916699999999804e-05]</msg>
<status status="PASS" starttime="20201030 15:55:49.724" endtime="20201030 15:55:49.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.713" endtime="20201030 15:55:49.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.746" endtime="20201030 15:55:49.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.735" endtime="20201030 15:55:49.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.733" endtime="20201030 15:55:49.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.229" endtime="20201030 15:55:49.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.228" endtime="20201030 15:55:49.771"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.792" endtime="20201030 15:55:49.812"></status>
</kw>
<msg timestamp="20201030 15:55:49.813" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.789" endtime="20201030 15:55:49.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.820" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.816" endtime="20201030 15:55:49.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.822" endtime="20201030 15:55:49.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.782" endtime="20201030 15:55:49.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.777" endtime="20201030 15:55:49.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.845" endtime="20201030 15:55:50.190"></status>
</kw>
<msg timestamp="20201030 15:55:50.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036319292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036409528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.842" endtime="20201030 15:55:50.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036319292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036409528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.199" endtime="20201030 15:55:50.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.217" endtime="20201030 15:55:50.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.834" endtime="20201030 15:55:50.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.830" endtime="20201030 15:55:50.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:50.233" level="INFO">${PHILIP_RES} = [{'diff': 9.023599999999354e-05}, {'diff': 9.245799999999665e-05}, {'diff': 9.245799999999665e-05}, {'diff': 9.245799999999665e-05}, {'diff': 9.245899999999613e-05}, {'diff': 9.237499999999871e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:50.225" endtime="20201030 15:55:50.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.244" level="INFO">${RESULT} = {'diff': [9.023599999999354e-05, 9.245799999999665e-05, 9.245799999999665e-05, 9.245799999999665e-05, 9.245899999999613e-05, 9.237499999999871e-05, 9.245799999999665e-05, 9.242999999999751e-05, 9.2431...</msg>
<status status="PASS" starttime="20201030 15:55:50.235" endtime="20201030 15:55:50.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.254" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:50.252" endtime="20201030 15:55:50.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.259" level="INFO">VALUE: [9.023599999999354e-05, 9.245799999999665e-05, 9.245799999999665e-05, 9.245799999999665e-05, 9.245899999999613e-05, 9.237499999999871e-05, 9.245799999999665e-05, 9.242999999999751e-05, 9.243100000000393e-05, 9.243099999999699e-05, 9.244499999999656e-05, 9.240299999999785e-05, 9.241600000000488e-05, 9.241599999999794e-05, 9.241699999999742e-05, 9.241699999999742e-05, 9.245799999999665e-05, 9.24450000000035e-05, 9.247300000000264e-05, 9.243100000000393e-05, 9.243099999999699e-05, 9.247199999999622e-05, 9.241699999999742e-05, 9.241699999999742e-05, 9.245800000000359e-05, 9.243000000000445e-05, 9.241599999999794e-05, 9.24859999999958e-05, 9.240199999999837e-05, 9.247199999999622e-05, 9.24450000000035e-05, 9.245800000000359e-05, 9.245800000000359e-05, 9.245800000000359e-05, 9.243000000000445e-05, 9.242999999999751e-05, 9.244399999999708e-05, 9.247199999999622e-05, 9.248699999999527e-05, 9.245799999999665e-05, 9.244400000000402e-05, 9.245800000000359e-05, 9.241699999999742e-05, 9.245800000000359e-05, 9.244400000000402e-05, 9.244400000000402e-05, 9.241700000000436e-05, 9.243100000000393e-05, 9.237499999999871e-05, 9.243099999999699e-05]</msg>
<status status="PASS" starttime="20201030 15:55:50.256" endtime="20201030 15:55:50.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.245" endtime="20201030 15:55:50.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.281" endtime="20201030 15:55:50.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.277" endtime="20201030 15:55:50.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.274" endtime="20201030 15:55:50.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.773" endtime="20201030 15:55:50.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.772" endtime="20201030 15:55:50.306"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.327" endtime="20201030 15:55:50.350"></status>
</kw>
<msg timestamp="20201030 15:55:50.351" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.324" endtime="20201030 15:55:50.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.357" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.353" endtime="20201030 15:55:50.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.359" endtime="20201030 15:55:50.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.317" endtime="20201030 15:55:50.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.312" endtime="20201030 15:55:50.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.382" endtime="20201030 15:55:50.731"></status>
</kw>
<msg timestamp="20201030 15:55:50.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036307764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036411597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.379" endtime="20201030 15:55:50.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036307764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036411597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.739" endtime="20201030 15:55:50.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.757" endtime="20201030 15:55:50.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.372" endtime="20201030 15:55:50.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.367" endtime="20201030 15:55:50.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:50.773" level="INFO">${PHILIP_RES} = [{'diff': 0.00010383299999999762}, {'diff': 0.00010583299999999962}, {'diff': 0.0001058339999999991}, {'diff': 0.0001058610000000057}, {'diff': 0.00010587499999999833}, {'diff': 0.00010587499999999833...</msg>
<status status="PASS" starttime="20201030 15:55:50.766" endtime="20201030 15:55:50.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.784" level="INFO">${RESULT} = {'diff': [0.00010383299999999762, 0.00010583299999999962, 0.0001058339999999991, 0.0001058610000000057, 0.00010587499999999833, 0.00010587499999999833, 0.00010583299999999962, 0.00010579200000000039, ...</msg>
<status status="PASS" starttime="20201030 15:55:50.775" endtime="20201030 15:55:50.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.794" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:50.792" endtime="20201030 15:55:50.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.799" level="INFO">VALUE: [0.00010383299999999762, 0.00010583299999999962, 0.0001058339999999991, 0.0001058610000000057, 0.00010587499999999833, 0.00010587499999999833, 0.00010583299999999962, 0.00010579200000000039, 0.00010584699999999919, 0.0001058480000000056, 0.00010583299999999962, 0.00010584699999999919, 0.00010582000000000646, 0.00010584699999999919, 0.00010580599999999996, 0.00010580599999999996, 0.00010586099999999876, 0.00010584699999999919, 0.00010581900000000005, 0.00010579200000000039, 0.00010576300000000177, 0.0001058339999999991, 0.00010581900000000005, 0.00010586099999999876, 0.00010580599999999996, 0.0001059160000000045, 0.00010586099999999876, 0.00010584699999999919, 0.00010584699999999919, 0.00010586099999999876, 0.00010586099999999876, 0.00010583300000000656, 0.00010583299999999962, 0.00010584700000000613, 0.00010583300000000656, 0.00010581900000000005, 0.00010580599999999996, 0.00010580500000000048, 0.00010583299999999962, 0.00010583299999999962, 0.00010583299999999962, 0.00010583299999999962, 0.00010584699999999919, 0.00010580500000000048, 0.00010586099999999876, 0.00010579200000000039, 0.00010581999999999953, 0.0001058480000000056, 0.00010580500000000048, 0.00010584699999999919]</msg>
<status status="PASS" starttime="20201030 15:55:50.796" endtime="20201030 15:55:50.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.786" endtime="20201030 15:55:50.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.812" endtime="20201030 15:55:50.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.807" endtime="20201030 15:55:50.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.805" endtime="20201030 15:55:50.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.308" endtime="20201030 15:55:50.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.307" endtime="20201030 15:55:50.837"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.858" endtime="20201030 15:55:50.882"></status>
</kw>
<msg timestamp="20201030 15:55:50.884" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.855" endtime="20201030 15:55:50.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.890" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.886" endtime="20201030 15:55:50.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.892" endtime="20201030 15:55:50.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.848" endtime="20201030 15:55:50.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.843" endtime="20201030 15:55:50.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.915" endtime="20201030 15:55:51.261"></status>
</kw>
<msg timestamp="20201030 15:55:51.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036413139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036529778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.912" endtime="20201030 15:55:51.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036413139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036529778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.270" endtime="20201030 15:55:51.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.288" endtime="20201030 15:55:51.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.905" endtime="20201030 15:55:51.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.900" endtime="20201030 15:55:51.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:51.303" level="INFO">${PHILIP_RES} = [{'diff': 0.00011663900000000171}, {'diff': 0.00012009699999999957}, {'diff': 0.00012006899999999349}, {'diff': 0.00012013899999999827}, {'diff': 0.00012005500000000086}, {'diff': 0.000120096999999999...</msg>
<status status="PASS" starttime="20201030 15:55:51.296" endtime="20201030 15:55:51.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.312" level="INFO">${RESULT} = {'diff': [0.00011663900000000171, 0.00012009699999999957, 0.00012006899999999349, 0.00012013899999999827, 0.00012005500000000086, 0.00012009699999999957, 0.00012013899999999827, 0.000120083, 0.0001201...</msg>
<status status="PASS" starttime="20201030 15:55:51.305" endtime="20201030 15:55:51.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.323" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:51.320" endtime="20201030 15:55:51.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.328" level="INFO">VALUE: [0.00011663900000000171, 0.00012009699999999957, 0.00012006899999999349, 0.00012013899999999827, 0.00012005500000000086, 0.00012009699999999957, 0.00012013899999999827, 0.000120083, 0.00012011100000000607, 0.000120083, 0.00012009699999999957, 0.00011722200000000016, 0.00012011099999999914, 0.00012001400000000162, 0.00012009699999999957, 0.00012009699999999957, 0.00012005500000000086, 0.00012012500000000564, 0.00012009799999999904, 0.00012004200000000076, 0.00012009699999999957, 0.0001172499999999993, 0.00012009799999999904, 0.00012011199999999861, 0.00012009699999999957, 0.00012009699999999957, 0.00012009699999999957, 0.00012006899999999349, 0.00012011099999999914, 0.00012011099999999914, 0.00012009699999999957, 0.00012019399999999708, 0.000120083, 0.00012005600000000033, 0.00012009699999999957, 0.00012009699999999957, 0.000120083, 0.0001200699999999999, 0.00012005500000000086, 0.00012002800000000119, 0.00012011099999999914, 0.0001201249999999987, 0.00012011099999999914, 0.00012009800000000598, 0.000120083, 0.00012009699999999957, 0.00011727799999999844, 0.0001201249999999987, 0.00012009699999999957, 0.00012009699999999957]</msg>
<status status="PASS" starttime="20201030 15:55:51.325" endtime="20201030 15:55:51.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.314" endtime="20201030 15:55:51.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.340" endtime="20201030 15:55:51.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.336" endtime="20201030 15:55:51.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.333" endtime="20201030 15:55:51.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.839" endtime="20201030 15:55:51.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.838" endtime="20201030 15:55:51.365"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.387" endtime="20201030 15:55:51.412"></status>
</kw>
<msg timestamp="20201030 15:55:51.413" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.383" endtime="20201030 15:55:51.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.419" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.415" endtime="20201030 15:55:51.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.421" endtime="20201030 15:55:51.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.376" endtime="20201030 15:55:51.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.371" endtime="20201030 15:55:51.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.446" endtime="20201030 15:55:51.779"></status>
</kw>
<msg timestamp="20201030 15:55:51.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036277986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036410139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.443" endtime="20201030 15:55:51.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036277986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036410139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.788" endtime="20201030 15:55:51.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.805" endtime="20201030 15:55:51.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.436" endtime="20201030 15:55:51.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.431" endtime="20201030 15:55:51.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:51.821" level="INFO">${PHILIP_RES} = [{'diff': 0.0001321530000000029}, {'diff': 0.00013438799999999917}, {'diff': 0.00013434699999999994}, {'diff': 0.00013432000000000027}, {'diff': 0.00013434699999999994}, {'diff': 0.0001342780000000015...</msg>
<status status="PASS" starttime="20201030 15:55:51.814" endtime="20201030 15:55:51.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.830" level="INFO">${RESULT} = {'diff': [0.0001321530000000029, 0.00013438799999999917, 0.00013434699999999994, 0.00013432000000000027, 0.00013434699999999994, 0.00013427800000000156, 0.00013433300000000037, 0.00013434699999999994,...</msg>
<status status="PASS" starttime="20201030 15:55:51.823" endtime="20201030 15:55:51.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.841" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:51.838" endtime="20201030 15:55:51.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.846" level="INFO">VALUE: [0.0001321530000000029, 0.00013438799999999917, 0.00013434699999999994, 0.00013432000000000027, 0.00013434699999999994, 0.00013427800000000156, 0.00013433300000000037, 0.00013434699999999994, 0.0001343060000000007, 0.0001343479999999994, 0.0001343190000000008, 0.0001343479999999994, 0.00013425000000000242, 0.00013433399999999984, 0.00013434699999999994, 0.00013427800000000156, 0.0001343060000000007, 0.000134264000000002, 0.0001343060000000007, 0.00013434699999999994, 0.00013429200000000113, 0.00013432000000000027, 0.00013432000000000027, 0.00013433300000000037, 0.00013433399999999984, 0.0001343609999999995, 0.00013449999999999573, 0.00013434699999999994, 0.00013430599999999376, 0.00013433399999999984, 0.00013429200000000113, 0.00013433300000000037, 0.00013430500000000123, 0.0001343190000000008, 0.0001343060000000007, 0.00013434699999999994, 0.00013432000000000027, 0.00013429200000000113, 0.00013432000000000027, 0.00013434699999999994, 0.00013433299999999343, 0.0001342919999999942, 0.0001343060000000007, 0.00013430500000000123, 0.000134264000000002, 0.00013429200000000113, 0.0001343060000000007, 0.0001343060000000007, 0.0001343049999999943, 0.00013430500000000123]</msg>
<status status="PASS" starttime="20201030 15:55:51.843" endtime="20201030 15:55:51.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.832" endtime="20201030 15:55:51.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.862" endtime="20201030 15:55:51.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.855" endtime="20201030 15:55:51.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.851" endtime="20201030 15:55:51.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.367" endtime="20201030 15:55:51.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.366" endtime="20201030 15:55:51.890"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.915" endtime="20201030 15:55:51.942"></status>
</kw>
<msg timestamp="20201030 15:55:51.943" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.911" endtime="20201030 15:55:51.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.949" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.945" endtime="20201030 15:55:51.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.951" endtime="20201030 15:55:51.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.904" endtime="20201030 15:55:51.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.898" endtime="20201030 15:55:51.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.974" endtime="20201030 15:55:52.308"></status>
</kw>
<msg timestamp="20201030 15:55:52.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041798944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041944861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.971" endtime="20201030 15:55:52.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041798944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041944861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.317" endtime="20201030 15:55:52.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.334" endtime="20201030 15:55:52.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.964" endtime="20201030 15:55:52.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.959" endtime="20201030 15:55:52.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:52.350" level="INFO">${PHILIP_RES} = [{'diff': 0.00014591700000000235}, {'diff': 0.00014852800000000194}, {'diff': 0.00014856900000000117}, {'diff': 0.00014859799999999979}, {'diff': 0.00014858400000000022}, {'diff': 0.000148624999999999...</msg>
<status status="PASS" starttime="20201030 15:55:52.342" endtime="20201030 15:55:52.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.360" level="INFO">${RESULT} = {'diff': [0.00014591700000000235, 0.00014852800000000194, 0.00014856900000000117, 0.00014859799999999979, 0.00014858400000000022, 0.00014862499999999945, 0.0001486250000000064, 0.0001485829999999938, ...</msg>
<status status="PASS" starttime="20201030 15:55:52.352" endtime="20201030 15:55:52.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.370" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:52.368" endtime="20201030 15:55:52.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.376" level="INFO">VALUE: [0.00014591700000000235, 0.00014852800000000194, 0.00014856900000000117, 0.00014859799999999979, 0.00014858400000000022, 0.00014862499999999945, 0.0001486250000000064, 0.0001485829999999938, 0.00014855600000000108, 0.00014861099999999988, 0.00014862499999999945, 0.00014862499999999945, 0.00014858400000000022, 0.00014855600000000108, 0.0001485420000000015, 0.0001485699999999937, 0.0001485970000000003, 0.0001485970000000003, 0.00014851400000000237, 0.00014862499999999945, 0.00014858300000000074, 0.00014858400000000022, 0.0001485970000000003, 0.0001485970000000003, 0.00014857000000000065, 0.0001485550000000016, 0.00014863899999999902, 0.00014863799999999955, 0.00014863900000000596, 0.00014861099999999988, 0.00014859799999999979, 0.00014861099999999988, 0.00014866600000000563, 0.0001485970000000003, 0.00014863899999999902, 0.00014856900000000117, 0.00014862499999999945, 0.00014861099999999988, 0.00014862499999999945, 0.0001485970000000003, 0.00014856900000000117, 0.00014852800000000194, 0.00014865300000000553, 0.00014854199999999457, 0.00014857000000000065, 0.00014855600000000108, 0.0001485970000000003, 0.00014858400000000022, 0.00014858300000000074, 0.00014961100000000088]</msg>
<status status="PASS" starttime="20201030 15:55:52.373" endtime="20201030 15:55:52.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.362" endtime="20201030 15:55:52.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.388" endtime="20201030 15:55:52.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.384" endtime="20201030 15:55:52.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.381" endtime="20201030 15:55:52.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.892" endtime="20201030 15:55:52.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.891" endtime="20201030 15:55:52.413"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.434" endtime="20201030 15:55:52.463"></status>
</kw>
<msg timestamp="20201030 15:55:52.464" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.431" endtime="20201030 15:55:52.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.471" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.467" endtime="20201030 15:55:52.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.473" endtime="20201030 15:55:52.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.424" endtime="20201030 15:55:52.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.419" endtime="20201030 15:55:52.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.496" endtime="20201030 15:55:52.828"></status>
</kw>
<msg timestamp="20201030 15:55:52.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036109944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036269833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.493" endtime="20201030 15:55:52.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036109944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036269833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.837" endtime="20201030 15:55:52.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.854" endtime="20201030 15:55:52.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.485" endtime="20201030 15:55:52.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.481" endtime="20201030 15:55:52.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:52.870" level="INFO">${PHILIP_RES} = [{'diff': 0.00015988900000000333}, {'diff': 0.00016298600000000385}, {'diff': 0.00016298600000000385}, {'diff': 0.00016297200000000428}, {'diff': 0.00016291700000000547}, {'diff': 0.000162986999999996...</msg>
<status status="PASS" starttime="20201030 15:55:52.863" endtime="20201030 15:55:52.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.881" level="INFO">${RESULT} = {'diff': [0.00015988900000000333, 0.00016298600000000385, 0.00016298600000000385, 0.00016297200000000428, 0.00016291700000000547, 0.00016298699999999638, 0.00016297199999999734, 0.00016297299999999681...</msg>
<status status="PASS" starttime="20201030 15:55:52.872" endtime="20201030 15:55:52.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.891" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:52.889" endtime="20201030 15:55:52.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.896" level="INFO">VALUE: [0.00015988900000000333, 0.00016298600000000385, 0.00016298600000000385, 0.00016297200000000428, 0.00016291700000000547, 0.00016298699999999638, 0.00016297199999999734, 0.00016297299999999681, 0.00016300000000000342, 0.00016297200000000428, 0.00016297200000000428, 0.00016295900000000418, 0.00016295799999999777, 0.00016295799999999777, 0.00016298699999999638, 0.00016297200000000428, 0.00016297200000000428, 0.00016300000000000342, 0.00016297200000000428, 0.0001629859999999969, 0.0001629859999999969, 0.00016292999999999863, 0.00016297300000000375, 0.00016304200000000213, 0.00016298600000000385, 0.00016302799999999562, 0.0001629859999999969, 0.0001628889999999994, 0.00016295799999999777, 0.00016292999999999863, 0.0001628889999999994, 0.0001629580000000047, 0.00016291599999999906, 0.00016298699999999638, 0.0001639309999999991, 0.0001629580000000047, 0.00016291699999999854, 0.0001629309999999981, 0.0001639309999999991, 0.00016299999999999648, 0.0001629580000000047, 0.00016295899999999724, 0.00016297199999999734, 0.00016294499999999768, 0.00016295799999999777, 0.0001629859999999969, 0.000163014000000003, 0.00016297300000000375, 0.0001629580000000047, 0.0001629439999999982]</msg>
<status status="PASS" starttime="20201030 15:55:52.894" endtime="20201030 15:55:52.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.883" endtime="20201030 15:55:52.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.909" endtime="20201030 15:55:52.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.905" endtime="20201030 15:55:52.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.902" endtime="20201030 15:55:52.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.415" endtime="20201030 15:55:52.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.414" endtime="20201030 15:55:52.934"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.955" endtime="20201030 15:55:52.987"></status>
</kw>
<msg timestamp="20201030 15:55:52.988" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.952" endtime="20201030 15:55:52.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.995" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.991" endtime="20201030 15:55:52.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.997" endtime="20201030 15:55:53.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.945" endtime="20201030 15:55:53.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.940" endtime="20201030 15:55:53.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.020" endtime="20201030 15:55:53.359"></status>
</kw>
<msg timestamp="20201030 15:55:53.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036257625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036433083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.017" endtime="20201030 15:55:53.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036257625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036433083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.368" endtime="20201030 15:55:53.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.385" endtime="20201030 15:55:53.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.010" endtime="20201030 15:55:53.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.005" endtime="20201030 15:55:53.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:53.401" level="INFO">${PHILIP_RES} = [{'diff': 0.0001754579999999964}, {'diff': 0.00017822199999999871}, {'diff': 0.00017827700000000446}, {'diff': 0.0001783199999999957}, {'diff': 0.00017826399999999742}, {'diff': 0.00017820799999999914...</msg>
<status status="PASS" starttime="20201030 15:55:53.394" endtime="20201030 15:55:53.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.410" level="INFO">${RESULT} = {'diff': [0.0001754579999999964, 0.00017822199999999871, 0.00017827700000000446, 0.0001783199999999957, 0.00017826399999999742, 0.00017820799999999914, 0.00017822199999999871, 0.00017822199999999871, ...</msg>
<status status="PASS" starttime="20201030 15:55:53.403" endtime="20201030 15:55:53.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.420" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:53.418" endtime="20201030 15:55:53.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.426" level="INFO">VALUE: [0.0001754579999999964, 0.00017822199999999871, 0.00017827700000000446, 0.0001783199999999957, 0.00017826399999999742, 0.00017820799999999914, 0.00017822199999999871, 0.00017822199999999871, 0.00017823600000000522, 0.00017822200000000565, 0.00017822200000000565, 0.0001783050000000036, 0.00017823600000000522, 0.00017826399999999742, 0.00017822199999999871, 0.000178277999999997, 0.00017824999999999785, 0.0001783470000000023, 0.0001782920000000035, 0.00017824999999999785, 0.00017822199999999871, 0.00017826400000000436, 0.00017822199999999871, 0.00017820900000000556, 0.00017826399999999742, 0.000178277999999997, 0.00017820899999999862, 0.00017823599999999828, 0.00017823699999999776, 0.00017824999999999785, 0.0001782920000000035, 0.00017826399999999742, 0.00017827700000000446, 0.00017826399999999742, 0.00017827800000000393, 0.00017819399999999957, 0.00017820800000000608, 0.00017820900000000556, 0.00017822200000000565, 0.00017823600000000522, 0.00017820799999999914, 0.00017822199999999871, 0.00017819399999999957, 0.00017819399999999957, 0.00017820799999999914, 0.0001782229999999982, 0.00017820799999999914, 0.00017826399999999742, 0.00017826399999999742, 0.00017822199999999871]</msg>
<status status="PASS" starttime="20201030 15:55:53.423" endtime="20201030 15:55:53.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.412" endtime="20201030 15:55:53.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.438" endtime="20201030 15:55:53.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.434" endtime="20201030 15:55:53.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.431" endtime="20201030 15:55:53.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.936" endtime="20201030 15:55:53.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.935" endtime="20201030 15:55:53.465"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.495" endtime="20201030 15:55:53.530"></status>
</kw>
<msg timestamp="20201030 15:55:53.531" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.490" endtime="20201030 15:55:53.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.537" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.533" endtime="20201030 15:55:53.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.540" endtime="20201030 15:55:53.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.481" endtime="20201030 15:55:53.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.474" endtime="20201030 15:55:53.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.564" endtime="20201030 15:55:53.896"></status>
</kw>
<msg timestamp="20201030 15:55:53.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048269208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048459944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.561" endtime="20201030 15:55:53.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048269208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048459944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.905" endtime="20201030 15:55:53.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.923" endtime="20201030 15:55:53.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.554" endtime="20201030 15:55:53.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.549" endtime="20201030 15:55:53.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:53.938" level="INFO">${PHILIP_RES} = [{'diff': 0.0001907359999999969}, {'diff': 0.00019341700000000128}, {'diff': 0.0001934160000000018}, {'diff': 0.00019344400000000095}, {'diff': 0.00019344500000000042}, {'diff': 0.00019343000000000138...</msg>
<status status="PASS" starttime="20201030 15:55:53.931" endtime="20201030 15:55:53.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.947" level="INFO">${RESULT} = {'diff': [0.0001907359999999969, 0.00019341700000000128, 0.0001934160000000018, 0.00019344400000000095, 0.00019344500000000042, 0.00019343000000000138, 0.0001934309999999939, 0.0001934720000000001, 0....</msg>
<status status="PASS" starttime="20201030 15:55:53.940" endtime="20201030 15:55:53.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.957" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:53.955" endtime="20201030 15:55:53.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.963" level="INFO">VALUE: [0.0001907359999999969, 0.00019341700000000128, 0.0001934160000000018, 0.00019344400000000095, 0.00019344500000000042, 0.00019343000000000138, 0.0001934309999999939, 0.0001934720000000001, 0.00019345800000000052, 0.0001934720000000001, 0.00019338900000000214, 0.00019341700000000128, 0.00019343100000000085, 0.0001934309999999939, 0.0001934030000000017, 0.0001934030000000017, 0.0001934720000000001, 0.0001934720000000001, 0.00019344400000000095, 0.00019355499999999803, 0.00019343000000000138, 0.00019345800000000052, 0.00019343000000000138, 0.00019344400000000095, 0.00019344400000000095, 0.00019348599999999966, 0.00019348599999999966, 0.0001935139999999988, 0.00019342999999999444, 0.00019345800000000746, 0.00019341700000000128, 0.0001933469999999965, 0.00019345800000000746, 0.00019344400000000095, 0.00019347299999999956, 0.00019344400000000095, 0.00019351400000000574, 0.00019348599999999272, 0.00019342999999999444, 0.00019341700000000128, 0.00019348599999999272, 0.0001934160000000018, 0.0001934720000000001, 0.00019342999999999444, 0.00019352799999999837, 0.00019344400000000095, 0.00019341599999998793, 0.00019349999999999923, 0.00019345799999999358, 0.00019344500000000042]</msg>
<status status="PASS" starttime="20201030 15:55:53.960" endtime="20201030 15:55:53.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.949" endtime="20201030 15:55:53.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.976" endtime="20201030 15:55:53.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.971" endtime="20201030 15:55:54.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.968" endtime="20201030 15:55:54.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.469" endtime="20201030 15:55:54.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.466" endtime="20201030 15:55:54.002"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.023" endtime="20201030 15:55:54.058"></status>
</kw>
<msg timestamp="20201030 15:55:54.059" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.020" endtime="20201030 15:55:54.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.066" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.062" endtime="20201030 15:55:54.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.068" endtime="20201030 15:55:54.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.013" endtime="20201030 15:55:54.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.007" endtime="20201030 15:55:54.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.091" endtime="20201030 15:55:54.422"></status>
</kw>
<msg timestamp="20201030 15:55:54.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036280861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036486042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.087" endtime="20201030 15:55:54.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036280861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036486042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.431" endtime="20201030 15:55:54.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.448" endtime="20201030 15:55:54.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.080" endtime="20201030 15:55:54.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.076" endtime="20201030 15:55:54.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:54.464" level="INFO">${PHILIP_RES} = [{'diff': 0.00020518100000000566}, {'diff': 0.00020873600000000103}, {'diff': 0.00020873600000000103}, {'diff': 0.00020877700000000027}, {'diff': 0.00020872300000000094}, {'diff': 0.000208791999999999...</msg>
<status status="PASS" starttime="20201030 15:55:54.457" endtime="20201030 15:55:54.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.475" level="INFO">${RESULT} = {'diff': [0.00020518100000000566, 0.00020873600000000103, 0.00020873600000000103, 0.00020877700000000027, 0.00020872300000000094, 0.0002087919999999993, 0.00020879099999999984, 0.00020872200000000146,...</msg>
<status status="PASS" starttime="20201030 15:55:54.466" endtime="20201030 15:55:54.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.485" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:54.483" endtime="20201030 15:55:54.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.490" level="INFO">VALUE: [0.00020518100000000566, 0.00020873600000000103, 0.00020873600000000103, 0.00020877700000000027, 0.00020872300000000094, 0.0002087919999999993, 0.00020879099999999984, 0.00020872200000000146, 0.0002087500000000006, 0.0002087370000000005, 0.0002086950000000018, 0.00020880599999999888, 0.00020872200000000146, 0.00020874999999999366, 0.00020869399999999538, 0.00020873600000000103, 0.00020876400000000017, 0.00020876400000000017, 0.00020877799999999974, 0.00020873600000000103, 0.0002088330000000055, 0.00020876400000000017, 0.00020873600000000103, 0.00020872200000000146, 0.0002087080000000019, 0.00020873600000000103, 0.00020873600000000103, 0.00020870799999999495, 0.00020876400000000017, 0.00020872200000000146, 0.00020874999999999366, 0.0002087500000000006, 0.00020872200000000146, 0.00020868100000000223, 0.00020876400000000017, 0.00020873600000000103, 0.00020869399999999538, 0.0002087370000000005, 0.00020870799999999495, 0.00020873600000000103, 0.00020868000000000275, 0.0002087080000000019, 0.0002087359999999941, 0.00020972300000000194, 0.00020872200000000146, 0.00020873600000000103, 0.0002087500000000006, 0.00020873600000000103, 0.0002087770000000072, 0.00020879099999999984]</msg>
<status status="PASS" starttime="20201030 15:55:54.487" endtime="20201030 15:55:54.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.476" endtime="20201030 15:55:54.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.502" endtime="20201030 15:55:54.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.498" endtime="20201030 15:55:54.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.496" endtime="20201030 15:55:54.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.004" endtime="20201030 15:55:54.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.002" endtime="20201030 15:55:54.527"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.549" endtime="20201030 15:55:54.586"></status>
</kw>
<msg timestamp="20201030 15:55:54.587" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.545" endtime="20201030 15:55:54.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.593" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.589" endtime="20201030 15:55:54.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.595" endtime="20201030 15:55:54.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.538" endtime="20201030 15:55:54.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.533" endtime="20201030 15:55:54.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.618" endtime="20201030 15:55:54.951"></status>
</kw>
<msg timestamp="20201030 15:55:54.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036074764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036297181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.615" endtime="20201030 15:55:54.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036074764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036297181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.960" endtime="20201030 15:55:54.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.977" endtime="20201030 15:55:54.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.608" endtime="20201030 15:55:54.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.603" endtime="20201030 15:55:54.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:54.993" level="INFO">${PHILIP_RES} = [{'diff': 0.0002224169999999956}, {'diff': 0.00022409799999999896}, {'diff': 0.00022416599999999787}, {'diff': 0.0002241389999999982}, {'diff': 0.0002241389999999982}, {'diff': 0.00022408299999999992}...</msg>
<status status="PASS" starttime="20201030 15:55:54.985" endtime="20201030 15:55:54.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.008" level="INFO">${RESULT} = {'diff': [0.0002224169999999956, 0.00022409799999999896, 0.00022416599999999787, 0.0002241389999999982, 0.0002241389999999982, 0.00022408299999999992, 0.00022408299999999992, 0.00022412499999999863, 0...</msg>
<status status="PASS" starttime="20201030 15:55:54.995" endtime="20201030 15:55:55.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.018" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:55.016" endtime="20201030 15:55:55.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.023" level="INFO">VALUE: [0.0002224169999999956, 0.00022409799999999896, 0.00022416599999999787, 0.0002241389999999982, 0.0002241389999999982, 0.00022408299999999992, 0.00022408299999999992, 0.00022412499999999863, 0.00022406999999999982, 0.00022406999999999982, 0.00022411200000000547, 0.00022406900000000035, 0.00022409700000000643, 0.00022406900000000035, 0.00022412499999999863, 0.00022409799999999896, 0.00022511100000000006, 0.00022411099999999906, 0.00022406999999999982, 0.000224111000000006, 0.00022416699999999734, 0.00022409799999999896, 0.00022411099999999906, 0.0002241389999999982, 0.00022413900000000514, 0.00022412500000000557, 0.0002240969999999995, 0.00022411099999999906, 0.00022415299999999777, 0.00022416700000000428, 0.00022408299999999992, 0.00022406999999999982, 0.00022512499999999963, 0.00022411099999999906, 0.00022415299999999777, 0.00022411099999999906, 0.00022411099999999906, 0.00022412499999999863, 0.0002241519999999983, 0.00022411099999999906, 0.0002241660000000048, 0.00022408299999999992, 0.00022411099999999906, 0.0002240839999999994, 0.000224111000000006, 0.00022409699999999255, 0.00022411099999999906, 0.0002240839999999994, 0.0002241249999999917, 0.00022408299999999992]</msg>
<status status="PASS" starttime="20201030 15:55:55.020" endtime="20201030 15:55:55.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.009" endtime="20201030 15:55:55.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.035" endtime="20201030 15:55:55.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.031" endtime="20201030 15:55:55.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.029" endtime="20201030 15:55:55.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.529" endtime="20201030 15:55:55.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.528" endtime="20201030 15:55:55.060"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.082" endtime="20201030 15:55:55.121"></status>
</kw>
<msg timestamp="20201030 15:55:55.122" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.079" endtime="20201030 15:55:55.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.128" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.124" endtime="20201030 15:55:55.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.131" endtime="20201030 15:55:55.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.071" endtime="20201030 15:55:55.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.066" endtime="20201030 15:55:55.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.153" endtime="20201030 15:55:55.495"></status>
</kw>
<msg timestamp="20201030 15:55:55.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036209806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036447125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.150" endtime="20201030 15:55:55.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036209806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036447125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.504" endtime="20201030 15:55:55.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.522" endtime="20201030 15:55:55.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.143" endtime="20201030 15:55:55.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.139" endtime="20201030 15:55:55.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:55.537" level="INFO">${PHILIP_RES} = [{'diff': 0.00023731899999999972}, {'diff': 0.0002404859999999981}, {'diff': 0.00024045899999999842}, {'diff': 0.00024044499999999885}, {'diff': 0.00024034800000000134}, {'diff': 0.0002404309999999992...</msg>
<status status="PASS" starttime="20201030 15:55:55.530" endtime="20201030 15:55:55.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.546" level="INFO">${RESULT} = {'diff': [0.00023731899999999972, 0.0002404859999999981, 0.00024045899999999842, 0.00024044499999999885, 0.00024034800000000134, 0.00024043099999999928, 0.0002404299999999998, 0.00024045799999999895, ...</msg>
<status status="PASS" starttime="20201030 15:55:55.540" endtime="20201030 15:55:55.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.557" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:55.554" endtime="20201030 15:55:55.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.562" level="INFO">VALUE: [0.00023731899999999972, 0.0002404859999999981, 0.00024045899999999842, 0.00024044499999999885, 0.00024034800000000134, 0.00024043099999999928, 0.0002404299999999998, 0.00024045799999999895, 0.00024040300000000014, 0.00024041699999999971, 0.00024044499999999885, 0.00024047199999999852, 0.00024045899999999842, 0.0002404299999999998, 0.000240375000000001, 0.00024034700000000186, 0.00024040300000000014, 0.0002404450000000058, 0.00024041699999999971, 0.00024044399999999938, 0.00024034700000000186, 0.00024038900000000057, 0.00024041600000000024, 0.00024045899999999842, 0.00024041699999999971, 0.00024034700000000186, 0.00024038900000000057, 0.00024031900000000272, 0.00024038900000000057, 0.00024041699999999971, 0.00024045900000000536, 0.00024036100000000143, 0.00024036100000000143, 0.000240375000000001, 0.000240375000000001, 0.00024047200000000546, 0.00024038900000000057, 0.00024045899999999842, 0.00024041600000000024, 0.00024041699999999971, 0.00024043099999999928, 0.00024038900000000057, 0.00024045799999999895, 0.00024047200000000546, 0.00024038799999999416, 0.0002404299999999998, 0.00024045799999999895, 0.00024045799999999895, 0.00024043099999999928, 0.00024047300000000493]</msg>
<status status="PASS" starttime="20201030 15:55:55.559" endtime="20201030 15:55:55.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.548" endtime="20201030 15:55:55.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.579" endtime="20201030 15:55:55.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.575" endtime="20201030 15:55:55.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.572" endtime="20201030 15:55:55.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.062" endtime="20201030 15:55:55.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.061" endtime="20201030 15:55:55.604"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.625" endtime="20201030 15:55:55.667"></status>
</kw>
<msg timestamp="20201030 15:55:55.668" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.622" endtime="20201030 15:55:55.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.675" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.671" endtime="20201030 15:55:55.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.677" endtime="20201030 15:55:55.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.615" endtime="20201030 15:55:55.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.610" endtime="20201030 15:55:55.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.703" endtime="20201030 15:55:56.033"></status>
</kw>
<msg timestamp="20201030 15:55:56.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036238847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036493556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.700" endtime="20201030 15:55:56.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036238847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036493556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.042" endtime="20201030 15:55:56.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.059" endtime="20201030 15:55:56.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.692" endtime="20201030 15:55:56.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.687" endtime="20201030 15:55:56.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:56.075" level="INFO">${PHILIP_RES} = [{'diff': 0.00025470900000000574}, {'diff': 0.00025661199999999634}, {'diff': 0.00025663900000000295}, {'diff': 0.00025656999999999763}, {'diff': 0.0002566110000000038}, {'diff': 0.0002566250000000034...</msg>
<status status="PASS" starttime="20201030 15:55:56.067" endtime="20201030 15:55:56.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.084" level="INFO">${RESULT} = {'diff': [0.00025470900000000574, 0.00025661199999999634, 0.00025663900000000295, 0.00025656999999999763, 0.0002566110000000038, 0.0002566250000000034, 0.0002566110000000038, 0.0002566110000000038, 0....</msg>
<status status="PASS" starttime="20201030 15:55:56.077" endtime="20201030 15:55:56.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.094" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:56.092" endtime="20201030 15:55:56.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.099" level="INFO">VALUE: [0.00025470900000000574, 0.00025661199999999634, 0.00025663900000000295, 0.00025656999999999763, 0.0002566110000000038, 0.0002566250000000034, 0.0002566110000000038, 0.0002566110000000038, 0.0002566519999999961, 0.00025673600000000046, 0.00025668100000000166, 0.00025668100000000166, 0.0002538200000000018, 0.0002567090000000008, 0.00025666699999999515, 0.000256638999999996, 0.0002567080000000013, 0.0002566800000000022, 0.00025672300000000037, 0.00025672300000000037, 0.00025673600000000046, 0.00025669400000000175, 0.00025668100000000166, 0.0002566670000000021, 0.00025669500000000123, 0.00025668100000000166, 0.00025667999999999525, 0.00025668100000000166, 0.0002567090000000008, 0.00025666699999999515, 0.00025669400000000175, 0.0002566659999999957, 0.00025661099999999687, 0.0002566670000000021, 0.0002566659999999957, 0.0002566530000000025, 0.00025663799999999654, 0.00025663900000000295, 0.00025663900000000295, 0.00025672300000000037, 0.0002567360000000074, 0.0002566670000000021, 0.0002566660000000026, 0.00025669500000000123, 0.00025662499999999644, 0.0002565969999999973, 0.0002566660000000026, 0.00025665300000000946, 0.00025669500000000123, 0.0002567220000000009]</msg>
<status status="PASS" starttime="20201030 15:55:56.096" endtime="20201030 15:55:56.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.085" endtime="20201030 15:55:56.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.113" endtime="20201030 15:55:56.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.107" endtime="20201030 15:55:56.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.105" endtime="20201030 15:55:56.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.606" endtime="20201030 15:55:56.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.605" endtime="20201030 15:55:56.138"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.159" endtime="20201030 15:55:56.202"></status>
</kw>
<msg timestamp="20201030 15:55:56.204" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.156" endtime="20201030 15:55:56.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.210" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.206" endtime="20201030 15:55:56.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.212" endtime="20201030 15:55:56.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.149" endtime="20201030 15:55:56.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.143" endtime="20201030 15:55:56.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.235" endtime="20201030 15:55:56.568"></status>
</kw>
<msg timestamp="20201030 15:55:56.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036005417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036275931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.232" endtime="20201030 15:55:56.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036005417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036275931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.577" endtime="20201030 15:55:56.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.594" endtime="20201030 15:55:56.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.225" endtime="20201030 15:55:56.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.220" endtime="20201030 15:55:56.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:56.610" level="INFO">${PHILIP_RES} = [{'diff': 0.0002705139999999995}, {'diff': 0.0002729450000000036}, {'diff': 0.00027280600000000044}, {'diff': 0.00027286099999999924}, {'diff': 0.00027290299999999795}, {'diff': 0.0002729439999999972}...</msg>
<status status="PASS" starttime="20201030 15:55:56.602" endtime="20201030 15:55:56.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.620" level="INFO">${RESULT} = {'diff': [0.0002705139999999995, 0.0002729450000000036, 0.00027280600000000044, 0.00027286099999999924, 0.00027290299999999795, 0.0002729439999999972, 0.00027294499999999666, 0.0002728889999999984, 0....</msg>
<status status="PASS" starttime="20201030 15:55:56.612" endtime="20201030 15:55:56.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.630" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:56.628" endtime="20201030 15:55:56.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.635" level="INFO">VALUE: [0.0002705139999999995, 0.0002729450000000036, 0.00027280600000000044, 0.00027286099999999924, 0.00027290299999999795, 0.0002729439999999972, 0.00027294499999999666, 0.0002728889999999984, 0.0002728889999999984, 0.00027286099999999924, 0.00027305599999999375, 0.0002729030000000049, 0.00027401399999999604, 0.0002729309999999971, 0.0002730000000000024, 0.0002730550000000012, 0.00027302800000000155, 0.0002730000000000024, 0.0002740699999999943, 0.0002730000000000024, 0.00027301399999999504, 0.0002729859999999959, 0.00027297300000000274, 0.000273014000000002, 0.00027399999999999647, 0.0002740420000000021, 0.0002729729999999958, 0.00027295799999999676, 0.0002729729999999958, 0.00027297200000000327, 0.00027293100000000403, 0.0002730420000000011, 0.00027395899999999723, 0.0002729299999999976, 0.0002729439999999972, 0.000273014000000002, 0.0002730000000000024, 0.00027298600000000284, 0.00027291599999999805, 0.0002729579999999898, 0.00027293100000000403, 0.00027287500000000575, 0.00027317999999999787, 0.0002729580000000037, 0.0002730280000000085, 0.00027298600000000284, 0.00027295900000000317, 0.0002739589999999903, 0.0002729020000000054, 0.000272902999999991]</msg>
<status status="PASS" starttime="20201030 15:55:56.633" endtime="20201030 15:55:56.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.622" endtime="20201030 15:55:56.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.648" endtime="20201030 15:55:56.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.644" endtime="20201030 15:55:56.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.641" endtime="20201030 15:55:56.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.140" endtime="20201030 15:55:56.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.139" endtime="20201030 15:55:56.673"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.694" endtime="20201030 15:55:56.740"></status>
</kw>
<msg timestamp="20201030 15:55:56.741" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.691" endtime="20201030 15:55:56.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.747" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.743" endtime="20201030 15:55:56.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.749" endtime="20201030 15:55:56.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.684" endtime="20201030 15:55:56.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.679" endtime="20201030 15:55:56.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.773" endtime="20201030 15:55:57.104"></status>
</kw>
<msg timestamp="20201030 15:55:57.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036008167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036294236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.769" endtime="20201030 15:55:57.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036008167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036294236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.113" endtime="20201030 15:55:57.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.130" endtime="20201030 15:55:57.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.762" endtime="20201030 15:55:57.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.757" endtime="20201030 15:55:57.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:57.146" level="INFO">${PHILIP_RES} = [{'diff': 0.0002860689999999999}, {'diff': 0.0002894030000000006}, {'diff': 0.0002894309999999997}, {'diff': 0.00028943000000000024}, {'diff': 0.00028941700000000015}, {'diff': 0.0002893749999999945},...</msg>
<status status="PASS" starttime="20201030 15:55:57.139" endtime="20201030 15:55:57.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.157" level="INFO">${RESULT} = {'diff': [0.0002860689999999999, 0.0002894030000000006, 0.0002894309999999997, 0.00028943000000000024, 0.00028941700000000015, 0.0002893749999999945, 0.00028931900000000316, 0.000289389000000001, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:57.148" endtime="20201030 15:55:57.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.167" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:57.165" endtime="20201030 15:55:57.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.172" level="INFO">VALUE: [0.0002860689999999999, 0.0002894030000000006, 0.0002894309999999997, 0.00028943000000000024, 0.00028941700000000015, 0.0002893749999999945, 0.00028931900000000316, 0.000289389000000001, 0.000290389000000002, 0.00028941600000000067, 0.00028934699999999536, 0.000289389000000001, 0.00028947199999999895, 0.00028934799999999483, 0.000289389000000001, 0.00028924999999999784, 0.00029041599999999473, 0.00028940299999999364, 0.00028936100000000187, 0.0002893330000000027, 0.00028931900000000316, 0.0002893470000000023, 0.0002893749999999945, 0.00028936099999999493, 0.00028937500000000144, 0.00028931900000000316, 0.0002893059999999961, 0.00028931900000000316, 0.00028926299999999794, 0.00028934799999999483, 0.00028938899999999407, 0.0002893189999999962, 0.0002893340000000022, 0.0002893199999999957, 0.00028936100000000187, 0.0002893199999999957, 0.000289389000000001, 0.00028936100000000187, 0.0002864439999999968, 0.0002893330000000027, 0.0002893190000000101, 0.0002893049999999897, 0.00028933299999998885, 0.0002893330000000027, 0.0002893199999999957, 0.0002892639999999974, 0.00028927799999999004, 0.0002893340000000022, 0.00028932000000000957, 0.00028927700000000445]</msg>
<status status="PASS" starttime="20201030 15:55:57.170" endtime="20201030 15:55:57.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.159" endtime="20201030 15:55:57.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.185" endtime="20201030 15:55:57.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.181" endtime="20201030 15:55:57.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.178" endtime="20201030 15:55:57.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.675" endtime="20201030 15:55:57.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.674" endtime="20201030 15:55:57.210"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.231" endtime="20201030 15:55:57.279"></status>
</kw>
<msg timestamp="20201030 15:55:57.280" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.228" endtime="20201030 15:55:57.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.286" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.282" endtime="20201030 15:55:57.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.288" endtime="20201030 15:55:57.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.221" endtime="20201030 15:55:57.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.215" endtime="20201030 15:55:57.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.312" endtime="20201030 15:55:57.649"></status>
</kw>
<msg timestamp="20201030 15:55:57.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036227639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036532083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.308" endtime="20201030 15:55:57.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036227639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036532083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.661" endtime="20201030 15:55:57.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.681" endtime="20201030 15:55:57.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.301" endtime="20201030 15:55:57.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.296" endtime="20201030 15:55:57.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:57.697" level="INFO">${PHILIP_RES} = [{'diff': 0.00030444400000000094}, {'diff': 0.0003066250000000048}, {'diff': 0.0003066250000000048}, {'diff': 0.0003066390000000044}, {'diff': 0.00030663899999999744}, {'diff': 0.0003066949999999957},...</msg>
<status status="PASS" starttime="20201030 15:55:57.690" endtime="20201030 15:55:57.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.706" level="INFO">${RESULT} = {'diff': [0.00030444400000000094, 0.0003066250000000048, 0.0003066250000000048, 0.0003066390000000044, 0.00030663899999999744, 0.0003066949999999957, 0.00030670800000000276, 0.0003066940000000032, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:57.699" endtime="20201030 15:55:57.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.717" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:57.714" endtime="20201030 15:55:57.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.722" level="INFO">VALUE: [0.00030444400000000094, 0.0003066250000000048, 0.0003066250000000048, 0.0003066390000000044, 0.00030663899999999744, 0.0003066949999999957, 0.00030670800000000276, 0.0003066940000000032, 0.0003075690000000006, 0.00030659699999999873, 0.00030669399999999625, 0.00030662499999999787, 0.00030663899999999744, 0.0003066800000000036, 0.00030665300000000395, 0.0003066390000000044, 0.0003066940000000032, 0.00030662499999999787, 0.00030659699999999873, 0.0003066669999999966, 0.0003066670000000035, 0.00030763899999999844, 0.0003076109999999993, 0.0003076390000000054, 0.00030658299999999916, 0.00030665199999999754, 0.0003065979999999982, 0.0003066800000000036, 0.00030663899999999744, 0.00030665300000000395, 0.0003066940000000032, 0.0003066810000000031, 0.00030670800000000276, 0.0003066810000000031, 0.00030663899999999744, 0.00030663899999999744, 0.00030659700000000567, 0.0003066250000000048, 0.0003065969999999918, 0.00030663799999999797, 0.00030662499999999093, 0.00030665300000000395, 0.0003066250000000048, 0.0003066669999999966, 0.00030663899999999744, 0.0003066390000000113, 0.00030665300000000395, 0.00030659700000000567, 0.0003066659999999971, 0.0003066250000000048]</msg>
<status status="PASS" starttime="20201030 15:55:57.719" endtime="20201030 15:55:57.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.708" endtime="20201030 15:55:57.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.735" endtime="20201030 15:55:57.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.730" endtime="20201030 15:55:57.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.727" endtime="20201030 15:55:57.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.212" endtime="20201030 15:55:57.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.211" endtime="20201030 15:55:57.760"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.782" endtime="20201030 15:55:57.832"></status>
</kw>
<msg timestamp="20201030 15:55:57.833" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.779" endtime="20201030 15:55:57.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.839" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.835" endtime="20201030 15:55:57.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.842" endtime="20201030 15:55:57.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.772" endtime="20201030 15:55:57.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.766" endtime="20201030 15:55:57.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.866" endtime="20201030 15:55:58.198"></status>
</kw>
<msg timestamp="20201030 15:55:58.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0372105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037531236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:57.863" endtime="20201030 15:55:58.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0372105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037531236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:58.207" endtime="20201030 15:55:58.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.224" endtime="20201030 15:55:58.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.856" endtime="20201030 15:55:58.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.851" endtime="20201030 15:55:58.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:58.240" level="INFO">${PHILIP_RES} = [{'diff': 0.000320736000000002}, {'diff': 0.0003238480000000016}, {'diff': 0.00032386200000000115}, {'diff': 0.0003238329999999956}, {'diff': 0.0003238329999999956}, {'diff': 0.0003237909999999969}, {...</msg>
<status status="PASS" starttime="20201030 15:55:58.232" endtime="20201030 15:55:58.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.249" level="INFO">${RESULT} = {'diff': [0.000320736000000002, 0.0003238480000000016, 0.00032386200000000115, 0.0003238329999999956, 0.0003238329999999956, 0.0003237909999999969, 0.00032383300000000254, 0.00032383300000000254, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:58.242" endtime="20201030 15:55:58.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.259" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:58.257" endtime="20201030 15:55:58.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.264" level="INFO">VALUE: [0.000320736000000002, 0.0003238480000000016, 0.00032386200000000115, 0.0003238329999999956, 0.0003238329999999956, 0.0003237909999999969, 0.00032383300000000254, 0.00032383300000000254, 0.0003238890000000008, 0.0003238610000000017, 0.000323818999999996, 0.00032387500000000125, 0.000323818999999996, 0.0003238329999999956, 0.0003238470000000021, 0.0003238610000000017, 0.00032386099999999474, 0.00032391699999999995, 0.00032383300000000254, 0.00032387500000000125, 0.0003238610000000017, 0.00032386099999999474, 0.00032384699999999517, 0.00032380600000000287, 0.0003238890000000008, 0.00032387500000000125, 0.00032387500000000125, 0.0003238610000000017, 0.00032370900000000535, 0.00032377700000000426, 0.00032476400000000516, 0.00032380500000001033, 0.0003237779999999968, 0.0003237779999999968, 0.0003237920000000033, 0.00032380599999999593, 0.0003238060000000098, 0.00032380599999999593, 0.0003238329999999956, 0.0003237920000000033, 0.0003238329999999956, 0.0003237920000000033, 0.0003237920000000033, 0.0003238879999999944, 0.0003237779999999968, 0.00032375000000001153, 0.00032376400000000416, 0.00032380599999999593, 0.0003237910000000038, 0.00032383399999999507]</msg>
<status status="PASS" starttime="20201030 15:55:58.261" endtime="20201030 15:55:58.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.251" endtime="20201030 15:55:58.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.278" endtime="20201030 15:55:58.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.272" endtime="20201030 15:55:58.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.270" endtime="20201030 15:55:58.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.762" endtime="20201030 15:55:58.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.761" endtime="20201030 15:55:58.303"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.324" endtime="20201030 15:55:58.376"></status>
</kw>
<msg timestamp="20201030 15:55:58.378" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.321" endtime="20201030 15:55:58.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.384" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.380" endtime="20201030 15:55:58.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.386" endtime="20201030 15:55:58.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.314" endtime="20201030 15:55:58.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.309" endtime="20201030 15:55:58.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.409" endtime="20201030 15:55:58.741"></status>
</kw>
<msg timestamp="20201030 15:55:58.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036129986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036468375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.406" endtime="20201030 15:55:58.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036129986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036468375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.750" endtime="20201030 15:55:58.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.767" endtime="20201030 15:55:58.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.399" endtime="20201030 15:55:58.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.394" endtime="20201030 15:55:58.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:58.784" level="INFO">${PHILIP_RES} = [{'diff': 0.0003383889999999945}, {'diff': 0.0003411529999999968}, {'diff': 0.00034118099999999596}, {'diff': 0.0003411249999999977}, {'diff': 0.00034116700000000333}, {'diff': 0.00034113899999999725}...</msg>
<status status="PASS" starttime="20201030 15:55:58.776" endtime="20201030 15:55:58.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.794" level="INFO">${RESULT} = {'diff': [0.0003383889999999945, 0.0003411529999999968, 0.00034118099999999596, 0.0003411249999999977, 0.00034116700000000333, 0.00034113899999999725, 0.0003421810000000039, 0.0003411800000000034, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:58.786" endtime="20201030 15:55:58.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.805" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:58.803" endtime="20201030 15:55:58.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.810" level="INFO">VALUE: [0.0003383889999999945, 0.0003411529999999968, 0.00034118099999999596, 0.0003411249999999977, 0.00034116700000000333, 0.00034113899999999725, 0.0003421810000000039, 0.0003411800000000034, 0.0003411529999999968, 0.0003411529999999968, 0.0003411109999999981, 0.00034116600000000386, 0.0003411250000000046, 0.00034113899999999725, 0.0003411799999999965, 0.00034120800000000256, 0.0003412089999999951, 0.00034118099999999596, 0.0003412370000000012, 0.0003411810000000029, 0.000341194000000003, 0.0003411800000000034, 0.0003411529999999968, 0.0003411249999999977, 0.00034113899999999725, 0.0003412780000000004, 0.0003411529999999968, 0.0003411800000000034, 0.00034108399999999844, 0.0003410689999999994, 0.0003412080000000095, 0.00034116700000000333, 0.00034116700000000333, 0.00034111099999999117, 0.00034109699999999854, 0.00034116700000000333, 0.000341194000000003, 0.0003411249999999977, 0.0003413329999999992, 0.00034104100000000026, 0.00034115199999999735, 0.00034116599999999, 0.00034116700000000333, 0.00034116700000000333, 0.0003410839999999915, 0.00034104100000000026, 0.0003421389999999913, 0.00034116699999998945, 0.0003411390000000042, 0.0003411799999999965]</msg>
<status status="PASS" starttime="20201030 15:55:58.807" endtime="20201030 15:55:58.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.796" endtime="20201030 15:55:58.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.823" endtime="20201030 15:55:58.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.818" endtime="20201030 15:55:58.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.816" endtime="20201030 15:55:58.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.305" endtime="20201030 15:55:58.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.304" endtime="20201030 15:55:58.848"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.869" endtime="20201030 15:55:58.923"></status>
</kw>
<msg timestamp="20201030 15:55:58.924" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.866" endtime="20201030 15:55:58.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.931" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.927" endtime="20201030 15:55:58.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.933" endtime="20201030 15:55:58.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.859" endtime="20201030 15:55:58.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.853" endtime="20201030 15:55:58.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.956" endtime="20201030 15:55:59.287"></status>
</kw>
<msg timestamp="20201030 15:55:59.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036416861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0367725, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:58.953" endtime="20201030 15:55:59.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036416861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0367725, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:59.295" endtime="20201030 15:55:59.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.313" endtime="20201030 15:55:59.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.945" endtime="20201030 15:55:59.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.941" endtime="20201030 15:55:59.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:59.328" level="INFO">${PHILIP_RES} = [{'diff': 0.0003556389999999979}, {'diff': 0.0003584999999999977}, {'diff': 0.000359458}, {'diff': 0.00035855600000000293}, {'diff': 0.00035861100000000173}, {'diff': 0.00035844399999999943}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:55:59.321" endtime="20201030 15:55:59.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:59.339" level="INFO">${RESULT} = {'diff': [0.0003556389999999979, 0.0003584999999999977, 0.000359458, 0.00035855600000000293, 0.00035861100000000173, 0.00035844399999999943, 0.0003585419999999964, 0.0003585139999999973, 0.00035849999...</msg>
<status status="PASS" starttime="20201030 15:55:59.330" endtime="20201030 15:55:59.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.349" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:59.347" endtime="20201030 15:55:59.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.355" level="INFO">VALUE: [0.0003556389999999979, 0.0003584999999999977, 0.000359458, 0.00035855600000000293, 0.00035861100000000173, 0.00035844399999999943, 0.0003585419999999964, 0.0003585139999999973, 0.0003584999999999977, 0.0003585410000000039, 0.00035850000000000465, 0.00035852799999999685, 0.00035852799999999685, 0.0003584869999999976, 0.0003584869999999976, 0.00035848599999999814, 0.0003584999999999977, 0.0003584589999999985, 0.000358555999999996, 0.0003556389999999979, 0.0003584869999999976, 0.0003585140000000042, 0.000358457999999999, 0.00035844500000000584, 0.0003584999999999977, 0.00035847199999999857, 0.0003585140000000042, 0.000358473000000005, 0.0003585700000000025, 0.0003584160000000003, 0.0003584449999999989, 0.00035843100000000627, 0.00035852799999999685, 0.0003585140000000042, 0.00035858299999999566, 0.000358569000000003, 0.0003584859999999912, 0.0003584999999999977, 0.00035855600000000987, 0.000358584000000009, 0.000358555999999996, 0.00035854099999999, 0.00035852799999999685, 0.0003585549999999965, 0.0003585700000000025, 0.0003585140000000042, 0.00035847199999999857, 0.0003585280000000107, 0.0003584860000000051, 0.00035847199999999857]</msg>
<status status="PASS" starttime="20201030 15:55:59.352" endtime="20201030 15:55:59.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.341" endtime="20201030 15:55:59.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:59.367" endtime="20201030 15:55:59.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.363" endtime="20201030 15:55:59.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.360" endtime="20201030 15:55:59.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.850" endtime="20201030 15:55:59.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.848" endtime="20201030 15:55:59.392"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.413" endtime="20201030 15:55:59.470"></status>
</kw>
<msg timestamp="20201030 15:55:59.471" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.410" endtime="20201030 15:55:59.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.477" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.473" endtime="20201030 15:55:59.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.479" endtime="20201030 15:55:59.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.403" endtime="20201030 15:55:59.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.398" endtime="20201030 15:55:59.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.502" endtime="20201030 15:55:59.836"></status>
</kw>
<msg timestamp="20201030 15:55:59.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036077653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036450903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.499" endtime="20201030 15:55:59.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036077653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036450903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.845" endtime="20201030 15:55:59.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.863" endtime="20201030 15:55:59.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.492" endtime="20201030 15:55:59.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.487" endtime="20201030 15:55:59.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:59.879" level="INFO">${PHILIP_RES} = [{'diff': 0.0003732499999999986}, {'diff': 0.0003767500000000021}, {'diff': 0.00037680600000000036}, {'diff': 0.0003768050000000009}, {'diff': 0.0003768469999999996}, {'diff': 0.00037683300000000003},...</msg>
<status status="PASS" starttime="20201030 15:55:59.871" endtime="20201030 15:55:59.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:59.888" level="INFO">${RESULT} = {'diff': [0.0003732499999999986, 0.0003767500000000021, 0.00037680600000000036, 0.0003768050000000009, 0.0003768469999999996, 0.00037683300000000003, 0.0003740559999999976, 0.00037688900000000525, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:59.881" endtime="20201030 15:55:59.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.898" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:59.896" endtime="20201030 15:55:59.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.903" level="INFO">VALUE: [0.0003732499999999986, 0.0003767500000000021, 0.00037680600000000036, 0.0003768050000000009, 0.0003768469999999996, 0.00037683300000000003, 0.0003740559999999976, 0.00037688900000000525, 0.00037676400000000165, 0.0003768339999999995, 0.00037676299999999524, 0.00037681999999999993, 0.00037781900000000146, 0.00037686099999999917, 0.00037693100000000396, 0.00037687499999999874, 0.0003767639999999947, 0.0003768469999999996, 0.00037683300000000003, 0.00037786199999999964, 0.00037683300000000003, 0.00037687499999999874, 0.00037687499999999874, 0.0003769300000000045, 0.00037687499999999874, 0.00037683300000000003, 0.00037681999999999993, 0.0003767769999999948, 0.0003767080000000034, 0.0003767779999999943, 0.00037676400000000165, 0.00037676400000000165, 0.0003767779999999943, 0.0003768329999999931, 0.0003768329999999931, 0.00037681999999999993, 0.00037688899999999137, 0.000376750000000009, 0.00037683400000000644, 0.00037676400000000165, 0.0003768469999999996, 0.0003768469999999996, 0.00037688899999999137, 0.00037686099999999223, 0.0003769160000000049, 0.00037686099999999223, 0.00037674999999999514, 0.0003768329999999931, 0.00037680499999999395, 0.00037676400000000165]</msg>
<status status="PASS" starttime="20201030 15:55:59.900" endtime="20201030 15:55:59.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.889" endtime="20201030 15:55:59.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:59.915" endtime="20201030 15:55:59.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.911" endtime="20201030 15:55:59.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.909" endtime="20201030 15:55:59.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.394" endtime="20201030 15:55:59.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.393" endtime="20201030 15:55:59.940"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.962" endtime="20201030 15:56:00.021"></status>
</kw>
<msg timestamp="20201030 15:56:00.022" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.959" endtime="20201030 15:56:00.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.028" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.024" endtime="20201030 15:56:00.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.030" endtime="20201030 15:56:00.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.951" endtime="20201030 15:56:00.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.946" endtime="20201030 15:56:00.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.053" endtime="20201030 15:56:00.391"></status>
</kw>
<msg timestamp="20201030 15:56:00.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036280903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036673222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.050" endtime="20201030 15:56:00.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036280903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036673222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.401" endtime="20201030 15:56:00.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.418" endtime="20201030 15:56:00.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.043" endtime="20201030 15:56:00.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.038" endtime="20201030 15:56:00.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:00.434" level="INFO">${PHILIP_RES} = [{'diff': 0.00039231899999999514}, {'diff': 0.00039509700000000397}, {'diff': 0.00039524999999999977}, {'diff': 0.0003951109999999966}, {'diff': 0.00039513899999999574}, {'diff': 0.0003951109999999966...</msg>
<status status="PASS" starttime="20201030 15:56:00.427" endtime="20201030 15:56:00.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.443" level="INFO">${RESULT} = {'diff': [0.00039231899999999514, 0.00039509700000000397, 0.00039524999999999977, 0.0003951109999999966, 0.00039513899999999574, 0.0003951109999999966, 0.00039513899999999574, 0.0003951109999999966, 0...</msg>
<status status="PASS" starttime="20201030 15:56:00.436" endtime="20201030 15:56:00.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.454" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:00.452" endtime="20201030 15:56:00.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.459" level="INFO">VALUE: [0.00039231899999999514, 0.00039509700000000397, 0.00039524999999999977, 0.0003951109999999966, 0.00039513899999999574, 0.0003951109999999966, 0.00039513899999999574, 0.0003951109999999966, 0.00039520800000000106, 0.0003951529999999953, 0.00039509699999999703, 0.00039508299999999746, 0.0003950689999999979, 0.0003951670000000018, 0.00039516600000000235, 0.00039509800000000345, 0.00039505500000000526, 0.00039515300000000225, 0.0003950830000000044, 0.0003951250000000031, 0.0003951249999999962, 0.00039522200000000063, 0.00039520900000000053, 0.00039520800000000106, 0.00039520900000000053, 0.0003951669999999949, 0.0003951940000000015, 0.000395208000000008, 0.0003952779999999989, 0.0003952640000000063, 0.0003952089999999936, 0.00039512500000001005, 0.00039518100000000833, 0.00039519500000000096, 0.0003952640000000063, 0.00039237500000000036, 0.0003951670000000018, 0.0003951940000000015, 0.00039511099999998966, 0.00039509699999999703, 0.00039519500000000096, 0.0003951670000000018, 0.00039524999999999977, 0.000395179999999995, 0.0003951529999999953, 0.000395179999999995, 0.000395208000000008, 0.0003951390000000027, 0.0003950689999999979, 0.0003951670000000018]</msg>
<status status="PASS" starttime="20201030 15:56:00.456" endtime="20201030 15:56:00.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.445" endtime="20201030 15:56:00.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.474" endtime="20201030 15:56:00.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.468" endtime="20201030 15:56:00.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.465" endtime="20201030 15:56:00.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.942" endtime="20201030 15:56:00.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.941" endtime="20201030 15:56:00.499"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.520" endtime="20201030 15:56:00.581"></status>
</kw>
<msg timestamp="20201030 15:56:00.582" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.517" endtime="20201030 15:56:00.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.589" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.585" endtime="20201030 15:56:00.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.591" endtime="20201030 15:56:00.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.510" endtime="20201030 15:56:00.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.505" endtime="20201030 15:56:00.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.614" endtime="20201030 15:56:00.956"></status>
</kw>
<msg timestamp="20201030 15:56:00.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036897306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037307528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.611" endtime="20201030 15:56:00.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036897306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037307528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.965" endtime="20201030 15:56:00.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.982" endtime="20201030 15:56:00.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.604" endtime="20201030 15:56:00.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.599" endtime="20201030 15:56:00.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:00.998" level="INFO">${PHILIP_RES} = [{'diff': 0.00041022200000000175}, {'diff': 0.00041345800000000543}, {'diff': 0.00041347199999999806}, {'diff': 0.00041341699999999926}, {'diff': 0.0004135140000000037}, {'diff': 0.0004134309999999988...</msg>
<status status="PASS" starttime="20201030 15:56:00.991" endtime="20201030 15:56:00.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:01.009" level="INFO">${RESULT} = {'diff': [0.00041022200000000175, 0.00041345800000000543, 0.00041347199999999806, 0.00041341699999999926, 0.0004135140000000037, 0.00041343099999999883, 0.0004135129999999973, 0.0004134999999999972, 0...</msg>
<status status="PASS" starttime="20201030 15:56:01.000" endtime="20201030 15:56:01.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.019" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:01.017" endtime="20201030 15:56:01.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.024" level="INFO">VALUE: [0.00041022200000000175, 0.00041345800000000543, 0.00041347199999999806, 0.00041341699999999926, 0.0004135140000000037, 0.00041343099999999883, 0.0004135129999999973, 0.0004134999999999972, 0.0004134579999999985, 0.00041348600000000457, 0.00041351300000000424, 0.0004135140000000037, 0.00041344500000000534, 0.00041348600000000457, 0.0004135139999999968, 0.00041358400000000156, 0.00041359700000000166, 0.00041450000000000514, 0.00041343099999999883, 0.0004134579999999985, 0.00041354200000000285, 0.00041348599999999763, 0.0004135280000000033, 0.00041065299999999694, 0.000413554999999996, 0.00041355600000000936, 0.00041351299999999036, 0.00041354200000000285, 0.00041351399999998983, 0.0004134439999999989, 0.0004135559999999955, 0.0004134999999999972, 0.0004135000000000111, 0.00041354200000000285, 0.00041345800000000543, 0.00041355600000000936, 0.000413541999999989, 0.000413541999999989, 0.00041348600000000457, 0.00041354200000000285, 0.00041348600000000457, 0.0004135559999999955, 0.00041345800000000543, 0.0004135550000000099, 0.0004133749999999936, 0.0004134449999999984, 0.0004134159999999998, 0.00041345800000000543, 0.00041341699999999926, 0.00041348600000000457]</msg>
<status status="PASS" starttime="20201030 15:56:01.021" endtime="20201030 15:56:01.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.010" endtime="20201030 15:56:01.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:01.037" endtime="20201030 15:56:01.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.032" endtime="20201030 15:56:01.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.030" endtime="20201030 15:56:01.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.501" endtime="20201030 15:56:01.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.500" endtime="20201030 15:56:01.062"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.083" endtime="20201030 15:56:01.147"></status>
</kw>
<msg timestamp="20201030 15:56:01.148" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.080" endtime="20201030 15:56:01.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.154" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.150" endtime="20201030 15:56:01.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.156" endtime="20201030 15:56:01.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.073" endtime="20201030 15:56:01.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.068" endtime="20201030 15:56:01.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.179" endtime="20201030 15:56:01.533"></status>
</kw>
<msg timestamp="20201030 15:56:01.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036360431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036789514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.176" endtime="20201030 15:56:01.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036360431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036789514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.541" endtime="20201030 15:56:01.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.559" endtime="20201030 15:56:01.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.169" endtime="20201030 15:56:01.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.164" endtime="20201030 15:56:01.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:01.574" level="INFO">${PHILIP_RES} = [{'diff': 0.0004290830000000037}, {'diff': 0.0004317779999999938}, {'diff': 0.0004319580000000031}, {'diff': 0.00043187499999999823}, {'diff': 0.00043181899999999995}, {'diff': 0.0004317920000000003},...</msg>
<status status="PASS" starttime="20201030 15:56:01.567" endtime="20201030 15:56:01.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:01.585" level="INFO">${RESULT} = {'diff': [0.0004290830000000037, 0.0004317779999999938, 0.0004319580000000031, 0.00043187499999999823, 0.00043181899999999995, 0.0004317920000000003, 0.00043191699999999694, 0.0004318610000000056, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:01.576" endtime="20201030 15:56:01.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.595" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:01.593" endtime="20201030 15:56:01.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.601" level="INFO">VALUE: [0.0004290830000000037, 0.0004317779999999938, 0.0004319580000000031, 0.00043187499999999823, 0.00043181899999999995, 0.0004317920000000003, 0.00043191699999999694, 0.0004318610000000056, 0.00043187500000000517, 0.00043290299999999837, 0.000431833999999999, 0.00043186099999999866, 0.00043187500000000517, 0.0004319030000000043, 0.0004319439999999966, 0.00043187499999999823, 0.0004319019999999979, 0.00043181899999999995, 0.0004317920000000003, 0.0004318329999999995, 0.00043286099999999966, 0.00043187499999999823, 0.00043188799999999833, 0.0004319439999999966, 0.00043194400000000355, 0.00043187499999999823, 0.0004318609999999917, 0.00043194400000000355, 0.0004318610000000056, 0.00043188899999999086, 0.00043194400000000355, 0.00043195900000000953, 0.0004319170000000039, 0.00043190299999999737, 0.0004319170000000039, 0.00043188900000000474, 0.00043194399999998967, 0.0004318610000000056, 0.0004318199999999994, 0.0004318609999999917, 0.00043190300000001125, 0.0004318609999999917, 0.00043188899999999086, 0.0004318469999999991, 0.0004318609999999917, 0.0004318469999999991, 0.00043184700000001297, 0.00043188900000000474, 0.00043187499999999823, 0.0004318469999999991]</msg>
<status status="PASS" starttime="20201030 15:56:01.598" endtime="20201030 15:56:01.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.587" endtime="20201030 15:56:01.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:01.613" endtime="20201030 15:56:01.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.609" endtime="20201030 15:56:01.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.606" endtime="20201030 15:56:01.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.064" endtime="20201030 15:56:01.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.063" endtime="20201030 15:56:01.638"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.660" endtime="20201030 15:56:01.725"></status>
</kw>
<msg timestamp="20201030 15:56:01.727" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.656" endtime="20201030 15:56:01.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.733" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.729" endtime="20201030 15:56:01.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.735" endtime="20201030 15:56:01.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.649" endtime="20201030 15:56:01.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.644" endtime="20201030 15:56:01.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.758" endtime="20201030 15:56:02.106"></status>
</kw>
<msg timestamp="20201030 15:56:02.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036545347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036993125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.755" endtime="20201030 15:56:02.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036545347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036993125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.115" endtime="20201030 15:56:02.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.132" endtime="20201030 15:56:02.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.748" endtime="20201030 15:56:02.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.743" endtime="20201030 15:56:02.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:02.148" level="INFO">${PHILIP_RES} = [{'diff': 0.00044777800000000284}, {'diff': 0.0004511669999999954}, {'diff': 0.00045113899999999624}, {'diff': 0.000451194000000002}, {'diff': 0.0004511670000000023}, {'diff': 0.0004511670000000023}, ...</msg>
<status status="PASS" starttime="20201030 15:56:02.141" endtime="20201030 15:56:02.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:02.157" level="INFO">${RESULT} = {'diff': [0.00044777800000000284, 0.0004511669999999954, 0.00045113899999999624, 0.000451194000000002, 0.0004511670000000023, 0.0004511670000000023, 0.0004512079999999946, 0.00045112499999999667, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:02.150" endtime="20201030 15:56:02.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.167" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:02.165" endtime="20201030 15:56:02.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.172" level="INFO">VALUE: [0.00044777800000000284, 0.0004511669999999954, 0.00045113899999999624, 0.000451194000000002, 0.0004511670000000023, 0.0004511670000000023, 0.0004512079999999946, 0.00045112499999999667, 0.0004510830000000049, 0.0004511250000000036, 0.00045115199999999633, 0.0004511390000000032, 0.000451097999999997, 0.0004511669999999954, 0.0004511390000000032, 0.00045109700000000447, 0.00045115300000000275, 0.0004511390000000032, 0.0004512230000000006, 0.0004511800000000024, 0.00045125000000000026, 0.00045116600000000284, 0.00045113899999999624, 0.00045116600000000284, 0.00045112499999999667, 0.0004511390000000032, 0.00045112499999999667, 0.0004511529999999958, 0.000451097999999997, 0.0004512230000000006, 0.0004510830000000049, 0.0004511670000000023, 0.0004511390000000032, 0.0004511670000000023, 0.00045111100000000404, 0.0004512230000000006, 0.00045119500000000146, 0.00045125000000000026, 0.0004513189999999917, 0.0004512779999999994, 0.0004512630000000073, 0.00045125000000000026, 0.0004512220000000011, 0.0004511390000000032, 0.0004511390000000032, 0.0004511670000000023, 0.00045123600000000763, 0.0004512220000000011, 0.00045126400000000677, 0.0004512639999999929]</msg>
<status status="PASS" starttime="20201030 15:56:02.169" endtime="20201030 15:56:02.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.159" endtime="20201030 15:56:02.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.185" endtime="20201030 15:56:02.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.181" endtime="20201030 15:56:02.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.178" endtime="20201030 15:56:02.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.640" endtime="20201030 15:56:02.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.639" endtime="20201030 15:56:02.210"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.231" endtime="20201030 15:56:02.301"></status>
</kw>
<msg timestamp="20201030 15:56:02.302" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.228" endtime="20201030 15:56:02.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.308" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.304" endtime="20201030 15:56:02.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.310" endtime="20201030 15:56:02.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.221" endtime="20201030 15:56:02.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.216" endtime="20201030 15:56:02.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.333" endtime="20201030 15:56:02.678"></status>
</kw>
<msg timestamp="20201030 15:56:02.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037851472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038318556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.330" endtime="20201030 15:56:02.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037851472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038318556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.687" endtime="20201030 15:56:02.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.704" endtime="20201030 15:56:02.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.323" endtime="20201030 15:56:02.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.318" endtime="20201030 15:56:02.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:02.720" level="INFO">${PHILIP_RES} = [{'diff': 0.00046708399999999956}, {'diff': 0.00047036100000000247}, {'diff': 0.0004704310000000003}, {'diff': 0.00047043000000000085}, {'diff': 0.000471361999999996}, {'diff': 0.00047040199999999477}...</msg>
<status status="PASS" starttime="20201030 15:56:02.713" endtime="20201030 15:56:02.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:02.729" level="INFO">${RESULT} = {'diff': [0.00046708399999999956, 0.00047036100000000247, 0.0004704310000000003, 0.00047043000000000085, 0.000471361999999996, 0.00047040199999999477, 0.00047031900000000376, 0.00047037500000000204, 0...</msg>
<status status="PASS" starttime="20201030 15:56:02.722" endtime="20201030 15:56:02.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.739" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:02.737" endtime="20201030 15:56:02.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.745" level="INFO">VALUE: [0.00046708399999999956, 0.00047036100000000247, 0.0004704310000000003, 0.00047043000000000085, 0.000471361999999996, 0.00047040199999999477, 0.00047031900000000376, 0.00047037500000000204, 0.00047036099999999553, 0.0004703890000000016, 0.00047033399999999587, 0.0004703480000000024, 0.00047038899999999467, 0.0004703890000000016, 0.0004704030000000012, 0.00047041700000000075, 0.00047037500000000204, 0.00047031900000000376, 0.0004702229999999988, 0.0004702229999999988, 0.000470263999999998, 0.00047019399999999323, 0.00047020799999999974, 0.0004702359999999989, 0.0004702499999999915, 0.00047015300000000093, 0.0004702359999999989, 0.00047022199999999237, 0.00047023699999999835, 0.00047027799999999065, 0.00047019399999999323, 0.00047016600000000797, 0.0004702500000000054, 0.0004702780000000045, 0.00047019399999999323, 0.0004703199999999963, 0.00047029199999999716, 0.0004702500000000054, 0.0004703050000000042, 0.0004702780000000045, 0.00047033300000000333, 0.0004703749999999951, 0.00047034699999999596, 0.00047036100000000247, 0.0004704030000000081, 0.00047043100000000726, 0.00047047199999999956, 0.0004703609999999886, 0.00047041700000000075, 0.00047043100000000726]</msg>
<status status="PASS" starttime="20201030 15:56:02.742" endtime="20201030 15:56:02.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.731" endtime="20201030 15:56:02.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.758" endtime="20201030 15:56:02.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.753" endtime="20201030 15:56:02.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.750" endtime="20201030 15:56:02.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.212" endtime="20201030 15:56:02.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.211" endtime="20201030 15:56:02.784"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.805" endtime="20201030 15:56:02.874"></status>
</kw>
<msg timestamp="20201030 15:56:02.876" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.802" endtime="20201030 15:56:02.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.882" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.878" endtime="20201030 15:56:02.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.884" endtime="20201030 15:56:02.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.795" endtime="20201030 15:56:02.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.790" endtime="20201030 15:56:02.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.908" endtime="20201030 15:56:03.243"></status>
</kw>
<msg timestamp="20201030 15:56:03.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036344625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036831306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.904" endtime="20201030 15:56:03.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036344625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036831306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.252" endtime="20201030 15:56:03.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.269" endtime="20201030 15:56:03.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.897" endtime="20201030 15:56:03.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.892" endtime="20201030 15:56:03.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:03.285" level="INFO">${PHILIP_RES} = [{'diff': 0.0004866810000000027}, {'diff': 0.0004896529999999996}, {'diff': 0.0004896520000000001}, {'diff': 0.000489610999999994}, {'diff': 0.0004898200000000019}, {'diff': 0.0004897780000000032}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:03.277" endtime="20201030 15:56:03.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.295" level="INFO">${RESULT} = {'diff': [0.0004866810000000027, 0.0004896529999999996, 0.0004896520000000001, 0.000489610999999994, 0.0004898200000000019, 0.0004897780000000032, 0.0004897500000000041, 0.0004897499999999971, 0.00048...</msg>
<status status="PASS" starttime="20201030 15:56:03.287" endtime="20201030 15:56:03.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.305" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:03.303" endtime="20201030 15:56:03.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.311" level="INFO">VALUE: [0.0004866810000000027, 0.0004896529999999996, 0.0004896520000000001, 0.000489610999999994, 0.0004898200000000019, 0.0004897780000000032, 0.0004897500000000041, 0.0004897499999999971, 0.0004897639999999967, 0.0004868889999999973, 0.0004897639999999967, 0.0004896939999999989, 0.0004896250000000005, 0.0004896659999999997, 0.0004895830000000018, 0.0004896809999999988, 0.0004896520000000001, 0.0004897089999999979, 0.0004896809999999988, 0.0004896520000000001, 0.000489639, 0.0004896250000000005, 0.0004906939999999999, 0.0004896659999999997, 0.0004896659999999997, 0.0004896249999999935, 0.000489639, 0.0004896949999999983, 0.000489639, 0.000489721999999998, 0.0004895970000000083, 0.0004896110000000009, 0.0004895559999999882, 0.0004896250000000074, 0.0004896659999999997, 0.0004896120000000004, 0.0004896110000000009, 0.0004897080000000054, 0.0004896669999999992, 0.0004896949999999983, 0.0004896250000000074, 0.0004897080000000054, 0.0004897360000000045, 0.0004896249999999935, 0.000490639000000001, 0.0004896799999999923, 0.0004896799999999923, 0.0004897080000000054, 0.000489721999999998, 0.0004896949999999983]</msg>
<status status="PASS" starttime="20201030 15:56:03.308" endtime="20201030 15:56:03.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.297" endtime="20201030 15:56:03.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.323" endtime="20201030 15:56:03.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.319" endtime="20201030 15:56:03.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.316" endtime="20201030 15:56:03.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.786" endtime="20201030 15:56:03.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.784" endtime="20201030 15:56:03.348"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.369" endtime="20201030 15:56:03.441"></status>
</kw>
<msg timestamp="20201030 15:56:03.442" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.366" endtime="20201030 15:56:03.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.448" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.444" endtime="20201030 15:56:03.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.450" endtime="20201030 15:56:03.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.359" endtime="20201030 15:56:03.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.353" endtime="20201030 15:56:03.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.474" endtime="20201030 15:56:03.827"></status>
</kw>
<msg timestamp="20201030 15:56:03.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036156292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036661806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.470" endtime="20201030 15:56:03.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036156292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036661806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.837" endtime="20201030 15:56:03.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.856" endtime="20201030 15:56:03.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.463" endtime="20201030 15:56:03.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.458" endtime="20201030 15:56:03.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:03.872" level="INFO">${PHILIP_RES} = [{'diff': 0.0005055139999999986}, {'diff': 0.0005087639999999949}, {'diff': 0.0005088330000000002}, {'diff': 0.0005088060000000005}, {'diff': 0.0005088469999999998}, {'diff': 0.0005088200000000001}, {...</msg>
<status status="PASS" starttime="20201030 15:56:03.864" endtime="20201030 15:56:03.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.883" level="INFO">${RESULT} = {'diff': [0.0005055139999999986, 0.0005087639999999949, 0.0005088330000000002, 0.0005088060000000005, 0.0005088469999999998, 0.0005088200000000001, 0.0005088469999999998, 0.0005088339999999997, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:56:03.874" endtime="20201030 15:56:03.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.894" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:03.891" endtime="20201030 15:56:03.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.899" level="INFO">VALUE: [0.0005055139999999986, 0.0005087639999999949, 0.0005088330000000002, 0.0005088060000000005, 0.0005088469999999998, 0.0005088200000000001, 0.0005088469999999998, 0.0005088339999999997, 0.0005088059999999936, 0.0005088609999999993, 0.0005087230000000026, 0.0005086949999999965, 0.000508792000000001, 0.000508902999999998, 0.0005087909999999946, 0.000508792000000001, 0.0005088050000000011, 0.0005088889999999985, 0.0005088609999999993, 0.0005088890000000054, 0.0005088339999999997, 0.0005088889999999985, 0.0005088060000000005, 0.0005088609999999993, 0.000508820000000007, 0.0005088339999999997, 0.000508791999999994, 0.0005088330000000002, 0.0005087370000000091, 0.0005087499999999884, 0.0005088339999999997, 0.0005087230000000026, 0.0005086810000000108, 0.0005087079999999966, 0.0005088339999999997, 0.000508791999999994, 0.0005088330000000002, 0.0005087640000000088, 0.000508903000000005, 0.0005089169999999976, 0.0005089159999999981, 0.0005088609999999993, 0.0005088470000000067, 0.0005089029999999911, 0.0005089170000000115, 0.0005088750000000059, 0.0005089450000000106, 0.0005089860000000029, 0.0005099580000000048, 0.0005089159999999981]</msg>
<status status="PASS" starttime="20201030 15:56:03.896" endtime="20201030 15:56:03.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.885" endtime="20201030 15:56:03.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.911" endtime="20201030 15:56:03.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.907" endtime="20201030 15:56:03.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.904" endtime="20201030 15:56:03.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.350" endtime="20201030 15:56:03.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.349" endtime="20201030 15:56:03.937"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.960" endtime="20201030 15:56:04.034"></status>
</kw>
<msg timestamp="20201030 15:56:04.036" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.957" endtime="20201030 15:56:04.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.042" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.038" endtime="20201030 15:56:04.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.044" endtime="20201030 15:56:04.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.949" endtime="20201030 15:56:04.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.944" endtime="20201030 15:56:04.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.067" endtime="20201030 15:56:04.403"></status>
</kw>
<msg timestamp="20201030 15:56:04.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038909264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039436875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.064" endtime="20201030 15:56:04.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038909264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039436875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.412" endtime="20201030 15:56:04.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.429" endtime="20201030 15:56:04.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.057" endtime="20201030 15:56:04.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.052" endtime="20201030 15:56:04.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:04.445" level="INFO">${PHILIP_RES} = [{'diff': 0.0005276110000000042}, {'diff': 0.0005292500000000019}, {'diff': 0.0005292780000000011}, {'diff': 0.0005302779999999951}, {'diff': 0.000529360999999999}, {'diff': 0.0005293190000000003}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:04.437" endtime="20201030 15:56:04.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:04.454" level="INFO">${RESULT} = {'diff': [0.0005276110000000042, 0.0005292500000000019, 0.0005292780000000011, 0.0005302779999999951, 0.000529360999999999, 0.0005293190000000003, 0.0005292640000000015, 0.0005292780000000011, 0.00052...</msg>
<status status="PASS" starttime="20201030 15:56:04.447" endtime="20201030 15:56:04.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.464" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:04.462" endtime="20201030 15:56:04.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.470" level="INFO">VALUE: [0.0005276110000000042, 0.0005292500000000019, 0.0005292780000000011, 0.0005302779999999951, 0.000529360999999999, 0.0005293190000000003, 0.0005292640000000015, 0.0005292780000000011, 0.0005263330000000038, 0.0005291799999999972, 0.0005292079999999963, 0.0005291810000000036, 0.0005292079999999963, 0.0005291380000000054, 0.0005291249999999983, 0.0005292359999999954, 0.0005303330000000009, 0.0005292910000000012, 0.0005292920000000007, 0.0005293330000000068, 0.0005291659999999976, 0.0005292909999999873, 0.0005292500000000089, 0.000529278000000008, 0.0005293479999999989, 0.0005292779999999941, 0.0005291939999999967, 0.0005292360000000024, 0.000529249999999995, 0.0005292219999999959, 0.0005291809999999897, 0.0005292219999999959, 0.0005292229999999953, 0.0005292360000000024, 0.0005291389999999979, 0.0005291810000000036, 0.0005291669999999971, 0.0005291660000000115, 0.000529236999999988, 0.0005292219999999959, 0.0005291519999999911, 0.0005291949999999962, 0.0005291530000000044, 0.0005291800000000041, 0.0005301949999999972, 0.0005292769999999947, 0.0005292090000000027, 0.0005292219999999959, 0.0005300840000000001, 0.0005292220000000097]</msg>
<status status="PASS" starttime="20201030 15:56:04.467" endtime="20201030 15:56:04.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.456" endtime="20201030 15:56:04.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:04.482" endtime="20201030 15:56:04.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.478" endtime="20201030 15:56:04.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.475" endtime="20201030 15:56:04.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.939" endtime="20201030 15:56:04.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.938" endtime="20201030 15:56:04.507"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.528" endtime="20201030 15:56:04.606"></status>
</kw>
<msg timestamp="20201030 15:56:04.607" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.525" endtime="20201030 15:56:04.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.613" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.610" endtime="20201030 15:56:04.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.616" endtime="20201030 15:56:04.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.518" endtime="20201030 15:56:04.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.513" endtime="20201030 15:56:04.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.639" endtime="20201030 15:56:04.973"></status>
</kw>
<msg timestamp="20201030 15:56:04.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037735514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038284236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.636" endtime="20201030 15:56:04.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037735514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038284236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.982" endtime="20201030 15:56:04.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.000" endtime="20201030 15:56:05.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.629" endtime="20201030 15:56:05.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.624" endtime="20201030 15:56:05.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:05.016" level="INFO">${PHILIP_RES} = [{'diff': 0.0005487220000000015}, {'diff': 0.0005493889999999974}, {'diff': 0.0005495550000000002}, {'diff': 0.0005494169999999965}, {'diff': 0.0005495550000000002}, {'diff': 0.0005495559999999997}, {...</msg>
<status status="PASS" starttime="20201030 15:56:05.009" endtime="20201030 15:56:05.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.025" level="INFO">${RESULT} = {'diff': [0.0005487220000000015, 0.0005493889999999974, 0.0005495550000000002, 0.0005494169999999965, 0.0005495550000000002, 0.0005495559999999997, 0.0005495689999999998, 0.0005494449999999956, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:56:05.018" endtime="20201030 15:56:05.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.035" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:05.033" endtime="20201030 15:56:05.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.041" level="INFO">VALUE: [0.0005487220000000015, 0.0005493889999999974, 0.0005495550000000002, 0.0005494169999999965, 0.0005495550000000002, 0.0005495559999999997, 0.0005495689999999998, 0.0005494449999999956, 0.0005495280000000005, 0.0005494860000000018, 0.0005495130000000015, 0.0005495280000000005, 0.0005494450000000026, 0.0005493469999999986, 0.0005493469999999986, 0.0005494169999999965, 0.000549624999999998, 0.0005493879999999979, 0.0005494029999999969, 0.0005494449999999956, 0.0005493619999999977, 0.000549431000000003, 0.0005493889999999974, 0.0005493609999999982, 0.0005492919999999929, 0.0005492919999999929, 0.0005503609999999992, 0.0005504300000000045, 0.0005493329999999991, 0.0005493339999999985, 0.0005493889999999974, 0.0005493049999999999, 0.0005492909999999934, 0.0005494030000000039, 0.0005503889999999984, 0.000549431000000003, 0.0005494169999999965, 0.0005495279999999936, 0.0005494860000000018, 0.0005493609999999982, 0.0005493189999999926, 0.0005494579999999888, 0.0005494300000000035, 0.0005494449999999956, 0.0005494020000000044, 0.0005494030000000039, 0.0005494439999999962, 0.0005494590000000021, 0.0005494580000000027, 0.0005494580000000027]</msg>
<status status="PASS" starttime="20201030 15:56:05.037" endtime="20201030 15:56:05.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.027" endtime="20201030 15:56:05.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.055" endtime="20201030 15:56:05.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.049" endtime="20201030 15:56:05.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.046" endtime="20201030 15:56:05.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.509" endtime="20201030 15:56:05.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.508" endtime="20201030 15:56:05.080"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.101" endtime="20201030 15:56:05.180"></status>
</kw>
<msg timestamp="20201030 15:56:05.181" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.098" endtime="20201030 15:56:05.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.187" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.183" endtime="20201030 15:56:05.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.189" endtime="20201030 15:56:05.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.091" endtime="20201030 15:56:05.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.085" endtime="20201030 15:56:05.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.212" endtime="20201030 15:56:05.548"></status>
</kw>
<msg timestamp="20201030 15:56:05.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036444333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037011125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.209" endtime="20201030 15:56:05.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036444333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037011125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.556" endtime="20201030 15:56:05.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.574" endtime="20201030 15:56:05.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.202" endtime="20201030 15:56:05.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.197" endtime="20201030 15:56:05.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:05.589" level="INFO">${PHILIP_RES} = [{'diff': 0.0005667919999999965}, {'diff': 0.0005697770000000005}, {'diff': 0.0005697920000000065}, {'diff': 0.000569778}, {'diff': 0.000569791}, {'diff': 0.0005697640000000004}, {'diff': 0.000569778}...</msg>
<status status="PASS" starttime="20201030 15:56:05.582" endtime="20201030 15:56:05.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.604" level="INFO">${RESULT} = {'diff': [0.0005667919999999965, 0.0005697770000000005, 0.0005697920000000065, 0.000569778, 0.000569791, 0.0005697640000000004, 0.000569778, 0.0005697500000000008, 0.0005698620000000043, 0.00056987499...</msg>
<status status="PASS" starttime="20201030 15:56:05.591" endtime="20201030 15:56:05.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.614" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:05.612" endtime="20201030 15:56:05.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.620" level="INFO">VALUE: [0.0005667919999999965, 0.0005697770000000005, 0.0005697920000000065, 0.000569778, 0.000569791, 0.0005697640000000004, 0.000569778, 0.0005697500000000008, 0.0005698620000000043, 0.0005698749999999975, 0.0005699440000000028, 0.000569888999999997, 0.0005698750000000044, 0.000569888999999997, 0.0005707909999999941, 0.0005698189999999992, 0.0005699030000000035, 0.000569888999999997, 0.0005698470000000053, 0.0005699160000000036, 0.0005698880000000045, 0.0005697360000000012, 0.0005697640000000004, 0.0005697640000000004, 0.0005697360000000012, 0.0005706949999999961, 0.0005697080000000021, 0.0005697220000000086, 0.0005706119999999981, 0.0005697780000000069, 0.0005696939999999956, 0.0005696810000000024, 0.0005697640000000004, 0.0005706109999999986, 0.0005698050000000066, 0.0005669029999999936, 0.0005698049999999927, 0.0005697770000000074, 0.0005697080000000021, 0.0005698189999999992, 0.0005698189999999992, 0.0005697919999999995, 0.0005697770000000074, 0.0005708469999999993, 0.0005698880000000045, 0.0005698199999999987, 0.0005697640000000004, 0.0005698469999999983, 0.000569777999999993, 0.0005698889999999901]</msg>
<status status="PASS" starttime="20201030 15:56:05.616" endtime="20201030 15:56:05.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.606" endtime="20201030 15:56:05.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.632" endtime="20201030 15:56:05.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.628" endtime="20201030 15:56:05.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.625" endtime="20201030 15:56:05.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.082" endtime="20201030 15:56:05.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.080" endtime="20201030 15:56:05.657"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.678" endtime="20201030 15:56:05.759"></status>
</kw>
<msg timestamp="20201030 15:56:05.760" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.675" endtime="20201030 15:56:05.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.766" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.762" endtime="20201030 15:56:05.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.769" endtime="20201030 15:56:05.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.668" endtime="20201030 15:56:05.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.663" endtime="20201030 15:56:05.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.792" endtime="20201030 15:56:06.127"></status>
</kw>
<msg timestamp="20201030 15:56:06.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036141181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036728222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.788" endtime="20201030 15:56:06.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036141181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036728222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.136" endtime="20201030 15:56:06.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.154" endtime="20201030 15:56:06.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.781" endtime="20201030 15:56:06.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.776" endtime="20201030 15:56:06.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:06.171" level="INFO">${PHILIP_RES} = [{'diff': 0.0005870409999999965}, {'diff': 0.0005901939999999953}, {'diff': 0.000590152999999996}, {'diff': 0.0005901670000000026}, {'diff': 0.0005900839999999977}, {'diff': 0.0005902090000000013}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:06.163" endtime="20201030 15:56:06.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.181" level="INFO">${RESULT} = {'diff': [0.0005870409999999965, 0.0005901939999999953, 0.000590152999999996, 0.0005901670000000026, 0.0005900839999999977, 0.0005902090000000013, 0.0005902219999999944, 0.0005902220000000014, 0.00059...</msg>
<status status="PASS" starttime="20201030 15:56:06.173" endtime="20201030 15:56:06.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.192" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:06.190" endtime="20201030 15:56:06.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.197" level="INFO">VALUE: [0.0005870409999999965, 0.0005901939999999953, 0.000590152999999996, 0.0005901670000000026, 0.0005900839999999977, 0.0005902090000000013, 0.0005902219999999944, 0.0005902220000000014, 0.0005901670000000026, 0.0005901660000000031, 0.0005900839999999977, 0.0005901109999999973, 0.0005901389999999965, 0.000590153000000003, 0.0005902080000000018, 0.0005901939999999953, 0.0005911249999999979, 0.0005901109999999973, 0.0005900829999999913, 0.0005901669999999887, 0.0005901809999999952, 0.0005900840000000046, 0.0005900969999999978, 0.0005900689999999986, 0.000590041999999999, 0.0005871670000000134, 0.0005899860000000007, 0.0005901670000000026, 0.0005901670000000026, 0.0005900000000000072, 0.0005899999999999933, 0.0005900279999999924, 0.0005900560000000055, 0.0005901109999999904, 0.0005899999999999933, 0.0005900830000000051, 0.0005900130000000003, 0.0005900000000000072, 0.0005900969999999978, 0.0005901390000000034, 0.0005900829999999913, 0.0005900280000000063, 0.0005899999999999933, 0.0005909580000000025, 0.0005899580000000015, 0.0005899860000000007, 0.0005899999999999933, 0.000590055000000006, 0.0005899860000000007, 0.0005899440000000089]</msg>
<status status="PASS" starttime="20201030 15:56:06.194" endtime="20201030 15:56:06.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.183" endtime="20201030 15:56:06.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:06.210" endtime="20201030 15:56:06.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.205" endtime="20201030 15:56:06.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.203" endtime="20201030 15:56:06.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.659" endtime="20201030 15:56:06.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.658" endtime="20201030 15:56:06.235"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.257" endtime="20201030 15:56:06.340"></status>
</kw>
<msg timestamp="20201030 15:56:06.341" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.253" endtime="20201030 15:56:06.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.348" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.344" endtime="20201030 15:56:06.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.351" endtime="20201030 15:56:06.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.246" endtime="20201030 15:56:06.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.241" endtime="20201030 15:56:06.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.374" endtime="20201030 15:56:06.713"></status>
</kw>
<msg timestamp="20201030 15:56:06.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037081833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037691472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.371" endtime="20201030 15:56:06.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037081833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037691472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.722" endtime="20201030 15:56:06.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.739" endtime="20201030 15:56:06.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.364" endtime="20201030 15:56:06.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.359" endtime="20201030 15:56:06.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:06.755" level="INFO">${PHILIP_RES} = [{'diff': 0.0006096389999999952}, {'diff': 0.0006115280000000001}, {'diff': 0.0006115140000000005}, {'diff': 0.0006114449999999952}, {'diff': 0.0006114030000000034}, {'diff': 0.0006115140000000005}, {...</msg>
<status status="PASS" starttime="20201030 15:56:06.748" endtime="20201030 15:56:06.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.764" level="INFO">${RESULT} = {'diff': [0.0006096389999999952, 0.0006115280000000001, 0.0006115140000000005, 0.0006114449999999952, 0.0006114030000000034, 0.0006115140000000005, 0.000611416999999996, 0.0006115000000000009, 0.00061...</msg>
<status status="PASS" starttime="20201030 15:56:06.757" endtime="20201030 15:56:06.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.774" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:06.772" endtime="20201030 15:56:06.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.780" level="INFO">VALUE: [0.0006096389999999952, 0.0006115280000000001, 0.0006115140000000005, 0.0006114449999999952, 0.0006114030000000034, 0.0006115140000000005, 0.000611416999999996, 0.0006115000000000009, 0.0006114029999999965, 0.000611416999999996, 0.0006113749999999973, 0.0006114030000000034, 0.0006113889999999969, 0.0006114720000000018, 0.0006113749999999973, 0.0006114160000000035, 0.0006114029999999965, 0.0006114579999999953, 0.0006114730000000013, 0.0006114589999999948, 0.0006114720000000018, 0.0006116389999999972, 0.0006115559999999992, 0.0006115139999999936, 0.0006115970000000054, 0.0006115839999999984, 0.0006114860000000083, 0.0006115549999999997, 0.0006114450000000021, 0.0006114589999999948, 0.0006115000000000009, 0.0006114730000000013, 0.0006114730000000013, 0.0006115419999999927, 0.000611610999999998, 0.0006115000000000009, 0.0006113880000000044, 0.0006113890000000038, 0.0006114309999999956, 0.0006114159999999896, 0.0006114579999999953, 0.0006114309999999956, 0.0006114870000000078, 0.0006114579999999953, 0.0006114859999999944, 0.0006114720000000018, 0.0006114719999999879, 0.0006125279999999872, 0.0006115280000000001, 0.0006114450000000021]</msg>
<status status="PASS" starttime="20201030 15:56:06.777" endtime="20201030 15:56:06.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.766" endtime="20201030 15:56:06.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:06.792" endtime="20201030 15:56:06.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.788" endtime="20201030 15:56:06.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.785" endtime="20201030 15:56:06.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.237" endtime="20201030 15:56:06.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.236" endtime="20201030 15:56:06.817"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.839" endtime="20201030 15:56:06.926"></status>
</kw>
<msg timestamp="20201030 15:56:06.927" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.835" endtime="20201030 15:56:06.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.933" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.929" endtime="20201030 15:56:06.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.935" endtime="20201030 15:56:06.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.828" endtime="20201030 15:56:06.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.823" endtime="20201030 15:56:06.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.959" endtime="20201030 15:56:07.296"></status>
</kw>
<msg timestamp="20201030 15:56:07.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038224139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038855014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.955" endtime="20201030 15:56:07.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038224139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038855014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.305" endtime="20201030 15:56:07.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.322" endtime="20201030 15:56:07.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.948" endtime="20201030 15:56:07.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.943" endtime="20201030 15:56:07.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:07.338" level="INFO">${PHILIP_RES} = [{'diff': 0.000630875000000003}, {'diff': 0.0006327780000000005}, {'diff': 0.0006327360000000018}, {'diff': 0.0006327640000000009}, {'diff': 0.000632681000000003}, {'diff': 0.000632583000000006}, {'di...</msg>
<status status="PASS" starttime="20201030 15:56:07.331" endtime="20201030 15:56:07.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.347" level="INFO">${RESULT} = {'diff': [0.000630875000000003, 0.0006327780000000005, 0.0006327360000000018, 0.0006327640000000009, 0.000632681000000003, 0.000632583000000006, 0.0006326250000000047, 0.0006326250000000047, 0.0006325...</msg>
<status status="PASS" starttime="20201030 15:56:07.340" endtime="20201030 15:56:07.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.357" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:07.355" endtime="20201030 15:56:07.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.363" level="INFO">VALUE: [0.000630875000000003, 0.0006327780000000005, 0.0006327360000000018, 0.0006327640000000009, 0.000632681000000003, 0.000632583000000006, 0.0006326250000000047, 0.0006326250000000047, 0.0006325419999999998, 0.0006327780000000005, 0.0006325839999999985, 0.0006325969999999986, 0.0006326389999999973, 0.000632665999999997, 0.0006326940000000031, 0.0006337500000000024, 0.000632680999999996, 0.000632680999999996, 0.0006325419999999998, 0.0006327080000000096, 0.0006336390000000053, 0.0006326659999999901, 0.0006327230000000017, 0.0006326659999999901, 0.0006326529999999969, 0.0006327220000000022, 0.0006326529999999969, 0.0006326670000000034, 0.0006326670000000034, 0.0006326519999999974, 0.0006326519999999974, 0.0006326109999999913, 0.0006334999999999952, 0.0006325140000000007, 0.0006325840000000055, 0.000633554999999994, 0.0006325560000000063, 0.0006325969999999986, 0.0006325979999999981, 0.0006325839999999916, 0.0006326110000000051, 0.0006325969999999986, 0.0006325419999999998, 0.0006325419999999998, 0.0006325000000000081, 0.0006324720000000089, 0.0006335269999999948, 0.0006325419999999998, 0.0006334999999999952, 0.0006325689999999995]</msg>
<status status="PASS" starttime="20201030 15:56:07.360" endtime="20201030 15:56:07.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.349" endtime="20201030 15:56:07.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.376" endtime="20201030 15:56:07.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.371" endtime="20201030 15:56:07.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.368" endtime="20201030 15:56:07.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.819" endtime="20201030 15:56:07.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.818" endtime="20201030 15:56:07.402"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.423" endtime="20201030 15:56:07.511"></status>
</kw>
<msg timestamp="20201030 15:56:07.512" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.420" endtime="20201030 15:56:07.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.518" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.514" endtime="20201030 15:56:07.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.520" endtime="20201030 15:56:07.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.413" endtime="20201030 15:56:07.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.407" endtime="20201030 15:56:07.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.544" endtime="20201030 15:56:07.890"></status>
</kw>
<msg timestamp="20201030 15:56:07.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036270556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03692275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:07.540" endtime="20201030 15:56:07.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036270556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03692275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:07.899" endtime="20201030 15:56:07.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.916" endtime="20201030 15:56:07.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.533" endtime="20201030 15:56:07.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.528" endtime="20201030 15:56:07.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:07.932" level="INFO">${PHILIP_RES} = [{'diff': 0.0006521939999999948}, {'diff': 0.0006540560000000001}, {'diff': 0.0006540829999999997}, {'diff': 0.0006539860000000022}, {'diff': 0.0006540979999999988}, {'diff': 0.000653945000000003}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:07.924" endtime="20201030 15:56:07.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.942" level="INFO">${RESULT} = {'diff': [0.0006521939999999948, 0.0006540560000000001, 0.0006540829999999997, 0.0006539860000000022, 0.0006540979999999988, 0.000653945000000003, 0.0006539870000000017, 0.0006539439999999966, 0.00065...</msg>
<status status="PASS" starttime="20201030 15:56:07.934" endtime="20201030 15:56:07.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.953" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:07.951" endtime="20201030 15:56:07.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.958" level="INFO">VALUE: [0.0006521939999999948, 0.0006540560000000001, 0.0006540829999999997, 0.0006539860000000022, 0.0006540979999999988, 0.000653945000000003, 0.0006539870000000017, 0.0006539439999999966, 0.0006540699999999997, 0.0006539869999999948, 0.0006540420000000005, 0.0006539169999999969, 0.0006539580000000031, 0.0006551670000000051, 0.0006539159999999974, 0.0006541109999999989, 0.0006539729999999952, 0.0006539869999999948, 0.0006540140000000083, 0.0006540280000000009, 0.0006540839999999992, 0.0006540130000000088, 0.0006540140000000083, 0.0006539859999999953, 0.0006540419999999936, 0.0006540140000000083, 0.0006549860000000102, 0.0006540700000000066, 0.0006540420000000075, 0.0006540419999999936, 0.0006540560000000001, 0.0006538469999999991, 0.0006539170000000039, 0.0006539859999999953, 0.0006539579999999962, 0.0006539440000000035, 0.0006539029999999973, 0.0006539309999999965, 0.0006540000000000018, 0.0006539870000000086, 0.0006539029999999973, 0.0006539730000000021, 0.0006540560000000001, 0.0006539869999999948, 0.0006539720000000027, 0.000654041000000008, 0.0006540829999999997, 0.0006539589999999956, 0.0006540140000000083, 0.0006540139999999944]</msg>
<status status="PASS" starttime="20201030 15:56:07.955" endtime="20201030 15:56:07.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.944" endtime="20201030 15:56:07.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.971" endtime="20201030 15:56:07.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.966" endtime="20201030 15:56:07.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.964" endtime="20201030 15:56:07.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.404" endtime="20201030 15:56:07.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.403" endtime="20201030 15:56:07.996"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.018" endtime="20201030 15:56:08.109"></status>
</kw>
<msg timestamp="20201030 15:56:08.110" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.015" endtime="20201030 15:56:08.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.116" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.112" endtime="20201030 15:56:08.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.119" endtime="20201030 15:56:08.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.008" endtime="20201030 15:56:08.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.002" endtime="20201030 15:56:08.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.142" endtime="20201030 15:56:08.482"></status>
</kw>
<msg timestamp="20201030 15:56:08.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037140111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037812389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.139" endtime="20201030 15:56:08.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037140111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037812389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.491" endtime="20201030 15:56:08.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.509" endtime="20201030 15:56:08.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.131" endtime="20201030 15:56:08.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.127" endtime="20201030 15:56:08.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:08.524" level="INFO">${PHILIP_RES} = [{'diff': 0.0006722779999999984}, {'diff': 0.000675485999999996}, {'diff': 0.0006753330000000002}, {'diff': 0.0006754720000000033}, {'diff': 0.0006754590000000033}, {'diff': 0.0006755000000000025}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:08.517" endtime="20201030 15:56:08.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:08.535" level="INFO">${RESULT} = {'diff': [0.0006722779999999984, 0.000675485999999996, 0.0006753330000000002, 0.0006754720000000033, 0.0006754590000000033, 0.0006755000000000025, 0.0006754439999999973, 0.0006764299999999987, 0.00067...</msg>
<status status="PASS" starttime="20201030 15:56:08.527" endtime="20201030 15:56:08.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.546" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:08.544" endtime="20201030 15:56:08.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.551" level="INFO">VALUE: [0.0006722779999999984, 0.000675485999999996, 0.0006753330000000002, 0.0006754720000000033, 0.0006754590000000033, 0.0006755000000000025, 0.0006754439999999973, 0.0006764299999999987, 0.0006755410000000017, 0.0006754999999999955, 0.0006755560000000008, 0.0006754589999999963, 0.0006765560000000018, 0.0006755280000000016, 0.0006755410000000017, 0.0006765140000000031, 0.0006765690000000019, 0.0006755140000000021, 0.0006755550000000082, 0.0006727639999999924, 0.000675597, 0.0006754860000000029, 0.0006754860000000029, 0.0006754579999999899, 0.0006754729999999959, 0.0006755140000000021, 0.0006764719999999974, 0.0006754029999999911, 0.0006753889999999985, 0.0006754300000000046, 0.0006754170000000115, 0.0006754439999999973, 0.0006754169999999976, 0.0006753750000000058, 0.0006755690000000009, 0.0006754440000000111, 0.0006755279999999947, 0.0006755140000000021, 0.0006755140000000021, 0.0006754999999999955, 0.0006756249999999991, 0.0006755420000000012, 0.0006756249999999991, 0.0006755280000000086, 0.0006756519999999988, 0.0006756249999999991, 0.0006755279999999947, 0.0006754169999999976, 0.0006755550000000082, 0.0006755830000000074]</msg>
<status status="PASS" starttime="20201030 15:56:08.548" endtime="20201030 15:56:08.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.537" endtime="20201030 15:56:08.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:08.564" endtime="20201030 15:56:08.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.559" endtime="20201030 15:56:08.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.557" endtime="20201030 15:56:08.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.998" endtime="20201030 15:56:08.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.997" endtime="20201030 15:56:08.589"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.610" endtime="20201030 15:56:08.703"></status>
</kw>
<msg timestamp="20201030 15:56:08.704" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.607" endtime="20201030 15:56:08.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.711" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.706" endtime="20201030 15:56:08.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.713" endtime="20201030 15:56:08.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.600" endtime="20201030 15:56:08.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.595" endtime="20201030 15:56:08.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.736" endtime="20201030 15:56:09.078"></status>
</kw>
<msg timestamp="20201030 15:56:09.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036692431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037387042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.733" endtime="20201030 15:56:09.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036692431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037387042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.087" endtime="20201030 15:56:09.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.116" endtime="20201030 15:56:09.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.726" endtime="20201030 15:56:09.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.721" endtime="20201030 15:56:09.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:09.132" level="INFO">${PHILIP_RES} = [{'diff': 0.0006946110000000047}, {'diff': 0.0006976249999999934}, {'diff': 0.0006977779999999961}, {'diff': 0.0006976939999999987}, {'diff': 0.0006977080000000052}, {'diff': 0.0006976389999999999}, {...</msg>
<status status="PASS" starttime="20201030 15:56:09.125" endtime="20201030 15:56:09.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.141" level="INFO">${RESULT} = {'diff': [0.0006946110000000047, 0.0006976249999999934, 0.0006977779999999961, 0.0006976939999999987, 0.0006977080000000052, 0.0006976389999999999, 0.0006975830000000016, 0.0006976110000000008, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:56:09.134" endtime="20201030 15:56:09.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.152" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:09.149" endtime="20201030 15:56:09.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.157" level="INFO">VALUE: [0.0006946110000000047, 0.0006976249999999934, 0.0006977779999999961, 0.0006976939999999987, 0.0006977080000000052, 0.0006976389999999999, 0.0006975830000000016, 0.0006976110000000008, 0.000697556000000002, 0.0006976389999999999, 0.0006976250000000003, 0.0006977219999999978, 0.0006977779999999961, 0.0006977079999999983, 0.0006975549999999955, 0.0006985979999999947, 0.000698667, 0.0006975830000000016, 0.0006986949999999992, 0.0006976389999999999, 0.0006976250000000073, 0.000697666999999999, 0.0006977080000000052, 0.0006975840000000011, 0.0006975280000000028, 0.0006976949999999982, 0.0006976939999999987, 0.000698749999999998, 0.0006978470000000014, 0.0006977919999999888, 0.0006976810000000055, 0.0006978049999999958, 0.000697749999999997, 0.0006977779999999961, 0.0006977640000000035, 0.0006975969999999942, 0.0006985699999999956, 0.0006984999999999908, 0.0006975419999999954, 0.0006975830000000016, 0.0006986530000000074, 0.000697666999999999, 0.000697569000000009, 0.0006977079999999913, 0.0006976389999999999, 0.0006976529999999925, 0.0006975970000000081, 0.0006986249999999944, 0.0006977089999999908, 0.0006976250000000073]</msg>
<status status="PASS" starttime="20201030 15:56:09.154" endtime="20201030 15:56:09.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.143" endtime="20201030 15:56:09.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.169" endtime="20201030 15:56:09.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.165" endtime="20201030 15:56:09.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.163" endtime="20201030 15:56:09.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.591" endtime="20201030 15:56:09.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.590" endtime="20201030 15:56:09.194"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.216" endtime="20201030 15:56:09.313"></status>
</kw>
<msg timestamp="20201030 15:56:09.314" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.213" endtime="20201030 15:56:09.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.320" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.316" endtime="20201030 15:56:09.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.322" endtime="20201030 15:56:09.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.206" endtime="20201030 15:56:09.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.200" endtime="20201030 15:56:09.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.345" endtime="20201030 15:56:09.685"></status>
</kw>
<msg timestamp="20201030 15:56:09.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038151847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038869903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.342" endtime="20201030 15:56:09.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038151847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038869903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.694" endtime="20201030 15:56:09.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.714" endtime="20201030 15:56:09.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.335" endtime="20201030 15:56:09.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.330" endtime="20201030 15:56:09.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:09.731" level="INFO">${PHILIP_RES} = [{'diff': 0.0007180559999999947}, {'diff': 0.0007198890000000013}, {'diff': 0.0007199860000000058}, {'diff': 0.0007199300000000006}, {'diff': 0.0007200420000000041}, {'diff': 0.0007199589999999992}, {...</msg>
<status status="PASS" starttime="20201030 15:56:09.723" endtime="20201030 15:56:09.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.740" level="INFO">${RESULT} = {'diff': [0.0007180559999999947, 0.0007198890000000013, 0.0007199860000000058, 0.0007199300000000006, 0.0007200420000000041, 0.0007199589999999992, 0.0007199589999999992, 0.0007200419999999971, 0.0007...</msg>
<status status="PASS" starttime="20201030 15:56:09.733" endtime="20201030 15:56:09.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.750" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:09.748" endtime="20201030 15:56:09.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.755" level="INFO">VALUE: [0.0007180559999999947, 0.0007198890000000013, 0.0007199860000000058, 0.0007199300000000006, 0.0007200420000000041, 0.0007199589999999992, 0.0007199589999999992, 0.0007200419999999971, 0.0007199579999999997, 0.0007199579999999997, 0.0007199020000000014, 0.0007199030000000009, 0.0007197779999999973, 0.0007198480000000021, 0.0007199590000000061, 0.0007199870000000053, 0.0007209589999999932, 0.0007199170000000005, 0.000719848000000009, 0.0007198890000000013, 0.00071980499999999, 0.0007198749999999948, 0.0007197780000000042, 0.0007198060000000034, 0.0007197909999999974, 0.0007197779999999904, 0.0007208059999999905, 0.0007198189999999965, 0.0007197779999999904, 0.0007197360000000125, 0.0007197770000000048, 0.0007197909999999974, 0.0007197639999999977, 0.0007197919999999969, 0.000719722000000006, 0.000719819999999996, 0.0007198060000000034, 0.0007197639999999977, 0.0007197640000000116, 0.0007198470000000096, 0.0007198470000000096, 0.0007198890000000013, 0.0007199870000000053, 0.0007198890000000013, 0.0007199589999999922, 0.0007198470000000096, 0.0007197639999999977, 0.0007209720000000003, 0.0007199170000000005, 0.0007199170000000005]</msg>
<status status="PASS" starttime="20201030 15:56:09.752" endtime="20201030 15:56:09.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.741" endtime="20201030 15:56:09.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.769" endtime="20201030 15:56:09.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.763" endtime="20201030 15:56:09.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.761" endtime="20201030 15:56:09.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.196" endtime="20201030 15:56:09.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.195" endtime="20201030 15:56:09.794"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.816" endtime="20201030 15:56:09.913"></status>
</kw>
<msg timestamp="20201030 15:56:09.914" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.813" endtime="20201030 15:56:09.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.920" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.916" endtime="20201030 15:56:09.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.923" endtime="20201030 15:56:09.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.805" endtime="20201030 15:56:09.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.800" endtime="20201030 15:56:09.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.946" endtime="20201030 15:56:10.283"></status>
</kw>
<msg timestamp="20201030 15:56:10.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036605069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037343861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.942" endtime="20201030 15:56:10.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036605069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037343861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.292" endtime="20201030 15:56:10.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.309" endtime="20201030 15:56:10.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.935" endtime="20201030 15:56:10.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.931" endtime="20201030 15:56:10.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:10.325" level="INFO">${PHILIP_RES} = [{'diff': 0.000738792000000002}, {'diff': 0.0007422499999999999}, {'diff': 0.0007422080000000011}, {'diff': 0.0007423199999999977}, {'diff': 0.0007423610000000039}, {'diff': 0.0007423609999999969}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:10.318" endtime="20201030 15:56:10.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.335" level="INFO">${RESULT} = {'diff': [0.000738792000000002, 0.0007422499999999999, 0.0007422080000000011, 0.0007423199999999977, 0.0007423610000000039, 0.0007423609999999969, 0.0007423469999999974, 0.0007422219999999938, 0.00074...</msg>
<status status="PASS" starttime="20201030 15:56:10.327" endtime="20201030 15:56:10.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.345" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:10.343" endtime="20201030 15:56:10.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.351" level="INFO">VALUE: [0.000738792000000002, 0.0007422499999999999, 0.0007422080000000011, 0.0007423199999999977, 0.0007423610000000039, 0.0007423609999999969, 0.0007423469999999974, 0.0007422219999999938, 0.0007423469999999974, 0.0007422080000000011, 0.0007422220000000007, 0.0007422499999999999, 0.000742263, 0.000742195000000001, 0.0007421530000000023, 0.0007422499999999999, 0.0007421390000000028, 0.0007421660000000024, 0.0007422220000000007, 0.0007422639999999925, 0.0007422769999999995, 0.0007422769999999995, 0.0007423470000000043, 0.000742277999999999, 0.0007422499999999999, 0.0007422639999999925, 0.0007422080000000081, 0.0007420699999999975, 0.0007422220000000007, 0.0007421390000000028, 0.0007421390000000028, 0.0007420839999999901, 0.0007422090000000076, 0.0007423470000000043, 0.0007422640000000064, 0.0007421249999999963, 0.0007421250000000101, 0.0007420829999999906, 0.0007421660000000024, 0.0007420550000000053, 0.0007421109999999898, 0.0007421250000000101, 0.0007421529999999954, 0.0007422089999999937, 0.000742277999999999, 0.0007422369999999928, 0.0007422640000000064, 0.000742277999999999, 0.0007422919999999916, 0.0007433329999999849]</msg>
<status status="PASS" starttime="20201030 15:56:10.348" endtime="20201030 15:56:10.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.337" endtime="20201030 15:56:10.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.363" endtime="20201030 15:56:10.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.359" endtime="20201030 15:56:10.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.356" endtime="20201030 15:56:10.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.796" endtime="20201030 15:56:10.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.795" endtime="20201030 15:56:10.388"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.410" endtime="20201030 15:56:10.510"></status>
</kw>
<msg timestamp="20201030 15:56:10.511" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.406" endtime="20201030 15:56:10.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.517" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.513" endtime="20201030 15:56:10.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.519" endtime="20201030 15:56:10.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.399" endtime="20201030 15:56:10.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.394" endtime="20201030 15:56:10.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.542" endtime="20201030 15:56:10.882"></status>
</kw>
<msg timestamp="20201030 15:56:10.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036639958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037401667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.539" endtime="20201030 15:56:10.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036639958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037401667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.891" endtime="20201030 15:56:10.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.908" endtime="20201030 15:56:10.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.532" endtime="20201030 15:56:10.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.527" endtime="20201030 15:56:10.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:10.924" level="INFO">${PHILIP_RES} = [{'diff': 0.0007617089999999993}, {'diff': 0.0007647079999999959}, {'diff': 0.0007655830000000002}, {'diff': 0.0007646939999999963}, {'diff': 0.0007647219999999955}, {'diff': 0.0007647369999999945}, {...</msg>
<status status="PASS" starttime="20201030 15:56:10.916" endtime="20201030 15:56:10.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.935" level="INFO">${RESULT} = {'diff': [0.0007617089999999993, 0.0007647079999999959, 0.0007655830000000002, 0.0007646939999999963, 0.0007647219999999955, 0.0007647369999999945, 0.0007646800000000037, 0.0007646109999999984, 0.0007...</msg>
<status status="PASS" starttime="20201030 15:56:10.926" endtime="20201030 15:56:10.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.945" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:10.943" endtime="20201030 15:56:10.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.950" level="INFO">VALUE: [0.0007617089999999993, 0.0007647079999999959, 0.0007655830000000002, 0.0007646939999999963, 0.0007647219999999955, 0.0007647369999999945, 0.0007646800000000037, 0.0007646109999999984, 0.0007646940000000033, 0.0007646529999999971, 0.0007646810000000032, 0.0007647640000000011, 0.0007656939999999973, 0.0007646669999999967, 0.0007647219999999955, 0.0007647219999999955, 0.0007657639999999882, 0.0007647230000000088, 0.0007647080000000028, 0.0007647640000000011, 0.0007647230000000088, 0.0007645559999999996, 0.000764653000000004, 0.0007645829999999992, 0.0007644860000000087, 0.0007647500000000085, 0.000764707999999989, 0.0007645139999999939, 0.0007645979999999913, 0.0007644589999999951, 0.0007656109999999994, 0.0007647920000000002, 0.0007646659999999972, 0.0007647219999999955, 0.0007648330000000064, 0.0007647230000000088, 0.0007647359999999881, 0.0007646809999999893, 0.0007647640000000011, 0.0007646659999999972, 0.000764653000000004, 0.0007645000000000013, 0.0007646110000000123, 0.0007646120000000117, 0.0007645829999999992, 0.0007645700000000061, 0.0007645689999999927, 0.0007645970000000057, 0.0007645839999999987, 0.0007645420000000069]</msg>
<status status="PASS" starttime="20201030 15:56:10.947" endtime="20201030 15:56:10.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.936" endtime="20201030 15:56:10.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.963" endtime="20201030 15:56:10.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.958" endtime="20201030 15:56:10.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.956" endtime="20201030 15:56:10.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.390" endtime="20201030 15:56:10.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.389" endtime="20201030 15:56:10.988"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.009" endtime="20201030 15:56:11.112"></status>
</kw>
<msg timestamp="20201030 15:56:11.113" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.006" endtime="20201030 15:56:11.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.119" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.115" endtime="20201030 15:56:11.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.122" endtime="20201030 15:56:11.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.999" endtime="20201030 15:56:11.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.994" endtime="20201030 15:56:11.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.145" endtime="20201030 15:56:11.499"></status>
</kw>
<msg timestamp="20201030 15:56:11.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036577125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037362958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.141" endtime="20201030 15:56:11.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036577125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037362958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.508" endtime="20201030 15:56:11.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.525" endtime="20201030 15:56:11.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.134" endtime="20201030 15:56:11.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.130" endtime="20201030 15:56:11.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:11.541" level="INFO">${PHILIP_RES} = [{'diff': 0.0007858329999999997}, {'diff': 0.0007880410000000032}, {'diff': 0.0007880279999999962}, {'diff': 0.0007878610000000008}, {'diff': 0.0007880139999999966}, {'diff': 0.0007879439999999988}, {...</msg>
<status status="PASS" starttime="20201030 15:56:11.533" endtime="20201030 15:56:11.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.550" level="INFO">${RESULT} = {'diff': [0.0007858329999999997, 0.0007880410000000032, 0.0007880279999999962, 0.0007878610000000008, 0.0007880139999999966, 0.0007879439999999988, 0.0007879309999999987, 0.0007879309999999987, 0.0007...</msg>
<status status="PASS" starttime="20201030 15:56:11.543" endtime="20201030 15:56:11.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.560" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:11.558" endtime="20201030 15:56:11.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.565" level="INFO">VALUE: [0.0007858329999999997, 0.0007880410000000032, 0.0007880279999999962, 0.0007878610000000008, 0.0007880139999999966, 0.0007879439999999988, 0.0007879309999999987, 0.0007879309999999987, 0.0007878480000000007, 0.0007878330000000017, 0.0007878470000000012, 0.0007889030000000005, 0.0007880410000000032, 0.0007880689999999954, 0.0007877910000000099, 0.0007888750000000083, 0.000788889000000001, 0.000787819000000009, 0.0007878189999999952, 0.0007878880000000005, 0.0007878480000000077, 0.000787790999999996, 0.0007880140000000035, 0.0007880409999999893, 0.0007880559999999953, 0.0007879579999999914, 0.0007880279999999962, 0.0007878750000000073, 0.0007878050000000025, 0.0007878479999999938, 0.0007879169999999991, 0.0007879310000000056, 0.000787999999999997, 0.0007880279999999962, 0.0007880410000000032, 0.0007880420000000027, 0.000788111000000008, 0.0007879169999999991, 0.0007879719999999979, 0.0007879719999999979, 0.0007879720000000118, 0.0007879029999999926, 0.0007879029999999926, 0.0007878749999999934, 0.0007889579999999924, 0.0007880269999999967, 0.0007880279999999962, 0.0007880140000000035, 0.0007880140000000035, 0.0007878610000000008]</msg>
<status status="PASS" starttime="20201030 15:56:11.562" endtime="20201030 15:56:11.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.551" endtime="20201030 15:56:11.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.582" endtime="20201030 15:56:11.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.577" endtime="20201030 15:56:11.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.575" endtime="20201030 15:56:11.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.990" endtime="20201030 15:56:11.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.989" endtime="20201030 15:56:11.607"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.628" endtime="20201030 15:56:11.735"></status>
</kw>
<msg timestamp="20201030 15:56:11.736" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.625" endtime="20201030 15:56:11.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.742" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.739" endtime="20201030 15:56:11.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.745" endtime="20201030 15:56:11.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.618" endtime="20201030 15:56:11.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.613" endtime="20201030 15:56:11.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.768" endtime="20201030 15:56:12.116"></status>
</kw>
<msg timestamp="20201030 15:56:12.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038208458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039016736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.764" endtime="20201030 15:56:12.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038208458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039016736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.125" endtime="20201030 15:56:12.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.142" endtime="20201030 15:56:12.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.757" endtime="20201030 15:56:12.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.753" endtime="20201030 15:56:12.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:12.158" level="INFO">${PHILIP_RES} = [{'diff': 0.0008082780000000025}, {'diff': 0.0008113200000000043}, {'diff': 0.000811263999999999}, {'diff': 0.0008112779999999986}, {'diff': 0.0008113610000000035}, {'diff': 0.0008113059999999978}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:12.150" endtime="20201030 15:56:12.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.167" level="INFO">${RESULT} = {'diff': [0.0008082780000000025, 0.0008113200000000043, 0.000811263999999999, 0.0008112779999999986, 0.0008113610000000035, 0.0008113059999999978, 0.0008111250000000028, 0.0008111250000000028, 0.00081...</msg>
<status status="PASS" starttime="20201030 15:56:12.160" endtime="20201030 15:56:12.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.177" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:12.175" endtime="20201030 15:56:12.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.182" level="INFO">VALUE: [0.0008082780000000025, 0.0008113200000000043, 0.000811263999999999, 0.0008112779999999986, 0.0008113610000000035, 0.0008113059999999978, 0.0008111250000000028, 0.0008111250000000028, 0.0008112779999999986, 0.0008113189999999978, 0.0008111390000000024, 0.0008111389999999954, 0.0008111390000000024, 0.0008111250000000098, 0.0008111249999999959, 0.0008110839999999897, 0.0008112090000000072, 0.0008112780000000125, 0.0008112499999999995, 0.0008112220000000003, 0.0008113059999999978, 0.0008111530000000089, 0.000811152999999995, 0.0008111389999999885, 0.0008112639999999921, 0.000811152999999995, 0.0008110689999999976, 0.0008111390000000024, 0.0008111809999999942, 0.0008111809999999942, 0.0008111530000000089, 0.0008112499999999995, 0.0008111390000000024, 0.0008112220000000003, 0.0008112369999999924, 0.0008112780000000125, 0.0008112220000000003, 0.0008123199999999914, 0.0008112079999999938, 0.0008111390000000024, 0.0008112229999999998, 0.000811235999999993, 0.0008122360000000078, 0.000811152999999995, 0.0008111940000000012, 0.0008110699999999971, 0.0008110970000000106, 0.000811235999999993, 0.0008112779999999986, 0.000811264000000006]</msg>
<status status="PASS" starttime="20201030 15:56:12.179" endtime="20201030 15:56:12.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.168" endtime="20201030 15:56:12.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.196" endtime="20201030 15:56:12.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.191" endtime="20201030 15:56:12.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.188" endtime="20201030 15:56:12.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.609" endtime="20201030 15:56:12.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.608" endtime="20201030 15:56:12.226"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.251" endtime="20201030 15:56:12.359"></status>
</kw>
<msg timestamp="20201030 15:56:12.360" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.248" endtime="20201030 15:56:12.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.367" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.363" endtime="20201030 15:56:12.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.369" endtime="20201030 15:56:12.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.240" endtime="20201030 15:56:12.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.233" endtime="20201030 15:56:12.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.392" endtime="20201030 15:56:12.736"></status>
</kw>
<msg timestamp="20201030 15:56:12.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04546975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046301736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:12.389" endtime="20201030 15:56:12.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04546975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046301736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:12.744" endtime="20201030 15:56:12.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.762" endtime="20201030 15:56:12.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.382" endtime="20201030 15:56:12.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.377" endtime="20201030 15:56:12.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:12.777" level="INFO">${PHILIP_RES} = [{'diff': 0.0008319859999999998}, {'diff': 0.0008344579999999963}, {'diff': 0.0008345970000000064}, {'diff': 0.0008345270000000016}, {'diff': 0.0008345140000000015}, {'diff': 0.0008345000000000019}, {...</msg>
<status status="PASS" starttime="20201030 15:56:12.770" endtime="20201030 15:56:12.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.788" level="INFO">${RESULT} = {'diff': [0.0008319859999999998, 0.0008344579999999963, 0.0008345970000000064, 0.0008345270000000016, 0.0008345140000000015, 0.0008345000000000019, 0.000834610999999999, 0.0008344860000000023, 0.00083...</msg>
<status status="PASS" starttime="20201030 15:56:12.780" endtime="20201030 15:56:12.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.798" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:12.796" endtime="20201030 15:56:12.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.803" level="INFO">VALUE: [0.0008319859999999998, 0.0008344579999999963, 0.0008345970000000064, 0.0008345270000000016, 0.0008345140000000015, 0.0008345000000000019, 0.000834610999999999, 0.0008344860000000023, 0.0008345550000000007, 0.0008345139999999945, 0.0008355409999999952, 0.0008346519999999913, 0.0008345689999999933, 0.0008355689999999943, 0.000834528000000001, 0.0008344869999999949, 0.0008344309999999966, 0.0008344309999999966, 0.0008345409999999942, 0.0008344860000000093, 0.0008354029999999985, 0.000834528000000001, 0.0008344580000000101, 0.0008343199999999995, 0.0008343890000000048, 0.0008344860000000093, 0.0008353330000000075, 0.0008343610000000057, 0.0008343610000000057, 0.0008343199999999995, 0.0008343620000000052, 0.0008342360000000021, 0.0008343609999999918, 0.0008353470000000002, 0.0008341109999999985, 0.0008344450000000031, 0.0008344299999999971, 0.0008344029999999975, 0.0008344299999999971, 0.0008345140000000084, 0.0008354720000000038, 0.0008345419999999937, 0.0008344859999999954, 0.000834445000000017, 0.0008344580000000101, 0.0008343610000000057, 0.0008343479999999848, 0.0008343889999999909, 0.0008344020000000119, 0.000834445000000017]</msg>
<status status="PASS" starttime="20201030 15:56:12.800" endtime="20201030 15:56:12.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.790" endtime="20201030 15:56:12.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.816" endtime="20201030 15:56:12.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.811" endtime="20201030 15:56:12.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.809" endtime="20201030 15:56:12.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.229" endtime="20201030 15:56:12.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.227" endtime="20201030 15:56:12.841"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.862" endtime="20201030 15:56:12.972"></status>
</kw>
<msg timestamp="20201030 15:56:12.973" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.859" endtime="20201030 15:56:12.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.979" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.975" endtime="20201030 15:56:12.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.982" endtime="20201030 15:56:12.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.852" endtime="20201030 15:56:12.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.847" endtime="20201030 15:56:12.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.005" endtime="20201030 15:56:13.354"></status>
</kw>
<msg timestamp="20201030 15:56:13.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036526486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037380944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.002" endtime="20201030 15:56:13.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036526486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037380944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.362" endtime="20201030 15:56:13.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.380" endtime="20201030 15:56:13.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.994" endtime="20201030 15:56:13.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.990" endtime="20201030 15:56:13.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:13.396" level="INFO">${PHILIP_RES} = [{'diff': 0.0008544580000000024}, {'diff': 0.0008578340000000018}, {'diff': 0.0008577499999999974}, {'diff': 0.0008588059999999967}, {'diff': 0.0008579020000000007}, {'diff': 0.0008579589999999984}, {...</msg>
<status status="PASS" starttime="20201030 15:56:13.388" endtime="20201030 15:56:13.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:13.406" level="INFO">${RESULT} = {'diff': [0.0008544580000000024, 0.0008578340000000018, 0.0008577499999999974, 0.0008588059999999967, 0.0008579020000000007, 0.0008579589999999984, 0.0008579999999999977, 0.0008580139999999972, 0.0008...</msg>
<status status="PASS" starttime="20201030 15:56:13.398" endtime="20201030 15:56:13.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.417" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:13.414" endtime="20201030 15:56:13.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.422" level="INFO">VALUE: [0.0008544580000000024, 0.0008578340000000018, 0.0008577499999999974, 0.0008588059999999967, 0.0008579020000000007, 0.0008579589999999984, 0.0008579999999999977, 0.0008580139999999972, 0.0008578890000000006, 0.0008578890000000006, 0.0008578890000000006, 0.0008579169999999997, 0.0008578749999999941, 0.0008578750000000079, 0.0008577780000000035, 0.0008577780000000035, 0.0008578890000000006, 0.0008577780000000035, 0.0008577360000000117, 0.0008577909999999966, 0.0008578199999999953, 0.0008579439999999994, 0.0008579439999999994, 0.0008578200000000091, 0.0008578880000000011, 0.0008578479999999944, 0.0008579019999999937, 0.0008580279999999968, 0.000857986000000005, 0.0008578890000000006, 0.0008579300000000067, 0.0008578340000000018, 0.0008579299999999929, 0.0008577780000000035, 0.000857763999999997, 0.0008579439999999994, 0.0008579169999999997, 0.0008578189999999958, 0.0008578469999999949, 0.0008578610000000014, 0.0008578340000000018, 0.0008578060000000026, 0.0008578749999999941, 0.0008578060000000026, 0.0008579029999999932, 0.0008579029999999932, 0.0008578890000000006, 0.0008578340000000018, 0.0008579310000000062, 0.000857986000000005]</msg>
<status status="PASS" starttime="20201030 15:56:13.419" endtime="20201030 15:56:13.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.408" endtime="20201030 15:56:13.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:13.434" endtime="20201030 15:56:13.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.430" endtime="20201030 15:56:13.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.427" endtime="20201030 15:56:13.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.843" endtime="20201030 15:56:13.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.842" endtime="20201030 15:56:13.459"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.481" endtime="20201030 15:56:13.593"></status>
</kw>
<msg timestamp="20201030 15:56:13.594" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.478" endtime="20201030 15:56:13.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.601" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.596" endtime="20201030 15:56:13.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.603" endtime="20201030 15:56:13.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.471" endtime="20201030 15:56:13.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.465" endtime="20201030 15:56:13.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.626" endtime="20201030 15:56:13.975"></status>
</kw>
<msg timestamp="20201030 15:56:13.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036564056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037444625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.623" endtime="20201030 15:56:13.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036564056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037444625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.984" endtime="20201030 15:56:14.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.002" endtime="20201030 15:56:14.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.615" endtime="20201030 15:56:14.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.611" endtime="20201030 15:56:14.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:14.017" level="INFO">${PHILIP_RES} = [{'diff': 0.0008805690000000047}, {'diff': 0.0008822500000000011}, {'diff': 0.0008823609999999982}, {'diff': 0.000882222000000002}, {'diff': 0.0008822780000000002}, {'diff': 0.0008822640000000007}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:14.010" endtime="20201030 15:56:14.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.026" level="INFO">${RESULT} = {'diff': [0.0008805690000000047, 0.0008822500000000011, 0.0008823609999999982, 0.000882222000000002, 0.0008822780000000002, 0.0008822640000000007, 0.0008822080000000024, 0.000882222000000002, 0.000882...</msg>
<status status="PASS" starttime="20201030 15:56:14.020" endtime="20201030 15:56:14.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.037" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:14.034" endtime="20201030 15:56:14.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.042" level="INFO">VALUE: [0.0008805690000000047, 0.0008822500000000011, 0.0008823609999999982, 0.000882222000000002, 0.0008822780000000002, 0.0008822640000000007, 0.0008822080000000024, 0.000882222000000002, 0.0008822780000000002, 0.0008822359999999946, 0.0008822080000000024, 0.0008821250000000044, 0.0008821950000000023, 0.0008822080000000093, 0.000882222000000002, 0.0008821809999999958, 0.000882361000000012, 0.0008822780000000002, 0.0008824999999999944, 0.0008822639999999937, 0.0008823470000000055, 0.0008823609999999982, 0.000883236999999995, 0.0008821529999999966, 0.0008823749999999908, 0.0008823750000000047, 0.0008822919999999929, 0.0008821950000000023, 0.0008823049999999999, 0.0008822640000000076, 0.0008833609999999992, 0.000882332999999999, 0.0008822780000000002, 0.000882332999999999, 0.0008822919999999929, 0.0008823609999999982, 0.0008823750000000047, 0.0008821110000000049, 0.0008823200000000059, 0.0008821389999999901, 0.0008821249999999975, 0.0008831110000000059, 0.0008821249999999975, 0.0008820279999999792, 0.0008820279999999792, 0.0008821250000000114, 0.0008820140000000143, 0.0008822220000000158, 0.0008821250000000114, 0.0008821250000000114]</msg>
<status status="PASS" starttime="20201030 15:56:14.039" endtime="20201030 15:56:14.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.028" endtime="20201030 15:56:14.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.054" endtime="20201030 15:56:14.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.050" endtime="20201030 15:56:14.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.047" endtime="20201030 15:56:14.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.461" endtime="20201030 15:56:14.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.460" endtime="20201030 15:56:14.079"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.101" endtime="20201030 15:56:14.217"></status>
</kw>
<msg timestamp="20201030 15:56:14.218" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.097" endtime="20201030 15:56:14.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.224" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.220" endtime="20201030 15:56:14.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.226" endtime="20201030 15:56:14.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.090" endtime="20201030 15:56:14.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.085" endtime="20201030 15:56:14.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.249" endtime="20201030 15:56:14.587"></status>
</kw>
<msg timestamp="20201030 15:56:14.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038170208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039073583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.246" endtime="20201030 15:56:14.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038170208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039073583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.596" endtime="20201030 15:56:14.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.613" endtime="20201030 15:56:14.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.239" endtime="20201030 15:56:14.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.234" endtime="20201030 15:56:14.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:14.629" level="INFO">${PHILIP_RES} = [{'diff': 0.0009033750000000049}, {'diff': 0.0009061390000000002}, {'diff': 0.0009062229999999977}, {'diff': 0.0009061949999999985}, {'diff': 0.0009061110000000011}, {'diff': 0.0009062499999999973}, {...</msg>
<status status="PASS" starttime="20201030 15:56:14.621" endtime="20201030 15:56:14.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.638" level="INFO">${RESULT} = {'diff': [0.0009033750000000049, 0.0009061390000000002, 0.0009062229999999977, 0.0009061949999999985, 0.0009061110000000011, 0.0009062499999999973, 0.0009062219999999982, 0.0009061120000000006, 0.0009...</msg>
<status status="PASS" starttime="20201030 15:56:14.631" endtime="20201030 15:56:14.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.648" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:14.646" endtime="20201030 15:56:14.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.653" level="INFO">VALUE: [0.0009033750000000049, 0.0009061390000000002, 0.0009062229999999977, 0.0009061949999999985, 0.0009061110000000011, 0.0009062499999999973, 0.0009062219999999982, 0.0009061120000000006, 0.0009062500000000043, 0.0009062360000000047, 0.0009061799999999995, 0.0009070969999999956, 0.0009063609999999944, 0.0009063339999999948, 0.0009062219999999982, 0.0009062910000000035, 0.0009061110000000011, 0.0009071390000000012, 0.000906083000000002, 0.0009061110000000011, 0.0009061530000000068, 0.0009061120000000006, 0.0009061810000000059, 0.0009063889999999936, 0.0009063470000000018, 0.0009063750000000009, 0.0009062499999999973, 0.0009061800000000064, 0.0009062229999999977, 0.0009064309999999992, 0.0009064020000000006, 0.0009063199999999882, 0.0009061810000000059, 0.0009065979999999946, 0.0009064159999999932, 0.0009064020000000006, 0.0009063480000000013, 0.000906276999999997, 0.0009064299999999997, 0.0009061390000000002, 0.0009071529999999939, 0.0009061519999999934, 0.0009063330000000092, 0.000906165999999986, 0.0009062640000000177, 0.0009063609999999944, 0.00090626399999999, 0.0009062499999999973, 0.0009062499999999973, 0.0009062080000000194]</msg>
<status status="PASS" starttime="20201030 15:56:14.650" endtime="20201030 15:56:14.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.640" endtime="20201030 15:56:14.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.667" endtime="20201030 15:56:14.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.662" endtime="20201030 15:56:14.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.659" endtime="20201030 15:56:14.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.081" endtime="20201030 15:56:14.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.080" endtime="20201030 15:56:14.692"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.714" endtime="20201030 15:56:14.830"></status>
</kw>
<msg timestamp="20201030 15:56:14.831" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.710" endtime="20201030 15:56:14.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.837" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.833" endtime="20201030 15:56:14.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.840" endtime="20201030 15:56:14.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.703" endtime="20201030 15:56:14.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.698" endtime="20201030 15:56:14.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.863" endtime="20201030 15:56:15.199"></status>
</kw>
<msg timestamp="20201030 15:56:15.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036048847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036976458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.859" endtime="20201030 15:56:15.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036048847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036976458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.208" endtime="20201030 15:56:15.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.225" endtime="20201030 15:56:15.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.852" endtime="20201030 15:56:15.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.848" endtime="20201030 15:56:15.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:56:15.241" level="INFO">${PHILIP_RES} = [{'diff': 0.0009276109999999949}, {'diff': 0.0009305689999999991}, {'diff': 0.0009305419999999995}, {'diff': 0.0009304860000000012}, {'diff': 0.0009304300000000029}, {'diff': 0.0009304030000000033}, {...</msg>
<status status="PASS" starttime="20201030 15:56:15.234" endtime="20201030 15:56:15.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:15.251" level="INFO">${RESULT} = {'diff': [0.0009276109999999949, 0.0009305689999999991, 0.0009305419999999995, 0.0009304860000000012, 0.0009304300000000029, 0.0009304030000000033, 0.0009303329999999985, 0.0009304720000000016, 0.0009...</msg>
<status status="PASS" starttime="20201030 15:56:15.243" endtime="20201030 15:56:15.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.262" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:56:15.260" endtime="20201030 15:56:15.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.267" level="INFO">VALUE: [0.0009276109999999949, 0.0009305689999999991, 0.0009305419999999995, 0.0009304860000000012, 0.0009304300000000029, 0.0009304030000000033, 0.0009303329999999985, 0.0009304720000000016, 0.0009304720000000016, 0.0009305000000000008, 0.0009305279999999999, 0.0009303189999999989, 0.000930555999999999, 0.0009305689999999922, 0.0009306659999999967, 0.0009305829999999987, 0.0009305549999999996, 0.0009305829999999987, 0.0009307080000000023, 0.0009318050000000078, 0.0009307779999999932, 0.0009307360000000015, 0.0009307919999999997, 0.0009307219999999949, 0.0009307080000000023, 0.0009307640000000006, 0.0009307080000000023, 0.0009308890000000042, 0.0009307640000000006, 0.0009307220000000088, 0.0009305829999999987, 0.0009307080000000023, 0.0009317359999999886, 0.0009306530000000035, 0.0009307090000000018, 0.0009317080000000033, 0.0009306379999999975, 0.0009306249999999905, 0.0009305700000000056, 0.0009307080000000023, 0.000930555999999999, 0.0009306119999999973, 0.0009306530000000035, 0.0009304860000000081, 0.0009305000000000008, 0.0009305139999999934, 0.0009304440000000025, 0.0009305000000000008, 0.0009315000000000018, 0.0009304440000000025]</msg>
<status status="PASS" starttime="20201030 15:56:15.264" endtime="20201030 15:56:15.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.253" endtime="20201030 15:56:15.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:15.279" endtime="20201030 15:56:15.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.275" endtime="20201030 15:56:15.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.273" endtime="20201030 15:56:15.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.694" endtime="20201030 15:56:15.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.693" endtime="20201030 15:56:15.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.074" endtime="20201030 15:56:15.305"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:44.821" endtime="20201030 15:56:15.307" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:55:15.867" endtime="20201030 15:56:15.330"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.509" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:56:15.525" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:56:17.503" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:56:15.506" endtime="20201030 15:56:17.504"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.510" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:56:17.507" endtime="20201030 15:56:17.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.503" endtime="20201030 15:56:17.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.517" endtime="20201030 15:56:17.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.514" endtime="20201030 15:56:17.867"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.896" endtime="20201030 15:56:17.912"></status>
</kw>
<msg timestamp="20201030 15:56:17.914" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.893" endtime="20201030 15:56:17.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.916" endtime="20201030 15:56:17.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.927" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:17.922" endtime="20201030 15:56:17.927"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:17.887" endtime="20201030 15:56:17.929"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:17.881" endtime="20201030 15:56:17.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.879" endtime="20201030 15:56:17.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:17.941" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:17.940" endtime="20201030 15:56:17.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.933" endtime="20201030 15:56:17.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.877" endtime="20201030 15:56:17.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.875" endtime="20201030 15:56:17.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.945" endtime="20201030 15:56:17.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.872" endtime="20201030 15:56:17.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.952" endtime="20201030 15:56:17.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.868" endtime="20201030 15:56:17.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.500" endtime="20201030 15:56:17.957"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.972" endtime="20201030 15:56:17.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.968" endtime="20201030 15:56:17.995"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.029" endtime="20201030 15:56:18.044"></status>
</kw>
<msg timestamp="20201030 15:56:18.045" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.025" endtime="20201030 15:56:18.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.052" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.048" endtime="20201030 15:56:18.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.058" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:18.054" endtime="20201030 15:56:18.059"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:18.018" endtime="20201030 15:56:18.061"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:18.012" endtime="20201030 15:56:18.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.009" endtime="20201030 15:56:18.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:18.071" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:18.070" endtime="20201030 15:56:18.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.065" endtime="20201030 15:56:18.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.007" endtime="20201030 15:56:18.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.005" endtime="20201030 15:56:18.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.074" endtime="20201030 15:56:18.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.001" endtime="20201030 15:56:18.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.997" endtime="20201030 15:56:18.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.966" endtime="20201030 15:56:18.082"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.110" endtime="20201030 15:56:18.128"></status>
</kw>
<msg timestamp="20201030 15:56:18.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.105" endtime="20201030 15:56:18.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.132" endtime="20201030 15:56:18.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.140" endtime="20201030 15:56:18.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.096" endtime="20201030 15:56:18.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.090" endtime="20201030 15:56:18.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.167" endtime="20201030 15:56:18.534"></status>
</kw>
<msg timestamp="20201030 15:56:18.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129818597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129857806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.162" endtime="20201030 15:56:18.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129818597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129857806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.544" endtime="20201030 15:56:18.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.563" endtime="20201030 15:56:18.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.155" endtime="20201030 15:56:18.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.150" endtime="20201030 15:56:18.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.580" level="INFO">${RESULT} = [{'diff': 3.9208999999984506e-05}, {'diff': 3.9346999999995136e-05}, {'diff': 3.8708999999997884e-05}, {'diff': 3.8652999999999604e-05}, {'diff': 3.941600000001433e-05}, {'diff': 3.900000000001125e-05...</msg>
<status status="PASS" starttime="20201030 15:56:18.571" endtime="20201030 15:56:18.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.590" level="INFO">${ACCURACY} = {'diff': [3.9208999999984506e-05, 3.9346999999995136e-05, 3.8708999999997884e-05, 3.8652999999999604e-05, 3.941600000001433e-05, 3.900000000001125e-05, 3.9375000000008153e-05, 3.8652999999999604e-05, ...</msg>
<status status="PASS" starttime="20201030 15:56:18.582" endtime="20201030 15:56:18.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.601" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.598" endtime="20201030 15:56:18.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.606" level="INFO">VALUE: [3.9208999999984506e-05, 3.9346999999995136e-05, 3.8708999999997884e-05, 3.8652999999999604e-05, 3.941600000001433e-05, 3.900000000001125e-05, 3.9375000000008153e-05, 3.8652999999999604e-05, 3.926399999998331e-05, 3.898599999999086e-05, 3.9429999999979204e-05, 3.894500000001244e-05, 3.943000000000696e-05, 3.9111000000008334e-05, 3.8930999999992055e-05, 3.922300000000489e-05, 3.883300000001588e-05, 3.904099999998967e-05, 3.888899999998641e-05, 3.9375000000008153e-05, 3.9444999999999064e-05, 3.9375000000008153e-05, 3.936199999998724e-05, 3.898599999999086e-05, 3.943000000000696e-05, 3.868100000001262e-05, 3.9346999999995136e-05, 3.8597000000001325e-05, 3.926400000001107e-05, 3.890200000000732e-05, 3.8652999999999604e-05, 3.8554999999995676e-05, 3.863900000000697e-05, 3.92780000000037e-05, 3.85980000000008e-05, 3.944399999999959e-05, 3.9319000000009874e-05, 3.9402999999993416e-05, 3.872199999999104e-05, 3.92780000000037e-05, 3.936099999998777e-05, 3.884799999998023e-05, 3.856900000001606e-05, 3.917999999999977e-05, 3.920900000001226e-05, 3.881999999999497e-05, 3.945799999999222e-05, 3.892999999999258e-05, 3.865300000002736e-05, 3.915300000001398e-05]</msg>
<status status="PASS" starttime="20201030 15:56:18.603" endtime="20201030 15:56:18.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.591" endtime="20201030 15:56:18.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.619" endtime="20201030 15:56:18.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.615" endtime="20201030 15:56:18.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.612" endtime="20201030 15:56:18.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.085" endtime="20201030 15:56:18.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.084" endtime="20201030 15:56:18.644"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.667" endtime="20201030 15:56:18.684"></status>
</kw>
<msg timestamp="20201030 15:56:18.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.664" endtime="20201030 15:56:18.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.687" endtime="20201030 15:56:18.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.694" endtime="20201030 15:56:18.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.657" endtime="20201030 15:56:18.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.651" endtime="20201030 15:56:18.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.718" endtime="20201030 15:56:19.056"></status>
</kw>
<msg timestamp="20201030 15:56:19.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039450972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039490111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.714" endtime="20201030 15:56:19.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039450972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039490111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.066" endtime="20201030 15:56:19.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.085" endtime="20201030 15:56:19.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.707" endtime="20201030 15:56:19.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.702" endtime="20201030 15:56:19.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.102" level="INFO">${RESULT} = [{'diff': 3.9139000000000534e-05}, {'diff': 3.8652999999999604e-05}, {'diff': 3.867999999999927e-05}, {'diff': 3.9166999999999674e-05}, {'diff': 3.923599999999805e-05}, {'diff': 3.9097000000001825e-05...</msg>
<status status="PASS" starttime="20201030 15:56:19.093" endtime="20201030 15:56:19.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.113" level="INFO">${ACCURACY} = {'diff': [3.9139000000000534e-05, 3.8652999999999604e-05, 3.867999999999927e-05, 3.9166999999999674e-05, 3.923599999999805e-05, 3.9097000000001825e-05, 3.9360999999994706e-05, 3.8625000000000465e-05, ...</msg>
<status status="PASS" starttime="20201030 15:56:19.104" endtime="20201030 15:56:19.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.124" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.121" endtime="20201030 15:56:19.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.129" level="INFO">VALUE: [3.9139000000000534e-05, 3.8652999999999604e-05, 3.867999999999927e-05, 3.9166999999999674e-05, 3.923599999999805e-05, 3.9097000000001825e-05, 3.9360999999994706e-05, 3.8625000000000465e-05, 3.8833000000002005e-05, 3.9263000000004655e-05, 3.9125000000000965e-05, 3.927799999999676e-05, 3.855600000000209e-05, 3.8568999999995246e-05, 3.8611000000000895e-05, 3.920799999999891e-05, 3.920799999999891e-05, 3.8652999999999604e-05, 3.9083000000002255e-05, 3.9054999999996176e-05, 3.8666999999999174e-05, 3.924999999999762e-05, 3.8944999999998564e-05, 3.8847000000001575e-05, 3.9194999999998814e-05, 3.8889000000000284e-05, 3.8541000000003045e-05, 3.925000000000456e-05, 3.8805000000002865e-05, 3.8930999999998994e-05, 3.901399999999694e-05, 3.9472999999998204e-05, 3.8860999999994206e-05, 3.879200000000277e-05, 3.9389000000000784e-05, 3.923599999999805e-05, 3.8639000000000034e-05, 3.8875000000000715e-05, 3.897199999999823e-05, 3.9291000000003795e-05, 3.919399999999934e-05, 3.8833000000002005e-05, 3.894400000000603e-05, 3.895799999999866e-05, 3.922200000000542e-05, 3.858400000000123e-05, 3.870799999999841e-05, 3.934800000000155e-05, 3.8639000000000034e-05, 3.9304999999996426e-05]</msg>
<status status="PASS" starttime="20201030 15:56:19.126" endtime="20201030 15:56:19.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.115" endtime="20201030 15:56:19.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.141" endtime="20201030 15:56:19.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.137" endtime="20201030 15:56:19.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.134" endtime="20201030 15:56:19.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.647" endtime="20201030 15:56:19.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.645" endtime="20201030 15:56:19.166"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.191" endtime="20201030 15:56:19.209"></status>
</kw>
<msg timestamp="20201030 15:56:19.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.187" endtime="20201030 15:56:19.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.212" endtime="20201030 15:56:19.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.221" endtime="20201030 15:56:19.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.178" endtime="20201030 15:56:19.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.173" endtime="20201030 15:56:19.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.251" endtime="20201030 15:56:19.655"></status>
</kw>
<msg timestamp="20201030 15:56:19.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041763375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041801903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.247" endtime="20201030 15:56:19.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041763375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041801903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.665" endtime="20201030 15:56:19.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.683" endtime="20201030 15:56:19.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.236" endtime="20201030 15:56:19.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.230" endtime="20201030 15:56:19.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.710" level="INFO">${RESULT} = [{'diff': 3.852800000000295e-05}, {'diff': 3.895799999999866e-05}, {'diff': 3.8554999999995676e-05}, {'diff': 3.924999999999762e-05}, {'diff': 3.94859999999983e-05}, {'diff': 3.91660000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:19.692" endtime="20201030 15:56:19.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.729" level="INFO">${ACCURACY} = {'diff': [3.852800000000295e-05, 3.895799999999866e-05, 3.8554999999995676e-05, 3.924999999999762e-05, 3.94859999999983e-05, 3.91660000000002e-05, 3.857000000000166e-05, 3.9389000000000784e-05, 3.9514...</msg>
<status status="PASS" starttime="20201030 15:56:19.716" endtime="20201030 15:56:19.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.742" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.739" endtime="20201030 15:56:19.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.748" level="INFO">VALUE: [3.852800000000295e-05, 3.895799999999866e-05, 3.8554999999995676e-05, 3.924999999999762e-05, 3.94859999999983e-05, 3.91660000000002e-05, 3.857000000000166e-05, 3.9389000000000784e-05, 3.951400000000438e-05, 3.8902999999999854e-05, 3.920800000000585e-05, 3.8610999999993956e-05, 3.8639000000000034e-05, 3.931999999999547e-05, 3.899999999999737e-05, 3.9236999999997524e-05, 3.9111000000001395e-05, 3.900000000000431e-05, 3.858400000000123e-05, 3.877799999999626e-05, 3.8722999999997454e-05, 3.9124999999994026e-05, 3.9139000000000534e-05, 3.8666999999999174e-05, 3.8861000000001145e-05, 3.9291000000003795e-05, 3.881999999999497e-05, 3.9361000000001645e-05, 3.9068999999995746e-05, 3.949999999999787e-05, 3.917999999999977e-05, 3.852799999999601e-05, 3.876399999999669e-05, 3.91660000000002e-05, 3.926399999999719e-05, 3.8582999999994816e-05, 3.8597000000001325e-05, 3.899999999999737e-05, 3.941600000000045e-05, 3.852800000000295e-05, 3.8569000000002185e-05, 3.9403000000000354e-05, 3.94580000000061e-05, 3.8611000000000895e-05, 3.923600000000499e-05, 3.9111000000001395e-05, 3.857000000000166e-05, 3.892999999999952e-05, 3.9097000000001825e-05, 3.8639000000000034e-05]</msg>
<status status="PASS" starttime="20201030 15:56:19.745" endtime="20201030 15:56:19.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.731" endtime="20201030 15:56:19.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.760" endtime="20201030 15:56:19.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.755" endtime="20201030 15:56:19.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.753" endtime="20201030 15:56:19.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.168" endtime="20201030 15:56:19.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.167" endtime="20201030 15:56:19.785"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.808" endtime="20201030 15:56:19.825"></status>
</kw>
<msg timestamp="20201030 15:56:19.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.805" endtime="20201030 15:56:19.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.829" endtime="20201030 15:56:19.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.835" endtime="20201030 15:56:19.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.798" endtime="20201030 15:56:19.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.792" endtime="20201030 15:56:19.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.859" endtime="20201030 15:56:20.196"></status>
</kw>
<msg timestamp="20201030 15:56:20.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040218333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040257486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.855" endtime="20201030 15:56:20.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040218333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040257486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.206" endtime="20201030 15:56:20.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.224" endtime="20201030 15:56:20.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.848" endtime="20201030 15:56:20.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.843" endtime="20201030 15:56:20.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.241" level="INFO">${RESULT} = [{'diff': 3.9153000000000104e-05}, {'diff': 3.902799999999651e-05}, {'diff': 3.89859999999978e-05}, {'diff': 3.904200000000302e-05}, {'diff': 3.84859999999973e-05}, {'diff': 3.9125000000000965e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:20.233" endtime="20201030 15:56:20.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.251" level="INFO">${ACCURACY} = {'diff': [3.9153000000000104e-05, 3.902799999999651e-05, 3.89859999999978e-05, 3.904200000000302e-05, 3.84859999999973e-05, 3.9125000000000965e-05, 3.933400000000198e-05, 3.915200000000063e-05, 3.8861...</msg>
<status status="PASS" starttime="20201030 15:56:20.244" endtime="20201030 15:56:20.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.262" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.260" endtime="20201030 15:56:20.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.267" level="INFO">VALUE: [3.9153000000000104e-05, 3.902799999999651e-05, 3.89859999999978e-05, 3.904200000000302e-05, 3.84859999999973e-05, 3.9125000000000965e-05, 3.933400000000198e-05, 3.915200000000063e-05, 3.8861000000001145e-05, 3.899999999999737e-05, 3.890300000000679e-05, 3.870799999999841e-05, 3.891599999999995e-05, 3.952799999999701e-05, 3.855599999999515e-05, 3.894399999999909e-05, 3.9430999999999494e-05, 3.945799999999916e-05, 3.897199999999823e-05, 3.922199999999848e-05, 3.9291000000003795e-05, 3.933400000000198e-05, 3.901400000000388e-05, 3.8512999999996966e-05, 3.9416999999999924e-05, 3.944399999999959e-05, 3.8832999999995066e-05, 3.919500000000575e-05, 3.872199999999798e-05, 3.923599999999805e-05, 3.94859999999983e-05, 3.9111000000001395e-05, 3.9194999999998814e-05, 3.9347000000002075e-05, 3.930600000000284e-05, 3.9111000000001395e-05, 3.894399999999909e-05, 3.850000000000381e-05, 3.9208999999998384e-05, 3.8583000000001755e-05, 3.87780000000032e-05, 3.8624999999993526e-05, 3.9125000000000965e-05, 3.9319000000002935e-05, 3.9416999999999924e-05, 3.897200000000517e-05, 3.851400000000338e-05, 3.929199999999633e-05, 3.870799999999841e-05, 3.9139000000000534e-05]</msg>
<status status="PASS" starttime="20201030 15:56:20.264" endtime="20201030 15:56:20.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.253" endtime="20201030 15:56:20.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.282" endtime="20201030 15:56:20.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.277" endtime="20201030 15:56:20.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.273" endtime="20201030 15:56:20.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.788" endtime="20201030 15:56:20.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.785" endtime="20201030 15:56:20.309"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.334" endtime="20201030 15:56:20.354"></status>
</kw>
<msg timestamp="20201030 15:56:20.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.331" endtime="20201030 15:56:20.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.357" endtime="20201030 15:56:20.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.364" endtime="20201030 15:56:20.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.324" endtime="20201030 15:56:20.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.317" endtime="20201030 15:56:20.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.387" endtime="20201030 15:56:20.728"></status>
</kw>
<msg timestamp="20201030 15:56:20.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045478014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04551675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:20.383" endtime="20201030 15:56:20.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045478014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04551675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:20.737" endtime="20201030 15:56:20.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.756" endtime="20201030 15:56:20.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.376" endtime="20201030 15:56:20.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.371" endtime="20201030 15:56:20.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.773" level="INFO">${RESULT} = [{'diff': 3.873600000000449e-05}, {'diff': 3.875000000000406e-05}, {'diff': 3.869500000000525e-05}, {'diff': 3.8944999999998564e-05}, {'diff': 3.94859999999983e-05}, {'diff': 3.9304999999996426e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:20.764" endtime="20201030 15:56:20.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.782" level="INFO">${ACCURACY} = {'diff': [3.873600000000449e-05, 3.875000000000406e-05, 3.869500000000525e-05, 3.8944999999998564e-05, 3.94859999999983e-05, 3.9304999999996426e-05, 3.9194999999998814e-05, 3.9291000000003795e-05, 3.9...</msg>
<status status="PASS" starttime="20201030 15:56:20.775" endtime="20201030 15:56:20.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.794" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.792" endtime="20201030 15:56:20.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.800" level="INFO">VALUE: [3.873600000000449e-05, 3.875000000000406e-05, 3.869500000000525e-05, 3.8944999999998564e-05, 3.94859999999983e-05, 3.9304999999996426e-05, 3.9194999999998814e-05, 3.9291000000003795e-05, 3.926400000000413e-05, 3.926399999999719e-05, 3.8805000000002865e-05, 3.927799999999676e-05, 3.897300000000464e-05, 3.9347000000002075e-05, 3.9097000000001825e-05, 3.9139000000000534e-05, 3.9389000000000784e-05, 3.951399999999744e-05, 3.8832999999995066e-05, 3.892999999999952e-05, 3.934800000000155e-05, 3.8790999999996356e-05, 3.891599999999995e-05, 3.9083000000002255e-05, 3.8639000000000034e-05, 3.891599999999995e-05, 3.9194999999998814e-05, 3.917999999999977e-05, 3.9430999999999494e-05, 3.926399999999719e-05, 3.899999999999737e-05, 3.868000000000621e-05, 3.899999999999737e-05, 3.872199999999798e-05, 3.9361000000001645e-05, 3.880600000000234e-05, 3.8889000000000284e-05, 3.94859999999983e-05, 3.929199999999633e-05, 3.8832999999995066e-05, 3.9403000000000354e-05, 3.923599999999805e-05, 3.8625000000000465e-05, 3.873599999999755e-05, 3.925000000000456e-05, 3.869399999999884e-05, 3.9166999999999674e-05, 3.892999999999952e-05, 3.89859999999978e-05, 3.8611000000000895e-05]</msg>
<status status="PASS" starttime="20201030 15:56:20.797" endtime="20201030 15:56:20.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.784" endtime="20201030 15:56:20.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.813" endtime="20201030 15:56:20.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.807" endtime="20201030 15:56:20.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.805" endtime="20201030 15:56:20.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.312" endtime="20201030 15:56:20.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.310" endtime="20201030 15:56:20.838"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.861" endtime="20201030 15:56:20.878"></status>
</kw>
<msg timestamp="20201030 15:56:20.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.858" endtime="20201030 15:56:20.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.881" endtime="20201030 15:56:20.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.887" endtime="20201030 15:56:20.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.850" endtime="20201030 15:56:20.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.845" endtime="20201030 15:56:20.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.911" endtime="20201030 15:56:21.250"></status>
</kw>
<msg timestamp="20201030 15:56:21.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039865708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039905069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.907" endtime="20201030 15:56:21.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039865708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039905069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.259" endtime="20201030 15:56:21.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.278" endtime="20201030 15:56:21.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.900" endtime="20201030 15:56:21.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.895" endtime="20201030 15:56:21.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.295" level="INFO">${RESULT} = [{'diff': 3.9361000000001645e-05}, {'diff': 3.8597000000001325e-05}, {'diff': 3.857000000000166e-05}, {'diff': 3.8596999999994386e-05}, {'diff': 3.8666999999999174e-05}, {'diff': 3.9389000000000784e-0...</msg>
<status status="PASS" starttime="20201030 15:56:21.286" endtime="20201030 15:56:21.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.306" level="INFO">${ACCURACY} = {'diff': [3.9361000000001645e-05, 3.8597000000001325e-05, 3.857000000000166e-05, 3.8596999999994386e-05, 3.8666999999999174e-05, 3.9389000000000784e-05, 3.9361000000001645e-05, 3.9125000000000965e-05,...</msg>
<status status="PASS" starttime="20201030 15:56:21.297" endtime="20201030 15:56:21.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.316" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.314" endtime="20201030 15:56:21.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.322" level="INFO">VALUE: [3.9361000000001645e-05, 3.8597000000001325e-05, 3.857000000000166e-05, 3.8596999999994386e-05, 3.8666999999999174e-05, 3.9389000000000784e-05, 3.9361000000001645e-05, 3.9125000000000965e-05, 3.9403000000000354e-05, 3.923599999999805e-05, 3.9083000000002255e-05, 3.9041000000003545e-05, 3.9416999999999924e-05, 3.886200000000062e-05, 3.8846999999994636e-05, 3.858400000000123e-05, 3.870800000000535e-05, 3.929199999999633e-05, 3.85980000000008e-05, 3.849999999999687e-05, 3.854200000000252e-05, 3.88059999999954e-05, 3.9346999999995136e-05, 3.9389000000000784e-05, 3.891599999999995e-05, 3.857000000000166e-05, 3.8625000000000465e-05, 3.923599999999805e-05, 3.940200000000088e-05, 3.919399999999934e-05, 3.855600000000209e-05, 3.8527000000003475e-05, 3.855600000000209e-05, 3.9194999999998814e-05, 3.876399999999669e-05, 3.899999999999737e-05, 3.8777000000003725e-05, 3.9361000000001645e-05, 3.8875000000000715e-05, 3.947199999999873e-05, 3.8555000000002615e-05, 3.930600000000284e-05, 3.934799999999461e-05, 3.922199999999848e-05, 3.9125000000000965e-05, 3.861200000000037e-05, 3.8819000000002435e-05, 3.9403000000000354e-05, 3.8805000000002865e-05, 3.880600000000234e-05]</msg>
<status status="PASS" starttime="20201030 15:56:21.319" endtime="20201030 15:56:21.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.307" endtime="20201030 15:56:21.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.334" endtime="20201030 15:56:21.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.330" endtime="20201030 15:56:21.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.327" endtime="20201030 15:56:21.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.841" endtime="20201030 15:56:21.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.839" endtime="20201030 15:56:21.359"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.381" endtime="20201030 15:56:21.399"></status>
</kw>
<msg timestamp="20201030 15:56:21.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.378" endtime="20201030 15:56:21.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.403" endtime="20201030 15:56:21.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.409" endtime="20201030 15:56:21.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.371" endtime="20201030 15:56:21.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.365" endtime="20201030 15:56:21.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.432" endtime="20201030 15:56:21.782"></status>
</kw>
<msg timestamp="20201030 15:56:21.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039002653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039041694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.429" endtime="20201030 15:56:21.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039002653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039041694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.792" endtime="20201030 15:56:21.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.811" endtime="20201030 15:56:21.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.422" endtime="20201030 15:56:21.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.417" endtime="20201030 15:56:21.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.828" level="INFO">${RESULT} = [{'diff': 3.9041000000003545e-05}, {'diff': 3.8875000000000715e-05}, {'diff': 3.8611000000000895e-05}, {'diff': 3.9374999999994276e-05}, {'diff': 3.875000000000406e-05}, {'diff': 3.9222999999997954e-0...</msg>
<status status="PASS" starttime="20201030 15:56:21.819" endtime="20201030 15:56:21.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.839" level="INFO">${ACCURACY} = {'diff': [3.9041000000003545e-05, 3.8875000000000715e-05, 3.8611000000000895e-05, 3.9374999999994276e-05, 3.875000000000406e-05, 3.9222999999997954e-05, 3.8625000000000465e-05, 3.873599999999755e-05, ...</msg>
<status status="PASS" starttime="20201030 15:56:21.830" endtime="20201030 15:56:21.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.850" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.848" endtime="20201030 15:56:21.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.855" level="INFO">VALUE: [3.9041000000003545e-05, 3.8875000000000715e-05, 3.8611000000000895e-05, 3.9374999999994276e-05, 3.875000000000406e-05, 3.9222999999997954e-05, 3.8625000000000465e-05, 3.873599999999755e-05, 3.8804999999995926e-05, 3.8708999999997884e-05, 3.94580000000061e-05, 3.9139000000000534e-05, 3.901399999999694e-05, 3.9012999999997466e-05, 3.920799999999891e-05, 3.869399999999884e-05, 3.8832999999995066e-05, 3.9472999999998204e-05, 3.9403000000000354e-05, 3.8875000000000715e-05, 3.895799999999866e-05, 3.9430999999999494e-05, 3.9444999999999064e-05, 3.8833000000002005e-05, 3.8639000000000034e-05, 3.9139000000000534e-05, 3.9403000000000354e-05, 3.930600000000284e-05, 3.870799999999841e-05, 3.849999999999687e-05, 3.930600000000284e-05, 3.894399999999909e-05, 3.945799999999916e-05, 3.925000000000456e-05, 3.941600000000045e-05, 3.8680999999998744e-05, 3.9069000000002685e-05, 3.876400000000363e-05, 3.873599999999755e-05, 3.877799999999626e-05, 3.9208999999998384e-05, 3.8791000000003295e-05, 3.920800000000585e-05, 3.9111000000001395e-05, 3.86659999999997e-05, 3.923600000000499e-05, 3.9097000000001825e-05, 3.9152999999993165e-05, 3.8875000000000715e-05, 3.924999999999762e-05]</msg>
<status status="PASS" starttime="20201030 15:56:21.852" endtime="20201030 15:56:21.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.841" endtime="20201030 15:56:21.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.868" endtime="20201030 15:56:21.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.864" endtime="20201030 15:56:21.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.861" endtime="20201030 15:56:21.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.361" endtime="20201030 15:56:21.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.360" endtime="20201030 15:56:21.893"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.916" endtime="20201030 15:56:21.933"></status>
</kw>
<msg timestamp="20201030 15:56:21.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.913" endtime="20201030 15:56:21.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.936" endtime="20201030 15:56:21.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.942" endtime="20201030 15:56:21.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.905" endtime="20201030 15:56:21.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.900" endtime="20201030 15:56:21.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.966" endtime="20201030 15:56:22.303"></status>
</kw>
<msg timestamp="20201030 15:56:22.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039394736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039433889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.963" endtime="20201030 15:56:22.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039394736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039433889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.313" endtime="20201030 15:56:22.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.332" endtime="20201030 15:56:22.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.955" endtime="20201030 15:56:22.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.951" endtime="20201030 15:56:22.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.349" level="INFO">${RESULT} = [{'diff': 3.9153000000000104e-05}, {'diff': 3.891599999999995e-05}, {'diff': 3.932000000000241e-05}, {'diff': 3.8832999999995066e-05}, {'diff': 3.9054999999996176e-05}, {'diff': 3.8875000000000715e-05...</msg>
<status status="PASS" starttime="20201030 15:56:22.340" endtime="20201030 15:56:22.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.359" level="INFO">${ACCURACY} = {'diff': [3.9153000000000104e-05, 3.891599999999995e-05, 3.932000000000241e-05, 3.8832999999995066e-05, 3.9054999999996176e-05, 3.8875000000000715e-05, 3.9125000000000965e-05, 3.929199999999633e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:56:22.351" endtime="20201030 15:56:22.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.369" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.367" endtime="20201030 15:56:22.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.375" level="INFO">VALUE: [3.9153000000000104e-05, 3.891599999999995e-05, 3.932000000000241e-05, 3.8832999999995066e-05, 3.9054999999996176e-05, 3.8875000000000715e-05, 3.9125000000000965e-05, 3.929199999999633e-05, 3.902799999999651e-05, 3.8833000000002005e-05, 3.9304999999996426e-05, 3.857000000000166e-05, 3.9375000000001215e-05, 3.897199999999823e-05, 3.9097000000001825e-05, 3.8805000000002865e-05, 3.854200000000252e-05, 3.9305000000003365e-05, 3.879199999999583e-05, 3.9389000000000784e-05, 3.8652999999999604e-05, 3.93059999999959e-05, 3.90980000000013e-05, 3.873600000000449e-05, 3.8526999999996536e-05, 3.883400000000148e-05, 3.943000000000002e-05, 3.936200000000112e-05, 3.902800000000345e-05, 3.9111000000001395e-05, 3.9361000000001645e-05, 3.857000000000166e-05, 3.8652999999999604e-05, 3.9403000000000354e-05, 3.851399999999644e-05, 3.8569000000002185e-05, 3.858400000000123e-05, 3.8611000000000895e-05, 3.936200000000112e-05, 3.9416999999999924e-05, 3.9040999999996606e-05, 3.8583000000001755e-05, 3.874999999999712e-05, 3.897199999999823e-05, 3.905600000000259e-05, 3.922199999999848e-05, 3.884800000000105e-05, 3.9111000000001395e-05, 3.901399999999694e-05, 3.9361000000001645e-05]</msg>
<status status="PASS" starttime="20201030 15:56:22.372" endtime="20201030 15:56:22.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.360" endtime="20201030 15:56:22.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.388" endtime="20201030 15:56:22.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.383" endtime="20201030 15:56:22.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.381" endtime="20201030 15:56:22.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.895" endtime="20201030 15:56:22.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.894" endtime="20201030 15:56:22.413"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.436" endtime="20201030 15:56:22.454"></status>
</kw>
<msg timestamp="20201030 15:56:22.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.432" endtime="20201030 15:56:22.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.457" endtime="20201030 15:56:22.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.464" endtime="20201030 15:56:22.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.425" endtime="20201030 15:56:22.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.419" endtime="20201030 15:56:22.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.487" endtime="20201030 15:56:22.854"></status>
</kw>
<msg timestamp="20201030 15:56:22.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041081319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041120167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.484" endtime="20201030 15:56:22.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041081319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041120167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.864" endtime="20201030 15:56:22.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.882" endtime="20201030 15:56:22.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.476" endtime="20201030 15:56:22.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.472" endtime="20201030 15:56:22.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.899" level="INFO">${RESULT} = [{'diff': 3.884800000000105e-05}, {'diff': 3.952799999999701e-05}, {'diff': 3.877799999999626e-05}, {'diff': 3.869399999999884e-05}, {'diff': 3.8625000000000465e-05}, {'diff': 3.873599999999755e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:22.891" endtime="20201030 15:56:22.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.909" level="INFO">${ACCURACY} = {'diff': [3.884800000000105e-05, 3.952799999999701e-05, 3.877799999999626e-05, 3.869399999999884e-05, 3.8625000000000465e-05, 3.873599999999755e-05, 3.8597000000001325e-05, 3.873599999999755e-05, 3.93...</msg>
<status status="PASS" starttime="20201030 15:56:22.901" endtime="20201030 15:56:22.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.919" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.917" endtime="20201030 15:56:22.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.924" level="INFO">VALUE: [3.884800000000105e-05, 3.952799999999701e-05, 3.877799999999626e-05, 3.869399999999884e-05, 3.8625000000000465e-05, 3.873599999999755e-05, 3.8597000000001325e-05, 3.873599999999755e-05, 3.9361000000001645e-05, 3.874999999999712e-05, 3.861200000000037e-05, 3.919399999999934e-05, 3.9125000000000965e-05, 3.9403000000000354e-05, 3.8540999999996106e-05, 3.9403000000000354e-05, 3.936200000000112e-05, 3.9458999999998634e-05, 3.9347000000002075e-05, 3.9166999999999674e-05, 3.8875000000000715e-05, 3.851400000000338e-05, 3.8597000000001325e-05, 3.8540999999996106e-05, 3.9041000000003545e-05, 3.8889000000000284e-05, 3.87780000000032e-05, 3.948600000000524e-05, 3.904200000000302e-05, 3.882000000000191e-05, 3.9346999999995136e-05, 3.9013000000004405e-05, 3.894399999999909e-05, 3.894399999999909e-05, 3.922200000000542e-05, 3.8611000000000895e-05, 3.8833000000002005e-05, 3.851399999999644e-05, 3.876399999999669e-05, 3.8874999999993776e-05, 3.909799999999436e-05, 3.926399999999719e-05, 3.870799999999841e-05, 3.895799999999866e-05, 3.8582999999994816e-05, 3.9319000000002935e-05, 3.943000000000002e-05, 3.9153000000000104e-05, 3.9069000000002685e-05, 3.947200000000567e-05]</msg>
<status status="PASS" starttime="20201030 15:56:22.921" endtime="20201030 15:56:22.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.910" endtime="20201030 15:56:22.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.938" endtime="20201030 15:56:22.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.933" endtime="20201030 15:56:22.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.930" endtime="20201030 15:56:22.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.415" endtime="20201030 15:56:22.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.414" endtime="20201030 15:56:22.963"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.986" endtime="20201030 15:56:23.004"></status>
</kw>
<msg timestamp="20201030 15:56:23.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.982" endtime="20201030 15:56:23.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.007" endtime="20201030 15:56:23.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.014" endtime="20201030 15:56:23.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.975" endtime="20201030 15:56:23.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.970" endtime="20201030 15:56:23.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.037" endtime="20201030 15:56:23.380"></status>
</kw>
<msg timestamp="20201030 15:56:23.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039227847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039267042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.033" endtime="20201030 15:56:23.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039227847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039267042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.390" endtime="20201030 15:56:23.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.409" endtime="20201030 15:56:23.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.026" endtime="20201030 15:56:23.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.022" endtime="20201030 15:56:23.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.425" level="INFO">${RESULT} = [{'diff': 3.9194999999998814e-05}, {'diff': 3.852800000000295e-05}, {'diff': 3.870799999999841e-05}, {'diff': 3.91660000000002e-05}, {'diff': 3.9458999999998634e-05}, {'diff': 3.8652999999999604e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:23.417" endtime="20201030 15:56:23.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.440" level="INFO">${ACCURACY} = {'diff': [3.9194999999998814e-05, 3.852800000000295e-05, 3.870799999999841e-05, 3.91660000000002e-05, 3.9458999999998634e-05, 3.8652999999999604e-05, 3.87780000000032e-05, 3.94859999999983e-05, 3.8929...</msg>
<status status="PASS" starttime="20201030 15:56:23.427" endtime="20201030 15:56:23.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.451" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.449" endtime="20201030 15:56:23.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.457" level="INFO">VALUE: [3.9194999999998814e-05, 3.852800000000295e-05, 3.870799999999841e-05, 3.91660000000002e-05, 3.9458999999998634e-05, 3.8652999999999604e-05, 3.87780000000032e-05, 3.94859999999983e-05, 3.892999999999952e-05, 3.880600000000234e-05, 3.8791000000003295e-05, 3.8776999999996786e-05, 3.867999999999927e-05, 3.872300000000439e-05, 3.89859999999978e-05, 3.9458999999998634e-05, 3.9403000000000354e-05, 3.899999999999737e-05, 3.88059999999954e-05, 3.923599999999805e-05, 3.856999999999472e-05, 3.8625000000000465e-05, 3.9055000000003115e-05, 3.9040999999996606e-05, 3.9361000000001645e-05, 3.922199999999848e-05, 3.852799999999601e-05, 3.8818999999995496e-05, 3.9153000000000104e-05, 3.9139000000000534e-05, 3.8652999999999604e-05, 3.9222999999997954e-05, 3.8666999999999174e-05, 3.908400000000173e-05, 3.8861000000001145e-05, 3.9347000000002075e-05, 3.8611000000000895e-05, 3.923599999999805e-05, 3.9416999999999924e-05, 3.9083000000002255e-05, 3.904200000000302e-05, 3.9068999999995746e-05, 3.947199999999873e-05, 3.940200000000088e-05, 3.8944999999998564e-05, 3.8639000000000034e-05, 3.883400000000148e-05, 3.926400000000413e-05, 3.89859999999978e-05, 3.8776999999996786e-05]</msg>
<status status="PASS" starttime="20201030 15:56:23.454" endtime="20201030 15:56:23.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.442" endtime="20201030 15:56:23.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.475" endtime="20201030 15:56:23.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.471" endtime="20201030 15:56:23.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.468" endtime="20201030 15:56:23.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.965" endtime="20201030 15:56:23.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.964" endtime="20201030 15:56:23.500"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.522" endtime="20201030 15:56:23.541"></status>
</kw>
<msg timestamp="20201030 15:56:23.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.519" endtime="20201030 15:56:23.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.544" endtime="20201030 15:56:23.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.550" endtime="20201030 15:56:23.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.512" endtime="20201030 15:56:23.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.506" endtime="20201030 15:56:23.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.574" endtime="20201030 15:56:23.932"></status>
</kw>
<msg timestamp="20201030 15:56:23.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03909825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039138139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:23.571" endtime="20201030 15:56:23.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03909825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039138139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:23.941" endtime="20201030 15:56:23.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.960" endtime="20201030 15:56:23.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.564" endtime="20201030 15:56:23.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.559" endtime="20201030 15:56:23.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.978" level="INFO">${RESULT} = [{'diff': 3.9889000000001285e-05}, {'diff': 3.975000000000506e-05}, {'diff': 4.0208999999999384e-05}, {'diff': 4.0153000000001104e-05}, {'diff': 4.0389000000001785e-05}, {'diff': 3.997199999999923e-05...</msg>
<status status="PASS" starttime="20201030 15:56:23.969" endtime="20201030 15:56:23.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.989" level="INFO">${ACCURACY} = {'diff': [3.9889000000001285e-05, 3.975000000000506e-05, 4.0208999999999384e-05, 4.0153000000001104e-05, 4.0389000000001785e-05, 3.997199999999923e-05, 4.023599999999905e-05, 3.9653000000000604e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:56:23.980" endtime="20201030 15:56:23.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.000" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.998" endtime="20201030 15:56:24.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.006" level="INFO">VALUE: [3.9889000000001285e-05, 3.975000000000506e-05, 4.0208999999999384e-05, 4.0153000000001104e-05, 4.0389000000001785e-05, 3.997199999999923e-05, 4.023599999999905e-05, 3.9653000000000604e-05, 3.9596999999995386e-05, 3.9582999999995816e-05, 4.0375000000002215e-05, 3.974999999999812e-05, 4.0403000000001354e-05, 4.0375000000002215e-05, 4.0068999999996746e-05, 3.954199999999658e-05, 4.0458999999999634e-05, 4.04859999999993e-05, 4.0139000000001535e-05, 4.0153000000001104e-05, 4.0194999999999814e-05, 4.0403000000001354e-05, 4.022199999999948e-05, 4.0375000000002215e-05, 4.0332999999996566e-05, 3.9930999999999994e-05, 3.972199999999898e-05, 3.972199999999898e-05, 3.9889000000001285e-05, 3.968000000000027e-05, 4.005599999999665e-05, 3.995799999999966e-05, 4.024999999999862e-05, 4.027799999999776e-05, 4.030600000000384e-05, 3.995799999999966e-05, 4.052799999999801e-05, 4.023600000000599e-05, 3.977799999999726e-05, 3.9611000000001895e-05, 4.0458999999999634e-05, 4.005599999999665e-05, 4.0194999999999814e-05, 4.0125000000001965e-05, 4.0290999999997856e-05, 4.0097000000002825e-05, 4.0139000000001535e-05, 3.9540999999997106e-05, 3.999999999999837e-05, 4.0389000000001785e-05]</msg>
<status status="PASS" starttime="20201030 15:56:24.003" endtime="20201030 15:56:24.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.991" endtime="20201030 15:56:24.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.019" endtime="20201030 15:56:24.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.014" endtime="20201030 15:56:24.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.012" endtime="20201030 15:56:24.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.502" endtime="20201030 15:56:24.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.501" endtime="20201030 15:56:24.044"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.067" endtime="20201030 15:56:24.086"></status>
</kw>
<msg timestamp="20201030 15:56:24.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.064" endtime="20201030 15:56:24.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.090" endtime="20201030 15:56:24.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.096" endtime="20201030 15:56:24.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.056" endtime="20201030 15:56:24.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.050" endtime="20201030 15:56:24.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.120" endtime="20201030 15:56:24.468"></status>
</kw>
<msg timestamp="20201030 15:56:24.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04022875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040269847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:24.116" endtime="20201030 15:56:24.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04022875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040269847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:24.477" endtime="20201030 15:56:24.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.497" endtime="20201030 15:56:24.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.109" endtime="20201030 15:56:24.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.104" endtime="20201030 15:56:24.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.514" level="INFO">${RESULT} = [{'diff': 4.1096999999996886e-05}, {'diff': 4.100000000000631e-05}, {'diff': 4.095800000000066e-05}, {'diff': 4.14860000000003e-05}, {'diff': 4.074999999999912e-05}, {'diff': 4.145800000000116e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:24.505" endtime="20201030 15:56:24.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.524" level="INFO">${ACCURACY} = {'diff': [4.1096999999996886e-05, 4.100000000000631e-05, 4.095800000000066e-05, 4.14860000000003e-05, 4.074999999999912e-05, 4.145800000000116e-05, 4.083400000000348e-05, 4.1332999999997566e-05, 4.057...</msg>
<status status="PASS" starttime="20201030 15:56:24.516" endtime="20201030 15:56:24.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.535" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.533" endtime="20201030 15:56:24.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.540" level="INFO">VALUE: [4.1096999999996886e-05, 4.100000000000631e-05, 4.095800000000066e-05, 4.14860000000003e-05, 4.074999999999912e-05, 4.145800000000116e-05, 4.083400000000348e-05, 4.1332999999997566e-05, 4.057000000000366e-05, 4.145800000000116e-05, 4.1167000000001674e-05, 4.073599999999955e-05, 4.0667000000001174e-05, 4.1110999999996456e-05, 4.1290999999998856e-05, 4.093000000000152e-05, 4.141600000000245e-05, 4.051399999999844e-05, 4.083400000000348e-05, 4.072199999999998e-05, 4.076399999999869e-05, 4.13059999999979e-05, 4.1347000000004075e-05, 4.1181000000001244e-05, 4.147199999999379e-05, 4.0611000000002895e-05, 4.051399999999844e-05, 4.1181000000001244e-05, 4.101399999999894e-05, 4.1417000000001924e-05, 4.1374999999996276e-05, 4.0916999999994486e-05, 4.0582999999996816e-05, 4.0625000000002465e-05, 4.14860000000003e-05, 4.0889000000002285e-05, 4.1026999999999036e-05, 4.0846999999996636e-05, 4.122200000000048e-05, 4.054199999999758e-05, 4.133399999999704e-05, 4.095800000000066e-05, 4.1138999999995596e-05, 4.0611000000002895e-05, 4.09859999999998e-05, 4.1097000000003825e-05, 4.1318999999997996e-05, 4.09859999999998e-05, 4.1332999999997566e-05, 4.049999999999887e-05]</msg>
<status status="PASS" starttime="20201030 15:56:24.537" endtime="20201030 15:56:24.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.526" endtime="20201030 15:56:24.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.553" endtime="20201030 15:56:24.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.549" endtime="20201030 15:56:24.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.546" endtime="20201030 15:56:24.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.046" endtime="20201030 15:56:24.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.045" endtime="20201030 15:56:24.578"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.603" endtime="20201030 15:56:24.624"></status>
</kw>
<msg timestamp="20201030 15:56:24.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.599" endtime="20201030 15:56:24.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.627" endtime="20201030 15:56:24.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.633" endtime="20201030 15:56:24.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.591" endtime="20201030 15:56:24.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.585" endtime="20201030 15:56:24.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.657" endtime="20201030 15:56:25.014"></status>
</kw>
<msg timestamp="20201030 15:56:25.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043095097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043136764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.654" endtime="20201030 15:56:25.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043095097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043136764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.024" endtime="20201030 15:56:25.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.043" endtime="20201030 15:56:25.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.646" endtime="20201030 15:56:25.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.642" endtime="20201030 15:56:25.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.060" level="INFO">${RESULT} = [{'diff': 4.1667000000002175e-05}, {'diff': 4.1610999999996956e-05}, {'diff': 4.201399999999994e-05}, {'diff': 4.244399999999565e-05}, {'diff': 4.201399999999994e-05}, {'diff': 4.222199999999454e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:25.051" endtime="20201030 15:56:25.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:25.070" level="INFO">${ACCURACY} = {'diff': [4.1667000000002175e-05, 4.1610999999996956e-05, 4.201399999999994e-05, 4.244399999999565e-05, 4.201399999999994e-05, 4.222199999999454e-05, 4.2097000000004825e-05, 4.181999999999797e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 15:56:25.062" endtime="20201030 15:56:25.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.081" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:56:25.078" endtime="20201030 15:56:25.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.086" level="INFO">VALUE: [4.1667000000002175e-05, 4.1610999999996956e-05, 4.201399999999994e-05, 4.244399999999565e-05, 4.201399999999994e-05, 4.222199999999454e-05, 4.2097000000004825e-05, 4.181999999999797e-05, 4.243000000000302e-05, 4.1846999999997636e-05, 4.1653000000002605e-05, 4.19860000000008e-05, 4.179200000000577e-05, 4.176399999999969e-05, 4.200000000000037e-05, 4.2318999999998996e-05, 4.232000000000541e-05, 4.2360999999997706e-05, 4.17780000000062e-05, 4.251300000000097e-05, 4.24860000000013e-05, 4.2152999999996166e-05, 4.226400000000019e-05, 4.170800000000141e-05, 4.244399999999565e-05, 4.223600000000105e-05, 4.1652999999995666e-05, 4.241600000000345e-05, 4.226400000000019e-05, 4.252800000000001e-05, 4.229199999999933e-05, 4.23059999999989e-05, 4.1540999999999106e-05, 4.179199999999883e-05, 4.2318999999998996e-05, 4.225000000000062e-05, 4.2346999999998136e-05, 4.149999999999987e-05, 4.176400000000663e-05, 4.247199999999479e-05, 4.234799999999761e-05, 4.19860000000008e-05, 4.152799999999901e-05, 4.2444999999995126e-05, 4.1902999999995916e-05, 4.233399999999804e-05, 4.154199999999858e-05, 4.176399999999969e-05, 4.151399999999944e-05, 4.1902999999995916e-05]</msg>
<status status="PASS" starttime="20201030 15:56:25.083" endtime="20201030 15:56:25.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.072" endtime="20201030 15:56:25.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.101" endtime="20201030 15:56:25.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.095" endtime="20201030 15:56:25.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.092" endtime="20201030 15:56:25.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.580" endtime="20201030 15:56:25.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.579" endtime="20201030 15:56:25.126"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.154" endtime="20201030 15:56:25.178"></status>
</kw>
<msg timestamp="20201030 15:56:25.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.149" endtime="20201030 15:56:25.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.183" endtime="20201030 15:56:25.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.192" endtime="20201030 15:56:25.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.138" endtime="20201030 15:56:25.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.133" endtime="20201030 15:56:25.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.218" endtime="20201030 15:56:25.574"></status>
</kw>
<msg timestamp="20201030 15:56:25.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047369694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047412444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.214" endtime="20201030 15:56:25.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047369694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047412444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.584" endtime="20201030 15:56:25.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.603" endtime="20201030 15:56:25.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.207" endtime="20201030 15:56:25.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.202" endtime="20201030 15:56:25.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.621" level="INFO">${RESULT} = [{'diff': 4.275000000000112e-05}, {'diff': 4.344399999999665e-05}, {'diff': 4.2791000000000357e-05}, {'diff': 4.251400000000044e-05}, {'diff': 4.270800000000241e-05}, {'diff': 4.305600000000659e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:25.611" endtime="20201030 15:56:25.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:25.632" level="INFO">${ACCURACY} = {'diff': [4.275000000000112e-05, 4.344399999999665e-05, 4.2791000000000357e-05, 4.251400000000044e-05, 4.270800000000241e-05, 4.305600000000659e-05, 4.3068999999999746e-05, 4.2652999999996666e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 15:56:25.623" endtime="20201030 15:56:25.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.644" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:56:25.641" endtime="20201030 15:56:25.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.650" level="INFO">VALUE: [4.275000000000112e-05, 4.344399999999665e-05, 4.2791000000000357e-05, 4.251400000000044e-05, 4.270800000000241e-05, 4.305600000000659e-05, 4.3068999999999746e-05, 4.2652999999996666e-05, 4.341600000000445e-05, 4.2653000000003605e-05, 4.3360999999998706e-05, 4.2667000000003175e-05, 4.320799999999597e-05, 4.33059999999999e-05, 4.297199999999529e-05, 4.2888999999997346e-05, 4.2818999999999496e-05, 4.2833000000006005e-05, 4.347200000000273e-05, 4.2916999999996486e-05, 4.272200000000198e-05, 4.298599999999486e-05, 4.340200000000488e-05, 4.2653000000003605e-05, 4.348599999999536e-05, 4.295800000000266e-05, 4.3374999999998276e-05, 4.329200000000033e-05, 4.2487000000000774e-05, 4.300000000000137e-05, 4.251300000000097e-05, 4.3110999999998456e-05, 4.341599999999751e-05, 4.350000000000187e-05, 4.2611000000004895e-05, 4.305599999999965e-05, 4.2582999999998816e-05, 4.352800000000101e-05, 4.323600000000205e-05, 4.273600000000155e-05, 4.327800000000076e-05, 4.2959000000002134e-05, 4.297200000000223e-05, 4.2818999999999496e-05, 4.295799999999572e-05, 4.2930999999996056e-05, 4.309799999999836e-05, 4.272199999999504e-05, 4.3361000000005645e-05, 4.2638999999997096e-05]</msg>
<status status="PASS" starttime="20201030 15:56:25.646" endtime="20201030 15:56:25.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.634" endtime="20201030 15:56:25.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.662" endtime="20201030 15:56:25.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.658" endtime="20201030 15:56:25.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.655" endtime="20201030 15:56:25.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.128" endtime="20201030 15:56:25.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.127" endtime="20201030 15:56:25.688"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.711" endtime="20201030 15:56:25.731"></status>
</kw>
<msg timestamp="20201030 15:56:25.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.707" endtime="20201030 15:56:25.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.734" endtime="20201030 15:56:25.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.741" endtime="20201030 15:56:25.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.700" endtime="20201030 15:56:25.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.694" endtime="20201030 15:56:25.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.765" endtime="20201030 15:56:26.121"></status>
</kw>
<msg timestamp="20201030 15:56:26.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040290639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040334264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.761" endtime="20201030 15:56:26.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040290639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040334264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.131" endtime="20201030 15:56:26.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.150" endtime="20201030 15:56:26.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.754" endtime="20201030 15:56:26.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.749" endtime="20201030 15:56:26.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:26.167" level="INFO">${RESULT} = [{'diff': 4.3624999999998526e-05}, {'diff': 4.3652999999997666e-05}, {'diff': 4.4389000000005785e-05}, {'diff': 4.3860999999999206e-05}, {'diff': 4.370800000000341e-05}, {'diff': 4.4374999999999276e-0...</msg>
<status status="PASS" starttime="20201030 15:56:26.159" endtime="20201030 15:56:26.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:26.182" level="INFO">${ACCURACY} = {'diff': [4.3624999999998526e-05, 4.3652999999997666e-05, 4.4389000000005785e-05, 4.3860999999999206e-05, 4.370800000000341e-05, 4.4374999999999276e-05, 4.4138999999998596e-05, 4.3931000000003995e-05,...</msg>
<status status="PASS" starttime="20201030 15:56:26.172" endtime="20201030 15:56:26.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.193" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:56:26.191" endtime="20201030 15:56:26.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.198" level="INFO">VALUE: [4.3624999999998526e-05, 4.3652999999997666e-05, 4.4389000000005785e-05, 4.3860999999999206e-05, 4.370800000000341e-05, 4.4374999999999276e-05, 4.4138999999998596e-05, 4.3931000000003995e-05, 4.397199999999629e-05, 4.4110999999999456e-05, 4.401300000000247e-05, 4.449999999999593e-05, 4.35139999999945e-05, 4.3902999999997916e-05, 4.452700000000254e-05, 4.3555000000000677e-05, 4.400000000000237e-05, 4.373600000000255e-05, 4.376399999999475e-05, 4.45139999999955e-05, 4.431899999999406e-05, 4.3722999999995515e-05, 4.377800000000126e-05, 4.383399999999954e-05, 4.376399999999475e-05, 4.370799999999647e-05, 4.423600000000305e-05, 4.3846999999999636e-05, 4.3653000000004605e-05, 4.395799999999672e-05, 4.422199999999654e-05, 4.397200000000323e-05, 4.352800000000101e-05, 4.415199999999869e-05, 4.3582999999999816e-05, 4.427800000000176e-05, 4.426400000000219e-05, 4.4403000000005355e-05, 4.4055000000001177e-05, 4.367999999999733e-05, 4.4096999999999886e-05, 4.4388999999998846e-05, 4.420800000000391e-05, 4.390199999999844e-05, 4.395799999999672e-05, 4.4430999999997556e-05, 4.426400000000219e-05, 4.425000000000262e-05, 4.4069000000000746e-05, 4.4445000000004065e-05]</msg>
<status status="PASS" starttime="20201030 15:56:26.195" endtime="20201030 15:56:26.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.183" endtime="20201030 15:56:26.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:26.217" endtime="20201030 15:56:26.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.212" endtime="20201030 15:56:26.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.209" endtime="20201030 15:56:26.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.690" endtime="20201030 15:56:26.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.689" endtime="20201030 15:56:26.243"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.265" endtime="20201030 15:56:26.283"></status>
</kw>
<msg timestamp="20201030 15:56:26.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.262" endtime="20201030 15:56:26.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.286" endtime="20201030 15:56:26.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.292" endtime="20201030 15:56:26.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.255" endtime="20201030 15:56:26.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.249" endtime="20201030 15:56:26.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.315" endtime="20201030 15:56:26.665"></status>
</kw>
<msg timestamp="20201030 15:56:26.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039637597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039683056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.312" endtime="20201030 15:56:26.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039637597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039683056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.674" endtime="20201030 15:56:26.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.693" endtime="20201030 15:56:26.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.305" endtime="20201030 15:56:26.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.300" endtime="20201030 15:56:26.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:26.710" level="INFO">${RESULT} = [{'diff': 4.5459000000004635e-05}, {'diff': 4.507000000000122e-05}, {'diff': 4.495799999999772e-05}, {'diff': 4.504199999999514e-05}, {'diff': 4.529200000000233e-05}, {'diff': 4.465199999999919e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:26.702" endtime="20201030 15:56:26.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:26.720" level="INFO">${ACCURACY} = {'diff': [4.5459000000004635e-05, 4.507000000000122e-05, 4.495799999999772e-05, 4.504199999999514e-05, 4.529200000000233e-05, 4.465199999999919e-05, 4.509800000000036e-05, 4.4889000000006285e-05, 4.52...</msg>
<status status="PASS" starttime="20201030 15:56:26.712" endtime="20201030 15:56:26.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.730" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:56:26.728" endtime="20201030 15:56:26.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.736" level="INFO">VALUE: [4.5459000000004635e-05, 4.507000000000122e-05, 4.495799999999772e-05, 4.504199999999514e-05, 4.529200000000233e-05, 4.465199999999919e-05, 4.509800000000036e-05, 4.4889000000006285e-05, 4.522199999999754e-05, 4.520800000000491e-05, 4.475000000000312e-05, 4.493000000000552e-05, 4.454200000000158e-05, 4.473600000000355e-05, 4.5347000000001136e-05, 4.45139999999955e-05, 4.529199999999539e-05, 4.4722999999996516e-05, 4.5375000000000276e-05, 4.509699999999395e-05, 4.4861000000000206e-05, 4.448599999999636e-05, 4.465199999999919e-05, 4.505600000000165e-05, 4.548599999999736e-05, 4.477800000000226e-05, 4.542999999999908e-05, 4.520799999999797e-05, 4.529200000000233e-05, 4.4583000000000816e-05, 4.545800000000516e-05, 4.4833000000001066e-05, 4.5416999999998986e-05, 4.548599999999736e-05, 4.527800000000276e-05, 4.480500000000193e-05, 4.523599999999711e-05, 4.476399999999575e-05, 4.4694999999997376e-05, 4.4888999999999346e-05, 4.505600000000165e-05, 4.5181000000005245e-05, 4.463800000000656e-05, 4.5167000000005675e-05, 4.523599999999711e-05, 4.501300000000347e-05, 4.470799999999747e-05, 4.474999999999618e-05, 4.5194999999997876e-05, 4.477800000000226e-05]</msg>
<status status="PASS" starttime="20201030 15:56:26.733" endtime="20201030 15:56:26.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.721" endtime="20201030 15:56:26.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:26.758" endtime="20201030 15:56:26.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.747" endtime="20201030 15:56:26.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.742" endtime="20201030 15:56:26.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.245" endtime="20201030 15:56:26.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.243" endtime="20201030 15:56:26.788"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.841" endtime="20201030 15:56:26.890"></status>
</kw>
<msg timestamp="20201030 15:56:26.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.832" endtime="20201030 15:56:26.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.893" endtime="20201030 15:56:26.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.900" endtime="20201030 15:56:26.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.814" endtime="20201030 15:56:26.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.805" endtime="20201030 15:56:26.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.924" endtime="20201030 15:56:27.270"></status>
</kw>
<msg timestamp="20201030 15:56:27.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080634708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080680264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.921" endtime="20201030 15:56:27.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080634708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080680264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.280" endtime="20201030 15:56:27.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.299" endtime="20201030 15:56:27.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.913" endtime="20201030 15:56:27.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.908" endtime="20201030 15:56:27.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:27.316" level="INFO">${RESULT} = [{'diff': 4.555600000000215e-05}, {'diff': 4.647200000000573e-05}, {'diff': 4.602799999998963e-05}, {'diff': 4.616600000000026e-05}, {'diff': 4.6347000000002136e-05}, {'diff': 4.647200000000573e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:27.307" endtime="20201030 15:56:27.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:27.326" level="INFO">${ACCURACY} = {'diff': [4.555600000000215e-05, 4.647200000000573e-05, 4.602799999998963e-05, 4.616600000000026e-05, 4.6347000000002136e-05, 4.647200000000573e-05, 4.623600000000505e-05, 4.5887999999993934e-05, 4.60...</msg>
<status status="PASS" starttime="20201030 15:56:27.318" endtime="20201030 15:56:27.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.337" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:56:27.335" endtime="20201030 15:56:27.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.342" level="INFO">VALUE: [4.555600000000215e-05, 4.647200000000573e-05, 4.602799999998963e-05, 4.616600000000026e-05, 4.6347000000002136e-05, 4.647200000000573e-05, 4.623600000000505e-05, 4.5887999999993934e-05, 4.606899999999581e-05, 4.582000000000197e-05, 4.572199999999804e-05, 4.594400000000609e-05, 4.6361000000008645e-05, 4.565299999999273e-05, 4.597199999999135e-05, 4.576400000000369e-05, 4.6445000000006065e-05, 4.551400000001038e-05, 4.6083000000002317e-05, 4.582000000000197e-05, 4.6013999999997e-05, 4.573699999999015e-05, 4.645799999999922e-05, 4.626399999999031e-05, 4.555600000000215e-05, 4.5694999999998376e-05, 4.624999999999768e-05, 4.6166999999999736e-05, 4.61939999999994e-05, 4.6222999999998016e-05, 4.641699999999305e-05, 4.6375000000001276e-05, 4.5681000000005745e-05, 4.650000000000487e-05, 4.606999999999528e-05, 4.606899999999581e-05, 4.5667000000013114e-05, 4.6111000000001456e-05, 4.5709000000004885e-05, 4.579100000000336e-05, 4.630599999999596e-05, 4.6111000000001456e-05, 4.627799999999682e-05, 4.559699999999445e-05, 4.579200000000283e-05, 4.626399999999031e-05, 4.6430999999999556e-05, 4.620799999999203e-05, 4.576300000000422e-05, 4.6389000000007785e-05]</msg>
<status status="PASS" starttime="20201030 15:56:27.339" endtime="20201030 15:56:27.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.328" endtime="20201030 15:56:27.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:27.357" endtime="20201030 15:56:27.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.351" endtime="20201030 15:56:27.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.348" endtime="20201030 15:56:27.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.793" endtime="20201030 15:56:27.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.789" endtime="20201030 15:56:27.382"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.405" endtime="20201030 15:56:27.424"></status>
</kw>
<msg timestamp="20201030 15:56:27.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.402" endtime="20201030 15:56:27.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.428" endtime="20201030 15:56:27.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.434" endtime="20201030 15:56:27.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.394" endtime="20201030 15:56:27.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.389" endtime="20201030 15:56:27.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.458" endtime="20201030 15:56:27.805"></status>
</kw>
<msg timestamp="20201030 15:56:27.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039900069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039946903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.454" endtime="20201030 15:56:27.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039900069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039946903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.815" endtime="20201030 15:56:27.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.834" endtime="20201030 15:56:27.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.447" endtime="20201030 15:56:27.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.442" endtime="20201030 15:56:27.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:27.851" level="INFO">${RESULT} = [{'diff': 4.68339999999956e-05}, {'diff': 4.69860000000058e-05}, {'diff': 4.683299999999613e-05}, {'diff': 4.6875000000001776e-05}, {'diff': 4.7472999999999266e-05}, {'diff': 4.7445000000000126e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:27.842" endtime="20201030 15:56:27.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:27.862" level="INFO">${ACCURACY} = {'diff': [4.68339999999956e-05, 4.69860000000058e-05, 4.683299999999613e-05, 4.6875000000001776e-05, 4.7472999999999266e-05, 4.7445000000000126e-05, 4.716600000000126e-05, 4.705599999999671e-05, 4.730...</msg>
<status status="PASS" starttime="20201030 15:56:27.853" endtime="20201030 15:56:27.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.873" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:56:27.871" endtime="20201030 15:56:27.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.879" level="INFO">VALUE: [4.68339999999956e-05, 4.69860000000058e-05, 4.683299999999613e-05, 4.6875000000001776e-05, 4.7472999999999266e-05, 4.7445000000000126e-05, 4.716600000000126e-05, 4.705599999999671e-05, 4.73060000000039e-05, 4.647199999999879e-05, 4.729100000000486e-05, 4.701400000000494e-05, 4.718000000000083e-05, 4.702800000000451e-05, 4.681899999999656e-05, 4.744400000000065e-05, 4.695799999999972e-05, 4.733299999999663e-05, 4.6931000000000056e-05, 4.7361000000002706e-05, 4.683299999999613e-05, 4.724999999999868e-05, 4.681899999999656e-05, 4.7375000000002276e-05, 4.6694999999999376e-05, 4.7181000000000306e-05, 4.693000000000058e-05, 4.670799999999947e-05, 4.697199999999929e-05, 4.732000000000347e-05, 4.7375000000002276e-05, 4.665299999999373e-05, 4.711200000000193e-05, 4.705599999999671e-05, 4.666600000000076e-05, 4.7153000000001166e-05, 4.7167000000000736e-05, 4.676399999999775e-05, 4.682000000000297e-05, 4.674999999999818e-05, 4.718000000000083e-05, 4.744400000000065e-05, 4.676399999999775e-05, 4.672199999999904e-05, 4.680499999999699e-05, 4.73469999999962e-05, 4.7111000000002456e-05, 4.698599999999886e-05, 4.652799999999707e-05, 4.729100000000486e-05]</msg>
<status status="PASS" starttime="20201030 15:56:27.876" endtime="20201030 15:56:27.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.864" endtime="20201030 15:56:27.882"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:27.892" endtime="20201030 15:56:27.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.887" endtime="20201030 15:56:27.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.885" endtime="20201030 15:56:27.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.384" endtime="20201030 15:56:27.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.383" endtime="20201030 15:56:27.917"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.940" endtime="20201030 15:56:27.959"></status>
</kw>
<msg timestamp="20201030 15:56:27.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.937" endtime="20201030 15:56:27.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.963" endtime="20201030 15:56:27.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.969" endtime="20201030 15:56:27.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.929" endtime="20201030 15:56:27.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.923" endtime="20201030 15:56:27.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.993" endtime="20201030 15:56:28.338"></status>
</kw>
<msg timestamp="20201030 15:56:28.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040113278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040161792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.989" endtime="20201030 15:56:28.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040113278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040161792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.348" endtime="20201030 15:56:28.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.367" endtime="20201030 15:56:28.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.982" endtime="20201030 15:56:28.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.977" endtime="20201030 15:56:28.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:28.384" level="INFO">${RESULT} = [{'diff': 4.85139999999995e-05}, {'diff': 4.808300000000432e-05}, {'diff': 4.779099999999842e-05}, {'diff': 4.790299999999498e-05}, {'diff': 4.797200000000029e-05}, {'diff': 4.836099999999677e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:28.375" endtime="20201030 15:56:28.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:28.396" level="INFO">${ACCURACY} = {'diff': [4.85139999999995e-05, 4.808300000000432e-05, 4.779099999999842e-05, 4.790299999999498e-05, 4.797200000000029e-05, 4.836099999999677e-05, 4.799999999999943e-05, 4.780599999999746e-05, 4.79170...</msg>
<status status="PASS" starttime="20201030 15:56:28.386" endtime="20201030 15:56:28.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.407" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:56:28.405" endtime="20201030 15:56:28.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.412" level="INFO">VALUE: [4.85139999999995e-05, 4.808300000000432e-05, 4.779099999999842e-05, 4.790299999999498e-05, 4.797200000000029e-05, 4.836099999999677e-05, 4.799999999999943e-05, 4.780599999999746e-05, 4.7917000000001486e-05, 4.8181000000001306e-05, 4.8361000000003707e-05, 4.820800000000097e-05, 4.824999999999968e-05, 4.8111000000003457e-05, 4.806899999999781e-05, 4.776399999999875e-05, 4.824999999999968e-05, 4.7861000000003207e-05, 4.7611000000002957e-05, 4.7931000000001056e-05, 4.783299999999713e-05, 4.804099999999867e-05, 4.798599999999986e-05, 4.852799999999907e-05, 4.847200000000079e-05, 4.783299999999713e-05, 4.832000000000447e-05, 4.7875000000002776e-05, 4.779199999999789e-05, 4.80269999999991e-05, 4.8181000000001306e-05, 4.848600000000036e-05, 4.802799999999857e-05, 4.824999999999968e-05, 4.797200000000029e-05, 4.8459000000000696e-05, 4.824999999999968e-05, 4.806900000000475e-05, 4.8209000000000446e-05, 4.837499999999634e-05, 4.8167000000001736e-05, 4.833299999999763e-05, 4.78469999999967e-05, 4.7723000000006455e-05, 4.83060000000049e-05, 4.841699999999505e-05, 4.847199999999385e-05, 4.783300000000407e-05, 4.8181000000001306e-05, 4.797200000000029e-05]</msg>
<status status="PASS" starttime="20201030 15:56:28.409" endtime="20201030 15:56:28.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.398" endtime="20201030 15:56:28.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:28.425" endtime="20201030 15:56:28.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.421" endtime="20201030 15:56:28.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.418" endtime="20201030 15:56:28.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.919" endtime="20201030 15:56:28.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.918" endtime="20201030 15:56:28.450"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.473" endtime="20201030 15:56:28.493"></status>
</kw>
<msg timestamp="20201030 15:56:28.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.470" endtime="20201030 15:56:28.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.496" endtime="20201030 15:56:28.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.503" endtime="20201030 15:56:28.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.462" endtime="20201030 15:56:28.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.457" endtime="20201030 15:56:28.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.529" endtime="20201030 15:56:28.892"></status>
</kw>
<msg timestamp="20201030 15:56:28.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040295764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040344458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.525" endtime="20201030 15:56:28.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040295764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040344458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.902" endtime="20201030 15:56:28.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.921" endtime="20201030 15:56:28.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.517" endtime="20201030 15:56:28.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.512" endtime="20201030 15:56:28.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:28.939" level="INFO">${RESULT} = [{'diff': 4.86940000000019e-05}, {'diff': 4.931899999999906e-05}, {'diff': 4.863899999999616e-05}, {'diff': 4.887499999999684e-05}, {'diff': 4.926400000000025e-05}, {'diff': 4.880599999999846e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:28.930" endtime="20201030 15:56:28.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:28.948" level="INFO">${ACCURACY} = {'diff': [4.86940000000019e-05, 4.931899999999906e-05, 4.863899999999616e-05, 4.887499999999684e-05, 4.926400000000025e-05, 4.880599999999846e-05, 4.944400000000265e-05, 4.911200000000393e-05, 4.90829...</msg>
<status status="PASS" starttime="20201030 15:56:28.941" endtime="20201030 15:56:28.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.959" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:56:28.957" endtime="20201030 15:56:28.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.965" level="INFO">VALUE: [4.86940000000019e-05, 4.931899999999906e-05, 4.863899999999616e-05, 4.887499999999684e-05, 4.926400000000025e-05, 4.880599999999846e-05, 4.944400000000265e-05, 4.911200000000393e-05, 4.908299999999838e-05, 4.923600000000111e-05, 4.932000000000547e-05, 4.929099999999992e-05, 4.85139999999995e-05, 4.9153000000003166e-05, 4.858299999999788e-05, 4.8903000000002916e-05, 4.930499999999949e-05, 4.927799999999982e-05, 4.887499999999684e-05, 4.926400000000025e-05, 4.927799999999982e-05, 4.900000000000043e-05, 4.940299999999648e-05, 4.930500000000643e-05, 4.936099999999777e-05, 4.863899999999616e-05, 4.894400000000215e-05, 4.876399999999975e-05, 4.8959000000001196e-05, 4.912499999999709e-05, 4.9429999999996144e-05, 4.8931000000002056e-05, 4.933299999999863e-05, 4.915299999999623e-05, 4.895800000000172e-05, 4.900000000000043e-05, 4.898600000000086e-05, 4.904199999999914e-05, 4.952799999999313e-05, 4.944499999999519e-05, 4.868000000000233e-05, 4.893000000000258e-05, 4.9471999999994853e-05, 4.929199999999939e-05, 4.9179999999995894e-05, 4.933400000000504e-05, 4.8959000000001196e-05, 4.936099999999777e-05, 4.8959000000001196e-05, 4.8681000000001806e-05]</msg>
<status status="PASS" starttime="20201030 15:56:28.962" endtime="20201030 15:56:28.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.950" endtime="20201030 15:56:28.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:28.978" endtime="20201030 15:56:29.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.973" endtime="20201030 15:56:29.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.971" endtime="20201030 15:56:29.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.452" endtime="20201030 15:56:29.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.451" endtime="20201030 15:56:29.003"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.026" endtime="20201030 15:56:29.047"></status>
</kw>
<msg timestamp="20201030 15:56:29.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.023" endtime="20201030 15:56:29.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.051" endtime="20201030 15:56:29.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.057" endtime="20201030 15:56:29.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.015" endtime="20201030 15:56:29.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.010" endtime="20201030 15:56:29.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.081" endtime="20201030 15:56:29.425"></status>
</kw>
<msg timestamp="20201030 15:56:29.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041943125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041993236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:29.077" endtime="20201030 15:56:29.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041943125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041993236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:29.435" endtime="20201030 15:56:29.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.454" endtime="20201030 15:56:29.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.070" endtime="20201030 15:56:29.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.065" endtime="20201030 15:56:29.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:29.471" level="INFO">${RESULT} = [{'diff': 5.011100000000546e-05}, {'diff': 4.9973000000001766e-05}, {'diff': 4.95140000000005e-05}, {'diff': 4.975000000000118e-05}, {'diff': 4.958299999999888e-05}, {'diff': 4.9929999999996644e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:29.462" endtime="20201030 15:56:29.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:29.481" level="INFO">${ACCURACY} = {'diff': [5.011100000000546e-05, 4.9973000000001766e-05, 4.95140000000005e-05, 4.975000000000118e-05, 4.958299999999888e-05, 4.9929999999996644e-05, 4.9959000000002196e-05, 4.952800000000007e-05, 4.98...</msg>
<status status="PASS" starttime="20201030 15:56:29.474" endtime="20201030 15:56:29.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.492" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:56:29.490" endtime="20201030 15:56:29.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.497" level="INFO">VALUE: [5.011100000000546e-05, 4.9973000000001766e-05, 4.95140000000005e-05, 4.975000000000118e-05, 4.958299999999888e-05, 4.9929999999996644e-05, 4.9959000000002196e-05, 4.952800000000007e-05, 4.980499999999999e-05, 5.01940000000034e-05, 5.0443999999996714e-05, 5.0014000000001e-05, 5.008299999999938e-05, 4.958299999999888e-05, 5.052799999999413e-05, 5.038899999999791e-05, 4.954100000000017e-05, 4.973699999999415e-05, 5.0193999999996464e-05, 4.972200000000204e-05, 4.986100000000521e-05, 4.995800000000272e-05, 5.018000000000383e-05, 5.005500000000024e-05, 5.030599999999996e-05, 5.008300000000632e-05, 5.024999999999474e-05, 5.036100000000571e-05, 5.048600000000236e-05, 5.027699999999441e-05, 4.9667000000003236e-05, 5.030599999999996e-05, 4.999999999999449e-05, 4.997200000000229e-05, 5.0209000000002446e-05, 5.029200000000039e-05, 4.9653000000003666e-05, 4.975000000000118e-05, 5.011099999999852e-05, 4.9971999999995353e-05, 4.9653000000003666e-05, 4.9917000000003486e-05, 5.0193999999996464e-05, 4.975000000000118e-05, 5.036099999999877e-05, 5.023600000000211e-05, 5.0193999999996464e-05, 5.037499999999834e-05, 5.022200000000254e-05, 4.980599999999946e-05]</msg>
<status status="PASS" starttime="20201030 15:56:29.494" endtime="20201030 15:56:29.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.483" endtime="20201030 15:56:29.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:29.512" endtime="20201030 15:56:29.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.506" endtime="20201030 15:56:29.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.503" endtime="20201030 15:56:29.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.005" endtime="20201030 15:56:29.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.004" endtime="20201030 15:56:29.537"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.560" endtime="20201030 15:56:29.580"></status>
</kw>
<msg timestamp="20201030 15:56:29.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.557" endtime="20201030 15:56:29.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.583" endtime="20201030 15:56:29.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.589" endtime="20201030 15:56:29.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.549" endtime="20201030 15:56:29.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.544" endtime="20201030 15:56:29.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.613" endtime="20201030 15:56:29.967"></status>
</kw>
<msg timestamp="20201030 15:56:29.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040167986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040219458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:29.610" endtime="20201030 15:56:29.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040167986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040219458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:29.977" endtime="20201030 15:56:29.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.996" endtime="20201030 15:56:30.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.602" endtime="20201030 15:56:30.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.597" endtime="20201030 15:56:30.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:30.014" level="INFO">${RESULT} = [{'diff': 5.1471999999996854e-05}, {'diff': 5.148600000000336e-05}, {'diff': 5.080499999999405e-05}, {'diff': 5.137499999999934e-05}, {'diff': 5.0637999999998684e-05}, {'diff': 5.087499999999884e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:30.005" endtime="20201030 15:56:30.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:30.024" level="INFO">${ACCURACY} = {'diff': [5.1471999999996854e-05, 5.148600000000336e-05, 5.080499999999405e-05, 5.137499999999934e-05, 5.0637999999998684e-05, 5.087499999999884e-05, 5.136099999999977e-05, 5.0695000000003376e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 15:56:30.016" endtime="20201030 15:56:30.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.036" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:56:30.033" endtime="20201030 15:56:30.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.041" level="INFO">VALUE: [5.1471999999996854e-05, 5.148600000000336e-05, 5.080499999999405e-05, 5.137499999999934e-05, 5.0637999999998684e-05, 5.087499999999884e-05, 5.136099999999977e-05, 5.0695000000003376e-05, 5.127800000000182e-05, 5.138899999999891e-05, 5.102799999999463e-05, 5.0665999999997824e-05, 5.1403000000005417e-05, 5.130500000000149e-05, 5.1151999999998754e-05, 5.087499999999884e-05, 5.1429999999998144e-05, 5.109699999999995e-05, 5.1151999999998754e-05, 5.063899999999816e-05, 5.081900000000056e-05, 5.077800000000132e-05, 5.0667000000004236e-05, 5.126400000000225e-05, 5.1445000000004126e-05, 5.062499999999859e-05, 5.126400000000225e-05, 5.083300000000013e-05, 5.154200000000164e-05, 5.129200000000139e-05, 5.15140000000025e-05, 5.1207999999997034e-05, 5.129100000000192e-05, 5.0915999999998074e-05, 5.1151999999998754e-05, 5.059799999999892e-05, 5.107000000000028e-05, 5.1014000000002e-05, 5.062500000000553e-05, 5.150000000000293e-05, 5.123600000000311e-05, 5.1014000000002e-05, 5.072200000000304e-05, 5.097200000000329e-05, 5.058299999999988e-05, 5.136099999999977e-05, 5.1403000000005417e-05, 5.112500000000603e-05, 5.087499999999884e-05, 5.072299999999558e-05]</msg>
<status status="PASS" starttime="20201030 15:56:30.038" endtime="20201030 15:56:30.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.026" endtime="20201030 15:56:30.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:30.054" endtime="20201030 15:56:30.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.049" endtime="20201030 15:56:30.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.047" endtime="20201030 15:56:30.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.539" endtime="20201030 15:56:30.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.538" endtime="20201030 15:56:30.079"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.102" endtime="20201030 15:56:30.123"></status>
</kw>
<msg timestamp="20201030 15:56:30.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.099" endtime="20201030 15:56:30.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.126" endtime="20201030 15:56:30.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.132" endtime="20201030 15:56:30.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.091" endtime="20201030 15:56:30.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.086" endtime="20201030 15:56:30.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.156" endtime="20201030 15:56:30.513"></status>
</kw>
<msg timestamp="20201030 15:56:30.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040182319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040233986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:30.153" endtime="20201030 15:56:30.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040182319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040233986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:30.522" endtime="20201030 15:56:30.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.541" endtime="20201030 15:56:30.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.145" endtime="20201030 15:56:30.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.141" endtime="20201030 15:56:30.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:30.559" level="INFO">${RESULT} = [{'diff': 5.16669999999983e-05}, {'diff': 5.215299999999923e-05}, {'diff': 5.2249999999996743e-05}, {'diff': 5.168099999999787e-05}, {'diff': 5.202800000000257e-05}, {'diff': 5.241699999999905e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:30.550" endtime="20201030 15:56:30.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:30.570" level="INFO">${ACCURACY} = {'diff': [5.16669999999983e-05, 5.215299999999923e-05, 5.2249999999996743e-05, 5.168099999999787e-05, 5.202800000000257e-05, 5.241699999999905e-05, 5.165299999999873e-05, 5.177800000000232e-05, 5.1723...</msg>
<status status="PASS" starttime="20201030 15:56:30.561" endtime="20201030 15:56:30.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.581" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:56:30.579" endtime="20201030 15:56:30.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.587" level="INFO">VALUE: [5.16669999999983e-05, 5.215299999999923e-05, 5.2249999999996743e-05, 5.168099999999787e-05, 5.202800000000257e-05, 5.241699999999905e-05, 5.165299999999873e-05, 5.177800000000232e-05, 5.1723000000003516e-05, 5.211100000000052e-05, 5.205599999999477e-05, 5.227799999999588e-05, 5.212500000000009e-05, 5.2221999999997604e-05, 5.229099999999598e-05, 5.152800000000207e-05, 5.209700000000095e-05, 5.23340000000011e-05, 5.236200000000024e-05, 5.244499999999819e-05, 5.248600000000436e-05, 5.247299999999733e-05, 5.1693999999997964e-05, 5.202799999999563e-05, 5.209700000000095e-05, 5.2193999999998464e-05, 5.21940000000054e-05, 5.2207999999998034e-05, 5.206999999999434e-05, 5.1999999999996493e-05, 5.2471999999997854e-05, 5.229200000000239e-05, 5.183300000000113e-05, 5.155500000000174e-05, 5.193099999999812e-05, 5.188899999999941e-05, 5.236100000000077e-05, 5.238899999999991e-05, 5.237500000000034e-05, 5.229099999999598e-05, 5.188899999999941e-05, 5.1693999999997964e-05, 5.205500000000224e-05, 5.219499999999794e-05, 5.2223000000004016e-05, 5.204200000000214e-05, 5.154200000000164e-05, 5.229200000000239e-05, 5.152800000000207e-05, 5.208299999999444e-05]</msg>
<status status="PASS" starttime="20201030 15:56:30.584" endtime="20201030 15:56:30.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.572" endtime="20201030 15:56:30.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:30.600" endtime="20201030 15:56:30.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.595" endtime="20201030 15:56:30.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.593" endtime="20201030 15:56:30.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.081" endtime="20201030 15:56:30.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.080" endtime="20201030 15:56:30.625"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.648" endtime="20201030 15:56:30.668"></status>
</kw>
<msg timestamp="20201030 15:56:30.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.645" endtime="20201030 15:56:30.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.671" endtime="20201030 15:56:30.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.677" endtime="20201030 15:56:30.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.637" endtime="20201030 15:56:30.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.632" endtime="20201030 15:56:30.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.701" endtime="20201030 15:56:31.070"></status>
</kw>
<msg timestamp="20201030 15:56:31.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040184069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040237444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:30.698" endtime="20201030 15:56:31.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040184069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040237444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.080" endtime="20201030 15:56:31.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.099" endtime="20201030 15:56:31.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.691" endtime="20201030 15:56:31.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.686" endtime="20201030 15:56:31.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:31.116" level="INFO">${RESULT} = [{'diff': 5.33749999999944e-05}, {'diff': 5.337500000000134e-05}, {'diff': 5.337500000000134e-05}, {'diff': 5.322200000000554e-05}, {'diff': 5.25549999999958e-05}, {'diff': 5.302799999999663e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:31.107" endtime="20201030 15:56:31.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:31.126" level="INFO">${ACCURACY} = {'diff': [5.33749999999944e-05, 5.337500000000134e-05, 5.337500000000134e-05, 5.322200000000554e-05, 5.25549999999958e-05, 5.302799999999663e-05, 5.265299999999973e-05, 5.290299999999998e-05, 5.326400...</msg>
<status status="PASS" starttime="20201030 15:56:31.118" endtime="20201030 15:56:31.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.137" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:56:31.135" endtime="20201030 15:56:31.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.142" level="INFO">VALUE: [5.33749999999944e-05, 5.337500000000134e-05, 5.337500000000134e-05, 5.322200000000554e-05, 5.25549999999958e-05, 5.302799999999663e-05, 5.265299999999973e-05, 5.290299999999998e-05, 5.326400000000425e-05, 5.311200000000099e-05, 5.343099999999962e-05, 5.31669999999998e-05, 5.338900000000091e-05, 5.2735999999997674e-05, 5.3152000000000754e-05, 5.330499999999655e-05, 5.269499999999844e-05, 5.277799999999638e-05, 5.35140000000045e-05, 5.290299999999998e-05, 5.337500000000134e-05, 5.33340000000021e-05, 5.311100000000152e-05, 5.334699999999526e-05, 5.338900000000091e-05, 5.2693999999998964e-05, 5.3415999999993635e-05, 5.283300000000213e-05, 5.35140000000045e-05, 5.255600000000221e-05, 5.3459000000005696e-05, 5.340299999999354e-05, 5.277800000000332e-05, 5.261099999999408e-05, 5.2679999999999394e-05, 5.297299999999783e-05, 5.294499999999869e-05, 5.2971999999998354e-05, 5.273600000000461e-05, 5.287500000000084e-05, 5.35419999999967e-05, 5.3235999999998174e-05, 5.26669999999993e-05, 5.338899999999397e-05, 5.3457999999999284e-05, 5.331900000000306e-05, 5.332000000000253e-05, 5.327800000000382e-05, 5.3443999999999714e-05, 5.275000000000418e-05]</msg>
<status status="PASS" starttime="20201030 15:56:31.139" endtime="20201030 15:56:31.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.128" endtime="20201030 15:56:31.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:31.155" endtime="20201030 15:56:31.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.151" endtime="20201030 15:56:31.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.148" endtime="20201030 15:56:31.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.627" endtime="20201030 15:56:31.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.626" endtime="20201030 15:56:31.180"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.204" endtime="20201030 15:56:31.225"></status>
</kw>
<msg timestamp="20201030 15:56:31.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.200" endtime="20201030 15:56:31.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.228" endtime="20201030 15:56:31.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.235" endtime="20201030 15:56:31.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.193" endtime="20201030 15:56:31.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.187" endtime="20201030 15:56:31.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.258" endtime="20201030 15:56:31.604"></status>
</kw>
<msg timestamp="20201030 15:56:31.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041821986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041875958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.255" endtime="20201030 15:56:31.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041821986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041875958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.614" endtime="20201030 15:56:31.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.633" endtime="20201030 15:56:31.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.248" endtime="20201030 15:56:31.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.243" endtime="20201030 15:56:31.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:31.651" level="INFO">${RESULT} = [{'diff': 5.3971999999999354e-05}, {'diff': 5.4249999999998744e-05}, {'diff': 5.4165999999994385e-05}, {'diff': 5.4430000000001144e-05}, {'diff': 5.40419999999972e-05}, {'diff': 5.4277999999997883e-05...</msg>
<status status="PASS" starttime="20201030 15:56:31.642" endtime="20201030 15:56:31.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:31.661" level="INFO">${ACCURACY} = {'diff': [5.3971999999999354e-05, 5.4249999999998744e-05, 5.4165999999994385e-05, 5.4430000000001144e-05, 5.40419999999972e-05, 5.4277999999997883e-05, 5.431999999999659e-05, 5.436099999999583e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:56:31.653" endtime="20201030 15:56:31.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.672" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:56:31.669" endtime="20201030 15:56:31.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.677" level="INFO">VALUE: [5.3971999999999354e-05, 5.4249999999998744e-05, 5.4165999999994385e-05, 5.4430000000001144e-05, 5.40419999999972e-05, 5.4277999999997883e-05, 5.431999999999659e-05, 5.436099999999583e-05, 5.39869999999984e-05, 5.3971999999999354e-05, 5.413900000000166e-05, 5.3985999999998924e-05, 5.412500000000209e-05, 5.4499999999998994e-05, 5.413899999999472e-05, 5.387500000000184e-05, 5.386100000000227e-05, 5.394499999999969e-05, 5.355600000000321e-05, 5.4277999999997883e-05, 5.3916000000001074e-05, 5.412499999999515e-05, 5.438900000000191e-05, 5.3763999999997814e-05, 5.398600000000586e-05, 5.3971999999999354e-05, 5.405600000000371e-05, 5.454200000000464e-05, 5.3957999999999784e-05, 5.359700000000245e-05, 5.380599999999652e-05, 5.388900000000141e-05, 5.4235999999999174e-05, 5.404099999999773e-05, 5.4249999999998744e-05, 5.370899999999901e-05, 5.391700000000055e-05, 5.352800000000407e-05, 5.391700000000055e-05, 5.3721999999999104e-05, 5.362500000000159e-05, 5.362500000000159e-05, 5.430600000000396e-05, 5.397299999999883e-05, 5.355600000000321e-05, 5.381899999999662e-05, 5.390300000000098e-05, 5.408300000000338e-05, 5.409699999999601e-05, 5.418100000000037e-05]</msg>
<status status="PASS" starttime="20201030 15:56:31.674" endtime="20201030 15:56:31.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.662" endtime="20201030 15:56:31.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:31.691" endtime="20201030 15:56:31.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.685" endtime="20201030 15:56:31.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.683" endtime="20201030 15:56:31.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.183" endtime="20201030 15:56:31.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.181" endtime="20201030 15:56:31.717"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.740" endtime="20201030 15:56:31.760"></status>
</kw>
<msg timestamp="20201030 15:56:31.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.736" endtime="20201030 15:56:31.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.763" endtime="20201030 15:56:31.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.769" endtime="20201030 15:56:31.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.729" endtime="20201030 15:56:31.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.723" endtime="20201030 15:56:31.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.793" endtime="20201030 15:56:32.138"></status>
</kw>
<msg timestamp="20201030 15:56:32.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040231222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040286681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.790" endtime="20201030 15:56:32.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040231222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040286681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.147" endtime="20201030 15:56:32.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.167" endtime="20201030 15:56:32.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.782" endtime="20201030 15:56:32.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.778" endtime="20201030 15:56:32.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:32.184" level="INFO">${RESULT} = [{'diff': 5.545900000000076e-05}, {'diff': 5.512499999999615e-05}, {'diff': 5.461100000000302e-05}, {'diff': 5.505599999999777e-05}, {'diff': 5.513900000000266e-05}, {'diff': 5.504100000000567e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:32.175" endtime="20201030 15:56:32.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:32.195" level="INFO">${ACCURACY} = {'diff': [5.545900000000076e-05, 5.512499999999615e-05, 5.461100000000302e-05, 5.505599999999777e-05, 5.513900000000266e-05, 5.504100000000567e-05, 5.4944000000001214e-05, 5.515299999999529e-05, 5.488...</msg>
<status status="PASS" starttime="20201030 15:56:32.186" endtime="20201030 15:56:32.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.206" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:56:32.204" endtime="20201030 15:56:32.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.212" level="INFO">VALUE: [5.545900000000076e-05, 5.512499999999615e-05, 5.461100000000302e-05, 5.505599999999777e-05, 5.513900000000266e-05, 5.504100000000567e-05, 5.4944000000001214e-05, 5.515299999999529e-05, 5.488900000000241e-05, 5.530499999999855e-05, 5.4679999999994455e-05, 5.4916000000002074e-05, 5.4735999999999674e-05, 5.4694000000000964e-05, 5.538900000000291e-05, 5.458400000000335e-05, 5.4694000000000964e-05, 5.455600000000421e-05, 5.490299999999504e-05, 5.488899999999547e-05, 5.4972000000000354e-05, 5.461099999999608e-05, 5.4972000000000354e-05, 5.5499999999999994e-05, 5.545900000000076e-05, 5.504200000000514e-05, 5.515299999999529e-05, 5.5513999999999564e-05, 5.5041999999998203e-05, 5.51670000000018e-05, 5.5208000000001034e-05, 5.461100000000302e-05, 5.4791999999997953e-05, 5.46670000000013e-05, 5.5277999999998884e-05, 5.518100000000137e-05, 5.481899999999762e-05, 5.4735999999999674e-05, 5.484699999999676e-05, 5.4985999999999924e-05, 5.488900000000241e-05, 5.483299999999719e-05, 5.512500000000309e-05, 5.48340000000036e-05, 5.5236000000000174e-05, 5.554200000000564e-05, 5.502699999999916e-05, 5.457000000000378e-05, 5.4749999999999244e-05, 5.462499999999565e-05]</msg>
<status status="PASS" starttime="20201030 15:56:32.208" endtime="20201030 15:56:32.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.197" endtime="20201030 15:56:32.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:32.224" endtime="20201030 15:56:32.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.220" endtime="20201030 15:56:32.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.217" endtime="20201030 15:56:32.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.719" endtime="20201030 15:56:32.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.718" endtime="20201030 15:56:32.249"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.272" endtime="20201030 15:56:32.292"></status>
</kw>
<msg timestamp="20201030 15:56:32.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.269" endtime="20201030 15:56:32.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.296" endtime="20201030 15:56:32.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.302" endtime="20201030 15:56:32.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.262" endtime="20201030 15:56:32.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.256" endtime="20201030 15:56:32.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.326" endtime="20201030 15:56:32.672"></status>
</kw>
<msg timestamp="20201030 15:56:32.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040161319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040216903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.322" endtime="20201030 15:56:32.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040161319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040216903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.681" endtime="20201030 15:56:32.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.700" endtime="20201030 15:56:32.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.315" endtime="20201030 15:56:32.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.310" endtime="20201030 15:56:32.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:32.718" level="INFO">${RESULT} = [{'diff': 5.558399999999741e-05}, {'diff': 5.633399999999816e-05}, {'diff': 5.60549999999993e-05}, {'diff': 5.6415999999996636e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.6305999999999023e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:32.709" endtime="20201030 15:56:32.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:32.729" level="INFO">${ACCURACY} = {'diff': [5.558399999999741e-05, 5.633399999999816e-05, 5.60549999999993e-05, 5.6415999999996636e-05, 5.5777999999999384e-05, 5.6305999999999023e-05, 5.58749999999969e-05, 5.616699999999586e-05, 5.576...</msg>
<status status="PASS" starttime="20201030 15:56:32.720" endtime="20201030 15:56:32.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.740" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:56:32.738" endtime="20201030 15:56:32.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.746" level="INFO">VALUE: [5.558399999999741e-05, 5.633399999999816e-05, 5.60549999999993e-05, 5.6415999999996636e-05, 5.5777999999999384e-05, 5.6305999999999023e-05, 5.58749999999969e-05, 5.616699999999586e-05, 5.5763999999999814e-05, 5.637500000000434e-05, 5.61670000000028e-05, 5.5708000000001534e-05, 5.5763999999999814e-05, 5.608399999999791e-05, 5.641699999999611e-05, 5.638899999999697e-05, 5.611200000000399e-05, 5.638899999999697e-05, 5.5763999999999814e-05, 5.5750000000000244e-05, 5.5777999999999384e-05, 5.552800000000607e-05, 5.5986000000000924e-05, 5.5929999999995705e-05, 5.6277999999999884e-05, 5.612499999999715e-05, 5.5694000000001964e-05, 5.5915999999996135e-05, 5.627699999999347e-05, 5.612499999999715e-05, 5.629099999999998e-05, 5.6055999999998773e-05, 5.633399999999816e-05, 5.609800000000442e-05, 5.612499999999715e-05, 5.566699999999536e-05, 5.5888000000003935e-05, 5.654100000000023e-05, 5.601300000000059e-05, 5.6041999999999204e-05, 5.640299999999654e-05, 5.593100000000212e-05, 5.6236000000001174e-05, 5.563899999999622e-05, 5.5555999999998273e-05, 5.5972000000001354e-05, 5.622300000000108e-05, 5.6222000000001604e-05, 5.6485999999994485e-05, 5.619500000000194e-05]</msg>
<status status="PASS" starttime="20201030 15:56:32.743" endtime="20201030 15:56:32.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.731" endtime="20201030 15:56:32.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:32.758" endtime="20201030 15:56:32.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.754" endtime="20201030 15:56:32.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.751" endtime="20201030 15:56:32.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.252" endtime="20201030 15:56:32.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.250" endtime="20201030 15:56:32.784"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.807" endtime="20201030 15:56:32.828"></status>
</kw>
<msg timestamp="20201030 15:56:32.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.803" endtime="20201030 15:56:32.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.831" endtime="20201030 15:56:32.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.837" endtime="20201030 15:56:32.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.796" endtime="20201030 15:56:32.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.790" endtime="20201030 15:56:32.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.862" endtime="20201030 15:56:33.221"></status>
</kw>
<msg timestamp="20201030 15:56:33.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03999275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040049931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:32.858" endtime="20201030 15:56:33.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03999275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040049931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:33.231" endtime="20201030 15:56:33.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.250" endtime="20201030 15:56:33.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.850" endtime="20201030 15:56:33.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.846" endtime="20201030 15:56:33.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:33.267" level="INFO">${RESULT} = [{'diff': 5.718099999999643e-05}, {'diff': 5.695900000000226e-05}, {'diff': 5.7069999999999343e-05}, {'diff': 5.663899999999722e-05}, {'diff': 5.706899999999987e-05}, {'diff': 5.6514000000000564e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:33.258" endtime="20201030 15:56:33.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:33.277" level="INFO">${ACCURACY} = {'diff': [5.718099999999643e-05, 5.695900000000226e-05, 5.7069999999999343e-05, 5.663899999999722e-05, 5.706899999999987e-05, 5.6514000000000564e-05, 5.684799999999823e-05, 5.7083999999998913e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 15:56:33.270" endtime="20201030 15:56:33.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.288" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:56:33.286" endtime="20201030 15:56:33.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.294" level="INFO">VALUE: [5.718099999999643e-05, 5.695900000000226e-05, 5.7069999999999343e-05, 5.663899999999722e-05, 5.706899999999987e-05, 5.6514000000000564e-05, 5.684799999999823e-05, 5.7083999999998913e-05, 5.738899999999797e-05, 5.71670000000038e-05, 5.6721999999995165e-05, 5.654100000000023e-05, 5.658299999999894e-05, 5.727700000000141e-05, 5.712499999999815e-05, 5.740300000000448e-05, 5.7306000000000024e-05, 5.729099999999404e-05, 5.6736000000001674e-05, 5.7319999999999593e-05, 5.6764000000000814e-05, 5.6665999999996886e-05, 5.69870000000014e-05, 5.7042000000000204e-05, 5.693100000000312e-05, 5.6778000000000384e-05, 5.7014000000001064e-05, 5.68470000000057e-05, 5.754100000000123e-05, 5.6680000000003394e-05, 5.7444000000003714e-05, 5.7208000000003034e-05, 5.729100000000098e-05, 5.688899999999747e-05, 5.747300000000233e-05, 5.665299999999679e-05, 5.6764000000000814e-05, 5.6736000000001674e-05, 5.7249999999994805e-05, 5.748699999999496e-05, 5.662500000000459e-05, 5.7028000000000634e-05, 5.6694000000002964e-05, 5.706899999999987e-05, 5.659799999999798e-05, 5.7486000000002424e-05, 5.73749999999984e-05, 5.6541999999999704e-05, 5.677700000000091e-05, 5.6693999999996025e-05]</msg>
<status status="PASS" starttime="20201030 15:56:33.290" endtime="20201030 15:56:33.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.279" endtime="20201030 15:56:33.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:33.306" endtime="20201030 15:56:33.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.302" endtime="20201030 15:56:33.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.300" endtime="20201030 15:56:33.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.786" endtime="20201030 15:56:33.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.785" endtime="20201030 15:56:33.332"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.355" endtime="20201030 15:56:33.378"></status>
</kw>
<msg timestamp="20201030 15:56:33.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.352" endtime="20201030 15:56:33.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.381" endtime="20201030 15:56:33.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.387" endtime="20201030 15:56:33.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.344" endtime="20201030 15:56:33.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.339" endtime="20201030 15:56:33.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.411" endtime="20201030 15:56:33.772"></status>
</kw>
<msg timestamp="20201030 15:56:33.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041878889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041936889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:33.408" endtime="20201030 15:56:33.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041878889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041936889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:33.782" endtime="20201030 15:56:33.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.803" endtime="20201030 15:56:33.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.400" endtime="20201030 15:56:33.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.396" endtime="20201030 15:56:33.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:33.821" level="INFO">${RESULT} = [{'diff': 5.7999999999995555e-05}, {'diff': 5.762500000000559e-05}, {'diff': 5.7986000000002924e-05}, {'diff': 5.7957999999996845e-05}, {'diff': 5.812499999999915e-05}, {'diff': 5.84870000000029e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:33.812" endtime="20201030 15:56:33.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:33.831" level="INFO">${ACCURACY} = {'diff': [5.7999999999995555e-05, 5.762500000000559e-05, 5.7986000000002924e-05, 5.7957999999996845e-05, 5.812499999999915e-05, 5.84870000000029e-05, 5.79870000000024e-05, 5.8083999999999913e-05, 5.80...</msg>
<status status="PASS" starttime="20201030 15:56:33.823" endtime="20201030 15:56:33.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.842" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:56:33.840" endtime="20201030 15:56:33.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.847" level="INFO">VALUE: [5.7999999999995555e-05, 5.762500000000559e-05, 5.7986000000002924e-05, 5.7957999999996845e-05, 5.812499999999915e-05, 5.84870000000029e-05, 5.79870000000024e-05, 5.8083999999999913e-05, 5.8070000000000344e-05, 5.8485999999996485e-05, 5.840299999999854e-05, 5.811099999999958e-05, 5.8320000000000594e-05, 5.847299999999639e-05, 5.7749999999995305e-05, 5.7943999999997275e-05, 5.811099999999958e-05, 5.8416000000005575e-05, 5.8221999999996665e-05, 5.7666000000004825e-05, 5.840300000000548e-05, 5.761099999999908e-05, 5.8042000000001204e-05, 5.840299999999854e-05, 5.759700000000645e-05, 5.7693999999997025e-05, 5.762499999999865e-05, 5.819500000000394e-05, 5.8207999999997095e-05, 5.7763999999994875e-05, 5.766699999999736e-05, 5.7985999999995985e-05, 5.8179999999997956e-05, 5.8235999999996235e-05, 5.7708000000003534e-05, 5.7583999999999413e-05, 5.802700000000216e-05, 5.805499999999436e-05, 5.8486000000003424e-05, 5.7694000000003964e-05, 5.7986000000002924e-05, 5.7749999999995305e-05, 5.788899999999847e-05, 5.8513999999995625e-05, 5.7806000000000524e-05, 5.7806000000000524e-05, 5.8514000000002564e-05, 5.7985999999995985e-05, 5.831900000000112e-05, 5.790300000000498e-05]</msg>
<status status="PASS" starttime="20201030 15:56:33.844" endtime="20201030 15:56:33.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.833" endtime="20201030 15:56:33.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:33.866" endtime="20201030 15:56:33.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.856" endtime="20201030 15:56:33.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.853" endtime="20201030 15:56:33.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.334" endtime="20201030 15:56:33.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.333" endtime="20201030 15:56:33.892"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.916" endtime="20201030 15:56:33.936"></status>
</kw>
<msg timestamp="20201030 15:56:33.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.912" endtime="20201030 15:56:33.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.940" endtime="20201030 15:56:33.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.946" endtime="20201030 15:56:33.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.905" endtime="20201030 15:56:33.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.898" endtime="20201030 15:56:33.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.970" endtime="20201030 15:56:34.317"></status>
</kw>
<msg timestamp="20201030 15:56:34.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041929347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041988472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:33.966" endtime="20201030 15:56:34.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041929347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041988472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:34.326" endtime="20201030 15:56:34.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.346" endtime="20201030 15:56:34.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.959" endtime="20201030 15:56:34.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.954" endtime="20201030 15:56:34.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:34.363" level="INFO">${RESULT} = [{'diff': 5.912500000000015e-05}, {'diff': 5.8666000000005825e-05}, {'diff': 5.9457999999998346e-05}, {'diff': 5.941700000000605e-05}, {'diff': 5.936100000000083e-05}, {'diff': 5.88749999999999e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:34.354" endtime="20201030 15:56:34.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:34.374" level="INFO">${ACCURACY} = {'diff': [5.912500000000015e-05, 5.8666000000005825e-05, 5.9457999999998346e-05, 5.941700000000605e-05, 5.936100000000083e-05, 5.88749999999999e-05, 5.943099999999868e-05, 5.913900000000666e-05, 5.887...</msg>
<status status="PASS" starttime="20201030 15:56:34.365" endtime="20201030 15:56:34.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.385" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:56:34.383" endtime="20201030 15:56:34.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.391" level="INFO">VALUE: [5.912500000000015e-05, 5.8666000000005825e-05, 5.9457999999998346e-05, 5.941700000000605e-05, 5.936100000000083e-05, 5.88749999999999e-05, 5.943099999999868e-05, 5.913900000000666e-05, 5.88749999999999e-05, 5.858300000000094e-05, 5.8750000000003244e-05, 5.9362000000000303e-05, 5.862500000000659e-05, 5.8749999999996305e-05, 5.893099999999818e-05, 5.93750000000004e-05, 5.9415999999999636e-05, 5.8901999999999566e-05, 5.9486000000004424e-05, 5.9415999999999636e-05, 5.912500000000015e-05, 5.9457999999998346e-05, 5.908300000000144e-05, 5.952700000000366e-05, 5.8749999999996305e-05, 5.929100000000298e-05, 5.9235999999997235e-05, 5.908300000000144e-05, 5.86670000000053e-05, 5.9056000000001774e-05, 5.863899999999922e-05, 5.8736000000003674e-05, 5.9306000000002024e-05, 5.9194000000005464e-05, 5.915300000000623e-05, 5.862499999999965e-05, 5.916699999999886e-05, 5.938899999999997e-05, 5.895900000000426e-05, 5.9277999999995945e-05, 5.90550000000023e-05, 5.902700000000316e-05, 5.8985999999996985e-05, 5.9264000000003314e-05, 5.909700000000101e-05, 5.938899999999997e-05, 5.888899999999947e-05, 5.9042000000002204e-05, 5.895899999999732e-05, 5.9221999999997665e-05]</msg>
<status status="PASS" starttime="20201030 15:56:34.388" endtime="20201030 15:56:34.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.376" endtime="20201030 15:56:34.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:34.404" endtime="20201030 15:56:34.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.399" endtime="20201030 15:56:34.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.397" endtime="20201030 15:56:34.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.894" endtime="20201030 15:56:34.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.893" endtime="20201030 15:56:34.429"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.452" endtime="20201030 15:56:34.472"></status>
</kw>
<msg timestamp="20201030 15:56:34.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:34.449" endtime="20201030 15:56:34.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:34.475" endtime="20201030 15:56:34.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.482" endtime="20201030 15:56:34.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.441" endtime="20201030 15:56:34.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.435" endtime="20201030 15:56:34.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.505" endtime="20201030 15:56:34.852"></status>
</kw>
<msg timestamp="20201030 15:56:34.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040051583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040111847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:34.502" endtime="20201030 15:56:34.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040051583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040111847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:34.861" endtime="20201030 15:56:34.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.880" endtime="20201030 15:56:34.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.495" endtime="20201030 15:56:34.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.490" endtime="20201030 15:56:34.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:34.898" level="INFO">${RESULT} = [{'diff': 6.0263999999997375e-05}, {'diff': 6.016699999999986e-05}, {'diff': 6.0514000000004564e-05}, {'diff': 5.987499999999396e-05}, {'diff': 6.005499999999636e-05}, {'diff': 6.031900000000312e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:34.889" endtime="20201030 15:56:34.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:34.909" level="INFO">${ACCURACY} = {'diff': [6.0263999999997375e-05, 6.016699999999986e-05, 6.0514000000004564e-05, 5.987499999999396e-05, 6.005499999999636e-05, 6.031900000000312e-05, 6.052699999999772e-05, 6.011100000000158e-05, 5.98...</msg>
<status status="PASS" starttime="20201030 15:56:34.900" endtime="20201030 15:56:34.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.920" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:56:34.918" endtime="20201030 15:56:34.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.926" level="INFO">VALUE: [6.0263999999997375e-05, 6.016699999999986e-05, 6.0514000000004564e-05, 5.987499999999396e-05, 6.005499999999636e-05, 6.031900000000312e-05, 6.052699999999772e-05, 6.011100000000158e-05, 5.984700000000176e-05, 6.0194999999999e-05, 5.9764000000003814e-05, 5.961100000000108e-05, 5.96949999999985e-05, 6.027699999999747e-05, 6.0221999999998665e-05, 6.0485999999998485e-05, 5.9792000000002954e-05, 5.98750000000009e-05, 6.056900000000337e-05, 6.026300000000484e-05, 5.977700000000391e-05, 6.013900000000072e-05, 6.008300000000244e-05, 6.0235999999998235e-05, 6.013900000000072e-05, 6.047299999999839e-05, 6.038900000000097e-05, 5.961100000000108e-05, 5.9569999999994905e-05, 6.0471999999998916e-05, 6.019500000000594e-05, 6.0236000000005174e-05, 6.0013999999997125e-05, 6.012500000000115e-05, 5.959700000000151e-05, 6.0194999999999e-05, 6.033300000000269e-05, 5.968099999999893e-05, 6.0235999999998235e-05, 5.98750000000009e-05, 6.0041999999996265e-05, 5.9791999999996015e-05, 5.9986000000004924e-05, 5.9679999999999456e-05, 6.006900000000287e-05, 6.0249999999997805e-05, 5.962499999999371e-05, 5.98750000000009e-05, 6.03750000000014e-05, 6.0500000000004994e-05]</msg>
<status status="PASS" starttime="20201030 15:56:34.923" endtime="20201030 15:56:34.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.911" endtime="20201030 15:56:34.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:34.940" endtime="20201030 15:56:34.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.935" endtime="20201030 15:56:34.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.932" endtime="20201030 15:56:34.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.431" endtime="20201030 15:56:34.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.430" endtime="20201030 15:56:34.966"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.989" endtime="20201030 15:56:35.010"></status>
</kw>
<msg timestamp="20201030 15:56:35.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:34.985" endtime="20201030 15:56:35.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:35.014" endtime="20201030 15:56:35.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.020" endtime="20201030 15:56:35.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.978" endtime="20201030 15:56:35.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.972" endtime="20201030 15:56:35.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.044" endtime="20201030 15:56:35.404"></status>
</kw>
<msg timestamp="20201030 15:56:35.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040729708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040791125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:35.040" endtime="20201030 15:56:35.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040729708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040791125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:35.414" endtime="20201030 15:56:35.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.433" endtime="20201030 15:56:35.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.033" endtime="20201030 15:56:35.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.028" endtime="20201030 15:56:35.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:35.450" level="INFO">${RESULT} = [{'diff': 6.141699999999417e-05}, {'diff': 6.0721999999999166e-05}, {'diff': 6.112499999999521e-05}, {'diff': 6.0791999999997015e-05}, {'diff': 6.131900000000412e-05}, {'diff': 6.054100000000423e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:35.441" endtime="20201030 15:56:35.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:35.460" level="INFO">${ACCURACY} = {'diff': [6.141699999999417e-05, 6.0721999999999166e-05, 6.112499999999521e-05, 6.0791999999997015e-05, 6.131900000000412e-05, 6.054100000000423e-05, 6.0777999999997445e-05, 6.151399999999863e-05, 6.1...</msg>
<status status="PASS" starttime="20201030 15:56:35.452" endtime="20201030 15:56:35.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.471" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:56:35.469" endtime="20201030 15:56:35.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.476" level="INFO">VALUE: [6.141699999999417e-05, 6.0721999999999166e-05, 6.112499999999521e-05, 6.0791999999997015e-05, 6.131900000000412e-05, 6.054100000000423e-05, 6.0777999999997445e-05, 6.151399999999863e-05, 6.130499999999761e-05, 6.115200000000182e-05, 6.0764000000004814e-05, 6.115300000000129e-05, 6.130599999999709e-05, 6.106900000000387e-05, 6.126399999999838e-05, 6.115300000000129e-05, 6.090300000000104e-05, 6.119400000000053e-05, 6.084700000000276e-05, 6.0777999999997445e-05, 6.13750000000024e-05, 6.0707999999999596e-05, 6.12080000000001e-05, 6.140300000000154e-05, 6.12499999999988e-05, 6.0736000000005674e-05, 6.140300000000154e-05, 6.061100000000208e-05, 6.086100000000233e-05, 6.1027999999997695e-05, 6.0958000000006785e-05, 6.149999999999906e-05, 6.134699999999632e-05, 6.12499999999988e-05, 6.140300000000154e-05, 6.112499999999521e-05, 6.101299999999865e-05, 6.072299999999864e-05, 6.10829999999965e-05, 6.140300000000154e-05, 6.0680000000000456e-05, 6.12499999999988e-05, 6.13750000000024e-05, 6.151400000000556e-05, 6.084700000000276e-05, 6.0694000000000026e-05, 6.151399999999863e-05, 6.063900000000122e-05, 6.108300000000344e-05, 6.144400000000078e-05]</msg>
<status status="PASS" starttime="20201030 15:56:35.473" endtime="20201030 15:56:35.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.462" endtime="20201030 15:56:35.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:35.489" endtime="20201030 15:56:35.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.485" endtime="20201030 15:56:35.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.482" endtime="20201030 15:56:35.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.968" endtime="20201030 15:56:35.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.966" endtime="20201030 15:56:35.515"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.538" endtime="20201030 15:56:35.560"></status>
</kw>
<msg timestamp="20201030 15:56:35.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:35.534" endtime="20201030 15:56:35.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:35.564" endtime="20201030 15:56:35.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.570" endtime="20201030 15:56:35.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.527" endtime="20201030 15:56:35.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.521" endtime="20201030 15:56:35.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.594" endtime="20201030 15:56:35.950"></status>
</kw>
<msg timestamp="20201030 15:56:35.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041844944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041906556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:35.590" endtime="20201030 15:56:35.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041844944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041906556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:35.960" endtime="20201030 15:56:35.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.980" endtime="20201030 15:56:35.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.583" endtime="20201030 15:56:35.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.578" endtime="20201030 15:56:35.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:35.998" level="INFO">${RESULT} = [{'diff': 6.161199999999561e-05}, {'diff': 6.248600000000049e-05}, {'diff': 6.16950000000005e-05}, {'diff': 6.198599999999999e-05}, {'diff': 6.187499999999596e-05}, {'diff': 6.222200000000067e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:35.989" endtime="20201030 15:56:35.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:36.008" level="INFO">${ACCURACY} = {'diff': [6.161199999999561e-05, 6.248600000000049e-05, 6.16950000000005e-05, 6.198599999999999e-05, 6.187499999999596e-05, 6.222200000000067e-05, 6.163899999999528e-05, 6.176399999999888e-05, 6.24580...</msg>
<status status="PASS" starttime="20201030 15:56:36.000" endtime="20201030 15:56:36.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.019" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:56:36.016" endtime="20201030 15:56:36.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.024" level="INFO">VALUE: [6.161199999999561e-05, 6.248600000000049e-05, 6.16950000000005e-05, 6.198599999999999e-05, 6.187499999999596e-05, 6.222200000000067e-05, 6.163899999999528e-05, 6.176399999999888e-05, 6.245800000000135e-05, 6.156899999999743e-05, 6.237499999999646e-05, 6.233399999999722e-05, 6.17499999999993e-05, 6.20279999999987e-05, 6.209699999999707e-05, 6.212499999999621e-05, 6.161200000000255e-05, 6.184699999999682e-05, 6.212500000000315e-05, 6.233299999999775e-05, 6.199999999999956e-05, 6.229199999999852e-05, 6.236099999999689e-05, 6.211099999999664e-05, 6.22499999999998e-05, 6.247200000000092e-05, 6.25279999999992e-05, 6.161100000000308e-05, 6.20550000000053e-05, 6.213900000000272e-05, 6.195900000000032e-05, 6.172200000000017e-05, 6.20550000000053e-05, 6.195900000000032e-05, 6.251399999999963e-05, 6.19029999999951e-05, 6.180499999999811e-05, 6.245799999999441e-05, 6.155499999999786e-05, 6.18620000000028e-05, 6.173599999999974e-05, 6.190300000000204e-05, 6.17629999999994e-05, 6.234699999999732e-05, 6.237499999999646e-05, 6.223600000000024e-05, 6.223600000000024e-05, 6.211100000000358e-05, 6.191700000000161e-05, 6.240300000000254e-05]</msg>
<status status="PASS" starttime="20201030 15:56:36.021" endtime="20201030 15:56:36.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.010" endtime="20201030 15:56:36.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:36.039" endtime="20201030 15:56:36.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.033" endtime="20201030 15:56:36.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.030" endtime="20201030 15:56:36.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.517" endtime="20201030 15:56:36.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.516" endtime="20201030 15:56:36.064"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.087" endtime="20201030 15:56:36.109"></status>
</kw>
<msg timestamp="20201030 15:56:36.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.084" endtime="20201030 15:56:36.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.112" endtime="20201030 15:56:36.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.118" endtime="20201030 15:56:36.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.076" endtime="20201030 15:56:36.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.071" endtime="20201030 15:56:36.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.142" endtime="20201030 15:56:36.498"></status>
</kw>
<msg timestamp="20201030 15:56:36.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040418347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040481125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:36.139" endtime="20201030 15:56:36.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040418347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040481125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:36.508" endtime="20201030 15:56:36.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.527" endtime="20201030 15:56:36.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.131" endtime="20201030 15:56:36.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.127" endtime="20201030 15:56:36.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:36.544" level="INFO">${RESULT} = [{'diff': 6.277799999999945e-05}, {'diff': 6.336099999999789e-05}, {'diff': 6.291700000000261e-05}, {'diff': 6.290200000000357e-05}, {'diff': 6.269400000000203e-05}, {'diff': 6.333299999999875e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:36.535" endtime="20201030 15:56:36.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:36.555" level="INFO">${ACCURACY} = {'diff': [6.277799999999945e-05, 6.336099999999789e-05, 6.291700000000261e-05, 6.290200000000357e-05, 6.269400000000203e-05, 6.333299999999875e-05, 6.341699999999617e-05, 6.322200000000167e-05, 6.2917...</msg>
<status status="PASS" starttime="20201030 15:56:36.546" endtime="20201030 15:56:36.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.566" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:56:36.564" endtime="20201030 15:56:36.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.572" level="INFO">VALUE: [6.277799999999945e-05, 6.336099999999789e-05, 6.291700000000261e-05, 6.290200000000357e-05, 6.269400000000203e-05, 6.333299999999875e-05, 6.341699999999617e-05, 6.322200000000167e-05, 6.291700000000261e-05, 6.331900000000612e-05, 6.348599999999455e-05, 6.304099999999979e-05, 6.333399999999823e-05, 6.334699999999832e-05, 6.32080000000021e-05, 6.33750000000044e-05, 6.286100000000433e-05, 6.29029999999961e-05, 6.281999999999816e-05, 6.305499999999936e-05, 6.354100000000029e-05, 6.347199999999498e-05, 6.30829999999985e-05, 6.277799999999945e-05, 6.348599999999455e-05, 6.315299999999635e-05, 6.30699999999984e-05, 6.279199999999902e-05, 6.352799999999326e-05, 6.288900000000347e-05, 6.336099999999789e-05, 6.297200000000142e-05, 6.327799999999995e-05, 6.300000000000056e-05, 6.276399999999988e-05, 6.341699999999617e-05, 6.312500000000415e-05, 6.347199999999498e-05, 6.273600000000074e-05, 6.309700000000501e-05, 6.276399999999988e-05, 6.256899999999843e-05, 6.347199999999498e-05, 6.312500000000415e-05, 6.30279999999997e-05, 6.256899999999843e-05, 6.288900000000347e-05, 6.345900000000182e-05, 6.312500000000415e-05, 6.336099999999789e-05]</msg>
<status status="PASS" starttime="20201030 15:56:36.569" endtime="20201030 15:56:36.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.557" endtime="20201030 15:56:36.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:36.584" endtime="20201030 15:56:36.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.580" endtime="20201030 15:56:36.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.577" endtime="20201030 15:56:36.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.066" endtime="20201030 15:56:36.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.065" endtime="20201030 15:56:36.610"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.633" endtime="20201030 15:56:36.654"></status>
</kw>
<msg timestamp="20201030 15:56:36.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.629" endtime="20201030 15:56:36.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.657" endtime="20201030 15:56:36.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.664" endtime="20201030 15:56:36.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.622" endtime="20201030 15:56:36.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.616" endtime="20201030 15:56:36.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.687" endtime="20201030 15:56:37.049"></status>
</kw>
<msg timestamp="20201030 15:56:37.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040109778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040173792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:36.684" endtime="20201030 15:56:37.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040109778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040173792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:37.059" endtime="20201030 15:56:37.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.077" endtime="20201030 15:56:37.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.677" endtime="20201030 15:56:37.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.672" endtime="20201030 15:56:37.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:37.095" level="INFO">${RESULT} = [{'diff': 6.401400000000113e-05}, {'diff': 6.370799999999566e-05}, {'diff': 6.395900000000232e-05}, {'diff': 6.408399999999898e-05}, {'diff': 6.398700000000146e-05}, {'diff': 6.363900000000422e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:37.086" endtime="20201030 15:56:37.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:37.107" level="INFO">${ACCURACY} = {'diff': [6.401400000000113e-05, 6.370799999999566e-05, 6.395900000000232e-05, 6.408399999999898e-05, 6.398700000000146e-05, 6.363900000000422e-05, 6.373600000000174e-05, 6.365299999999685e-05, 6.4124...</msg>
<status status="PASS" starttime="20201030 15:56:37.097" endtime="20201030 15:56:37.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.118" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:56:37.115" endtime="20201030 15:56:37.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.123" level="INFO">VALUE: [6.401400000000113e-05, 6.370799999999566e-05, 6.395900000000232e-05, 6.408399999999898e-05, 6.398700000000146e-05, 6.363900000000422e-05, 6.373600000000174e-05, 6.365299999999685e-05, 6.412499999999821e-05, 6.40280000000007e-05, 6.372199999999523e-05, 6.397200000000242e-05, 6.451400000000163e-05, 6.441699999999717e-05, 6.42500000000018e-05, 6.436099999999889e-05, 6.411100000000558e-05, 6.42500000000018e-05, 6.455500000000086e-05, 6.431900000000018e-05, 6.44029999999976e-05, 6.394499999999581e-05, 6.420900000000257e-05, 6.43750000000054e-05, 6.451400000000163e-05, 6.436199999999836e-05, 6.447199999999598e-05, 6.409700000000601e-05, 6.427800000000095e-05, 6.395800000000285e-05, 6.408399999999898e-05, 6.366699999999642e-05, 6.404199999999333e-05, 6.377800000000045e-05, 6.43479999999988e-05, 6.363899999999728e-05, 6.451400000000163e-05, 6.355499999999986e-05, 6.452700000000172e-05, 6.391699999999667e-05, 6.40829999999995e-05, 6.441600000000464e-05, 6.427800000000095e-05, 6.38750000000049e-05, 6.413899999999778e-05, 6.387499999999796e-05, 6.381899999999968e-05, 6.437499999999846e-05, 6.400000000000156e-05, 6.454099999999435e-05]</msg>
<status status="PASS" starttime="20201030 15:56:37.120" endtime="20201030 15:56:37.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.109" endtime="20201030 15:56:37.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:37.136" endtime="20201030 15:56:37.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.131" endtime="20201030 15:56:37.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.129" endtime="20201030 15:56:37.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.612" endtime="20201030 15:56:37.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.611" endtime="20201030 15:56:37.161"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.184" endtime="20201030 15:56:37.204"></status>
</kw>
<msg timestamp="20201030 15:56:37.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.181" endtime="20201030 15:56:37.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.208" endtime="20201030 15:56:37.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.214" endtime="20201030 15:56:37.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.173" endtime="20201030 15:56:37.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.168" endtime="20201030 15:56:37.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.238" endtime="20201030 15:56:37.585"></status>
</kw>
<msg timestamp="20201030 15:56:37.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039956583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040021708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:37.234" endtime="20201030 15:56:37.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039956583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040021708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:37.595" endtime="20201030 15:56:37.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.614" endtime="20201030 15:56:37.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.227" endtime="20201030 15:56:37.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.222" endtime="20201030 15:56:37.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:37.631" level="INFO">${RESULT} = [{'diff': 6.512500000000615e-05}, {'diff': 6.481900000000068e-05}, {'diff': 6.54029999999986e-05}, {'diff': 6.488900000000547e-05}, {'diff': 6.527800000000195e-05}, {'diff': 6.541699999999817e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:37.622" endtime="20201030 15:56:37.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:37.641" level="INFO">${ACCURACY} = {'diff': [6.512500000000615e-05, 6.481900000000068e-05, 6.54029999999986e-05, 6.488900000000547e-05, 6.527800000000195e-05, 6.541699999999817e-05, 6.548599999999655e-05, 6.494499999999681e-05, 6.50140...</msg>
<status status="PASS" starttime="20201030 15:56:37.633" endtime="20201030 15:56:37.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.652" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:56:37.650" endtime="20201030 15:56:37.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.657" level="INFO">VALUE: [6.512500000000615e-05, 6.481900000000068e-05, 6.54029999999986e-05, 6.488900000000547e-05, 6.527800000000195e-05, 6.541699999999817e-05, 6.548599999999655e-05, 6.494499999999681e-05, 6.501400000000213e-05, 6.52500000000028e-05, 6.487499999999896e-05, 6.506900000000093e-05, 6.551400000000263e-05, 6.506900000000093e-05, 6.488900000000547e-05, 6.522200000000367e-05, 6.476400000000188e-05, 6.493099999999724e-05, 6.536199999999937e-05, 6.483300000000025e-05, 6.486099999999939e-05, 6.476400000000188e-05, 6.524999999999587e-05, 6.554200000000177e-05, 6.484699999999982e-05, 6.482000000000016e-05, 6.463899999999828e-05, 6.459699999999957e-05, 6.544499999999731e-05, 6.541700000000511e-05, 6.50830000000005e-05, 6.499999999999562e-05, 6.519400000000453e-05, 6.512499999999921e-05, 6.518099999999749e-05, 6.537499999999946e-05, 6.501300000000265e-05, 6.555600000000134e-05, 6.468100000000393e-05, 6.470900000000307e-05, 6.538899999999903e-05, 6.517999999999802e-05, 6.466599999999795e-05, 6.54300000000052e-05, 6.517999999999802e-05, 6.479200000000102e-05, 6.461099999999914e-05, 6.462500000000565e-05, 6.509799999999955e-05, 6.501400000000213e-05]</msg>
<status status="PASS" starttime="20201030 15:56:37.654" endtime="20201030 15:56:37.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.643" endtime="20201030 15:56:37.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:37.670" endtime="20201030 15:56:37.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.665" endtime="20201030 15:56:37.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.663" endtime="20201030 15:56:37.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.163" endtime="20201030 15:56:37.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.162" endtime="20201030 15:56:37.695"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.718" endtime="20201030 15:56:37.740"></status>
</kw>
<msg timestamp="20201030 15:56:37.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.715" endtime="20201030 15:56:37.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.744" endtime="20201030 15:56:37.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.750" endtime="20201030 15:56:37.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.708" endtime="20201030 15:56:37.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.702" endtime="20201030 15:56:37.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.774" endtime="20201030 15:56:38.120"></status>
</kw>
<msg timestamp="20201030 15:56:38.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041826444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041892014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:37.771" endtime="20201030 15:56:38.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041826444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041892014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:38.130" endtime="20201030 15:56:38.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.150" endtime="20201030 15:56:38.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.763" endtime="20201030 15:56:38.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.758" endtime="20201030 15:56:38.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:38.167" level="INFO">${RESULT} = [{'diff': 6.55700000000009e-05}, {'diff': 6.647200000000492e-05}, {'diff': 6.627800000000295e-05}, {'diff': 6.587499999999996e-05}, {'diff': 6.650000000000406e-05}, {'diff': 6.62500000000038e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:38.158" endtime="20201030 15:56:38.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:38.176" level="INFO">${ACCURACY} = {'diff': [6.55700000000009e-05, 6.647200000000492e-05, 6.627800000000295e-05, 6.587499999999996e-05, 6.650000000000406e-05, 6.62500000000038e-05, 6.63480000000008e-05, 6.577700000000297e-05, 6.5652999...</msg>
<status status="PASS" starttime="20201030 15:56:38.169" endtime="20201030 15:56:38.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.187" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:56:38.185" endtime="20201030 15:56:38.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.193" level="INFO">VALUE: [6.55700000000009e-05, 6.647200000000492e-05, 6.627800000000295e-05, 6.587499999999996e-05, 6.650000000000406e-05, 6.62500000000038e-05, 6.63480000000008e-05, 6.577700000000297e-05, 6.565299999999885e-05, 6.632000000000166e-05, 6.633399999999429e-05, 6.638900000000003e-05, 6.609700000000107e-05, 6.593099999999824e-05, 6.588800000000006e-05, 6.626399999999644e-05, 6.583299999999431e-05, 6.598600000000399e-05, 6.622199999999773e-05, 6.579199999999508e-05, 6.599999999999662e-05, 6.64029999999996e-05, 6.604100000000279e-05, 6.623600000000424e-05, 6.580500000000211e-05, 6.62359999999973e-05, 6.608400000000098e-05, 6.629199999999558e-05, 6.609700000000107e-05, 6.611100000000064e-05, 6.644499999999831e-05, 6.645899999999788e-05, 6.559800000000005e-05, 6.588899999999953e-05, 6.567999999999852e-05, 6.601400000000313e-05, 6.630499999999567e-05, 6.577800000000245e-05, 6.604199999999533e-05, 6.566699999999842e-05, 6.615299999999935e-05, 6.60700000000014e-05, 6.627800000000295e-05, 6.570900000000407e-05, 6.583299999999431e-05, 6.580600000000159e-05, 6.592999999999877e-05, 6.651300000000415e-05, 6.638900000000003e-05, 6.594400000000528e-05]</msg>
<status status="PASS" starttime="20201030 15:56:38.190" endtime="20201030 15:56:38.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.178" endtime="20201030 15:56:38.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:38.207" endtime="20201030 15:56:38.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.201" endtime="20201030 15:56:38.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.199" endtime="20201030 15:56:38.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.697" endtime="20201030 15:56:38.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.696" endtime="20201030 15:56:38.232"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.255" endtime="20201030 15:56:38.276"></status>
</kw>
<msg timestamp="20201030 15:56:38.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.252" endtime="20201030 15:56:38.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.279" endtime="20201030 15:56:38.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.286" endtime="20201030 15:56:38.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.245" endtime="20201030 15:56:38.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.239" endtime="20201030 15:56:38.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.309" endtime="20201030 15:56:38.655"></status>
</kw>
<msg timestamp="20201030 15:56:38.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040149917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040216597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:38.306" endtime="20201030 15:56:38.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040149917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040216597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:38.665" endtime="20201030 15:56:38.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.684" endtime="20201030 15:56:38.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.299" endtime="20201030 15:56:38.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.294" endtime="20201030 15:56:38.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:38.701" level="INFO">${RESULT} = [{'diff': 6.667999999999952e-05}, {'diff': 6.688800000000106e-05}, {'diff': 6.732000000000266e-05}, {'diff': 6.679199999999608e-05}, {'diff': 6.744499999999931e-05}, {'diff': 6.733400000000223e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:38.692" endtime="20201030 15:56:38.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:38.712" level="INFO">${ACCURACY} = {'diff': [6.667999999999952e-05, 6.688800000000106e-05, 6.732000000000266e-05, 6.679199999999608e-05, 6.744499999999931e-05, 6.733400000000223e-05, 6.726399999999744e-05, 6.711100000000164e-05, 6.6570...</msg>
<status status="PASS" starttime="20201030 15:56:38.703" endtime="20201030 15:56:38.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.723" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:56:38.721" endtime="20201030 15:56:38.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.728" level="INFO">VALUE: [6.667999999999952e-05, 6.688800000000106e-05, 6.732000000000266e-05, 6.679199999999608e-05, 6.744499999999931e-05, 6.733400000000223e-05, 6.726399999999744e-05, 6.711100000000164e-05, 6.65700000000019e-05, 6.688899999999359e-05, 6.750000000000506e-05, 6.744499999999931e-05, 6.709800000000155e-05, 6.734700000000232e-05, 6.690200000000063e-05, 6.709700000000207e-05, 6.694399999999934e-05, 6.744400000000678e-05, 6.663900000000028e-05, 6.665299999999985e-05, 6.70700000000024e-05, 6.716699999999992e-05, 6.733300000000275e-05, 6.73480000000018e-05, 6.708399999999504e-05, 6.748599999999855e-05, 6.712500000000121e-05, 6.722199999999873e-05, 6.688900000000053e-05, 6.731999999999572e-05, 6.752799999999726e-05, 6.709699999999513e-05, 6.737500000000146e-05, 6.751399999999769e-05, 6.687500000000096e-05, 6.716699999999992e-05, 6.754200000000377e-05, 6.75280000000042e-05, 6.724999999999787e-05, 6.727699999999753e-05, 6.673700000000421e-05, 6.726299999999796e-05, 6.694399999999934e-05, 6.74160000000007e-05, 6.694399999999934e-05, 6.737500000000146e-05, 6.665299999999985e-05, 6.683399999999479e-05, 6.676299999999746e-05, 6.690200000000063e-05]</msg>
<status status="PASS" starttime="20201030 15:56:38.725" endtime="20201030 15:56:38.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.714" endtime="20201030 15:56:38.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:38.741" endtime="20201030 15:56:38.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.737" endtime="20201030 15:56:38.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.734" endtime="20201030 15:56:38.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.234" endtime="20201030 15:56:38.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.233" endtime="20201030 15:56:38.767"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.790" endtime="20201030 15:56:38.810"></status>
</kw>
<msg timestamp="20201030 15:56:38.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.786" endtime="20201030 15:56:38.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.814" endtime="20201030 15:56:38.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.820" endtime="20201030 15:56:38.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.779" endtime="20201030 15:56:38.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.773" endtime="20201030 15:56:38.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.843" endtime="20201030 15:56:39.189"></status>
</kw>
<msg timestamp="20201030 15:56:39.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040237806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040305722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:38.840" endtime="20201030 15:56:39.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040237806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040305722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.199" endtime="20201030 15:56:39.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.218" endtime="20201030 15:56:39.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.833" endtime="20201030 15:56:39.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.828" endtime="20201030 15:56:39.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:39.235" level="INFO">${RESULT} = [{'diff': 6.79160000000012e-05}, {'diff': 6.851400000000563e-05}, {'diff': 6.843100000000074e-05}, {'diff': 6.761100000000214e-05}, {'diff': 6.819400000000059e-05}, {'diff': 6.793100000000024e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:39.226" endtime="20201030 15:56:39.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:39.250" level="INFO">${ACCURACY} = {'diff': [6.79160000000012e-05, 6.851400000000563e-05, 6.843100000000074e-05, 6.761100000000214e-05, 6.819400000000059e-05, 6.793100000000024e-05, 6.793000000000077e-05, 6.849999999999912e-05, 6.77499...</msg>
<status status="PASS" starttime="20201030 15:56:39.237" endtime="20201030 15:56:39.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.261" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:56:39.259" endtime="20201030 15:56:39.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.267" level="INFO">VALUE: [6.79160000000012e-05, 6.851400000000563e-05, 6.843100000000074e-05, 6.761100000000214e-05, 6.819400000000059e-05, 6.793100000000024e-05, 6.793000000000077e-05, 6.849999999999912e-05, 6.774999999999837e-05, 6.827799999999801e-05, 6.783299999999631e-05, 6.856999999999697e-05, 6.841700000000117e-05, 6.802699999999828e-05, 6.818000000000102e-05, 6.845799999999347e-05, 6.787499999999502e-05, 6.833399999999629e-05, 6.859700000000357e-05, 6.769400000000009e-05, 6.799999999999862e-05, 6.832000000000366e-05, 6.829200000000452e-05, 6.836099999999595e-05, 6.812500000000221e-05, 6.819400000000059e-05, 6.826400000000538e-05, 6.79160000000012e-05, 6.830500000000461e-05, 6.790200000000163e-05, 6.815300000000135e-05, 6.794499999999981e-05, 6.85700000000039e-05, 6.854200000000477e-05, 6.819500000000006e-05, 6.820800000000016e-05, 6.774999999999837e-05, 6.801399999999819e-05, 6.851399999999869e-05, 6.848599999999955e-05, 6.842999999999433e-05, 6.772199999999923e-05, 6.838900000000203e-05, 6.788800000000206e-05, 6.818000000000102e-05, 6.793100000000024e-05, 6.852799999999826e-05, 6.826400000000538e-05, 6.82359999999993e-05, 6.786100000000239e-05]</msg>
<status status="PASS" starttime="20201030 15:56:39.264" endtime="20201030 15:56:39.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.252" endtime="20201030 15:56:39.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:39.287" endtime="20201030 15:56:39.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.283" endtime="20201030 15:56:39.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.280" endtime="20201030 15:56:39.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.769" endtime="20201030 15:56:39.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.768" endtime="20201030 15:56:39.313"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.335" endtime="20201030 15:56:39.356"></status>
</kw>
<msg timestamp="20201030 15:56:39.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.332" endtime="20201030 15:56:39.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.359" endtime="20201030 15:56:39.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.366" endtime="20201030 15:56:39.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.325" endtime="20201030 15:56:39.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.319" endtime="20201030 15:56:39.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.389" endtime="20201030 15:56:39.737"></status>
</kw>
<msg timestamp="20201030 15:56:39.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040015375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040084833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.386" endtime="20201030 15:56:39.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040015375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040084833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.746" endtime="20201030 15:56:39.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.765" endtime="20201030 15:56:39.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.379" endtime="20201030 15:56:39.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.374" endtime="20201030 15:56:39.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:39.783" level="INFO">${RESULT} = [{'diff': 6.945800000000141e-05}, {'diff': 6.861199999999568e-05}, {'diff': 6.87229999999997e-05}, {'diff': 6.905600000000484e-05}, {'diff': 6.945900000000088e-05}, {'diff': 6.931999999999772e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:39.774" endtime="20201030 15:56:39.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:39.792" level="INFO">${ACCURACY} = {'diff': [6.945800000000141e-05, 6.861199999999568e-05, 6.87229999999997e-05, 6.905600000000484e-05, 6.945900000000088e-05, 6.931999999999772e-05, 6.8583000000004e-05, 6.947200000000098e-05, 6.9485999...</msg>
<status status="PASS" starttime="20201030 15:56:39.785" endtime="20201030 15:56:39.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.803" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:56:39.801" endtime="20201030 15:56:39.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.809" level="INFO">VALUE: [6.945800000000141e-05, 6.861199999999568e-05, 6.87229999999997e-05, 6.905600000000484e-05, 6.945900000000088e-05, 6.931999999999772e-05, 6.8583000000004e-05, 6.947200000000098e-05, 6.948599999999361e-05, 6.92360000000003e-05, 6.869400000000109e-05, 6.891700000000167e-05, 6.897200000000048e-05, 6.87359999999998e-05, 6.899999999999962e-05, 6.905600000000484e-05, 6.94030000000026e-05, 6.945900000000088e-05, 6.88480000000033e-05, 6.870800000000066e-05, 6.941699999999523e-05, 6.927799999999901e-05, 6.937500000000346e-05, 6.85559999999974e-05, 6.912500000000321e-05, 6.879199999999808e-05, 6.891699999999473e-05, 6.937500000000346e-05, 6.86109999999962e-05, 6.876299999999946e-05, 6.880499999999817e-05, 6.884799999999636e-05, 6.927800000000595e-05, 6.930599999999815e-05, 6.894500000000081e-05, 6.924999999999987e-05, 6.884700000000382e-05, 6.901400000000613e-05, 6.90559999999979e-05, 6.94309999999948e-05, 6.888900000000253e-05, 6.897199999999354e-05, 6.937499999999652e-05, 6.955499999999892e-05, 6.886099999999645e-05, 6.858299999999706e-05, 6.899999999999962e-05, 6.923699999999977e-05, 6.936100000000389e-05, 6.898600000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:56:39.806" endtime="20201030 15:56:39.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.794" endtime="20201030 15:56:39.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:39.824" endtime="20201030 15:56:39.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.819" endtime="20201030 15:56:39.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.815" endtime="20201030 15:56:39.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.315" endtime="20201030 15:56:39.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.314" endtime="20201030 15:56:39.850"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.873" endtime="20201030 15:56:39.895"></status>
</kw>
<msg timestamp="20201030 15:56:39.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.869" endtime="20201030 15:56:39.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.898" endtime="20201030 15:56:39.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.904" endtime="20201030 15:56:39.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.862" endtime="20201030 15:56:39.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.856" endtime="20201030 15:56:39.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.928" endtime="20201030 15:56:40.275"></status>
</kw>
<msg timestamp="20201030 15:56:40.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041662083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041732708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.925" endtime="20201030 15:56:40.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041662083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041732708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:40.285" endtime="20201030 15:56:40.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.304" endtime="20201030 15:56:40.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.918" endtime="20201030 15:56:40.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.913" endtime="20201030 15:56:40.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:40.321" level="INFO">${RESULT} = [{'diff': 7.062499999999777e-05}, {'diff': 6.986199999999693e-05}, {'diff': 7.040199999999719e-05}, {'diff': 6.998600000000105e-05}, {'diff': 7.05689999999995e-05}, {'diff': 7.050000000000112e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:40.312" endtime="20201030 15:56:40.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:40.331" level="INFO">${ACCURACY} = {'diff': [7.062499999999777e-05, 6.986199999999693e-05, 7.040199999999719e-05, 6.998600000000105e-05, 7.05689999999995e-05, 7.050000000000112e-05, 7.052800000000026e-05, 6.97909999999996e-05, 7.026400...</msg>
<status status="PASS" starttime="20201030 15:56:40.323" endtime="20201030 15:56:40.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.342" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:56:40.340" endtime="20201030 15:56:40.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.347" level="INFO">VALUE: [7.062499999999777e-05, 6.986199999999693e-05, 7.040199999999719e-05, 6.998600000000105e-05, 7.05689999999995e-05, 7.050000000000112e-05, 7.052800000000026e-05, 6.97909999999996e-05, 7.026400000000044e-05, 6.997300000000095e-05, 6.958400000000448e-05, 7.030499999999967e-05, 7.058299999999906e-05, 6.962499999999677e-05, 6.997200000000148e-05, 6.965299999999591e-05, 7.030599999999915e-05, 7.038899999999709e-05, 6.970900000000113e-05, 7.04030000000036e-05, 7.004199999999933e-05, 7.022200000000173e-05, 6.976399999999994e-05, 7.01109999999977e-05, 7.02910000000001e-05, 7.002799999999976e-05, 6.990299999999616e-05, 7.012500000000421e-05, 7.016600000000345e-05, 6.994400000000234e-05, 6.980600000000559e-05, 7.023599999999436e-05, 6.970800000000166e-05, 6.997200000000148e-05, 7.018000000000302e-05, 7.05689999999995e-05, 6.99030000000031e-05, 6.959699999999763e-05, 6.984699999999788e-05, 6.997200000000148e-05, 6.993000000000277e-05, 7.026400000000044e-05, 7.013900000000378e-05, 7.001400000000019e-05, 6.984699999999788e-05, 7.016700000000292e-05, 7.027800000000001e-05, 7.019500000000206e-05, 7.009700000000507e-05, 6.994500000000181e-05]</msg>
<status status="PASS" starttime="20201030 15:56:40.344" endtime="20201030 15:56:40.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.333" endtime="20201030 15:56:40.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:40.362" endtime="20201030 15:56:40.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.356" endtime="20201030 15:56:40.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.354" endtime="20201030 15:56:40.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.852" endtime="20201030 15:56:40.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.851" endtime="20201030 15:56:40.387"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.410" endtime="20201030 15:56:40.431"></status>
</kw>
<msg timestamp="20201030 15:56:40.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.407" endtime="20201030 15:56:40.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.434" endtime="20201030 15:56:40.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.441" endtime="20201030 15:56:40.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.399" endtime="20201030 15:56:40.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.394" endtime="20201030 15:56:40.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.464" endtime="20201030 15:56:40.810"></status>
</kw>
<msg timestamp="20201030 15:56:40.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039997819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040068528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:40.461" endtime="20201030 15:56:40.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039997819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040068528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:40.820" endtime="20201030 15:56:40.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.839" endtime="20201030 15:56:40.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.454" endtime="20201030 15:56:40.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.449" endtime="20201030 15:56:40.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:40.862" level="INFO">${RESULT} = [{'diff': 7.070900000000213e-05}, {'diff': 7.094499999999587e-05}, {'diff': 7.063900000000428e-05}, {'diff': 7.12639999999945e-05}, {'diff': 7.119500000000306e-05}, {'diff': 7.094400000000334e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:40.850" endtime="20201030 15:56:40.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:40.873" level="INFO">${ACCURACY} = {'diff': [7.070900000000213e-05, 7.094499999999587e-05, 7.063900000000428e-05, 7.12639999999945e-05, 7.119500000000306e-05, 7.094400000000334e-05, 7.0583000000006e-05, 7.126400000000144e-05, 7.1055999...</msg>
<status status="PASS" starttime="20201030 15:56:40.864" endtime="20201030 15:56:40.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.886" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:56:40.884" endtime="20201030 15:56:40.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.892" level="INFO">VALUE: [7.070900000000213e-05, 7.094499999999587e-05, 7.063900000000428e-05, 7.12639999999945e-05, 7.119500000000306e-05, 7.094400000000334e-05, 7.0583000000006e-05, 7.126400000000144e-05, 7.10559999999999e-05, 7.130600000000015e-05, 7.115299999999741e-05, 7.090299999999716e-05, 7.130600000000015e-05, 7.151399999999475e-05, 7.127800000000101e-05, 7.129200000000058e-05, 7.122200000000273e-05, 7.147199999999604e-05, 7.12360000000023e-05, 7.063899999999734e-05, 7.066700000000342e-05, 7.087499999999802e-05, 7.102800000000076e-05, 7.117999999999708e-05, 7.113899999999784e-05, 7.086100000000539e-05, 7.083399999999879e-05, 7.116699999999698e-05, 7.063900000000428e-05, 7.149999999999518e-05, 7.058399999999854e-05, 7.118100000000349e-05, 7.075000000000137e-05, 7.072200000000223e-05, 7.152700000000178e-05, 7.100000000000162e-05, 7.134699999999938e-05, 7.101400000000119e-05, 7.120899999999569e-05, 7.131999999999972e-05, 7.079200000000008e-05, 7.097199999999554e-05, 7.065299999999691e-05, 7.151300000000221e-05, 7.105500000000042e-05, 7.077700000000103e-05, 7.077800000000051e-05, 7.102800000000076e-05, 7.141700000000417e-05, 7.144500000000331e-05]</msg>
<status status="PASS" starttime="20201030 15:56:40.889" endtime="20201030 15:56:40.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.876" endtime="20201030 15:56:40.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:40.907" endtime="20201030 15:56:40.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.901" endtime="20201030 15:56:40.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.898" endtime="20201030 15:56:40.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.389" endtime="20201030 15:56:40.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.388" endtime="20201030 15:56:40.934"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.957" endtime="20201030 15:56:40.976"></status>
</kw>
<msg timestamp="20201030 15:56:40.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.954" endtime="20201030 15:56:40.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.979" endtime="20201030 15:56:40.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.985" endtime="20201030 15:56:40.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.946" endtime="20201030 15:56:40.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.941" endtime="20201030 15:56:40.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.009" endtime="20201030 15:56:41.345"></status>
</kw>
<msg timestamp="20201030 15:56:41.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041188444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041260931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:41.006" endtime="20201030 15:56:41.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041188444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041260931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:41.355" endtime="20201030 15:56:41.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.373" endtime="20201030 15:56:41.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.998" endtime="20201030 15:56:41.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.993" endtime="20201030 15:56:41.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:41.391" level="INFO">${RESULT} = [{'diff': 7.248700000000302e-05}, {'diff': 7.186099999999945e-05}, {'diff': 7.187499999999902e-05}, {'diff': 7.207000000000047e-05}, {'diff': 7.158399999999954e-05}, {'diff': 7.169399999999715e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:41.382" endtime="20201030 15:56:41.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:41.402" level="INFO">${ACCURACY} = {'diff': [7.248700000000302e-05, 7.186099999999945e-05, 7.187499999999902e-05, 7.207000000000047e-05, 7.158399999999954e-05, 7.169399999999715e-05, 7.162499999999877e-05, 7.223699999999583e-05, 7.1792...</msg>
<status status="PASS" starttime="20201030 15:56:41.393" endtime="20201030 15:56:41.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.413" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:56:41.411" endtime="20201030 15:56:41.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.418" level="INFO">VALUE: [7.248700000000302e-05, 7.186099999999945e-05, 7.187499999999902e-05, 7.207000000000047e-05, 7.158399999999954e-05, 7.169399999999715e-05, 7.162499999999877e-05, 7.223699999999583e-05, 7.179200000000108e-05, 7.193000000000477e-05, 7.21109999999997e-05, 7.215300000000535e-05, 7.25560000000014e-05, 7.250000000000312e-05, 7.205500000000142e-05, 7.190299999999816e-05, 7.21109999999997e-05, 7.249999999999618e-05, 7.236099999999995e-05, 7.234700000000038e-05, 7.187499999999902e-05, 7.186099999999945e-05, 7.219499999999712e-05, 7.183399999999979e-05, 7.230600000000115e-05, 7.255500000000192e-05, 7.162499999999877e-05, 7.219400000000459e-05, 7.169399999999715e-05, 7.215299999999841e-05, 7.227799999999507e-05, 7.240299999999866e-05, 7.225000000000287e-05, 7.251400000000269e-05, 7.204100000000185e-05, 7.184699999999988e-05, 7.180600000000065e-05, 7.254099999999541e-05, 7.205500000000142e-05, 7.25560000000014e-05, 7.205499999999448e-05, 7.213899999999884e-05, 7.252800000000226e-05, 7.184699999999988e-05, 7.234700000000038e-05, 7.258400000000054e-05, 7.222199999999679e-05, 7.26110000000002e-05, 7.258300000000106e-05, 7.215299999999841e-05]</msg>
<status status="PASS" starttime="20201030 15:56:41.415" endtime="20201030 15:56:41.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.404" endtime="20201030 15:56:41.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:41.431" endtime="20201030 15:56:41.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.426" endtime="20201030 15:56:41.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.424" endtime="20201030 15:56:41.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.936" endtime="20201030 15:56:41.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.935" endtime="20201030 15:56:41.456"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.478" endtime="20201030 15:56:41.497"></status>
</kw>
<msg timestamp="20201030 15:56:41.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.475" endtime="20201030 15:56:41.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.501" endtime="20201030 15:56:41.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.507" endtime="20201030 15:56:41.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.468" endtime="20201030 15:56:41.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.462" endtime="20201030 15:56:41.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.530" endtime="20201030 15:56:41.867"></status>
</kw>
<msg timestamp="20201030 15:56:41.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039486542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039559403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:41.527" endtime="20201030 15:56:41.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039486542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039559403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:41.877" endtime="20201030 15:56:41.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.896" endtime="20201030 15:56:41.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.520" endtime="20201030 15:56:41.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.515" endtime="20201030 15:56:41.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:41.913" level="INFO">${RESULT} = [{'diff': 7.286100000000045e-05}, {'diff': 7.284700000000088e-05}, {'diff': 7.332000000000172e-05}, {'diff': 7.256899999999455e-05}, {'diff': 7.25560000000014e-05}, {'diff': 7.350000000000412e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:41.904" endtime="20201030 15:56:41.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:41.922" level="INFO">${ACCURACY} = {'diff': [7.286100000000045e-05, 7.284700000000088e-05, 7.332000000000172e-05, 7.256899999999455e-05, 7.25560000000014e-05, 7.350000000000412e-05, 7.34309999999988e-05, 7.316700000000592e-05, 7.283300...</msg>
<status status="PASS" starttime="20201030 15:56:41.915" endtime="20201030 15:56:41.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.933" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:56:41.931" endtime="20201030 15:56:41.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.939" level="INFO">VALUE: [7.286100000000045e-05, 7.284700000000088e-05, 7.332000000000172e-05, 7.256899999999455e-05, 7.25560000000014e-05, 7.350000000000412e-05, 7.34309999999988e-05, 7.316700000000592e-05, 7.283300000000131e-05, 7.298599999999711e-05, 7.322199999999779e-05, 7.330500000000267e-05, 7.340299999999966e-05, 7.262499999999977e-05, 7.318100000000549e-05, 7.337499999999358e-05, 7.270899999999719e-05, 7.25690000000015e-05, 7.308300000000156e-05, 7.270799999999772e-05, 7.334700000000138e-05, 7.302800000000276e-05, 7.344499999999837e-05, 7.292999999999883e-05, 7.341699999999923e-05, 7.315299999999941e-05, 7.266699999999848e-05, 7.30560000000019e-05, 7.284700000000088e-05, 7.282000000000122e-05, 7.288899999999959e-05, 7.287500000000002e-05, 7.270800000000466e-05, 7.318099999999855e-05, 7.304199999999539e-05, 7.290299999999916e-05, 7.349999999999718e-05, 7.318099999999855e-05, 7.352700000000378e-05, 7.324999999999693e-05, 7.326400000000344e-05, 7.284700000000088e-05, 7.352800000000326e-05, 7.349999999999718e-05, 7.323699999999683e-05, 7.272299999999676e-05, 7.340299999999966e-05, 7.287500000000002e-05, 7.280599999999471e-05, 7.340299999999966e-05]</msg>
<status status="PASS" starttime="20201030 15:56:41.936" endtime="20201030 15:56:41.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.924" endtime="20201030 15:56:41.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:41.951" endtime="20201030 15:56:41.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.947" endtime="20201030 15:56:41.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.944" endtime="20201030 15:56:41.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.458" endtime="20201030 15:56:41.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.457" endtime="20201030 15:56:41.976"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.999" endtime="20201030 15:56:42.019"></status>
</kw>
<msg timestamp="20201030 15:56:42.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.996" endtime="20201030 15:56:42.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.023" endtime="20201030 15:56:42.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.029" endtime="20201030 15:56:42.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.989" endtime="20201030 15:56:42.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.983" endtime="20201030 15:56:42.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.052" endtime="20201030 15:56:42.388"></status>
</kw>
<msg timestamp="20201030 15:56:42.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041083917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041157958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.049" endtime="20201030 15:56:42.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041083917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041157958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.398" endtime="20201030 15:56:42.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.417" endtime="20201030 15:56:42.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.042" endtime="20201030 15:56:42.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.037" endtime="20201030 15:56:42.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:42.434" level="INFO">${RESULT} = [{'diff': 7.404100000000385e-05}, {'diff': 7.440200000000119e-05}, {'diff': 7.398599999999811e-05}, {'diff': 7.379200000000308e-05}, {'diff': 7.382000000000222e-05}, {'diff': 7.419499999999912e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:42.425" endtime="20201030 15:56:42.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:42.443" level="INFO">${ACCURACY} = {'diff': [7.404100000000385e-05, 7.440200000000119e-05, 7.398599999999811e-05, 7.379200000000308e-05, 7.382000000000222e-05, 7.419499999999912e-05, 7.419499999999912e-05, 7.452800000000426e-05, 7.4054...</msg>
<status status="PASS" starttime="20201030 15:56:42.436" endtime="20201030 15:56:42.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.454" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:56:42.452" endtime="20201030 15:56:42.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.460" level="INFO">VALUE: [7.404100000000385e-05, 7.440200000000119e-05, 7.398599999999811e-05, 7.379200000000308e-05, 7.382000000000222e-05, 7.419499999999912e-05, 7.419499999999912e-05, 7.452800000000426e-05, 7.405499999999648e-05, 7.411200000000118e-05, 7.440300000000066e-05, 7.398599999999811e-05, 7.384700000000188e-05, 7.449999999999818e-05, 7.398599999999811e-05, 7.357000000000197e-05, 7.395899999999844e-05, 7.373599999999786e-05, 7.406899999999605e-05, 7.419399999999965e-05, 7.365200000000044e-05, 7.412500000000127e-05, 7.420799999999922e-05, 7.440300000000066e-05, 7.361099999999426e-05, 7.429199999999664e-05, 7.415300000000041e-05, 7.401399999999725e-05, 7.42639999999975e-05, 7.452800000000426e-05, 7.379200000000308e-05, 7.42230000000052e-05, 7.450000000000512e-05, 7.380600000000265e-05, 7.384800000000136e-05, 7.392999999999983e-05, 7.3763999999997e-05, 7.434700000000238e-05, 7.395899999999844e-05, 7.401399999999725e-05, 7.426299999999803e-05, 7.452699999999784e-05, 7.433299999999587e-05, 7.445799999999947e-05, 7.440300000000066e-05, 7.365299999999991e-05, 7.386100000000145e-05, 7.436099999999501e-05, 7.419399999999965e-05, 7.419499999999912e-05]</msg>
<status status="PASS" starttime="20201030 15:56:42.456" endtime="20201030 15:56:42.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.445" endtime="20201030 15:56:42.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:42.474" endtime="20201030 15:56:42.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.468" endtime="20201030 15:56:42.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.465" endtime="20201030 15:56:42.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.978" endtime="20201030 15:56:42.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.977" endtime="20201030 15:56:42.499"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.521" endtime="20201030 15:56:42.540"></status>
</kw>
<msg timestamp="20201030 15:56:42.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.518" endtime="20201030 15:56:42.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.544" endtime="20201030 15:56:42.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.550" endtime="20201030 15:56:42.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.511" endtime="20201030 15:56:42.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.505" endtime="20201030 15:56:42.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.573" endtime="20201030 15:56:42.912"></status>
</kw>
<msg timestamp="20201030 15:56:42.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039553486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039628986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.570" endtime="20201030 15:56:42.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039553486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039628986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.921" endtime="20201030 15:56:42.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.940" endtime="20201030 15:56:42.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.563" endtime="20201030 15:56:42.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.558" endtime="20201030 15:56:42.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:42.957" level="INFO">${RESULT} = [{'diff': 7.549999999999918e-05}, {'diff': 7.552799999999832e-05}, {'diff': 7.533299999999687e-05}, {'diff': 7.46110000000022e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.463900000000134e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:42.948" endtime="20201030 15:56:42.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:42.968" level="INFO">${ACCURACY} = {'diff': [7.549999999999918e-05, 7.552799999999832e-05, 7.533299999999687e-05, 7.46110000000022e-05, 7.54440000000009e-05, 7.463900000000134e-05, 7.502799999999782e-05, 7.473599999999886e-05, 7.502699...</msg>
<status status="PASS" starttime="20201030 15:56:42.959" endtime="20201030 15:56:42.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.979" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:56:42.976" endtime="20201030 15:56:42.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.984" level="INFO">VALUE: [7.549999999999918e-05, 7.552799999999832e-05, 7.533299999999687e-05, 7.46110000000022e-05, 7.54440000000009e-05, 7.463900000000134e-05, 7.502799999999782e-05, 7.473599999999886e-05, 7.502699999999835e-05, 7.512500000000227e-05, 7.498599999999911e-05, 7.519500000000012e-05, 7.483400000000279e-05, 7.473599999999886e-05, 7.52639999999985e-05, 7.51110000000027e-05, 7.47910000000046e-05, 7.508300000000356e-05, 7.45969999999957e-05, 7.4763999999998e-05, 7.532000000000372e-05, 7.519500000000012e-05, 7.473599999999886e-05, 7.462500000000177e-05, 7.474999999999843e-05, 7.515300000000141e-05, 7.533400000000329e-05, 7.520800000000022e-05, 7.4763999999998e-05, 7.522299999999926e-05, 7.518000000000108e-05, 7.54310000000008e-05, 7.476400000000494e-05, 7.548599999999961e-05, 7.465299999999397e-05, 7.502799999999782e-05, 7.533399999999635e-05, 7.476299999999853e-05, 7.472299999999876e-05, 7.47360000000058e-05, 7.501399999999825e-05, 7.540300000000166e-05, 7.513900000000184e-05, 7.543099999999386e-05, 7.527799999999807e-05, 7.512500000000227e-05, 7.502799999999782e-05, 7.484699999999594e-05, 7.523599999999936e-05, 7.501399999999825e-05]</msg>
<status status="PASS" starttime="20201030 15:56:42.981" endtime="20201030 15:56:42.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.970" endtime="20201030 15:56:42.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:42.997" endtime="20201030 15:56:43.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.992" endtime="20201030 15:56:43.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.990" endtime="20201030 15:56:43.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.501" endtime="20201030 15:56:43.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.500" endtime="20201030 15:56:43.022"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.044" endtime="20201030 15:56:43.063"></status>
</kw>
<msg timestamp="20201030 15:56:43.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.041" endtime="20201030 15:56:43.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.067" endtime="20201030 15:56:43.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.073" endtime="20201030 15:56:43.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.034" endtime="20201030 15:56:43.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.028" endtime="20201030 15:56:43.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.096" endtime="20201030 15:56:43.432"></status>
</kw>
<msg timestamp="20201030 15:56:43.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039416986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039492708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.093" endtime="20201030 15:56:43.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039416986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039492708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.442" endtime="20201030 15:56:43.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.461" endtime="20201030 15:56:43.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.086" endtime="20201030 15:56:43.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.081" endtime="20201030 15:56:43.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:43.478" level="INFO">${RESULT} = [{'diff': 7.572200000000029e-05}, {'diff': 7.612499999999633e-05}, {'diff': 7.648600000000061e-05}, {'diff': 7.56389999999954e-05}, {'diff': 7.597300000000001e-05}, {'diff': 7.604100000000585e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:43.469" endtime="20201030 15:56:43.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:43.489" level="INFO">${ACCURACY} = {'diff': [7.572200000000029e-05, 7.612499999999633e-05, 7.648600000000061e-05, 7.56389999999954e-05, 7.597300000000001e-05, 7.604100000000585e-05, 7.59440000000014e-05, 7.615300000000241e-05, 7.648600...</msg>
<status status="PASS" starttime="20201030 15:56:43.480" endtime="20201030 15:56:43.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.500" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:56:43.498" endtime="20201030 15:56:43.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.505" level="INFO">VALUE: [7.572200000000029e-05, 7.612499999999633e-05, 7.648600000000061e-05, 7.56389999999954e-05, 7.597300000000001e-05, 7.604100000000585e-05, 7.59440000000014e-05, 7.615300000000241e-05, 7.648600000000061e-05, 7.634699999999744e-05, 7.595800000000097e-05, 7.626300000000003e-05, 7.61110000000037e-05, 7.62769999999996e-05, 7.579199999999814e-05, 7.624999999999993e-05, 7.658300000000506e-05, 7.590299999999522e-05, 7.64440000000019e-05, 7.566700000000148e-05, 7.656999999999803e-05, 7.633400000000429e-05, 7.64440000000019e-05, 7.615200000000294e-05, 7.641599999999582e-05, 7.58890000000026e-05, 7.570900000000019e-05, 7.602799999999882e-05, 7.604200000000533e-05, 7.5763999999999e-05, 7.647200000000104e-05, 7.598600000000011e-05, 7.624999999999993e-05, 7.624999999999993e-05, 7.655599999999846e-05, 7.655499999999898e-05, 7.652799999999932e-05, 7.58189999999978e-05, 7.65839999999976e-05, 7.598600000000011e-05, 7.663900000000334e-05, 7.607000000000447e-05, 7.619400000000165e-05, 7.572200000000029e-05, 7.623599999999342e-05, 7.601399999999925e-05, 7.599999999999968e-05, 7.658299999999812e-05, 7.583299999999737e-05, 7.595800000000097e-05]</msg>
<status status="PASS" starttime="20201030 15:56:43.502" endtime="20201030 15:56:43.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.491" endtime="20201030 15:56:43.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:43.518" endtime="20201030 15:56:43.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.514" endtime="20201030 15:56:43.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.511" endtime="20201030 15:56:43.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.024" endtime="20201030 15:56:43.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.023" endtime="20201030 15:56:43.543"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.566" endtime="20201030 15:56:43.585"></status>
</kw>
<msg timestamp="20201030 15:56:43.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.563" endtime="20201030 15:56:43.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.588" endtime="20201030 15:56:43.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.595" endtime="20201030 15:56:43.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.555" endtime="20201030 15:56:43.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.550" endtime="20201030 15:56:43.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.618" endtime="20201030 15:56:43.956"></status>
</kw>
<msg timestamp="20201030 15:56:43.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039754972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039832222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.615" endtime="20201030 15:56:43.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039754972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039832222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.966" endtime="20201030 15:56:43.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.985" endtime="20201030 15:56:43.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.607" endtime="20201030 15:56:43.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.603" endtime="20201030 15:56:43.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:44.002" level="INFO">${RESULT} = [{'diff': 7.725000000000093e-05}, {'diff': 7.723599999999442e-05}, {'diff': 7.719400000000265e-05}, {'diff': 7.702799999999982e-05}, {'diff': 7.668100000000205e-05}, {'diff': 7.716699999999604e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:43.993" endtime="20201030 15:56:44.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:44.011" level="INFO">${ACCURACY} = {'diff': [7.725000000000093e-05, 7.723599999999442e-05, 7.719400000000265e-05, 7.702799999999982e-05, 7.668100000000205e-05, 7.716699999999604e-05, 7.670800000000172e-05, 7.665300000000291e-05, 7.7569...</msg>
<status status="PASS" starttime="20201030 15:56:44.004" endtime="20201030 15:56:44.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.022" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:56:44.020" endtime="20201030 15:56:44.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.028" level="INFO">VALUE: [7.725000000000093e-05, 7.723599999999442e-05, 7.719400000000265e-05, 7.702799999999982e-05, 7.668100000000205e-05, 7.716699999999604e-05, 7.670800000000172e-05, 7.665300000000291e-05, 7.756999999999903e-05, 7.688800000000412e-05, 7.673600000000086e-05, 7.702799999999982e-05, 7.72770000000006e-05, 7.6764e-05, 7.669399999999521e-05, 7.706999999999853e-05, 7.711099999999776e-05, 7.755499999999999e-05, 7.698600000000111e-05, 7.72640000000005e-05, 7.679099999999967e-05, 7.750000000000118e-05, 7.754100000000042e-05, 7.681999999999828e-05, 7.700000000000068e-05, 7.73890000000041e-05, 7.716699999999604e-05, 7.727800000000007e-05, 7.737499999999758e-05, 7.715300000000341e-05, 7.69440000000024e-05, 7.6764e-05, 7.71110000000047e-05, 7.73189999999993e-05, 7.745900000000194e-05, 7.713900000000384e-05, 7.665300000000291e-05, 7.712499999999733e-05, 7.730599999999921e-05, 7.684700000000488e-05, 7.712500000000427e-05, 7.658400000000454e-05, 7.752700000000085e-05, 7.705499999999949e-05, 7.679199999999914e-05, 7.684700000000488e-05, 7.74310000000028e-05, 7.725000000000093e-05, 7.75839999999986e-05, 7.750000000000118e-05]</msg>
<status status="PASS" starttime="20201030 15:56:44.025" endtime="20201030 15:56:44.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.013" endtime="20201030 15:56:44.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:44.040" endtime="20201030 15:56:44.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.036" endtime="20201030 15:56:44.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.033" endtime="20201030 15:56:44.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.545" endtime="20201030 15:56:44.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.544" endtime="20201030 15:56:44.065"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.088" endtime="20201030 15:56:44.113"></status>
</kw>
<msg timestamp="20201030 15:56:44.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:44.085" endtime="20201030 15:56:44.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:44.116" endtime="20201030 15:56:44.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.123" endtime="20201030 15:56:44.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.078" endtime="20201030 15:56:44.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.072" endtime="20201030 15:56:44.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.146" endtime="20201030 15:56:44.481"></status>
</kw>
<msg timestamp="20201030 15:56:44.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045402472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045480181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:44.143" endtime="20201030 15:56:44.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045402472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045480181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:44.491" endtime="20201030 15:56:44.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.510" endtime="20201030 15:56:44.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.136" endtime="20201030 15:56:44.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.131" endtime="20201030 15:56:44.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:44.527" level="INFO">${RESULT} = [{'diff': 7.770900000000219e-05}, {'diff': 7.830500000000074e-05}, {'diff': 7.81389999999979e-05}, {'diff': 7.837499999999858e-05}, {'diff': 7.811099999999876e-05}, {'diff': 7.820899999999575e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:44.518" endtime="20201030 15:56:44.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:44.536" level="INFO">${ACCURACY} = {'diff': [7.770900000000219e-05, 7.830500000000074e-05, 7.81389999999979e-05, 7.837499999999858e-05, 7.811099999999876e-05, 7.820899999999575e-05, 7.762499999999783e-05, 7.836099999999901e-05, 7.81950...</msg>
<status status="PASS" starttime="20201030 15:56:44.529" endtime="20201030 15:56:44.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.547" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:56:44.545" endtime="20201030 15:56:44.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.553" level="INFO">VALUE: [7.770900000000219e-05, 7.830500000000074e-05, 7.81389999999979e-05, 7.837499999999858e-05, 7.811099999999876e-05, 7.820899999999575e-05, 7.762499999999783e-05, 7.836099999999901e-05, 7.819500000000312e-05, 7.766700000000348e-05, 7.794500000000287e-05, 7.787499999999808e-05, 7.817999999999714e-05, 7.823600000000236e-05, 7.815299999999747e-05, 7.862499999999883e-05, 7.848700000000208e-05, 7.798600000000211e-05, 7.812499999999833e-05, 7.801399999999431e-05, 7.791700000000373e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.763900000000434e-05, 7.840300000000466e-05, 7.812499999999833e-05, 7.7764000000001e-05, 7.802800000000082e-05, 7.815299999999747e-05, 7.854200000000089e-05, 7.76389999999974e-05, 7.823600000000236e-05, 7.787499999999808e-05, 7.829200000000064e-05, 7.770900000000219e-05, 7.816600000000451e-05, 7.79169999999968e-05, 7.794500000000287e-05, 7.822199999999585e-05, 7.784699999999894e-05, 7.851299999999534e-05, 7.83890000000051e-05, 7.815299999999747e-05, 7.844499999999643e-05, 7.848600000000261e-05, 7.84310000000038e-05, 7.770900000000219e-05, 7.840299999999772e-05, 7.840300000000466e-05, 7.762499999999783e-05]</msg>
<status status="PASS" starttime="20201030 15:56:44.549" endtime="20201030 15:56:44.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.538" endtime="20201030 15:56:44.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:44.571" endtime="20201030 15:56:44.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.565" endtime="20201030 15:56:44.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.563" endtime="20201030 15:56:44.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.067" endtime="20201030 15:56:44.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.066" endtime="20201030 15:56:44.597"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.620" endtime="20201030 15:56:44.642"></status>
</kw>
<msg timestamp="20201030 15:56:44.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:44.616" endtime="20201030 15:56:44.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:44.646" endtime="20201030 15:56:44.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.652" endtime="20201030 15:56:44.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.609" endtime="20201030 15:56:44.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.603" endtime="20201030 15:56:44.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.676" endtime="20201030 15:56:45.033"></status>
</kw>
<msg timestamp="20201030 15:56:45.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040527236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040606292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:44.672" endtime="20201030 15:56:45.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040527236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040606292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:45.043" endtime="20201030 15:56:45.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.062" endtime="20201030 15:56:45.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.665" endtime="20201030 15:56:45.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.660" endtime="20201030 15:56:45.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:45.079" level="INFO">${RESULT} = [{'diff': 7.905600000000096e-05}, {'diff': 7.858300000000012e-05}, {'diff': 7.888899999999865e-05}, {'diff': 7.869500000000362e-05}, {'diff': 7.951400000000275e-05}, {'diff': 7.868000000000458e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:45.071" endtime="20201030 15:56:45.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:45.090" level="INFO">${ACCURACY} = {'diff': [7.905600000000096e-05, 7.858300000000012e-05, 7.888899999999865e-05, 7.869500000000362e-05, 7.951400000000275e-05, 7.868000000000458e-05, 7.915299999999847e-05, 7.85839999999996e-05, 7.95280...</msg>
<status status="PASS" starttime="20201030 15:56:45.082" endtime="20201030 15:56:45.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.101" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:56:45.099" endtime="20201030 15:56:45.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.107" level="INFO">VALUE: [7.905600000000096e-05, 7.858300000000012e-05, 7.888899999999865e-05, 7.869500000000362e-05, 7.951400000000275e-05, 7.868000000000458e-05, 7.915299999999847e-05, 7.85839999999996e-05, 7.952800000000232e-05, 7.891599999999832e-05, 7.912499999999933e-05, 7.941700000000523e-05, 7.90840000000001e-05, 7.887499999999908e-05, 7.911099999999976e-05, 7.855600000000046e-05, 7.927800000000207e-05, 7.869499999999668e-05, 7.907000000000053e-05, 7.891599999999832e-05, 7.879099999999473e-05, 7.8764000000002e-05, 7.952800000000232e-05, 7.930600000000121e-05, 7.943099999999786e-05, 7.931899999999437e-05, 7.86110000000062e-05, 7.861099999999926e-05, 7.866699999999754e-05, 7.957000000000103e-05, 7.86389999999984e-05, 7.865299999999797e-05, 7.919500000000412e-05, 7.913799999999943e-05, 7.88190000000008e-05, 7.932000000000078e-05, 7.912499999999933e-05, 7.938899999999915e-05, 7.94310000000048e-05, 7.894399999999746e-05, 7.94719999999971e-05, 7.951299999999634e-05, 7.87919999999942e-05, 7.933300000000088e-05, 7.913900000000584e-05, 7.951399999999581e-05, 7.940299999999872e-05, 7.890299999999822e-05, 7.9151999999999e-05, 7.94719999999971e-05]</msg>
<status status="PASS" starttime="20201030 15:56:45.104" endtime="20201030 15:56:45.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.092" endtime="20201030 15:56:45.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:45.120" endtime="20201030 15:56:45.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.115" endtime="20201030 15:56:45.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.113" endtime="20201030 15:56:45.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.599" endtime="20201030 15:56:45.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.598" endtime="20201030 15:56:45.145"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.168" endtime="20201030 15:56:45.190"></status>
</kw>
<msg timestamp="20201030 15:56:45.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:45.165" endtime="20201030 15:56:45.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:45.194" endtime="20201030 15:56:45.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.200" endtime="20201030 15:56:45.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.158" endtime="20201030 15:56:45.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.152" endtime="20201030 15:56:45.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.224" endtime="20201030 15:56:45.576"></status>
</kw>
<msg timestamp="20201030 15:56:45.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040375056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040455375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:45.221" endtime="20201030 15:56:45.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040375056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040455375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:45.587" endtime="20201030 15:56:45.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.606" endtime="20201030 15:56:45.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.213" endtime="20201030 15:56:45.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.208" endtime="20201030 15:56:45.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:45.624" level="INFO">${RESULT} = [{'diff': 8.03190000000023e-05}, {'diff': 8.033400000000135e-05}, {'diff': 7.962499999999983e-05}, {'diff': 8.032000000000178e-05}, {'diff': 7.987500000000008e-05}, {'diff': 8.020799999999828e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:45.615" endtime="20201030 15:56:45.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:45.635" level="INFO">${ACCURACY} = {'diff': [8.03190000000023e-05, 8.033400000000135e-05, 7.962499999999983e-05, 8.032000000000178e-05, 7.987500000000008e-05, 8.020799999999828e-05, 8.040300000000666e-05, 8.051400000000375e-05, 8.02500...</msg>
<status status="PASS" starttime="20201030 15:56:45.626" endtime="20201030 15:56:45.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.645" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:56:45.643" endtime="20201030 15:56:45.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.651" level="INFO">VALUE: [8.03190000000023e-05, 8.033400000000135e-05, 7.962499999999983e-05, 8.032000000000178e-05, 7.987500000000008e-05, 8.020799999999828e-05, 8.040300000000666e-05, 8.051400000000375e-05, 8.025000000000393e-05, 8.001400000000325e-05, 7.99589999999975e-05, 7.972200000000429e-05, 8.015299999999947e-05, 7.959800000000017e-05, 8.023599999999742e-05, 8.01389999999999e-05, 7.976399999999606e-05, 8.011100000000076e-05, 8.026299999999709e-05, 8.001399999999631e-05, 7.99169999999988e-05, 7.968100000000505e-05, 8.001400000000325e-05, 7.984800000000042e-05, 7.966700000000548e-05, 7.990199999999975e-05, 7.995799999999803e-05, 7.997300000000401e-05, 7.976399999999606e-05, 7.984800000000042e-05, 8.067999999999964e-05, 7.977800000000257e-05, 8.03049999999958e-05, 7.998599999999717e-05, 7.997200000000454e-05, 8.024999999999699e-05, 8.006900000000206e-05, 7.965299999999897e-05, 7.979099999999573e-05, 8.01389999999999e-05, 8.03049999999958e-05, 8.052800000000332e-05, 8.006900000000206e-05, 8.019400000000565e-05, 8.020799999999828e-05, 8.016699999999904e-05, 8.033400000000135e-05, 8.020799999999828e-05, 7.966699999999854e-05, 8.045800000000547e-05]</msg>
<status status="PASS" starttime="20201030 15:56:45.648" endtime="20201030 15:56:45.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.637" endtime="20201030 15:56:45.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:45.663" endtime="20201030 15:56:45.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.659" endtime="20201030 15:56:45.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.656" endtime="20201030 15:56:45.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.147" endtime="20201030 15:56:45.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.146" endtime="20201030 15:56:45.688"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.710" endtime="20201030 15:56:45.729"></status>
</kw>
<msg timestamp="20201030 15:56:45.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:45.707" endtime="20201030 15:56:45.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:45.733" endtime="20201030 15:56:45.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.739" endtime="20201030 15:56:45.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.700" endtime="20201030 15:56:45.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.694" endtime="20201030 15:56:45.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.762" endtime="20201030 15:56:46.098"></status>
</kw>
<msg timestamp="20201030 15:56:46.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038903833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038984458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:45.759" endtime="20201030 15:56:46.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038903833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038984458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:46.107" endtime="20201030 15:56:46.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.126" endtime="20201030 15:56:46.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.751" endtime="20201030 15:56:46.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.747" endtime="20201030 15:56:46.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:46.143" level="INFO">${RESULT} = [{'diff': 8.062500000000083e-05}, {'diff': 8.118000000000014e-05}, {'diff': 8.154200000000389e-05}, {'diff': 8.058300000000213e-05}, {'diff': 8.093099999999936e-05}, {'diff': 8.084700000000195e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:46.134" endtime="20201030 15:56:46.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:46.153" level="INFO">${ACCURACY} = {'diff': [8.062500000000083e-05, 8.118000000000014e-05, 8.154200000000389e-05, 8.058300000000213e-05, 8.093099999999936e-05, 8.084700000000195e-05, 8.074999999999749e-05, 8.061200000000074e-05, 8.0846...</msg>
<status status="PASS" starttime="20201030 15:56:46.145" endtime="20201030 15:56:46.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.163" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:56:46.161" endtime="20201030 15:56:46.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.169" level="INFO">VALUE: [8.062500000000083e-05, 8.118000000000014e-05, 8.154200000000389e-05, 8.058300000000213e-05, 8.093099999999936e-05, 8.084700000000195e-05, 8.074999999999749e-05, 8.061200000000074e-05, 8.0846999999995e-05, 8.087500000000108e-05, 8.115300000000047e-05, 8.111100000000177e-05, 8.113800000000143e-05, 8.098700000000458e-05, 8.12640000000045e-05, 8.145799999999953e-05, 8.088900000000065e-05, 8.115300000000047e-05, 8.087499999999415e-05, 8.07919999999962e-05, 8.10840000000021e-05, 8.065199999999356e-05, 8.082000000000228e-05, 8.131999999999584e-05, 8.133299999999594e-05, 8.090300000000022e-05, 8.088900000000065e-05, 8.130500000000374e-05, 8.145799999999953e-05, 8.123599999999842e-05, 8.1152000000001e-05, 8.147300000000551e-05, 8.136100000000202e-05, 8.14310000000068e-05, 8.11249999999944e-05, 8.124999999999799e-05, 8.108300000000263e-05, 8.107000000000253e-05, 8.058300000000213e-05, 8.144399999999996e-05, 8.08190000000028e-05, 8.079200000000314e-05, 8.123599999999842e-05, 8.143099999999986e-05, 8.09719999999986e-05, 8.108300000000263e-05, 8.133300000000288e-05, 8.108399999999516e-05, 8.101399999999731e-05, 8.070800000000572e-05]</msg>
<status status="PASS" starttime="20201030 15:56:46.166" endtime="20201030 15:56:46.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.155" endtime="20201030 15:56:46.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:46.181" endtime="20201030 15:56:46.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.177" endtime="20201030 15:56:46.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.175" endtime="20201030 15:56:46.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.690" endtime="20201030 15:56:46.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.689" endtime="20201030 15:56:46.206"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.229" endtime="20201030 15:56:46.249"></status>
</kw>
<msg timestamp="20201030 15:56:46.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:46.225" endtime="20201030 15:56:46.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:46.253" endtime="20201030 15:56:46.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.259" endtime="20201030 15:56:46.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.218" endtime="20201030 15:56:46.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.213" endtime="20201030 15:56:46.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.289" endtime="20201030 15:56:46.632"></status>
</kw>
<msg timestamp="20201030 15:56:46.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040570986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040653361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:46.285" endtime="20201030 15:56:46.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040570986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040653361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:46.641" endtime="20201030 15:56:46.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.660" endtime="20201030 15:56:46.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.272" endtime="20201030 15:56:46.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.267" endtime="20201030 15:56:46.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:46.677" level="INFO">${RESULT} = [{'diff': 8.237499999999565e-05}, {'diff': 8.170799999999978e-05}, {'diff': 8.205599999999702e-05}, {'diff': 8.234700000000345e-05}, {'diff': 8.20970000000032e-05}, {'diff': 8.17919999999972e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:46.668" endtime="20201030 15:56:46.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:46.686" level="INFO">${ACCURACY} = {'diff': [8.237499999999565e-05, 8.170799999999978e-05, 8.205599999999702e-05, 8.234700000000345e-05, 8.20970000000032e-05, 8.17919999999972e-05, 8.248599999999967e-05, 8.226399999999856e-05, 8.251299...</msg>
<status status="PASS" starttime="20201030 15:56:46.679" endtime="20201030 15:56:46.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.697" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:56:46.695" endtime="20201030 15:56:46.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.702" level="INFO">VALUE: [8.237499999999565e-05, 8.170799999999978e-05, 8.205599999999702e-05, 8.234700000000345e-05, 8.20970000000032e-05, 8.17919999999972e-05, 8.248599999999967e-05, 8.226399999999856e-05, 8.251299999999934e-05, 8.252800000000532e-05, 8.244399999999402e-05, 8.179200000000414e-05, 8.240199999999531e-05, 8.194499999999993e-05, 8.16249999999949e-05, 8.26390000000024e-05, 8.190300000000122e-05, 8.233299999999694e-05, 8.256899999999762e-05, 8.261100000000327e-05, 8.21390000000019e-05, 8.174999999999849e-05, 8.24720000000001e-05, 8.184700000000295e-05, 8.186100000000252e-05, 8.170799999999978e-05, 8.188900000000165e-05, 8.238900000000215e-05, 8.216700000000104e-05, 8.182000000000328e-05, 8.20970000000032e-05, 8.175000000000543e-05, 8.251399999999881e-05, 8.187500000000208e-05, 8.222199999999985e-05, 8.227699999999866e-05, 8.255599999999752e-05, 8.23469999999965e-05, 8.205500000000449e-05, 8.252800000000532e-05, 8.169499999999968e-05, 8.245799999999359e-05, 8.174999999999849e-05, 8.241600000000182e-05, 8.16520000000015e-05, 8.190299999999429e-05, 8.201399999999831e-05, 8.2152000000002e-05, 8.244500000000043e-05, 8.194499999999993e-05]</msg>
<status status="PASS" starttime="20201030 15:56:46.699" endtime="20201030 15:56:46.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.688" endtime="20201030 15:56:46.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:46.716" endtime="20201030 15:56:46.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.710" endtime="20201030 15:56:46.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.708" endtime="20201030 15:56:46.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.209" endtime="20201030 15:56:46.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.207" endtime="20201030 15:56:46.741"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.763" endtime="20201030 15:56:46.782"></status>
</kw>
<msg timestamp="20201030 15:56:46.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:46.760" endtime="20201030 15:56:46.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:46.786" endtime="20201030 15:56:46.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.792" endtime="20201030 15:56:46.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.753" endtime="20201030 15:56:46.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.747" endtime="20201030 15:56:46.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.815" endtime="20201030 15:56:47.145"></status>
</kw>
<msg timestamp="20201030 15:56:47.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038806014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038889167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:46.812" endtime="20201030 15:56:47.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038806014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038889167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:47.155" endtime="20201030 15:56:47.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.173" endtime="20201030 15:56:47.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.804" endtime="20201030 15:56:47.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.800" endtime="20201030 15:56:47.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:47.190" level="INFO">${RESULT} = [{'diff': 8.315300000000247e-05}, {'diff': 8.337499999999665e-05}, {'diff': 8.302799999999888e-05}, {'diff': 8.354200000000589e-05}, {'diff': 8.319400000000171e-05}, {'diff': 8.306899999999812e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:47.181" endtime="20201030 15:56:47.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:47.201" level="INFO">${ACCURACY} = {'diff': [8.315300000000247e-05, 8.337499999999665e-05, 8.302799999999888e-05, 8.354200000000589e-05, 8.319400000000171e-05, 8.306899999999812e-05, 8.334700000000445e-05, 8.283300000000438e-05, 8.3486...</msg>
<status status="PASS" starttime="20201030 15:56:47.192" endtime="20201030 15:56:47.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.211" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:56:47.209" endtime="20201030 15:56:47.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.217" level="INFO">VALUE: [8.315300000000247e-05, 8.337499999999665e-05, 8.302799999999888e-05, 8.354200000000589e-05, 8.319400000000171e-05, 8.306899999999812e-05, 8.334700000000445e-05, 8.283300000000438e-05, 8.348600000000067e-05, 8.327799999999913e-05, 8.290299999999529e-05, 8.294500000000093e-05, 8.3459000000001e-05, 8.298600000000017e-05, 8.263899999999547e-05, 8.266700000000154e-05, 8.312500000000334e-05, 8.309699999999726e-05, 8.350000000000024e-05, 8.357000000000503e-05, 8.29720000000006e-05, 8.27369999999994e-05, 8.323600000000042e-05, 8.281999999999734e-05, 8.31249999999964e-05, 8.283299999999744e-05, 8.306899999999812e-05, 8.277799999999863e-05, 8.329099999999923e-05, 8.3152000000003e-05, 8.350000000000024e-05, 8.295800000000103e-05, 8.276399999999906e-05, 8.329099999999923e-05, 8.323600000000042e-05, 8.30970000000042e-05, 8.308299999999769e-05, 8.298600000000017e-05, 8.334700000000445e-05, 8.30970000000042e-05, 8.270800000000078e-05, 8.352799999999938e-05, 8.290300000000222e-05, 8.313799999999649e-05, 8.302699999999941e-05, 8.31249999999964e-05, 8.272200000000035e-05, 8.281899999999787e-05, 8.359800000000417e-05, 8.26669999999946e-05]</msg>
<status status="PASS" starttime="20201030 15:56:47.214" endtime="20201030 15:56:47.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.202" endtime="20201030 15:56:47.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:47.229" endtime="20201030 15:56:47.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.225" endtime="20201030 15:56:47.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.222" endtime="20201030 15:56:47.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.743" endtime="20201030 15:56:47.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.742" endtime="20201030 15:56:47.254"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.276" endtime="20201030 15:56:47.295"></status>
</kw>
<msg timestamp="20201030 15:56:47.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:47.273" endtime="20201030 15:56:47.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:47.299" endtime="20201030 15:56:47.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.305" endtime="20201030 15:56:47.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.266" endtime="20201030 15:56:47.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.260" endtime="20201030 15:56:47.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.339" endtime="20201030 15:56:47.676"></status>
</kw>
<msg timestamp="20201030 15:56:47.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038990222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039074458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:47.336" endtime="20201030 15:56:47.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038990222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039074458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:47.685" endtime="20201030 15:56:47.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.704" endtime="20201030 15:56:47.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.328" endtime="20201030 15:56:47.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.323" endtime="20201030 15:56:47.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:47.721" level="INFO">${RESULT} = [{'diff': 8.423600000000142e-05}, {'diff': 8.387500000000409e-05}, {'diff': 8.406899999999912e-05}, {'diff': 8.401400000000031e-05}, {'diff': 8.361099999999733e-05}, {'diff': 8.431899999999937e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:47.712" endtime="20201030 15:56:47.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:47.733" level="INFO">${ACCURACY} = {'diff': [8.423600000000142e-05, 8.387500000000409e-05, 8.406899999999912e-05, 8.401400000000031e-05, 8.361099999999733e-05, 8.431899999999937e-05, 8.419500000000218e-05, 8.40840000000051e-05, 8.42220...</msg>
<status status="PASS" starttime="20201030 15:56:47.723" endtime="20201030 15:56:47.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.743" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:56:47.741" endtime="20201030 15:56:47.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.749" level="INFO">VALUE: [8.423600000000142e-05, 8.387500000000409e-05, 8.406899999999912e-05, 8.401400000000031e-05, 8.361099999999733e-05, 8.431899999999937e-05, 8.419500000000218e-05, 8.40840000000051e-05, 8.422200000000185e-05, 8.423600000000142e-05, 8.36799999999957e-05, 8.374999999999355e-05, 8.369500000000168e-05, 8.46249999999979e-05, 8.457000000000603e-05, 8.391699999999586e-05, 8.448600000000167e-05, 8.384700000000495e-05, 8.452700000000091e-05, 8.422300000000132e-05, 8.427800000000013e-05, 8.434799999999798e-05, 8.393099999999543e-05, 8.373600000000092e-05, 8.369400000000221e-05, 8.459699999999876e-05, 8.372200000000135e-05, 8.45840000000056e-05, 8.441699999999636e-05, 8.406899999999912e-05, 8.418099999999568e-05, 8.443099999999593e-05, 8.445799999999559e-05, 8.448700000000114e-05, 8.452800000000038e-05, 8.395800000000203e-05, 8.369400000000221e-05, 8.365300000000297e-05, 8.445899999999507e-05, 8.433300000000588e-05, 8.370800000000178e-05, 8.369400000000221e-05, 8.43049999999998e-05, 8.370800000000178e-05, 8.454199999999995e-05, 8.386100000000452e-05, 8.377799999999963e-05, 8.39170000000028e-05, 8.441699999999636e-05, 8.416700000000304e-05]</msg>
<status status="PASS" starttime="20201030 15:56:47.746" endtime="20201030 15:56:47.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.734" endtime="20201030 15:56:47.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:47.761" endtime="20201030 15:56:47.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.757" endtime="20201030 15:56:47.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.754" endtime="20201030 15:56:47.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.256" endtime="20201030 15:56:47.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.255" endtime="20201030 15:56:47.786"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.809" endtime="20201030 15:56:47.829"></status>
</kw>
<msg timestamp="20201030 15:56:47.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:47.806" endtime="20201030 15:56:47.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:47.832" endtime="20201030 15:56:47.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.838" endtime="20201030 15:56:47.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.799" endtime="20201030 15:56:47.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.793" endtime="20201030 15:56:47.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.861" endtime="20201030 15:56:48.201"></status>
</kw>
<msg timestamp="20201030 15:56:48.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039556208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039641722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:47.858" endtime="20201030 15:56:48.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039556208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039641722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:48.210" endtime="20201030 15:56:48.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.229" endtime="20201030 15:56:48.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.851" endtime="20201030 15:56:48.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.846" endtime="20201030 15:56:48.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:48.247" level="INFO">${RESULT} = [{'diff': 8.551399999999487e-05}, {'diff': 8.473600000000192e-05}, {'diff': 8.500000000000174e-05}, {'diff': 8.472300000000182e-05}, {'diff': 8.504200000000045e-05}, {'diff': 8.506900000000012e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:48.238" endtime="20201030 15:56:48.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:48.256" level="INFO">${ACCURACY} = {'diff': [8.551399999999487e-05, 8.473600000000192e-05, 8.500000000000174e-05, 8.472300000000182e-05, 8.504200000000045e-05, 8.506900000000012e-05, 8.51390000000049e-05, 8.502700000000141e-05, 8.51669...</msg>
<status status="PASS" starttime="20201030 15:56:48.249" endtime="20201030 15:56:48.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.267" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:56:48.265" endtime="20201030 15:56:48.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.273" level="INFO">VALUE: [8.551399999999487e-05, 8.473600000000192e-05, 8.500000000000174e-05, 8.472300000000182e-05, 8.504200000000045e-05, 8.506900000000012e-05, 8.51390000000049e-05, 8.502700000000141e-05, 8.51669999999971e-05, 8.50129999999949e-05, 8.4846999999999e-05, 8.518099999999668e-05, 8.52920000000007e-05, 8.4846999999999e-05, 8.5459000000003e-05, 8.563899999999847e-05, 8.522199999999591e-05, 8.537499999999865e-05, 8.487499999999815e-05, 8.540300000000473e-05, 8.505600000000002e-05, 8.531999999999984e-05, 8.515299999999754e-05, 8.555600000000052e-05, 8.557000000000009e-05, 8.550000000000224e-05, 8.524999999999505e-05, 8.476400000000106e-05, 8.541600000000482e-05, 8.500000000000174e-05, 8.527800000000113e-05, 8.465199999999756e-05, 8.559699999999976e-05, 8.545899999999607e-05, 8.475000000000149e-05, 8.51799999999972e-05, 8.511099999999883e-05, 8.491600000000432e-05, 8.470800000000278e-05, 8.531900000000037e-05, 8.472200000000235e-05, 8.508299999999969e-05, 8.557000000000009e-05, 8.525000000000199e-05, 8.484799999999848e-05, 8.516700000000405e-05, 8.548600000000267e-05, 8.545899999999607e-05, 8.556900000000062e-05, 8.530600000000027e-05]</msg>
<status status="PASS" starttime="20201030 15:56:48.269" endtime="20201030 15:56:48.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.258" endtime="20201030 15:56:48.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:48.285" endtime="20201030 15:56:48.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.281" endtime="20201030 15:56:48.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.278" endtime="20201030 15:56:48.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.789" endtime="20201030 15:56:48.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.787" endtime="20201030 15:56:48.310"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.333" endtime="20201030 15:56:48.354"></status>
</kw>
<msg timestamp="20201030 15:56:48.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.330" endtime="20201030 15:56:48.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.358" endtime="20201030 15:56:48.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.364" endtime="20201030 15:56:48.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.322" endtime="20201030 15:56:48.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.316" endtime="20201030 15:56:48.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.389" endtime="20201030 15:56:48.724"></status>
</kw>
<msg timestamp="20201030 15:56:48.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041169403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041255028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:48.385" endtime="20201030 15:56:48.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041169403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041255028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:48.734" endtime="20201030 15:56:48.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.753" endtime="20201030 15:56:48.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.378" endtime="20201030 15:56:48.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.373" endtime="20201030 15:56:48.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:48.770" level="INFO">${RESULT} = [{'diff': 8.56249999999989e-05}, {'diff': 8.61249999999994e-05}, {'diff': 8.568100000000411e-05}, {'diff': 8.59999999999958e-05}, {'diff': 8.629199999999476e-05}, {'diff': 8.59170000000048e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:56:48.761" endtime="20201030 15:56:48.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:48.779" level="INFO">${ACCURACY} = {'diff': [8.56249999999989e-05, 8.61249999999994e-05, 8.568100000000411e-05, 8.59999999999958e-05, 8.629199999999476e-05, 8.59170000000048e-05, 8.611099999999983e-05, 8.601399999999537e-05, 8.60410000...</msg>
<status status="PASS" starttime="20201030 15:56:48.772" endtime="20201030 15:56:48.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.790" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:56:48.788" endtime="20201030 15:56:48.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.796" level="INFO">VALUE: [8.56249999999989e-05, 8.61249999999994e-05, 8.568100000000411e-05, 8.59999999999958e-05, 8.629199999999476e-05, 8.59170000000048e-05, 8.611099999999983e-05, 8.601399999999537e-05, 8.604100000000198e-05, 8.604200000000145e-05, 8.61390000000059e-05, 8.563899999999847e-05, 8.655500000000205e-05, 8.57920000000012e-05, 8.570800000000378e-05, 8.586099999999958e-05, 8.575000000000249e-05, 8.651400000000281e-05, 8.638899999999922e-05, 8.608300000000069e-05, 8.611099999999983e-05, 8.651399999999587e-05, 8.568099999999718e-05, 8.575000000000249e-05, 8.630600000000127e-05, 8.597199999999666e-05, 8.627799999999519e-05, 8.663899999999947e-05, 8.570799999999684e-05, 8.63470000000005e-05, 8.61249999999994e-05, 8.593099999999743e-05, 8.563799999999899e-05, 8.654200000000195e-05, 8.66249999999999e-05, 8.629199999999476e-05, 8.59590000000035e-05, 8.659699999999382e-05, 8.636100000000008e-05, 8.620899999999682e-05, 8.637499999999965e-05, 8.586099999999958e-05, 8.586099999999958e-05, 8.651400000000281e-05, 8.636199999999955e-05, 8.592999999999795e-05, 8.623600000000342e-05, 8.656899999999468e-05, 8.630600000000127e-05, 8.652800000000238e-05]</msg>
<status status="PASS" starttime="20201030 15:56:48.793" endtime="20201030 15:56:48.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.781" endtime="20201030 15:56:48.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:48.810" endtime="20201030 15:56:48.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.804" endtime="20201030 15:56:48.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.801" endtime="20201030 15:56:48.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.312" endtime="20201030 15:56:48.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.311" endtime="20201030 15:56:48.835"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.861" endtime="20201030 15:56:48.881"></status>
</kw>
<msg timestamp="20201030 15:56:48.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.858" endtime="20201030 15:56:48.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.884" endtime="20201030 15:56:48.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.891" endtime="20201030 15:56:48.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.848" endtime="20201030 15:56:48.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.841" endtime="20201030 15:56:48.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.914" endtime="20201030 15:56:49.250"></status>
</kw>
<msg timestamp="20201030 15:56:49.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043454292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043541167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:48.911" endtime="20201030 15:56:49.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043454292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043541167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.259" endtime="20201030 15:56:49.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.278" endtime="20201030 15:56:49.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.904" endtime="20201030 15:56:49.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.899" endtime="20201030 15:56:49.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:49.295" level="INFO">${RESULT} = [{'diff': 8.687500000000015e-05}, {'diff': 8.754199999999601e-05}, {'diff': 8.704100000000298e-05}, {'diff': 8.67920000000022e-05}, {'diff': 8.756899999999568e-05}, {'diff': 8.759799999999429e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:49.287" endtime="20201030 15:56:49.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:49.311" level="INFO">${ACCURACY} = {'diff': [8.687500000000015e-05, 8.754199999999601e-05, 8.704100000000298e-05, 8.67920000000022e-05, 8.756899999999568e-05, 8.759799999999429e-05, 8.69999999999968e-05, 8.74869999999972e-05, 8.6888999...</msg>
<status status="PASS" starttime="20201030 15:56:49.298" endtime="20201030 15:56:49.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.321" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:56:49.319" endtime="20201030 15:56:49.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.327" level="INFO">VALUE: [8.687500000000015e-05, 8.754199999999601e-05, 8.704100000000298e-05, 8.67920000000022e-05, 8.756899999999568e-05, 8.759799999999429e-05, 8.69999999999968e-05, 8.74869999999972e-05, 8.688899999999972e-05, 8.665299999999904e-05, 8.706999999999465e-05, 8.755500000000305e-05, 8.754100000000348e-05, 8.702800000000288e-05, 8.715299999999954e-05, 8.680499999999536e-05, 8.743100000000587e-05, 8.752800000000338e-05, 8.686100000000058e-05, 8.697299999999714e-05, 8.693099999999843e-05, 8.725000000000399e-05, 8.68050000000023e-05, 8.686100000000058e-05, 8.71250000000004e-05, 8.761100000000133e-05, 8.748599999999773e-05, 8.683400000000091e-05, 8.68050000000023e-05, 8.72370000000039e-05, 8.705499999999561e-05, 8.747199999999816e-05, 8.690299999999929e-05, 8.711100000000083e-05, 8.726400000000356e-05, 8.686100000000058e-05, 8.757000000000209e-05, 8.732000000000184e-05, 8.745799999999859e-05, 8.755599999999558e-05, 8.672199999999741e-05, 8.7332999999995e-05, 8.738900000000022e-05, 8.76250000000009e-05, 8.715299999999954e-05, 8.723600000000442e-05, 8.672200000000435e-05, 8.747199999999816e-05, 8.69999999999968e-05, 8.71250000000004e-05]</msg>
<status status="PASS" starttime="20201030 15:56:49.324" endtime="20201030 15:56:49.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.312" endtime="20201030 15:56:49.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:49.340" endtime="20201030 15:56:49.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.335" endtime="20201030 15:56:49.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.333" endtime="20201030 15:56:49.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.837" endtime="20201030 15:56:49.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.836" endtime="20201030 15:56:49.365"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.388" endtime="20201030 15:56:49.408"></status>
</kw>
<msg timestamp="20201030 15:56:49.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.385" endtime="20201030 15:56:49.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.412" endtime="20201030 15:56:49.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.418" endtime="20201030 15:56:49.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.377" endtime="20201030 15:56:49.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.371" endtime="20201030 15:56:49.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.441" endtime="20201030 15:56:49.789"></status>
</kw>
<msg timestamp="20201030 15:56:49.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040768486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040856986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.438" endtime="20201030 15:56:49.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040768486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040856986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.798" endtime="20201030 15:56:49.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.817" endtime="20201030 15:56:49.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.431" endtime="20201030 15:56:49.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.426" endtime="20201030 15:56:49.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:49.834" level="INFO">${RESULT} = [{'diff': 8.84999999999983e-05}, {'diff': 8.840300000000079e-05}, {'diff': 8.819399999999977e-05}, {'diff': 8.838900000000122e-05}, {'diff': 8.787500000000115e-05}, {'diff': 8.802799999999694e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:49.825" endtime="20201030 15:56:49.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:49.845" level="INFO">${ACCURACY} = {'diff': [8.84999999999983e-05, 8.840300000000079e-05, 8.819399999999977e-05, 8.838900000000122e-05, 8.787500000000115e-05, 8.802799999999694e-05, 8.851400000000481e-05, 8.808400000000216e-05, 8.82499...</msg>
<status status="PASS" starttime="20201030 15:56:49.836" endtime="20201030 15:56:49.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.856" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:56:49.854" endtime="20201030 15:56:49.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.862" level="INFO">VALUE: [8.84999999999983e-05, 8.840300000000079e-05, 8.819399999999977e-05, 8.838900000000122e-05, 8.787500000000115e-05, 8.802799999999694e-05, 8.851400000000481e-05, 8.808400000000216e-05, 8.824999999999805e-05, 8.790300000000029e-05, 8.854199999999701e-05, 8.827700000000466e-05, 8.774999999999755e-05, 8.81250000000014e-05, 8.84449999999995e-05, 8.783300000000244e-05, 8.806999999999565e-05, 8.813900000000097e-05, 8.847199999999916e-05, 8.836100000000208e-05, 8.845799999999959e-05, 8.859699999999582e-05, 8.768099999999918e-05, 8.7944999999999e-05, 8.773600000000492e-05, 8.776400000000406e-05, 8.843000000000045e-05, 8.774999999999755e-05, 8.822199999999891e-05, 8.776399999999712e-05, 8.826399999999762e-05, 8.763900000000047e-05, 8.813899999999403e-05, 8.819499999999925e-05, 8.823599999999848e-05, 8.837500000000165e-05, 8.786200000000105e-05, 8.784700000000201e-05, 8.834799999999504e-05, 8.816600000000063e-05, 8.794400000000646e-05, 8.824999999999805e-05, 8.858299999999625e-05, 8.79869999999977e-05, 8.822199999999891e-05, 8.847199999999916e-05, 8.856900000000362e-05, 8.798599999999823e-05, 8.786100000000158e-05, 8.818099999999968e-05]</msg>
<status status="PASS" starttime="20201030 15:56:49.859" endtime="20201030 15:56:49.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.847" endtime="20201030 15:56:49.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:49.879" endtime="20201030 15:56:49.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.875" endtime="20201030 15:56:49.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.872" endtime="20201030 15:56:49.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.367" endtime="20201030 15:56:49.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.365" endtime="20201030 15:56:49.905"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.928" endtime="20201030 15:56:49.949"></status>
</kw>
<msg timestamp="20201030 15:56:49.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.924" endtime="20201030 15:56:49.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.952" endtime="20201030 15:56:49.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.959" endtime="20201030 15:56:49.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.917" endtime="20201030 15:56:49.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.911" endtime="20201030 15:56:49.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.982" endtime="20201030 15:56:50.330"></status>
</kw>
<msg timestamp="20201030 15:56:50.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040259181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040348528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.979" endtime="20201030 15:56:50.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040259181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040348528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.341" endtime="20201030 15:56:50.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.360" endtime="20201030 15:56:50.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.972" endtime="20201030 15:56:50.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.967" endtime="20201030 15:56:50.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:50.377" level="INFO">${RESULT} = [{'diff': 8.934700000000351e-05}, {'diff': 8.915200000000206e-05}, {'diff': 8.94450000000005e-05}, {'diff': 8.891600000000138e-05}, {'diff': 8.897299999999914e-05}, {'diff': 8.94450000000005e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:50.368" endtime="20201030 15:56:50.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:50.387" level="INFO">${ACCURACY} = {'diff': [8.934700000000351e-05, 8.915200000000206e-05, 8.94450000000005e-05, 8.891600000000138e-05, 8.897299999999914e-05, 8.94450000000005e-05, 8.877799999999769e-05, 8.926299999999915e-05, 8.952800...</msg>
<status status="PASS" starttime="20201030 15:56:50.379" endtime="20201030 15:56:50.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.398" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:56:50.395" endtime="20201030 15:56:50.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.403" level="INFO">VALUE: [8.934700000000351e-05, 8.915200000000206e-05, 8.94450000000005e-05, 8.891600000000138e-05, 8.897299999999914e-05, 8.94450000000005e-05, 8.877799999999769e-05, 8.926299999999915e-05, 8.952800000000538e-05, 8.888900000000172e-05, 8.948599999999973e-05, 8.956899999999768e-05, 8.913900000000197e-05, 8.895800000000009e-05, 8.891700000000086e-05, 8.902699999999847e-05, 8.937500000000265e-05, 8.937500000000265e-05, 8.891700000000086e-05, 8.938900000000222e-05, 8.877799999999769e-05, 8.916699999999417e-05, 8.912499999999546e-05, 8.900000000000574e-05, 8.9332999999997e-05, 8.902799999999794e-05, 8.902799999999794e-05, 8.926399999999862e-05, 8.933300000000394e-05, 8.943100000000093e-05, 8.901399999999837e-05, 8.940200000000231e-05, 8.9332999999997e-05, 8.893100000000043e-05, 8.948599999999973e-05, 8.872199999999941e-05, 8.908300000000369e-05, 8.91250000000024e-05, 8.873600000000592e-05, 8.961100000000333e-05, 8.95129999999994e-05, 8.948599999999973e-05, 8.936100000000308e-05, 8.920899999999982e-05, 8.905599999999708e-05, 8.865199999999462e-05, 8.865300000000104e-05, 8.945900000000007e-05, 8.937500000000265e-05, 8.890300000000129e-05]</msg>
<status status="PASS" starttime="20201030 15:56:50.400" endtime="20201030 15:56:50.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.389" endtime="20201030 15:56:50.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:50.417" endtime="20201030 15:56:50.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.412" endtime="20201030 15:56:50.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.409" endtime="20201030 15:56:50.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.907" endtime="20201030 15:56:50.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.905" endtime="20201030 15:56:50.442"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.465" endtime="20201030 15:56:50.488"></status>
</kw>
<msg timestamp="20201030 15:56:50.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.462" endtime="20201030 15:56:50.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.492" endtime="20201030 15:56:50.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.498" endtime="20201030 15:56:50.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.455" endtime="20201030 15:56:50.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.449" endtime="20201030 15:56:50.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.523" endtime="20201030 15:56:50.871"></status>
</kw>
<msg timestamp="20201030 15:56:50.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041972333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042062792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.520" endtime="20201030 15:56:50.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041972333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042062792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.881" endtime="20201030 15:56:50.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.900" endtime="20201030 15:56:50.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.512" endtime="20201030 15:56:50.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.507" endtime="20201030 15:56:50.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:50.917" level="INFO">${RESULT} = [{'diff': 9.045900000000107e-05}, {'diff': 8.986099999999664e-05}, {'diff': 8.976399999999912e-05}, {'diff': 9.026399999999962e-05}, {'diff': 9.052799999999944e-05}, {'diff': 8.994399999999458e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:50.908" endtime="20201030 15:56:50.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:50.926" level="INFO">${ACCURACY} = {'diff': [9.045900000000107e-05, 8.986099999999664e-05, 8.976399999999912e-05, 9.026399999999962e-05, 9.052799999999944e-05, 8.994399999999458e-05, 8.976399999999912e-05, 8.99999999999998e-05, 8.99440...</msg>
<status status="PASS" starttime="20201030 15:56:50.919" endtime="20201030 15:56:50.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.937" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:56:50.935" endtime="20201030 15:56:50.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.943" level="INFO">VALUE: [9.045900000000107e-05, 8.986099999999664e-05, 8.976399999999912e-05, 9.026399999999962e-05, 9.052799999999944e-05, 8.994399999999458e-05, 8.976399999999912e-05, 8.99999999999998e-05, 8.994400000000152e-05, 9.01659999999957e-05, 9.038900000000322e-05, 9.001399999999937e-05, 9.061099999999739e-05, 8.988800000000324e-05, 9.002799999999894e-05, 8.993100000000143e-05, 9.023600000000048e-05, 9.011099999999689e-05, 9.031899999999843e-05, 9.049999999999336e-05, 8.9945000000001e-05, 8.969400000000127e-05, 9.002700000000641e-05, 9.04450000000015e-05, 9.005500000000555e-05, 8.973599999999998e-05, 9.026399999999962e-05, 9.008299999999775e-05, 9.07079999999949e-05, 8.968100000000118e-05, 9.034700000000451e-05, 9.030499999999886e-05, 9.051399999999987e-05, 9.063799999999705e-05, 9.008299999999775e-05, 9.04450000000015e-05, 8.998600000000023e-05, 9.058399999999772e-05, 8.986100000000358e-05, 9.03199999999979e-05, 9.015300000000254e-05, 8.99999999999998e-05, 9.011099999999689e-05, 9.002799999999894e-05, 8.969500000000075e-05, 9.052799999999944e-05, 9.031899999999843e-05, 9.059699999999782e-05, 8.983300000000444e-05, 9.026399999999962e-05]</msg>
<status status="PASS" starttime="20201030 15:56:50.940" endtime="20201030 15:56:50.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.928" endtime="20201030 15:56:50.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:50.957" endtime="20201030 15:56:50.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.951" endtime="20201030 15:56:50.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.949" endtime="20201030 15:56:50.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.444" endtime="20201030 15:56:50.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.443" endtime="20201030 15:56:50.982"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.005" endtime="20201030 15:56:51.026"></status>
</kw>
<msg timestamp="20201030 15:56:51.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.002" endtime="20201030 15:56:51.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.030" endtime="20201030 15:56:51.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.036" endtime="20201030 15:56:51.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.994" endtime="20201030 15:56:51.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.989" endtime="20201030 15:56:51.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.060" endtime="20201030 15:56:51.410"></status>
</kw>
<msg timestamp="20201030 15:56:51.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039996667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040087792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.056" endtime="20201030 15:56:51.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039996667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040087792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.420" endtime="20201030 15:56:51.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.439" endtime="20201030 15:56:51.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.049" endtime="20201030 15:56:51.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.044" endtime="20201030 15:56:51.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:51.457" level="INFO">${RESULT} = [{'diff': 9.112499999999746e-05}, {'diff': 9.065300000000304e-05}, {'diff': 9.079099999999979e-05}, {'diff': 9.105600000000602e-05}, {'diff': 9.125000000000105e-05}, {'diff': 9.077700000000022e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:51.448" endtime="20201030 15:56:51.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:51.468" level="INFO">${ACCURACY} = {'diff': [9.112499999999746e-05, 9.065300000000304e-05, 9.079099999999979e-05, 9.105600000000602e-05, 9.125000000000105e-05, 9.077700000000022e-05, 9.136199999999761e-05, 9.102799999999994e-05, 9.0721...</msg>
<status status="PASS" starttime="20201030 15:56:51.459" endtime="20201030 15:56:51.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.479" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:56:51.477" endtime="20201030 15:56:51.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.485" level="INFO">VALUE: [9.112499999999746e-05, 9.065300000000304e-05, 9.079099999999979e-05, 9.105600000000602e-05, 9.125000000000105e-05, 9.077700000000022e-05, 9.136199999999761e-05, 9.102799999999994e-05, 9.072199999999447e-05, 9.122299999999445e-05, 9.159699999999882e-05, 9.155599999999958e-05, 9.11250000000044e-05, 9.065300000000304e-05, 9.119400000000277e-05, 9.079199999999926e-05, 9.086100000000458e-05, 9.06529999999961e-05, 9.123699999999402e-05, 9.129199999999976e-05, 9.091699999999592e-05, 9.117999999999626e-05, 9.088899999999678e-05, 9.070900000000132e-05, 9.094499999999506e-05, 9.127800000000019e-05, 9.113900000000397e-05, 9.102799999999994e-05, 9.098600000000123e-05, 9.077799999999969e-05, 9.088900000000372e-05, 9.106999999999865e-05, 9.156899999999968e-05, 9.143000000000345e-05, 9.143099999999599e-05, 9.162499999999796e-05, 9.104199999999951e-05, 9.111100000000483e-05, 9.090299999999635e-05, 9.148600000000173e-05, 9.113899999999703e-05, 9.104100000000004e-05, 9.070900000000132e-05, 9.122200000000191e-05, 9.08050000000063e-05, 9.109800000000473e-05, 9.11529999999966e-05, 9.11659999999967e-05, 9.138899999999728e-05, 9.137499999999771e-05]</msg>
<status status="PASS" starttime="20201030 15:56:51.482" endtime="20201030 15:56:51.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.470" endtime="20201030 15:56:51.488"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:51.497" endtime="20201030 15:56:51.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.493" endtime="20201030 15:56:51.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.491" endtime="20201030 15:56:51.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.984" endtime="20201030 15:56:51.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.983" endtime="20201030 15:56:51.522"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.545" endtime="20201030 15:56:51.565"></status>
</kw>
<msg timestamp="20201030 15:56:51.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.542" endtime="20201030 15:56:51.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.569" endtime="20201030 15:56:51.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.575" endtime="20201030 15:56:51.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.535" endtime="20201030 15:56:51.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.529" endtime="20201030 15:56:51.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.599" endtime="20201030 15:56:51.937"></status>
</kw>
<msg timestamp="20201030 15:56:51.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039856458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039948861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.595" endtime="20201030 15:56:51.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039856458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039948861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.946" endtime="20201030 15:56:51.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.965" endtime="20201030 15:56:51.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.588" endtime="20201030 15:56:51.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.583" endtime="20201030 15:56:51.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:51.983" level="INFO">${RESULT} = [{'diff': 9.240300000000479e-05}, {'diff': 9.215300000000454e-05}, {'diff': 9.21670000000041e-05}, {'diff': 9.205600000000008e-05}, {'diff': 9.201400000000137e-05}, {'diff': 9.236099999999914e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:51.974" endtime="20201030 15:56:51.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:51.994" level="INFO">${ACCURACY} = {'diff': [9.240300000000479e-05, 9.215300000000454e-05, 9.21670000000041e-05, 9.205600000000008e-05, 9.201400000000137e-05, 9.236099999999914e-05, 9.23199999999999e-05, 9.263899999999853e-05, 9.212499...</msg>
<status status="PASS" starttime="20201030 15:56:51.985" endtime="20201030 15:56:51.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.005" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:56:52.003" endtime="20201030 15:56:52.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.010" level="INFO">VALUE: [9.240300000000479e-05, 9.215300000000454e-05, 9.21670000000041e-05, 9.205600000000008e-05, 9.201400000000137e-05, 9.236099999999914e-05, 9.23199999999999e-05, 9.263899999999853e-05, 9.212499999999846e-05, 9.191599999999744e-05, 9.20000000000018e-05, 9.222200000000291e-05, 9.208399999999922e-05, 9.226400000000162e-05, 9.25000000000023e-05, 9.25000000000023e-05, 9.261099999999939e-05, 9.176400000000112e-05, 9.208299999999975e-05, 9.21800000000042e-05, 9.222200000000291e-05, 9.18329999999995e-05, 9.24870000000022e-05, 9.261099999999939e-05, 9.229200000000076e-05, 9.201400000000137e-05, 9.220899999999588e-05, 9.208399999999922e-05, 9.218099999999674e-05, 9.211099999999889e-05, 9.208299999999975e-05, 9.184699999999907e-05, 9.2333e-05, 9.197200000000266e-05, 9.258300000000025e-05, 9.197199999999572e-05, 9.23199999999999e-05, 9.2333e-05, 9.181899999999993e-05, 9.218099999999674e-05, 9.245799999999665e-05, 9.222199999999597e-05, 9.190300000000429e-05, 9.227799999999425e-05, 9.230500000000086e-05, 9.252800000000144e-05, 9.206900000000018e-05, 9.247200000000316e-05, 9.208299999999975e-05, 9.19870000000017e-05]</msg>
<status status="PASS" starttime="20201030 15:56:52.007" endtime="20201030 15:56:52.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.996" endtime="20201030 15:56:52.013"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:52.023" endtime="20201030 15:56:52.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.018" endtime="20201030 15:56:52.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.016" endtime="20201030 15:56:52.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.525" endtime="20201030 15:56:52.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.523" endtime="20201030 15:56:52.048"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.070" endtime="20201030 15:56:52.090"></status>
</kw>
<msg timestamp="20201030 15:56:52.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.067" endtime="20201030 15:56:52.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.094" endtime="20201030 15:56:52.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.100" endtime="20201030 15:56:52.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.060" endtime="20201030 15:56:52.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.054" endtime="20201030 15:56:52.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.123" endtime="20201030 15:56:52.462"></status>
</kw>
<msg timestamp="20201030 15:56:52.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039424472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039518014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:52.120" endtime="20201030 15:56:52.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039424472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039518014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:52.471" endtime="20201030 15:56:52.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.491" endtime="20201030 15:56:52.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.113" endtime="20201030 15:56:52.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.108" endtime="20201030 15:56:52.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:52.509" level="INFO">${RESULT} = [{'diff': 9.354199999999507e-05}, {'diff': 9.345899999999713e-05}, {'diff': 9.311099999999989e-05}, {'diff': 9.3027999999995e-05}, {'diff': 9.355600000000158e-05}, {'diff': 9.308400000000022e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:52.500" endtime="20201030 15:56:52.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:52.518" level="INFO">${ACCURACY} = {'diff': [9.354199999999507e-05, 9.345899999999713e-05, 9.311099999999989e-05, 9.3027999999995e-05, 9.355600000000158e-05, 9.308400000000022e-05, 9.32079999999974e-05, 9.305600000000108e-05, 9.3305000...</msg>
<status status="PASS" starttime="20201030 15:56:52.511" endtime="20201030 15:56:52.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.529" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:56:52.527" endtime="20201030 15:56:52.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.535" level="INFO">VALUE: [9.354199999999507e-05, 9.345899999999713e-05, 9.311099999999989e-05, 9.3027999999995e-05, 9.355600000000158e-05, 9.308400000000022e-05, 9.32079999999974e-05, 9.305600000000108e-05, 9.330500000000186e-05, 9.312499999999946e-05, 9.325000000000305e-05, 9.301400000000237e-05, 9.32079999999974e-05, 9.305600000000108e-05, 9.327800000000219e-05, 9.347199999999722e-05, 9.312499999999946e-05, 9.351400000000287e-05, 9.262499999999896e-05, 9.358400000000072e-05, 9.266699999999767e-05, 9.275000000000255e-05, 9.348600000000373e-05, 9.36529999999991e-05, 9.34870000000032e-05, 9.337499999999971e-05, 9.322199999999697e-05, 9.316699999999817e-05, 9.356899999999474e-05, 9.270800000000384e-05, 9.270800000000384e-05, 9.345799999999765e-05, 9.273699999999552e-05, 9.35000000000033e-05, 9.27079999999969e-05, 9.343099999999799e-05, 9.327799999999525e-05, 9.334700000000057e-05, 9.301400000000237e-05, 9.290199999999887e-05, 9.277800000000169e-05, 9.343099999999799e-05, 9.305600000000108e-05, 9.347199999999722e-05, 9.305599999999414e-05, 9.280500000000136e-05, 9.357000000000115e-05, 9.319399999999783e-05, 9.277699999999528e-05, 9.312499999999946e-05]</msg>
<status status="PASS" starttime="20201030 15:56:52.532" endtime="20201030 15:56:52.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.520" endtime="20201030 15:56:52.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:52.547" endtime="20201030 15:56:52.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.543" endtime="20201030 15:56:52.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.541" endtime="20201030 15:56:52.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.050" endtime="20201030 15:56:52.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.049" endtime="20201030 15:56:52.573"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.595" endtime="20201030 15:56:52.617"></status>
</kw>
<msg timestamp="20201030 15:56:52.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.592" endtime="20201030 15:56:52.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.620" endtime="20201030 15:56:52.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.627" endtime="20201030 15:56:52.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.585" endtime="20201030 15:56:52.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.579" endtime="20201030 15:56:52.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.650" endtime="20201030 15:56:52.990"></status>
</kw>
<msg timestamp="20201030 15:56:52.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041369667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041463458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:52.647" endtime="20201030 15:56:52.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041369667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041463458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.000" endtime="20201030 15:56:53.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.019" endtime="20201030 15:56:53.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.640" endtime="20201030 15:56:53.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.635" endtime="20201030 15:56:53.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:53.036" level="INFO">${RESULT} = [{'diff': 9.379100000000279e-05}, {'diff': 9.394499999999806e-05}, {'diff': 9.398600000000423e-05}, {'diff': 9.394399999999858e-05}, {'diff': 9.377799999999575e-05}, {'diff': 9.442999999999951e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:53.027" endtime="20201030 15:56:53.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:53.046" level="INFO">${ACCURACY} = {'diff': [9.379100000000279e-05, 9.394499999999806e-05, 9.398600000000423e-05, 9.394399999999858e-05, 9.377799999999575e-05, 9.442999999999951e-05, 9.369399999999833e-05, 9.454200000000301e-05, 9.4596...</msg>
<status status="PASS" starttime="20201030 15:56:53.038" endtime="20201030 15:56:53.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.056" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:56:53.054" endtime="20201030 15:56:53.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.062" level="INFO">VALUE: [9.379100000000279e-05, 9.394499999999806e-05, 9.398600000000423e-05, 9.394399999999858e-05, 9.377799999999575e-05, 9.442999999999951e-05, 9.369399999999833e-05, 9.454200000000301e-05, 9.459699999999488e-05, 9.376300000000365e-05, 9.397200000000466e-05, 9.448699999999727e-05, 9.44450000000055e-05, 9.404199999999557e-05, 9.441699999999942e-05, 9.447200000000516e-05, 9.447199999999822e-05, 9.380500000000236e-05, 9.417999999999926e-05, 9.41659999999997e-05, 9.419499999999831e-05, 9.454200000000301e-05, 9.377800000000269e-05, 9.437500000000071e-05, 9.426400000000362e-05, 9.434700000000157e-05, 9.405500000000261e-05, 9.418100000000568e-05, 9.444499999999856e-05, 9.369399999999833e-05, 9.425000000000405e-05, 9.392999999999901e-05, 9.384699999999413e-05, 9.404200000000251e-05, 9.376300000000365e-05, 9.440299999999985e-05, 9.4027999999996e-05, 9.461100000000139e-05, 9.408300000000175e-05, 9.427799999999625e-05, 9.376299999999671e-05, 9.41529999999996e-05, 9.4333000000002e-05, 9.408300000000175e-05, 9.457000000000215e-05, 9.405600000000208e-05, 9.376399999999618e-05, 9.408300000000175e-05, 9.383400000000097e-05, 9.390299999999935e-05]</msg>
<status status="PASS" starttime="20201030 15:56:53.059" endtime="20201030 15:56:53.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.047" endtime="20201030 15:56:53.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:53.076" endtime="20201030 15:56:53.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.070" endtime="20201030 15:56:53.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.068" endtime="20201030 15:56:53.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.575" endtime="20201030 15:56:53.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.573" endtime="20201030 15:56:53.101"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.124" endtime="20201030 15:56:53.145"></status>
</kw>
<msg timestamp="20201030 15:56:53.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.121" endtime="20201030 15:56:53.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.149" endtime="20201030 15:56:53.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.155" endtime="20201030 15:56:53.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.114" endtime="20201030 15:56:53.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.108" endtime="20201030 15:56:53.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.178" endtime="20201030 15:56:53.525"></status>
</kw>
<msg timestamp="20201030 15:56:53.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039702528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039797417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.175" endtime="20201030 15:56:53.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039702528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039797417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.535" endtime="20201030 15:56:53.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.554" endtime="20201030 15:56:53.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.168" endtime="20201030 15:56:53.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.163" endtime="20201030 15:56:53.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:53.571" level="INFO">${RESULT} = [{'diff': 9.488900000000078e-05}, {'diff': 9.53059999999964e-05}, {'diff': 9.534700000000257e-05}, {'diff': 9.501399999999743e-05}, {'diff': 9.524999999999811e-05}, {'diff': 9.505600000000308e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:53.563" endtime="20201030 15:56:53.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:53.582" level="INFO">${ACCURACY} = {'diff': [9.488900000000078e-05, 9.53059999999964e-05, 9.534700000000257e-05, 9.501399999999743e-05, 9.524999999999811e-05, 9.505600000000308e-05, 9.505600000000308e-05, 9.5333000000003e-05, 9.4818999...</msg>
<status status="PASS" starttime="20201030 15:56:53.573" endtime="20201030 15:56:53.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.593" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:56:53.591" endtime="20201030 15:56:53.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.598" level="INFO">VALUE: [9.488900000000078e-05, 9.53059999999964e-05, 9.534700000000257e-05, 9.501399999999743e-05, 9.524999999999811e-05, 9.505600000000308e-05, 9.505600000000308e-05, 9.5333000000003e-05, 9.481899999999599e-05, 9.501400000000437e-05, 9.5333000000003e-05, 9.513899999999409e-05, 9.548600000000573e-05, 9.513900000000103e-05, 9.513900000000103e-05, 9.495800000000609e-05, 9.486100000000164e-05, 9.51530000000006e-05, 9.481899999999599e-05, 9.536100000000214e-05, 9.562500000000196e-05, 9.558400000000272e-05, 9.561099999999545e-05, 9.487500000000121e-05, 9.530600000000333e-05, 9.569400000000033e-05, 9.563900000000153e-05, 9.509800000000179e-05, 9.468099999999924e-05, 9.506900000000318e-05, 9.480500000000336e-05, 9.469499999999881e-05, 9.565299999999416e-05, 9.479200000000326e-05, 9.49859999999983e-05, 9.486100000000164e-05, 9.540200000000137e-05, 9.531899999999649e-05, 9.477799999999675e-05, 9.477799999999675e-05, 9.556900000000368e-05, 9.555500000000411e-05, 9.54859999999988e-05, 9.54859999999988e-05, 9.530600000000333e-05, 9.469499999999881e-05, 9.513900000000103e-05, 9.523599999999854e-05, 9.527800000000419e-05, 9.48330000000025e-05]</msg>
<status status="PASS" starttime="20201030 15:56:53.595" endtime="20201030 15:56:53.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.584" endtime="20201030 15:56:53.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:53.611" endtime="20201030 15:56:53.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.606" endtime="20201030 15:56:53.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.604" endtime="20201030 15:56:53.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.104" endtime="20201030 15:56:53.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.102" endtime="20201030 15:56:53.636"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.659" endtime="20201030 15:56:53.680"></status>
</kw>
<msg timestamp="20201030 15:56:53.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.656" endtime="20201030 15:56:53.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.684" endtime="20201030 15:56:53.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.690" endtime="20201030 15:56:53.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.649" endtime="20201030 15:56:53.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.643" endtime="20201030 15:56:53.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.714" endtime="20201030 15:56:54.063"></status>
</kw>
<msg timestamp="20201030 15:56:54.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039876583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039972306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.710" endtime="20201030 15:56:54.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039876583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039972306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:54.073" endtime="20201030 15:56:54.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.091" endtime="20201030 15:56:54.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.703" endtime="20201030 15:56:54.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.698" endtime="20201030 15:56:54.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:54.109" level="INFO">${RESULT} = [{'diff': 9.572299999999895e-05}, {'diff': 9.644500000000056e-05}, {'diff': 9.649999999999936e-05}, {'diff': 9.643000000000151e-05}, {'diff': 9.573600000000598e-05}, {'diff': 9.659799999999635e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:54.100" endtime="20201030 15:56:54.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:54.120" level="INFO">${ACCURACY} = {'diff': [9.572299999999895e-05, 9.644500000000056e-05, 9.649999999999936e-05, 9.643000000000151e-05, 9.573600000000598e-05, 9.659799999999635e-05, 9.636199999999567e-05, 9.647200000000022e-05, 9.6542...</msg>
<status status="PASS" starttime="20201030 15:56:54.111" endtime="20201030 15:56:54.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.131" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:56:54.129" endtime="20201030 15:56:54.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.136" level="INFO">VALUE: [9.572299999999895e-05, 9.644500000000056e-05, 9.649999999999936e-05, 9.643000000000151e-05, 9.573600000000598e-05, 9.659799999999635e-05, 9.636199999999567e-05, 9.647200000000022e-05, 9.654200000000501e-05, 9.656999999999721e-05, 9.638799999999587e-05, 9.593100000000049e-05, 9.577799999999775e-05, 9.588900000000178e-05, 9.608300000000375e-05, 9.647200000000022e-05, 9.655499999999817e-05, 9.640199999999544e-05, 9.57079999999999e-05, 9.569499999999981e-05, 9.64859999999998e-05, 9.651399999999893e-05, 9.663899999999559e-05, 9.663899999999559e-05, 9.588900000000178e-05, 9.654200000000501e-05, 9.568000000000076e-05, 9.595899999999963e-05, 9.657000000000415e-05, 9.659700000000382e-05, 9.580600000000383e-05, 9.58609999999957e-05, 9.601399999999843e-05, 9.588799999999537e-05, 9.657000000000415e-05, 9.645900000000013e-05, 9.624999999999911e-05, 9.631899999999749e-05, 9.619400000000083e-05, 9.649999999999936e-05, 9.579200000000426e-05, 9.626399999999868e-05, 9.608400000000322e-05, 9.666700000000167e-05, 9.569499999999981e-05, 9.584699999999613e-05, 9.561099999999545e-05, 9.636199999999567e-05, 9.599999999999886e-05, 9.572199999999947e-05]</msg>
<status status="PASS" starttime="20201030 15:56:54.133" endtime="20201030 15:56:54.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.122" endtime="20201030 15:56:54.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:54.149" endtime="20201030 15:56:54.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.144" endtime="20201030 15:56:54.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.142" endtime="20201030 15:56:54.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.639" endtime="20201030 15:56:54.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.637" endtime="20201030 15:56:54.174"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.197" endtime="20201030 15:56:54.218"></status>
</kw>
<msg timestamp="20201030 15:56:54.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:54.194" endtime="20201030 15:56:54.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:54.222" endtime="20201030 15:56:54.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.228" endtime="20201030 15:56:54.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.186" endtime="20201030 15:56:54.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.181" endtime="20201030 15:56:54.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.251" endtime="20201030 15:56:54.607"></status>
</kw>
<msg timestamp="20201030 15:56:54.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039977153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040074569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:54.248" endtime="20201030 15:56:54.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039977153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040074569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:54.616" endtime="20201030 15:56:54.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.635" endtime="20201030 15:56:54.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.241" endtime="20201030 15:56:54.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.236" endtime="20201030 15:56:54.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:54.652" level="INFO">${RESULT} = [{'diff': 9.7415999999996e-05}, {'diff': 9.679199999999832e-05}, {'diff': 9.708299999999781e-05}, {'diff': 9.715299999999566e-05}, {'diff': 9.749999999999343e-05}, {'diff': 9.690299999999541e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:54.643" endtime="20201030 15:56:54.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:54.662" level="INFO">${ACCURACY} = {'diff': [9.7415999999996e-05, 9.679199999999832e-05, 9.708299999999781e-05, 9.715299999999566e-05, 9.749999999999343e-05, 9.690299999999541e-05, 9.662499999999602e-05, 9.68200000000044e-05, 9.7445000...</msg>
<status status="PASS" starttime="20201030 15:56:54.654" endtime="20201030 15:56:54.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.672" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:56:54.670" endtime="20201030 15:56:54.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.678" level="INFO">VALUE: [9.7415999999996e-05, 9.679199999999832e-05, 9.708299999999781e-05, 9.715299999999566e-05, 9.749999999999343e-05, 9.690299999999541e-05, 9.662499999999602e-05, 9.68200000000044e-05, 9.744500000000156e-05, 9.690300000000235e-05, 9.683399999999703e-05, 9.747200000000122e-05, 9.681900000000493e-05, 9.742999999999558e-05, 9.719400000000183e-05, 9.687500000000321e-05, 9.667999999999483e-05, 9.68059999999979e-05, 9.745800000000165e-05, 9.68059999999979e-05, 9.716599999999576e-05, 9.726300000000021e-05, 9.695900000000063e-05, 9.741699999999548e-05, 9.755599999999864e-05, 9.670900000000038e-05, 9.7027999999999e-05, 9.765200000000362e-05, 9.720900000000088e-05, 9.677799999999875e-05, 9.738899999999634e-05, 9.758299999999831e-05, 9.667999999999483e-05, 9.731999999999796e-05, 9.73059999999984e-05, 9.691699999999498e-05, 9.727799999999925e-05, 9.684700000000407e-05, 9.748700000000027e-05, 9.673600000000004e-05, 9.740300000000285e-05, 9.745900000000113e-05, 9.755499999999917e-05, 9.706900000000518e-05, 9.729200000000576e-05, 9.679200000000526e-05, 9.694399999999465e-05, 9.72080000000014e-05, 9.697200000000072e-05, 9.676399999999918e-05]</msg>
<status status="PASS" starttime="20201030 15:56:54.675" endtime="20201030 15:56:54.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.663" endtime="20201030 15:56:54.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:54.691" endtime="20201030 15:56:54.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.686" endtime="20201030 15:56:54.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.683" endtime="20201030 15:56:54.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.176" endtime="20201030 15:56:54.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.175" endtime="20201030 15:56:54.716"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.739" endtime="20201030 15:56:54.762"></status>
</kw>
<msg timestamp="20201030 15:56:54.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:54.735" endtime="20201030 15:56:54.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:54.765" endtime="20201030 15:56:54.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.771" endtime="20201030 15:56:54.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.728" endtime="20201030 15:56:54.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.722" endtime="20201030 15:56:54.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.795" endtime="20201030 15:56:55.147"></status>
</kw>
<msg timestamp="20201030 15:56:55.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04148625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041584806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:54.792" endtime="20201030 15:56:55.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04148625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041584806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:55.157" endtime="20201030 15:56:55.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.176" endtime="20201030 15:56:55.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.784" endtime="20201030 15:56:55.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.780" endtime="20201030 15:56:55.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:55.193" level="INFO">${RESULT} = [{'diff': 9.855599999999964e-05}, {'diff': 9.811099999999795e-05}, {'diff': 9.831999999999896e-05}, {'diff': 9.85280000000005e-05}, {'diff': 9.76530000000031e-05}, {'diff': 9.844399999999615e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:55.184" endtime="20201030 15:56:55.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:55.202" level="INFO">${ACCURACY} = {'diff': [9.855599999999964e-05, 9.811099999999795e-05, 9.831999999999896e-05, 9.85280000000005e-05, 9.76530000000031e-05, 9.844399999999615e-05, 9.822200000000197e-05, 9.816599999999676e-05, 9.819399...</msg>
<status status="PASS" starttime="20201030 15:56:55.195" endtime="20201030 15:56:55.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.213" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:56:55.211" endtime="20201030 15:56:55.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.219" level="INFO">VALUE: [9.855599999999964e-05, 9.811099999999795e-05, 9.831999999999896e-05, 9.85280000000005e-05, 9.76530000000031e-05, 9.844399999999615e-05, 9.822200000000197e-05, 9.816599999999676e-05, 9.81939999999959e-05, 9.787500000000421e-05, 9.795900000000163e-05, 9.858399999999878e-05, 9.791600000000344e-05, 9.87080000000029e-05, 9.788900000000378e-05, 9.829199999999982e-05, 9.766700000000267e-05, 9.833299999999906e-05, 9.815299999999666e-05, 9.84860000000018e-05, 9.859799999999835e-05, 9.845900000000213e-05, 9.867999999999683e-05, 9.84730000000017e-05, 9.787499999999727e-05, 9.770900000000138e-05, 9.866599999999726e-05, 9.827700000000078e-05, 9.861099999999845e-05, 9.865299999999716e-05, 9.8028e-05, 9.856999999999921e-05, 9.766700000000267e-05, 9.787500000000421e-05, 9.842999999999658e-05, 9.8028e-05, 9.772199999999454e-05, 9.84860000000018e-05, 9.833299999999906e-05, 9.809699999999838e-05, 9.858399999999878e-05, 9.822199999999504e-05, 9.85410000000006e-05, 9.809699999999838e-05, 9.813899999999709e-05, 9.862499999999802e-05, 9.772199999999454e-05, 9.83059999999994e-05, 9.855599999999964e-05, 9.82359999999946e-05]</msg>
<status status="PASS" starttime="20201030 15:56:55.215" endtime="20201030 15:56:55.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.204" endtime="20201030 15:56:55.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:55.233" endtime="20201030 15:56:55.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.227" endtime="20201030 15:56:55.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.224" endtime="20201030 15:56:55.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.718" endtime="20201030 15:56:55.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.717" endtime="20201030 15:56:55.258"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.281" endtime="20201030 15:56:55.302"></status>
</kw>
<msg timestamp="20201030 15:56:55.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.277" endtime="20201030 15:56:55.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.306" endtime="20201030 15:56:55.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.312" endtime="20201030 15:56:55.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.270" endtime="20201030 15:56:55.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.264" endtime="20201030 15:56:55.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.335" endtime="20201030 15:56:55.682"></status>
</kw>
<msg timestamp="20201030 15:56:55.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039704861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039803931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.332" endtime="20201030 15:56:55.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039704861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039803931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.692" endtime="20201030 15:56:55.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.711" endtime="20201030 15:56:55.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.325" endtime="20201030 15:56:55.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.320" endtime="20201030 15:56:55.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:55.728" level="INFO">${RESULT} = [{'diff': 9.906999999999971e-05}, {'diff': 9.931999999999996e-05}, {'diff': 9.9028000000001e-05}, {'diff': 9.912500000000546e-05}, {'diff': 9.908299999999981e-05}, {'diff': 9.943099999999705e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:55.719" endtime="20201030 15:56:55.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:55.739" level="INFO">${ACCURACY} = {'diff': [9.906999999999971e-05, 9.931999999999996e-05, 9.9028000000001e-05, 9.912500000000546e-05, 9.908299999999981e-05, 9.943099999999705e-05, 9.88059999999999e-05, 9.938899999999834e-05, 9.9221999...</msg>
<status status="PASS" starttime="20201030 15:56:55.730" endtime="20201030 15:56:55.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.750" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:56:55.748" endtime="20201030 15:56:55.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.755" level="INFO">VALUE: [9.906999999999971e-05, 9.931999999999996e-05, 9.9028000000001e-05, 9.912500000000546e-05, 9.908299999999981e-05, 9.943099999999705e-05, 9.88059999999999e-05, 9.938899999999834e-05, 9.922199999999604e-05, 9.89159999999975e-05, 9.897199999999579e-05, 9.922300000000245e-05, 9.959699999999988e-05, 9.916599999999776e-05, 9.887499999999827e-05, 9.88609999999987e-05, 9.883299999999956e-05, 9.912500000000546e-05, 9.86530000000041e-05, 9.958399999999978e-05, 9.949999999999543e-05, 9.958300000000031e-05, 9.929200000000082e-05, 9.937499999999877e-05, 9.92359999999956e-05, 9.88059999999999e-05, 9.894400000000358e-05, 9.925000000000211e-05, 9.951400000000193e-05, 9.916699999999723e-05, 9.869499999999587e-05, 9.958399999999978e-05, 9.90410000000011e-05, 9.911100000000589e-05, 9.926400000000168e-05, 9.915200000000512e-05, 9.884699999999913e-05, 9.93479999999991e-05, 9.922199999999604e-05, 9.95410000000016e-05, 9.90139999999945e-05, 9.920799999999647e-05, 9.93609999999992e-05, 9.873600000000204e-05, 9.89730000000022e-05, 9.913899999999809e-05, 9.869500000000281e-05, 9.879100000000085e-05, 9.9028000000001e-05, 9.934700000000657e-05]</msg>
<status status="PASS" starttime="20201030 15:56:55.752" endtime="20201030 15:56:55.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.741" endtime="20201030 15:56:55.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:55.768" endtime="20201030 15:56:55.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.764" endtime="20201030 15:56:55.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.761" endtime="20201030 15:56:55.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.260" endtime="20201030 15:56:55.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.259" endtime="20201030 15:56:55.793"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.816" endtime="20201030 15:56:55.837"></status>
</kw>
<msg timestamp="20201030 15:56:55.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.813" endtime="20201030 15:56:55.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.841" endtime="20201030 15:56:55.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.847" endtime="20201030 15:56:55.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.805" endtime="20201030 15:56:55.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.800" endtime="20201030 15:56:55.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.871" endtime="20201030 15:56:56.217"></status>
</kw>
<msg timestamp="20201030 15:56:56.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039929417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04002975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:55.867" endtime="20201030 15:56:56.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039929417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04002975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:56.227" endtime="20201030 15:56:56.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.245" endtime="20201030 15:56:56.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.860" endtime="20201030 15:56:56.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.855" endtime="20201030 15:56:56.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:56.262" level="INFO">${RESULT} = [{'diff': 0.00010033300000000106}, {'diff': 0.00010044399999999815}, {'diff': 9.99730000000032e-05}, {'diff': 0.00010058400000000078}, {'diff': 0.00010011199999999942}, {'diff': 0.00010037499999999977...</msg>
<status status="PASS" starttime="20201030 15:56:56.254" endtime="20201030 15:56:56.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:56.273" level="INFO">${ACCURACY} = {'diff': [0.00010033300000000106, 0.00010044399999999815, 9.99730000000032e-05, 0.00010058400000000078, 0.00010011199999999942, 0.00010037499999999977, 9.97359999999961e-05, 0.0001003610000000002, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:56.264" endtime="20201030 15:56:56.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.284" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:56:56.282" endtime="20201030 15:56:56.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.290" level="INFO">VALUE: [0.00010033300000000106, 0.00010044399999999815, 9.99730000000032e-05, 0.00010058400000000078, 0.00010011199999999942, 0.00010037499999999977, 9.97359999999961e-05, 0.0001003610000000002, 0.00010017999999999833, 0.00010040200000000638, 9.994400000000458e-05, 9.98609999999997e-05, 9.98609999999997e-05, 0.00010002799999999507, 9.976400000000218e-05, 0.00010004200000000157, 0.0001005410000000026, 0.00010029200000000182, 0.0001000139999999955, 9.973600000000304e-05, 9.990299999999841e-05, 9.984700000000013e-05, 0.00010027800000000225, 0.00010009700000000038, 0.00010011099999999995, 0.00010025000000000311, 9.972200000000347e-05, 0.00010065299999999916, 9.997200000000372e-05, 0.0001001939999999979, 0.00010067999999999883, 9.980500000000142e-05, 0.00010054099999999566, 0.00010040299999999891, 0.00010026399999999575, 9.987499999999927e-05, 0.000100415999999999, 9.98609999999997e-05, 0.00010018100000000474, 0.00010012499999999952, 0.00010040300000000585, 0.0001005280000000025, 9.980500000000142e-05, 9.97359999999961e-05, 9.976400000000218e-05, 0.00010033300000000106, 9.987500000000621e-05, 0.00010055500000000217, 0.00010056900000000174, 9.979100000000185e-05]</msg>
<status status="PASS" starttime="20201030 15:56:56.287" endtime="20201030 15:56:56.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.275" endtime="20201030 15:56:56.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:56.303" endtime="20201030 15:56:56.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.298" endtime="20201030 15:56:56.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.296" endtime="20201030 15:56:56.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.795" endtime="20201030 15:56:56.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.794" endtime="20201030 15:56:56.328"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.351" endtime="20201030 15:56:56.371"></status>
</kw>
<msg timestamp="20201030 15:56:56.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.347" endtime="20201030 15:56:56.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.374" endtime="20201030 15:56:56.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.381" endtime="20201030 15:56:56.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.340" endtime="20201030 15:56:56.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.334" endtime="20201030 15:56:56.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.404" endtime="20201030 15:56:56.742"></status>
</kw>
<msg timestamp="20201030 15:56:56.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039948042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040049111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:56.401" endtime="20201030 15:56:56.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039948042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040049111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:56.752" endtime="20201030 15:56:56.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.770" endtime="20201030 15:56:56.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.394" endtime="20201030 15:56:56.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.389" endtime="20201030 15:56:56.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:56.787" level="INFO">${RESULT} = [{'diff': 0.0001010689999999953}, {'diff': 0.0001012359999999976}, {'diff': 0.00010075000000000361}, {'diff': 0.00010157000000000221}, {'diff': 0.00010092999999999908}, {'diff': 0.00010159700000000188...</msg>
<status status="PASS" starttime="20201030 15:56:56.778" endtime="20201030 15:56:56.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:56.796" level="INFO">${ACCURACY} = {'diff': [0.0001010689999999953, 0.0001012359999999976, 0.00010075000000000361, 0.00010157000000000221, 0.00010092999999999908, 0.00010159700000000188, 0.00010163900000000059, 0.0001008339999999941, 0...</msg>
<status status="PASS" starttime="20201030 15:56:56.789" endtime="20201030 15:56:56.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.807" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:56:56.805" endtime="20201030 15:56:56.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.813" level="INFO">VALUE: [0.0001010689999999953, 0.0001012359999999976, 0.00010075000000000361, 0.00010157000000000221, 0.00010092999999999908, 0.00010159700000000188, 0.00010163900000000059, 0.0001008339999999941, 0.00010095799999999822, 0.00010083300000000156, 0.00010145899999999819, 0.00010116699999999923, 0.00010088800000000037, 0.00010111100000000095, 0.00010107000000000171, 0.00010166699999999973, 0.0001010139999999965, 0.00010141699999999948, 0.00010133400000000153, 0.00010068100000000524, 0.00010075000000000361, 0.00010141699999999948, 0.00010061100000000045, 0.00010132000000000196, 0.00010147199999999829, 0.00010112500000000052, 0.00010099999999999693, 0.00010081900000000199, 0.00010066599999999926, 0.00010066599999999926, 0.00010075000000000361, 0.00010072199999999754, 0.00010083300000000156, 0.0001015559999999957, 0.00010062500000000002, 0.00010161100000000145, 0.0001013610000000012, 0.00010113900000000009, 0.00010152699999999709, 0.00010147199999999829, 0.00010094500000000506, 0.00010083300000000156, 0.00010120799999999847, 0.00010148699999999733, 0.00010122299999999751, 0.0001011939999999989, 0.00010095900000000463, 0.00010120799999999847, 0.0001015280000000035, 0.00010111100000000095]</msg>
<status status="PASS" starttime="20201030 15:56:56.810" endtime="20201030 15:56:56.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.798" endtime="20201030 15:56:56.816"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:56.825" endtime="20201030 15:56:56.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.821" endtime="20201030 15:56:56.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.818" endtime="20201030 15:56:56.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.330" endtime="20201030 15:56:56.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.329" endtime="20201030 15:56:56.850"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.873" endtime="20201030 15:56:56.895"></status>
</kw>
<msg timestamp="20201030 15:56:56.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.870" endtime="20201030 15:56:56.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.898" endtime="20201030 15:56:56.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.904" endtime="20201030 15:56:56.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.862" endtime="20201030 15:56:56.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.857" endtime="20201030 15:56:56.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.927" endtime="20201030 15:56:57.263"></status>
</kw>
<msg timestamp="20201030 15:56:57.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041130069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041232403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:56.924" endtime="20201030 15:56:57.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041130069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041232403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:57.273" endtime="20201030 15:56:57.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.291" endtime="20201030 15:56:57.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.917" endtime="20201030 15:56:57.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.912" endtime="20201030 15:56:57.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:57.308" level="INFO">${RESULT} = [{'diff': 0.00010233400000000253}, {'diff': 0.00010254199999999714}, {'diff': 0.00010263900000000159}, {'diff': 0.00010231899999999655}, {'diff': 0.00010247199999999929}, {'diff': 0.000102555999999996...</msg>
<status status="PASS" starttime="20201030 15:56:57.300" endtime="20201030 15:56:57.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:57.317" level="INFO">${ACCURACY} = {'diff': [0.00010233400000000253, 0.00010254199999999714, 0.00010263900000000159, 0.00010231899999999655, 0.00010247199999999929, 0.0001025559999999967, 0.0001018610000000017, 0.00010211100000000195, ...</msg>
<status status="PASS" starttime="20201030 15:56:57.310" endtime="20201030 15:56:57.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.328" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:56:57.326" endtime="20201030 15:56:57.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.334" level="INFO">VALUE: [0.00010233400000000253, 0.00010254199999999714, 0.00010263900000000159, 0.00010231899999999655, 0.00010247199999999929, 0.0001025559999999967, 0.0001018610000000017, 0.00010211100000000195, 0.0001018610000000017, 0.00010247199999999929, 0.0001023060000000034, 0.00010204200000000357, 0.00010184700000000213, 0.00010249999999999843, 0.00010187500000000127, 0.00010237499999999483, 0.0001021939999999999, 0.0001025689999999968, 0.00010241700000000048, 0.00010237500000000177, 0.00010259699999999594, 0.00010197199999999879, 0.00010226400000000468, 0.00010263900000000159, 0.00010177799999999682, 0.00010193000000000008, 0.00010183299999999562, 0.00010211100000000195, 0.00010202799999999707, 0.00010266700000000073, 0.00010211200000000142, 0.00010231999999999603, 0.00010182000000000246, 0.00010179099999999691, 0.00010263900000000159, 0.00010219499999999937, 0.00010229199999999689, 0.00010256999999999628, 0.0001018610000000017, 0.00010225000000000511, 0.00010211099999999501, 0.00010215200000000119, 0.00010211100000000195, 0.00010266600000000126, 0.00010172199999999854, 0.00010182000000000246, 0.00010193099999999955, 0.00010169499999999887, 0.00010248599999999886, 0.00010190300000000041]</msg>
<status status="PASS" starttime="20201030 15:56:57.331" endtime="20201030 15:56:57.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.319" endtime="20201030 15:56:57.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:57.348" endtime="20201030 15:56:57.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.342" endtime="20201030 15:56:57.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.339" endtime="20201030 15:56:57.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.852" endtime="20201030 15:56:57.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.851" endtime="20201030 15:56:57.373"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.396" endtime="20201030 15:56:57.418"></status>
</kw>
<msg timestamp="20201030 15:56:57.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:57.392" endtime="20201030 15:56:57.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:57.421" endtime="20201030 15:56:57.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.427" endtime="20201030 15:56:57.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.385" endtime="20201030 15:56:57.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.379" endtime="20201030 15:56:57.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.451" endtime="20201030 15:56:57.796"></status>
</kw>
<msg timestamp="20201030 15:56:57.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039808, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039910917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:57.448" endtime="20201030 15:56:57.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039808, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039910917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:57.805" endtime="20201030 15:56:57.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.824" endtime="20201030 15:56:57.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.440" endtime="20201030 15:56:57.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.435" endtime="20201030 15:56:57.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:57.848" level="INFO">${RESULT} = [{'diff': 0.00010291699999999404}, {'diff': 0.00010306999999999678}, {'diff': 0.00010356999999999728}, {'diff': 0.00010280499999999748}, {'diff': 0.00010313899999999515}, {'diff': 0.000103403000000001...</msg>
<status status="PASS" starttime="20201030 15:56:57.836" endtime="20201030 15:56:57.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:57.868" level="INFO">${ACCURACY} = {'diff': [0.00010291699999999404, 0.00010306999999999678, 0.00010356999999999728, 0.00010280499999999748, 0.00010313899999999515, 0.00010340300000000191, 0.00010322200000000004, 0.0001035689999999978,...</msg>
<status status="PASS" starttime="20201030 15:56:57.854" endtime="20201030 15:56:57.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.892" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:56:57.889" endtime="20201030 15:56:57.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.900" level="INFO">VALUE: [0.00010291699999999404, 0.00010306999999999678, 0.00010356999999999728, 0.00010280499999999748, 0.00010313899999999515, 0.00010340300000000191, 0.00010322200000000004, 0.0001035689999999978, 0.00010270899999999944, 0.00010357000000000421, 0.00010286099999999576, 0.00010337499999999583, 0.00010276399999999825, 0.00010282000000000346, 0.00010308299999999687, 0.00010279099999999791, 0.0001032359999999996, 0.0001033480000000031, 0.0001031810000000008, 0.00010330499999999798, 0.00010362499999999608, 0.00010333299999999712, 0.00010337500000000277, 0.00010352799999999857, 0.00010348599999999986, 0.00010293100000000055, 0.00010279200000000432, 0.00010290299999999447, 0.00010299999999999893, 0.00010270899999999944, 0.00010293100000000055, 0.0001035410000000056, 0.00010272299999999901, 0.00010319499999999343, 0.0001028060000000039, 0.00010286099999999576, 0.00010297199999999979, 0.00010287499999999533, 0.00010327800000000525, 0.00010338800000000287, 0.000103513999999999, 0.00010343099999999411, 0.00010326399999999875, 0.00010323699999999908, 0.00010306900000000424, 0.00010361099999999651, 0.00010358299999999737, 0.00010315300000000166, 0.00010308299999999687, 0.00010338900000000234]</msg>
<status status="PASS" starttime="20201030 15:56:57.895" endtime="20201030 15:56:57.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.871" endtime="20201030 15:56:57.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:57.917" endtime="20201030 15:56:57.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.911" endtime="20201030 15:56:57.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.907" endtime="20201030 15:56:57.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.375" endtime="20201030 15:56:57.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.374" endtime="20201030 15:56:57.945"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.982" endtime="20201030 15:56:58.017"></status>
</kw>
<msg timestamp="20201030 15:56:58.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:57.977" endtime="20201030 15:56:58.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:58.025" endtime="20201030 15:56:58.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.037" endtime="20201030 15:56:58.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.965" endtime="20201030 15:56:58.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.955" endtime="20201030 15:56:58.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.064" endtime="20201030 15:56:58.410"></status>
</kw>
<msg timestamp="20201030 15:56:58.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.058946431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.059050611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:58.060" endtime="20201030 15:56:58.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.058946431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.059050611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:58.420" endtime="20201030 15:56:58.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.438" endtime="20201030 15:56:58.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.053" endtime="20201030 15:56:58.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.048" endtime="20201030 15:56:58.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:58.456" level="INFO">${RESULT} = [{'diff': 0.00010418000000000233}, {'diff': 0.00010377799999999882}, {'diff': 0.00010430599999999846}, {'diff': 0.00010398600000000036}, {'diff': 0.00010394500000000112}, {'diff': 0.000104111000000003...</msg>
<status status="PASS" starttime="20201030 15:56:58.447" endtime="20201030 15:56:58.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:58.467" level="INFO">${ACCURACY} = {'diff': [0.00010418000000000233, 0.00010377799999999882, 0.00010430599999999846, 0.00010398600000000036, 0.00010394500000000112, 0.00010411100000000395, 0.00010400000000000686, 0.00010426399999999975...</msg>
<status status="PASS" starttime="20201030 15:56:58.458" endtime="20201030 15:56:58.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.478" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:56:58.476" endtime="20201030 15:56:58.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.483" level="INFO">VALUE: [0.00010418000000000233, 0.00010377799999999882, 0.00010430599999999846, 0.00010398600000000036, 0.00010394500000000112, 0.00010411100000000395, 0.00010400000000000686, 0.00010426399999999975, 0.00010438900000000334, 0.00010377799999999882, 0.00010463900000000359, 0.00010447300000000076, 0.00010458399999999785, 0.00010448600000000086, 0.00010429199999999889, 0.0001042360000000006, 0.00010408399999999735, 0.0001042360000000006, 0.0001040139999999995, 0.00010454099999999966, 0.00010427699999999984, 0.00010461099999999751, 0.00010376399999999925, 0.00010416699999999529, 0.00010459800000000435, 0.0001043610000000042, 0.00010387500000000327, 0.00010372200000000054, 0.00010390300000000241, 0.00010437499999998989, 0.00010456999999999828, 0.000104514, 0.00010391699999999504, 0.00010380599999999796, 0.00010408400000000428, 0.00010468099999999536, 0.00010425000000000018, 0.00010418000000000927, 0.00010445800000000172, 0.00010363900000000259, 0.00010432000000000496, 0.00010391699999999504, 0.00010427799999999932, 0.000104514, 0.000104514, 0.0001045839999999909, 0.00010430499999999898, 0.00010462499999999708, 0.00010449999999999349, 0.00010408400000000428]</msg>
<status status="PASS" starttime="20201030 15:56:58.480" endtime="20201030 15:56:58.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.469" endtime="20201030 15:56:58.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:58.496" endtime="20201030 15:56:58.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.491" endtime="20201030 15:56:58.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.489" endtime="20201030 15:56:58.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.948" endtime="20201030 15:56:58.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.946" endtime="20201030 15:56:58.521"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.543" endtime="20201030 15:56:58.563"></status>
</kw>
<msg timestamp="20201030 15:56:58.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:58.540" endtime="20201030 15:56:58.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:58.566" endtime="20201030 15:56:58.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.572" endtime="20201030 15:56:58.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.533" endtime="20201030 15:56:58.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.527" endtime="20201030 15:56:58.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.595" endtime="20201030 15:56:58.930"></status>
</kw>
<msg timestamp="20201030 15:56:58.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039010069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039115139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:58.592" endtime="20201030 15:56:58.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039010069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039115139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:58.939" endtime="20201030 15:56:58.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.957" endtime="20201030 15:56:58.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.585" endtime="20201030 15:56:58.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.580" endtime="20201030 15:56:58.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:58.974" level="INFO">${RESULT} = [{'diff': 0.00010506999999999878}, {'diff': 0.0001048610000000047}, {'diff': 0.00010479199999999939}, {'diff': 0.0001048889999999969}, {'diff': 0.00010483400000000503}, {'diff': 0.00010493100000000255...</msg>
<status status="PASS" starttime="20201030 15:56:58.965" endtime="20201030 15:56:58.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:58.983" level="INFO">${ACCURACY} = {'diff': [0.00010506999999999878, 0.0001048610000000047, 0.00010479199999999939, 0.0001048889999999969, 0.00010483400000000503, 0.00010493100000000255, 0.00010529199999999989, 0.00010512500000000452, ...</msg>
<status status="PASS" starttime="20201030 15:56:58.976" endtime="20201030 15:56:58.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.994" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:56:58.991" endtime="20201030 15:56:58.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.999" level="INFO">VALUE: [0.00010506999999999878, 0.0001048610000000047, 0.00010479199999999939, 0.0001048889999999969, 0.00010483400000000503, 0.00010493100000000255, 0.00010529199999999989, 0.00010512500000000452, 0.00010487499999999733, 0.00010552800000000057, 0.00010497200000000179, 0.0001051940000000029, 0.00010479199999999939, 0.00010512500000000452, 0.00010483299999999862, 0.00010502800000000007, 0.0001046810000000023, 0.00010562499999999808, 0.00010501300000000102, 0.0001048480000000046, 0.00010511100000000495, 0.00010513900000000409, 0.00010550000000000143, 0.00010518099999999586, 0.00010526400000000075, 0.00010512499999999758, 0.00010537499999999783, 0.00010550000000000143, 0.00010511100000000495, 0.00010556999999999928, 0.00010509800000000485, 0.00010477799999999982, 0.00010551399999999406, 0.0001048889999999969, 0.00010493099999999561, 0.00010475000000000068, 0.00010470800000000197, 0.00010520800000000247, 0.00010505499999999973, 0.00010561099999999851, 0.00010563899999999765, 0.0001053339999999986, 0.00010500000000000093, 0.00010548600000000186, 0.00010548600000000186, 0.00010544499999999568, 0.00010507000000000571, 0.0001048889999999969, 0.000105514000000001, 0.00010529100000000041]</msg>
<status status="PASS" starttime="20201030 15:56:58.996" endtime="20201030 15:56:59.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.985" endtime="20201030 15:56:59.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:59.011" endtime="20201030 15:56:59.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.007" endtime="20201030 15:56:59.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.005" endtime="20201030 15:56:59.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.523" endtime="20201030 15:56:59.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.521" endtime="20201030 15:56:59.036"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.059" endtime="20201030 15:56:59.080"></status>
</kw>
<msg timestamp="20201030 15:56:59.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.055" endtime="20201030 15:56:59.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.084" endtime="20201030 15:56:59.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.090" endtime="20201030 15:56:59.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.048" endtime="20201030 15:56:59.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.043" endtime="20201030 15:56:59.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.113" endtime="20201030 15:56:59.444"></status>
</kw>
<msg timestamp="20201030 15:56:59.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040533847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040640417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:59.110" endtime="20201030 15:56:59.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040533847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040640417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:59.453" endtime="20201030 15:56:59.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.472" endtime="20201030 15:56:59.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.103" endtime="20201030 15:56:59.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.098" endtime="20201030 15:56:59.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:59.488" level="INFO">${RESULT} = [{'diff': 0.00010657000000000028}, {'diff': 0.000106514000000002}, {'diff': 0.00010600000000000193}, {'diff': 0.000105901999999998}, {'diff': 0.00010580500000000048}, {'diff': 0.00010597200000000279},...</msg>
<status status="PASS" starttime="20201030 15:56:59.480" endtime="20201030 15:56:59.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:59.497" level="INFO">${ACCURACY} = {'diff': [0.00010657000000000028, 0.000106514000000002, 0.00010600000000000193, 0.000105901999999998, 0.00010580500000000048, 0.00010597200000000279, 0.00010638900000000534, 0.00010662499999999908, 0....</msg>
<status status="PASS" starttime="20201030 15:56:59.490" endtime="20201030 15:56:59.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.508" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:56:59.506" endtime="20201030 15:56:59.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.513" level="INFO">VALUE: [0.00010657000000000028, 0.000106514000000002, 0.00010600000000000193, 0.000105901999999998, 0.00010580500000000048, 0.00010597200000000279, 0.00010638900000000534, 0.00010662499999999908, 0.00010666699999999779, 0.00010645800000000372, 0.00010626400000000175, 0.00010668099999999736, 0.00010668000000000483, 0.00010622200000000304, 0.00010625000000000218, 0.00010570900000000244, 0.00010577800000000082, 0.0001056940000000034, 0.00010615300000000466, 0.00010636099999999926, 0.00010629200000000089, 0.00010627800000000132, 0.00010572300000000201, 0.00010579200000000039, 0.00010609699999999944, 0.000106514000000002, 0.0001062219999999961, 0.00010643100000000405, 0.00010630600000000046, 0.0001063889999999984, 0.00010580599999999996, 0.00010581999999999953, 0.0001065560000000007, 0.00010587500000000527, 0.00010609699999999944, 0.0001062769999999949, 0.00010572200000000254, 0.00010662499999999908, 0.00010647199999999635, 0.00010613799999999868, 0.00010604099999999422, 0.00010611100000000595, 0.00010580599999999996, 0.00010630500000000098, 0.0001058889999999979, 0.00010591699999999704, 0.00010663900000000559, 0.00010665299999999822, 0.00010611099999999901, 0.00010634699999999969]</msg>
<status status="PASS" starttime="20201030 15:56:59.510" endtime="20201030 15:56:59.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.499" endtime="20201030 15:56:59.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:59.531" endtime="20201030 15:56:59.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.521" endtime="20201030 15:56:59.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.519" endtime="20201030 15:56:59.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.038" endtime="20201030 15:56:59.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.037" endtime="20201030 15:56:59.556"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.578" endtime="20201030 15:56:59.599"></status>
</kw>
<msg timestamp="20201030 15:56:59.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.575" endtime="20201030 15:56:59.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.602" endtime="20201030 15:56:59.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.608" endtime="20201030 15:56:59.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.568" endtime="20201030 15:56:59.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.562" endtime="20201030 15:56:59.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.631" endtime="20201030 15:56:59.964"></status>
</kw>
<msg timestamp="20201030 15:56:59.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039014708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039121486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:59.628" endtime="20201030 15:56:59.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039014708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039121486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:59.973" endtime="20201030 15:56:59.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.992" endtime="20201030 15:56:59.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.621" endtime="20201030 15:56:59.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.616" endtime="20201030 15:56:59.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:00.009" level="INFO">${RESULT} = [{'diff': 0.00010677799999999488}, {'diff': 0.00010725000000000318}, {'diff': 0.00010731900000000155}, {'diff': 0.0001075690000000018}, {'diff': 0.00010702699999999565}, {'diff': 0.0001069299999999981...</msg>
<status status="PASS" starttime="20201030 15:57:00.000" endtime="20201030 15:57:00.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:00.019" level="INFO">${ACCURACY} = {'diff': [0.00010677799999999488, 0.00010725000000000318, 0.00010731900000000155, 0.0001075690000000018, 0.00010702699999999565, 0.00010692999999999814, 0.00010765299999999922, 0.00010705500000000173,...</msg>
<status status="PASS" starttime="20201030 15:57:00.011" endtime="20201030 15:57:00.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.030" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:57:00.027" endtime="20201030 15:57:00.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.035" level="INFO">VALUE: [0.00010677799999999488, 0.00010725000000000318, 0.00010731900000000155, 0.0001075690000000018, 0.00010702699999999565, 0.00010692999999999814, 0.00010765299999999922, 0.00010705500000000173, 0.0001071810000000048, 0.00010759700000000094, 0.0001068889999999989, 0.00010680500000000148, 0.00010698599999999642, 0.00010708300000000087, 0.00010734700000000069, 0.00010762500000000008, 0.00010705500000000173, 0.00010675000000000268, 0.00010752700000000309, 0.00010747200000000429, 0.00010677700000000234, 0.00010693099999999761, 0.00010749999999999649, 0.00010723699999999614, 0.00010698600000000336, 0.00010734700000000069, 0.00010674999999999574, 0.00010754100000000266, 0.00010740299999999897, 0.00010752800000000257, 0.0001070140000000025, 0.0001070560000000012, 0.00010755599999999477, 0.00010684700000000019, 0.00010731900000000155, 0.00010734700000000069, 0.00010686199999999924, 0.00010677800000000182, 0.00010676399999999531, 0.0001070560000000012, 0.0001075419999999952, 0.00010726399999999581, 0.00010745800000000472, 0.0001068889999999989, 0.00010687499999999933, 0.00010709799999999992, 0.00010732000000000103, 0.00010726399999999581, 0.00010704200000000164, 0.00010717999999999839]</msg>
<status status="PASS" starttime="20201030 15:57:00.032" endtime="20201030 15:57:00.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.021" endtime="20201030 15:57:00.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:00.047" endtime="20201030 15:57:00.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.043" endtime="20201030 15:57:00.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.040" endtime="20201030 15:57:00.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.558" endtime="20201030 15:57:00.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.557" endtime="20201030 15:57:00.072"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.094" endtime="20201030 15:57:00.115"></status>
</kw>
<msg timestamp="20201030 15:57:00.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:00.091" endtime="20201030 15:57:00.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:00.118" endtime="20201030 15:57:00.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.124" endtime="20201030 15:57:00.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.084" endtime="20201030 15:57:00.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.078" endtime="20201030 15:57:00.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.147" endtime="20201030 15:57:00.478"></status>
</kw>
<msg timestamp="20201030 15:57:00.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038749764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038857625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:00.144" endtime="20201030 15:57:00.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038749764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038857625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:00.487" endtime="20201030 15:57:00.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.506" endtime="20201030 15:57:00.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.137" endtime="20201030 15:57:00.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.132" endtime="20201030 15:57:00.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:00.522" level="INFO">${RESULT} = [{'diff': 0.00010786100000000076}, {'diff': 0.00010777800000000282}, {'diff': 0.00010847299999999782}, {'diff': 0.00010782000000000153}, {'diff': 0.00010852799999999663}, {'diff': 0.000107930999999998...</msg>
<status status="PASS" starttime="20201030 15:57:00.514" endtime="20201030 15:57:00.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:00.533" level="INFO">${ACCURACY} = {'diff': [0.00010786100000000076, 0.00010777800000000282, 0.00010847299999999782, 0.00010782000000000153, 0.00010852799999999663, 0.00010793099999999861, 0.00010865300000000022, 0.00010779199999999545...</msg>
<status status="PASS" starttime="20201030 15:57:00.524" endtime="20201030 15:57:00.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.544" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:57:00.542" endtime="20201030 15:57:00.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.549" level="INFO">VALUE: [0.00010786100000000076, 0.00010777800000000282, 0.00010847299999999782, 0.00010782000000000153, 0.00010852799999999663, 0.00010793099999999861, 0.00010865300000000022, 0.00010779199999999545, 0.00010838800000000093, 0.0001084020000000005, 0.00010834700000000169, 0.00010808300000000187, 0.00010770800000000497, 0.00010818099999999886, 0.00010854200000000314, 0.00010843099999999911, 0.00010868099999999936, 0.00010836100000000126, 0.00010802700000000359, 0.00010794399999999871, 0.00010775000000000368, 0.00010808400000000135, 0.00010769499999999793, 0.00010850000000000443, 0.00010834799999999423, 0.0001078340000000011, 0.00010776400000000325, 0.00010773699999999664, 0.00010836200000000074, 0.00010820799999999853, 0.00010769399999999846, 0.0001078889999999999, 0.00010849999999999749, 0.00010823599999999767, 0.00010798599999999742, 0.00010868000000000683, 0.00010813899999999321, 0.00010791599999999957, 0.00010805599999999527, 0.00010809700000000144, 0.0001082219999999981, 0.00010784700000000119, 0.00010773599999999717, 0.00010840299999999997, 0.00010794400000000565, 0.00010848599999999792, 0.00010841699999999954, 0.00010832000000000203, 0.00010826400000000375, 0.00010863900000000065]</msg>
<status status="PASS" starttime="20201030 15:57:00.546" endtime="20201030 15:57:00.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.535" endtime="20201030 15:57:00.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:00.562" endtime="20201030 15:57:00.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.557" endtime="20201030 15:57:00.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.555" endtime="20201030 15:57:00.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.074" endtime="20201030 15:57:00.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.073" endtime="20201030 15:57:00.587"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.609" endtime="20201030 15:57:00.631"></status>
</kw>
<msg timestamp="20201030 15:57:00.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:00.606" endtime="20201030 15:57:00.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:00.634" endtime="20201030 15:57:00.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.640" endtime="20201030 15:57:00.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.599" endtime="20201030 15:57:00.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.593" endtime="20201030 15:57:00.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.663" endtime="20201030 15:57:01.009"></status>
</kw>
<msg timestamp="20201030 15:57:01.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039236028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039344986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:00.660" endtime="20201030 15:57:01.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039236028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039344986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:01.018" endtime="20201030 15:57:01.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.036" endtime="20201030 15:57:01.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.653" endtime="20201030 15:57:01.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.648" endtime="20201030 15:57:01.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:01.053" level="INFO">${RESULT} = [{'diff': 0.00010895799999999928}, {'diff': 0.00010906899999999636}, {'diff': 0.00010948599999999892}, {'diff': 0.00010915299999999378}, {'diff': 0.00010886099999999482}, {'diff': 0.000109221999999999...</msg>
<status status="PASS" starttime="20201030 15:57:01.045" endtime="20201030 15:57:01.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:01.062" level="INFO">${ACCURACY} = {'diff': [0.00010895799999999928, 0.00010906899999999636, 0.00010948599999999892, 0.00010915299999999378, 0.00010886099999999482, 0.0001092219999999991, 0.00010898599999999842, 0.00010966700000000079,...</msg>
<status status="PASS" starttime="20201030 15:57:01.055" endtime="20201030 15:57:01.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.073" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:57:01.071" endtime="20201030 15:57:01.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.078" level="INFO">VALUE: [0.00010895799999999928, 0.00010906899999999636, 0.00010948599999999892, 0.00010915299999999378, 0.00010886099999999482, 0.0001092219999999991, 0.00010898599999999842, 0.00010966700000000079, 0.00010934700000000269, 0.0001090419999999967, 0.00010951399999999806, 0.00010919399999999996, 0.00010905500000000373, 0.00010908399999999541, 0.00010908299999999593, 0.00010952800000000457, 0.0001090560000000032, 0.00010868099999999936, 0.00010961100000000251, 0.00010893099999999961, 0.00010940300000000097, 0.00010937500000000183, 0.00010937500000000183, 0.00010963900000000165, 0.00010965300000000122, 0.00010926400000000475, 0.00010893099999999961, 0.00010887500000000133, 0.00010941700000000054, 0.00010959700000000294, 0.00010916699999999335, 0.00010926399999999781, 0.00010948699999999839, 0.00010951399999999806, 0.00010902800000000407, 0.00010959700000000294, 0.00010881899999999611, 0.00010891700000000004, 0.0001092219999999991, 0.00010944499999999968, 0.00010934800000000217, 0.00010918000000000039, 0.00010874999999999774, 0.00010922299999999857, 0.00010913900000000115, 0.00010966700000000079, 0.00010951399999999806, 0.00010879200000000339, 0.00010923599999999867, 0.00010873599999999817]</msg>
<status status="PASS" starttime="20201030 15:57:01.075" endtime="20201030 15:57:01.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.064" endtime="20201030 15:57:01.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:01.090" endtime="20201030 15:57:01.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.086" endtime="20201030 15:57:01.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.084" endtime="20201030 15:57:01.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.589" endtime="20201030 15:57:01.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.587" endtime="20201030 15:57:01.116"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.138" endtime="20201030 15:57:01.161"></status>
</kw>
<msg timestamp="20201030 15:57:01.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:01.135" endtime="20201030 15:57:01.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:01.165" endtime="20201030 15:57:01.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.171" endtime="20201030 15:57:01.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.128" endtime="20201030 15:57:01.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.122" endtime="20201030 15:57:01.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.194" endtime="20201030 15:57:01.544"></status>
</kw>
<msg timestamp="20201030 15:57:01.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040753528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040863514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:01.191" endtime="20201030 15:57:01.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040753528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040863514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:01.554" endtime="20201030 15:57:01.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.573" endtime="20201030 15:57:01.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.183" endtime="20201030 15:57:01.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.179" endtime="20201030 15:57:01.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:01.590" level="INFO">${RESULT} = [{'diff': 0.00010998599999999942}, {'diff': 0.00011052800000000557}, {'diff': 0.00011058399999999691}, {'diff': 0.00010983300000000362}, {'diff': 0.00011036100000000326}, {'diff': 0.000110361000000003...</msg>
<status status="PASS" starttime="20201030 15:57:01.581" endtime="20201030 15:57:01.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:01.599" level="INFO">${ACCURACY} = {'diff': [0.00010998599999999942, 0.00011052800000000557, 0.00011058399999999691, 0.00010983300000000362, 0.00011036100000000326, 0.00011036100000000326, 0.00011058299999999743, 0.00011043000000000164...</msg>
<status status="PASS" starttime="20201030 15:57:01.592" endtime="20201030 15:57:01.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.609" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:57:01.607" endtime="20201030 15:57:01.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.615" level="INFO">VALUE: [0.00010998599999999942, 0.00011052800000000557, 0.00011058399999999691, 0.00010983300000000362, 0.00011036100000000326, 0.00011036100000000326, 0.00011058299999999743, 0.00011043000000000164, 0.00011030600000000446, 0.00011009700000000344, 0.00010990300000000147, 0.00010984700000000319, 0.00010988899999999496, 0.0001100690000000043, 0.00011036100000000326, 0.00011066600000000232, 0.0001105690000000048, 0.00011008299999999693, 0.00011058299999999743, 0.00011037500000000283, 0.00010977799999999788, 0.00011069500000000093, 0.00011052799999999863, 0.00011063899999999571, 0.00011019400000000096, 0.00011002799999999813, 0.00011034700000000369, 0.00011027800000000532, 0.00010997199999999985, 0.00011044400000000121, 0.000110596999999997, 0.00011016700000000129, 0.00011051399999999906, 0.00011018000000000139, 0.0001104169999999946, 0.00010983299999999668, 0.00011020800000000053, 0.00010976399999999831, 0.00011065300000000222, 0.00011066700000000179, 0.00010965300000000122, 0.0001103340000000036, 0.00011056899999999786, 0.00011040299999999503, 0.0001097219999999996, 0.00011001399999999856, 0.00011027799999999838, 0.00011052800000000557, 0.00010987500000000233, 0.0001097219999999996]</msg>
<status status="PASS" starttime="20201030 15:57:01.612" endtime="20201030 15:57:01.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.600" endtime="20201030 15:57:01.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:01.628" endtime="20201030 15:57:01.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.623" endtime="20201030 15:57:01.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.620" endtime="20201030 15:57:01.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.118" endtime="20201030 15:57:01.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.116" endtime="20201030 15:57:01.653"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.676" endtime="20201030 15:57:01.696"></status>
</kw>
<msg timestamp="20201030 15:57:01.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:01.672" endtime="20201030 15:57:01.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:01.700" endtime="20201030 15:57:01.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.706" endtime="20201030 15:57:01.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.665" endtime="20201030 15:57:01.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.660" endtime="20201030 15:57:01.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.729" endtime="20201030 15:57:02.061"></status>
</kw>
<msg timestamp="20201030 15:57:02.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039001569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039112389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:01.725" endtime="20201030 15:57:02.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039001569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039112389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:02.070" endtime="20201030 15:57:02.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.088" endtime="20201030 15:57:02.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.718" endtime="20201030 15:57:02.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.714" endtime="20201030 15:57:02.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:02.105" level="INFO">${RESULT} = [{'diff': 0.00011081999999999759}, {'diff': 0.00011155599999999877}, {'diff': 0.00011072300000000007}, {'diff': 0.00011140300000000297}, {'diff': 0.00011115300000000272}, {'diff': 0.000110709000000000...</msg>
<status status="PASS" starttime="20201030 15:57:02.096" endtime="20201030 15:57:02.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:02.115" level="INFO">${ACCURACY} = {'diff': [0.00011081999999999759, 0.00011155599999999877, 0.00011072300000000007, 0.00011140300000000297, 0.00011115300000000272, 0.0001107090000000005, 0.00011087499999999639, 0.00011127799999999938,...</msg>
<status status="PASS" starttime="20201030 15:57:02.107" endtime="20201030 15:57:02.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.126" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:57:02.124" endtime="20201030 15:57:02.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.131" level="INFO">VALUE: [0.00011081999999999759, 0.00011155599999999877, 0.00011072300000000007, 0.00011140300000000297, 0.00011115300000000272, 0.0001107090000000005, 0.00011087499999999639, 0.00011127799999999938, 0.00011150000000000049, 0.00011099999999999999, 0.00011120800000000153, 0.0001109299999999952, 0.0001107220000000006, 0.00011115300000000272, 0.0001110969999999975, 0.00011111100000000401, 0.00011113900000000315, 0.0001112220000000011, 0.00011127799999999938, 0.00011137499999999689, 0.00011126399999999981, 0.0001112220000000011, 0.00011101399999999956, 0.00011127799999999938, 0.00011074999999999974, 0.00011161100000000451, 0.00011079199999999845, 0.00011141600000000307, 0.00011131899999999861, 0.0001109299999999952, 0.00011130599999999852, 0.00011166700000000279, 0.00011143100000000211, 0.000111209000000001, 0.00011137500000000383, 0.00011098699999999989, 0.00011158299999999843, 0.00011105599999999827, 0.0001110560000000052, 0.00011093099999999467, 0.00011119500000000143, 0.00011147300000000082, 0.00011104099999999922, 0.00011115300000000272, 0.0001113619999999968, 0.00011069500000000093, 0.00011134699999999775, 0.00011113900000000315, 0.00011080499999999854, 0.00011083299999999768]</msg>
<status status="PASS" starttime="20201030 15:57:02.128" endtime="20201030 15:57:02.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.117" endtime="20201030 15:57:02.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:02.143" endtime="20201030 15:57:02.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.139" endtime="20201030 15:57:02.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.137" endtime="20201030 15:57:02.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.655" endtime="20201030 15:57:02.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.654" endtime="20201030 15:57:02.168"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.190" endtime="20201030 15:57:02.211"></status>
</kw>
<msg timestamp="20201030 15:57:02.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.187" endtime="20201030 15:57:02.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.214" endtime="20201030 15:57:02.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.220" endtime="20201030 15:57:02.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.180" endtime="20201030 15:57:02.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.174" endtime="20201030 15:57:02.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.243" endtime="20201030 15:57:02.575"></status>
</kw>
<msg timestamp="20201030 15:57:02.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038869792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038981847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:02.240" endtime="20201030 15:57:02.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038869792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038981847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:02.584" endtime="20201030 15:57:02.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.602" endtime="20201030 15:57:02.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.233" endtime="20201030 15:57:02.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.228" endtime="20201030 15:57:02.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:02.619" level="INFO">${RESULT} = [{'diff': 0.0001120549999999998}, {'diff': 0.00011208299999999893}, {'diff': 0.0001120969999999985}, {'diff': 0.00011200000000000099}, {'diff': 0.00011269400000000346}, {'diff': 0.00011212499999999764...</msg>
<status status="PASS" starttime="20201030 15:57:02.610" endtime="20201030 15:57:02.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:02.630" level="INFO">${ACCURACY} = {'diff': [0.0001120549999999998, 0.00011208299999999893, 0.0001120969999999985, 0.00011200000000000099, 0.00011269400000000346, 0.00011212499999999764, 0.00011268100000000336, 0.00011258400000000585, ...</msg>
<status status="PASS" starttime="20201030 15:57:02.621" endtime="20201030 15:57:02.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.640" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:57:02.638" endtime="20201030 15:57:02.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.646" level="INFO">VALUE: [0.0001120549999999998, 0.00011208299999999893, 0.0001120969999999985, 0.00011200000000000099, 0.00011269400000000346, 0.00011212499999999764, 0.00011268100000000336, 0.00011258400000000585, 0.00011245900000000225, 0.00011251400000000106, 0.00011245799999999584, 0.00011222300000000157, 0.00011183299999999868, 0.00011255599999999977, 0.00011222299999999463, 0.00011231899999999961, 0.00011237500000000483, 0.00011180599999999902, 0.00011206999999999884, 0.00011266600000000432, 0.00011234699999999875, 0.000112209000000002, 0.00011216599999999688, 0.0001120690000000063, 0.00011200000000000099, 0.00011173600000000117, 0.00011252700000000115, 0.00011220800000000253, 0.00011241599999999713, 0.00011225000000000124, 0.00011236100000000526, 0.00011176400000000031, 0.00011182000000000553, 0.00011230599999999952, 0.00011217999999999645, 0.00011191700000000304, 0.00011218099999999592, 0.00011230599999999952, 0.00011244500000000268, 0.00011234699999999875, 0.00011223600000000167, 0.0001123749999999979, 0.00011181899999999911, 0.00011197200000000185, 0.00011240299999999703, 0.000112596999999999, 0.00011190299999999653, 0.0001122770000000009, 0.00011223599999999473, 0.00011208300000000587]</msg>
<status status="PASS" starttime="20201030 15:57:02.643" endtime="20201030 15:57:02.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.631" endtime="20201030 15:57:02.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:02.658" endtime="20201030 15:57:02.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.654" endtime="20201030 15:57:02.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.651" endtime="20201030 15:57:02.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.170" endtime="20201030 15:57:02.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.169" endtime="20201030 15:57:02.683"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.705" endtime="20201030 15:57:02.726"></status>
</kw>
<msg timestamp="20201030 15:57:02.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.702" endtime="20201030 15:57:02.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.729" endtime="20201030 15:57:02.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.735" endtime="20201030 15:57:02.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.695" endtime="20201030 15:57:02.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.689" endtime="20201030 15:57:02.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.758" endtime="20201030 15:57:03.092"></status>
</kw>
<msg timestamp="20201030 15:57:03.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038926431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039039778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:02.755" endtime="20201030 15:57:03.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038926431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039039778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:03.102" endtime="20201030 15:57:03.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.120" endtime="20201030 15:57:03.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.748" endtime="20201030 15:57:03.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.743" endtime="20201030 15:57:03.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:03.136" level="INFO">${RESULT} = [{'diff': 0.00011334699999999975}, {'diff': 0.00011365199999999881}, {'diff': 0.00011326400000000181}, {'diff': 0.00011333300000000018}, {'diff': 0.00011295800000000328}, {'diff': 0.000113193999999997...</msg>
<status status="PASS" starttime="20201030 15:57:03.128" endtime="20201030 15:57:03.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:03.145" level="INFO">${ACCURACY} = {'diff': [0.00011334699999999975, 0.00011365199999999881, 0.00011326400000000181, 0.00011333300000000018, 0.00011295800000000328, 0.00011319399999999702, 0.00011334699999999975, 0.00011336099999999932...</msg>
<status status="PASS" starttime="20201030 15:57:03.138" endtime="20201030 15:57:03.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.156" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:57:03.154" endtime="20201030 15:57:03.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.161" level="INFO">VALUE: [0.00011334699999999975, 0.00011365199999999881, 0.00011326400000000181, 0.00011333300000000018, 0.00011295800000000328, 0.00011319399999999702, 0.00011334699999999975, 0.00011336099999999932, 0.00011341600000000507, 0.00011348599999999598, 0.00011340199999999856, 0.00011358300000000043, 0.00011295900000000275, 0.00011301400000000156, 0.00011356900000000086, 0.00011345799999999684, 0.00011327799999999444, 0.00011311199999999855, 0.00011338899999999846, 0.00011306900000000036, 0.00011297199999999591, 0.00011301400000000156, 0.00011302799999999419, 0.00011345799999999684, 0.00011358300000000043, 0.00011345800000000378, 0.00011349999999999555, 0.00011312499999999864, 0.0001132499999999953, 0.00011312499999999864, 0.00011280600000000002, 0.00011297300000000232, 0.00011340299999999803, 0.00011362500000000608, 0.00011358300000000043, 0.00011270800000000303, 0.00011283299999999968, 0.00011266599999999738, 0.00011336100000000626, 0.00011316700000000429, 0.00011318000000000439, 0.0001128749999999984, 0.00011275000000000174, 0.00011365199999999881, 0.00011333299999999324, 0.00011330600000000052, 0.00011332000000000009, 0.0001128340000000061, 0.00011334699999999975, 0.00011356899999999392]</msg>
<status status="PASS" starttime="20201030 15:57:03.158" endtime="20201030 15:57:03.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.147" endtime="20201030 15:57:03.164"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:03.174" endtime="20201030 15:57:03.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.170" endtime="20201030 15:57:03.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.167" endtime="20201030 15:57:03.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.685" endtime="20201030 15:57:03.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.684" endtime="20201030 15:57:03.199"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.221" endtime="20201030 15:57:03.243"></status>
</kw>
<msg timestamp="20201030 15:57:03.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.218" endtime="20201030 15:57:03.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.247" endtime="20201030 15:57:03.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.253" endtime="20201030 15:57:03.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.211" endtime="20201030 15:57:03.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.205" endtime="20201030 15:57:03.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.276" endtime="20201030 15:57:03.607"></status>
</kw>
<msg timestamp="20201030 15:57:03.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040548431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040662417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:03.272" endtime="20201030 15:57:03.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040548431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040662417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:03.616" endtime="20201030 15:57:03.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.634" endtime="20201030 15:57:03.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.265" endtime="20201030 15:57:03.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.261" endtime="20201030 15:57:03.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:03.651" level="INFO">${RESULT} = [{'diff': 0.00011398599999999648}, {'diff': 0.00011395800000000428}, {'diff': 0.00011427800000000238}, {'diff': 0.00011429200000000195}, {'diff': 0.00011395800000000428}, {'diff': 0.000114027999999995...</msg>
<status status="PASS" starttime="20201030 15:57:03.642" endtime="20201030 15:57:03.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:03.660" level="INFO">${ACCURACY} = {'diff': [0.00011398599999999648, 0.00011395800000000428, 0.00011427800000000238, 0.00011429200000000195, 0.00011395800000000428, 0.00011402799999999519, 0.00011397200000000385, 0.00011413899999999921...</msg>
<status status="PASS" starttime="20201030 15:57:03.653" endtime="20201030 15:57:03.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.671" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:57:03.668" endtime="20201030 15:57:03.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.676" level="INFO">VALUE: [0.00011398599999999648, 0.00011395800000000428, 0.00011427800000000238, 0.00011429200000000195, 0.00011395800000000428, 0.00011402799999999519, 0.00011397200000000385, 0.00011413899999999921, 0.00011461099999999363, 0.00011445799999999784, 0.00011429200000000195, 0.00011393100000000461, 0.00011395799999999734, 0.00011369400000000446, 0.00011408300000000093, 0.00011470799999999809, 0.00011447199999999741, 0.00011380500000000154, 0.00011463899999999971, 0.00011368100000000436, 0.00011418099999999792, 0.00011384700000000025, 0.00011425000000000324, 0.00011377800000000188, 0.0001138749999999994, 0.00011402700000000265, 0.0001144299999999987, 0.0001144169999999986, 0.00011456900000000186, 0.00011420800000000453, 0.00011379100000000197, 0.00011415299999999878, 0.00011416599999999888, 0.00011438899999999946, 0.0001140970000000005, 0.00011393099999999767, 0.00011433400000000066, 0.00011394400000000471, 0.00011462500000000014, 0.00011463899999999971, 0.00011393099999999767, 0.00011434700000000075, 0.0001145829999999945, 0.00011369399999999752, 0.00011386099999999982, 0.00011390300000000547, 0.00011402699999999572, 0.00011454099999999579, 0.00011395799999999734, 0.00011444399999999827]</msg>
<status status="PASS" starttime="20201030 15:57:03.673" endtime="20201030 15:57:03.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.662" endtime="20201030 15:57:03.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:03.690" endtime="20201030 15:57:03.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.684" endtime="20201030 15:57:03.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.682" endtime="20201030 15:57:03.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.201" endtime="20201030 15:57:03.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.200" endtime="20201030 15:57:03.715"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.737" endtime="20201030 15:57:03.758"></status>
</kw>
<msg timestamp="20201030 15:57:03.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.734" endtime="20201030 15:57:03.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.761" endtime="20201030 15:57:03.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.767" endtime="20201030 15:57:03.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.727" endtime="20201030 15:57:03.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.721" endtime="20201030 15:57:03.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.791" endtime="20201030 15:57:04.126"></status>
</kw>
<msg timestamp="20201030 15:57:04.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038966028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039081542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:03.787" endtime="20201030 15:57:04.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038966028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039081542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:04.135" endtime="20201030 15:57:04.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.153" endtime="20201030 15:57:04.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.780" endtime="20201030 15:57:04.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.775" endtime="20201030 15:57:04.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:04.170" level="INFO">${RESULT} = [{'diff': 0.00011551399999999712}, {'diff': 0.00011567999999999995}, {'diff': 0.00011544500000000568}, {'diff': 0.00011547200000000535}, {'diff': 0.0001154169999999996}, {'diff': 0.0001148750000000004...</msg>
<status status="PASS" starttime="20201030 15:57:04.161" endtime="20201030 15:57:04.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:04.180" level="INFO">${ACCURACY} = {'diff': [0.00011551399999999712, 0.00011567999999999995, 0.00011544500000000568, 0.00011547200000000535, 0.0001154169999999996, 0.0001148750000000004, 0.00011495800000000528, 0.00011480600000000202, ...</msg>
<status status="PASS" starttime="20201030 15:57:04.172" endtime="20201030 15:57:04.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.191" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:57:04.189" endtime="20201030 15:57:04.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.196" level="INFO">VALUE: [0.00011551399999999712, 0.00011567999999999995, 0.00011544500000000568, 0.00011547200000000535, 0.0001154169999999996, 0.0001148750000000004, 0.00011495800000000528, 0.00011480600000000202, 0.00011565300000000028, 0.00011477699999999647, 0.00011566600000000038, 0.00011523600000000467, 0.00011554099999999679, 0.00011565300000000028, 0.00011565200000000081, 0.00011562500000000114, 0.0001153750000000009, 0.00011569500000000593, 0.0001149169999999991, 0.00011515299999999978, 0.00011538900000000046, 0.00011483299999999474, 0.00011522299999999763, 0.00011518099999999892, 0.00011523599999999773, 0.00011501400000000356, 0.00011486100000000082, 0.00011556900000000286, 0.00011505600000000227, 0.00011531899999999567, 0.00011504199999999576, 0.0001154299999999997, 0.00011540300000000003, 0.00011544399999999927, 0.00011476400000000331, 0.00011531899999999567, 0.00011548599999999798, 0.00011551399999999712, 0.00011506899999999542, 0.00011476400000000331, 0.00011543099999999917, 0.00011552799999999669, 0.00011527799999999644, 0.00011523599999999773, 0.00011516599999999988, 0.00011540300000000003, 0.0001150420000000027, 0.00011493100000000561, 0.00011543099999999917, 0.00011569400000000646]</msg>
<status status="PASS" starttime="20201030 15:57:04.193" endtime="20201030 15:57:04.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.182" endtime="20201030 15:57:04.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:04.208" endtime="20201030 15:57:04.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.204" endtime="20201030 15:57:04.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.202" endtime="20201030 15:57:04.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.717" endtime="20201030 15:57:04.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.715" endtime="20201030 15:57:04.233"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.256" endtime="20201030 15:57:04.276"></status>
</kw>
<msg timestamp="20201030 15:57:04.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:04.252" endtime="20201030 15:57:04.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:04.280" endtime="20201030 15:57:04.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.286" endtime="20201030 15:57:04.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.245" endtime="20201030 15:57:04.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.240" endtime="20201030 15:57:04.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.309" endtime="20201030 15:57:04.640"></status>
</kw>
<msg timestamp="20201030 15:57:04.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03895625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039072431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:04.306" endtime="20201030 15:57:04.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03895625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039072431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:04.649" endtime="20201030 15:57:04.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.667" endtime="20201030 15:57:04.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.299" endtime="20201030 15:57:04.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.294" endtime="20201030 15:57:04.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:04.684" level="INFO">${RESULT} = [{'diff': 0.00011618099999999992}, {'diff': 0.00011618099999999992}, {'diff': 0.00011659799999999554}, {'diff': 0.00011665300000000128}, {'diff': 0.00011648599999999898}, {'diff': 0.000116639000000001...</msg>
<status status="PASS" starttime="20201030 15:57:04.675" endtime="20201030 15:57:04.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:04.699" level="INFO">${ACCURACY} = {'diff': [0.00011618099999999992, 0.00011618099999999992, 0.00011659799999999554, 0.00011665300000000128, 0.00011648599999999898, 0.00011663900000000171, 0.00011570899999999856, 0.00011593099999999967...</msg>
<status status="PASS" starttime="20201030 15:57:04.686" endtime="20201030 15:57:04.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.709" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:57:04.707" endtime="20201030 15:57:04.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.715" level="INFO">VALUE: [0.00011618099999999992, 0.00011618099999999992, 0.00011659799999999554, 0.00011665300000000128, 0.00011648599999999898, 0.00011663900000000171, 0.00011570899999999856, 0.00011593099999999967, 0.00011599999999999805, 0.00011615199999999437, 0.00011666700000000085, 0.0001164300000000007, 0.00011622299999999863, 0.00011616600000000088, 0.00011649999999999855, 0.0001164300000000007, 0.00011618099999999992, 0.00011607000000000284, 0.00011584699999999531, 0.00011629199999999701, 0.00011625000000000524, 0.00011634699999999581, 0.00011619400000000002, 0.00011648599999999898, 0.000116597000000003, 0.00011622199999999916, 0.00011583299999999574, 0.00011641600000000113, 0.0001165829999999965, 0.00011633299999999624, 0.00011584699999999531, 0.00011611099999999513, 0.00011615200000000131, 0.00011591600000000063, 0.00011583300000000268, 0.00011580500000000354, 0.00011611200000000155, 0.00011670800000000009, 0.0001164170000000006, 0.00011593099999999967, 0.00011573599999999823, 0.00011600000000000499, 0.00011568099999999942, 0.00011611099999999513, 0.00011595799999999934, 0.00011612500000000164, 0.00011666700000000085, 0.00011649999999999855, 0.00011638900000000146, 0.00011652799999999769]</msg>
<status status="PASS" starttime="20201030 15:57:04.712" endtime="20201030 15:57:04.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.700" endtime="20201030 15:57:04.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:04.727" endtime="20201030 15:57:04.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.723" endtime="20201030 15:57:04.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.720" endtime="20201030 15:57:04.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.235" endtime="20201030 15:57:04.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.234" endtime="20201030 15:57:04.752"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.774" endtime="20201030 15:57:04.795"></status>
</kw>
<msg timestamp="20201030 15:57:04.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:04.771" endtime="20201030 15:57:04.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:04.798" endtime="20201030 15:57:04.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.804" endtime="20201030 15:57:04.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.764" endtime="20201030 15:57:04.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.758" endtime="20201030 15:57:04.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.827" endtime="20201030 15:57:05.162"></status>
</kw>
<msg timestamp="20201030 15:57:05.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038890042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039007208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:04.824" endtime="20201030 15:57:05.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038890042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039007208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:05.172" endtime="20201030 15:57:05.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.190" endtime="20201030 15:57:05.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.817" endtime="20201030 15:57:05.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.812" endtime="20201030 15:57:05.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:05.207" level="INFO">${RESULT} = [{'diff': 0.00011716600000000188}, {'diff': 0.00011715299999999484}, {'diff': 0.00011766700000000185}, {'diff': 0.00011733399999999672}, {'diff': 0.00011699999999999905}, {'diff': 0.000117332999999997...</msg>
<status status="PASS" starttime="20201030 15:57:05.198" endtime="20201030 15:57:05.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:05.216" level="INFO">${ACCURACY} = {'diff': [0.00011716600000000188, 0.00011715299999999484, 0.00011766700000000185, 0.00011733399999999672, 0.00011699999999999905, 0.00011733299999999725, 0.00011722299999999963, 0.00011694399999999383...</msg>
<status status="PASS" starttime="20201030 15:57:05.209" endtime="20201030 15:57:05.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.226" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:57:05.224" endtime="20201030 15:57:05.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.231" level="INFO">VALUE: [0.00011716600000000188, 0.00011715299999999484, 0.00011766700000000185, 0.00011733399999999672, 0.00011699999999999905, 0.00011733299999999725, 0.00011722299999999963, 0.00011694399999999383, 0.00011729199999999801, 0.00011715300000000178, 0.00011694400000000077, 0.00011670800000000009, 0.0001171249999999957, 0.0001172499999999993, 0.00011733400000000366, 0.0001175829999999975, 0.00011686099999999588, 0.00011743100000000117, 0.00011751399999999912, 0.00011758300000000443, 0.00011688900000000196, 0.00011722200000000016, 0.00011680500000000454, 0.00011695800000000034, 0.00011733299999999725, 0.00011701399999999862, 0.00011762500000000314, 0.0001172499999999993, 0.00011713900000000221, 0.0001173049999999981, 0.00011693100000000067, 0.00011770800000000109, 0.00011747200000000041, 0.00011747200000000041, 0.00011733400000000366, 0.00011729099999999854, 0.00011770799999999415, 0.00011726399999999887, 0.0001175829999999975, 0.00011756899999999793, 0.00011705600000000427, 0.0001168049999999976, 0.00011723599999999973, 0.0001167369999999987, 0.00011677799999999794, 0.00011694500000000024, 0.00011747299999999988, 0.0001172499999999993, 0.0001175829999999975, 0.00011741600000000213]</msg>
<status status="PASS" starttime="20201030 15:57:05.228" endtime="20201030 15:57:05.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.217" endtime="20201030 15:57:05.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:05.244" endtime="20201030 15:57:05.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.240" endtime="20201030 15:57:05.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.237" endtime="20201030 15:57:05.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.754" endtime="20201030 15:57:05.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.753" endtime="20201030 15:57:05.269"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.291" endtime="20201030 15:57:05.313"></status>
</kw>
<msg timestamp="20201030 15:57:05.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:05.288" endtime="20201030 15:57:05.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:05.317" endtime="20201030 15:57:05.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.323" endtime="20201030 15:57:05.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.281" endtime="20201030 15:57:05.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.275" endtime="20201030 15:57:05.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.346" endtime="20201030 15:57:05.678"></status>
</kw>
<msg timestamp="20201030 15:57:05.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040501889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040619986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:05.343" endtime="20201030 15:57:05.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040501889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040619986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:05.687" endtime="20201030 15:57:05.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.705" endtime="20201030 15:57:05.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.335" endtime="20201030 15:57:05.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.331" endtime="20201030 15:57:05.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:05.722" level="INFO">${RESULT} = [{'diff': 0.00011809699999999757}, {'diff': 0.0001182500000000003}, {'diff': 0.00011788900000000296}, {'diff': 0.00011826399999999987}, {'diff': 0.00011848600000000098}, {'diff': 0.0001181390000000032...</msg>
<status status="PASS" starttime="20201030 15:57:05.713" endtime="20201030 15:57:05.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:05.731" level="INFO">${ACCURACY} = {'diff': [0.00011809699999999757, 0.0001182500000000003, 0.00011788900000000296, 0.00011826399999999987, 0.00011848600000000098, 0.00011813900000000321, 0.00011798600000000048, 0.00011816699999999541,...</msg>
<status status="PASS" starttime="20201030 15:57:05.724" endtime="20201030 15:57:05.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.741" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:57:05.739" endtime="20201030 15:57:05.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.746" level="INFO">VALUE: [0.00011809699999999757, 0.0001182500000000003, 0.00011788900000000296, 0.00011826399999999987, 0.00011848600000000098, 0.00011813900000000321, 0.00011798600000000048, 0.00011816699999999541, 0.00011856900000000586, 0.0001179170000000021, 0.00011855599999999883, 0.00011805499999999886, 0.00011818100000000192, 0.00011820800000000159, 0.00011770799999999415, 0.00011845900000000131, 0.00011773600000000023, 0.00011823599999999379, 0.0001184449999999948, 0.00011862500000000414, 0.00011787499999999645, 0.00011845800000000184, 0.00011851400000000012, 0.00011827699999999997, 0.00011777800000000588, 0.0001180699999999979, 0.00011851400000000012, 0.00011815300000000278, 0.0001185829999999985, 0.0001180970000000045, 0.00011831900000000561, 0.00011813900000000321, 0.00011852799999999969, 0.00011862500000000414, 0.00011786100000000382, 0.00011770800000000109, 0.00011819499999999455, 0.00011856899999999893, 0.00011831899999999868, 0.00011770800000000109, 0.00011779199999999851, 0.0001180699999999979, 0.00011820800000000159, 0.00011829199999999901, 0.00011779099999999904, 0.00011838899999999652, 0.00011850000000000055, 0.00011847200000000141, 0.00011804199999999876, 0.0001185829999999985]</msg>
<status status="PASS" starttime="20201030 15:57:05.744" endtime="20201030 15:57:05.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.732" endtime="20201030 15:57:05.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:05.823" endtime="20201030 15:57:05.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.818" endtime="20201030 15:57:05.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.815" endtime="20201030 15:57:05.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.271" endtime="20201030 15:57:05.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.270" endtime="20201030 15:57:05.851"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.881" endtime="20201030 15:57:05.904"></status>
</kw>
<msg timestamp="20201030 15:57:05.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:05.877" endtime="20201030 15:57:05.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:05.907" endtime="20201030 15:57:05.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.914" endtime="20201030 15:57:05.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.867" endtime="20201030 15:57:05.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.860" endtime="20201030 15:57:05.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.938" endtime="20201030 15:57:06.270"></status>
</kw>
<msg timestamp="20201030 15:57:06.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050887514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051006528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:05.935" endtime="20201030 15:57:06.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050887514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051006528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:06.279" endtime="20201030 15:57:06.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.298" endtime="20201030 15:57:06.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.927" endtime="20201030 15:57:06.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.922" endtime="20201030 15:57:06.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:06.316" level="INFO">${RESULT} = [{'diff': 0.00011901400000000062}, {'diff': 0.00011947200000000241}, {'diff': 0.00011877799999999994}, {'diff': 0.00011972200000000266}, {'diff': 0.00011942999999999676}, {'diff': 0.000119139000000004...</msg>
<status status="PASS" starttime="20201030 15:57:06.307" endtime="20201030 15:57:06.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:06.327" level="INFO">${ACCURACY} = {'diff': [0.00011901400000000062, 0.00011947200000000241, 0.00011877799999999994, 0.00011972200000000266, 0.00011942999999999676, 0.00011913900000000421, 0.00011918099999999598, 0.00011877799999999994...</msg>
<status status="PASS" starttime="20201030 15:57:06.318" endtime="20201030 15:57:06.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.338" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:57:06.336" endtime="20201030 15:57:06.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.343" level="INFO">VALUE: [0.00011901400000000062, 0.00011947200000000241, 0.00011877799999999994, 0.00011972200000000266, 0.00011942999999999676, 0.00011913900000000421, 0.00011918099999999598, 0.00011877799999999994, 0.00011888800000000449, 0.00011868000000000295, 0.00011877799999999994, 0.0001188049999999996, 0.00011956899999999993, 0.00011908399999999847, 0.00011887499999999745, 0.0001195699999999994, 0.00011886100000000482, 0.00011880599999999908, 0.00011968100000000342, 0.00011897200000000191, 0.00011879199999999951, 0.00011920799999999565, 0.0001192370000000012, 0.00011955599999999983, 0.00011934799999999829, 0.00011920799999999565, 0.00011947200000000241, 0.00011941600000000413, 0.00011879100000000004, 0.00011941699999999666, 0.00011919399999999608, 0.00011927800000000044, 0.00011887499999999745, 0.00011938899999999752, 0.0001190970000000055, 0.00011922199999999522, 0.0001191950000000025, 0.00011918099999999598, 0.0001194029999999971, 0.00011923600000000173, 0.00011892999999999626, 0.00011959699999999907, 0.00011919400000000302, 0.00011893100000000267, 0.0001191950000000025, 0.00011966700000000385, 0.00011919400000000302, 0.00011913900000000421, 0.00011968100000000342, 0.00011913899999999727]</msg>
<status status="PASS" starttime="20201030 15:57:06.340" endtime="20201030 15:57:06.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.329" endtime="20201030 15:57:06.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:06.357" endtime="20201030 15:57:06.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.352" endtime="20201030 15:57:06.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.349" endtime="20201030 15:57:06.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.854" endtime="20201030 15:57:06.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.852" endtime="20201030 15:57:06.382"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.404" endtime="20201030 15:57:06.425"></status>
</kw>
<msg timestamp="20201030 15:57:06.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:06.401" endtime="20201030 15:57:06.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:06.429" endtime="20201030 15:57:06.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.435" endtime="20201030 15:57:06.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.394" endtime="20201030 15:57:06.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.388" endtime="20201030 15:57:06.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.459" endtime="20201030 15:57:06.789"></status>
</kw>
<msg timestamp="20201030 15:57:06.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039480875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039600847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:06.455" endtime="20201030 15:57:06.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039480875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039600847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:06.798" endtime="20201030 15:57:06.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.816" endtime="20201030 15:57:06.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.448" endtime="20201030 15:57:06.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.443" endtime="20201030 15:57:06.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:06.833" level="INFO">${RESULT} = [{'diff': 0.00011997200000000291}, {'diff': 0.00011995800000000334}, {'diff': 0.00012033399999999972}, {'diff': 0.00012013899999999827}, {'diff': 0.000119777999999994}, {'diff': 0.00012009699999999957...</msg>
<status status="PASS" starttime="20201030 15:57:06.824" endtime="20201030 15:57:06.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:06.844" level="INFO">${ACCURACY} = {'diff': [0.00011997200000000291, 0.00011995800000000334, 0.00012033399999999972, 0.00012013899999999827, 0.000119777999999994, 0.00012009699999999957, 0.00012076299999999596, 0.00011984699999999932, ...</msg>
<status status="PASS" starttime="20201030 15:57:06.835" endtime="20201030 15:57:06.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.854" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:57:06.852" endtime="20201030 15:57:06.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.860" level="INFO">VALUE: [0.00011997200000000291, 0.00011995800000000334, 0.00012033399999999972, 0.00012013899999999827, 0.000119777999999994, 0.00012009699999999957, 0.00012076299999999596, 0.00011984699999999932, 0.0001206249999999992, 0.00012011099999999914, 0.00011993100000000367, 0.00012055600000000083, 0.00012045899999999637, 0.00012042999999999776, 0.0001204449999999968, 0.00012033300000000025, 0.00012038899999999852, 0.00012040300000000503, 0.00012030499999999417, 0.0001204170000000046, 0.00011998600000000248, 0.00011986099999999889, 0.00012062500000000614, 0.00011986099999999889, 0.00012004099999999435, 0.00012022199999999622, 0.00011997299999999544, 0.00011988899999999802, 0.00012067999999999801, 0.0001199300000000042, 0.00011976399999999443, 0.00012026400000000187, 0.00012043100000000417, 0.00011986099999999889, 0.00012062500000000614, 0.00012034699999999982, 0.00012048600000000298, 0.00012023600000000273, 0.00012055600000000083, 0.00011998600000000248, 0.00012044399999999733, 0.0001206249999999992, 0.00012011100000000607, 0.00012008399999999947, 0.00012041600000000513, 0.00012033300000000025, 0.00012054200000000126, 0.0001204029999999981, 0.00011987499999999846, 0.00012055500000000136]</msg>
<status status="PASS" starttime="20201030 15:57:06.857" endtime="20201030 15:57:06.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.846" endtime="20201030 15:57:06.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:06.872" endtime="20201030 15:57:06.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.868" endtime="20201030 15:57:06.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.865" endtime="20201030 15:57:06.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.384" endtime="20201030 15:57:06.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.383" endtime="20201030 15:57:06.897"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.922" endtime="20201030 15:57:06.943"></status>
</kw>
<msg timestamp="20201030 15:57:06.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:06.918" endtime="20201030 15:57:06.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:06.946" endtime="20201030 15:57:06.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.953" endtime="20201030 15:57:06.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.909" endtime="20201030 15:57:06.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.903" endtime="20201030 15:57:06.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.976" endtime="20201030 15:57:07.310"></status>
</kw>
<msg timestamp="20201030 15:57:07.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041150903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041272292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:06.973" endtime="20201030 15:57:07.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041150903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041272292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:07.319" endtime="20201030 15:57:07.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.337" endtime="20201030 15:57:07.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.966" endtime="20201030 15:57:07.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.961" endtime="20201030 15:57:07.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:07.354" level="INFO">${RESULT} = [{'diff': 0.00012138899999999953}, {'diff': 0.0001207909999999951}, {'diff': 0.00012077800000000194}, {'diff': 0.00012117999999999851}, {'diff': 0.00012099999999999611}, {'diff': 0.0001210140000000026...</msg>
<status status="PASS" starttime="20201030 15:57:07.346" endtime="20201030 15:57:07.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:07.363" level="INFO">${ACCURACY} = {'diff': [0.00012138899999999953, 0.0001207909999999951, 0.00012077800000000194, 0.00012117999999999851, 0.00012099999999999611, 0.00012101400000000262, 0.00012166699999999891, 0.00012158399999999403,...</msg>
<status status="PASS" starttime="20201030 15:57:07.356" endtime="20201030 15:57:07.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.374" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:57:07.372" endtime="20201030 15:57:07.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.379" level="INFO">VALUE: [0.00012138899999999953, 0.0001207909999999951, 0.00012077800000000194, 0.00012117999999999851, 0.00012099999999999611, 0.00012101400000000262, 0.00012166699999999891, 0.00012158399999999403, 0.00012074999999999586, 0.00012155500000000236, 0.00012104200000000176, 0.00012088899999999903, 0.00012127699999999603, 0.00012131900000000168, 0.00012143099999999823, 0.00012151299999999671, 0.00012136100000000039, 0.00012120899999999712, 0.00012070899999999662, 0.00012158399999999403, 0.00012119399999999808, 0.00012115199999999937, 0.000121083000000001, 0.00012152800000000269, 0.00012147199999999747, 0.0001212909999999956, 0.00012091699999999816, 0.00012079200000000151, 0.00012072199999999672, 0.00012095800000000434, 0.00012173599999999729, 0.00012120899999999712, 0.00012099999999999611, 0.0001211249999999997, 0.0001214300000000057, 0.00012163899999999978, 0.0001212500000000033, 0.00012120800000000459, 0.00012122300000000363, 0.0001215830000000015, 0.00012147300000000388, 0.00012115199999999937, 0.00012156900000000193, 0.00012147200000000441, 0.00012127800000000244, 0.00012159800000000054, 0.00012098599999999654, 0.0001214579999999979, 0.00012081900000000118, 0.0001215830000000015]</msg>
<status status="PASS" starttime="20201030 15:57:07.376" endtime="20201030 15:57:07.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.365" endtime="20201030 15:57:07.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:07.391" endtime="20201030 15:57:07.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.387" endtime="20201030 15:57:07.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.385" endtime="20201030 15:57:07.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.899" endtime="20201030 15:57:07.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.898" endtime="20201030 15:57:07.416"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.439" endtime="20201030 15:57:07.461"></status>
</kw>
<msg timestamp="20201030 15:57:07.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:07.436" endtime="20201030 15:57:07.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:07.465" endtime="20201030 15:57:07.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.471" endtime="20201030 15:57:07.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.428" endtime="20201030 15:57:07.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.423" endtime="20201030 15:57:07.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.494" endtime="20201030 15:57:07.825"></status>
</kw>
<msg timestamp="20201030 15:57:07.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040626972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040748847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:07.491" endtime="20201030 15:57:07.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040626972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040748847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:07.834" endtime="20201030 15:57:07.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.853" endtime="20201030 15:57:07.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.484" endtime="20201030 15:57:07.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.479" endtime="20201030 15:57:07.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:07.869" level="INFO">${RESULT} = [{'diff': 0.00012187500000000046}, {'diff': 0.00012205600000000233}, {'diff': 0.0001225830000000025}, {'diff': 0.00012237500000000096}, {'diff': 0.00012261100000000164}, {'diff': 0.0001219169999999991...</msg>
<status status="PASS" starttime="20201030 15:57:07.861" endtime="20201030 15:57:07.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:07.879" level="INFO">${ACCURACY} = {'diff': [0.00012187500000000046, 0.00012205600000000233, 0.0001225830000000025, 0.00012237500000000096, 0.00012261100000000164, 0.00012191699999999916, 0.0001226659999999935, 0.0001219029999999996, 0...</msg>
<status status="PASS" starttime="20201030 15:57:07.872" endtime="20201030 15:57:07.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.889" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:57:07.887" endtime="20201030 15:57:07.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.894" level="INFO">VALUE: [0.00012187500000000046, 0.00012205600000000233, 0.0001225830000000025, 0.00012237500000000096, 0.00012261100000000164, 0.00012191699999999916, 0.0001226659999999935, 0.0001219029999999996, 0.00012269499999999905, 0.000121695000000005, 0.00012172199999999772, 0.00012223600000000473, 0.0001219029999999996, 0.0001219170000000061, 0.00012238900000000053, 0.0001221799999999995, 0.0001217630000000039, 0.00012222200000000516, 0.00012251399999999718, 0.0001221950000000055, 0.00012173600000000423, 0.0001219029999999996, 0.00012222200000000516, 0.00012169399999999858, 0.00012236100000000139, 0.00012234700000000182, 0.00012193099999999873, 0.00012216699999999941, 0.0001221799999999995, 0.00012194399999999883, 0.00012202799999999625, 0.00012183400000000122, 0.0001224160000000002, 0.00012241699999999966, 0.0001221120000000006, 0.00012180600000000208, 0.00012222199999999822, 0.00012243099999999923, 0.00012255500000000336, 0.00012197199999999797, 0.00012198600000000448, 0.00012256900000000293, 0.00012252799999999675, 0.00012234700000000182, 0.00012258400000000197, 0.00012202800000000319, 0.000122083000000002, 0.00012256900000000293, 0.00012211100000000114, 0.0001221250000000007]</msg>
<status status="PASS" starttime="20201030 15:57:07.891" endtime="20201030 15:57:07.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.880" endtime="20201030 15:57:07.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:07.908" endtime="20201030 15:57:07.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.902" endtime="20201030 15:57:07.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.900" endtime="20201030 15:57:07.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.419" endtime="20201030 15:57:07.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.417" endtime="20201030 15:57:07.933"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.955" endtime="20201030 15:57:07.977"></status>
</kw>
<msg timestamp="20201030 15:57:07.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:07.952" endtime="20201030 15:57:07.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:07.980" endtime="20201030 15:57:07.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.987" endtime="20201030 15:57:07.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.945" endtime="20201030 15:57:07.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.939" endtime="20201030 15:57:07.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.010" endtime="20201030 15:57:08.343"></status>
</kw>
<msg timestamp="20201030 15:57:08.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0389785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039101667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:57:08.007" endtime="20201030 15:57:08.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0389785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039101667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:57:08.352" endtime="20201030 15:57:08.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.370" endtime="20201030 15:57:08.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.000" endtime="20201030 15:57:08.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.995" endtime="20201030 15:57:08.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:08.387" level="INFO">${RESULT} = [{'diff': 0.00012316700000000042}, {'diff': 0.00012305600000000333}, {'diff': 0.00012323600000000573}, {'diff': 0.00012361100000000264}, {'diff': 0.0001234030000000011}, {'diff': 0.0001234310000000002...</msg>
<status status="PASS" starttime="20201030 15:57:08.379" endtime="20201030 15:57:08.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:08.397" level="INFO">${ACCURACY} = {'diff': [0.00012316700000000042, 0.00012305600000000333, 0.00012323600000000573, 0.00012361100000000264, 0.0001234030000000011, 0.00012343100000000023, 0.0001234999999999986, 0.00012294399999999983, ...</msg>
<status status="PASS" starttime="20201030 15:57:08.389" endtime="20201030 15:57:08.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.408" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:57:08.406" endtime="20201030 15:57:08.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.413" level="INFO">VALUE: [0.00012316700000000042, 0.00012305600000000333, 0.00012323600000000573, 0.00012361100000000264, 0.0001234030000000011, 0.00012343100000000023, 0.0001234999999999986, 0.00012294399999999983, 0.0001231529999999939, 0.00012338900000000153, 0.00012370899999999962, 0.00012304099999999735, 0.00012332000000000315, 0.0001229030000000006, 0.00012332000000000315, 0.000123680000000001, 0.00012297199999999897, 0.00012359700000000307, 0.00012362499999999527, 0.00012309700000000257, 0.00012319400000000008, 0.00012315300000000085, 0.00012369400000000058, 0.00012365300000000135, 0.00012320899999999912, 0.000123083000000003, 0.00012277699999999753, 0.00012311100000000214, 0.00012322199999999922, 0.00012348599999999904, 0.00012343100000000023, 0.0001227359999999983, 0.00012291700000000017, 0.000123083000000003, 0.00012309699999999563, 0.00012272199999999872, 0.0001232359999999988, 0.00012306999999999596, 0.00012313899999999434, 0.00012337499999999502, 0.0001232359999999988, 0.0001229160000000007, 0.00012347199999999947, 0.00012351400000000512, 0.00012320799999999965, 0.00012304099999999735, 0.00012359699999999613, 0.0001227080000000061, 0.0001232500000000053, 0.00012304200000000376]</msg>
<status status="PASS" starttime="20201030 15:57:08.410" endtime="20201030 15:57:08.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.399" endtime="20201030 15:57:08.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:08.426" endtime="20201030 15:57:08.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.421" endtime="20201030 15:57:08.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.419" endtime="20201030 15:57:08.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.935" endtime="20201030 15:57:08.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.934" endtime="20201030 15:57:08.450"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.473" endtime="20201030 15:57:08.494"></status>
</kw>
<msg timestamp="20201030 15:57:08.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:08.469" endtime="20201030 15:57:08.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:08.497" endtime="20201030 15:57:08.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.503" endtime="20201030 15:57:08.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.462" endtime="20201030 15:57:08.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.457" endtime="20201030 15:57:08.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.526" endtime="20201030 15:57:08.858"></status>
</kw>
<msg timestamp="20201030 15:57:08.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038918167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039042694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:08.523" endtime="20201030 15:57:08.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038918167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039042694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:08.867" endtime="20201030 15:57:08.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.885" endtime="20201030 15:57:08.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.516" endtime="20201030 15:57:08.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.511" endtime="20201030 15:57:08.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:08.902" level="INFO">${RESULT} = [{'diff': 0.00012452700000000622}, {'diff': 0.0001239580000000004}, {'diff': 0.00012433399999999678}, {'diff': 0.000124568999999998}, {'diff': 0.00012444400000000133}, {'diff': 0.000124680000000002}, ...</msg>
<status status="PASS" starttime="20201030 15:57:08.893" endtime="20201030 15:57:08.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:08.912" level="INFO">${ACCURACY} = {'diff': [0.00012452700000000622, 0.0001239580000000004, 0.00012433399999999678, 0.000124568999999998, 0.00012444400000000133, 0.000124680000000002, 0.00012433399999999678, 0.00012434699999999688, 0.0...</msg>
<status status="PASS" starttime="20201030 15:57:08.904" endtime="20201030 15:57:08.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.923" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:57:08.921" endtime="20201030 15:57:08.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.929" level="INFO">VALUE: [0.00012452700000000622, 0.0001239580000000004, 0.00012433399999999678, 0.000124568999999998, 0.00012444400000000133, 0.000124680000000002, 0.00012433399999999678, 0.00012434699999999688, 0.00012393000000000126, 0.00012384700000000332, 0.00012452799999999875, 0.00012376399999999843, 0.00012379199999999757, 0.0001237920000000045, 0.00012387500000000246, 0.00012438900000000253, 0.0001242359999999998, 0.00012447200000000047, 0.00012419400000000108, 0.00012438800000000305, 0.0001237359999999993, 0.00012387499999999552, 0.0001246109999999967, 0.00012434699999999688, 0.00012369400000000058, 0.0001239999999999991, 0.00012390200000000212, 0.0001242779999999985, 0.0001241109999999962, 0.00012461100000000364, 0.000123777999999998, 0.0001242229999999997, 0.0001241250000000027, 0.00012463899999999584, 0.00012366600000000144, 0.00012434699999999688, 0.00012393100000000074, 0.00012366700000000092, 0.00012419400000000108, 0.00012434699999999688, 0.00012413899999999534, 0.00012418100000000099, 0.00012437499999999602, 0.0001244999999999996, 0.00012379199999999757, 0.00012456999999999746, 0.00012448600000000004, 0.00012413900000000228, 0.0001244030000000021, 0.00012437499999999602]</msg>
<status status="PASS" starttime="20201030 15:57:08.926" endtime="20201030 15:57:08.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.914" endtime="20201030 15:57:08.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:08.941" endtime="20201030 15:57:08.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.937" endtime="20201030 15:57:08.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.934" endtime="20201030 15:57:08.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.453" endtime="20201030 15:57:08.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.451" endtime="20201030 15:57:08.966"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.988" endtime="20201030 15:57:09.010"></status>
</kw>
<msg timestamp="20201030 15:57:09.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:08.985" endtime="20201030 15:57:09.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:09.013" endtime="20201030 15:57:09.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.020" endtime="20201030 15:57:09.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.978" endtime="20201030 15:57:09.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.972" endtime="20201030 15:57:09.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.043" endtime="20201030 15:57:09.378"></status>
</kw>
<msg timestamp="20201030 15:57:09.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039222333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039347069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:09.040" endtime="20201030 15:57:09.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039222333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039347069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:09.388" endtime="20201030 15:57:09.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.406" endtime="20201030 15:57:09.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.033" endtime="20201030 15:57:09.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.028" endtime="20201030 15:57:09.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:09.423" level="INFO">${RESULT} = [{'diff': 0.0001247360000000003}, {'diff': 0.00012563900000000378}, {'diff': 0.00012568100000000249}, {'diff': 0.00012473699999999976}, {'diff': 0.00012540199999999668}, {'diff': 0.0001252220000000012...</msg>
<status status="PASS" starttime="20201030 15:57:09.414" endtime="20201030 15:57:09.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:09.432" level="INFO">${ACCURACY} = {'diff': [0.0001247360000000003, 0.00012563900000000378, 0.00012568100000000249, 0.00012473699999999976, 0.00012540199999999668, 0.00012522200000000122, 0.00012556999999999846, 0.00012556900000000593,...</msg>
<status status="PASS" starttime="20201030 15:57:09.425" endtime="20201030 15:57:09.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.442" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:57:09.440" endtime="20201030 15:57:09.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.447" level="INFO">VALUE: [0.0001247360000000003, 0.00012563900000000378, 0.00012568100000000249, 0.00012473699999999976, 0.00012540199999999668, 0.00012522200000000122, 0.00012556999999999846, 0.00012556900000000593, 0.0001254160000000032, 0.0001250689999999985, 0.00012498600000000054, 0.00012476399999999943, 0.00012536099999999745, 0.0001253199999999982, 0.0001256250000000042, 0.000125568999999999, 0.0001254580000000019, 0.00012512499999999677, 0.00012558400000000497, 0.00012508299999999806, 0.0001254450000000018, 0.00012544499999999487, 0.0001253879999999971, 0.00012511100000000414, 0.0001252360000000008, 0.00012547200000000147, 0.00012536100000000439, 0.00012552799999999975, 0.0001248889999999961, 0.00012529199999999907, 0.00012522200000000122, 0.0001252360000000008, 0.00012555499999999942, 0.00012543100000000224, 0.00012493000000000226, 0.00012542999999999582, 0.00012508299999999806, 0.0001250000000000001, 0.00012497199999999403, 0.00012551400000000018, 0.00012531899999999874, 0.00012505499999999892, 0.00012513899999999634, 0.0001257360000000013, 0.00012543100000000224, 0.00012554099999999985, 0.00012531899999999874, 0.00012502799999999925, 0.00012570800000000215, 0.0001252230000000007]</msg>
<status status="PASS" starttime="20201030 15:57:09.445" endtime="20201030 15:57:09.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.433" endtime="20201030 15:57:09.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:09.460" endtime="20201030 15:57:09.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.456" endtime="20201030 15:57:09.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.453" endtime="20201030 15:57:09.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.968" endtime="20201030 15:57:09.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.967" endtime="20201030 15:57:09.485"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.507" endtime="20201030 15:57:09.534"></status>
</kw>
<msg timestamp="20201030 15:57:09.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:09.504" endtime="20201030 15:57:09.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:09.537" endtime="20201030 15:57:09.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.544" endtime="20201030 15:57:09.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.497" endtime="20201030 15:57:09.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.491" endtime="20201030 15:57:09.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.567" endtime="20201030 15:57:09.898"></status>
</kw>
<msg timestamp="20201030 15:57:09.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044577722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044704264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:09.563" endtime="20201030 15:57:09.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044577722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044704264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:09.907" endtime="20201030 15:57:09.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.927" endtime="20201030 15:57:09.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.556" endtime="20201030 15:57:09.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.552" endtime="20201030 15:57:09.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:09.944" level="INFO">${RESULT} = [{'diff': 0.00012654200000000032}, {'diff': 0.00012666600000000444}, {'diff': 0.0001257360000000013}, {'diff': 0.00012645799999999596}, {'diff': 0.0001257639999999935}, {'diff': 0.00012643000000000376...</msg>
<status status="PASS" starttime="20201030 15:57:09.936" endtime="20201030 15:57:09.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:09.953" level="INFO">${ACCURACY} = {'diff': [0.00012654200000000032, 0.00012666600000000444, 0.0001257360000000013, 0.00012645799999999596, 0.0001257639999999935, 0.00012643000000000376, 0.00012590299999999666, 0.00012623599999999485, ...</msg>
<status status="PASS" starttime="20201030 15:57:09.946" endtime="20201030 15:57:09.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.964" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:57:09.962" endtime="20201030 15:57:09.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.969" level="INFO">VALUE: [0.00012654200000000032, 0.00012666600000000444, 0.0001257360000000013, 0.00012645799999999596, 0.0001257639999999935, 0.00012643000000000376, 0.00012590299999999666, 0.00012623599999999485, 0.00012604100000000035, 0.00012566699999999598, 0.00012634699999999888, 0.00012602700000000078, 0.00012652800000000075, 0.00012627700000000103, 0.00012641599999999725, 0.00012652800000000075, 0.00012663899999999784, 0.00012619499999999562, 0.0001264859999999951, 0.00012587499999999752, 0.00012663899999999784, 0.00012572200000000172, 0.00012581899999999924, 0.00012668099999999655, 0.00012587500000000446, 0.00012594400000000283, 0.00012640200000000462, 0.0001264580000000029, 0.00012641700000000367, 0.00012637499999999802, 0.00012586099999999795, 0.00012602800000000025, 0.00012602800000000025, 0.00012604199999999982, 0.00012612499999999777, 0.00012622199999999528, 0.00012580599999999914, 0.00012618100000000299, 0.0001262780000000005, 0.00012618099999999605, 0.00012643100000000324, 0.0001260559999999994, 0.00012611100000000514, 0.00012644400000000333, 0.00012608299999999906, 0.0001263480000000053, 0.00012606999999999896, 0.000126680000000004, 0.00012623699999999433, 0.00012641700000000367]</msg>
<status status="PASS" starttime="20201030 15:57:09.966" endtime="20201030 15:57:09.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.955" endtime="20201030 15:57:09.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:09.983" endtime="20201030 15:57:10.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.977" endtime="20201030 15:57:10.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.975" endtime="20201030 15:57:10.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.487" endtime="20201030 15:57:10.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.486" endtime="20201030 15:57:10.008"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.031" endtime="20201030 15:57:10.053"></status>
</kw>
<msg timestamp="20201030 15:57:10.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:10.027" endtime="20201030 15:57:10.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:10.056" endtime="20201030 15:57:10.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.063" endtime="20201030 15:57:10.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.020" endtime="20201030 15:57:10.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.014" endtime="20201030 15:57:10.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.086" endtime="20201030 15:57:10.417"></status>
</kw>
<msg timestamp="20201030 15:57:10.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039870611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039998375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:10.082" endtime="20201030 15:57:10.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039870611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039998375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:10.426" endtime="20201030 15:57:10.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.444" endtime="20201030 15:57:10.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.075" endtime="20201030 15:57:10.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.071" endtime="20201030 15:57:10.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:10.461" level="INFO">${RESULT} = [{'diff': 0.00012776400000000243}, {'diff': 0.00012687499999999852}, {'diff': 0.00012719400000000408}, {'diff': 0.00012754200000000132}, {'diff': 0.00012736099999999945}, {'diff': 0.000127431000000004...</msg>
<status status="PASS" starttime="20201030 15:57:10.453" endtime="20201030 15:57:10.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:10.472" level="INFO">${ACCURACY} = {'diff': [0.00012776400000000243, 0.00012687499999999852, 0.00012719400000000408, 0.00012754200000000132, 0.00012736099999999945, 0.00012743100000000424, 0.00012772199999999678, 0.00012733399999999978...</msg>
<status status="PASS" starttime="20201030 15:57:10.463" endtime="20201030 15:57:10.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.482" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:57:10.480" endtime="20201030 15:57:10.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.488" level="INFO">VALUE: [0.00012776400000000243, 0.00012687499999999852, 0.00012719400000000408, 0.00012754200000000132, 0.00012736099999999945, 0.00012743100000000424, 0.00012772199999999678, 0.00012733399999999978, 0.00012684699999999938, 0.0001272780000000015, 0.00012698700000000201, 0.00012722199999999628, 0.00012717999999999757, 0.00012748600000000304, 0.0001272360000000028, 0.00012768100000000449, 0.0001273330000000003, 0.000127569000000001, 0.00012713899999999834, 0.00012748600000000304, 0.00012737500000000596, 0.0001274580000000039, 0.00012687500000000546, 0.00012702800000000125, 0.00012741699999999773, 0.00012687499999999852, 0.00012722199999999628, 0.00012748600000000304, 0.00012680500000000067, 0.0001274450000000038, 0.00012701400000000168, 0.00012769399999999764, 0.00012754199999999438, 0.00012713899999999834, 0.00012684699999999938, 0.00012681900000000024, 0.00012712499999999877, 0.00012737499999999902, 0.00012719399999999714, 0.0001268329999999998, 0.00012716700000000442, 0.0001275130000000027, 0.00012768099999999755, 0.00012726400000000193, 0.0001276529999999984, 0.00012686099999999895, 0.0001269439999999969, 0.0001268329999999998, 0.0001275000000000026, 0.0001273889999999986]</msg>
<status status="PASS" starttime="20201030 15:57:10.485" endtime="20201030 15:57:10.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.473" endtime="20201030 15:57:10.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:10.500" endtime="20201030 15:57:10.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.496" endtime="20201030 15:57:10.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.493" endtime="20201030 15:57:10.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.010" endtime="20201030 15:57:10.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.009" endtime="20201030 15:57:10.525"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.547" endtime="20201030 15:57:10.569"></status>
</kw>
<msg timestamp="20201030 15:57:10.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:10.544" endtime="20201030 15:57:10.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:10.572" endtime="20201030 15:57:10.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.578" endtime="20201030 15:57:10.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.537" endtime="20201030 15:57:10.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.531" endtime="20201030 15:57:10.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.601" endtime="20201030 15:57:10.933"></status>
</kw>
<msg timestamp="20201030 15:57:10.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039006417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039134333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:10.598" endtime="20201030 15:57:10.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039006417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039134333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:10.942" endtime="20201030 15:57:10.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.960" endtime="20201030 15:57:10.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.591" endtime="20201030 15:57:10.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.586" endtime="20201030 15:57:10.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:10.977" level="INFO">${RESULT} = [{'diff': 0.00012791599999999875}, {'diff': 0.00012845799999999796}, {'diff': 0.00012802700000000278}, {'diff': 0.0001277910000000021}, {'diff': 0.0001279859999999966}, {'diff': 0.00012787499999999952...</msg>
<status status="PASS" starttime="20201030 15:57:10.969" endtime="20201030 15:57:10.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:10.988" level="INFO">${ACCURACY} = {'diff': [0.00012791599999999875, 0.00012845799999999796, 0.00012802700000000278, 0.0001277910000000021, 0.0001279859999999966, 0.00012787499999999952, 0.00012834699999999394, 0.00012863899999999984, ...</msg>
<status status="PASS" starttime="20201030 15:57:10.979" endtime="20201030 15:57:10.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.999" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:57:10.997" endtime="20201030 15:57:11.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.004" level="INFO">VALUE: [0.00012791599999999875, 0.00012845799999999796, 0.00012802700000000278, 0.0001277910000000021, 0.0001279859999999966, 0.00012787499999999952, 0.00012834699999999394, 0.00012863899999999984, 0.00012842999999999882, 0.0001283889999999996, 0.00012802800000000225, 0.00012858400000000103, 0.00012792999999999832, 0.00012808400000000053, 0.00012858300000000156, 0.0001283330000000013, 0.00012804199999999488, 0.0001285839999999941, 0.0001282780000000025, 0.0001285000000000036, 0.00012774999999999592, 0.00012774999999999592, 0.00012822199999999728, 0.00012787499999999952, 0.0001277910000000021, 0.00012792999999999832, 0.0001283330000000013, 0.00012769500000000406, 0.00012779199999999463, 0.00012862500000000027, 0.0001281110000000002, 0.00012855499999999548, 0.00012799999999999617, 0.0001278330000000008, 0.0001280560000000014, 0.00012813799999999986, 0.00012809700000000063, 0.00012851400000000318, 0.00012776400000000243, 0.0001285560000000019, 0.00012837500000000002, 0.0001280000000000031, 0.00012797200000000397, 0.00012801399999999574, 0.00012867999999999907, 0.0001284580000000049, 0.00012830500000000217, 0.00012801399999999574, 0.00012776400000000243, 0.00012863800000000036]</msg>
<status status="PASS" starttime="20201030 15:57:11.001" endtime="20201030 15:57:11.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.990" endtime="20201030 15:57:11.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:11.074" endtime="20201030 15:57:11.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.070" endtime="20201030 15:57:11.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.067" endtime="20201030 15:57:11.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.527" endtime="20201030 15:57:11.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.526" endtime="20201030 15:57:11.100"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.122" endtime="20201030 15:57:11.144"></status>
</kw>
<msg timestamp="20201030 15:57:11.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:11.119" endtime="20201030 15:57:11.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:11.147" endtime="20201030 15:57:11.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.153" endtime="20201030 15:57:11.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.112" endtime="20201030 15:57:11.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.106" endtime="20201030 15:57:11.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.176" endtime="20201030 15:57:11.510"></status>
</kw>
<msg timestamp="20201030 15:57:11.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039525167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039654306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:11.173" endtime="20201030 15:57:11.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039525167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039654306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:11.520" endtime="20201030 15:57:11.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.538" endtime="20201030 15:57:11.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.166" endtime="20201030 15:57:11.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.161" endtime="20201030 15:57:11.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:11.555" level="INFO">${RESULT} = [{'diff': 0.00012913900000000034}, {'diff': 0.00012915200000000043}, {'diff': 0.00012916700000000642}, {'diff': 0.0001290969999999947}, {'diff': 0.0001294859999999981}, {'diff': 0.00012891699999999923...</msg>
<status status="PASS" starttime="20201030 15:57:11.546" endtime="20201030 15:57:11.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:11.564" level="INFO">${ACCURACY} = {'diff': [0.00012913900000000034, 0.00012915200000000043, 0.00012916700000000642, 0.0001290969999999947, 0.0001294859999999981, 0.00012891699999999923, 0.00012951400000000418, 0.0001287230000000042, 0...</msg>
<status status="PASS" starttime="20201030 15:57:11.557" endtime="20201030 15:57:11.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.574" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:57:11.572" endtime="20201030 15:57:11.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.580" level="INFO">VALUE: [0.00012913900000000034, 0.00012915200000000043, 0.00012916700000000642, 0.0001290969999999947, 0.0001294859999999981, 0.00012891699999999923, 0.00012951400000000418, 0.0001287230000000042, 0.0001291110000000012, 0.00012958299999999562, 0.0001293200000000022, 0.00012972199999999878, 0.00012880500000000267, 0.00012955599999999595, 0.00012941699999999973, 0.00012933400000000178, 0.00012954200000000332, 0.00012944499999999887, 0.00012891599999999975, 0.00012895799999999846, 0.00012930600000000264, 0.00012883299999999487, 0.00012955500000000342, 0.00012922200000000522, 0.0001295279999999968, 0.0001288330000000018, 0.00012924999999999742, 0.00012899999999999717, 0.0001291110000000012, 0.00012951400000000418, 0.00012895799999999846, 0.00012936100000000145, 0.00012901400000000368, 0.00012934699999999494, 0.00012919499999999862, 0.00012933400000000178, 0.00012930600000000264, 0.000129263999999997, 0.0001293890000000006, 0.00012958300000000256, 0.00012904200000000282, 0.0001296110000000017, 0.00012934700000000188, 0.00012942999999999982, 0.00012873599999999735, 0.00012969399999999964, 0.0001294859999999981, 0.00012919399999999914, 0.00012959700000000213, 0.00012909700000000163]</msg>
<status status="PASS" starttime="20201030 15:57:11.577" endtime="20201030 15:57:11.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.565" endtime="20201030 15:57:11.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:11.592" endtime="20201030 15:57:11.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.588" endtime="20201030 15:57:11.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.585" endtime="20201030 15:57:11.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.102" endtime="20201030 15:57:11.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.101" endtime="20201030 15:57:11.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.082" endtime="20201030 15:57:11.617"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:17.959" endtime="20201030 15:57:11.619" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:11.635" endtime="20201030 15:57:11.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.632" endtime="20201030 15:57:11.659"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.693" endtime="20201030 15:57:11.708"></status>
</kw>
<msg timestamp="20201030 15:57:11.709" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:11.689" endtime="20201030 15:57:11.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.715" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:11.711" endtime="20201030 15:57:11.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.722" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:57:11.718" endtime="20201030 15:57:11.722"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:11.682" endtime="20201030 15:57:11.724"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:11.676" endtime="20201030 15:57:11.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.673" endtime="20201030 15:57:11.727"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:57:11.734" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:57:11.733" endtime="20201030 15:57:11.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.728" endtime="20201030 15:57:11.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.670" endtime="20201030 15:57:11.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.668" endtime="20201030 15:57:11.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.738" endtime="20201030 15:57:11.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.664" endtime="20201030 15:57:11.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.660" endtime="20201030 15:57:11.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.629" endtime="20201030 15:57:11.745"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.769" endtime="20201030 15:57:11.786"></status>
</kw>
<msg timestamp="20201030 15:57:11.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:11.765" endtime="20201030 15:57:11.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:11.790" endtime="20201030 15:57:11.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.796" endtime="20201030 15:57:11.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.758" endtime="20201030 15:57:11.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.753" endtime="20201030 15:57:11.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.820" endtime="20201030 15:57:12.164"></status>
</kw>
<msg timestamp="20201030 15:57:12.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125327486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125402639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:11.816" endtime="20201030 15:57:12.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125327486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125402639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:12.174" endtime="20201030 15:57:12.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.193" endtime="20201030 15:57:12.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.809" endtime="20201030 15:57:12.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.805" endtime="20201030 15:57:12.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:12.210" level="INFO">${RESULT} = [{'diff': 7.515300000002223e-05}, {'diff': 7.582000000000422e-05}, {'diff': 7.494500000002069e-05}, {'diff': 7.515299999999447e-05}, {'diff': 7.547200000002086e-05}, {'diff': 7.515299999999447e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:12.201" endtime="20201030 15:57:12.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:12.219" level="INFO">${ACCURACY} = {'diff': [7.515300000002223e-05, 7.582000000000422e-05, 7.494500000002069e-05, 7.515299999999447e-05, 7.547200000002086e-05, 7.515299999999447e-05, 7.577800000002632e-05, 7.529200000000458e-05, 7.5846...</msg>
<status status="PASS" starttime="20201030 15:57:12.212" endtime="20201030 15:57:12.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.230" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:57:12.227" endtime="20201030 15:57:12.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.235" level="INFO">VALUE: [7.515300000002223e-05, 7.582000000000422e-05, 7.494500000002069e-05, 7.515299999999447e-05, 7.547200000002086e-05, 7.515299999999447e-05, 7.577800000002632e-05, 7.529200000000458e-05, 7.584699999999e-05, 7.563900000001622e-05, 7.577800000002632e-05, 7.548600000001349e-05, 7.582000000000422e-05, 7.498599999999911e-05, 7.49729999999782e-05, 7.513900000000184e-05, 7.53879999999818e-05, 7.588899999999565e-05, 7.580499999998436e-05, 7.543000000001521e-05, 7.502700000000528e-05, 7.494399999999346e-05, 7.515300000002223e-05, 7.545800000000047e-05, 7.495899999998556e-05, 7.53200000000176e-05, 7.581900000000474e-05, 7.583299999999737e-05, 7.550000000000612e-05, 7.563799999998899e-05, 7.580600000001159e-05, 7.548600000001349e-05, 7.531899999999037e-05, 7.54719999999931e-05, 7.515299999999447e-05, 7.579100000001948e-05, 7.526400000001932e-05, 7.550000000000612e-05, 7.512500000000921e-05, 7.495800000001385e-05, 7.50000000000195e-05, 7.579200000001896e-05, 7.530499999999773e-05, 7.513900000000184e-05, 7.502800000000476e-05, 7.565300000000885e-05, 7.53200000000176e-05, 7.54719999999931e-05, 7.494399999999346e-05, 7.497300000000595e-05]</msg>
<status status="PASS" starttime="20201030 15:57:12.232" endtime="20201030 15:57:12.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.221" endtime="20201030 15:57:12.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:12.247" endtime="20201030 15:57:12.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.242" endtime="20201030 15:57:12.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.240" endtime="20201030 15:57:12.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.749" endtime="20201030 15:57:12.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.747" endtime="20201030 15:57:12.272"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.294" endtime="20201030 15:57:12.314"></status>
</kw>
<msg timestamp="20201030 15:57:12.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:12.291" endtime="20201030 15:57:12.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:12.317" endtime="20201030 15:57:12.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.323" endtime="20201030 15:57:12.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.284" endtime="20201030 15:57:12.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.278" endtime="20201030 15:57:12.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.346" endtime="20201030 15:57:12.678"></status>
</kw>
<msg timestamp="20201030 15:57:12.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041243903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041319583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:12.343" endtime="20201030 15:57:12.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041243903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041319583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:12.687" endtime="20201030 15:57:12.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.705" endtime="20201030 15:57:12.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.336" endtime="20201030 15:57:12.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.331" endtime="20201030 15:57:12.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:12.723" level="INFO">${RESULT} = [{'diff': 7.568000000000158e-05}, {'diff': 7.515300000000141e-05}, {'diff': 7.495899999999944e-05}, {'diff': 7.529199999999764e-05}, {'diff': 7.530500000000467e-05}, {'diff': 7.551299999999928e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:12.714" endtime="20201030 15:57:12.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:12.732" level="INFO">${ACCURACY} = {'diff': [7.568000000000158e-05, 7.515300000000141e-05, 7.495899999999944e-05, 7.529199999999764e-05, 7.530500000000467e-05, 7.551299999999928e-05, 7.52910000000051e-05, 7.547200000000004e-05, 7.51669...</msg>
<status status="PASS" starttime="20201030 15:57:12.725" endtime="20201030 15:57:12.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.743" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:57:12.740" endtime="20201030 15:57:12.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.748" level="INFO">VALUE: [7.568000000000158e-05, 7.515300000000141e-05, 7.495899999999944e-05, 7.529199999999764e-05, 7.530500000000467e-05, 7.551299999999928e-05, 7.52910000000051e-05, 7.547200000000004e-05, 7.516699999999404e-05, 7.52910000000051e-05, 7.530500000000467e-05, 7.552799999999832e-05, 7.53189999999973e-05, 7.547200000000004e-05, 7.497199999999954e-05, 7.512500000000227e-05, 7.477799999999757e-05, 7.497199999999954e-05, 7.530599999999721e-05, 7.497299999999901e-05, 7.512499999999533e-05, 7.512500000000227e-05, 7.548699999999908e-05, 7.562499999999583e-05, 7.579099999999866e-05, 7.580599999999771e-05, 7.545899999999994e-05, 7.562499999999583e-05, 7.54440000000009e-05, 7.561200000000268e-05, 7.543000000000133e-05, 7.50969999999962e-05, 7.512500000000227e-05, 7.516700000000098e-05, 7.561099999999626e-05, 7.562500000000277e-05, 7.530599999999721e-05, 7.547200000000004e-05, 7.494499999999987e-05, 7.545899999999994e-05, 7.531999999999678e-05, 7.504100000000485e-05, 7.52639999999985e-05, 7.563900000000234e-05, 7.548599999999961e-05, 7.57910000000056e-05, 7.495899999999944e-05, 7.580600000000465e-05, 7.48189999999968e-05, 7.541700000000123e-05]</msg>
<status status="PASS" starttime="20201030 15:57:12.745" endtime="20201030 15:57:12.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.734" endtime="20201030 15:57:12.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:12.761" endtime="20201030 15:57:12.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.755" endtime="20201030 15:57:12.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.753" endtime="20201030 15:57:12.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.274" endtime="20201030 15:57:12.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.272" endtime="20201030 15:57:12.786"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.809" endtime="20201030 15:57:12.827"></status>
</kw>
<msg timestamp="20201030 15:57:12.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:12.806" endtime="20201030 15:57:12.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:12.830" endtime="20201030 15:57:12.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.837" endtime="20201030 15:57:12.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.799" endtime="20201030 15:57:12.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.793" endtime="20201030 15:57:12.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.860" endtime="20201030 15:57:13.194"></status>
</kw>
<msg timestamp="20201030 15:57:13.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039836403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039911861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:12.856" endtime="20201030 15:57:13.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039836403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039911861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:13.203" endtime="20201030 15:57:13.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.222" endtime="20201030 15:57:13.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.849" endtime="20201030 15:57:13.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.845" endtime="20201030 15:57:13.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:13.239" level="INFO">${RESULT} = [{'diff': 7.545800000000047e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.508300000000356e-05}, {'diff': 7.516700000000098e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:57:13.230" endtime="20201030 15:57:13.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:13.250" level="INFO">${ACCURACY} = {'diff': [7.545800000000047e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.508300000000356e-05, 7.516700000000098e-05, 7.513900000000184e-05, 7.482000000000322e-05, 7.545800...</msg>
<status status="PASS" starttime="20201030 15:57:13.241" endtime="20201030 15:57:13.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.260" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:57:13.258" endtime="20201030 15:57:13.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.266" level="INFO">VALUE: [7.545800000000047e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.508300000000356e-05, 7.516700000000098e-05, 7.513900000000184e-05, 7.482000000000322e-05, 7.545800000000047e-05, 7.516700000000098e-05, 7.563900000000234e-05, 7.509700000000313e-05, 7.512500000000227e-05, 7.563900000000234e-05, 7.506899999999705e-05, 7.543000000000133e-05, 7.547299999999951e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.529099999999816e-05, 7.50969999999962e-05, 7.581999999999728e-05, 7.475000000000537e-05, 7.530599999999721e-05, 7.50969999999962e-05, 7.495799999999997e-05, 7.495899999999944e-05, 7.5763999999999e-05, 7.547200000000004e-05, 7.47769999999981e-05, 7.562500000000277e-05, 7.481999999999628e-05, 7.530599999999721e-05, 7.51389999999949e-05, 7.495799999999997e-05, 7.56389999999954e-05, 7.512500000000227e-05, 7.548699999999908e-05, 7.527799999999807e-05, 7.495799999999997e-05, 7.56110000000032e-05, 7.506999999999653e-05, 7.512500000000227e-05, 7.562499999999583e-05, 7.51389999999949e-05, 7.474999999999843e-05, 7.513900000000184e-05, 7.495799999999997e-05, 7.562500000000277e-05, 7.527800000000501e-05]</msg>
<status status="PASS" starttime="20201030 15:57:13.263" endtime="20201030 15:57:13.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.251" endtime="20201030 15:57:13.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:13.277" endtime="20201030 15:57:13.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.273" endtime="20201030 15:57:13.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.271" endtime="20201030 15:57:13.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.788" endtime="20201030 15:57:13.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.787" endtime="20201030 15:57:13.303"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.325" endtime="20201030 15:57:13.343"></status>
</kw>
<msg timestamp="20201030 15:57:13.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:13.322" endtime="20201030 15:57:13.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:13.346" endtime="20201030 15:57:13.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.352" endtime="20201030 15:57:13.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.315" endtime="20201030 15:57:13.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.309" endtime="20201030 15:57:13.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.375" endtime="20201030 15:57:13.706"></status>
</kw>
<msg timestamp="20201030 15:57:13.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039900653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039975944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:13.372" endtime="20201030 15:57:13.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039900653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039975944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:13.715" endtime="20201030 15:57:13.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.734" endtime="20201030 15:57:13.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.365" endtime="20201030 15:57:13.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.360" endtime="20201030 15:57:13.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:13.751" level="INFO">${RESULT} = [{'diff': 7.529099999999816e-05}, {'diff': 7.557000000000397e-05}, {'diff': 7.583299999999737e-05}, {'diff': 7.530599999999721e-05}, {'diff': 7.549999999999918e-05}, {'diff': 7.530500000000467e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:13.742" endtime="20201030 15:57:13.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:13.762" level="INFO">${ACCURACY} = {'diff': [7.529099999999816e-05, 7.557000000000397e-05, 7.583299999999737e-05, 7.530599999999721e-05, 7.549999999999918e-05, 7.530500000000467e-05, 7.499999999999868e-05, 7.58189999999978e-05, 7.53189...</msg>
<status status="PASS" starttime="20201030 15:57:13.753" endtime="20201030 15:57:13.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.772" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:57:13.770" endtime="20201030 15:57:13.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.778" level="INFO">VALUE: [7.529099999999816e-05, 7.557000000000397e-05, 7.583299999999737e-05, 7.530599999999721e-05, 7.549999999999918e-05, 7.530500000000467e-05, 7.499999999999868e-05, 7.58189999999978e-05, 7.53189999999973e-05, 7.545799999999353e-05, 7.529099999999816e-05, 7.566699999999454e-05, 7.565299999999497e-05, 7.494499999999987e-05, 7.480500000000417e-05, 7.56389999999954e-05, 7.58189999999978e-05, 7.530599999999721e-05, 7.545800000000047e-05, 7.490300000000116e-05, 7.547200000000004e-05, 7.497199999999954e-05, 7.499999999999868e-05, 7.531999999999678e-05, 7.530599999999721e-05, 7.497199999999954e-05, 7.497199999999954e-05, 7.540200000000219e-05, 7.495799999999997e-05, 7.497199999999954e-05, 7.480600000000365e-05, 7.529199999999764e-05, 7.541600000000176e-05, 7.563900000000234e-05, 7.515300000000141e-05, 7.512499999999533e-05, 7.498599999999911e-05, 7.495799999999997e-05, 7.547200000000004e-05, 7.495799999999997e-05, 7.541700000000123e-05, 7.495899999999944e-05, 7.56389999999954e-05, 7.548599999999961e-05, 7.48189999999968e-05, 7.512500000000227e-05, 7.508300000000356e-05, 7.533399999999635e-05, 7.480599999999671e-05, 7.526400000000544e-05]</msg>
<status status="PASS" starttime="20201030 15:57:13.775" endtime="20201030 15:57:13.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.763" endtime="20201030 15:57:13.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:13.790" endtime="20201030 15:57:13.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.786" endtime="20201030 15:57:13.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.783" endtime="20201030 15:57:13.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.305" endtime="20201030 15:57:13.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.304" endtime="20201030 15:57:13.815"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.838" endtime="20201030 15:57:13.855"></status>
</kw>
<msg timestamp="20201030 15:57:13.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:13.834" endtime="20201030 15:57:13.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:13.859" endtime="20201030 15:57:13.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.865" endtime="20201030 15:57:13.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.827" endtime="20201030 15:57:13.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.821" endtime="20201030 15:57:13.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.888" endtime="20201030 15:57:14.223"></status>
</kw>
<msg timestamp="20201030 15:57:14.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039521986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039596958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:13.885" endtime="20201030 15:57:14.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039521986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039596958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:14.233" endtime="20201030 15:57:14.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.252" endtime="20201030 15:57:14.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.878" endtime="20201030 15:57:14.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.873" endtime="20201030 15:57:14.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:14.269" level="INFO">${RESULT} = [{'diff': 7.497199999999954e-05}, {'diff': 7.530600000000415e-05}, {'diff': 7.562500000000277e-05}, {'diff': 7.565200000000244e-05}, {'diff': 7.531900000000424e-05}, {'diff': 7.562500000000277e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:14.260" endtime="20201030 15:57:14.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:14.278" level="INFO">${ACCURACY} = {'diff': [7.497199999999954e-05, 7.530600000000415e-05, 7.562500000000277e-05, 7.565200000000244e-05, 7.531900000000424e-05, 7.562500000000277e-05, 7.56389999999954e-05, 7.512500000000227e-05, 7.52779...</msg>
<status status="PASS" starttime="20201030 15:57:14.271" endtime="20201030 15:57:14.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.289" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:57:14.287" endtime="20201030 15:57:14.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.294" level="INFO">VALUE: [7.497199999999954e-05, 7.530600000000415e-05, 7.562500000000277e-05, 7.565200000000244e-05, 7.531900000000424e-05, 7.562500000000277e-05, 7.56389999999954e-05, 7.512500000000227e-05, 7.527799999999807e-05, 7.53189999999973e-05, 7.498599999999911e-05, 7.515300000000141e-05, 7.549999999999918e-05, 7.529099999999816e-05, 7.495799999999997e-05, 7.551299999999928e-05, 7.497299999999901e-05, 7.548599999999961e-05, 7.491700000000073e-05, 7.477799999999757e-05, 7.549999999999918e-05, 7.480599999999671e-05, 7.581999999999728e-05, 7.516700000000098e-05, 7.545800000000047e-05, 7.515299999999447e-05, 7.480599999999671e-05, 7.49310000000003e-05, 7.512500000000227e-05, 7.498599999999911e-05, 7.572200000000029e-05, 7.529099999999816e-05, 7.548600000000655e-05, 7.497299999999901e-05, 7.537500000000252e-05, 7.548600000000655e-05, 7.479099999999766e-05, 7.497199999999954e-05, 7.563799999999593e-05, 7.530600000000415e-05, 7.499999999999868e-05, 7.57769999999991e-05, 7.547200000000004e-05, 7.495899999999944e-05, 7.529200000000458e-05, 7.547200000000004e-05, 7.518100000000055e-05, 7.513900000000184e-05, 7.569500000000062e-05, 7.581900000000474e-05]</msg>
<status status="PASS" starttime="20201030 15:57:14.291" endtime="20201030 15:57:14.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.280" endtime="20201030 15:57:14.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:14.306" endtime="20201030 15:57:14.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.302" endtime="20201030 15:57:14.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.300" endtime="20201030 15:57:14.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.817" endtime="20201030 15:57:14.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.816" endtime="20201030 15:57:14.331"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.354" endtime="20201030 15:57:14.377"></status>
</kw>
<msg timestamp="20201030 15:57:14.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:14.350" endtime="20201030 15:57:14.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:14.380" endtime="20201030 15:57:14.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.387" endtime="20201030 15:57:14.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.343" endtime="20201030 15:57:14.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.338" endtime="20201030 15:57:14.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.409" endtime="20201030 15:57:14.739"></status>
</kw>
<msg timestamp="20201030 15:57:14.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044608556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044683542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:14.406" endtime="20201030 15:57:14.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044608556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044683542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:14.748" endtime="20201030 15:57:14.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.766" endtime="20201030 15:57:14.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.399" endtime="20201030 15:57:14.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.395" endtime="20201030 15:57:14.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:14.783" level="INFO">${RESULT} = [{'diff': 7.498599999999911e-05}, {'diff': 7.56110000000032e-05}, {'diff': 7.495799999999997e-05}, {'diff': 7.530499999999773e-05}, {'diff': 7.552699999999885e-05}, {'diff': 7.583299999999737e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:14.775" endtime="20201030 15:57:14.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:14.793" level="INFO">${ACCURACY} = {'diff': [7.498599999999911e-05, 7.56110000000032e-05, 7.495799999999997e-05, 7.530499999999773e-05, 7.552699999999885e-05, 7.583299999999737e-05, 7.512500000000227e-05, 7.529199999999764e-05, 7.51389...</msg>
<status status="PASS" starttime="20201030 15:57:14.785" endtime="20201030 15:57:14.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.803" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:57:14.801" endtime="20201030 15:57:14.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.809" level="INFO">VALUE: [7.498599999999911e-05, 7.56110000000032e-05, 7.495799999999997e-05, 7.530499999999773e-05, 7.552699999999885e-05, 7.583299999999737e-05, 7.512500000000227e-05, 7.529199999999764e-05, 7.51389999999949e-05, 7.495799999999997e-05, 7.487500000000202e-05, 7.493000000000083e-05, 7.495799999999997e-05, 7.527799999999807e-05, 7.477800000000451e-05, 7.477800000000451e-05, 7.49310000000003e-05, 7.545899999999994e-05, 7.538899999999515e-05, 7.512500000000227e-05, 7.513900000000184e-05, 7.527799999999807e-05, 7.509799999999567e-05, 7.491700000000073e-05, 7.563900000000234e-05, 7.580499999999823e-05, 7.497199999999954e-05, 7.573699999999933e-05, 7.53890000000021e-05, 7.512500000000227e-05, 7.562500000000277e-05, 7.512499999999533e-05, 7.566700000000148e-05, 7.562500000000277e-05, 7.56389999999954e-05, 7.508299999999662e-05, 7.579200000000508e-05, 7.495899999999944e-05, 7.494399999999346e-05, 7.569500000000062e-05, 7.562499999999583e-05, 7.544500000000037e-05, 7.480599999999671e-05, 7.52769999999986e-05, 7.556999999999703e-05, 7.49440000000004e-05, 7.508299999999662e-05, 7.479199999999714e-05, 7.51110000000027e-05, 7.49310000000003e-05]</msg>
<status status="PASS" starttime="20201030 15:57:14.806" endtime="20201030 15:57:14.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.794" endtime="20201030 15:57:14.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:14.822" endtime="20201030 15:57:14.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.817" endtime="20201030 15:57:14.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.814" endtime="20201030 15:57:14.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.333" endtime="20201030 15:57:14.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.332" endtime="20201030 15:57:14.847"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.870" endtime="20201030 15:57:14.887"></status>
</kw>
<msg timestamp="20201030 15:57:14.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:14.866" endtime="20201030 15:57:14.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:14.891" endtime="20201030 15:57:14.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.897" endtime="20201030 15:57:14.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.859" endtime="20201030 15:57:14.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.854" endtime="20201030 15:57:14.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.920" endtime="20201030 15:57:15.251"></status>
</kw>
<msg timestamp="20201030 15:57:15.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039077583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039153056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:14.916" endtime="20201030 15:57:15.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039077583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039153056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:15.260" endtime="20201030 15:57:15.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.279" endtime="20201030 15:57:15.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.910" endtime="20201030 15:57:15.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.905" endtime="20201030 15:57:15.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:15.296" level="INFO">${RESULT} = [{'diff': 7.547299999999951e-05}, {'diff': 7.547200000000004e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.49440000000004e-05}, {'diff': 7.568100000000105e-05}, {'diff': 7.561099999999626e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:15.287" endtime="20201030 15:57:15.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:15.306" level="INFO">${ACCURACY} = {'diff': [7.547299999999951e-05, 7.547200000000004e-05, 7.499999999999868e-05, 7.49440000000004e-05, 7.568100000000105e-05, 7.561099999999626e-05, 7.519400000000065e-05, 7.515299999999447e-05, 7.56530...</msg>
<status status="PASS" starttime="20201030 15:57:15.298" endtime="20201030 15:57:15.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.317" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:57:15.315" endtime="20201030 15:57:15.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.322" level="INFO">VALUE: [7.547299999999951e-05, 7.547200000000004e-05, 7.499999999999868e-05, 7.49440000000004e-05, 7.568100000000105e-05, 7.561099999999626e-05, 7.519400000000065e-05, 7.515299999999447e-05, 7.565300000000191e-05, 7.53189999999973e-05, 7.519500000000012e-05, 7.513900000000184e-05, 7.49440000000004e-05, 7.51110000000027e-05, 7.495799999999997e-05, 7.490200000000169e-05, 7.513900000000184e-05, 7.545899999999994e-05, 7.497200000000648e-05, 7.565300000000191e-05, 7.480600000000365e-05, 7.533299999999687e-05, 7.565299999999497e-05, 7.532000000000372e-05, 7.538899999999515e-05, 7.479200000000408e-05, 7.502799999999782e-05, 7.480600000000365e-05, 7.50969999999962e-05, 7.582000000000422e-05, 7.497199999999954e-05, 7.530499999999773e-05, 7.48189999999968e-05, 7.532000000000372e-05, 7.56389999999954e-05, 7.58189999999978e-05, 7.588899999999565e-05, 7.565300000000191e-05, 7.512500000000227e-05, 7.579199999999814e-05, 7.530499999999773e-05, 7.583300000000431e-05, 7.563900000000234e-05, 7.545899999999994e-05, 7.563900000000234e-05, 7.530499999999773e-05, 7.49440000000004e-05, 7.532000000000372e-05, 7.551399999999875e-05, 7.532000000000372e-05]</msg>
<status status="PASS" starttime="20201030 15:57:15.319" endtime="20201030 15:57:15.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.308" endtime="20201030 15:57:15.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:15.335" endtime="20201030 15:57:15.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.330" endtime="20201030 15:57:15.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.328" endtime="20201030 15:57:15.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.849" endtime="20201030 15:57:15.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.848" endtime="20201030 15:57:15.360"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.382" endtime="20201030 15:57:15.399"></status>
</kw>
<msg timestamp="20201030 15:57:15.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:15.379" endtime="20201030 15:57:15.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:15.403" endtime="20201030 15:57:15.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.409" endtime="20201030 15:57:15.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.371" endtime="20201030 15:57:15.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.366" endtime="20201030 15:57:15.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.432" endtime="20201030 15:57:15.787"></status>
</kw>
<msg timestamp="20201030 15:57:15.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038868236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038943639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:15.428" endtime="20201030 15:57:15.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038868236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038943639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:15.798" endtime="20201030 15:57:15.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.818" endtime="20201030 15:57:15.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.421" endtime="20201030 15:57:15.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.417" endtime="20201030 15:57:15.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:15.836" level="INFO">${RESULT} = [{'diff': 7.540300000000166e-05}, {'diff': 7.501399999999825e-05}, {'diff': 7.512500000000227e-05}, {'diff': 7.479200000000408e-05}, {'diff': 7.577799999999857e-05}, {'diff': 7.497299999999901e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:15.827" endtime="20201030 15:57:15.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:15.847" level="INFO">${ACCURACY} = {'diff': [7.540300000000166e-05, 7.501399999999825e-05, 7.512500000000227e-05, 7.479200000000408e-05, 7.577799999999857e-05, 7.497299999999901e-05, 7.562499999999583e-05, 7.549999999999918e-05, 7.5791...</msg>
<status status="PASS" starttime="20201030 15:57:15.838" endtime="20201030 15:57:15.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.859" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:57:15.856" endtime="20201030 15:57:15.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.864" level="INFO">VALUE: [7.540300000000166e-05, 7.501399999999825e-05, 7.512500000000227e-05, 7.479200000000408e-05, 7.577799999999857e-05, 7.497299999999901e-05, 7.562499999999583e-05, 7.549999999999918e-05, 7.579199999999814e-05, 7.511099999999576e-05, 7.530599999999721e-05, 7.497199999999954e-05, 7.509700000000313e-05, 7.562499999999583e-05, 7.524999999999893e-05, 7.562499999999583e-05, 7.545800000000047e-05, 7.51110000000027e-05, 7.512499999999533e-05, 7.518100000000055e-05, 7.584800000000336e-05, 7.562500000000277e-05, 7.518000000000108e-05, 7.497199999999954e-05, 7.495799999999997e-05, 7.505599999999696e-05, 7.544500000000037e-05, 7.529199999999764e-05, 7.545899999999994e-05, 7.515200000000194e-05, 7.529199999999764e-05, 7.495899999999944e-05, 7.530600000000415e-05, 7.47910000000046e-05, 7.527799999999807e-05, 7.527799999999807e-05, 7.495899999999944e-05, 7.533299999999687e-05, 7.563900000000234e-05, 7.52910000000051e-05, 7.566700000000148e-05, 7.513900000000184e-05, 7.562499999999583e-05, 7.587500000000302e-05, 7.54440000000009e-05, 7.51110000000027e-05, 7.562499999999583e-05, 7.512500000000227e-05, 7.512500000000227e-05, 7.545899999999994e-05]</msg>
<status status="PASS" starttime="20201030 15:57:15.861" endtime="20201030 15:57:15.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.849" endtime="20201030 15:57:15.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:15.877" endtime="20201030 15:57:15.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.872" endtime="20201030 15:57:15.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.870" endtime="20201030 15:57:15.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.362" endtime="20201030 15:57:15.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.360" endtime="20201030 15:57:15.902"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.925" endtime="20201030 15:57:15.945"></status>
</kw>
<msg timestamp="20201030 15:57:15.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:15.922" endtime="20201030 15:57:15.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:15.949" endtime="20201030 15:57:15.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.956" endtime="20201030 15:57:15.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.914" endtime="20201030 15:57:15.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.909" endtime="20201030 15:57:15.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.980" endtime="20201030 15:57:16.333"></status>
</kw>
<msg timestamp="20201030 15:57:16.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039992236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040067722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:15.976" endtime="20201030 15:57:16.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039992236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040067722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:16.342" endtime="20201030 15:57:16.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.362" endtime="20201030 15:57:16.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.969" endtime="20201030 15:57:16.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.964" endtime="20201030 15:57:16.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:16.379" level="INFO">${RESULT} = [{'diff': 7.548599999999961e-05}, {'diff': 7.51389999999949e-05}, {'diff': 7.557000000000397e-05}, {'diff': 7.511200000000218e-05}, {'diff': 7.579099999999866e-05}, {'diff': 7.561099999999626e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:16.370" endtime="20201030 15:57:16.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:16.389" level="INFO">${ACCURACY} = {'diff': [7.548599999999961e-05, 7.51389999999949e-05, 7.557000000000397e-05, 7.511200000000218e-05, 7.579099999999866e-05, 7.561099999999626e-05, 7.529199999999764e-05, 7.54440000000009e-05, 7.543000...</msg>
<status status="PASS" starttime="20201030 15:57:16.381" endtime="20201030 15:57:16.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.400" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:57:16.397" endtime="20201030 15:57:16.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.405" level="INFO">VALUE: [7.548599999999961e-05, 7.51389999999949e-05, 7.557000000000397e-05, 7.511200000000218e-05, 7.579099999999866e-05, 7.561099999999626e-05, 7.529199999999764e-05, 7.54440000000009e-05, 7.543000000000133e-05, 7.512500000000227e-05, 7.512500000000227e-05, 7.56389999999954e-05, 7.512500000000227e-05, 7.534700000000338e-05, 7.565299999999497e-05, 7.545800000000047e-05, 7.495899999999944e-05, 7.558300000000406e-05, 7.530599999999721e-05, 7.563900000000234e-05, 7.545800000000047e-05, 7.547200000000004e-05, 7.562499999999583e-05, 7.498699999999858e-05, 7.481900000000374e-05, 7.497199999999954e-05, 7.530599999999721e-05, 7.495899999999944e-05, 7.516700000000098e-05, 7.495900000000638e-05, 7.533399999999635e-05, 7.545899999999994e-05, 7.53189999999973e-05, 7.516600000000151e-05, 7.498599999999911e-05, 7.565299999999497e-05, 7.541600000000176e-05, 7.480600000000365e-05, 7.580599999999771e-05, 7.47910000000046e-05, 7.518100000000055e-05, 7.56389999999954e-05, 7.511200000000218e-05, 7.495899999999944e-05, 7.530599999999721e-05, 7.54310000000008e-05, 7.530499999999773e-05, 7.54310000000008e-05, 7.529200000000458e-05, 7.515200000000194e-05]</msg>
<status status="PASS" starttime="20201030 15:57:16.402" endtime="20201030 15:57:16.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.390" endtime="20201030 15:57:16.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:16.418" endtime="20201030 15:57:16.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.414" endtime="20201030 15:57:16.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.411" endtime="20201030 15:57:16.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.904" endtime="20201030 15:57:16.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.903" endtime="20201030 15:57:16.443"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.467" endtime="20201030 15:57:16.486"></status>
</kw>
<msg timestamp="20201030 15:57:16.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:16.463" endtime="20201030 15:57:16.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:16.490" endtime="20201030 15:57:16.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.496" endtime="20201030 15:57:16.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.456" endtime="20201030 15:57:16.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.450" endtime="20201030 15:57:16.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.522" endtime="20201030 15:57:16.873"></status>
</kw>
<msg timestamp="20201030 15:57:16.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040662556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040738014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:16.518" endtime="20201030 15:57:16.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040662556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040738014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:16.882" endtime="20201030 15:57:16.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.901" endtime="20201030 15:57:16.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.511" endtime="20201030 15:57:16.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.506" endtime="20201030 15:57:16.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:16.919" level="INFO">${RESULT} = [{'diff': 7.545800000000047e-05}, {'diff': 7.497199999999954e-05}, {'diff': 7.53189999999973e-05}, {'diff': 7.519399999999371e-05}, {'diff': 7.566700000000148e-05}, {'diff': 7.547299999999951e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:16.910" endtime="20201030 15:57:16.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:16.928" level="INFO">${ACCURACY} = {'diff': [7.545800000000047e-05, 7.497199999999954e-05, 7.53189999999973e-05, 7.519399999999371e-05, 7.566700000000148e-05, 7.547299999999951e-05, 7.499999999999868e-05, 7.516600000000151e-05, 7.51530...</msg>
<status status="PASS" starttime="20201030 15:57:16.921" endtime="20201030 15:57:16.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.939" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:57:16.937" endtime="20201030 15:57:16.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.945" level="INFO">VALUE: [7.545800000000047e-05, 7.497199999999954e-05, 7.53189999999973e-05, 7.519399999999371e-05, 7.566700000000148e-05, 7.547299999999951e-05, 7.499999999999868e-05, 7.516600000000151e-05, 7.515300000000141e-05, 7.498599999999911e-05, 7.482000000000322e-05, 7.516600000000151e-05, 7.499999999999868e-05, 7.547200000000004e-05, 7.515300000000141e-05, 7.562500000000277e-05, 7.584700000000388e-05, 7.504200000000433e-05, 7.499999999999868e-05, 7.584700000000388e-05, 7.548699999999908e-05, 7.566700000000148e-05, 7.566599999999507e-05, 7.516700000000098e-05, 7.515300000000141e-05, 7.49310000000003e-05, 7.565300000000191e-05, 7.515300000000141e-05, 7.580599999999771e-05, 7.515300000000141e-05, 7.584799999999642e-05, 7.499999999999868e-05, 7.518000000000108e-05, 7.480500000000417e-05, 7.51110000000027e-05, 7.515300000000141e-05, 7.547200000000004e-05, 7.515300000000141e-05, 7.54440000000009e-05, 7.565300000000191e-05, 7.566699999999454e-05, 7.558299999999712e-05, 7.518100000000055e-05, 7.53890000000021e-05, 7.515200000000194e-05, 7.563900000000234e-05, 7.581900000000474e-05, 7.547200000000004e-05, 7.494399999999346e-05, 7.513900000000184e-05]</msg>
<status status="PASS" starttime="20201030 15:57:16.942" endtime="20201030 15:57:16.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.930" endtime="20201030 15:57:16.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:16.959" endtime="20201030 15:57:16.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.953" endtime="20201030 15:57:16.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.951" endtime="20201030 15:57:16.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.445" endtime="20201030 15:57:16.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.444" endtime="20201030 15:57:16.984"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.008" endtime="20201030 15:57:17.030"></status>
</kw>
<msg timestamp="20201030 15:57:17.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:17.004" endtime="20201030 15:57:17.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:17.034" endtime="20201030 15:57:17.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.042" endtime="20201030 15:57:17.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.997" endtime="20201030 15:57:17.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.991" endtime="20201030 15:57:17.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.070" endtime="20201030 15:57:17.421"></status>
</kw>
<msg timestamp="20201030 15:57:17.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041140778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041215708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:17.067" endtime="20201030 15:57:17.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041140778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041215708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:17.431" endtime="20201030 15:57:17.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.450" endtime="20201030 15:57:17.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.059" endtime="20201030 15:57:17.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.053" endtime="20201030 15:57:17.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:17.467" level="INFO">${RESULT} = [{'diff': 7.492999999999389e-05}, {'diff': 7.583299999999737e-05}, {'diff': 7.565300000000191e-05}, {'diff': 7.498599999999911e-05}, {'diff': 7.498599999999911e-05}, {'diff': 7.531900000000424e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:17.458" endtime="20201030 15:57:17.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:17.478" level="INFO">${ACCURACY} = {'diff': [7.492999999999389e-05, 7.583299999999737e-05, 7.565300000000191e-05, 7.498599999999911e-05, 7.498599999999911e-05, 7.531900000000424e-05, 7.532000000000372e-05, 7.499999999999868e-05, 7.5305...</msg>
<status status="PASS" starttime="20201030 15:57:17.469" endtime="20201030 15:57:17.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.489" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:57:17.487" endtime="20201030 15:57:17.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.495" level="INFO">VALUE: [7.492999999999389e-05, 7.583299999999737e-05, 7.565300000000191e-05, 7.498599999999911e-05, 7.498599999999911e-05, 7.531900000000424e-05, 7.532000000000372e-05, 7.499999999999868e-05, 7.530599999999721e-05, 7.48189999999968e-05, 7.565200000000244e-05, 7.497199999999954e-05, 7.56389999999954e-05, 7.568100000000105e-05, 7.568099999999411e-05, 7.532000000000372e-05, 7.51389999999949e-05, 7.532000000000372e-05, 7.56389999999954e-05, 7.529099999999816e-05, 7.533400000000329e-05, 7.565299999999497e-05, 7.498599999999911e-05, 7.513900000000184e-05, 7.518000000000108e-05, 7.549999999999918e-05, 7.548699999999908e-05, 7.561099999999626e-05, 7.53189999999973e-05, 7.544500000000037e-05, 7.530600000000415e-05, 7.566700000000148e-05, 7.531999999999678e-05, 7.563900000000234e-05, 7.568100000000105e-05, 7.58189999999978e-05, 7.565299999999497e-05, 7.565300000000191e-05, 7.47910000000046e-05, 7.511099999999576e-05, 7.494499999999987e-05, 7.56389999999954e-05, 7.549999999999918e-05, 7.513900000000184e-05, 7.51389999999949e-05, 7.534699999999644e-05, 7.548599999999961e-05, 7.562499999999583e-05, 7.516599999999457e-05, 7.581999999999728e-05]</msg>
<status status="PASS" starttime="20201030 15:57:17.492" endtime="20201030 15:57:17.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.480" endtime="20201030 15:57:17.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:17.507" endtime="20201030 15:57:17.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.503" endtime="20201030 15:57:17.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.501" endtime="20201030 15:57:17.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.986" endtime="20201030 15:57:17.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.985" endtime="20201030 15:57:17.533"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.556" endtime="20201030 15:57:17.577"></status>
</kw>
<msg timestamp="20201030 15:57:17.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:17.553" endtime="20201030 15:57:17.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:17.581" endtime="20201030 15:57:17.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.589" endtime="20201030 15:57:17.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.545" endtime="20201030 15:57:17.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.540" endtime="20201030 15:57:17.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.630" endtime="20201030 15:57:18.009"></status>
</kw>
<msg timestamp="20201030 15:57:18.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040763028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040838014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:17.621" endtime="20201030 15:57:18.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040763028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040838014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:18.019" endtime="20201030 15:57:18.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.038" endtime="20201030 15:57:18.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.607" endtime="20201030 15:57:18.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.602" endtime="20201030 15:57:18.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:18.055" level="INFO">${RESULT} = [{'diff': 7.498599999999911e-05}, {'diff': 7.497199999999954e-05}, {'diff': 7.516700000000098e-05}, {'diff': 7.481900000000374e-05}, {'diff': 7.548700000000602e-05}, {'diff': 7.501300000000571e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:18.046" endtime="20201030 15:57:18.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:18.067" level="INFO">${ACCURACY} = {'diff': [7.498599999999911e-05, 7.497199999999954e-05, 7.516700000000098e-05, 7.481900000000374e-05, 7.548700000000602e-05, 7.501300000000571e-05, 7.498599999999911e-05, 7.533300000000381e-05, 7.5458...</msg>
<status status="PASS" starttime="20201030 15:57:18.057" endtime="20201030 15:57:18.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.078" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:57:18.075" endtime="20201030 15:57:18.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.083" level="INFO">VALUE: [7.498599999999911e-05, 7.497199999999954e-05, 7.516700000000098e-05, 7.481900000000374e-05, 7.548700000000602e-05, 7.501300000000571e-05, 7.498599999999911e-05, 7.533300000000381e-05, 7.545800000000047e-05, 7.58189999999978e-05, 7.495799999999997e-05, 7.497199999999954e-05, 7.563900000000234e-05, 7.580599999999771e-05, 7.530500000000467e-05, 7.500000000000562e-05, 7.513900000000184e-05, 7.563900000000234e-05, 7.513900000000184e-05, 7.515299999999447e-05, 7.58189999999978e-05, 7.565299999999497e-05, 7.493000000000083e-05, 7.547200000000004e-05, 7.529199999999764e-05, 7.512500000000227e-05, 7.549999999999918e-05, 7.47910000000046e-05, 7.563799999999593e-05, 7.58189999999978e-05, 7.480600000000365e-05, 7.523599999999936e-05, 7.520800000000022e-05, 7.512500000000227e-05, 7.51389999999949e-05, 7.50839999999961e-05, 7.544500000000037e-05, 7.545899999999994e-05, 7.497199999999954e-05, 7.497199999999954e-05, 7.497199999999954e-05, 7.58189999999978e-05, 7.530600000000415e-05, 7.543000000000133e-05, 7.565200000000244e-05, 7.495799999999997e-05, 7.562499999999583e-05, 7.579099999999866e-05, 7.580499999999823e-05, 7.547200000000004e-05]</msg>
<status status="PASS" starttime="20201030 15:57:18.080" endtime="20201030 15:57:18.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.069" endtime="20201030 15:57:18.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:18.096" endtime="20201030 15:57:18.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.092" endtime="20201030 15:57:18.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.089" endtime="20201030 15:57:18.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.535" endtime="20201030 15:57:18.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.534" endtime="20201030 15:57:18.121"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.144" endtime="20201030 15:57:18.164"></status>
</kw>
<msg timestamp="20201030 15:57:18.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:18.141" endtime="20201030 15:57:18.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:18.168" endtime="20201030 15:57:18.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.174" endtime="20201030 15:57:18.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.134" endtime="20201030 15:57:18.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.128" endtime="20201030 15:57:18.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.198" endtime="20201030 15:57:18.553"></status>
</kw>
<msg timestamp="20201030 15:57:18.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040292153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040367778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:18.194" endtime="20201030 15:57:18.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040292153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040367778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:18.562" endtime="20201030 15:57:18.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.581" endtime="20201030 15:57:18.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.187" endtime="20201030 15:57:18.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.182" endtime="20201030 15:57:18.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:18.599" level="INFO">${RESULT} = [{'diff': 7.562500000000277e-05}, {'diff': 7.513900000000184e-05}, {'diff': 7.512500000000227e-05}, {'diff': 7.529099999999816e-05}, {'diff': 7.547200000000004e-05}, {'diff': 7.477799999999757e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:18.590" endtime="20201030 15:57:18.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:18.608" level="INFO">${ACCURACY} = {'diff': [7.562500000000277e-05, 7.513900000000184e-05, 7.512500000000227e-05, 7.529099999999816e-05, 7.547200000000004e-05, 7.477799999999757e-05, 7.529200000000458e-05, 7.583399999999685e-05, 7.5485...</msg>
<status status="PASS" starttime="20201030 15:57:18.601" endtime="20201030 15:57:18.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.619" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:57:18.616" endtime="20201030 15:57:18.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.624" level="INFO">VALUE: [7.562500000000277e-05, 7.513900000000184e-05, 7.512500000000227e-05, 7.529099999999816e-05, 7.547200000000004e-05, 7.477799999999757e-05, 7.529200000000458e-05, 7.583399999999685e-05, 7.548599999999961e-05, 7.530599999999721e-05, 7.512500000000227e-05, 7.586100000000345e-05, 7.562499999999583e-05, 7.547200000000004e-05, 7.54310000000008e-05, 7.533300000000381e-05, 7.529199999999764e-05, 7.513900000000184e-05, 7.532000000000372e-05, 7.482000000000322e-05, 7.497199999999954e-05, 7.4763999999998e-05, 7.512499999999533e-05, 7.477799999999757e-05, 7.527800000000501e-05, 7.52639999999985e-05, 7.54440000000009e-05, 7.511099999999576e-05, 7.545800000000047e-05, 7.480599999999671e-05, 7.513800000000237e-05, 7.495899999999944e-05, 7.547200000000004e-05, 7.562499999999583e-05, 7.506999999999653e-05, 7.543000000000133e-05, 7.580600000000465e-05, 7.52769999999986e-05, 7.540300000000166e-05, 7.532000000000372e-05, 7.516700000000098e-05, 7.51389999999949e-05, 7.561099999999626e-05, 7.511099999999576e-05, 7.581900000000474e-05, 7.4763999999998e-05, 7.511099999999576e-05, 7.526299999999903e-05, 7.498599999999911e-05, 7.551399999999875e-05]</msg>
<status status="PASS" starttime="20201030 15:57:18.621" endtime="20201030 15:57:18.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.610" endtime="20201030 15:57:18.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:18.637" endtime="20201030 15:57:18.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.632" endtime="20201030 15:57:18.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.630" endtime="20201030 15:57:18.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.123" endtime="20201030 15:57:18.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.122" endtime="20201030 15:57:18.662"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.685" endtime="20201030 15:57:18.703"></status>
</kw>
<msg timestamp="20201030 15:57:18.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:18.681" endtime="20201030 15:57:18.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:18.706" endtime="20201030 15:57:18.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.713" endtime="20201030 15:57:18.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.674" endtime="20201030 15:57:18.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.668" endtime="20201030 15:57:18.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.736" endtime="20201030 15:57:19.072"></status>
</kw>
<msg timestamp="20201030 15:57:19.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039825875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039902458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:18.733" endtime="20201030 15:57:19.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039825875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039902458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:19.081" endtime="20201030 15:57:19.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.103" endtime="20201030 15:57:19.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.726" endtime="20201030 15:57:19.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.721" endtime="20201030 15:57:19.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:19.127" level="INFO">${RESULT} = [{'diff': 7.658300000000506e-05}, {'diff': 7.615300000000241e-05}, {'diff': 7.8151999999998e-05}, {'diff': 7.641700000000223e-05}, {'diff': 7.633299999999787e-05}, {'diff': 7.879200000000114e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:57:19.116" endtime="20201030 15:57:19.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:19.139" level="INFO">${ACCURACY} = {'diff': [7.658300000000506e-05, 7.615300000000241e-05, 7.8151999999998e-05, 7.641700000000223e-05, 7.633299999999787e-05, 7.879200000000114e-05, 7.640200000000319e-05, 7.873600000000286e-05, 7.616700...</msg>
<status status="PASS" starttime="20201030 15:57:19.130" endtime="20201030 15:57:19.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.150" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:57:19.147" endtime="20201030 15:57:19.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.155" level="INFO">VALUE: [7.658300000000506e-05, 7.615300000000241e-05, 7.8151999999998e-05, 7.641700000000223e-05, 7.633299999999787e-05, 7.879200000000114e-05, 7.640200000000319e-05, 7.873600000000286e-05, 7.616700000000198e-05, 7.848600000000261e-05, 7.598600000000011e-05, 7.661199999999674e-05, 7.879099999999473e-05, 7.630499999999873e-05, 7.663900000000334e-05, 7.872199999999635e-05, 7.612499999999633e-05, 7.616700000000198e-05, 7.877800000000157e-05, 7.60839999999971e-05, 7.644499999999443e-05, 7.804100000000092e-05, 7.648600000000061e-05, 7.78890000000046e-05, 7.64440000000019e-05, 7.819499999999618e-05, 7.604099999999892e-05, 7.826300000000203e-05, 7.665300000000291e-05, 7.861099999999926e-05, 7.672200000000129e-05, 7.668100000000205e-05, 7.844500000000337e-05, 7.662499999999683e-05, 7.684800000000436e-05, 7.812500000000527e-05, 7.624999999999993e-05, 7.618100000000155e-05, 7.840199999999825e-05, 7.675000000000043e-05, 7.6764e-05, 7.833299999999987e-05, 7.630499999999873e-05, 7.651400000000669e-05, 7.82640000000015e-05, 7.605499999999848e-05, 7.597300000000001e-05, 7.812500000000527e-05, 7.606899999999805e-05, 7.633399999999735e-05]</msg>
<status status="PASS" starttime="20201030 15:57:19.152" endtime="20201030 15:57:19.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.140" endtime="20201030 15:57:19.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:19.169" endtime="20201030 15:57:19.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.163" endtime="20201030 15:57:19.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.161" endtime="20201030 15:57:19.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.664" endtime="20201030 15:57:19.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.663" endtime="20201030 15:57:19.194"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.216" endtime="20201030 15:57:19.234"></status>
</kw>
<msg timestamp="20201030 15:57:19.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:19.213" endtime="20201030 15:57:19.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:19.238" endtime="20201030 15:57:19.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.244" endtime="20201030 15:57:19.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.206" endtime="20201030 15:57:19.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.200" endtime="20201030 15:57:19.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.267" endtime="20201030 15:57:19.610"></status>
</kw>
<msg timestamp="20201030 15:57:19.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039282333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039361319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:19.264" endtime="20201030 15:57:19.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039282333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039361319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:19.619" endtime="20201030 15:57:19.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.638" endtime="20201030 15:57:19.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.256" endtime="20201030 15:57:19.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.252" endtime="20201030 15:57:19.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:19.655" level="INFO">${RESULT} = [{'diff': 7.898599999999617e-05}, {'diff': 7.902800000000182e-05}, {'diff': 7.898600000000311e-05}, {'diff': 7.967999999999864e-05}, {'diff': 7.933400000000035e-05}, {'diff': 7.886099999999951e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:19.646" endtime="20201030 15:57:19.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:19.670" level="INFO">${ACCURACY} = {'diff': [7.898599999999617e-05, 7.902800000000182e-05, 7.898600000000311e-05, 7.967999999999864e-05, 7.933400000000035e-05, 7.886099999999951e-05, 7.969399999999821e-05, 7.969399999999821e-05, 7.9166...</msg>
<status status="PASS" starttime="20201030 15:57:19.657" endtime="20201030 15:57:19.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.681" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:57:19.679" endtime="20201030 15:57:19.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.686" level="INFO">VALUE: [7.898599999999617e-05, 7.902800000000182e-05, 7.898600000000311e-05, 7.967999999999864e-05, 7.933400000000035e-05, 7.886099999999951e-05, 7.969399999999821e-05, 7.969399999999821e-05, 7.916699999999804e-05, 7.948699999999614e-05, 7.933300000000088e-05, 7.916700000000498e-05, 7.950000000000318e-05, 7.969499999999768e-05, 7.952800000000232e-05, 7.979200000000214e-05, 7.898599999999617e-05, 7.95840000000006e-05, 7.886099999999951e-05, 7.886099999999951e-05, 7.887499999999908e-05, 7.934700000000044e-05, 7.947300000000351e-05, 7.918099999999761e-05, 7.912499999999933e-05, 7.936100000000001e-05, 7.902800000000182e-05, 7.901299999999584e-05, 7.951400000000275e-05, 7.969399999999821e-05, 7.937499999999958e-05, 7.950000000000318e-05, 7.891599999999832e-05, 7.951399999999581e-05, 7.90269999999954e-05, 7.94169999999983e-05, 7.968000000000558e-05, 7.931899999999437e-05, 7.902800000000182e-05, 7.938899999999915e-05, 7.936100000000001e-05, 7.923599999999642e-05, 7.984799999999348e-05, 7.984700000000094e-05, 7.934700000000044e-05, 7.954200000000189e-05, 7.916700000000498e-05, 7.901400000000225e-05, 7.950000000000318e-05, 7.933300000000088e-05]</msg>
<status status="PASS" starttime="20201030 15:57:19.683" endtime="20201030 15:57:19.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.672" endtime="20201030 15:57:19.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:19.698" endtime="20201030 15:57:19.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.694" endtime="20201030 15:57:19.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.692" endtime="20201030 15:57:19.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.196" endtime="20201030 15:57:19.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.195" endtime="20201030 15:57:19.723"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.746" endtime="20201030 15:57:19.765"></status>
</kw>
<msg timestamp="20201030 15:57:19.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:19.742" endtime="20201030 15:57:19.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:19.768" endtime="20201030 15:57:19.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.775" endtime="20201030 15:57:19.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.735" endtime="20201030 15:57:19.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.730" endtime="20201030 15:57:19.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.797" endtime="20201030 15:57:20.137"></status>
</kw>
<msg timestamp="20201030 15:57:20.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039301986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039380847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:19.794" endtime="20201030 15:57:20.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039301986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039380847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:20.147" endtime="20201030 15:57:20.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.166" endtime="20201030 15:57:20.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.787" endtime="20201030 15:57:20.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.782" endtime="20201030 15:57:20.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:20.183" level="INFO">${RESULT} = [{'diff': 7.886099999999951e-05}, {'diff': 7.936100000000001e-05}, {'diff': 7.901400000000225e-05}, {'diff': 7.934700000000044e-05}, {'diff': 7.969399999999821e-05}, {'diff': 7.968099999999811e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:20.174" endtime="20201030 15:57:20.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:20.194" level="INFO">${ACCURACY} = {'diff': [7.886099999999951e-05, 7.936100000000001e-05, 7.901400000000225e-05, 7.934700000000044e-05, 7.969399999999821e-05, 7.968099999999811e-05, 7.949999999999624e-05, 7.899999999999574e-05, 7.8888...</msg>
<status status="PASS" starttime="20201030 15:57:20.185" endtime="20201030 15:57:20.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.204" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:57:20.202" endtime="20201030 15:57:20.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.210" level="INFO">VALUE: [7.886099999999951e-05, 7.936100000000001e-05, 7.901400000000225e-05, 7.934700000000044e-05, 7.969399999999821e-05, 7.968099999999811e-05, 7.949999999999624e-05, 7.899999999999574e-05, 7.888899999999865e-05, 7.950000000000318e-05, 7.877800000000157e-05, 7.916700000000498e-05, 7.954200000000189e-05, 7.915299999999847e-05, 7.933300000000088e-05, 7.93190000000013e-05, 7.981999999999434e-05, 7.951399999999581e-05, 7.898599999999617e-05, 7.965299999999897e-05, 7.883299999999344e-05, 7.918100000000455e-05, 7.950000000000318e-05, 7.901400000000225e-05, 7.945800000000447e-05, 7.934799999999992e-05, 7.900000000000268e-05, 7.917999999999814e-05, 7.888899999999865e-05, 7.966699999999854e-05, 7.895800000000397e-05, 7.93190000000013e-05, 7.901399999999531e-05, 7.972200000000429e-05, 7.895799999999703e-05, 7.880600000000071e-05, 7.948600000000361e-05, 7.882000000000028e-05, 7.916699999999804e-05, 7.933299999999394e-05, 7.932000000000078e-05, 7.932000000000078e-05, 7.966699999999854e-05, 7.980500000000224e-05, 7.901400000000225e-05, 7.919400000000465e-05, 7.970900000000419e-05, 7.900000000000268e-05, 7.933400000000035e-05, 7.93190000000013e-05]</msg>
<status status="PASS" starttime="20201030 15:57:20.207" endtime="20201030 15:57:20.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.195" endtime="20201030 15:57:20.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:20.222" endtime="20201030 15:57:20.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.218" endtime="20201030 15:57:20.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.215" endtime="20201030 15:57:20.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.726" endtime="20201030 15:57:20.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.724" endtime="20201030 15:57:20.247"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.269" endtime="20201030 15:57:20.288"></status>
</kw>
<msg timestamp="20201030 15:57:20.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:20.266" endtime="20201030 15:57:20.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:20.291" endtime="20201030 15:57:20.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.297" endtime="20201030 15:57:20.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.259" endtime="20201030 15:57:20.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.253" endtime="20201030 15:57:20.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.320" endtime="20201030 15:57:20.653"></status>
</kw>
<msg timestamp="20201030 15:57:20.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039358944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039445, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:57:20.317" endtime="20201030 15:57:20.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039358944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039445, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:57:20.662" endtime="20201030 15:57:20.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.681" endtime="20201030 15:57:20.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.310" endtime="20201030 15:57:20.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.305" endtime="20201030 15:57:20.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:20.698" level="INFO">${RESULT} = [{'diff': 8.605600000000102e-05}, {'diff': 8.659700000000076e-05}, {'diff': 8.577800000000163e-05}, {'diff': 8.644400000000496e-05}, {'diff': 8.616700000000505e-05}, {'diff': 8.659699999999382e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:20.689" endtime="20201030 15:57:20.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:20.707" level="INFO">${ACCURACY} = {'diff': [8.605600000000102e-05, 8.659700000000076e-05, 8.577800000000163e-05, 8.644400000000496e-05, 8.616700000000505e-05, 8.659699999999382e-05, 8.64720000000041e-05, 8.58050000000013e-05, 8.594500...</msg>
<status status="PASS" starttime="20201030 15:57:20.700" endtime="20201030 15:57:20.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.717" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:57:20.715" endtime="20201030 15:57:20.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.723" level="INFO">VALUE: [8.605600000000102e-05, 8.659700000000076e-05, 8.577800000000163e-05, 8.644400000000496e-05, 8.616700000000505e-05, 8.659699999999382e-05, 8.64720000000041e-05, 8.58050000000013e-05, 8.594500000000393e-05, 8.652800000000238e-05, 8.645799999999759e-05, 8.651399999999587e-05, 8.5944999999997e-05, 8.62920000000017e-05, 8.609700000000026e-05, 8.626399999999562e-05, 8.598599999999623e-05, 8.644500000000443e-05, 8.620800000000428e-05, 8.6847000000001e-05, 8.601399999999537e-05, 8.61669999999981e-05, 8.647199999999716e-05, 8.602800000000188e-05, 8.605500000000155e-05, 8.643100000000487e-05, 8.63050000000018e-05, 8.615300000000548e-05, 8.652800000000238e-05, 8.655500000000205e-05, 8.588899999999872e-05, 8.663899999999947e-05, 8.620799999999734e-05, 8.5944999999997e-05, 8.577800000000163e-05, 8.655499999999511e-05, 8.613899999999897e-05, 8.668099999999818e-05, 8.686100000000058e-05, 8.627800000000213e-05, 8.604200000000145e-05, 8.681899999999493e-05, 8.633400000000041e-05, 8.601399999999537e-05, 8.693099999999843e-05, 8.63050000000018e-05, 8.640299999999879e-05, 8.62370000000029e-05, 8.642999999999845e-05, 8.684699999999407e-05]</msg>
<status status="PASS" starttime="20201030 15:57:20.720" endtime="20201030 15:57:20.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.709" endtime="20201030 15:57:20.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:20.735" endtime="20201030 15:57:20.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.731" endtime="20201030 15:57:20.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.728" endtime="20201030 15:57:20.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.249" endtime="20201030 15:57:20.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.248" endtime="20201030 15:57:20.760"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.782" endtime="20201030 15:57:20.803"></status>
</kw>
<msg timestamp="20201030 15:57:20.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:20.779" endtime="20201030 15:57:20.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:20.807" endtime="20201030 15:57:20.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.813" endtime="20201030 15:57:20.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.772" endtime="20201030 15:57:20.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.766" endtime="20201030 15:57:20.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.836" endtime="20201030 15:57:21.182"></status>
</kw>
<msg timestamp="20201030 15:57:21.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040565236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040653611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:20.833" endtime="20201030 15:57:21.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040565236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040653611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:21.192" endtime="20201030 15:57:21.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.212" endtime="20201030 15:57:21.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.825" endtime="20201030 15:57:21.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.821" endtime="20201030 15:57:21.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:21.230" level="INFO">${RESULT} = [{'diff': 8.837500000000165e-05}, {'diff': 8.779099999999679e-05}, {'diff': 8.726399999999662e-05}, {'diff': 8.702800000000288e-05}, {'diff': 8.73050000000028e-05}, {'diff': 8.713800000000049e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:21.221" endtime="20201030 15:57:21.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:21.240" level="INFO">${ACCURACY} = {'diff': [8.837500000000165e-05, 8.779099999999679e-05, 8.726399999999662e-05, 8.702800000000288e-05, 8.73050000000028e-05, 8.713800000000049e-05, 8.701399999999637e-05, 8.759799999999429e-05, 8.72359...</msg>
<status status="PASS" starttime="20201030 15:57:21.233" endtime="20201030 15:57:21.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.251" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:57:21.249" endtime="20201030 15:57:21.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.256" level="INFO">VALUE: [8.837500000000165e-05, 8.779099999999679e-05, 8.726399999999662e-05, 8.702800000000288e-05, 8.73050000000028e-05, 8.713800000000049e-05, 8.701399999999637e-05, 8.759799999999429e-05, 8.723599999999748e-05, 8.748599999999773e-05, 8.754199999999601e-05, 8.704200000000245e-05, 8.774999999999755e-05, 8.704200000000245e-05, 8.745799999999859e-05, 8.723599999999748e-05, 8.727700000000366e-05, 8.748599999999773e-05, 8.768099999999918e-05, 8.752799999999644e-05, 8.697300000000407e-05, 8.711100000000083e-05, 8.727799999999619e-05, 8.733300000000194e-05, 8.715299999999954e-05, 8.720799999999834e-05, 8.698600000000417e-05, 8.71669999999991e-05, 8.733300000000194e-05, 8.706900000000212e-05, 8.725000000000399e-05, 8.776399999999712e-05, 8.777799999999669e-05, 8.762499999999396e-05, 8.687500000000015e-05, 8.772299999999789e-05, 8.686100000000058e-05, 8.752799999999644e-05, 8.701399999999637e-05, 8.750000000000424e-05, 8.720799999999834e-05, 8.734800000000098e-05, 8.708400000000116e-05, 8.695799999999809e-05, 8.740299999999979e-05, 8.700000000000374e-05, 8.741699999999936e-05, 8.711100000000083e-05, 8.68050000000023e-05, 8.697199999999766e-05]</msg>
<status status="PASS" starttime="20201030 15:57:21.253" endtime="20201030 15:57:21.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.242" endtime="20201030 15:57:21.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:21.271" endtime="20201030 15:57:21.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.265" endtime="20201030 15:57:21.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.262" endtime="20201030 15:57:21.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.762" endtime="20201030 15:57:21.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.761" endtime="20201030 15:57:21.296"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.319" endtime="20201030 15:57:21.339"></status>
</kw>
<msg timestamp="20201030 15:57:21.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:21.316" endtime="20201030 15:57:21.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:21.343" endtime="20201030 15:57:21.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.349" endtime="20201030 15:57:21.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.309" endtime="20201030 15:57:21.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.302" endtime="20201030 15:57:21.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.372" endtime="20201030 15:57:21.723"></status>
</kw>
<msg timestamp="20201030 15:57:21.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0404555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040545125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:57:21.369" endtime="20201030 15:57:21.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0404555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040545125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:57:21.732" endtime="20201030 15:57:21.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.750" endtime="20201030 15:57:21.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.362" endtime="20201030 15:57:21.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.357" endtime="20201030 15:57:21.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:21.768" level="INFO">${RESULT} = [{'diff': 8.96250000000029e-05}, {'diff': 8.966699999999467e-05}, {'diff': 8.926300000000609e-05}, {'diff': 8.913900000000197e-05}, {'diff': 8.969500000000075e-05}, {'diff': 8.890299999999435e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:21.759" endtime="20201030 15:57:21.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:21.779" level="INFO">${ACCURACY} = {'diff': [8.96250000000029e-05, 8.966699999999467e-05, 8.926300000000609e-05, 8.913900000000197e-05, 8.969500000000075e-05, 8.890299999999435e-05, 8.890199999999487e-05, 8.934800000000298e-05, 8.88470...</msg>
<status status="PASS" starttime="20201030 15:57:21.770" endtime="20201030 15:57:21.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.790" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:57:21.787" endtime="20201030 15:57:21.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.795" level="INFO">VALUE: [8.96250000000029e-05, 8.966699999999467e-05, 8.926300000000609e-05, 8.913900000000197e-05, 8.969500000000075e-05, 8.890299999999435e-05, 8.890199999999487e-05, 8.934800000000298e-05, 8.884700000000301e-05, 8.905599999999708e-05, 8.908299999999675e-05, 8.980599999999783e-05, 8.901399999999837e-05, 8.969400000000127e-05, 8.966699999999467e-05, 8.958299999999725e-05, 8.881899999999693e-05, 8.972200000000041e-05, 8.955499999999811e-05, 8.936100000000308e-05, 8.938899999999528e-05, 8.927800000000513e-05, 8.976399999999912e-05, 8.926400000000556e-05, 8.89999999999988e-05, 8.91670000000011e-05, 8.977800000000563e-05, 8.91800000000012e-05, 8.926399999999862e-05, 8.942999999999451e-05, 8.941600000000188e-05, 8.936100000000308e-05, 8.952800000000538e-05, 8.909700000000326e-05, 8.955599999999758e-05, 8.915300000000154e-05, 8.91120000000023e-05, 8.969500000000075e-05, 8.973599999999998e-05, 8.970800000000084e-05, 8.956899999999768e-05, 8.890300000000129e-05, 8.981899999999793e-05, 8.94999999999993e-05, 8.963800000000299e-05, 8.888900000000172e-05, 8.902699999999847e-05, 8.924999999999905e-05, 8.900000000000574e-05, 8.886100000000258e-05]</msg>
<status status="PASS" starttime="20201030 15:57:21.792" endtime="20201030 15:57:21.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.781" endtime="20201030 15:57:21.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:21.813" endtime="20201030 15:57:21.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.809" endtime="20201030 15:57:21.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.806" endtime="20201030 15:57:21.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.298" endtime="20201030 15:57:21.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.297" endtime="20201030 15:57:21.839"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.862" endtime="20201030 15:57:21.882"></status>
</kw>
<msg timestamp="20201030 15:57:21.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:21.858" endtime="20201030 15:57:21.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:21.886" endtime="20201030 15:57:21.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.892" endtime="20201030 15:57:21.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.851" endtime="20201030 15:57:21.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.845" endtime="20201030 15:57:21.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.916" endtime="20201030 15:57:22.262"></status>
</kw>
<msg timestamp="20201030 15:57:22.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040349597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040440097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:21.912" endtime="20201030 15:57:22.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040349597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040440097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:22.272" endtime="20201030 15:57:22.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.291" endtime="20201030 15:57:22.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.905" endtime="20201030 15:57:22.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.900" endtime="20201030 15:57:22.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:22.308" level="INFO">${RESULT} = [{'diff': 9.05000000000003e-05}, {'diff': 9.049999999999336e-05}, {'diff': 9.069399999999533e-05}, {'diff': 9.058399999999772e-05}, {'diff': 9.062499999999696e-05}, {'diff': 9.01670000000021e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:57:22.299" endtime="20201030 15:57:22.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:22.320" level="INFO">${ACCURACY} = {'diff': [9.05000000000003e-05, 9.049999999999336e-05, 9.069399999999533e-05, 9.058399999999772e-05, 9.062499999999696e-05, 9.01670000000021e-05, 9.033400000000441e-05, 9.062499999999696e-05, 9.063900...</msg>
<status status="PASS" starttime="20201030 15:57:22.310" endtime="20201030 15:57:22.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.331" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:57:22.328" endtime="20201030 15:57:22.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.336" level="INFO">VALUE: [9.05000000000003e-05, 9.049999999999336e-05, 9.069399999999533e-05, 9.058399999999772e-05, 9.062499999999696e-05, 9.01670000000021e-05, 9.033400000000441e-05, 9.062499999999696e-05, 9.063900000000347e-05, 9.01670000000021e-05, 9.019400000000177e-05, 8.994400000000152e-05, 9.080599999999883e-05, 9.009699999999732e-05, 8.995899999999363e-05, 9.077799999999969e-05, 9.01529999999956e-05, 9.076400000000012e-05, 9.012499999999646e-05, 9.051399999999987e-05, 9.069400000000227e-05, 9.03199999999979e-05, 9.059700000000476e-05, 8.9945000000001e-05, 9.06120000000038e-05, 9.086200000000405e-05, 8.99999999999998e-05, 9.052800000000638e-05, 9.079099999999979e-05, 9.047200000000116e-05, 9.083300000000544e-05, 9.052799999999944e-05, 8.991600000000238e-05, 9.056899999999868e-05, 9.08329999999985e-05, 9.047200000000116e-05, 9.047300000000064e-05, 9.075000000000055e-05, 9.086099999999764e-05, 8.997200000000066e-05, 8.998600000000023e-05, 9.057000000000509e-05, 9.01120000000033e-05, 9.006899999999818e-05, 9.055499999999911e-05, 9.025000000000005e-05, 9.037499999999671e-05, 9.06670000000026e-05, 9.06120000000038e-05, 9.043100000000193e-05]</msg>
<status status="PASS" starttime="20201030 15:57:22.333" endtime="20201030 15:57:22.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.321" endtime="20201030 15:57:22.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:22.349" endtime="20201030 15:57:22.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.344" endtime="20201030 15:57:22.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.342" endtime="20201030 15:57:22.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.841" endtime="20201030 15:57:22.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.840" endtime="20201030 15:57:22.374"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.397" endtime="20201030 15:57:22.418"></status>
</kw>
<msg timestamp="20201030 15:57:22.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:22.394" endtime="20201030 15:57:22.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:22.422" endtime="20201030 15:57:22.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.428" endtime="20201030 15:57:22.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.387" endtime="20201030 15:57:22.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.381" endtime="20201030 15:57:22.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.453" endtime="20201030 15:57:22.797"></status>
</kw>
<msg timestamp="20201030 15:57:22.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040345028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040436194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:22.450" endtime="20201030 15:57:22.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040345028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040436194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:22.807" endtime="20201030 15:57:22.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.826" endtime="20201030 15:57:22.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.442" endtime="20201030 15:57:22.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.437" endtime="20201030 15:57:22.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:22.843" level="INFO">${RESULT} = [{'diff': 9.116600000000363e-05}, {'diff': 9.092999999999601e-05}, {'diff': 9.169499999999581e-05}, {'diff': 9.169400000000327e-05}, {'diff': 9.168100000000318e-05}, {'diff': 9.140300000000379e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:22.834" endtime="20201030 15:57:22.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:22.852" level="INFO">${ACCURACY} = {'diff': [9.116600000000363e-05, 9.092999999999601e-05, 9.169499999999581e-05, 9.169400000000327e-05, 9.168100000000318e-05, 9.140300000000379e-05, 9.137500000000465e-05, 9.184699999999907e-05, 9.0889...</msg>
<status status="PASS" starttime="20201030 15:57:22.845" endtime="20201030 15:57:22.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.863" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:57:22.860" endtime="20201030 15:57:22.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.868" level="INFO">VALUE: [9.116600000000363e-05, 9.092999999999601e-05, 9.169499999999581e-05, 9.169400000000327e-05, 9.168100000000318e-05, 9.140300000000379e-05, 9.137500000000465e-05, 9.184699999999907e-05, 9.088900000000372e-05, 9.1945000000003e-05, 9.130499999999986e-05, 9.126400000000062e-05, 9.154200000000001e-05, 9.158299999999925e-05, 9.147200000000216e-05, 9.101400000000037e-05, 9.111100000000483e-05, 9.11250000000044e-05, 9.1332999999999e-05, 9.11529999999966e-05, 9.18329999999995e-05, 9.141700000000336e-05, 9.119399999999583e-05, 9.130599999999933e-05, 9.180500000000036e-05, 9.095800000000209e-05, 9.125000000000105e-05, 9.161099999999839e-05, 9.101400000000037e-05, 9.097300000000114e-05, 9.097200000000166e-05, 9.109799999999779e-05, 9.113900000000397e-05, 9.16670000000036e-05, 9.176399999999418e-05, 9.119400000000277e-05, 9.154200000000001e-05, 9.156999999999915e-05, 9.108299999999875e-05, 9.093000000000295e-05, 9.158399999999872e-05, 9.108299999999875e-05, 9.15000000000013e-05, 9.180599999999983e-05, 9.145899999999513e-05, 9.136099999999814e-05, 9.126400000000062e-05, 9.106999999999865e-05, 9.091699999999592e-05, 9.113900000000397e-05]</msg>
<status status="PASS" starttime="20201030 15:57:22.865" endtime="20201030 15:57:22.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.854" endtime="20201030 15:57:22.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:22.880" endtime="20201030 15:57:22.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.876" endtime="20201030 15:57:22.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.873" endtime="20201030 15:57:22.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.376" endtime="20201030 15:57:22.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.375" endtime="20201030 15:57:22.905"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.927" endtime="20201030 15:57:22.948"></status>
</kw>
<msg timestamp="20201030 15:57:22.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:22.924" endtime="20201030 15:57:22.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:22.951" endtime="20201030 15:57:22.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.957" endtime="20201030 15:57:22.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.917" endtime="20201030 15:57:22.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.912" endtime="20201030 15:57:22.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.980" endtime="20201030 15:57:23.312"></status>
</kw>
<msg timestamp="20201030 15:57:23.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040881958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040974069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:22.977" endtime="20201030 15:57:23.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040881958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040974069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:23.321" endtime="20201030 15:57:23.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.340" endtime="20201030 15:57:23.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.970" endtime="20201030 15:57:23.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.965" endtime="20201030 15:57:23.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:23.357" level="INFO">${RESULT} = [{'diff': 9.211099999999889e-05}, {'diff': 9.276399999999518e-05}, {'diff': 9.26659999999982e-05}, {'diff': 9.204100000000104e-05}, {'diff': 9.222199999999597e-05}, {'diff': 9.258399999999972e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:23.348" endtime="20201030 15:57:23.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:23.366" level="INFO">${ACCURACY} = {'diff': [9.211099999999889e-05, 9.276399999999518e-05, 9.26659999999982e-05, 9.204100000000104e-05, 9.222199999999597e-05, 9.258399999999972e-05, 9.272199999999647e-05, 9.276400000000212e-05, 9.27360...</msg>
<status status="PASS" starttime="20201030 15:57:23.359" endtime="20201030 15:57:23.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.377" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:57:23.375" endtime="20201030 15:57:23.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.382" level="INFO">VALUE: [9.211099999999889e-05, 9.276399999999518e-05, 9.26659999999982e-05, 9.204100000000104e-05, 9.222199999999597e-05, 9.258399999999972e-05, 9.272199999999647e-05, 9.276400000000212e-05, 9.273600000000298e-05, 9.259699999999982e-05, 9.194400000000352e-05, 9.274999999999561e-05, 9.262499999999896e-05, 9.240300000000479e-05, 9.197300000000214e-05, 9.213899999999803e-05, 9.272199999999647e-05, 9.212499999999846e-05, 9.255600000000058e-05, 9.19859999999953e-05, 9.229200000000076e-05, 9.218100000000368e-05, 9.226400000000162e-05, 9.201400000000137e-05, 9.201399999999443e-05, 9.236099999999914e-05, 9.236099999999914e-05, 9.247200000000316e-05, 9.277800000000169e-05, 9.193100000000343e-05, 9.227800000000119e-05, 9.276399999999518e-05, 9.209699999999932e-05, 9.213900000000497e-05, 9.217999999999726e-05, 9.234699999999957e-05, 9.226400000000162e-05, 9.217999999999726e-05, 9.273600000000298e-05, 9.281999999999346e-05, 9.247300000000264e-05, 9.240300000000479e-05, 9.279200000000126e-05, 9.25279999999945e-05, 9.245800000000359e-05, 9.193000000000395e-05, 9.255500000000111e-05, 9.188899999999778e-05, 9.211099999999889e-05, 9.243099999999699e-05]</msg>
<status status="PASS" starttime="20201030 15:57:23.379" endtime="20201030 15:57:23.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.368" endtime="20201030 15:57:23.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:23.396" endtime="20201030 15:57:23.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.390" endtime="20201030 15:57:23.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.388" endtime="20201030 15:57:23.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.907" endtime="20201030 15:57:23.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.906" endtime="20201030 15:57:23.421"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.443" endtime="20201030 15:57:23.462"></status>
</kw>
<msg timestamp="20201030 15:57:23.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:23.440" endtime="20201030 15:57:23.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:23.466" endtime="20201030 15:57:23.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.472" endtime="20201030 15:57:23.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.433" endtime="20201030 15:57:23.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.427" endtime="20201030 15:57:23.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.496" endtime="20201030 15:57:23.826"></status>
</kw>
<msg timestamp="20201030 15:57:23.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039374069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039467236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:23.493" endtime="20201030 15:57:23.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039374069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039467236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:23.835" endtime="20201030 15:57:23.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.854" endtime="20201030 15:57:23.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.485" endtime="20201030 15:57:23.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.481" endtime="20201030 15:57:23.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:23.871" level="INFO">${RESULT} = [{'diff': 9.316700000000511e-05}, {'diff': 9.288899999999878e-05}, {'diff': 9.356899999999474e-05}, {'diff': 9.349999999999636e-05}, {'diff': 9.283399999999997e-05}, {'diff': 9.352800000000244e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:23.862" endtime="20201030 15:57:23.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:23.882" level="INFO">${ACCURACY} = {'diff': [9.316700000000511e-05, 9.288899999999878e-05, 9.356899999999474e-05, 9.349999999999636e-05, 9.283399999999997e-05, 9.352800000000244e-05, 9.287499999999921e-05, 9.347200000000416e-05, 9.3250...</msg>
<status status="PASS" starttime="20201030 15:57:23.873" endtime="20201030 15:57:23.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.892" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:57:23.890" endtime="20201030 15:57:23.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.898" level="INFO">VALUE: [9.316700000000511e-05, 9.288899999999878e-05, 9.356899999999474e-05, 9.349999999999636e-05, 9.283399999999997e-05, 9.352800000000244e-05, 9.287499999999921e-05, 9.347200000000416e-05, 9.325000000000305e-05, 9.295799999999715e-05, 9.354200000000201e-05, 9.281900000000093e-05, 9.340299999999885e-05, 9.341699999999842e-05, 9.344499999999756e-05, 9.337499999999971e-05, 9.304200000000151e-05, 9.35279999999955e-05, 9.334700000000057e-05, 9.377700000000322e-05, 9.329100000000229e-05, 9.372299999999695e-05, 9.373600000000398e-05, 9.34859999999968e-05, 9.33200000000009e-05, 9.326400000000262e-05, 9.323600000000348e-05, 9.322199999999697e-05, 9.31800000000052e-05, 9.295799999999715e-05, 9.294399999999758e-05, 9.304200000000151e-05, 9.336199999999961e-05, 9.355599999999464e-05, 9.302699999999553e-05, 9.379200000000226e-05, 9.355500000000211e-05, 9.340299999999885e-05, 9.336199999999961e-05, 9.313899999999903e-05, 9.348600000000373e-05, 9.344399999999808e-05, 9.337499999999971e-05, 9.370899999999738e-05, 9.341599999999894e-05, 9.372199999999747e-05, 9.363899999999953e-05, 9.3027999999995e-05, 9.362499999999996e-05, 9.290199999999887e-05]</msg>
<status status="PASS" starttime="20201030 15:57:23.895" endtime="20201030 15:57:23.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.884" endtime="20201030 15:57:23.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:23.910" endtime="20201030 15:57:23.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.906" endtime="20201030 15:57:23.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.903" endtime="20201030 15:57:23.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.423" endtime="20201030 15:57:23.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.422" endtime="20201030 15:57:23.935"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.957" endtime="20201030 15:57:23.976"></status>
</kw>
<msg timestamp="20201030 15:57:23.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:23.954" endtime="20201030 15:57:23.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:23.979" endtime="20201030 15:57:23.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.985" endtime="20201030 15:57:23.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.947" endtime="20201030 15:57:23.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.941" endtime="20201030 15:57:23.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.008" endtime="20201030 15:57:24.341"></status>
</kw>
<msg timestamp="20201030 15:57:24.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039136944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039231208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:24.005" endtime="20201030 15:57:24.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039136944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039231208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:24.350" endtime="20201030 15:57:24.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.369" endtime="20201030 15:57:24.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.998" endtime="20201030 15:57:24.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.993" endtime="20201030 15:57:24.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:24.385" level="INFO">${RESULT} = [{'diff': 9.426399999999668e-05}, {'diff': 9.395799999999815e-05}, {'diff': 9.39859999999973e-05}, {'diff': 9.398600000000423e-05}, {'diff': 9.393099999999849e-05}, {'diff': 9.394499999999806e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:24.377" endtime="20201030 15:57:24.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:24.396" level="INFO">${ACCURACY} = {'diff': [9.426399999999668e-05, 9.395799999999815e-05, 9.39859999999973e-05, 9.398600000000423e-05, 9.393099999999849e-05, 9.394499999999806e-05, 9.397300000000414e-05, 9.430600000000233e-05, 9.41659...</msg>
<status status="PASS" starttime="20201030 15:57:24.387" endtime="20201030 15:57:24.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.407" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:57:24.405" endtime="20201030 15:57:24.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.413" level="INFO">VALUE: [9.426399999999668e-05, 9.395799999999815e-05, 9.39859999999973e-05, 9.398600000000423e-05, 9.393099999999849e-05, 9.394499999999806e-05, 9.397300000000414e-05, 9.430600000000233e-05, 9.41659999999997e-05, 9.44859999999978e-05, 9.415200000000012e-05, 9.442999999999951e-05, 9.48609999999947e-05, 9.445799999999865e-05, 9.445800000000559e-05, 9.4027999999996e-05, 9.451399999999693e-05, 9.407000000000165e-05, 9.479099999999685e-05, 9.430600000000233e-05, 9.411100000000089e-05, 9.476400000000412e-05, 9.443100000000593e-05, 9.483400000000197e-05, 9.481900000000293e-05, 9.440299999999985e-05, 9.472299999999795e-05, 9.44859999999978e-05, 9.41659999999997e-05, 9.441599999999994e-05, 9.427799999999625e-05, 9.422200000000491e-05, 9.404200000000251e-05, 9.45000000000043e-05, 9.407000000000165e-05, 9.39870000000037e-05, 9.461099999999445e-05, 9.476399999999718e-05, 9.41529999999996e-05, 9.430600000000233e-05, 9.449999999999736e-05, 9.479199999999632e-05, 9.444400000000602e-05, 9.447199999999822e-05, 9.419399999999883e-05, 9.481999999999546e-05, 9.444399999999908e-05, 9.46530000000001e-05, 9.409700000000132e-05, 9.447199999999822e-05]</msg>
<status status="PASS" starttime="20201030 15:57:24.410" endtime="20201030 15:57:24.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.398" endtime="20201030 15:57:24.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:24.425" endtime="20201030 15:57:24.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.421" endtime="20201030 15:57:24.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.418" endtime="20201030 15:57:24.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.937" endtime="20201030 15:57:24.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.936" endtime="20201030 15:57:24.451"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.474" endtime="20201030 15:57:24.493"></status>
</kw>
<msg timestamp="20201030 15:57:24.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:24.470" endtime="20201030 15:57:24.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:24.496" endtime="20201030 15:57:24.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.502" endtime="20201030 15:57:24.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.463" endtime="20201030 15:57:24.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.457" endtime="20201030 15:57:24.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.526" endtime="20201030 15:57:24.864"></status>
</kw>
<msg timestamp="20201030 15:57:24.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040697361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04079325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:24.523" endtime="20201030 15:57:24.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040697361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04079325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:24.874" endtime="20201030 15:57:24.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.892" endtime="20201030 15:57:24.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.516" endtime="20201030 15:57:24.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.511" endtime="20201030 15:57:24.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:24.909" level="INFO">${RESULT} = [{'diff': 9.588900000000178e-05}, {'diff': 9.616700000000117e-05}, {'diff': 9.659799999999635e-05}, {'diff': 9.640200000000237e-05}, {'diff': 9.651399999999893e-05}, {'diff': 9.690300000000235e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:24.901" endtime="20201030 15:57:24.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:24.919" level="INFO">${ACCURACY} = {'diff': [9.588900000000178e-05, 9.616700000000117e-05, 9.659799999999635e-05, 9.640200000000237e-05, 9.651399999999893e-05, 9.690300000000235e-05, 9.624999999999911e-05, 9.673600000000004e-05, 9.6625...</msg>
<status status="PASS" starttime="20201030 15:57:24.911" endtime="20201030 15:57:24.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.929" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:57:24.927" endtime="20201030 15:57:24.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.935" level="INFO">VALUE: [9.588900000000178e-05, 9.616700000000117e-05, 9.659799999999635e-05, 9.640200000000237e-05, 9.651399999999893e-05, 9.690300000000235e-05, 9.624999999999911e-05, 9.673600000000004e-05, 9.662500000000296e-05, 9.638900000000228e-05, 9.676399999999918e-05, 9.594400000000058e-05, 9.627799999999825e-05, 9.606900000000418e-05, 9.638900000000228e-05, 9.640199999999544e-05, 9.588900000000178e-05, 9.613900000000203e-05, 9.662499999999602e-05, 9.618000000000126e-05, 9.64859999999998e-05, 9.637500000000271e-05, 9.597199999999972e-05, 9.63059999999974e-05, 9.640200000000237e-05, 9.663900000000253e-05, 9.643100000000099e-05, 9.652800000000544e-05, 9.638900000000228e-05, 9.651399999999893e-05, 9.640200000000237e-05, 9.672200000000047e-05, 9.623599999999954e-05, 9.604199999999757e-05, 9.597199999999972e-05, 9.624999999999911e-05, 9.622199999999997e-05, 9.602700000000547e-05, 9.591700000000092e-05, 9.673600000000004e-05, 9.622199999999997e-05, 9.666700000000167e-05, 9.676399999999918e-05, 9.609700000000332e-05, 9.604199999999757e-05, 9.62080000000004e-05, 9.601400000000537e-05, 9.590300000000135e-05, 9.64859999999998e-05, 9.656899999999774e-05]</msg>
<status status="PASS" starttime="20201030 15:57:24.932" endtime="20201030 15:57:24.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.920" endtime="20201030 15:57:24.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:24.947" endtime="20201030 15:57:24.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.943" endtime="20201030 15:57:24.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.940" endtime="20201030 15:57:24.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.453" endtime="20201030 15:57:24.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.452" endtime="20201030 15:57:24.973"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.998" endtime="20201030 15:57:25.018"></status>
</kw>
<msg timestamp="20201030 15:57:25.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:24.994" endtime="20201030 15:57:25.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:25.022" endtime="20201030 15:57:25.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.028" endtime="20201030 15:57:25.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.987" endtime="20201030 15:57:25.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.982" endtime="20201030 15:57:25.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.051" endtime="20201030 15:57:25.382"></status>
</kw>
<msg timestamp="20201030 15:57:25.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044516333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044613653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:25.048" endtime="20201030 15:57:25.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044516333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044613653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:25.391" endtime="20201030 15:57:25.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.409" endtime="20201030 15:57:25.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.041" endtime="20201030 15:57:25.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.036" endtime="20201030 15:57:25.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:25.426" level="INFO">${RESULT} = [{'diff': 9.73200000000049e-05}, {'diff': 9.758299999999831e-05}, {'diff': 9.762499999999702e-05}, {'diff': 9.772200000000147e-05}, {'diff': 9.695900000000063e-05}, {'diff': 9.762499999999702e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:25.418" endtime="20201030 15:57:25.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:25.436" level="INFO">${ACCURACY} = {'diff': [9.73200000000049e-05, 9.758299999999831e-05, 9.762499999999702e-05, 9.772200000000147e-05, 9.695900000000063e-05, 9.762499999999702e-05, 9.761099999999745e-05, 9.741699999999548e-05, 9.74860...</msg>
<status status="PASS" starttime="20201030 15:57:25.428" endtime="20201030 15:57:25.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.446" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:57:25.444" endtime="20201030 15:57:25.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.452" level="INFO">VALUE: [9.73200000000049e-05, 9.758299999999831e-05, 9.762499999999702e-05, 9.772200000000147e-05, 9.695900000000063e-05, 9.762499999999702e-05, 9.761099999999745e-05, 9.741699999999548e-05, 9.74860000000008e-05, 9.773600000000104e-05, 9.708399999999728e-05, 9.783299999999856e-05, 9.750000000000036e-05, 9.715299999999566e-05, 9.781900000000593e-05, 9.768000000000276e-05, 9.78200000000054e-05, 9.709700000000432e-05, 9.761199999999692e-05, 9.694500000000106e-05, 9.709700000000432e-05, 9.738900000000328e-05, 9.780499999999942e-05, 9.777799999999975e-05, 9.699999999999986e-05, 9.751399999999993e-05, 9.777799999999975e-05, 9.762499999999702e-05, 9.741699999999548e-05, 9.738899999999634e-05, 9.705599999999814e-05, 9.699999999999986e-05, 9.758299999999831e-05, 9.763900000000353e-05, 9.754200000000601e-05, 9.731899999999849e-05, 9.71530000000026e-05, 9.72080000000014e-05, 9.74860000000008e-05, 9.754199999999907e-05, 9.74730000000007e-05, 9.772200000000147e-05, 9.777799999999975e-05, 9.709699999999738e-05, 9.733399999999753e-05, 9.694499999999412e-05, 9.688900000000278e-05, 9.75279999999995e-05, 9.722200000000097e-05, 9.756899999999874e-05]</msg>
<status status="PASS" starttime="20201030 15:57:25.449" endtime="20201030 15:57:25.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.437" endtime="20201030 15:57:25.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:25.466" endtime="20201030 15:57:25.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.460" endtime="20201030 15:57:25.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.458" endtime="20201030 15:57:25.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.976" endtime="20201030 15:57:25.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.975" endtime="20201030 15:57:25.491"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.513" endtime="20201030 15:57:25.533"></status>
</kw>
<msg timestamp="20201030 15:57:25.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:25.510" endtime="20201030 15:57:25.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:25.536" endtime="20201030 15:57:25.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.543" endtime="20201030 15:57:25.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.503" endtime="20201030 15:57:25.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.497" endtime="20201030 15:57:25.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.566" endtime="20201030 15:57:25.899"></status>
</kw>
<msg timestamp="20201030 15:57:25.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039555472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039653542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:25.563" endtime="20201030 15:57:25.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039555472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039653542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:25.909" endtime="20201030 15:57:25.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.927" endtime="20201030 15:57:25.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.556" endtime="20201030 15:57:25.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.551" endtime="20201030 15:57:25.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:25.944" level="INFO">${RESULT} = [{'diff': 9.806999999999871e-05}, {'diff': 9.827700000000078e-05}, {'diff': 9.83479999999981e-05}, {'diff': 9.841700000000342e-05}, {'diff': 9.863900000000453e-05}, {'diff': 9.873600000000204e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:25.935" endtime="20201030 15:57:25.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:25.954" level="INFO">${ACCURACY} = {'diff': [9.806999999999871e-05, 9.827700000000078e-05, 9.83479999999981e-05, 9.841700000000342e-05, 9.863900000000453e-05, 9.873600000000204e-05, 9.805599999999914e-05, 9.798700000000077e-05, 9.86250...</msg>
<status status="PASS" starttime="20201030 15:57:25.946" endtime="20201030 15:57:25.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.965" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:57:25.963" endtime="20201030 15:57:25.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.971" level="INFO">VALUE: [9.806999999999871e-05, 9.827700000000078e-05, 9.83479999999981e-05, 9.841700000000342e-05, 9.863900000000453e-05, 9.873600000000204e-05, 9.805599999999914e-05, 9.798700000000077e-05, 9.862500000000496e-05, 9.840299999999691e-05, 9.813800000000455e-05, 9.797199999999479e-05, 9.884699999999913e-05, 9.884700000000607e-05, 9.872199999999554e-05, 9.806899999999924e-05, 9.83059999999994e-05, 9.887500000000521e-05, 9.831899999999949e-05, 9.870900000000238e-05, 9.854200000000007e-05, 9.858299999999931e-05, 9.816699999999623e-05, 9.847200000000222e-05, 9.840199999999744e-05, 9.83059999999994e-05, 9.819499999999537e-05, 9.808399999999828e-05, 9.86660000000042e-05, 9.886199999999817e-05, 9.801400000000043e-05, 9.895799999999622e-05, 9.855599999999964e-05, 9.859699999999888e-05, 9.813899999999709e-05, 9.826400000000068e-05, 9.890299999999741e-05, 9.834699999999863e-05, 9.883399999999903e-05, 9.857000000000615e-05, 9.825000000000111e-05, 9.893000000000401e-05, 9.883299999999956e-05, 9.879200000000032e-05, 9.848599999999486e-05, 9.840300000000385e-05, 9.811099999999795e-05, 9.872200000000247e-05, 9.8028e-05, 9.852699999999409e-05]</msg>
<status status="PASS" starttime="20201030 15:57:25.968" endtime="20201030 15:57:25.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.956" endtime="20201030 15:57:25.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:25.983" endtime="20201030 15:57:26.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.979" endtime="20201030 15:57:26.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.976" endtime="20201030 15:57:26.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.493" endtime="20201030 15:57:26.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.492" endtime="20201030 15:57:26.008"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.031" endtime="20201030 15:57:26.050"></status>
</kw>
<msg timestamp="20201030 15:57:26.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:26.027" endtime="20201030 15:57:26.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:26.054" endtime="20201030 15:57:26.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.061" endtime="20201030 15:57:26.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.020" endtime="20201030 15:57:26.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.014" endtime="20201030 15:57:26.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.089" endtime="20201030 15:57:26.421"></status>
</kw>
<msg timestamp="20201030 15:57:26.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039467639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039567222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:26.085" endtime="20201030 15:57:26.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039467639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039567222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:26.431" endtime="20201030 15:57:26.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.450" endtime="20201030 15:57:26.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.077" endtime="20201030 15:57:26.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.071" endtime="20201030 15:57:26.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:26.467" level="INFO">${RESULT} = [{'diff': 9.958300000000031e-05}, {'diff': 9.900000000000186e-05}, {'diff': 9.886200000000511e-05}, {'diff': 9.901400000000143e-05}, {'diff': 9.897199999999579e-05}, {'diff': 9.893100000000349e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:26.459" endtime="20201030 15:57:26.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:26.478" level="INFO">${ACCURACY} = {'diff': [9.958300000000031e-05, 9.900000000000186e-05, 9.886200000000511e-05, 9.901400000000143e-05, 9.897199999999579e-05, 9.893100000000349e-05, 9.915299999999766e-05, 9.95280000000015e-05, 9.94029...</msg>
<status status="PASS" starttime="20201030 15:57:26.469" endtime="20201030 15:57:26.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.489" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:57:26.487" endtime="20201030 15:57:26.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.494" level="INFO">VALUE: [9.958300000000031e-05, 9.900000000000186e-05, 9.886200000000511e-05, 9.901400000000143e-05, 9.897199999999579e-05, 9.893100000000349e-05, 9.915299999999766e-05, 9.95280000000015e-05, 9.940299999999791e-05, 9.970799999999697e-05, 9.934699999999963e-05, 9.938899999999834e-05, 9.944400000000408e-05, 9.9028000000001e-05, 9.902700000000153e-05, 9.949999999999543e-05, 9.922300000000245e-05, 9.959699999999988e-05, 9.95559999999937e-05, 9.972299999999601e-05, 9.973600000000304e-05, 9.972200000000347e-05, 9.959699999999988e-05, 9.888899999999784e-05, 9.972300000000295e-05, 9.929199999999389e-05, 9.929200000000082e-05, 9.909699999999938e-05, 9.942999999999758e-05, 9.93609999999992e-05, 9.906999999999971e-05, 9.892999999999708e-05, 9.895800000000315e-05, 9.959800000000629e-05, 9.955600000000064e-05, 9.931900000000049e-05, 9.88609999999987e-05, 9.968000000000476e-05, 9.945800000000365e-05, 9.915299999999766e-05, 9.982000000000046e-05, 9.916700000000417e-05, 9.893000000000401e-05, 9.977799999999482e-05, 9.951300000000246e-05, 9.90410000000011e-05, 9.897200000000272e-05, 9.930500000000092e-05, 9.940299999999791e-05, 9.909800000000579e-05]</msg>
<status status="PASS" starttime="20201030 15:57:26.491" endtime="20201030 15:57:26.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.480" endtime="20201030 15:57:26.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:26.507" endtime="20201030 15:57:26.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.502" endtime="20201030 15:57:26.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.500" endtime="20201030 15:57:26.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.010" endtime="20201030 15:57:26.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.009" endtime="20201030 15:57:26.532"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.555" endtime="20201030 15:57:26.574"></status>
</kw>
<msg timestamp="20201030 15:57:26.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:26.551" endtime="20201030 15:57:26.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:26.578" endtime="20201030 15:57:26.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.584" endtime="20201030 15:57:26.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.544" endtime="20201030 15:57:26.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.538" endtime="20201030 15:57:26.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.607" endtime="20201030 15:57:26.940"></status>
</kw>
<msg timestamp="20201030 15:57:26.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040321083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040421653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:26.604" endtime="20201030 15:57:26.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040321083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040421653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:26.949" endtime="20201030 15:57:26.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.967" endtime="20201030 15:57:26.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.596" endtime="20201030 15:57:26.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.592" endtime="20201030 15:57:26.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:26.984" level="INFO">${RESULT} = [{'diff': 0.00010057000000000121}, {'diff': 0.00010062500000000002}, {'diff': 0.00010037499999999977}, {'diff': 0.00010062500000000002}, {'diff': 9.998599999999636e-05}, {'diff': 0.0001000550000000016...</msg>
<status status="PASS" starttime="20201030 15:57:26.975" endtime="20201030 15:57:26.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:26.993" level="INFO">${ACCURACY} = {'diff': [0.00010057000000000121, 0.00010062500000000002, 0.00010037499999999977, 0.00010062500000000002, 9.998599999999636e-05, 0.00010005500000000167, 9.988899999999884e-05, 0.00010043099999999805, ...</msg>
<status status="PASS" starttime="20201030 15:57:26.986" endtime="20201030 15:57:26.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.004" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:57:27.001" endtime="20201030 15:57:27.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.009" level="INFO">VALUE: [0.00010057000000000121, 0.00010062500000000002, 0.00010037499999999977, 0.00010062500000000002, 9.998599999999636e-05, 0.00010005500000000167, 9.988899999999884e-05, 0.00010043099999999805, 0.00010008400000000028, 0.00010051299999999652, 0.00010027799999999532, 0.00010055500000000217, 0.00010047199999999729, 0.00010018100000000474, 0.0001008060000000019, 9.994399999999765e-05, 0.00010027800000000225, 0.00010041700000000542, 0.000100415999999999, 0.0001006939999999984, 0.00010076399999999625, 0.00010019500000000431, 0.00010026400000000268, 0.00010033400000000053, 0.00010052700000000303, 0.00010061100000000045, 0.00010062500000000002, 0.00010055600000000164, 9.999999999999593e-05, 0.0001003610000000002, 0.0001005280000000025, 0.0001004730000000037, 0.00010011099999999995, 0.00010013899999999909, 0.00010065299999999916, 0.00010063800000000012, 0.00010001400000000243, 0.00010027800000000225, 0.00010054200000000207, 0.00010044400000000508, 0.0001008060000000019, 0.00010008400000000028, 0.00010004200000000157, 9.995800000000415e-05, 0.0001006809999999983, 0.00010065199999999969, 0.00010027700000000278, 0.00010012499999999952, 0.0001008060000000019, 0.0001000410000000021]</msg>
<status status="PASS" starttime="20201030 15:57:27.006" endtime="20201030 15:57:27.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.995" endtime="20201030 15:57:27.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:27.026" endtime="20201030 15:57:27.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.022" endtime="20201030 15:57:27.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.019" endtime="20201030 15:57:27.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.534" endtime="20201030 15:57:27.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.533" endtime="20201030 15:57:27.051"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.073" endtime="20201030 15:57:27.094"></status>
</kw>
<msg timestamp="20201030 15:57:27.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:27.070" endtime="20201030 15:57:27.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:27.097" endtime="20201030 15:57:27.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.103" endtime="20201030 15:57:27.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.063" endtime="20201030 15:57:27.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.057" endtime="20201030 15:57:27.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.126" endtime="20201030 15:57:27.457"></status>
</kw>
<msg timestamp="20201030 15:57:27.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040772319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040873958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:27.123" endtime="20201030 15:57:27.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040772319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040873958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:27.467" endtime="20201030 15:57:27.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.485" endtime="20201030 15:57:27.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.116" endtime="20201030 15:57:27.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.111" endtime="20201030 15:57:27.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:27.502" level="INFO">${RESULT} = [{'diff': 0.00010163900000000059}, {'diff': 0.00010105500000000267}, {'diff': 0.00010100000000000386}, {'diff': 0.00010099999999999693}, {'diff': 0.00010091699999999898}, {'diff': 0.000101056000000002...</msg>
<status status="PASS" starttime="20201030 15:57:27.493" endtime="20201030 15:57:27.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:27.511" level="INFO">${ACCURACY} = {'diff': [0.00010163900000000059, 0.00010105500000000267, 0.00010100000000000386, 0.00010099999999999693, 0.00010091699999999898, 0.00010105600000000214, 0.00010137499999999383, 0.00010167999999999983...</msg>
<status status="PASS" starttime="20201030 15:57:27.504" endtime="20201030 15:57:27.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.521" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:57:27.519" endtime="20201030 15:57:27.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.527" level="INFO">VALUE: [0.00010163900000000059, 0.00010105500000000267, 0.00010100000000000386, 0.00010099999999999693, 0.00010091699999999898, 0.00010105600000000214, 0.00010137499999999383, 0.00010167999999999983, 0.00010108300000000181, 0.0001013060000000024, 0.0001019160000000005, 0.00010108300000000181, 0.00010142999999999958, 0.00010162499999999408, 0.00010093099999999855, 0.00010099999999999693, 0.00010125000000000411, 0.00010125000000000411, 0.00010137500000000077, 0.00010172199999999854, 0.00010120900000000488, 0.000101416, 0.00010131900000000249, 0.00010131900000000249, 0.00010148599999999786, 0.00010156900000000274, 0.00010134700000000163, 0.00010152799999999657, 0.00010124999999999718, 0.00010179199999999639, 0.00010144499999999862, 0.00010117999999999933, 0.00010097199999999779, 0.00010152699999999709, 0.0001016939999999994, 0.0001013610000000012, 0.00010144499999999862, 0.00010138900000000034, 0.00010172199999999854, 0.00010176299999999777, 0.00010087500000000027, 0.00010120799999999847, 0.00010137500000000077, 0.00010152700000000403, 0.00010093099999999855, 0.00010162500000000102, 0.00010115299999999966, 0.00010116699999999923, 0.000101513999999997, 0.00010187500000000127]</msg>
<status status="PASS" starttime="20201030 15:57:27.524" endtime="20201030 15:57:27.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.512" endtime="20201030 15:57:27.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:27.541" endtime="20201030 15:57:27.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.535" endtime="20201030 15:57:27.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.532" endtime="20201030 15:57:27.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.053" endtime="20201030 15:57:27.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.052" endtime="20201030 15:57:27.565"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.589" endtime="20201030 15:57:27.608"></status>
</kw>
<msg timestamp="20201030 15:57:27.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:27.585" endtime="20201030 15:57:27.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:27.612" endtime="20201030 15:57:27.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.618" endtime="20201030 15:57:27.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.578" endtime="20201030 15:57:27.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.572" endtime="20201030 15:57:27.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.641" endtime="20201030 15:57:27.973"></status>
</kw>
<msg timestamp="20201030 15:57:27.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040224292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040326389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:27.638" endtime="20201030 15:57:27.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040224292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040326389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:27.982" endtime="20201030 15:57:28.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.002" endtime="20201030 15:57:28.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.630" endtime="20201030 15:57:28.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.626" endtime="20201030 15:57:28.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:28.019" level="INFO">${RESULT} = [{'diff': 0.00010209699999999544}, {'diff': 0.0001023889999999944}, {'diff': 0.00010233300000000306}, {'diff': 0.00010240300000000091}, {'diff': 0.00010199999999999793}, {'diff': 0.0001021809999999998...</msg>
<status status="PASS" starttime="20201030 15:57:28.010" endtime="20201030 15:57:28.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:28.029" level="INFO">${ACCURACY} = {'diff': [0.00010209699999999544, 0.0001023889999999944, 0.00010233300000000306, 0.00010240300000000091, 0.00010199999999999793, 0.0001021809999999998, 0.00010244499999999962, 0.0001025410000000046, 0...</msg>
<status status="PASS" starttime="20201030 15:57:28.021" endtime="20201030 15:57:28.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.040" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:57:28.038" endtime="20201030 15:57:28.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.045" level="INFO">VALUE: [0.00010209699999999544, 0.0001023889999999944, 0.00010233300000000306, 0.00010240300000000091, 0.00010199999999999793, 0.0001021809999999998, 0.00010244499999999962, 0.0001025410000000046, 0.00010281900000000399, 0.0001023060000000034, 0.00010287500000000227, 0.00010198599999999836, 0.00010272199999999954, 0.00010230599999999646, 0.00010233300000000306, 0.00010204099999999716, 0.00010195899999999869, 0.00010223600000000554, 0.00010227800000000425, 0.000102513999999998, 0.00010254099999999766, 0.00010294500000000012, 0.00010255500000000417, 0.00010220899999999894, 0.0001021939999999999, 0.00010245899999999919, 0.00010241700000000048, 0.00010233300000000306, 0.00010216600000000076, 0.00010211100000000195, 0.00010216600000000076, 0.00010255499999999723, 0.00010254099999999766, 0.00010220899999999894, 0.00010252699999999809, 0.00010249999999999843, 0.00010230500000000392, 0.0001026810000000003, 0.00010279199999999739, 0.00010195799999999922, 0.0001020689999999963, 0.0001026940000000004, 0.0001026940000000004, 0.00010234700000000263, 0.0001021939999999999, 0.00010270899999999944, 0.00010280499999999748, 0.00010284699999999619, 0.00010284799999999567, 0.00010227800000000425]</msg>
<status status="PASS" starttime="20201030 15:57:28.042" endtime="20201030 15:57:28.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.031" endtime="20201030 15:57:28.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:28.058" endtime="20201030 15:57:28.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.053" endtime="20201030 15:57:28.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.051" endtime="20201030 15:57:28.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.567" endtime="20201030 15:57:28.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.566" endtime="20201030 15:57:28.083"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.105" endtime="20201030 15:57:28.124"></status>
</kw>
<msg timestamp="20201030 15:57:28.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:28.102" endtime="20201030 15:57:28.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:28.128" endtime="20201030 15:57:28.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.134" endtime="20201030 15:57:28.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.095" endtime="20201030 15:57:28.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.089" endtime="20201030 15:57:28.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.157" endtime="20201030 15:57:28.544"></status>
</kw>
<msg timestamp="20201030 15:57:28.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039433792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039537722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:28.154" endtime="20201030 15:57:28.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039433792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039537722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:28.556" endtime="20201030 15:57:28.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.579" endtime="20201030 15:57:28.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.146" endtime="20201030 15:57:28.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.142" endtime="20201030 15:57:28.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:28.602" level="INFO">${RESULT} = [{'diff': 0.00010392999999999514}, {'diff': 0.00010359700000000388}, {'diff': 0.00010312500000000252}, {'diff': 0.00010372300000000001}, {'diff': 0.00010348599999999986}, {'diff': 0.000103319999999997...</msg>
<status status="PASS" starttime="20201030 15:57:28.591" endtime="20201030 15:57:28.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:28.621" level="INFO">${ACCURACY} = {'diff': [0.00010392999999999514, 0.00010359700000000388, 0.00010312500000000252, 0.00010372300000000001, 0.00010348599999999986, 0.00010331999999999703, 0.00010370800000000097, 0.00010341700000000148...</msg>
<status status="PASS" starttime="20201030 15:57:28.605" endtime="20201030 15:57:28.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.637" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:57:28.633" endtime="20201030 15:57:28.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.642" level="INFO">VALUE: [0.00010392999999999514, 0.00010359700000000388, 0.00010312500000000252, 0.00010372300000000001, 0.00010348599999999986, 0.00010331999999999703, 0.00010370800000000097, 0.00010341700000000148, 0.00010383299999999762, 0.00010324999999999918, 0.00010391699999999504, 0.00010336099999999626, 0.00010354199999999814, 0.00010315300000000166, 0.00010313900000000209, 0.00010379199999999839, 0.00010337500000000277, 0.00010370800000000097, 0.00010320800000000047, 0.00010390300000000241, 0.00010325000000000611, 0.0001031810000000008, 0.0001030689999999973, 0.00010380499999999848, 0.0001031810000000008, 0.00010331899999999755, 0.00010383299999999762, 0.0001030559999999972, 0.00010380599999999796, 0.0001030139999999985, 0.00010343000000000158, 0.00010340299999999497, 0.00010308299999999687, 0.00010361100000000345, 0.00010340300000000191, 0.00010361100000000345, 0.000103416000000002, 0.00010361100000000345, 0.00010387499999999633, 0.00010362499999999608, 0.00010362499999999608, 0.00010368000000000183, 0.00010391700000000198, 0.0001035559999999977, 0.0001037360000000001, 0.00010383300000000456, 0.00010399999999999993, 0.00010362500000000302, 0.00010304099999999816, 0.00010345800000000072]</msg>
<status status="PASS" starttime="20201030 15:57:28.639" endtime="20201030 15:57:28.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.623" endtime="20201030 15:57:28.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:28.656" endtime="20201030 15:57:28.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.651" endtime="20201030 15:57:28.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.649" endtime="20201030 15:57:28.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.085" endtime="20201030 15:57:28.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.083" endtime="20201030 15:57:28.681"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.704" endtime="20201030 15:57:28.726"></status>
</kw>
<msg timestamp="20201030 15:57:28.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:28.701" endtime="20201030 15:57:28.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:28.730" endtime="20201030 15:57:28.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.736" endtime="20201030 15:57:28.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.693" endtime="20201030 15:57:28.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.687" endtime="20201030 15:57:28.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.760" endtime="20201030 15:57:29.120"></status>
</kw>
<msg timestamp="20201030 15:57:29.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040376222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040480681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:28.757" endtime="20201030 15:57:29.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040376222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040480681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:29.129" endtime="20201030 15:57:29.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.148" endtime="20201030 15:57:29.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.749" endtime="20201030 15:57:29.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.744" endtime="20201030 15:57:29.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:29.165" level="INFO">${RESULT} = [{'diff': 0.00010445899999999425}, {'diff': 0.00010486099999999776}, {'diff': 0.00010441699999999554}, {'diff': 0.0001042360000000006}, {'diff': 0.00010408400000000428}, {'diff': 0.0001042919999999988...</msg>
<status status="PASS" starttime="20201030 15:57:29.156" endtime="20201030 15:57:29.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:29.174" level="INFO">${ACCURACY} = {'diff': [0.00010445899999999425, 0.00010486099999999776, 0.00010441699999999554, 0.0001042360000000006, 0.00010408400000000428, 0.00010429199999999889, 0.00010452799999999957, 0.00010398600000000036,...</msg>
<status status="PASS" starttime="20201030 15:57:29.167" endtime="20201030 15:57:29.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.186" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:57:29.183" endtime="20201030 15:57:29.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.191" level="INFO">VALUE: [0.00010445899999999425, 0.00010486099999999776, 0.00010441699999999554, 0.0001042360000000006, 0.00010408400000000428, 0.00010429199999999889, 0.00010452799999999957, 0.00010398600000000036, 0.00010462499999999708, 0.0001043480000000041, 0.00010399999999999993, 0.00010475000000000068, 0.00010444499999999468, 0.00010445800000000172, 0.00010419500000000137, 0.00010433299999999812, 0.00010476400000000025, 0.00010459699999999794, 0.0001047219999999946, 0.00010452700000000009, 0.00010399999999999993, 0.00010437499999999683, 0.00010412500000000352, 0.00010462499999999708, 0.00010422200000000104, 0.00010461200000000392, 0.000104514, 0.00010445799999999478, 0.00010437499999999683, 0.00010443000000000258, 0.00010493099999999561, 0.00010462500000000402, 0.00010448600000000086, 0.00010447300000000076, 0.0001045559999999987, 0.00010415300000000266, 0.00010444399999999521, 0.00010480599999999896, 0.00010398600000000036, 0.0001047219999999946, 0.00010394399999999471, 0.00010426399999999975, 0.00010462500000000402, 0.00010466699999999579, 0.00010452799999999957, 0.00010408400000000428, 0.0001045689999999988, 0.00010440200000000344, 0.00010418000000000233, 0.00010466700000000273]</msg>
<status status="PASS" starttime="20201030 15:57:29.188" endtime="20201030 15:57:29.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.176" endtime="20201030 15:57:29.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:29.204" endtime="20201030 15:57:29.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.199" endtime="20201030 15:57:29.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.197" endtime="20201030 15:57:29.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.683" endtime="20201030 15:57:29.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.682" endtime="20201030 15:57:29.229"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.252" endtime="20201030 15:57:29.276"></status>
</kw>
<msg timestamp="20201030 15:57:29.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:29.249" endtime="20201030 15:57:29.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:29.280" endtime="20201030 15:57:29.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.286" endtime="20201030 15:57:29.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.242" endtime="20201030 15:57:29.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.236" endtime="20201030 15:57:29.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.310" endtime="20201030 15:57:29.668"></status>
</kw>
<msg timestamp="20201030 15:57:29.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042069528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042174583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:29.306" endtime="20201030 15:57:29.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042069528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042174583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:29.678" endtime="20201030 15:57:29.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.697" endtime="20201030 15:57:29.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.299" endtime="20201030 15:57:29.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.294" endtime="20201030 15:57:29.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:29.714" level="INFO">${RESULT} = [{'diff': 0.00010505499999999973}, {'diff': 0.00010526400000000075}, {'diff': 0.00010581999999999953}, {'diff': 0.00010486099999999776}, {'diff': 0.0001055559999999997}, {'diff': 0.0001048610000000047...</msg>
<status status="PASS" starttime="20201030 15:57:29.705" endtime="20201030 15:57:29.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:29.723" level="INFO">${ACCURACY} = {'diff': [0.00010505499999999973, 0.00010526400000000075, 0.00010581999999999953, 0.00010486099999999776, 0.0001055559999999997, 0.0001048610000000047, 0.00010550000000000143, 0.00010558299999999937, ...</msg>
<status status="PASS" starttime="20201030 15:57:29.716" endtime="20201030 15:57:29.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.734" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:57:29.732" endtime="20201030 15:57:29.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.740" level="INFO">VALUE: [0.00010505499999999973, 0.00010526400000000075, 0.00010581999999999953, 0.00010486099999999776, 0.0001055559999999997, 0.0001048610000000047, 0.00010550000000000143, 0.00010558299999999937, 0.0001058480000000056, 0.00010515299999999672, 0.00010577800000000082, 0.000105514000000001, 0.00010530499999999998, 0.00010576400000000125, 0.00010567999999999689, 0.00010577800000000082, 0.00010569399999999646, 0.00010543099999999611, 0.000105514000000001, 0.00010559699999999894, 0.00010490299999999647, 0.00010543000000000358, 0.00010570800000000297, 0.00010586099999999876, 0.00010520800000000247, 0.00010508399999999835, 0.00010538900000000434, 0.00010587499999999833, 0.0001056940000000034, 0.00010534799999999817, 0.0001056940000000034, 0.00010504199999999964, 0.000105514000000001, 0.00010513900000000409, 0.0001057360000000021, 0.00010559799999999842, 0.00010529199999999989, 0.00010501299999999408, 0.00010534699999999869, 0.00010495900000000169, 0.00010562500000000502, 0.00010526400000000075, 0.00010512500000000452, 0.00010540300000000391, 0.00010490300000000341, 0.00010544400000000315, 0.00010591700000000398, 0.00010522300000000151, 0.00010511100000000495, 0.00010582000000000646]</msg>
<status status="PASS" starttime="20201030 15:57:29.737" endtime="20201030 15:57:29.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.725" endtime="20201030 15:57:29.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:29.758" endtime="20201030 15:57:29.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.748" endtime="20201030 15:57:29.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.745" endtime="20201030 15:57:29.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.231" endtime="20201030 15:57:29.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.230" endtime="20201030 15:57:29.784"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.807" endtime="20201030 15:57:29.829"></status>
</kw>
<msg timestamp="20201030 15:57:29.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:29.804" endtime="20201030 15:57:29.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:29.833" endtime="20201030 15:57:29.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.839" endtime="20201030 15:57:29.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.796" endtime="20201030 15:57:29.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.790" endtime="20201030 15:57:29.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.863" endtime="20201030 15:57:30.222"></status>
</kw>
<msg timestamp="20201030 15:57:30.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040579944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040686444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:29.860" endtime="20201030 15:57:30.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040579944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040686444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:30.231" endtime="20201030 15:57:30.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.250" endtime="20201030 15:57:30.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.852" endtime="20201030 15:57:30.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.847" endtime="20201030 15:57:30.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:30.271" level="INFO">${RESULT} = [{'diff': 0.00010650000000000243}, {'diff': 0.00010677800000000182}, {'diff': 0.000106514000000002}, {'diff': 0.00010659800000000635}, {'diff': 0.00010658300000000037}, {'diff': 0.00010684799999999967...</msg>
<status status="PASS" starttime="20201030 15:57:30.259" endtime="20201030 15:57:30.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:30.281" level="INFO">${ACCURACY} = {'diff': [0.00010650000000000243, 0.00010677800000000182, 0.000106514000000002, 0.00010659800000000635, 0.00010658300000000037, 0.00010684799999999967, 0.00010606999999999978, 0.00010595800000000322, ...</msg>
<status status="PASS" starttime="20201030 15:57:30.273" endtime="20201030 15:57:30.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.292" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:57:30.290" endtime="20201030 15:57:30.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.297" level="INFO">VALUE: [0.00010650000000000243, 0.00010677800000000182, 0.000106514000000002, 0.00010659800000000635, 0.00010658300000000037, 0.00010684799999999967, 0.00010606999999999978, 0.00010595800000000322, 0.00010647199999999635, 0.00010595799999999628, 0.0001065560000000007, 0.00010667999999999789, 0.00010679200000000139, 0.00010600000000000193, 0.00010595900000000269, 0.00010611199999999849, 0.00010649999999999549, 0.00010624999999999524, 0.0001067769999999954, 0.00010594399999999671, 0.00010584699999999919, 0.00010654200000000114, 0.0001067219999999966, 0.0001060419999999937, 0.00010651399999999506, 0.000106514000000002, 0.0001062360000000026, 0.00010611099999999901, 0.00010683300000000062, 0.00010675000000000268, 0.00010651300000000252, 0.00010670900000000344, 0.00010611099999999901, 0.00010680499999999454, 0.00010652700000000209, 0.0001068889999999989, 0.00010680600000000096, 0.00010629200000000089, 0.00010608399999999935, 0.00010637499999999883, 0.00010618099999999686, 0.00010622299999999557, 0.000106514000000002, 0.00010616599999999782, 0.00010662499999999908, 0.00010593100000000355, 0.00010608299999999987, 0.00010681999999999359, 0.00010645899999999625, 0.00010666699999999779]</msg>
<status status="PASS" starttime="20201030 15:57:30.294" endtime="20201030 15:57:30.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.283" endtime="20201030 15:57:30.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:30.310" endtime="20201030 15:57:30.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.305" endtime="20201030 15:57:30.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.303" endtime="20201030 15:57:30.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.786" endtime="20201030 15:57:30.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.785" endtime="20201030 15:57:30.335"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.357" endtime="20201030 15:57:30.376"></status>
</kw>
<msg timestamp="20201030 15:57:30.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:30.354" endtime="20201030 15:57:30.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:30.380" endtime="20201030 15:57:30.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.386" endtime="20201030 15:57:30.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.347" endtime="20201030 15:57:30.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.341" endtime="20201030 15:57:30.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.409" endtime="20201030 15:57:30.744"></status>
</kw>
<msg timestamp="20201030 15:57:30.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039106153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039213278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:30.406" endtime="20201030 15:57:30.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039106153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039213278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:30.753" endtime="20201030 15:57:30.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.771" endtime="20201030 15:57:30.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.398" endtime="20201030 15:57:30.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.394" endtime="20201030 15:57:30.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:30.789" level="INFO">${RESULT} = [{'diff': 0.00010712499999999958}, {'diff': 0.00010784700000000119}, {'diff': 0.0001072360000000036}, {'diff': 0.00010769399999999846}, {'diff': 0.00010702800000000207}, {'diff': 0.0001075269999999961...</msg>
<status status="PASS" starttime="20201030 15:57:30.780" endtime="20201030 15:57:30.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:30.800" level="INFO">${ACCURACY} = {'diff': [0.00010712499999999958, 0.00010784700000000119, 0.0001072360000000036, 0.00010769399999999846, 0.00010702800000000207, 0.00010752699999999615, 0.00010730599999999452, 0.0001072769999999959, ...</msg>
<status status="PASS" starttime="20201030 15:57:30.791" endtime="20201030 15:57:30.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.811" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:57:30.808" endtime="20201030 15:57:30.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.816" level="INFO">VALUE: [0.00010712499999999958, 0.00010784700000000119, 0.0001072360000000036, 0.00010769399999999846, 0.00010702800000000207, 0.00010752699999999615, 0.00010730599999999452, 0.0001072769999999959, 0.00010708300000000087, 0.00010780500000000248, 0.00010740300000000591, 0.00010717999999999839, 0.00010747200000000429, 0.00010748600000000386, 0.00010726400000000275, 0.00010704200000000164, 0.00010767999999999889, 0.00010772299999999707, 0.00010742999999999864, 0.00010712500000000652, 0.00010727800000000232, 0.00010725000000000318, 0.00010781900000000205, 0.00010713899999999915, 0.00010744499999999768, 0.00010748700000000333, 0.00010731900000000155, 0.00010711100000000001, 0.00010752700000000309, 0.00010740299999999897, 0.00010736100000000026, 0.0001075560000000017, 0.00010742999999999864, 0.00010736100000000026, 0.0001070690000000013, 0.00010740299999999897, 0.00010700000000000293, 0.00010758299999999443, 0.00010777800000000282, 0.00010704099999999522, 0.00010749999999999649, 0.00010779100000000291, 0.00010762500000000008, 0.00010743099999999811, 0.00010702800000000207, 0.00010705599999999427, 0.00010691699999999804, 0.00010747300000000376, 0.00010712499999999958, 0.00010702799999999513]</msg>
<status status="PASS" starttime="20201030 15:57:30.813" endtime="20201030 15:57:30.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.801" endtime="20201030 15:57:30.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:30.829" endtime="20201030 15:57:30.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.824" endtime="20201030 15:57:30.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.822" endtime="20201030 15:57:30.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.337" endtime="20201030 15:57:30.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.336" endtime="20201030 15:57:30.854"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.876" endtime="20201030 15:57:30.896"></status>
</kw>
<msg timestamp="20201030 15:57:30.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:30.873" endtime="20201030 15:57:30.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:30.899" endtime="20201030 15:57:30.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.906" endtime="20201030 15:57:30.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.866" endtime="20201030 15:57:30.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.860" endtime="20201030 15:57:30.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.929" endtime="20201030 15:57:31.280"></status>
</kw>
<msg timestamp="20201030 15:57:31.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039899514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040008222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:30.926" endtime="20201030 15:57:31.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039899514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040008222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:31.289" endtime="20201030 15:57:31.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.308" endtime="20201030 15:57:31.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.919" endtime="20201030 15:57:31.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.914" endtime="20201030 15:57:31.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:31.325" level="INFO">${RESULT} = [{'diff': 0.00010870800000000597}, {'diff': 0.00010802799999999613}, {'diff': 0.00010816599999999982}, {'diff': 0.0001083890000000004}, {'diff': 0.00010826400000000375}, {'diff': 0.0001085830000000023...</msg>
<status status="PASS" starttime="20201030 15:57:31.316" endtime="20201030 15:57:31.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:31.334" level="INFO">${ACCURACY} = {'diff': [0.00010870800000000597, 0.00010802799999999613, 0.00010816599999999982, 0.0001083890000000004, 0.00010826400000000375, 0.00010858300000000237, 0.00010809700000000144, 0.00010865200000000075,...</msg>
<status status="PASS" starttime="20201030 15:57:31.327" endtime="20201030 15:57:31.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.345" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:57:31.343" endtime="20201030 15:57:31.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.350" level="INFO">VALUE: [0.00010870800000000597, 0.00010802799999999613, 0.00010816599999999982, 0.0001083890000000004, 0.00010826400000000375, 0.00010858300000000237, 0.00010809700000000144, 0.00010865200000000075, 0.00010847199999999835, 0.00010813900000000015, 0.00010884700000000219, 0.00010845899999999825, 0.00010799999999999699, 0.00010809700000000144, 0.00010854200000000314, 0.00010811100000000101, 0.0001078889999999999, 0.00010827800000000332, 0.0001080560000000022, 0.0001080969999999945, 0.00010848599999999792, 0.0001085560000000027, 0.00010876400000000425, 0.00010851399999999706, 0.00010873599999999817, 0.00010879100000000391, 0.00010822200000000504, 0.00010880600000000296, 0.00010816699999999929, 0.00010840299999999997, 0.00010895799999999928, 0.00010891700000000004, 0.00010843099999999911, 0.00010798599999999742, 0.00010849999999999749, 0.00010877800000000382, 0.00010844399999999921, 0.00010880600000000296, 0.00010816699999999929, 0.00010858300000000237, 0.00010818099999999886, 0.00010808400000000135, 0.00010831899999999561, 0.00010827799999999638, 0.00010854100000000366, 0.00010880600000000296, 0.00010845899999999825, 0.00010861100000000151, 0.00010808299999999493, 0.00010805500000000273]</msg>
<status status="PASS" starttime="20201030 15:57:31.347" endtime="20201030 15:57:31.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.336" endtime="20201030 15:57:31.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:31.363" endtime="20201030 15:57:31.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.359" endtime="20201030 15:57:31.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.356" endtime="20201030 15:57:31.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.856" endtime="20201030 15:57:31.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.855" endtime="20201030 15:57:31.388"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.411" endtime="20201030 15:57:31.433"></status>
</kw>
<msg timestamp="20201030 15:57:31.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:31.407" endtime="20201030 15:57:31.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:31.437" endtime="20201030 15:57:31.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.443" endtime="20201030 15:57:31.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.400" endtime="20201030 15:57:31.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.394" endtime="20201030 15:57:31.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.466" endtime="20201030 15:57:31.817"></status>
</kw>
<msg timestamp="20201030 15:57:31.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041284028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041393319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:31.463" endtime="20201030 15:57:31.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041284028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041393319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:31.826" endtime="20201030 15:57:31.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.844" endtime="20201030 15:57:31.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.456" endtime="20201030 15:57:31.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.451" endtime="20201030 15:57:31.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:31.862" level="INFO">${RESULT} = [{'diff': 0.00010929099999999747}, {'diff': 0.00010966600000000132}, {'diff': 0.00010927799999999738}, {'diff': 0.00010902799999999713}, {'diff': 0.00010984700000000319}, {'diff': 0.000109333999999995...</msg>
<status status="PASS" starttime="20201030 15:57:31.853" endtime="20201030 15:57:31.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:31.871" level="INFO">${ACCURACY} = {'diff': [0.00010929099999999747, 0.00010966600000000132, 0.00010927799999999738, 0.00010902799999999713, 0.00010984700000000319, 0.00010933399999999566, 0.00010936099999999532, 0.00010948599999999892...</msg>
<status status="PASS" starttime="20201030 15:57:31.864" endtime="20201030 15:57:31.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.882" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:57:31.879" endtime="20201030 15:57:31.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.887" level="INFO">VALUE: [0.00010929099999999747, 0.00010966600000000132, 0.00010927799999999738, 0.00010902799999999713, 0.00010984700000000319, 0.00010933399999999566, 0.00010936099999999532, 0.00010948599999999892, 0.00010976399999999831, 0.00010923599999999867, 0.00010967999999999395, 0.00010894399999999971, 0.00010897200000000579, 0.000109902000000002, 0.00010933300000000312, 0.00010926399999999781, 0.00010901399999999756, 0.00010963800000000218, 0.00010956999999999634, 0.00010975000000000568, 0.00010958400000000285, 0.00010922200000000604, 0.00010930500000000398, 0.00010934700000000269, 0.00010974999999999874, 0.00010898699999999789, 0.0001097219999999996, 0.00010919499999999943, 0.00010919399999999996, 0.00010934700000000269, 0.00010949999999999849, 0.00010981900000000405, 0.00010941700000000054, 0.00010968100000000036, 0.00010940300000000097, 0.00010895800000000622, 0.00010911100000000201, 0.00010941700000000054, 0.00010936200000000174, 0.00010958299999999643, 0.00010894399999999971, 0.00010911100000000201, 0.00010969400000000046, 0.00010902800000000407, 0.00010926399999999781, 0.00010918000000000039, 0.00010901399999999756, 0.00010969400000000046, 0.00010962500000000208, 0.00010959700000000294]</msg>
<status status="PASS" starttime="20201030 15:57:31.884" endtime="20201030 15:57:31.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.872" endtime="20201030 15:57:31.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:31.901" endtime="20201030 15:57:31.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.895" endtime="20201030 15:57:31.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.893" endtime="20201030 15:57:31.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.390" endtime="20201030 15:57:31.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.389" endtime="20201030 15:57:31.926"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.950" endtime="20201030 15:57:31.971"></status>
</kw>
<msg timestamp="20201030 15:57:31.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:31.946" endtime="20201030 15:57:31.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:31.974" endtime="20201030 15:57:31.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.980" endtime="20201030 15:57:31.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.939" endtime="20201030 15:57:31.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.933" endtime="20201030 15:57:31.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:32.004" endtime="20201030 15:57:32.354"></status>
</kw>
<msg timestamp="20201030 15:57:32.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0404165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040526514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:57:32.001" endtime="20201030 15:57:32.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0404165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040526514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:57:32.364" endtime="20201030 15:57:32.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:32.382" endtime="20201030 15:57:32.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.993" endtime="20201030 15:57:32.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.989" endtime="20201030 15:57:32.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:32.399" level="INFO">${RESULT} = [{'diff': 0.00011001399999999856}, {'diff': 0.00011012499999999564}, {'diff': 0.00011013899999999521}, {'diff': 0.00010998699999999889}, {'diff': 0.00011066700000000179}, {'diff': 0.000110527999999998...</msg>
<status status="PASS" starttime="20201030 15:57:32.390" endtime="20201030 15:57:32.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:32.409" level="INFO">${ACCURACY} = {'diff': [0.00011001399999999856, 0.00011012499999999564, 0.00011013899999999521, 0.00010998699999999889, 0.00011066700000000179, 0.00011052799999999863, 0.00011008299999999693, 0.00011074999999999974...</msg>
<status status="PASS" starttime="20201030 15:57:32.401" endtime="20201030 15:57:32.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.420" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:57:32.418" endtime="20201030 15:57:32.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.425" level="INFO">VALUE: [0.00011001399999999856, 0.00011012499999999564, 0.00011013899999999521, 0.00010998699999999889, 0.00011066700000000179, 0.00011052799999999863, 0.00011008299999999693, 0.00011074999999999974, 0.00010994399999999377, 0.00011037500000000283, 0.00011036100000000326, 0.00011008299999999693, 0.00011077799999999888, 0.00011024999999999924, 0.0001100969999999965, 0.00010998599999999942, 0.0001105560000000047, 0.00011015299999999478, 0.00011073600000000017, 0.00011036100000000326, 0.00011073600000000017, 0.00011045799999999384, 0.00011029100000000541, 0.00011008400000000335, 0.00011013900000000215, 0.00011077799999999888, 0.0001100969999999965, 0.00011016600000000182, 0.00011065300000000222, 0.00011082000000000453, 0.00011074999999999974, 0.00011056899999999786, 0.00011087499999999639, 0.00011056999999999734, 0.00011084699999999725, 0.0001100969999999965, 0.00010999999999999899, 0.00011054200000000514, 0.00011055599999999777, 0.00010997199999999985, 0.00011086100000000376, 0.00011074999999999974, 0.00011086099999999682, 0.00011048599999999992, 0.00011044500000000068, 0.00011008299999999693, 0.00011027799999999838, 0.00011091700000000204, 0.00011081999999999759, 0.00011084699999999725]</msg>
<status status="PASS" starttime="20201030 15:57:32.422" endtime="20201030 15:57:32.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.411" endtime="20201030 15:57:32.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:32.438" endtime="20201030 15:57:32.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.434" endtime="20201030 15:57:32.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.431" endtime="20201030 15:57:32.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.929" endtime="20201030 15:57:32.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.927" endtime="20201030 15:57:32.464"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:32.486" endtime="20201030 15:57:32.508"></status>
</kw>
<msg timestamp="20201030 15:57:32.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:32.483" endtime="20201030 15:57:32.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:32.511" endtime="20201030 15:57:32.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:32.517" endtime="20201030 15:57:32.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.476" endtime="20201030 15:57:32.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.470" endtime="20201030 15:57:32.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:32.541" endtime="20201030 15:57:32.891"></status>
</kw>
<msg timestamp="20201030 15:57:32.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040137181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040248514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:32.538" endtime="20201030 15:57:32.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040137181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040248514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:32.900" endtime="20201030 15:57:32.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:32.918" endtime="20201030 15:57:32.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.530" endtime="20201030 15:57:32.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.525" endtime="20201030 15:57:32.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:32.935" level="INFO">${RESULT} = [{'diff': 0.00011133299999999818}, {'diff': 0.00011181999999999859}, {'diff': 0.00011186099999999782}, {'diff': 0.00011133300000000512}, {'diff': 0.00011133299999999818}, {'diff': 0.000111401999999996...</msg>
<status status="PASS" starttime="20201030 15:57:32.926" endtime="20201030 15:57:32.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:32.946" level="INFO">${ACCURACY} = {'diff': [0.00011133299999999818, 0.00011181999999999859, 0.00011186099999999782, 0.00011133300000000512, 0.00011133299999999818, 0.00011140199999999656, 0.00011144500000000168, 0.00011193100000000261...</msg>
<status status="PASS" starttime="20201030 15:57:32.937" endtime="20201030 15:57:32.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.957" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:57:32.955" endtime="20201030 15:57:32.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.962" level="INFO">VALUE: [0.00011133299999999818, 0.00011181999999999859, 0.00011186099999999782, 0.00011133300000000512, 0.00011133299999999818, 0.00011140199999999656, 0.00011144500000000168, 0.00011193100000000261, 0.00011094400000000171, 0.00011163900000000365, 0.00011115299999999578, 0.00011115200000000325, 0.00011172199999999466, 0.00011115300000000272, 0.00011145800000000178, 0.00011115299999999578, 0.0001110969999999975, 0.00011151300000000058, 0.00011193100000000261, 0.00011188899999999696, 0.00011113900000000315, 0.00011190299999999653, 0.00011155500000000623, 0.0001113890000000034, 0.00011148600000000092, 0.00011115300000000272, 0.00011194400000000271, 0.00011162500000000408, 0.0001115549999999993, 0.00011147199999999441, 0.00011182000000000553, 0.00011127799999999938, 0.00011154099999999972, 0.00011187499999999739, 0.00011145800000000178, 0.00011176400000000031, 0.00011109799999999698, 0.00011112500000000358, 0.00011143100000000211, 0.00011137499999999689, 0.00011154099999999972, 0.00011144499999999474, 0.00011107000000000478, 0.00011137499999999689, 0.00011130499999999904, 0.00011180599999999902, 0.00011158399999999791, 0.00011152799999999963, 0.00011172300000000107, 0.00011134699999999775]</msg>
<status status="PASS" starttime="20201030 15:57:32.959" endtime="20201030 15:57:32.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.948" endtime="20201030 15:57:32.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:32.975" endtime="20201030 15:57:32.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.971" endtime="20201030 15:57:32.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.968" endtime="20201030 15:57:32.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.466" endtime="20201030 15:57:33.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.465" endtime="20201030 15:57:33.001"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.023" endtime="20201030 15:57:33.044"></status>
</kw>
<msg timestamp="20201030 15:57:33.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:33.020" endtime="20201030 15:57:33.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:33.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:33.048" endtime="20201030 15:57:33.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.054" endtime="20201030 15:57:33.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.013" endtime="20201030 15:57:33.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.007" endtime="20201030 15:57:33.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.077" endtime="20201030 15:57:33.416"></status>
</kw>
<msg timestamp="20201030 15:57:33.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04006125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040173833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:33.074" endtime="20201030 15:57:33.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:33.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04006125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040173833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:33.426" endtime="20201030 15:57:33.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.444" endtime="20201030 15:57:33.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.067" endtime="20201030 15:57:33.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.062" endtime="20201030 15:57:33.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:33.461" level="INFO">${RESULT} = [{'diff': 0.00011258299999999943}, {'diff': 0.0001128890000000049}, {'diff': 0.0001127090000000025}, {'diff': 0.00011265299999999728}, {'diff': 0.000112209000000002}, {'diff': 0.00011216700000000329},...</msg>
<status status="PASS" starttime="20201030 15:57:33.453" endtime="20201030 15:57:33.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:33.470" level="INFO">${ACCURACY} = {'diff': [0.00011258299999999943, 0.0001128890000000049, 0.0001127090000000025, 0.00011265299999999728, 0.000112209000000002, 0.00011216700000000329, 0.00011233399999999866, 0.00011216599999999688, 0....</msg>
<status status="PASS" starttime="20201030 15:57:33.463" endtime="20201030 15:57:33.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:33.481" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:57:33.479" endtime="20201030 15:57:33.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:33.487" level="INFO">VALUE: [0.00011258299999999943, 0.0001128890000000049, 0.0001127090000000025, 0.00011265299999999728, 0.000112209000000002, 0.00011216700000000329, 0.00011233399999999866, 0.00011216599999999688, 0.00011255599999999977, 0.00011233300000000612, 0.0001122220000000021, 0.00011233300000000612, 0.00011297199999999591, 0.00011205599999999927, 0.00011230500000000004, 0.00011286099999999882, 0.0001125420000000002, 0.0001124299999999967, 0.00011286100000000576, 0.00011215199999999731, 0.0001120419999999997, 0.00011262499999999814, 0.00011243100000000311, 0.0001127220000000026, 0.00011290299999999753, 0.00011205599999999927, 0.00011229199999999995, 0.00011295899999999581, 0.00011243099999999617, 0.00011261099999999857, 0.00011223600000000167, 0.00011290199999999806, 0.00011208399999999841, 0.00011249999999999455, 0.00011272199999999566, 0.00011244500000000268, 0.00011244499999999574, 0.00011204100000000022, 0.0001125420000000002, 0.00011248599999999498, 0.00011198600000000142, 0.00011226400000000081, 0.0001127770000000014, 0.00011263799999999824, 0.0001120560000000062, 0.00011259700000000594, 0.00011286099999999882, 0.00011290299999999753, 0.00011245800000000278, 0.00011213899999999721]</msg>
<status status="PASS" starttime="20201030 15:57:33.483" endtime="20201030 15:57:33.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.472" endtime="20201030 15:57:33.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:33.499" endtime="20201030 15:57:33.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.495" endtime="20201030 15:57:33.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.492" endtime="20201030 15:57:33.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.003" endtime="20201030 15:57:33.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.001" endtime="20201030 15:57:33.524"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.547" endtime="20201030 15:57:33.569"></status>
</kw>
<msg timestamp="20201030 15:57:33.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:33.544" endtime="20201030 15:57:33.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:33.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:33.572" endtime="20201030 15:57:33.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.578" endtime="20201030 15:57:33.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.537" endtime="20201030 15:57:33.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.531" endtime="20201030 15:57:33.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.602" endtime="20201030 15:57:33.938"></status>
</kw>
<msg timestamp="20201030 15:57:33.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041621139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041734792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:33.599" endtime="20201030 15:57:33.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:33.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041621139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041734792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:33.948" endtime="20201030 15:57:33.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.966" endtime="20201030 15:57:33.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.592" endtime="20201030 15:57:33.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.587" endtime="20201030 15:57:33.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:33.983" level="INFO">${RESULT} = [{'diff': 0.00011365299999999828}, {'diff': 0.0001130550000000008}, {'diff': 0.00011344500000000368}, {'diff': 0.00011391599999999863}, {'diff': 0.00011308299999999993}, {'diff': 0.0001134299999999977...</msg>
<status status="PASS" starttime="20201030 15:57:33.974" endtime="20201030 15:57:33.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:33.992" level="INFO">${ACCURACY} = {'diff': [0.00011365299999999828, 0.0001130550000000008, 0.00011344500000000368, 0.00011391599999999863, 0.00011308299999999993, 0.0001134299999999977, 0.00011368099999999742, 0.00011308299999999993, ...</msg>
<status status="PASS" starttime="20201030 15:57:33.985" endtime="20201030 15:57:33.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.005" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:57:34.001" endtime="20201030 15:57:34.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.012" level="INFO">VALUE: [0.00011365299999999828, 0.0001130550000000008, 0.00011344500000000368, 0.00011391599999999863, 0.00011308299999999993, 0.0001134299999999977, 0.00011368099999999742, 0.00011308299999999993, 0.00011344400000000421, 0.00011384700000000025, 0.00011365299999999828, 0.00011365199999999881, 0.00011370800000000403, 0.00011372199999999666, 0.00011376399999999537, 0.00011330600000000052, 0.00011313900000000515, 0.00011344499999999674, 0.00011327800000000138, 0.00011388899999999896, 0.00011363899999999871, 0.00011363899999999871, 0.00011356900000000086, 0.00011352799999999469, 0.00011338799999999899, 0.00011388899999999896, 0.00011395899999999681, 0.00011345799999999684, 0.00011373599999999623, 0.00011382000000000059, 0.00011395799999999734, 0.00011322199999999616, 0.00011302800000000113, 0.00011345899999999631, 0.00011313899999999821, 0.00011327800000000138, 0.00011345800000000378, 0.00011333399999999966, 0.0001133749999999989, 0.00011384700000000025, 0.00011332000000000009, 0.00011373599999999623, 0.00011394500000000418, 0.00011384700000000025, 0.00011397200000000385, 0.00011367999999999795, 0.00011352700000000215, 0.00011343099999999717, 0.00011297199999999591, 0.00011316700000000429]</msg>
<status status="PASS" starttime="20201030 15:57:34.009" endtime="20201030 15:57:34.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.994" endtime="20201030 15:57:34.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:34.027" endtime="20201030 15:57:34.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.021" endtime="20201030 15:57:34.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.018" endtime="20201030 15:57:34.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.526" endtime="20201030 15:57:34.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.525" endtime="20201030 15:57:34.053"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.075" endtime="20201030 15:57:34.095"></status>
</kw>
<msg timestamp="20201030 15:57:34.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:34.072" endtime="20201030 15:57:34.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:34.099" endtime="20201030 15:57:34.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.105" endtime="20201030 15:57:34.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.065" endtime="20201030 15:57:34.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.059" endtime="20201030 15:57:34.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.128" endtime="20201030 15:57:34.473"></status>
</kw>
<msg timestamp="20201030 15:57:34.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039856819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039971528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:34.125" endtime="20201030 15:57:34.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039856819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039971528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:34.482" endtime="20201030 15:57:34.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.501" endtime="20201030 15:57:34.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.118" endtime="20201030 15:57:34.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.113" endtime="20201030 15:57:34.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:34.518" level="INFO">${RESULT} = [{'diff': 0.00011470899999999756}, {'diff': 0.00011472199999999766}, {'diff': 0.00011477800000000288}, {'diff': 0.00011454100000000272}, {'diff': 0.00011465299999999928}, {'diff': 0.000114957999999998...</msg>
<status status="PASS" starttime="20201030 15:57:34.509" endtime="20201030 15:57:34.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:34.528" level="INFO">${ACCURACY} = {'diff': [0.00011470899999999756, 0.00011472199999999766, 0.00011477800000000288, 0.00011454100000000272, 0.00011465299999999928, 0.00011495799999999834, 0.00011433300000000118, 0.00011457000000000134...</msg>
<status status="PASS" starttime="20201030 15:57:34.520" endtime="20201030 15:57:34.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.539" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:57:34.537" endtime="20201030 15:57:34.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.545" level="INFO">VALUE: [0.00011470899999999756, 0.00011472199999999766, 0.00011477800000000288, 0.00011454100000000272, 0.00011465299999999928, 0.00011495799999999834, 0.00011433300000000118, 0.00011457000000000134, 0.00011479099999999604, 0.00011416599999999888, 0.00011430500000000204, 0.0001147220000000046, 0.00011431900000000161, 0.00011393099999999767, 0.00011449999999999655, 0.00011495799999999834, 0.00011420899999999706, 0.0001144299999999987, 0.00011484800000000073, 0.00011466699999999885, 0.0001148750000000004, 0.00011455499999999535, 0.00011497199999999791, 0.00011466700000000579, 0.0001142770000000029, 0.00011394499999999724, 0.00011406900000000136, 0.00011493099999999867, 0.0001149299999999992, 0.00011418100000000486, 0.00011402800000000213, 0.00011497199999999791, 0.00011497200000000485, 0.00011434700000000075, 0.00011411100000000007, 0.00011462500000000014, 0.00011462500000000014, 0.00011427699999999597, 0.0001142499999999963, 0.00011476399999999637, 0.00011420799999999759, 0.00011465300000000622, 0.00011467999999999895, 0.0001147629999999969, 0.0001149299999999992, 0.0001147770000000034, 0.00011429100000000247, 0.00011498599999999748, 0.00011444500000000468, 0.00011402800000000213]</msg>
<status status="PASS" starttime="20201030 15:57:34.542" endtime="20201030 15:57:34.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.530" endtime="20201030 15:57:34.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:34.557" endtime="20201030 15:57:34.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.553" endtime="20201030 15:57:34.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.550" endtime="20201030 15:57:34.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.055" endtime="20201030 15:57:34.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.053" endtime="20201030 15:57:34.582"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.605" endtime="20201030 15:57:34.625"></status>
</kw>
<msg timestamp="20201030 15:57:34.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:34.602" endtime="20201030 15:57:34.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:34.629" endtime="20201030 15:57:34.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.635" endtime="20201030 15:57:34.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.595" endtime="20201030 15:57:34.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.589" endtime="20201030 15:57:34.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.658" endtime="20201030 15:57:34.995"></status>
</kw>
<msg timestamp="20201030 15:57:35.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039945514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040061361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:34.655" endtime="20201030 15:57:35.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039945514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040061361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:35.004" endtime="20201030 15:57:35.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.023" endtime="20201030 15:57:35.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.648" endtime="20201030 15:57:35.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.643" endtime="20201030 15:57:35.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:35.040" level="INFO">${RESULT} = [{'diff': 0.00011584699999999531}, {'diff': 0.00011570899999999856}, {'diff': 0.00011567999999999995}, {'diff': 0.0001155699999999954}, {'diff': 0.0001159170000000001}, {'diff': 0.00011590300000000053...</msg>
<status status="PASS" starttime="20201030 15:57:35.031" endtime="20201030 15:57:35.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:35.055" level="INFO">${ACCURACY} = {'diff': [0.00011584699999999531, 0.00011570899999999856, 0.00011567999999999995, 0.0001155699999999954, 0.0001159170000000001, 0.00011590300000000053, 0.00011565199999999387, 0.00011594499999999924, ...</msg>
<status status="PASS" starttime="20201030 15:57:35.042" endtime="20201030 15:57:35.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.066" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:57:35.064" endtime="20201030 15:57:35.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.071" level="INFO">VALUE: [0.00011584699999999531, 0.00011570899999999856, 0.00011567999999999995, 0.0001155699999999954, 0.0001159170000000001, 0.00011590300000000053, 0.00011565199999999387, 0.00011594499999999924, 0.00011563899999999377, 0.00011519399999999902, 0.0001153750000000009, 0.00011580600000000302, 0.00011552799999999669, 0.00011586099999999488, 0.00011543099999999917, 0.00011536100000000132, 0.00011532000000000209, 0.00011576400000000431, 0.0001157499999999978, 0.00011551399999999712, 0.00011545799999999884, 0.00011551399999999712, 0.00011513900000000021, 0.00011518099999999892, 0.00011500000000000399, 0.00011581999999999565, 0.00011552800000000363, 0.00011526400000000381, 0.00011493100000000561, 0.00011534699999999481, 0.00011502799999999619, 0.00011527800000000338, 0.00011575000000000474, 0.00011552800000000363, 0.00011569399999999952, 0.00011569500000000593, 0.00011515299999999978, 0.00011548699999999745, 0.00011511100000000107, 0.0001154169999999996, 0.00011525000000000424, 0.00011597299999999838, 0.00011529200000000295, 0.00011511100000000107, 0.00011565300000000028, 0.00011508300000000193, 0.00011562500000000114, 0.00011520799999999859, 0.00011500000000000399, 0.00011563900000000071]</msg>
<status status="PASS" starttime="20201030 15:57:35.068" endtime="20201030 15:57:35.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.057" endtime="20201030 15:57:35.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:35.084" endtime="20201030 15:57:35.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.079" endtime="20201030 15:57:35.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.077" endtime="20201030 15:57:35.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.584" endtime="20201030 15:57:35.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.583" endtime="20201030 15:57:35.109"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.131" endtime="20201030 15:57:35.153"></status>
</kw>
<msg timestamp="20201030 15:57:35.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:35.128" endtime="20201030 15:57:35.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:35.156" endtime="20201030 15:57:35.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.162" endtime="20201030 15:57:35.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.121" endtime="20201030 15:57:35.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.115" endtime="20201030 15:57:35.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.186" endtime="20201030 15:57:35.536"></status>
</kw>
<msg timestamp="20201030 15:57:35.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039642833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039759083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:35.182" endtime="20201030 15:57:35.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039642833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039759083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:35.546" endtime="20201030 15:57:35.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.564" endtime="20201030 15:57:35.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.175" endtime="20201030 15:57:35.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.170" endtime="20201030 15:57:35.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:35.581" level="INFO">${RESULT} = [{'diff': 0.0001162499999999983}, {'diff': 0.00011652699999999822}, {'diff': 0.00011665300000000128}, {'diff': 0.00011633299999999624}, {'diff': 0.00011694400000000077}, {'diff': 0.0001161119999999946...</msg>
<status status="PASS" starttime="20201030 15:57:35.572" endtime="20201030 15:57:35.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:35.590" level="INFO">${ACCURACY} = {'diff': [0.0001162499999999983, 0.00011652699999999822, 0.00011665300000000128, 0.00011633299999999624, 0.00011694400000000077, 0.00011611199999999461, 0.00011633299999999624, 0.00011648600000000592,...</msg>
<status status="PASS" starttime="20201030 15:57:35.583" endtime="20201030 15:57:35.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.601" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:57:35.599" endtime="20201030 15:57:35.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.606" level="INFO">VALUE: [0.0001162499999999983, 0.00011652699999999822, 0.00011665300000000128, 0.00011633299999999624, 0.00011694400000000077, 0.00011611199999999461, 0.00011633299999999624, 0.00011648600000000592, 0.00011643100000000017, 0.00011670899999999956, 0.00011687499999999545, 0.00011670800000000009, 0.0001169170000000011, 0.00011640300000000103, 0.00011654099999999779, 0.00011697199999999991, 0.00011694400000000077, 0.00011602799999999719, 0.00011643100000000017, 0.00011672199999999966, 0.00011651400000000506, 0.00011682000000000359, 0.0001166249999999952, 0.00011638900000000146, 0.0001165829999999965, 0.0001160420000000037, 0.00011665300000000128, 0.00011651399999999812, 0.00011673600000000617, 0.00011616600000000088, 0.00011604100000000422, 0.00011602799999999719, 0.0001163750000000019, 0.00011620899999999906, 0.0001164300000000007, 0.00011670800000000009, 0.00011657000000000334, 0.00011657000000000334, 0.00011644400000000027, 0.00011619400000000002, 0.00011655600000000377, 0.00011613900000000121, 0.00011659800000000248, 0.00011670800000000009, 0.00011668100000000042, 0.00011666700000000085, 0.00011661099999999563, 0.00011683300000000368, 0.00011640300000000103, 0.0001165699999999964]</msg>
<status status="PASS" starttime="20201030 15:57:35.603" endtime="20201030 15:57:35.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.592" endtime="20201030 15:57:35.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:35.619" endtime="20201030 15:57:35.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.615" endtime="20201030 15:57:35.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.612" endtime="20201030 15:57:35.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.111" endtime="20201030 15:57:35.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.110" endtime="20201030 15:57:35.644"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.667" endtime="20201030 15:57:35.690"></status>
</kw>
<msg timestamp="20201030 15:57:35.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:35.664" endtime="20201030 15:57:35.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:35.694" endtime="20201030 15:57:35.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.700" endtime="20201030 15:57:35.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.656" endtime="20201030 15:57:35.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.651" endtime="20201030 15:57:35.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.723" endtime="20201030 15:57:36.073"></status>
</kw>
<msg timestamp="20201030 15:57:36.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041605236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041723236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:35.720" endtime="20201030 15:57:36.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041605236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041723236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:36.082" endtime="20201030 15:57:36.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.100" endtime="20201030 15:57:36.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.713" endtime="20201030 15:57:36.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.708" endtime="20201030 15:57:36.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:36.118" level="INFO">${RESULT} = [{'diff': 0.00011800000000000005}, {'diff': 0.0001174029999999951}, {'diff': 0.00011758400000000391}, {'diff': 0.00011740300000000203}, {'diff': 0.00011784699999999732}, {'diff': 0.0001178750000000034...</msg>
<status status="PASS" starttime="20201030 15:57:36.109" endtime="20201030 15:57:36.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:36.127" level="INFO">${ACCURACY} = {'diff': [0.00011800000000000005, 0.0001174029999999951, 0.00011758400000000391, 0.00011740300000000203, 0.00011784699999999732, 0.0001178750000000034, 0.00011722200000000016, 0.00011770800000000109, ...</msg>
<status status="PASS" starttime="20201030 15:57:36.120" endtime="20201030 15:57:36.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.137" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:57:36.135" endtime="20201030 15:57:36.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.143" level="INFO">VALUE: [0.00011800000000000005, 0.0001174029999999951, 0.00011758400000000391, 0.00011740300000000203, 0.00011784699999999732, 0.0001178750000000034, 0.00011722200000000016, 0.00011770800000000109, 0.00011763900000000271, 0.00011747200000000041, 0.00011715199999999537, 0.00011783399999999722, 0.00011772200000000066, 0.00011781899999999818, 0.00011736099999999638, 0.00011766600000000238, 0.00011793100000000167, 0.00011715300000000178, 0.00011773600000000023, 0.00011779200000000545, 0.00011769399999999458, 0.00011713800000000274, 0.00011784699999999732, 0.00011783299999999775, 0.0001175699999999974, 0.00011768100000000142, 0.00011757000000000434, 0.00011783399999999722, 0.00011804199999999876, 0.0001175829999999975, 0.00011738899999999552, 0.00011698599999999948, 0.00011690300000000153, 0.0001179029999999956, 0.00011761099999999663, 0.000117597000000004, 0.0001177369999999997, 0.00011759799999999654, 0.0001173049999999981, 0.00011738899999999552, 0.00011800000000000005, 0.00011755600000000477, 0.00011729199999999801, 0.00011786100000000382, 0.00011772200000000066, 0.0001170970000000035, 0.00011748599999999998, 0.00011708399999999647, 0.00011769400000000152, 0.00011716699999999441]</msg>
<status status="PASS" starttime="20201030 15:57:36.140" endtime="20201030 15:57:36.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.128" endtime="20201030 15:57:36.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:36.157" endtime="20201030 15:57:36.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.151" endtime="20201030 15:57:36.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.149" endtime="20201030 15:57:36.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.646" endtime="20201030 15:57:36.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.645" endtime="20201030 15:57:36.182"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.205" endtime="20201030 15:57:36.227"></status>
</kw>
<msg timestamp="20201030 15:57:36.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:36.202" endtime="20201030 15:57:36.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:36.230" endtime="20201030 15:57:36.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.237" endtime="20201030 15:57:36.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.195" endtime="20201030 15:57:36.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.189" endtime="20201030 15:57:36.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.260" endtime="20201030 15:57:36.609"></status>
</kw>
<msg timestamp="20201030 15:57:36.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040157361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040275625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:36.257" endtime="20201030 15:57:36.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040157361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040275625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:36.618" endtime="20201030 15:57:36.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.637" endtime="20201030 15:57:36.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.250" endtime="20201030 15:57:36.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.245" endtime="20201030 15:57:36.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:36.654" level="INFO">${RESULT} = [{'diff': 0.00011826399999999987}, {'diff': 0.00011840300000000303}, {'diff': 0.00011797200000000091}, {'diff': 0.0001188049999999996}, {'diff': 0.0001179170000000021}, {'diff': 0.00011876400000000037...</msg>
<status status="PASS" starttime="20201030 15:57:36.645" endtime="20201030 15:57:36.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:36.664" level="INFO">${ACCURACY} = {'diff': [0.00011826399999999987, 0.00011840300000000303, 0.00011797200000000091, 0.0001188049999999996, 0.0001179170000000021, 0.00011876400000000037, 0.00011883299999999875, 0.00011829099999999954, ...</msg>
<status status="PASS" starttime="20201030 15:57:36.656" endtime="20201030 15:57:36.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.675" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:57:36.673" endtime="20201030 15:57:36.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.681" level="INFO">VALUE: [0.00011826399999999987, 0.00011840300000000303, 0.00011797200000000091, 0.0001188049999999996, 0.0001179170000000021, 0.00011876400000000037, 0.00011883299999999875, 0.00011829099999999954, 0.00011831999999999815, 0.00011862500000000414, 0.0001185829999999985, 0.00011891600000000363, 0.00011812500000000364, 0.00011855599999999883, 0.00011879100000000004, 0.00011843099999999523, 0.00011888900000000396, 0.00011831900000000561, 0.00011876400000000037, 0.00011855499999999936, 0.00011805499999999886, 0.00011801399999999962, 0.0001184029999999961, 0.00011838799999999705, 0.00011843100000000217, 0.00011816700000000235, 0.00011900000000000105, 0.00011843100000000217, 0.0001181249999999967, 0.0001189170000000031, 0.0001187630000000009, 0.00011798600000000048, 0.00011812500000000364, 0.00011851400000000012, 0.0001181249999999967, 0.00011833300000000518, 0.0001187500000000008, 0.00011863900000000371, 0.00011808399999999747, 0.00011809699999999757, 0.00011901400000000062, 0.00011823600000000073, 0.00011801400000000656, 0.00011845900000000131, 0.00011806899999999843, 0.00011874999999999386, 0.00011807000000000484, 0.00011850000000000055, 0.00011809699999999757, 0.00011829199999999901]</msg>
<status status="PASS" starttime="20201030 15:57:36.678" endtime="20201030 15:57:36.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.666" endtime="20201030 15:57:36.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:36.693" endtime="20201030 15:57:36.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.689" endtime="20201030 15:57:36.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.686" endtime="20201030 15:57:36.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.185" endtime="20201030 15:57:36.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.183" endtime="20201030 15:57:36.719"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.741" endtime="20201030 15:57:36.763"></status>
</kw>
<msg timestamp="20201030 15:57:36.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:36.738" endtime="20201030 15:57:36.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:36.766" endtime="20201030 15:57:36.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.773" endtime="20201030 15:57:36.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.731" endtime="20201030 15:57:36.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.725" endtime="20201030 15:57:36.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.796" endtime="20201030 15:57:37.148"></status>
</kw>
<msg timestamp="20201030 15:57:37.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039893056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040012972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:36.792" endtime="20201030 15:57:37.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039893056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040012972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:37.157" endtime="20201030 15:57:37.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.175" endtime="20201030 15:57:37.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.785" endtime="20201030 15:57:37.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.781" endtime="20201030 15:57:37.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:37.193" level="INFO">${RESULT} = [{'diff': 0.00011991599999999769}, {'diff': 0.0001194449999999958}, {'diff': 0.0001191950000000025}, {'diff': 0.00011923600000000173}, {'diff': 0.00011958399999999897}, {'diff': 0.00011930600000000652...</msg>
<status status="PASS" starttime="20201030 15:57:37.184" endtime="20201030 15:57:37.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:37.204" level="INFO">${ACCURACY} = {'diff': [0.00011991599999999769, 0.0001194449999999958, 0.0001191950000000025, 0.00011923600000000173, 0.00011958399999999897, 0.00011930600000000652, 0.00011900000000000105, 0.00011915300000000378, ...</msg>
<status status="PASS" starttime="20201030 15:57:37.195" endtime="20201030 15:57:37.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.215" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:57:37.212" endtime="20201030 15:57:37.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.220" level="INFO">VALUE: [0.00011991599999999769, 0.0001194449999999958, 0.0001191950000000025, 0.00011923600000000173, 0.00011958399999999897, 0.00011930600000000652, 0.00011900000000000105, 0.00011915300000000378, 0.00011981999999999965, 0.00011973600000000223, 0.00011933299999999925, 0.00011920800000000259, 0.00011981900000000018, 0.00011948599999999504, 0.00011919399999999608, 0.00011959699999999907, 0.00011998600000000248, 0.00011987499999999846, 0.00011940300000000403, 0.00011959699999999907, 0.00011904199999999976, 0.00011991600000000463, 0.00011977800000000094, 0.00011931899999999968, 0.00011915300000000378, 0.00011902700000000072, 0.00011965300000000428, 0.00011919400000000302, 0.00011906899999999943, 0.00011916699999999641, 0.0001191379999999978, 0.00011958399999999897, 0.00011938899999999752, 0.00011984699999999932, 0.0001194449999999958, 0.00011973600000000223, 0.00011915299999999684, 0.00011954200000000026, 0.00011904100000000029, 0.00011958399999999897, 0.0001197500000000018, 0.00011915199999999737, 0.00011947199999999547, 0.0001194029999999971, 0.00011951399999999418, 0.00011986099999999889, 0.00011977800000000094, 0.00011927800000000044, 0.00011941600000000413, 0.00011943099999999623]</msg>
<status status="PASS" starttime="20201030 15:57:37.217" endtime="20201030 15:57:37.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.205" endtime="20201030 15:57:37.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:37.232" endtime="20201030 15:57:37.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.228" endtime="20201030 15:57:37.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.226" endtime="20201030 15:57:37.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.721" endtime="20201030 15:57:37.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.720" endtime="20201030 15:57:37.258"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.280" endtime="20201030 15:57:37.302"></status>
</kw>
<msg timestamp="20201030 15:57:37.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:37.277" endtime="20201030 15:57:37.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:37.305" endtime="20201030 15:57:37.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.312" endtime="20201030 15:57:37.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.270" endtime="20201030 15:57:37.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.264" endtime="20201030 15:57:37.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.335" endtime="20201030 15:57:37.689"></status>
</kw>
<msg timestamp="20201030 15:57:37.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039958403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040078917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:37.332" endtime="20201030 15:57:37.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039958403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040078917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:37.699" endtime="20201030 15:57:37.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.717" endtime="20201030 15:57:37.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.325" endtime="20201030 15:57:37.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.320" endtime="20201030 15:57:37.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:37.734" level="INFO">${RESULT} = [{'diff': 0.00012051399999999518}, {'diff': 0.00012030600000000058}, {'diff': 0.0001203050000000011}, {'diff': 0.0001204579999999969}, {'diff': 0.00012094400000000477}, {'diff': 0.000120083}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:57:37.725" endtime="20201030 15:57:37.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:37.743" level="INFO">${ACCURACY} = {'diff': [0.00012051399999999518, 0.00012030600000000058, 0.0001203050000000011, 0.0001204579999999969, 0.00012094400000000477, 0.000120083, 0.00012026399999999493, 0.00012038899999999852, 0.000121026...</msg>
<status status="PASS" starttime="20201030 15:57:37.736" endtime="20201030 15:57:37.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.754" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:57:37.752" endtime="20201030 15:57:37.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.759" level="INFO">VALUE: [0.00012051399999999518, 0.00012030600000000058, 0.0001203050000000011, 0.0001204579999999969, 0.00012094400000000477, 0.000120083, 0.00012026399999999493, 0.00012038899999999852, 0.00012102699999999578, 0.00012015299999999784, 0.00012043100000000417, 0.00012056900000000093, 0.00012104200000000176, 0.0001204300000000047, 0.00012049999999999561, 0.00012083300000000075, 0.00012076400000000237, 0.00012080600000000108, 0.0001209449999999973, 0.00012091699999999816, 0.0001202909999999946, 0.00012090300000000553, 0.00012097200000000391, 0.00012076400000000237, 0.00012044399999999733, 0.00012013899999999827, 0.00012079200000000151, 0.00012083400000000022, 0.00012105499999999492, 0.00012069400000000452, 0.00012020799999999665, 0.00012036099999999939, 0.00012061099999999964, 0.00012095899999999687, 0.00012099999999999611, 0.00012012500000000564, 0.00012072200000000366, 0.00012011199999999861, 0.00012023600000000273, 0.00012002800000000119, 0.00012034699999999982, 0.00011991699999999716, 0.00012095900000000381, 0.00012037499999999896, 0.0001204449999999968, 0.00012016700000000435, 0.00012079200000000151, 0.00012048599999999604, 0.0001207370000000027, 0.00012082000000000065]</msg>
<status status="PASS" starttime="20201030 15:57:37.756" endtime="20201030 15:57:37.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.745" endtime="20201030 15:57:37.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:37.779" endtime="20201030 15:57:37.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.774" endtime="20201030 15:57:37.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.772" endtime="20201030 15:57:37.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.260" endtime="20201030 15:57:37.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.259" endtime="20201030 15:57:37.804"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.827" endtime="20201030 15:57:37.850"></status>
</kw>
<msg timestamp="20201030 15:57:37.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:37.823" endtime="20201030 15:57:37.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:37.853" endtime="20201030 15:57:37.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.860" endtime="20201030 15:57:37.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.816" endtime="20201030 15:57:37.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.810" endtime="20201030 15:57:37.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.883" endtime="20201030 15:57:38.241"></status>
</kw>
<msg timestamp="20201030 15:57:38.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04172025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041841458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:37.880" endtime="20201030 15:57:38.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04172025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041841458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:38.250" endtime="20201030 15:57:38.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.269" endtime="20201030 15:57:38.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.873" endtime="20201030 15:57:38.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.868" endtime="20201030 15:57:38.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:38.286" level="INFO">${RESULT} = [{'diff': 0.00012120799999999765}, {'diff': 0.0001217370000000037}, {'diff': 0.0001212500000000033}, {'diff': 0.00012129200000000201}, {'diff': 0.0001214170000000056}, {'diff': 0.00012118000000000545}...</msg>
<status status="PASS" starttime="20201030 15:57:38.277" endtime="20201030 15:57:38.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:38.295" level="INFO">${ACCURACY} = {'diff': [0.00012120799999999765, 0.0001217370000000037, 0.0001212500000000033, 0.00012129200000000201, 0.0001214170000000056, 0.00012118000000000545, 0.00012187500000000046, 0.00012136099999999345, 0...</msg>
<status status="PASS" starttime="20201030 15:57:38.288" endtime="20201030 15:57:38.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.306" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:57:38.304" endtime="20201030 15:57:38.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.311" level="INFO">VALUE: [0.00012120799999999765, 0.0001217370000000037, 0.0001212500000000033, 0.00012129200000000201, 0.0001214170000000056, 0.00012118000000000545, 0.00012187500000000046, 0.00012136099999999345, 0.00012131899999999474, 0.00012122200000000416, 0.00012165299999999934, 0.00012180600000000208, 0.00012179200000000251, 0.00012133300000000125, 0.00012191699999999916, 0.00012151400000000312, 0.00012104199999999482, 0.00012119399999999808, 0.0001211249999999997, 0.00012094500000000424, 0.00012119499999999755, 0.0001211950000000045, 0.00012106899999999449, 0.00012134800000000029, 0.0001219029999999996, 0.00012105500000000186, 0.0001209300000000052, 0.0001216250000000002, 0.00012201399999999668, 0.00012170899999999762, 0.0001215700000000014, 0.00012106900000000143, 0.00012134699999999388, 0.00012119499999999755, 0.00012098600000000348, 0.00012165299999999934, 0.00012172200000000466, 0.00012095899999999687, 0.00012167999999999901, 0.00012159700000000107, 0.00012129100000000254, 0.00012170799999999815, 0.00012095800000000434, 0.0001210700000000009, 0.0001215700000000014, 0.0001214170000000056, 0.00012131900000000168, 0.00012195800000000534, 0.00012159800000000054, 0.00012122199999999722]</msg>
<status status="PASS" starttime="20201030 15:57:38.308" endtime="20201030 15:57:38.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.297" endtime="20201030 15:57:38.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:38.325" endtime="20201030 15:57:38.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.319" endtime="20201030 15:57:38.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.317" endtime="20201030 15:57:38.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.806" endtime="20201030 15:57:38.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.805" endtime="20201030 15:57:38.351"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.373" endtime="20201030 15:57:38.393"></status>
</kw>
<msg timestamp="20201030 15:57:38.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:38.370" endtime="20201030 15:57:38.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:38.397" endtime="20201030 15:57:38.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.403" endtime="20201030 15:57:38.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.363" endtime="20201030 15:57:38.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.357" endtime="20201030 15:57:38.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.427" endtime="20201030 15:57:38.763"></status>
</kw>
<msg timestamp="20201030 15:57:38.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039835792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039958125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:38.424" endtime="20201030 15:57:38.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039835792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039958125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:38.772" endtime="20201030 15:57:38.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.790" endtime="20201030 15:57:38.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.416" endtime="20201030 15:57:38.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.411" endtime="20201030 15:57:38.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:38.808" level="INFO">${RESULT} = [{'diff': 0.0001223329999999953}, {'diff': 0.00012197199999999797}, {'diff': 0.00012195899999999787}, {'diff': 0.0001224720000000054}, {'diff': 0.0001224160000000002}, {'diff': 0.00012237500000000096}...</msg>
<status status="PASS" starttime="20201030 15:57:38.799" endtime="20201030 15:57:38.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:38.818" level="INFO">${ACCURACY} = {'diff': [0.0001223329999999953, 0.00012197199999999797, 0.00012195899999999787, 0.0001224720000000054, 0.0001224160000000002, 0.00012237500000000096, 0.0001226250000000012, 0.00012194399999999883, 0....</msg>
<status status="PASS" starttime="20201030 15:57:38.810" endtime="20201030 15:57:38.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.829" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:57:38.827" endtime="20201030 15:57:38.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.834" level="INFO">VALUE: [0.0001223329999999953, 0.00012197199999999797, 0.00012195899999999787, 0.0001224720000000054, 0.0001224160000000002, 0.00012237500000000096, 0.0001226250000000012, 0.00012194399999999883, 0.0001222779999999965, 0.00012233300000000225, 0.00012279199999999657, 0.00012273600000000523, 0.00012308299999999606, 0.00012237500000000096, 0.00012194399999999883, 0.00012252799999999675, 0.000122777999999997, 0.00012231900000000268, 0.00012281900000000318, 0.00012269399999999958, 0.0001225559999999959, 0.00012224999999999736, 0.00012244500000000574, 0.00012247199999999847, 0.00012215200000000037, 0.00012238900000000053, 0.00012213900000000028, 0.00012215200000000037, 0.00012274999999999786, 0.00012284700000000232, 0.00012230600000000258, 0.00012227800000000344, 0.000122777999999997, 0.0001227229999999982, 0.00012195899999999787, 0.00012302700000000472, 0.0001229030000000006, 0.00012219499999999855, 0.00012197199999999797, 0.0001221250000000007, 0.00012227699999999703, 0.0001228199999999957, 0.00012201400000000362, 0.00012279199999999657, 0.00012244399999999933, 0.00012288900000000103, 0.00012269399999999958, 0.00012251399999999718, 0.00012226399999999693, 0.00012197200000000491]</msg>
<status status="PASS" starttime="20201030 15:57:38.831" endtime="20201030 15:57:38.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.820" endtime="20201030 15:57:38.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:38.847" endtime="20201030 15:57:38.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.842" endtime="20201030 15:57:38.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.840" endtime="20201030 15:57:38.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.353" endtime="20201030 15:57:38.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.351" endtime="20201030 15:57:38.872"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.894" endtime="20201030 15:57:38.915"></status>
</kw>
<msg timestamp="20201030 15:57:38.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:38.891" endtime="20201030 15:57:38.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:38.918" endtime="20201030 15:57:38.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.924" endtime="20201030 15:57:38.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.884" endtime="20201030 15:57:38.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.878" endtime="20201030 15:57:38.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.949" endtime="20201030 15:57:39.287"></status>
</kw>
<msg timestamp="20201030 15:57:39.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039544583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039667681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:38.945" endtime="20201030 15:57:39.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039544583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039667681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:39.296" endtime="20201030 15:57:39.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.314" endtime="20201030 15:57:39.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.937" endtime="20201030 15:57:39.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.932" endtime="20201030 15:57:39.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:39.332" level="INFO">${RESULT} = [{'diff': 0.00012309800000000204}, {'diff': 0.000123777999999998}, {'diff': 0.0001230559999999964}, {'diff': 0.0001229030000000006}, {'diff': 0.00012354199999999732}, {'diff': 0.00012391699999999423},...</msg>
<status status="PASS" starttime="20201030 15:57:39.323" endtime="20201030 15:57:39.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:39.342" level="INFO">${ACCURACY} = {'diff': [0.00012309800000000204, 0.000123777999999998, 0.0001230559999999964, 0.0001229030000000006, 0.00012354199999999732, 0.00012391699999999423, 0.00012354199999999732, 0.00012302799999999725, 0....</msg>
<status status="PASS" starttime="20201030 15:57:39.334" endtime="20201030 15:57:39.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.354" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:57:39.351" endtime="20201030 15:57:39.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.359" level="INFO">VALUE: [0.00012309800000000204, 0.000123777999999998, 0.0001230559999999964, 0.0001229030000000006, 0.00012354199999999732, 0.00012391699999999423, 0.00012354199999999732, 0.00012302799999999725, 0.00012298599999999854, 0.0001231250000000017, 0.0001230700000000029, 0.00012338900000000153, 0.00012338899999999459, 0.00012370800000000015, 0.00012372199999999972, 0.0001239580000000004, 0.00012383300000000375, 0.0001235559999999969, 0.0001237359999999993, 0.00012383300000000375, 0.0001235280000000047, 0.00012304200000000376, 0.00012358299999999656, 0.00012397299999999944, 0.00012348599999999904, 0.00012370899999999962, 0.00012363900000000178, 0.00012336099999999545, 0.00012331899999999674, 0.00012369400000000058, 0.00012351399999999818, 0.00012336200000000186, 0.00012386100000000289, 0.00012355500000000436, 0.0001234999999999986, 0.0001232909999999976, 0.00012397199999999997, 0.00012397199999999997, 0.00012338800000000205, 0.00012376299999999896, 0.00012363900000000178, 0.0001235700000000034, 0.0001234449999999998, 0.00012288900000000103, 0.00012368100000000048, 0.000123292000000004, 0.00012315300000000085, 0.00012348599999999904, 0.0001230700000000029, 0.00012297199999999897]</msg>
<status status="PASS" starttime="20201030 15:57:39.356" endtime="20201030 15:57:39.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.344" endtime="20201030 15:57:39.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:39.371" endtime="20201030 15:57:39.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.367" endtime="20201030 15:57:39.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.365" endtime="20201030 15:57:39.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.874" endtime="20201030 15:57:39.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.873" endtime="20201030 15:57:39.397"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.419" endtime="20201030 15:57:39.440"></status>
</kw>
<msg timestamp="20201030 15:57:39.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:39.416" endtime="20201030 15:57:39.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:39.443" endtime="20201030 15:57:39.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.450" endtime="20201030 15:57:39.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.409" endtime="20201030 15:57:39.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.403" endtime="20201030 15:57:39.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.473" endtime="20201030 15:57:39.811"></status>
</kw>
<msg timestamp="20201030 15:57:39.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040016569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040141069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:39.470" endtime="20201030 15:57:39.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040016569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040141069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:39.821" endtime="20201030 15:57:39.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.839" endtime="20201030 15:57:39.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.463" endtime="20201030 15:57:39.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.458" endtime="20201030 15:57:39.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:39.856" level="INFO">${RESULT} = [{'diff': 0.0001244999999999996}, {'diff': 0.00012488900000000303}, {'diff': 0.0001242359999999998}, {'diff': 0.00012448600000000004}, {'diff': 0.00012451399999999918}, {'diff': 0.00012415200000000237...</msg>
<status status="PASS" starttime="20201030 15:57:39.848" endtime="20201030 15:57:39.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:39.866" level="INFO">${ACCURACY} = {'diff': [0.0001244999999999996, 0.00012488900000000303, 0.0001242359999999998, 0.00012448600000000004, 0.00012451399999999918, 0.00012415200000000237, 0.00012470800000000115, 0.0001248199999999977, 0...</msg>
<status status="PASS" starttime="20201030 15:57:39.859" endtime="20201030 15:57:39.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.876" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:57:39.874" endtime="20201030 15:57:39.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.882" level="INFO">VALUE: [0.0001244999999999996, 0.00012488900000000303, 0.0001242359999999998, 0.00012448600000000004, 0.00012451399999999918, 0.00012415200000000237, 0.00012470800000000115, 0.0001248199999999977, 0.0001244580000000009, 0.00012463799999999636, 0.00012472199999999378, 0.00012490199999999618, 0.00012487499999999652, 0.0001244999999999996, 0.00012443100000000124, 0.00012436099999999645, 0.00012441700000000167, 0.00012483399999999728, 0.00012433400000000372, 0.00012433399999999678, 0.00012434700000000382, 0.0001250559999999984, 0.00012430499999999817, 0.00012451399999999918, 0.00012436099999999645, 0.00012395899999999987, 0.00012465200000000287, 0.00012413899999999534, 0.00012422200000000022, 0.00012398600000000648, 0.00012480499999999867, 0.00012462499999999627, 0.0001246250000000032, 0.00012481900000000518, 0.00012466700000000192, 0.0001248889999999961, 0.00012422200000000022, 0.00012463799999999636, 0.0001241109999999962, 0.0001245559999999979, 0.00012470900000000062, 0.00012438900000000253, 0.0001244030000000021, 0.00012459699999999713, 0.00012470900000000062, 0.00012430599999999764, 0.00012443000000000176, 0.00012484700000000432, 0.00012433300000000425, 0.00012402699999999878]</msg>
<status status="PASS" starttime="20201030 15:57:39.879" endtime="20201030 15:57:39.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.867" endtime="20201030 15:57:39.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:39.894" endtime="20201030 15:57:39.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.890" endtime="20201030 15:57:39.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.887" endtime="20201030 15:57:39.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.399" endtime="20201030 15:57:39.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.397" endtime="20201030 15:57:39.919"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.942" endtime="20201030 15:57:39.968"></status>
</kw>
<msg timestamp="20201030 15:57:39.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:39.939" endtime="20201030 15:57:39.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:39.972" endtime="20201030 15:57:39.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.979" endtime="20201030 15:57:39.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.931" endtime="20201030 15:57:39.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.926" endtime="20201030 15:57:39.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.003" endtime="20201030 15:57:40.338"></status>
</kw>
<msg timestamp="20201030 15:57:40.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045480889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045605806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:40.000" endtime="20201030 15:57:40.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045480889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045605806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:40.347" endtime="20201030 15:57:40.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.365" endtime="20201030 15:57:40.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.992" endtime="20201030 15:57:40.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.987" endtime="20201030 15:57:40.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:40.382" level="INFO">${RESULT} = [{'diff': 0.00012491700000000217}, {'diff': 0.00012517999999999557}, {'diff': 0.00012563899999999684}, {'diff': 0.0001256250000000042}, {'diff': 0.00012547200000000147}, {'diff': 0.0001256659999999965...</msg>
<status status="PASS" starttime="20201030 15:57:40.374" endtime="20201030 15:57:40.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:40.391" level="INFO">${ACCURACY} = {'diff': [0.00012491700000000217, 0.00012517999999999557, 0.00012563899999999684, 0.0001256250000000042, 0.00012547200000000147, 0.0001256659999999965, 0.00012540200000000362, 0.00012551400000000018, ...</msg>
<status status="PASS" starttime="20201030 15:57:40.384" endtime="20201030 15:57:40.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.402" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:57:40.400" endtime="20201030 15:57:40.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.407" level="INFO">VALUE: [0.00012491700000000217, 0.00012517999999999557, 0.00012563899999999684, 0.0001256250000000042, 0.00012547200000000147, 0.0001256659999999965, 0.00012540200000000362, 0.00012551400000000018, 0.0001258329999999988, 0.00012563799999999736, 0.00012515300000000285, 0.00012575000000000086, 0.0001249309999999948, 0.0001255000000000006, 0.00012532000000000515, 0.00012518100000000199, 0.00012584699999999838, 0.00012537499999999702, 0.00012548600000000104, 0.00012541599999999625, 0.00012591599999999675, 0.00012542999999999582, 0.0001255559999999989, 0.00012570900000000162, 0.00012545900000000137, 0.00012558299999999856, 0.00012536099999999745, 0.0001255559999999989, 0.00012552799999999975, 0.00012505499999999892, 0.00012584699999999838, 0.00012559699999999813, 0.000125778, 0.00012587499999999752, 0.00012556999999999846, 0.00012558400000000497, 0.00012520800000000165, 0.00012519400000000208, 0.00012563900000000378, 0.00012554199999999932, 0.0001255000000000006, 0.00012526399999999993, 0.00012537500000000396, 0.00012491700000000217, 0.0001253889999999966, 0.0001252360000000008, 0.00012561100000000464, 0.00012552799999999975, 0.0001253199999999982, 0.000125778]</msg>
<status status="PASS" starttime="20201030 15:57:40.404" endtime="20201030 15:57:40.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.393" endtime="20201030 15:57:40.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:40.421" endtime="20201030 15:57:40.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.415" endtime="20201030 15:57:40.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.413" endtime="20201030 15:57:40.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.921" endtime="20201030 15:57:40.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.920" endtime="20201030 15:57:40.446"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.468" endtime="20201030 15:57:40.489"></status>
</kw>
<msg timestamp="20201030 15:57:40.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:40.465" endtime="20201030 15:57:40.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:40.492" endtime="20201030 15:57:40.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.498" endtime="20201030 15:57:40.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.458" endtime="20201030 15:57:40.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.452" endtime="20201030 15:57:40.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.521" endtime="20201030 15:57:40.852"></status>
</kw>
<msg timestamp="20201030 15:57:40.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039268792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039394736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:40.518" endtime="20201030 15:57:40.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039268792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039394736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:40.861" endtime="20201030 15:57:40.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.879" endtime="20201030 15:57:40.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.511" endtime="20201030 15:57:40.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.506" endtime="20201030 15:57:40.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:40.896" level="INFO">${RESULT} = [{'diff': 0.00012594400000000283}, {'diff': 0.00012676400000000143}, {'diff': 0.00012648699999999458}, {'diff': 0.00012645900000000238}, {'diff': 0.00012675000000000186}, {'diff': 0.000126860999999998...</msg>
<status status="PASS" starttime="20201030 15:57:40.887" endtime="20201030 15:57:40.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:40.906" level="INFO">${ACCURACY} = {'diff': [0.00012594400000000283, 0.00012676400000000143, 0.00012648699999999458, 0.00012645900000000238, 0.00012675000000000186, 0.00012686099999999895, 0.00012591700000000317, 0.0001270000000000021,...</msg>
<status status="PASS" starttime="20201030 15:57:40.898" endtime="20201030 15:57:40.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.917" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:57:40.914" endtime="20201030 15:57:40.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.922" level="INFO">VALUE: [0.00012594400000000283, 0.00012676400000000143, 0.00012648699999999458, 0.00012645900000000238, 0.00012675000000000186, 0.00012686099999999895, 0.00012591700000000317, 0.0001270000000000021, 0.0001267360000000023, 0.00012663900000000478, 0.00012675000000000186, 0.00012618100000000299, 0.000126083000000006, 0.00012604100000000035, 0.000126165999999997, 0.00012598600000000154, 0.00012598600000000154, 0.00012675000000000186, 0.00012675000000000186, 0.00012584699999999838, 0.0001262780000000005, 0.0001262079999999957, 0.00012629200000000007, 0.0001263199999999992, 0.00012623599999999485, 0.00012654199999999338, 0.000126778000000001, 0.00012634699999999888, 0.00012642999999999682, 0.0001265700000000064, 0.00012643100000000324, 0.00012629200000000007, 0.00012631899999999974, 0.0001260000000000011, 0.00012587499999999752, 0.0001260000000000011, 0.000126165999999997, 0.0001262360000000018, 0.00012654100000000085, 0.00012592999999999632, 0.00012626400000000093, 0.00012686099999999895, 0.00012598600000000154, 0.0001259580000000024, 0.00012598600000000154, 0.00012662499999999827, 0.00012692999999999732, 0.00012609700000000557, 0.0001262780000000005, 0.00012663899999999784]</msg>
<status status="PASS" starttime="20201030 15:57:40.919" endtime="20201030 15:57:40.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.908" endtime="20201030 15:57:40.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:40.934" endtime="20201030 15:57:40.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.930" endtime="20201030 15:57:40.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.927" endtime="20201030 15:57:40.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.448" endtime="20201030 15:57:40.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.447" endtime="20201030 15:57:40.959"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.981" endtime="20201030 15:57:41.011"></status>
</kw>
<msg timestamp="20201030 15:57:41.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:40.978" endtime="20201030 15:57:41.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:41.014" endtime="20201030 15:57:41.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:41.021" endtime="20201030 15:57:41.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.971" endtime="20201030 15:57:41.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.965" endtime="20201030 15:57:41.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:41.045" endtime="20201030 15:57:41.395"></status>
</kw>
<msg timestamp="20201030 15:57:41.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039111139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039238542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:41.042" endtime="20201030 15:57:41.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039111139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039238542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:41.404" endtime="20201030 15:57:41.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:41.423" endtime="20201030 15:57:41.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.034" endtime="20201030 15:57:41.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.029" endtime="20201030 15:57:41.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:41.440" level="INFO">${RESULT} = [{'diff': 0.00012740299999999816}, {'diff': 0.0001273189999999938}, {'diff': 0.0001278200000000007}, {'diff': 0.00012697200000000297}, {'diff': 0.0001279309999999978}, {'diff': 0.00012695900000000288}...</msg>
<status status="PASS" starttime="20201030 15:57:41.431" endtime="20201030 15:57:41.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:41.451" level="INFO">${ACCURACY} = {'diff': [0.00012740299999999816, 0.0001273189999999938, 0.0001278200000000007, 0.00012697200000000297, 0.0001279309999999978, 0.00012695900000000288, 0.00012716700000000442, 0.00012780499999999473, 0...</msg>
<status status="PASS" starttime="20201030 15:57:41.442" endtime="20201030 15:57:41.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.462" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:57:41.460" endtime="20201030 15:57:41.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.467" level="INFO">VALUE: [0.00012740299999999816, 0.0001273189999999938, 0.0001278200000000007, 0.00012697200000000297, 0.0001279309999999978, 0.00012695900000000288, 0.00012716700000000442, 0.00012780499999999473, 0.00012720900000000313, 0.00012769500000000406, 0.0001277639999999955, 0.00012697199999999603, 0.00012740299999999816, 0.000127569000000001, 0.0001279030000000056, 0.0001278189999999943, 0.00012737499999999902, 0.0001273200000000002, 0.00012767999999999807, 0.00012722200000000322, 0.0001278879999999996, 0.00012733399999999978, 0.00012748600000000304, 0.0001273889999999986, 0.00012713899999999834, 0.00012787499999999952, 0.0001275000000000026, 0.00012790299999999866, 0.0001279030000000056, 0.0001273879999999991, 0.0001279030000000056, 0.00012708300000000006, 0.00012769499999999712, 0.00012709699999999963, 0.00012763899999999884, 0.00012737499999999902, 0.00012772199999999678, 0.0001270690000000005, 0.00012775000000000286, 0.0001278200000000007, 0.0001269030000000046, 0.00012729200000000107, 0.00012768099999999755, 0.00012758300000000056, 0.00012766699999999798, 0.00012742999999999782, 0.00012770899999999669, 0.00012754200000000132, 0.00012717999999999757, 0.000127778000000002]</msg>
<status status="PASS" starttime="20201030 15:57:41.464" endtime="20201030 15:57:41.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.453" endtime="20201030 15:57:41.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:41.480" endtime="20201030 15:57:41.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.475" endtime="20201030 15:57:41.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.473" endtime="20201030 15:57:41.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.961" endtime="20201030 15:57:41.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.960" endtime="20201030 15:57:41.505"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:41.528" endtime="20201030 15:57:41.550"></status>
</kw>
<msg timestamp="20201030 15:57:41.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:41.525" endtime="20201030 15:57:41.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:41.554" endtime="20201030 15:57:41.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:41.560" endtime="20201030 15:57:41.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.517" endtime="20201030 15:57:41.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.512" endtime="20201030 15:57:41.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:41.583" endtime="20201030 15:57:41.934"></status>
</kw>
<msg timestamp="20201030 15:57:41.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040336861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040465028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:41.580" endtime="20201030 15:57:41.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040336861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040465028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:41.944" endtime="20201030 15:57:41.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:41.962" endtime="20201030 15:57:41.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.573" endtime="20201030 15:57:41.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.568" endtime="20201030 15:57:41.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:41.979" level="INFO">${RESULT} = [{'diff': 0.00012816699999999848}, {'diff': 0.00012820900000000413}, {'diff': 0.00012806899999999455}, {'diff': 0.00012816699999999848}, {'diff': 0.00012852700000000328}, {'diff': 0.000128764000000003...</msg>
<status status="PASS" starttime="20201030 15:57:41.970" endtime="20201030 15:57:41.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:41.988" level="INFO">${ACCURACY} = {'diff': [0.00012816699999999848, 0.00012820900000000413, 0.00012806899999999455, 0.00012816699999999848, 0.00012852700000000328, 0.00012876400000000343, 0.00012830499999999523, 0.00012809700000000063...</msg>
<status status="PASS" starttime="20201030 15:57:41.981" endtime="20201030 15:57:41.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.999" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:57:41.997" endtime="20201030 15:57:42.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.004" level="INFO">VALUE: [0.00012816699999999848, 0.00012820900000000413, 0.00012806899999999455, 0.00012816699999999848, 0.00012852700000000328, 0.00012876400000000343, 0.00012830499999999523, 0.00012809700000000063, 0.00012872199999999778, 0.0001282079999999977, 0.00012851399999999624, 0.00012797200000000397, 0.00012862500000000027, 0.00012837500000000002, 0.00012791700000000517, 0.00012886100000000095, 0.0001280980000000001, 0.0001281110000000002, 0.00012865199999999993, 0.00012855500000000242, 0.00012874999999999692, 0.0001280000000000031, 0.00012837500000000002, 0.0001286529999999994, 0.0001285000000000036, 0.0001287360000000043, 0.0001283189999999948, 0.00012841699999999873, 0.00012817999999999857, 0.000128569000000002, 0.0001285969999999942, 0.00012847200000000447, 0.0001279439999999979, 0.00012842999999999882, 0.00012816699999999848, 0.00012867999999999907, 0.00012824999999999642, 0.000128263999999996, 0.00012824999999999642, 0.00012869399999999864, 0.00012867999999999907, 0.0001280000000000031, 0.00012804200000000182, 0.0001280690000000015, 0.0001289030000000066, 0.00012880600000000214, 0.00012905499999999598, 0.00012867999999999907, 0.00012804199999999488, 0.00012845900000000438]</msg>
<status status="PASS" starttime="20201030 15:57:42.002" endtime="20201030 15:57:42.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.990" endtime="20201030 15:57:42.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:42.017" endtime="20201030 15:57:42.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.013" endtime="20201030 15:57:42.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.010" endtime="20201030 15:57:42.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.507" endtime="20201030 15:57:42.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.506" endtime="20201030 15:57:42.043"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.067" endtime="20201030 15:57:42.091"></status>
</kw>
<msg timestamp="20201030 15:57:42.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:42.064" endtime="20201030 15:57:42.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:42.094" endtime="20201030 15:57:42.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.100" endtime="20201030 15:57:42.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.056" endtime="20201030 15:57:42.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.050" endtime="20201030 15:57:42.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.124" endtime="20201030 15:57:42.474"></status>
</kw>
<msg timestamp="20201030 15:57:42.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043320583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043450375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:42.121" endtime="20201030 15:57:42.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043320583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043450375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:42.484" endtime="20201030 15:57:42.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.502" endtime="20201030 15:57:42.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.114" endtime="20201030 15:57:42.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.109" endtime="20201030 15:57:42.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:42.519" level="INFO">${RESULT} = [{'diff': 0.00012979199999999663}, {'diff': 0.0001294439999999994}, {'diff': 0.00012927799999999656}, {'diff': 0.00012955500000000342}, {'diff': 0.00012984699999999544}, {'diff': 0.0001299439999999999...</msg>
<status status="PASS" starttime="20201030 15:57:42.511" endtime="20201030 15:57:42.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:42.528" level="INFO">${ACCURACY} = {'diff': [0.00012979199999999663, 0.0001294439999999994, 0.00012927799999999656, 0.00012955500000000342, 0.00012984699999999544, 0.0001299439999999999, 0.00012934700000000188, 0.0001295560000000029, 0...</msg>
<status status="PASS" starttime="20201030 15:57:42.521" endtime="20201030 15:57:42.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.539" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:57:42.537" endtime="20201030 15:57:42.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.545" level="INFO">VALUE: [0.00012979199999999663, 0.0001294439999999994, 0.00012927799999999656, 0.00012955500000000342, 0.00012984699999999544, 0.0001299439999999999, 0.00012934700000000188, 0.0001295560000000029, 0.0001294859999999981, 0.0001296660000000005, 0.00012997199999999903, 0.0001293890000000006, 0.0001294309999999993, 0.0001294859999999981, 0.00012931900000000274, 0.0001293609999999945, 0.00012962500000000127, 0.00012991700000000023, 0.00012995799999999946, 0.00012898700000000402, 0.0001289309999999988, 0.00012988899999999415, 0.0001295000000000046, 0.00012927799999999656, 0.0001290690000000025, 0.0001297639999999975, 0.00012906999999999502, 0.00012926299999999752, 0.00012963900000000084, 0.0001290000000000041, 0.00012961099999999476, 0.00012983400000000228, 0.00012909799999999416, 0.00012987499999999458, 0.0001295000000000046, 0.00012956999999999552, 0.00012895799999999846, 0.00012937500000000102, 0.00012912499999999383, 0.00012911099999999426, 0.0001289439999999989, 0.00012897300000000445, 0.0001290409999999964, 0.0001290839999999946, 0.00012934700000000188, 0.00012954200000000332, 0.00012908300000000206, 0.00012907000000000196, 0.00012945799999999896, 0.0001290690000000025]</msg>
<status status="PASS" starttime="20201030 15:57:42.542" endtime="20201030 15:57:42.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.530" endtime="20201030 15:57:42.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:42.559" endtime="20201030 15:57:42.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.553" endtime="20201030 15:57:42.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.550" endtime="20201030 15:57:42.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.045" endtime="20201030 15:57:42.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.044" endtime="20201030 15:57:42.584"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.607" endtime="20201030 15:57:42.629"></status>
</kw>
<msg timestamp="20201030 15:57:42.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:42.603" endtime="20201030 15:57:42.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:42.633" endtime="20201030 15:57:42.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.639" endtime="20201030 15:57:42.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.596" endtime="20201030 15:57:42.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.591" endtime="20201030 15:57:42.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.662" endtime="20201030 15:57:43.018"></status>
</kw>
<msg timestamp="20201030 15:57:43.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040192514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040322986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:42.659" endtime="20201030 15:57:43.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040192514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040322986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:43.027" endtime="20201030 15:57:43.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.049" endtime="20201030 15:57:43.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.652" endtime="20201030 15:57:43.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.647" endtime="20201030 15:57:43.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:43.066" level="INFO">${RESULT} = [{'diff': 0.00013047199999999953}, {'diff': 0.00013016700000000048}, {'diff': 0.0001304310000000003}, {'diff': 0.00013022199999999928}, {'diff': 0.00013008400000000253}, {'diff': 0.0001303890000000016...</msg>
<status status="PASS" starttime="20201030 15:57:43.057" endtime="20201030 15:57:43.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:43.077" level="INFO">${ACCURACY} = {'diff': [0.00013047199999999953, 0.00013016700000000048, 0.0001304310000000003, 0.00013022199999999928, 0.00013008400000000253, 0.0001303890000000016, 0.00013079199999999763, 0.0001306530000000014, 0...</msg>
<status status="PASS" starttime="20201030 15:57:43.068" endtime="20201030 15:57:43.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.089" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:57:43.086" endtime="20201030 15:57:43.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.094" level="INFO">VALUE: [0.00013047199999999953, 0.00013016700000000048, 0.0001304310000000003, 0.00013022199999999928, 0.00013008400000000253, 0.0001303890000000016, 0.00013079199999999763, 0.0001306530000000014, 0.00013073599999999935, 0.00013047199999999953, 0.0001304859999999991, 0.0001303189999999968, 0.00013041700000000073, 0.00013009700000000263, 0.00013063900000000184, 0.00013055599999999695, 0.00013034699999999594, 0.00013041700000000073, 0.00013093000000000132, 0.00013020900000000613, 0.0001306110000000027, 0.00013051399999999824, 0.0001307639999999985, 0.000130778000000005, 0.00013087499999999558, 0.00013074999999999892, 0.00013044499999999987, 0.0001300839999999956, 0.0001300409999999974, 0.0001303609999999955, 0.00013013900000000134, 0.0001308189999999973, 0.00013073699999999883, 0.00013084699999999644, 0.0001302780000000045, 0.0001302360000000058, 0.00013027799999999756, 0.00013052800000000475, 0.00013043000000000082, 0.0001307639999999985, 0.0001304859999999991, 0.0001303479999999954, 0.0001303890000000016, 0.0001304440000000004, 0.00013041700000000073, 0.0001308890000000021, 0.00012995900000000588, 0.0001305560000000039, 0.0001306389999999949, 0.0001299729999999985]</msg>
<status status="PASS" starttime="20201030 15:57:43.091" endtime="20201030 15:57:43.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.079" endtime="20201030 15:57:43.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:43.107" endtime="20201030 15:57:43.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.103" endtime="20201030 15:57:43.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.100" endtime="20201030 15:57:43.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.586" endtime="20201030 15:57:43.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.585" endtime="20201030 15:57:43.132"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.155" endtime="20201030 15:57:43.177"></status>
</kw>
<msg timestamp="20201030 15:57:43.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:43.152" endtime="20201030 15:57:43.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:43.181" endtime="20201030 15:57:43.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.187" endtime="20201030 15:57:43.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.145" endtime="20201030 15:57:43.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.139" endtime="20201030 15:57:43.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.210" endtime="20201030 15:57:43.559"></status>
</kw>
<msg timestamp="20201030 15:57:43.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040159097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:57:43.207" endtime="20201030 15:57:43.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040159097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:57:43.569" endtime="20201030 15:57:43.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.587" endtime="20201030 15:57:43.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.200" endtime="20201030 15:57:43.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.195" endtime="20201030 15:57:43.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:43.604" level="INFO">${RESULT} = [{'diff': 0.0001310969999999967}, {'diff': 0.00013106899999999755}, {'diff': 0.00013099999999999917}, {'diff': 0.00013156899999999805}, {'diff': 0.00013140300000000216}, {'diff': 0.0001312629999999995...</msg>
<status status="PASS" starttime="20201030 15:57:43.595" endtime="20201030 15:57:43.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:43.615" level="INFO">${ACCURACY} = {'diff': [0.0001310969999999967, 0.00013106899999999755, 0.00013099999999999917, 0.00013156899999999805, 0.00013140300000000216, 0.00013126299999999952, 0.00013168000000000207, 0.00013144399999999445,...</msg>
<status status="PASS" starttime="20201030 15:57:43.606" endtime="20201030 15:57:43.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.626" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:57:43.624" endtime="20201030 15:57:43.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.631" level="INFO">VALUE: [0.0001310969999999967, 0.00013106899999999755, 0.00013099999999999917, 0.00013156899999999805, 0.00013140300000000216, 0.00013126299999999952, 0.00013168000000000207, 0.00013144399999999445, 0.00013158299999999762, 0.00013184699999999744, 0.00013187499999999658, 0.0001315969999999972, 0.00013154100000000585, 0.00013165299999999547, 0.0001315969999999972, 0.0001318189999999983, 0.0001313890000000026, 0.0001314860000000001, 0.00013162500000000327, 0.00013162500000000327, 0.00013179200000000557, 0.00013172200000000078, 0.00013099999999999917, 0.00013123599999999985, 0.00013151399999999924, 0.00013169400000000164, 0.0001317080000000012, 0.0001317769999999996, 0.000131263999999999, 0.0001315279999999988, 0.00013119500000000062, 0.000131263999999999, 0.00013124999999999942, 0.00013140299999999522, 0.0001309859999999996, 0.00013099999999999917, 0.00013161099999999676, 0.0001317080000000012, 0.00013162499999999633, 0.00013111099999999626, 0.00013174999999999992, 0.0001309859999999996, 0.00013131900000000474, 0.00013133299999999737, 0.0001315409999999989, 0.0001314860000000001, 0.00013127799999999856, 0.00013111099999999626, 0.00013177799999999906, 0.00013151299999999977]</msg>
<status status="PASS" starttime="20201030 15:57:43.628" endtime="20201030 15:57:43.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.617" endtime="20201030 15:57:43.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:43.644" endtime="20201030 15:57:43.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.640" endtime="20201030 15:57:43.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.637" endtime="20201030 15:57:43.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.134" endtime="20201030 15:57:43.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.133" endtime="20201030 15:57:43.670"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.692" endtime="20201030 15:57:43.715"></status>
</kw>
<msg timestamp="20201030 15:57:43.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:43.689" endtime="20201030 15:57:43.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:43.718" endtime="20201030 15:57:43.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.724" endtime="20201030 15:57:43.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.682" endtime="20201030 15:57:43.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.676" endtime="20201030 15:57:43.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.747" endtime="20201030 15:57:44.099"></status>
</kw>
<msg timestamp="20201030 15:57:44.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040132208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040265042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:43.744" endtime="20201030 15:57:44.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040132208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040265042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:44.109" endtime="20201030 15:57:44.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.128" endtime="20201030 15:57:44.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.737" endtime="20201030 15:57:44.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.732" endtime="20201030 15:57:44.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:44.145" level="INFO">${RESULT} = [{'diff': 0.00013283399999999834}, {'diff': 0.00013245800000000196}, {'diff': 0.00013227799999999956}, {'diff': 0.00013222300000000076}, {'diff': 0.0001321530000000029}, {'diff': 0.0001323049999999992...</msg>
<status status="PASS" starttime="20201030 15:57:44.136" endtime="20201030 15:57:44.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:44.154" level="INFO">${ACCURACY} = {'diff': [0.00013283399999999834, 0.00013245800000000196, 0.00013227799999999956, 0.00013222300000000076, 0.0001321530000000029, 0.00013230499999999923, 0.0001322770000000001, 0.0001325409999999999, 0...</msg>
<status status="PASS" starttime="20201030 15:57:44.147" endtime="20201030 15:57:44.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.165" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:57:44.163" endtime="20201030 15:57:44.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.171" level="INFO">VALUE: [0.00013283399999999834, 0.00013245800000000196, 0.00013227799999999956, 0.00013222300000000076, 0.0001321530000000029, 0.00013230499999999923, 0.0001322770000000001, 0.0001325409999999999, 0.00013297200000000203, 0.0001323890000000036, 0.00013267999999999613, 0.00013270899999999475, 0.00013251400000000024, 0.0001324440000000024, 0.00013256999999999852, 0.000132264, 0.0001328059999999992, 0.00013258400000000503, 0.0001327080000000022, 0.00013256899999999905, 0.00013223600000000085, 0.0001324860000000011, 0.00013287499999999758, 0.0001325279999999998, 0.00013241700000000273, 0.00013248599999999416, 0.00013229199999999913, 0.0001323479999999974, 0.0001326110000000047, 0.00013204100000000635, 0.0001328189999999993, 0.00013263900000000384, 0.0001325279999999998, 0.00013245800000000196, 0.00013223600000000085, 0.00013206999999999802, 0.00013211099999999726, 0.0001324440000000024, 0.00013240300000000316, 0.00013290299999999672, 0.00013270799999999527, 0.00013290300000000366, 0.00013220799999999477, 0.00013294399999999595, 0.00013238899999999665, 0.00013205599999999845, 0.00013227799999999956, 0.00013223600000000085, 0.0001324860000000011, 0.00013240300000000316]</msg>
<status status="PASS" starttime="20201030 15:57:44.168" endtime="20201030 15:57:44.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.156" endtime="20201030 15:57:44.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:44.183" endtime="20201030 15:57:44.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.179" endtime="20201030 15:57:44.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.176" endtime="20201030 15:57:44.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.672" endtime="20201030 15:57:44.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.670" endtime="20201030 15:57:44.208"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.231" endtime="20201030 15:57:44.255"></status>
</kw>
<msg timestamp="20201030 15:57:44.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:44.228" endtime="20201030 15:57:44.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:44.259" endtime="20201030 15:57:44.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.265" endtime="20201030 15:57:44.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.221" endtime="20201030 15:57:44.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.215" endtime="20201030 15:57:44.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.289" endtime="20201030 15:57:44.638"></status>
</kw>
<msg timestamp="20201030 15:57:44.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041849042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041982542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:44.285" endtime="20201030 15:57:44.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041849042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041982542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:44.647" endtime="20201030 15:57:44.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.665" endtime="20201030 15:57:44.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.278" endtime="20201030 15:57:44.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.273" endtime="20201030 15:57:44.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:44.683" level="INFO">${RESULT} = [{'diff': 0.00013349999999999473}, {'diff': 0.00013356999999999952}, {'diff': 0.00013388899999999815}, {'diff': 0.00013393099999999686}, {'diff': 0.00013347200000000253}, {'diff': 0.000133166999999996...</msg>
<status status="PASS" starttime="20201030 15:57:44.674" endtime="20201030 15:57:44.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:44.692" level="INFO">${ACCURACY} = {'diff': [0.00013349999999999473, 0.00013356999999999952, 0.00013388899999999815, 0.00013393099999999686, 0.00013347200000000253, 0.00013316699999999654, 0.00013312499999999783, 0.0001335280000000008,...</msg>
<status status="PASS" starttime="20201030 15:57:44.685" endtime="20201030 15:57:44.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.703" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:57:44.700" endtime="20201030 15:57:44.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.708" level="INFO">VALUE: [0.00013349999999999473, 0.00013356999999999952, 0.00013388899999999815, 0.00013393099999999686, 0.00013347200000000253, 0.00013316699999999654, 0.00013312499999999783, 0.0001335280000000008, 0.0001335269999999944, 0.0001335280000000008, 0.00013391599999999781, 0.00013323600000000185, 0.00013338899999999765, 0.00013311099999999826, 0.0001336660000000045, 0.00013379200000000063, 0.0001338479999999989, 0.00013317999999999663, 0.00013348599999999516, 0.00013344499999999593, 0.00013375000000000192, 0.00013343099999999636, 0.0001333059999999997, 0.00013317999999999663, 0.000133264000000001, 0.00013312499999999783, 0.00013323599999999491, 0.0001338190000000003, 0.00013319499999999568, 0.00013348700000000158, 0.00013325000000000142, 0.00013347200000000253, 0.00013333299999999937, 0.00013377800000000106, 0.00013338899999999765, 0.0001330839999999986, 0.00013397200000000303, 0.00013394399999999695, 0.00013388800000000561, 0.00013379200000000063, 0.00013306899999999955, 0.00013370799999999627, 0.0001339440000000039, 0.0001332770000000011, 0.00013327800000000056, 0.00013301400000000074, 0.00013372199999999584, 0.0001333609999999985, 0.00013338899999999765, 0.00013337499999999808]</msg>
<status status="PASS" starttime="20201030 15:57:44.705" endtime="20201030 15:57:44.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.694" endtime="20201030 15:57:44.711"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:44.722" endtime="20201030 15:57:44.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.716" endtime="20201030 15:57:44.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.714" endtime="20201030 15:57:44.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.211" endtime="20201030 15:57:44.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.209" endtime="20201030 15:57:44.747"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.770" endtime="20201030 15:57:44.793"></status>
</kw>
<msg timestamp="20201030 15:57:44.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:44.767" endtime="20201030 15:57:44.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:44.796" endtime="20201030 15:57:44.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.802" endtime="20201030 15:57:44.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.760" endtime="20201030 15:57:44.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.754" endtime="20201030 15:57:44.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.826" endtime="20201030 15:57:45.175"></status>
</kw>
<msg timestamp="20201030 15:57:45.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040097264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040231319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:44.822" endtime="20201030 15:57:45.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040097264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040231319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:45.185" endtime="20201030 15:57:45.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.203" endtime="20201030 15:57:45.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.815" endtime="20201030 15:57:45.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.810" endtime="20201030 15:57:45.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:45.220" level="INFO">${RESULT} = [{'diff': 0.00013405500000000098}, {'diff': 0.00013482000000000077}, {'diff': 0.00013482000000000077}, {'diff': 0.0001342090000000032}, {'diff': 0.00013434800000000635}, {'diff': 0.000134264000000002}...</msg>
<status status="PASS" starttime="20201030 15:57:45.211" endtime="20201030 15:57:45.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:45.235" level="INFO">${ACCURACY} = {'diff': [0.00013405500000000098, 0.00013482000000000077, 0.00013482000000000077, 0.0001342090000000032, 0.00013434800000000635, 0.000134264000000002, 0.00013484700000000044, 0.00013418000000000457, 0...</msg>
<status status="PASS" starttime="20201030 15:57:45.222" endtime="20201030 15:57:45.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.245" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:57:45.243" endtime="20201030 15:57:45.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.251" level="INFO">VALUE: [0.00013405500000000098, 0.00013482000000000077, 0.00013482000000000077, 0.0001342090000000032, 0.00013434800000000635, 0.000134264000000002, 0.00013484700000000044, 0.00013418000000000457, 0.00013405500000000098, 0.00013412499999999883, 0.00013418100000000405, 0.000134861, 0.000134861, 0.00013438899999999865, 0.00013488899999999915, 0.000134264000000002, 0.00013390199999999824, 0.00013420799999999677, 0.00013447200000000353, 0.0001339440000000039, 0.00013487499999999958, 0.00013465299999999847, 0.00013452799999999487, 0.00013440199999999874, 0.00013440299999999822, 0.0001346389999999989, 0.00013492999999999838, 0.00013474999999999598, 0.00013397200000000303, 0.00013413900000000534, 0.0001343890000000056, 0.0001346389999999989, 0.000134264000000002, 0.00013434699999999994, 0.00013408300000000012, 0.00013461099999999976, 0.0001345280000000018, 0.00013449999999999573, 0.0001343060000000007, 0.00013482000000000077, 0.00013473600000000335, 0.000134264000000002, 0.00013494500000000437, 0.00013433399999999984, 0.0001340839999999996, 0.0001350970000000007, 0.00013393099999999686, 0.0001340969999999997, 0.00013444499999999693, 0.00013429200000000113]</msg>
<status status="PASS" starttime="20201030 15:57:45.248" endtime="20201030 15:57:45.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.236" endtime="20201030 15:57:45.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:45.263" endtime="20201030 15:57:45.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.259" endtime="20201030 15:57:45.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.256" endtime="20201030 15:57:45.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.750" endtime="20201030 15:57:45.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.748" endtime="20201030 15:57:45.288"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.310" endtime="20201030 15:57:45.332"></status>
</kw>
<msg timestamp="20201030 15:57:45.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:45.307" endtime="20201030 15:57:45.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:45.336" endtime="20201030 15:57:45.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.342" endtime="20201030 15:57:45.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.300" endtime="20201030 15:57:45.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.294" endtime="20201030 15:57:45.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.365" endtime="20201030 15:57:45.710"></status>
</kw>
<msg timestamp="20201030 15:57:45.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039146375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039281722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:45.361" endtime="20201030 15:57:45.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039146375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039281722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:45.719" endtime="20201030 15:57:45.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.737" endtime="20201030 15:57:45.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.354" endtime="20201030 15:57:45.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.350" endtime="20201030 15:57:45.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:45.753" level="INFO">${RESULT} = [{'diff': 0.00013534700000000094}, {'diff': 0.00013537500000000008}, {'diff': 0.00013576299999999708}, {'diff': 0.00013504200000000188}, {'diff': 0.00013569499999999818}, {'diff': 0.000135361000000000...</msg>
<status status="PASS" starttime="20201030 15:57:45.745" endtime="20201030 15:57:45.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:45.764" level="INFO">${ACCURACY} = {'diff': [0.00013534700000000094, 0.00013537500000000008, 0.00013576299999999708, 0.00013504200000000188, 0.00013569499999999818, 0.0001353610000000005, 0.000135652, 0.00013506900000000155, 0.00013580...</msg>
<status status="PASS" starttime="20201030 15:57:45.755" endtime="20201030 15:57:45.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.775" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:57:45.773" endtime="20201030 15:57:45.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.780" level="INFO">VALUE: [0.00013534700000000094, 0.00013537500000000008, 0.00013576299999999708, 0.00013504200000000188, 0.00013569499999999818, 0.0001353610000000005, 0.000135652, 0.00013506900000000155, 0.0001358060000000022, 0.00013582000000000177, 0.0001355840000000011, 0.00013511100000000026, 0.00013557000000000152, 0.0001354169999999988, 0.00013504199999999494, 0.0001352770000000031, 0.0001355970000000012, 0.00013523700000000333, 0.0001353610000000005, 0.0001354719999999976, 0.00013577800000000306, 0.00013512499999999983, 0.00013584700000000144, 0.00013548599999999716, 0.00013523600000000385, 0.00013584700000000144, 0.00013516699999999854, 0.0001358469999999945, 0.00013540299999999922, 0.00013558399999999415, 0.0001354169999999988, 0.00013507000000000102, 0.00013534700000000094, 0.00013534700000000094, 0.00013527800000000256, 0.00013543099999999836, 0.00013520899999999725, 0.00013516599999999906, 0.0001353480000000004, 0.00013501400000000274, 0.00013545799999999802, 0.00013501400000000274, 0.0001355840000000011, 0.00013522200000000428, 0.00013522299999999682, 0.00013512499999999983, 0.00013592999999999938, 0.00013545799999999802, 0.0001355840000000011, 0.00013536099999999357]</msg>
<status status="PASS" starttime="20201030 15:57:45.777" endtime="20201030 15:57:45.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.766" endtime="20201030 15:57:45.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:45.792" endtime="20201030 15:57:45.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.788" endtime="20201030 15:57:45.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.786" endtime="20201030 15:57:45.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.290" endtime="20201030 15:57:45.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.289" endtime="20201030 15:57:45.817"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.840" endtime="20201030 15:57:45.862"></status>
</kw>
<msg timestamp="20201030 15:57:45.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:45.836" endtime="20201030 15:57:45.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:45.865" endtime="20201030 15:57:45.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.871" endtime="20201030 15:57:45.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.829" endtime="20201030 15:57:45.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.824" endtime="20201030 15:57:45.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.894" endtime="20201030 15:57:46.250"></status>
</kw>
<msg timestamp="20201030 15:57:46.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039459819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039595833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:45.891" endtime="20201030 15:57:46.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039459819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039595833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:46.259" endtime="20201030 15:57:46.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.278" endtime="20201030 15:57:46.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.884" endtime="20201030 15:57:46.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.879" endtime="20201030 15:57:46.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:46.297" level="INFO">${RESULT} = [{'diff': 0.0001360139999999968}, {'diff': 0.00013688800000000168}, {'diff': 0.00013683400000000234}, {'diff': 0.00013675000000000492}, {'diff': 0.00013694500000000637}, {'diff': 0.0001365830000000026...</msg>
<status status="PASS" starttime="20201030 15:57:46.288" endtime="20201030 15:57:46.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:46.306" level="INFO">${ACCURACY} = {'diff': [0.0001360139999999968, 0.00013688800000000168, 0.00013683400000000234, 0.00013675000000000492, 0.00013694500000000637, 0.00013658300000000262, 0.00013649999999999773, 0.00013656900000000305,...</msg>
<status status="PASS" starttime="20201030 15:57:46.299" endtime="20201030 15:57:46.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.317" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:57:46.315" endtime="20201030 15:57:46.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.323" level="INFO">VALUE: [0.0001360139999999968, 0.00013688800000000168, 0.00013683400000000234, 0.00013675000000000492, 0.00013694500000000637, 0.00013658300000000262, 0.00013649999999999773, 0.00013656900000000305, 0.00013609800000000116, 0.0001364719999999986, 0.0001360689999999956, 0.00013687500000000158, 0.0001363480000000014, 0.00013676399999999755, 0.000136346999999995, 0.0001359860000000046, 0.00013693000000000038, 0.00013690300000000072, 0.00013665199999999406, 0.00013605600000000245, 0.0001365139999999973, 0.00013666700000000004, 0.00013600000000000417, 0.00013673599999999841, 0.00013688900000000115, 0.00013666700000000004, 0.00013649999999999773, 0.00013687500000000158, 0.0001361520000000005, 0.00013655500000000348, 0.00013605500000000298, 0.00013601400000000374, 0.00013681999999999583, 0.0001361939999999992, 0.00013673599999999841, 0.00013682000000000277, 0.00013598599999999766, 0.00013677799999999712, 0.00013665300000000047, 0.0001364169999999998, 0.000136861000000002, 0.00013677800000000406, 0.0001365139999999973, 0.00013679099999999722, 0.0001364169999999998, 0.00013669499999999918, 0.00013594499999999843, 0.00013645799999999902, 0.0001367640000000045, 0.00013605600000000245]</msg>
<status status="PASS" starttime="20201030 15:57:46.320" endtime="20201030 15:57:46.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.308" endtime="20201030 15:57:46.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:46.335" endtime="20201030 15:57:46.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.331" endtime="20201030 15:57:46.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.328" endtime="20201030 15:57:46.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.819" endtime="20201030 15:57:46.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.818" endtime="20201030 15:57:46.360"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.383" endtime="20201030 15:57:46.405"></status>
</kw>
<msg timestamp="20201030 15:57:46.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:46.379" endtime="20201030 15:57:46.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:46.408" endtime="20201030 15:57:46.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.415" endtime="20201030 15:57:46.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.372" endtime="20201030 15:57:46.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.367" endtime="20201030 15:57:46.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.439" endtime="20201030 15:57:46.773"></status>
</kw>
<msg timestamp="20201030 15:57:46.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041114, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041251014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:57:46.436" endtime="20201030 15:57:46.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041114, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041251014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:57:46.782" endtime="20201030 15:57:46.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.800" endtime="20201030 15:57:46.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.428" endtime="20201030 15:57:46.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.423" endtime="20201030 15:57:46.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:46.817" level="INFO">${RESULT} = [{'diff': 0.00013701400000000474}, {'diff': 0.0001375970000000032}, {'diff': 0.00013779100000000516}, {'diff': 0.00013737500000000208}, {'diff': 0.00013781899999999736}, {'diff': 0.0001372369999999984...</msg>
<status status="PASS" starttime="20201030 15:57:46.809" endtime="20201030 15:57:46.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:46.826" level="INFO">${ACCURACY} = {'diff': [0.00013701400000000474, 0.0001375970000000032, 0.00013779100000000516, 0.00013737500000000208, 0.00013781899999999736, 0.0001372369999999984, 0.00013763799999999549, 0.00013715300000000097, ...</msg>
<status status="PASS" starttime="20201030 15:57:46.819" endtime="20201030 15:57:46.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.837" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:57:46.835" endtime="20201030 15:57:46.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.842" level="INFO">VALUE: [0.00013701400000000474, 0.0001375970000000032, 0.00013779100000000516, 0.00013737500000000208, 0.00013781899999999736, 0.0001372369999999984, 0.00013763799999999549, 0.00013715300000000097, 0.0001375139999999983, 0.0001378469999999965, 0.0001370970000000027, 0.00013737499999999514, 0.00013730599999999676, 0.00013693000000000038, 0.00013744400000000045, 0.00013726300000000552, 0.00013774999999999898, 0.0001369719999999991, 0.0001369730000000055, 0.00013779099999999822, 0.00013791699999999435, 0.00013722199999999934, 0.00013786099999999607, 0.00013701300000000527, 0.0001375410000000049, 0.0001373480000000024, 0.00013761100000000276, 0.00013707000000000302, 0.0001370689999999966, 0.00013741600000000131, 0.00013765300000000147, 0.00013786099999999607, 0.00013709699999999575, 0.0001370840000000026, 0.0001376390000000019, 0.0001378339999999964, 0.00013784700000000344, 0.00013749999999999873, 0.00013754099999999797, 0.00013793100000000086, 0.00013773700000000583, 0.00013731899999999686, 0.00013762500000000233, 0.00013795800000000052, 0.00013727799999999762, 0.00013777799999999812, 0.00013786200000000248, 0.00013784700000000344, 0.00013748700000000558, 0.00013776299999999908]</msg>
<status status="PASS" starttime="20201030 15:57:46.839" endtime="20201030 15:57:46.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.828" endtime="20201030 15:57:46.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:46.856" endtime="20201030 15:57:46.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.850" endtime="20201030 15:57:46.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.848" endtime="20201030 15:57:46.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.362" endtime="20201030 15:57:46.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.361" endtime="20201030 15:57:46.881"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.903" endtime="20201030 15:57:46.924"></status>
</kw>
<msg timestamp="20201030 15:57:46.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:46.900" endtime="20201030 15:57:46.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:46.927" endtime="20201030 15:57:46.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.934" endtime="20201030 15:57:46.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.893" endtime="20201030 15:57:46.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.887" endtime="20201030 15:57:46.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.956" endtime="20201030 15:57:47.291"></status>
</kw>
<msg timestamp="20201030 15:57:47.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039056014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039194181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:46.953" endtime="20201030 15:57:47.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039056014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039194181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:47.301" endtime="20201030 15:57:47.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.319" endtime="20201030 15:57:47.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.946" endtime="20201030 15:57:47.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.942" endtime="20201030 15:57:47.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:47.336" level="INFO">${RESULT} = [{'diff': 0.00013816700000000154}, {'diff': 0.00013847300000000007}, {'diff': 0.00013843000000000188}, {'diff': 0.00013887500000000358}, {'diff': 0.0001388469999999975}, {'diff': 0.0001388890000000031...</msg>
<status status="PASS" starttime="20201030 15:57:47.328" endtime="20201030 15:57:47.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:47.347" level="INFO">${ACCURACY} = {'diff': [0.00013816700000000154, 0.00013847300000000007, 0.00013843000000000188, 0.00013887500000000358, 0.0001388469999999975, 0.00013888900000000315, 0.00013849999999999973, 0.00013866700000000204,...</msg>
<status status="PASS" starttime="20201030 15:57:47.338" endtime="20201030 15:57:47.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.357" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:57:47.355" endtime="20201030 15:57:47.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.363" level="INFO">VALUE: [0.00013816700000000154, 0.00013847300000000007, 0.00013843000000000188, 0.00013887500000000358, 0.0001388469999999975, 0.00013888900000000315, 0.00013849999999999973, 0.00013866700000000204, 0.00013886099999999707, 0.0001386390000000029, 0.00013859699999999725, 0.00013842999999999495, 0.00013826399999999905, 0.00013874999999999998, 0.00013809800000000316, 0.00013804199999999794, 0.00013862500000000333, 0.00013848600000000016, 0.0001387640000000065, 0.00013862500000000333, 0.0001383610000000035, 0.00013799999999999923, 0.00013833300000000437, 0.00013827699999999915, 0.000138959000000001, 0.00013858299999999768, 0.0001385970000000042, 0.00013843100000000136, 0.00013869399999999477, 0.00013830599999999776, 0.00013826399999999905, 0.00013834700000000394, 0.0001379720000000001, 0.00013872200000000084, 0.00013840300000000222, 0.00013838900000000265, 0.00013792999999999445, 0.00013876399999999955, 0.0001384170000000018, 0.00013836199999999604, 0.00013852799999999887, 0.00013808399999999665, 0.00013888900000000315, 0.00013872200000000084, 0.00013852799999999887, 0.00013800000000000617, 0.0001385280000000058, 0.00013818000000000163, 0.00013888900000000315, 0.0001379720000000001]</msg>
<status status="PASS" starttime="20201030 15:57:47.360" endtime="20201030 15:57:47.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.348" endtime="20201030 15:57:47.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:47.376" endtime="20201030 15:57:47.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.371" endtime="20201030 15:57:47.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.369" endtime="20201030 15:57:47.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.883" endtime="20201030 15:57:47.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.882" endtime="20201030 15:57:47.401"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.424" endtime="20201030 15:57:47.445"></status>
</kw>
<msg timestamp="20201030 15:57:47.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:47.420" endtime="20201030 15:57:47.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:47.448" endtime="20201030 15:57:47.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.455" endtime="20201030 15:57:47.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.413" endtime="20201030 15:57:47.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.407" endtime="20201030 15:57:47.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.478" endtime="20201030 15:57:47.815"></status>
</kw>
<msg timestamp="20201030 15:57:47.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040081069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040220722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:47.475" endtime="20201030 15:57:47.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040081069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040220722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:47.824" endtime="20201030 15:57:47.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.842" endtime="20201030 15:57:47.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.468" endtime="20201030 15:57:47.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.463" endtime="20201030 15:57:47.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:47.859" level="INFO">${RESULT} = [{'diff': 0.00013965300000000347}, {'diff': 0.0001389720000000011}, {'diff': 0.00013940300000000322}, {'diff': 0.00013923599999999398}, {'diff': 0.0001393049999999993}, {'diff': 0.00013936099999999757...</msg>
<status status="PASS" starttime="20201030 15:57:47.851" endtime="20201030 15:57:47.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:47.871" level="INFO">${ACCURACY} = {'diff': [0.00013965300000000347, 0.0001389720000000011, 0.00013940300000000322, 0.00013923599999999398, 0.0001393049999999993, 0.00013936099999999757, 0.000139346999999998, 0.00013993100000000286, 0....</msg>
<status status="PASS" starttime="20201030 15:57:47.862" endtime="20201030 15:57:47.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.882" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:57:47.879" endtime="20201030 15:57:47.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.887" level="INFO">VALUE: [0.00013965300000000347, 0.0001389720000000011, 0.00013940300000000322, 0.00013923599999999398, 0.0001393049999999993, 0.00013936099999999757, 0.000139346999999998, 0.00013993100000000286, 0.00013922200000000134, 0.00013936199999999704, 0.00013982000000000577, 0.0001392919999999992, 0.00013948600000000116, 0.00013929099999999972, 0.00013895799999999459, 0.0001396249999999974, 0.00013944399999999552, 0.00013925000000000048, 0.00013907000000000502, 0.00013977800000000012, 0.00013922200000000134, 0.00013994400000000295, 0.0001391940000000022, 0.0001391810000000021, 0.00013945800000000202, 0.00013930599999999876, 0.00013976400000000055, 0.00013930599999999876, 0.00013936200000000398, 0.00013933400000000484, 0.00013975000000000098, 0.00013940200000000375, 0.00013926400000000005, 0.00013956999999999858, 0.00013930599999999876, 0.00013919499999999474, 0.0001398889999999972, 0.00013943000000000288, 0.00013970800000000227, 0.00013927799999999962, 0.0001398469999999985, 0.0001395140000000003, 0.0001390139999999998, 0.0001396249999999974, 0.00013958299999999868, 0.00013980500000000673, 0.00013943000000000288, 0.0001392219999999944, 0.00013954199999999944, 0.00013927799999999962]</msg>
<status status="PASS" starttime="20201030 15:57:47.884" endtime="20201030 15:57:47.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.872" endtime="20201030 15:57:47.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:47.899" endtime="20201030 15:57:47.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.895" endtime="20201030 15:57:47.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.893" endtime="20201030 15:57:47.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.403" endtime="20201030 15:57:47.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.402" endtime="20201030 15:57:47.924"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.947" endtime="20201030 15:57:47.969"></status>
</kw>
<msg timestamp="20201030 15:57:47.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:47.944" endtime="20201030 15:57:47.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:47.972" endtime="20201030 15:57:47.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.979" endtime="20201030 15:57:47.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.937" endtime="20201030 15:57:47.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.931" endtime="20201030 15:57:47.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.002" endtime="20201030 15:57:48.341"></status>
</kw>
<msg timestamp="20201030 15:57:48.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040108167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040248903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:47.999" endtime="20201030 15:57:48.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040108167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040248903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:48.350" endtime="20201030 15:57:48.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.369" endtime="20201030 15:57:48.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.992" endtime="20201030 15:57:48.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.987" endtime="20201030 15:57:48.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:48.386" level="INFO">${RESULT} = [{'diff': 0.00014073600000000241}, {'diff': 0.00014087499999999864}, {'diff': 0.0001405690000000001}, {'diff': 0.00014022300000000182}, {'diff': 0.00014091599999999788}, {'diff': 0.0001403329999999994...</msg>
<status status="PASS" starttime="20201030 15:57:48.377" endtime="20201030 15:57:48.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:48.395" level="INFO">${ACCURACY} = {'diff': [0.00014073600000000241, 0.00014087499999999864, 0.0001405690000000001, 0.00014022300000000182, 0.00014091599999999788, 0.00014033299999999943, 0.0001401810000000031, 0.00014005599999999951, ...</msg>
<status status="PASS" starttime="20201030 15:57:48.388" endtime="20201030 15:57:48.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.406" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:57:48.404" endtime="20201030 15:57:48.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.412" level="INFO">VALUE: [0.00014073600000000241, 0.00014087499999999864, 0.0001405690000000001, 0.00014022300000000182, 0.00014091599999999788, 0.00014033299999999943, 0.0001401810000000031, 0.00014005599999999951, 0.00014008299999999918, 0.00014059699999999925, 0.00014026399999999412, 0.00014077800000000112, 0.00014048599999999523, 0.00013998600000000166, 0.00014050000000000173, 0.00014018099999999617, 0.00014013899999999746, 0.0001400270000000009, 0.00014076400000000155, 0.00014044399999999652, 0.00014008399999999865, 0.00014081900000000036, 0.0001402920000000002, 0.00014044399999999652, 0.0001401810000000031, 0.00014072300000000232, 0.00014051300000000183, 0.00014030599999999976, 0.00014054200000000044, 0.000140346999999999, 0.0001403339999999989, 0.00014056999999999958, 0.00014024999999999455, 0.00014008399999999865, 0.00014076400000000155, 0.00014020900000000225, 0.00014033300000000637, 0.00013998600000000166, 0.00014059699999999925, 0.00014042999999999695, 0.00014019500000000268, 0.00014073599999999548, 0.0001403889999999977, 0.00014073599999999548, 0.0001407920000000007, 0.0001409170000000043, 0.00014074999999999505, 0.00014011099999999832, 0.00014087499999999864, 0.00014040299999999728]</msg>
<status status="PASS" starttime="20201030 15:57:48.408" endtime="20201030 15:57:48.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.397" endtime="20201030 15:57:48.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:48.428" endtime="20201030 15:57:48.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.422" endtime="20201030 15:57:48.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.419" endtime="20201030 15:57:48.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.927" endtime="20201030 15:57:48.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.926" endtime="20201030 15:57:48.455"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.479" endtime="20201030 15:57:48.502"></status>
</kw>
<msg timestamp="20201030 15:57:48.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:48.476" endtime="20201030 15:57:48.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:48.505" endtime="20201030 15:57:48.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.512" endtime="20201030 15:57:48.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.468" endtime="20201030 15:57:48.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.463" endtime="20201030 15:57:48.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.535" endtime="20201030 15:57:48.873"></status>
</kw>
<msg timestamp="20201030 15:57:48.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044151986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044293611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:48.532" endtime="20201030 15:57:48.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044151986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044293611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:48.883" endtime="20201030 15:57:48.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.901" endtime="20201030 15:57:48.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.525" endtime="20201030 15:57:48.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.520" endtime="20201030 15:57:48.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:48.918" level="INFO">${RESULT} = [{'diff': 0.0001416249999999994}, {'diff': 0.00014133300000000043}, {'diff': 0.00014170799999999734}, {'diff': 0.00014174999999999605}, {'diff': 0.00014154100000000197}, {'diff': 0.0001413479999999994...</msg>
<status status="PASS" starttime="20201030 15:57:48.909" endtime="20201030 15:57:48.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:48.927" level="INFO">${ACCURACY} = {'diff': [0.0001416249999999994, 0.00014133300000000043, 0.00014170799999999734, 0.00014174999999999605, 0.00014154100000000197, 0.00014134799999999947, 0.0001419019999999993, 0.00014183300000000093, ...</msg>
<status status="PASS" starttime="20201030 15:57:48.920" endtime="20201030 15:57:48.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.938" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:57:48.936" endtime="20201030 15:57:48.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.943" level="INFO">VALUE: [0.0001416249999999994, 0.00014133300000000043, 0.00014170799999999734, 0.00014174999999999605, 0.00014154100000000197, 0.00014134799999999947, 0.0001419019999999993, 0.00014183300000000093, 0.00014155600000000101, 0.0001413480000000064, 0.00014152800000000187, 0.00014109699999999975, 0.00014140299999999828, 0.0001413050000000013, 0.0001418470000000005, 0.0001416810000000046, 0.00014137499999999914, 0.00014181900000000136, 0.00014105500000000104, 0.00014126400000000205, 0.00014137499999999914, 0.00014159700000000025, 0.00014181899999999442, 0.0001411799999999977, 0.00014197199999999716, 0.0001410140000000018, 0.00014120800000000377, 0.00014118099999999717, 0.00014122200000000334, 0.00014130600000000076, 0.00014159700000000025, 0.00014109799999999922, 0.00014093099999999692, 0.00014100000000000223, 0.00014173599999999648, 0.00014141599999999838, 0.00014105500000000104, 0.00014143099999999742, 0.00014177800000000212, 0.0001409720000000031, 0.00014126400000000205, 0.0001413889999999987, 0.0001409999999999953, 0.00014123600000000291, 0.00014145799999999709, 0.00014104100000000147, 0.00014180600000000126, 0.00014158300000000068, 0.000141959000000004, 0.00014184799999999997]</msg>
<status status="PASS" starttime="20201030 15:57:48.941" endtime="20201030 15:57:48.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.929" endtime="20201030 15:57:48.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:48.957" endtime="20201030 15:57:48.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.952" endtime="20201030 15:57:48.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.949" endtime="20201030 15:57:48.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.458" endtime="20201030 15:57:48.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.457" endtime="20201030 15:57:48.983"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.005" endtime="20201030 15:57:49.027"></status>
</kw>
<msg timestamp="20201030 15:57:49.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:49.002" endtime="20201030 15:57:49.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:49.030" endtime="20201030 15:57:49.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.037" endtime="20201030 15:57:49.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.995" endtime="20201030 15:57:49.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.989" endtime="20201030 15:57:49.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.063" endtime="20201030 15:57:49.402"></status>
</kw>
<msg timestamp="20201030 15:57:49.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039858222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040000306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:49.059" endtime="20201030 15:57:49.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039858222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040000306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:49.411" endtime="20201030 15:57:49.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.430" endtime="20201030 15:57:49.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.050" endtime="20201030 15:57:49.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.045" endtime="20201030 15:57:49.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:49.447" level="INFO">${RESULT} = [{'diff': 0.00014208400000000065}, {'diff': 0.00014241599999999938}, {'diff': 0.00014237500000000014}, {'diff': 0.00014202799999999544}, {'diff': 0.0001426799999999992}, {'diff': 0.0001423189999999949...</msg>
<status status="PASS" starttime="20201030 15:57:49.438" endtime="20201030 15:57:49.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:49.457" level="INFO">${ACCURACY} = {'diff': [0.00014208400000000065, 0.00014241599999999938, 0.00014237500000000014, 0.00014202799999999544, 0.0001426799999999992, 0.00014231899999999492, 0.00014230600000000176, 0.00014204200000000194,...</msg>
<status status="PASS" starttime="20201030 15:57:49.449" endtime="20201030 15:57:49.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.468" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:57:49.466" endtime="20201030 15:57:49.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.473" level="INFO">VALUE: [0.00014208400000000065, 0.00014241599999999938, 0.00014237500000000014, 0.00014202799999999544, 0.0001426799999999992, 0.00014231899999999492, 0.00014230600000000176, 0.00014204200000000194, 0.00014247299999999713, 0.0001425690000000021, 0.00014218099999999817, 0.00014237500000000014, 0.00014240300000000622, 0.0001424999999999968, 0.000142347000000001, 0.00014215299999999903, 0.00014276399999999662, 0.00014298599999999773, 0.00014286100000000107, 0.00014241699999999885, 0.00014224999999999655, 0.00014204200000000194, 0.0001424720000000046, 0.0001428340000000014, 0.00014233300000000143, 0.000141959000000004, 0.00014247199999999766, 0.00014219499999999774, 0.00014262499999999345, 0.00014220800000000478, 0.00014280600000000226, 0.00014205500000000204, 0.00014216599999999913, 0.00014279199999999576, 0.0001425270000000034, 0.00014202799999999544, 0.0001422219999999974, 0.00014272299999999738, 0.00014237500000000014, 0.00014265299999999953, 0.00014226400000000305, 0.0001423889999999997, 0.00014204200000000194, 0.00014233300000000143, 0.0001427089999999978, 0.0001425690000000021, 0.00014208300000000118, 0.00014213899999999946, 0.00014226400000000305, 0.00014245800000000503]</msg>
<status status="PASS" starttime="20201030 15:57:49.470" endtime="20201030 15:57:49.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.459" endtime="20201030 15:57:49.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:49.486" endtime="20201030 15:57:49.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.482" endtime="20201030 15:57:49.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.479" endtime="20201030 15:57:49.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.985" endtime="20201030 15:57:49.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.984" endtime="20201030 15:57:49.511"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.534" endtime="20201030 15:57:49.555"></status>
</kw>
<msg timestamp="20201030 15:57:49.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:49.531" endtime="20201030 15:57:49.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:49.559" endtime="20201030 15:57:49.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.565" endtime="20201030 15:57:49.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.523" endtime="20201030 15:57:49.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.518" endtime="20201030 15:57:49.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.589" endtime="20201030 15:57:49.926"></status>
</kw>
<msg timestamp="20201030 15:57:49.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039835222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039978778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:49.585" endtime="20201030 15:57:49.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039835222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039978778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:49.935" endtime="20201030 15:57:49.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.954" endtime="20201030 15:57:49.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.578" endtime="20201030 15:57:49.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.573" endtime="20201030 15:57:49.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:49.971" level="INFO">${RESULT} = [{'diff': 0.00014355599999999608}, {'diff': 0.00014330599999999583}, {'diff': 0.00014326400000000405}, {'diff': 0.0001435129999999979}, {'diff': 0.00014398599999999873}, {'diff': 0.0001433329999999955...</msg>
<status status="PASS" starttime="20201030 15:57:49.962" endtime="20201030 15:57:49.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:49.982" level="INFO">${ACCURACY} = {'diff': [0.00014355599999999608, 0.00014330599999999583, 0.00014326400000000405, 0.0001435129999999979, 0.00014398599999999873, 0.0001433329999999955, 0.0001439999999999983, 0.0001436120000000013, 0....</msg>
<status status="PASS" starttime="20201030 15:57:49.973" endtime="20201030 15:57:49.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.993" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:57:49.991" endtime="20201030 15:57:49.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.998" level="INFO">VALUE: [0.00014355599999999608, 0.00014330599999999583, 0.00014326400000000405, 0.0001435129999999979, 0.00014398599999999873, 0.0001433329999999955, 0.0001439999999999983, 0.0001436120000000013, 0.00014295800000000553, 0.00014370799999999934, 0.00014354200000000344, 0.0001429449999999985, 0.00014308300000000218, 0.00014386200000000154, 0.00014313899999999352, 0.00014311100000000132, 0.00014302699999999696, 0.0001438050000000038, 0.00014359800000000172, 0.00014297300000000457, 0.00014390299999999384, 0.00014358300000000268, 0.00014382000000000283, 0.00014383300000000293, 0.00014363899999999402, 0.00014365200000000106, 0.00014315300000000003, 0.00014330600000000276, 0.00014370799999999934, 0.00014361100000000182, 0.00014305600000000251, 0.00014320799999999884, 0.00014336100000000157, 0.00014373599999999848, 0.00014368099999999967, 0.000143832999999996, 0.0001435419999999965, 0.00014311100000000132, 0.00014336100000000157, 0.00014352799999999694, 0.0001437219999999989, 0.00014352799999999694, 0.0001435140000000043, 0.00014379199999999676, 0.00014305600000000251, 0.00014376400000000455, 0.00014377799999999719, 0.00014358300000000268, 0.00014387500000000164, 0.00014373599999999848]</msg>
<status status="PASS" starttime="20201030 15:57:49.995" endtime="20201030 15:57:50.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.984" endtime="20201030 15:57:50.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:50.011" endtime="20201030 15:57:50.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.006" endtime="20201030 15:57:50.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.004" endtime="20201030 15:57:50.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.513" endtime="20201030 15:57:50.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.512" endtime="20201030 15:57:50.036"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.059" endtime="20201030 15:57:50.080"></status>
</kw>
<msg timestamp="20201030 15:57:50.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:50.055" endtime="20201030 15:57:50.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:50.084" endtime="20201030 15:57:50.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.090" endtime="20201030 15:57:50.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.048" endtime="20201030 15:57:50.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.042" endtime="20201030 15:57:50.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.113" endtime="20201030 15:57:50.454"></status>
</kw>
<msg timestamp="20201030 15:57:50.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039905319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040049861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:50.110" endtime="20201030 15:57:50.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039905319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040049861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:50.463" endtime="20201030 15:57:50.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.482" endtime="20201030 15:57:50.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.103" endtime="20201030 15:57:50.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.098" endtime="20201030 15:57:50.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:50.499" level="INFO">${RESULT} = [{'diff': 0.0001445419999999975}, {'diff': 0.00014448599999999923}, {'diff': 0.0001445419999999975}, {'diff': 0.0001446659999999947}, {'diff': 0.00014486100000000307}, {'diff': 0.00014441700000000085}...</msg>
<status status="PASS" starttime="20201030 15:57:50.490" endtime="20201030 15:57:50.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:50.508" level="INFO">${ACCURACY} = {'diff': [0.0001445419999999975, 0.00014448599999999923, 0.0001445419999999975, 0.0001446659999999947, 0.00014486100000000307, 0.00014441700000000085, 0.00014470800000000034, 0.00014401399999999787, 0...</msg>
<status status="PASS" starttime="20201030 15:57:50.501" endtime="20201030 15:57:50.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.519" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:57:50.517" endtime="20201030 15:57:50.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.524" level="INFO">VALUE: [0.0001445419999999975, 0.00014448599999999923, 0.0001445419999999975, 0.0001446659999999947, 0.00014486100000000307, 0.00014441700000000085, 0.00014470800000000034, 0.00014401399999999787, 0.00014448599999999923, 0.00014418100000000017, 0.00014434799999999554, 0.00014468099999999373, 0.00014436100000000257, 0.0001443890000000017, 0.00014411100000000232, 0.0001445129999999989, 0.00014452800000000487, 0.00014491700000000135, 0.000144347000000003, 0.0001446670000000011, 0.00014440299999999434, 0.00014441600000000138, 0.00014405599999999658, 0.0001445549999999976, 0.000144832999999997, 0.00014415199999999462, 0.00014450000000000573, 0.00014425000000000548, 0.00014473600000000642, 0.00014476399999999862, 0.00014415300000000103, 0.00014483300000000393, 0.0001449450000000005, 0.00014480599999999733, 0.00014466600000000163, 0.00014433300000000343, 0.00014474999999999905, 0.00014448599999999923, 0.00014419499999999974, 0.00014419400000000027, 0.0001448199999999969, 0.0001447219999999999, 0.00014395799999999959, 0.00014459800000000272, 0.00014457000000000358, 0.00014480499999999785, 0.00014461100000000282, 0.00014501399999999887, 0.00014448600000000617, 0.00014461099999999588]</msg>
<status status="PASS" starttime="20201030 15:57:50.521" endtime="20201030 15:57:50.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.510" endtime="20201030 15:57:50.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:50.537" endtime="20201030 15:57:50.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.532" endtime="20201030 15:57:50.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.530" endtime="20201030 15:57:50.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.038" endtime="20201030 15:57:50.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.037" endtime="20201030 15:57:50.562"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.585" endtime="20201030 15:57:50.681"></status>
</kw>
<msg timestamp="20201030 15:57:50.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:50.581" endtime="20201030 15:57:50.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:50.685" endtime="20201030 15:57:50.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.691" endtime="20201030 15:57:50.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.574" endtime="20201030 15:57:50.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.568" endtime="20201030 15:57:50.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.715" endtime="20201030 15:57:51.061"></status>
</kw>
<msg timestamp="20201030 15:57:51.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.114818236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.114964111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:50.711" endtime="20201030 15:57:51.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:51.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.114818236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.114964111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:51.071" endtime="20201030 15:57:51.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:51.089" endtime="20201030 15:57:51.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.704" endtime="20201030 15:57:51.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.700" endtime="20201030 15:57:51.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:51.106" level="INFO">${RESULT} = [{'diff': 0.00014587499999998976}, {'diff': 0.00014551399999999937}, {'diff': 0.00014583399999999747}, {'diff': 0.00014558300000000468}, {'diff': 0.00014594400000000896}, {'diff': 0.000145527999999992...</msg>
<status status="PASS" starttime="20201030 15:57:51.098" endtime="20201030 15:57:51.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:51.115" level="INFO">${ACCURACY} = {'diff': [0.00014587499999998976, 0.00014551399999999937, 0.00014583399999999747, 0.00014558300000000468, 0.00014594400000000896, 0.000145527999999992, 0.00014498599999999973, 0.00014511100000000332, ...</msg>
<status status="PASS" starttime="20201030 15:57:51.108" endtime="20201030 15:57:51.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:51.127" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:57:51.125" endtime="20201030 15:57:51.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:51.133" level="INFO">VALUE: [0.00014587499999998976, 0.00014551399999999937, 0.00014583399999999747, 0.00014558300000000468, 0.00014594400000000896, 0.000145527999999992, 0.00014498599999999973, 0.00014511100000000332, 0.00014575000000000005, 0.000145347000000004, 0.00014551399999999937, 0.00014562499999999645, 0.0001454170000000088, 0.00014556999999999765, 0.0001450969999999968, 0.00014513900000000246, 0.000145041999999998, 0.00014544499999999405, 0.00014576399999999268, 0.00014558399999999028, 0.00014527799999999869, 0.00014548600000000023, 0.00014544399999999458, 0.00014576400000000655, 0.00014544399999999458, 0.00014566699999998822, 0.00014598600000000073, 0.00014494399999999408, 0.00014538899999999577, 0.00014524999999999955, 0.0001450829999999903, 0.00014545900000000056, 0.00014563900000000296, 0.000145347000000004, 0.00014536099999999663, 0.00014511100000000332, 0.0001453619999999961, 0.00014504099999999853, 0.00014584699999999062, 0.0001458470000000045, 0.0001453329999999975, 0.00014587500000000364, 0.00014549999999999286, 0.00014575000000000005, 0.00014548600000000023, 0.00014592999999998857, 0.00014501400000001274, 0.000145041999999998, 0.00014530599999999783, 0.0001457079999999944]</msg>
<status status="PASS" starttime="20201030 15:57:51.130" endtime="20201030 15:57:51.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.117" endtime="20201030 15:57:51.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:51.145" endtime="20201030 15:57:51.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.141" endtime="20201030 15:57:51.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.138" endtime="20201030 15:57:51.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.564" endtime="20201030 15:57:51.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.563" endtime="20201030 15:57:51.170"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:51.193" endtime="20201030 15:57:51.215"></status>
</kw>
<msg timestamp="20201030 15:57:51.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:51.190" endtime="20201030 15:57:51.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:51.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:51.218" endtime="20201030 15:57:51.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:51.224" endtime="20201030 15:57:51.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.182" endtime="20201030 15:57:51.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.177" endtime="20201030 15:57:51.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:51.247" endtime="20201030 15:57:51.585"></status>
</kw>
<msg timestamp="20201030 15:57:51.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039790597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039937472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:51.244" endtime="20201030 15:57:51.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:51.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039790597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039937472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:51.595" endtime="20201030 15:57:51.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:51.613" endtime="20201030 15:57:51.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.237" endtime="20201030 15:57:51.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.232" endtime="20201030 15:57:51.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:51.630" level="INFO">${RESULT} = [{'diff': 0.00014687500000000464}, {'diff': 0.00014694399999999608}, {'diff': 0.00014661099999999788}, {'diff': 0.0001459859999999938}, {'diff': 0.00014658299999999874}, {'diff': 0.0001465699999999986...</msg>
<status status="PASS" starttime="20201030 15:57:51.621" endtime="20201030 15:57:51.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:51.641" level="INFO">${ACCURACY} = {'diff': [0.00014687500000000464, 0.00014694399999999608, 0.00014661099999999788, 0.0001459859999999938, 0.00014658299999999874, 0.00014656999999999865, 0.0001468749999999977, 0.00014652799999999994, ...</msg>
<status status="PASS" starttime="20201030 15:57:51.632" endtime="20201030 15:57:51.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:51.652" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:57:51.650" endtime="20201030 15:57:51.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:51.657" level="INFO">VALUE: [0.00014687500000000464, 0.00014694399999999608, 0.00014661099999999788, 0.0001459859999999938, 0.00014658299999999874, 0.00014656999999999865, 0.0001468749999999977, 0.00014652799999999994, 0.00014641600000000338, 0.00014601399999999987, 0.00014673600000000148, 0.00014690300000000378, 0.0001463749999999972, 0.000146832999999999, 0.0001466659999999967, 0.00014652699999999352, 0.00014623599999999404, 0.00014661099999999788, 0.00014626400000000012, 0.00014665300000000353, 0.00014673599999999454, 0.00014676400000000062, 0.00014636200000000404, 0.00014667999999999626, 0.00014641700000000285, 0.00014690299999999684, 0.0001466670000000031, 0.00014659700000000525, 0.00014698600000000173, 0.00014608300000000518, 0.0001463329999999985, 0.00014647199999999472, 0.00014626400000000012, 0.000146832999999999, 0.00014606899999999867, 0.0001465969999999983, 0.000146832999999999, 0.0001467220000000019, 0.00014695900000000206, 0.00014673599999999454, 0.00014649999999999386, 0.00014659700000000525, 0.0001469299999999965, 0.00014695900000000206, 0.00014602799999999944, 0.00014645900000000156, 0.00014667999999999626, 0.00014606999999999815, 0.0001464580000000021, 0.00014652799999999994]</msg>
<status status="PASS" starttime="20201030 15:57:51.654" endtime="20201030 15:57:51.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.643" endtime="20201030 15:57:51.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:51.670" endtime="20201030 15:57:51.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.665" endtime="20201030 15:57:51.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.663" endtime="20201030 15:57:51.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.172" endtime="20201030 15:57:51.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.171" endtime="20201030 15:57:51.695"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:51.717" endtime="20201030 15:57:51.739"></status>
</kw>
<msg timestamp="20201030 15:57:51.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:51.714" endtime="20201030 15:57:51.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:51.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:51.743" endtime="20201030 15:57:51.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:51.749" endtime="20201030 15:57:51.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.707" endtime="20201030 15:57:51.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.701" endtime="20201030 15:57:51.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:51.772" endtime="20201030 15:57:52.112"></status>
</kw>
<msg timestamp="20201030 15:57:52.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039835181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039982792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:51.769" endtime="20201030 15:57:52.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:52.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039835181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039982792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:52.122" endtime="20201030 15:57:52.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:52.140" endtime="20201030 15:57:52.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.762" endtime="20201030 15:57:52.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.757" endtime="20201030 15:57:52.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:52.157" level="INFO">${RESULT} = [{'diff': 0.00014761100000000582}, {'diff': 0.0001471670000000036}, {'diff': 0.00014741599999999744}, {'diff': 0.00014795799999999665}, {'diff': 0.00014763899999999802}, {'diff': 0.0001477079999999964...</msg>
<status status="PASS" starttime="20201030 15:57:52.149" endtime="20201030 15:57:52.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:52.166" level="INFO">${ACCURACY} = {'diff': [0.00014761100000000582, 0.0001471670000000036, 0.00014741599999999744, 0.00014795799999999665, 0.00014763899999999802, 0.0001477079999999964, 0.00014730500000000035, 0.00014715300000000403, ...</msg>
<status status="PASS" starttime="20201030 15:57:52.159" endtime="20201030 15:57:52.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:52.177" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:57:52.175" endtime="20201030 15:57:52.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:52.182" level="INFO">VALUE: [0.00014761100000000582, 0.0001471670000000036, 0.00014741599999999744, 0.00014795799999999665, 0.00014763899999999802, 0.0001477079999999964, 0.00014730500000000035, 0.00014715300000000403, 0.00014779100000000128, 0.00014711099999999838, 0.00014788899999999827, 0.0001476529999999976, 0.00014715300000000403, 0.00014712499999999795, 0.0001479450000000035, 0.0001473749999999982, 0.00014766600000000463, 0.00014768100000000367, 0.00014733399999999897, 0.00014734699999999906, 0.00014780500000000085, 0.0001476250000000054, 0.00014795900000000306, 0.000147042, 0.00014763899999999802, 0.00014747199999999572, 0.00014726400000000112, 0.00014784699999999956, 0.0001473890000000047, 0.0001478340000000064, 0.00014725000000000155, 0.00014720800000000284, 0.00014779200000000076, 0.00014731899999999992, 0.00014798600000000273, 0.00014719399999999633, 0.00014743100000000342, 0.00014744400000000352, 0.0001470550000000001, 0.00014804100000000153, 0.00014749999999999486, 0.00014740299999999734, 0.00014706999999999915, 0.00014717999999999676, 0.0001474169999999969, 0.0001477220000000029, 0.00014773600000000248, 0.00014712499999999795, 0.00014758299999999974, 0.00014740299999999734]</msg>
<status status="PASS" starttime="20201030 15:57:52.179" endtime="20201030 15:57:52.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.168" endtime="20201030 15:57:52.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:52.194" endtime="20201030 15:57:52.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.190" endtime="20201030 15:57:52.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.188" endtime="20201030 15:57:52.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.697" endtime="20201030 15:57:52.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.696" endtime="20201030 15:57:52.219"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:52.243" endtime="20201030 15:57:52.264"></status>
</kw>
<msg timestamp="20201030 15:57:52.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:52.239" endtime="20201030 15:57:52.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:52.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:52.267" endtime="20201030 15:57:52.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:52.274" endtime="20201030 15:57:52.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.231" endtime="20201030 15:57:52.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.225" endtime="20201030 15:57:52.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:52.296" endtime="20201030 15:57:52.638"></status>
</kw>
<msg timestamp="20201030 15:57:52.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040208486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040357056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:52.293" endtime="20201030 15:57:52.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:52.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040208486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040357056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:52.648" endtime="20201030 15:57:52.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:52.667" endtime="20201030 15:57:52.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.286" endtime="20201030 15:57:52.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.282" endtime="20201030 15:57:52.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:52.684" level="INFO">${RESULT} = [{'diff': 0.00014857000000000065}, {'diff': 0.00014836099999999963}, {'diff': 0.0001482499999999956}, {'diff': 0.00014884700000000056}, {'diff': 0.00014799999999999536}, {'diff': 0.0001487920000000017...</msg>
<status status="PASS" starttime="20201030 15:57:52.675" endtime="20201030 15:57:52.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:52.693" level="INFO">${ACCURACY} = {'diff': [0.00014857000000000065, 0.00014836099999999963, 0.0001482499999999956, 0.00014884700000000056, 0.00014799999999999536, 0.00014879200000000176, 0.00014834799999999954, 0.00014811199999999886,...</msg>
<status status="PASS" starttime="20201030 15:57:52.686" endtime="20201030 15:57:52.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:52.704" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:57:52.702" endtime="20201030 15:57:52.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:52.710" level="INFO">VALUE: [0.00014857000000000065, 0.00014836099999999963, 0.0001482499999999956, 0.00014884700000000056, 0.00014799999999999536, 0.00014879200000000176, 0.00014834799999999954, 0.00014811199999999886, 0.00014879200000000176, 0.00014838899999999877, 0.00014820800000000384, 0.00014873700000000295, 0.00014893000000000545, 0.0001483330000000005, 0.00014893099999999798, 0.00014834700000000006, 0.00014867999999999826, 0.00014880600000000133, 0.00014847199999999672, 0.00014838899999999877, 0.00014888899999999927, 0.00014868099999999773, 0.000148042000000001, 0.00014858300000000074, 0.00014862499999999945, 0.0001486529999999986, 0.00014845799999999715, 0.00014838899999999877, 0.00014851400000000237, 0.00014890299999999884, 0.0001488749999999997, 0.00014834700000000006, 0.00014833399999999997, 0.00014894399999999808, 0.0001480550000000011, 0.00014893099999999798, 0.00014840299999999834, 0.00014793100000000392, 0.00014798699999999526, 0.0001484870000000027, 0.00014805499999999416, 0.00014815300000000503, 0.00014797200000000316, 0.00014879200000000176, 0.00014819400000000427, 0.00014877799999999525, 0.00014877800000000219, 0.00014833399999999997, 0.00014876400000000262, 0.00014886100000000013]</msg>
<status status="PASS" starttime="20201030 15:57:52.707" endtime="20201030 15:57:52.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.695" endtime="20201030 15:57:52.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:52.724" endtime="20201030 15:57:52.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.718" endtime="20201030 15:57:52.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.716" endtime="20201030 15:57:52.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.221" endtime="20201030 15:57:52.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.220" endtime="20201030 15:57:52.750"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:52.773" endtime="20201030 15:57:52.796"></status>
</kw>
<msg timestamp="20201030 15:57:52.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:52.769" endtime="20201030 15:57:52.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:52.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:52.799" endtime="20201030 15:57:52.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:52.806" endtime="20201030 15:57:52.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.762" endtime="20201030 15:57:52.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.756" endtime="20201030 15:57:52.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:52.829" endtime="20201030 15:57:53.177"></status>
</kw>
<msg timestamp="20201030 15:57:53.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040399208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040548764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:52.826" endtime="20201030 15:57:53.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:53.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040399208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040548764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:53.186" endtime="20201030 15:57:53.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:53.205" endtime="20201030 15:57:53.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.819" endtime="20201030 15:57:53.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.814" endtime="20201030 15:57:53.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:53.222" level="INFO">${RESULT} = [{'diff': 0.00014955600000000208}, {'diff': 0.00014955499999999566}, {'diff': 0.00014922199999999747}, {'diff': 0.00014993099999999898}, {'diff': 0.00014984700000000156}, {'diff': 0.000149653000000006...</msg>
<status status="PASS" starttime="20201030 15:57:53.213" endtime="20201030 15:57:53.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:53.233" level="INFO">${ACCURACY} = {'diff': [0.00014955600000000208, 0.00014955499999999566, 0.00014922199999999747, 0.00014993099999999898, 0.00014984700000000156, 0.00014965300000000653, 0.00014966699999999916, 0.00014993099999999898...</msg>
<status status="PASS" starttime="20201030 15:57:53.224" endtime="20201030 15:57:53.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:53.244" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:57:53.242" endtime="20201030 15:57:53.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:53.249" level="INFO">VALUE: [0.00014955600000000208, 0.00014955499999999566, 0.00014922199999999747, 0.00014993099999999898, 0.00014984700000000156, 0.00014965300000000653, 0.00014966699999999916, 0.00014993099999999898, 0.0001490970000000008, 0.000149527999999996, 0.0001493200000000014, 0.00014947300000000413, 0.00014933299999999455, 0.00014919500000000474, 0.00014927699999999627, 0.00014957000000000165, 0.00014963900000000002, 0.0001499859999999978, 0.00014980600000000233, 0.00014972199999999797, 0.00014984700000000156, 0.00014929100000000278, 0.00014967999999999926, 0.0001500279999999965, 0.00014963900000000002, 0.00014930500000000235, 0.00014979099999999634, 0.0001492079999999979, 0.00014968099999999873, 0.00014986100000000113, 0.00014968099999999873, 0.0001499169999999994, 0.00014911100000000038, 0.00014994400000000602, 0.00014916699999999866, 0.0001492079999999979, 0.00014948600000000423, 0.000149833000000002, 0.00014922199999999747, 0.0001497220000000049, 0.0001492770000000032, 0.00014911100000000038, 0.0001491659999999992, 0.00014961200000000036, 0.00014941599999999944, 0.00014962500000000045, 0.00014952700000000346, 0.00014917999999999876, 0.00014915199999999962, 0.00014947199999999772]</msg>
<status status="PASS" starttime="20201030 15:57:53.246" endtime="20201030 15:57:53.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.235" endtime="20201030 15:57:53.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:53.262" endtime="20201030 15:57:53.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.257" endtime="20201030 15:57:53.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.255" endtime="20201030 15:57:53.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.752" endtime="20201030 15:57:53.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:52.750" endtime="20201030 15:57:53.287"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:53.310" endtime="20201030 15:57:53.334"></status>
</kw>
<msg timestamp="20201030 15:57:53.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:53.307" endtime="20201030 15:57:53.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:53.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:53.337" endtime="20201030 15:57:53.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:53.344" endtime="20201030 15:57:53.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.300" endtime="20201030 15:57:53.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.294" endtime="20201030 15:57:53.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:53.367" endtime="20201030 15:57:53.714"></status>
</kw>
<msg timestamp="20201030 15:57:53.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040377875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040528222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:53.364" endtime="20201030 15:57:53.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:53.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040377875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040528222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:53.724" endtime="20201030 15:57:53.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:53.742" endtime="20201030 15:57:53.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.357" endtime="20201030 15:57:53.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.352" endtime="20201030 15:57:53.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:53.760" level="INFO">${RESULT} = [{'diff': 0.00015034700000000206}, {'diff': 0.00015061099999999494}, {'diff': 0.00015033400000000197}, {'diff': 0.0001506949999999993}, {'diff': 0.00015086100000000213}, {'diff': 0.0001506110000000018...</msg>
<status status="PASS" starttime="20201030 15:57:53.751" endtime="20201030 15:57:53.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:53.771" level="INFO">${ACCURACY} = {'diff': [0.00015034700000000206, 0.00015061099999999494, 0.00015033400000000197, 0.0001506949999999993, 0.00015086100000000213, 0.00015061100000000188, 0.00015044499999999905, 0.00015066700000000016,...</msg>
<status status="PASS" starttime="20201030 15:57:53.762" endtime="20201030 15:57:53.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:53.782" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:57:53.780" endtime="20201030 15:57:53.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:53.787" level="INFO">VALUE: [0.00015034700000000206, 0.00015061099999999494, 0.00015033400000000197, 0.0001506949999999993, 0.00015086100000000213, 0.00015061100000000188, 0.00015044499999999905, 0.00015066700000000016, 0.00015083299999999605, 0.00015088900000000127, 0.00015086100000000213, 0.0001506530000000006, 0.00015083299999999605, 0.0001508609999999952, 0.00015026399999999718, 0.00015013900000000052, 0.00015044400000000652, 0.0001502369999999975, 0.0001503059999999959, 0.00015061200000000136, 0.00015013900000000052, 0.00015095899999999912, 0.00015034700000000206, 0.0001505970000000023, 0.00015065200000000112, 0.00015033299999999555, 0.00015095799999999965, 0.00015045899999999862, 0.00015007000000000215, 0.00015068000000000026, 0.0001509859999999988, 0.00015007000000000215, 0.00015051399999999743, 0.00015017999999999976, 0.0001509170000000004, 0.00015077799999999725, 0.00015049999999999786, 0.000150042000000003, 0.00015072199999999897, 0.00015058400000000222, 0.0001507499999999981, 0.00015005600000000258, 0.00015043099999999948, 0.00015038900000000077, 0.00015101299999999845, 0.00015097199999999922, 0.00015109699999999587, 0.00015057000000000265, 0.00015044399999999958, 0.0001505420000000035]</msg>
<status status="PASS" starttime="20201030 15:57:53.784" endtime="20201030 15:57:53.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.773" endtime="20201030 15:57:53.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:53.805" endtime="20201030 15:57:53.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.801" endtime="20201030 15:57:53.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.798" endtime="20201030 15:57:53.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.289" endtime="20201030 15:57:53.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.288" endtime="20201030 15:57:53.831"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:53.854" endtime="20201030 15:57:53.877"></status>
</kw>
<msg timestamp="20201030 15:57:53.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:53.850" endtime="20201030 15:57:53.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:53.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:53.881" endtime="20201030 15:57:53.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:53.887" endtime="20201030 15:57:53.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.843" endtime="20201030 15:57:53.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.837" endtime="20201030 15:57:53.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:53.911" endtime="20201030 15:57:54.260"></status>
</kw>
<msg timestamp="20201030 15:57:54.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040411278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040563042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:53.907" endtime="20201030 15:57:54.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:54.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040411278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040563042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:54.270" endtime="20201030 15:57:54.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:54.289" endtime="20201030 15:57:54.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.900" endtime="20201030 15:57:54.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.895" endtime="20201030 15:57:54.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:54.306" level="INFO">${RESULT} = [{'diff': 0.00015176399999999868}, {'diff': 0.000151527999999998}, {'diff': 0.00015116599999999425}, {'diff': 0.00015129099999999784}, {'diff': 0.0001516950000000003}, {'diff': 0.00015131900000000392}...</msg>
<status status="PASS" starttime="20201030 15:57:54.297" endtime="20201030 15:57:54.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:54.315" level="INFO">${ACCURACY} = {'diff': [0.00015176399999999868, 0.000151527999999998, 0.00015116599999999425, 0.00015129099999999784, 0.0001516950000000003, 0.00015131900000000392, 0.0001510409999999976, 0.00015195800000000065, 0....</msg>
<status status="PASS" starttime="20201030 15:57:54.308" endtime="20201030 15:57:54.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:54.326" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:57:54.324" endtime="20201030 15:57:54.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:54.331" level="INFO">VALUE: [0.00015176399999999868, 0.000151527999999998, 0.00015116599999999425, 0.00015129099999999784, 0.0001516950000000003, 0.00015131900000000392, 0.0001510409999999976, 0.00015195800000000065, 0.0001516249999999955, 0.0001518059999999974, 0.0001519859999999998, 0.00015145800000000015, 0.00015140300000000134, 0.0001514170000000009, 0.00015168000000000126, 0.00015147199999999972, 0.00015162500000000245, 0.00015122199999999947, 0.00015190300000000184, 0.0001510409999999976, 0.0001510279999999975, 0.0001513059999999969, 0.00015151399999999843, 0.00015179200000000476, 0.00015154100000000503, 0.0001517499999999991, 0.00015181900000000442, 0.00015194400000000108, 0.00015176399999999868, 0.00015159699999999637, 0.00015122199999999947, 0.00015140200000000187, 0.00015105599999999664, 0.00015183399999999653, 0.00015176400000000562, 0.0001517499999999991, 0.00015131999999999646, 0.00015152700000000546, 0.000151430000000001, 0.00015158399999999628, 0.0001514859999999993, 0.00015123599999999904, 0.00015184800000000304, 0.00015131899999999698, 0.00015134700000000306, 0.00015179199999999782, 0.00015169400000000083, 0.00015162500000000245, 0.0001514859999999993, 0.00015125000000000555]</msg>
<status status="PASS" starttime="20201030 15:57:54.328" endtime="20201030 15:57:54.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.317" endtime="20201030 15:57:54.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:54.344" endtime="20201030 15:57:54.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.340" endtime="20201030 15:57:54.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.337" endtime="20201030 15:57:54.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.833" endtime="20201030 15:57:54.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:53.831" endtime="20201030 15:57:54.370"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:54.393" endtime="20201030 15:57:54.418"></status>
</kw>
<msg timestamp="20201030 15:57:54.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:54.389" endtime="20201030 15:57:54.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:54.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:54.421" endtime="20201030 15:57:54.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:54.428" endtime="20201030 15:57:54.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.382" endtime="20201030 15:57:54.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.376" endtime="20201030 15:57:54.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:54.454" endtime="20201030 15:57:54.800"></status>
</kw>
<msg timestamp="20201030 15:57:54.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041765431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041917986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:54.450" endtime="20201030 15:57:54.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:54.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041765431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041917986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:54.809" endtime="20201030 15:57:54.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:54.828" endtime="20201030 15:57:54.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.442" endtime="20201030 15:57:54.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.437" endtime="20201030 15:57:54.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:54.845" level="INFO">${RESULT} = [{'diff': 0.00015255499999999866}, {'diff': 0.00015222299999999994}, {'diff': 0.0001523750000000032}, {'diff': 0.00015195900000000012}, {'diff': 0.00015300000000000036}, {'diff': 0.0001522220000000004...</msg>
<status status="PASS" starttime="20201030 15:57:54.836" endtime="20201030 15:57:54.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:54.854" level="INFO">${ACCURACY} = {'diff': [0.00015255499999999866, 0.00015222299999999994, 0.0001523750000000032, 0.00015195900000000012, 0.00015300000000000036, 0.00015222200000000047, 0.00015259699999999737, 0.00015233400000000397,...</msg>
<status status="PASS" starttime="20201030 15:57:54.847" endtime="20201030 15:57:54.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:54.865" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:57:54.863" endtime="20201030 15:57:54.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:54.871" level="INFO">VALUE: [0.00015255499999999866, 0.00015222299999999994, 0.0001523750000000032, 0.00015195900000000012, 0.00015300000000000036, 0.00015222200000000047, 0.00015259699999999737, 0.00015233400000000397, 0.000152042000000005, 0.00015231999999999746, 0.00015288899999999633, 0.00015226400000000612, 0.0001523330000000045, 0.00015247200000000072, 0.0001525550000000056, 0.00015281999999999796, 0.00015199999999999936, 0.0001523750000000032, 0.0001524860000000003, 0.0001529029999999959, 0.0001523200000000044, 0.0001523609999999967, 0.0001529300000000025, 0.00015216699999999472, 0.00015280499999999891, 0.00015254199999999857, 0.00015248599999999335, 0.0001521950000000008, 0.00015300000000000036, 0.0001526530000000026, 0.0001529170000000024, 0.00015293100000000198, 0.00015247199999999378, 0.00015213899999999558, 0.00015283399999999753, 0.00015270900000000087, 0.00015245800000000115, 0.0001527500000000001, 0.00015290199999999643, 0.0001522499999999996, 0.00015268000000000226, 0.000152527999999999, 0.00015263900000000302, 0.0001523750000000032, 0.00015234699999999712, 0.0001528059999999984, 0.00015242999999999507, 0.0001523750000000032, 0.00015219400000000133, 0.00015205600000000458]</msg>
<status status="PASS" starttime="20201030 15:57:54.868" endtime="20201030 15:57:54.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.856" endtime="20201030 15:57:54.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:54.885" endtime="20201030 15:57:54.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.879" endtime="20201030 15:57:54.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.877" endtime="20201030 15:57:54.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.372" endtime="20201030 15:57:54.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.371" endtime="20201030 15:57:54.910"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:54.933" endtime="20201030 15:57:54.957"></status>
</kw>
<msg timestamp="20201030 15:57:54.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:54.930" endtime="20201030 15:57:54.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:54.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:54.960" endtime="20201030 15:57:54.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:54.967" endtime="20201030 15:57:54.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.923" endtime="20201030 15:57:54.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.917" endtime="20201030 15:57:54.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:54.990" endtime="20201030 15:57:55.381"></status>
</kw>
<msg timestamp="20201030 15:57:55.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040213056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040366056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:54.987" endtime="20201030 15:57:55.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:55.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040213056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040366056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:55.390" endtime="20201030 15:57:55.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:55.409" endtime="20201030 15:57:55.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.980" endtime="20201030 15:57:55.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.975" endtime="20201030 15:57:55.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:55.425" level="INFO">${RESULT} = [{'diff': 0.00015300000000000036}, {'diff': 0.00015381900000000642}, {'diff': 0.00015297200000000122}, {'diff': 0.00015338900000000377}, {'diff': 0.0001531530000000031}, {'diff': 0.0001529860000000008...</msg>
<status status="PASS" starttime="20201030 15:57:55.417" endtime="20201030 15:57:55.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:55.435" level="INFO">${ACCURACY} = {'diff': [0.00015300000000000036, 0.00015381900000000642, 0.00015297200000000122, 0.00015338900000000377, 0.0001531530000000031, 0.0001529860000000008, 0.00015343100000000248, 0.00015327799999999975, ...</msg>
<status status="PASS" starttime="20201030 15:57:55.427" endtime="20201030 15:57:55.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:55.446" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:57:55.444" endtime="20201030 15:57:55.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:55.451" level="INFO">VALUE: [0.00015300000000000036, 0.00015381900000000642, 0.00015297200000000122, 0.00015338900000000377, 0.0001531530000000031, 0.0001529860000000008, 0.00015343100000000248, 0.00015327799999999975, 0.00015297200000000122, 0.00015377700000000077, 0.0001531379999999971, 0.00015333400000000497, 0.00015340200000000387, 0.00015376400000000068, 0.00015359799999999785, 0.0001533059999999989, 0.00015309699999999787, 0.0001530409999999996, 0.00015329199999999932, 0.00015347200000000172, 0.0001534730000000012, 0.00015370799999999546, 0.00015400000000000136, 0.000153430000000003, 0.0001529860000000008, 0.0001536660000000037, 0.00015377700000000077, 0.00015372300000000144, 0.0001532500000000006, 0.0001536530000000036, 0.00015383299999999905, 0.0001530829999999983, 0.00015311099999999744, 0.00015323600000000104, 0.00015383299999999905, 0.00015306899999999873, 0.00015329199999999932, 0.0001535410000000001, 0.0001536530000000036, 0.00015350000000000086, 0.00015350000000000086, 0.00015327799999999975, 0.0001530970000000048, 0.0001538609999999982, 0.00015355499999999966, 0.00015358399999999828, 0.0001534860000000013, 0.00015356900000000617, 0.00015383299999999905, 0.0001539860000000018]</msg>
<status status="PASS" starttime="20201030 15:57:55.448" endtime="20201030 15:57:55.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.437" endtime="20201030 15:57:55.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:55.471" endtime="20201030 15:57:55.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.466" endtime="20201030 15:57:55.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.464" endtime="20201030 15:57:55.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.912" endtime="20201030 15:57:55.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.911" endtime="20201030 15:57:55.497"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:55.520" endtime="20201030 15:57:55.543"></status>
</kw>
<msg timestamp="20201030 15:57:55.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:55.516" endtime="20201030 15:57:55.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:55.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:55.547" endtime="20201030 15:57:55.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:55.553" endtime="20201030 15:57:55.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.509" endtime="20201030 15:57:55.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.503" endtime="20201030 15:57:55.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:55.576" endtime="20201030 15:57:55.925"></status>
</kw>
<msg timestamp="20201030 15:57:55.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040661264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040815417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:55.573" endtime="20201030 15:57:55.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:55.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040661264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040815417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:55.934" endtime="20201030 15:57:55.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:55.953" endtime="20201030 15:57:55.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.566" endtime="20201030 15:57:55.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.561" endtime="20201030 15:57:55.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:55.970" level="INFO">${RESULT} = [{'diff': 0.00015415299999999715}, {'diff': 0.00015438900000000477}, {'diff': 0.000154915999999998}, {'diff': 0.00015420899999999543}, {'diff': 0.0001542500000000016}, {'diff': 0.00015463899999999808}...</msg>
<status status="PASS" starttime="20201030 15:57:55.961" endtime="20201030 15:57:55.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:55.984" level="INFO">${ACCURACY} = {'diff': [0.00015415299999999715, 0.00015438900000000477, 0.000154915999999998, 0.00015420899999999543, 0.0001542500000000016, 0.00015463899999999808, 0.00015463899999999808, 0.0001548609999999992, 0....</msg>
<status status="PASS" starttime="20201030 15:57:55.972" endtime="20201030 15:57:55.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:55.995" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:57:55.993" endtime="20201030 15:57:55.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:56.001" level="INFO">VALUE: [0.00015415299999999715, 0.00015438900000000477, 0.000154915999999998, 0.00015420899999999543, 0.0001542500000000016, 0.00015463899999999808, 0.00015463899999999808, 0.0001548609999999992, 0.00015472199999999603, 0.00015466699999999722, 0.00015472200000000297, 0.00015497200000000322, 0.00015462499999999851, 0.0001549029999999979, 0.0001550280000000015, 0.00015412500000000495, 0.00015422200000000247, 0.00015434699999999912, 0.00015443099999999654, 0.00015404200000000007, 0.00015469400000000383, 0.00015437499999999826, 0.0001546530000000046, 0.000154528000000001, 0.00015476400000000168, 0.0001542500000000016, 0.00015408399999999878, 0.00015498699999999532, 0.00015438899999999783, 0.00015420900000000237, 0.00015480500000000091, 0.00015444399999999664, 0.00015405599999999964, 0.00015461099999999894, 0.00015437499999999826, 0.00015443099999999654, 0.00015433399999999903, 0.0001546950000000033, 0.00015431899999999998, 0.00015445800000000315, 0.00015469400000000383, 0.00015481999999999996, 0.0001549029999999979, 0.00015463899999999808, 0.00015415200000000462, 0.00015441699999999697, 0.0001546379999999986, 0.00015493099999999704, 0.00015430500000000041, 0.0001545970000000063]</msg>
<status status="PASS" starttime="20201030 15:57:55.997" endtime="20201030 15:57:56.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.986" endtime="20201030 15:57:56.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:56.013" endtime="20201030 15:57:56.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.009" endtime="20201030 15:57:56.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.006" endtime="20201030 15:57:56.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.499" endtime="20201030 15:57:56.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.498" endtime="20201030 15:57:56.038"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:56.061" endtime="20201030 15:57:56.085"></status>
</kw>
<msg timestamp="20201030 15:57:56.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:56.058" endtime="20201030 15:57:56.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:56.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:56.088" endtime="20201030 15:57:56.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:56.094" endtime="20201030 15:57:56.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.051" endtime="20201030 15:57:56.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.045" endtime="20201030 15:57:56.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:56.118" endtime="20201030 15:57:56.457"></status>
</kw>
<msg timestamp="20201030 15:57:56.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040010333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040166042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:56.114" endtime="20201030 15:57:56.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:56.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040010333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040166042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:56.466" endtime="20201030 15:57:56.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:56.485" endtime="20201030 15:57:56.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.107" endtime="20201030 15:57:56.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.102" endtime="20201030 15:57:56.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:56.503" level="INFO">${RESULT} = [{'diff': 0.00015570899999999693}, {'diff': 0.00015579200000000182}, {'diff': 0.0001556809999999978}, {'diff': 0.00015550000000000286}, {'diff': 0.00015576400000000268}, {'diff': 0.0001555420000000015...</msg>
<status status="PASS" starttime="20201030 15:57:56.494" endtime="20201030 15:57:56.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:56.513" level="INFO">${ACCURACY} = {'diff': [0.00015570899999999693, 0.00015579200000000182, 0.0001556809999999978, 0.00015550000000000286, 0.00015576400000000268, 0.00015554200000000157, 0.00015551400000000243, 0.00015531900000000098,...</msg>
<status status="PASS" starttime="20201030 15:57:56.505" endtime="20201030 15:57:56.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:56.524" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:57:56.522" endtime="20201030 15:57:56.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:56.529" level="INFO">VALUE: [0.00015570899999999693, 0.00015579200000000182, 0.0001556809999999978, 0.00015550000000000286, 0.00015576400000000268, 0.00015554200000000157, 0.00015551400000000243, 0.00015531900000000098, 0.00015602700000000302, 0.00015545900000000362, 0.000156013999999996, 0.00015540300000000534, 0.00015523600000000304, 0.00015520899999999643, 0.0001555139999999955, 0.00015527800000000175, 0.00015545800000000415, 0.00015559700000000037, 0.0001550830000000003, 0.00015559700000000037, 0.00015562500000000645, 0.00015554200000000157, 0.0001557500000000031, 0.00015588799999999986, 0.00015511099999999944, 0.00015597199999999728, 0.0001560559999999947, 0.00015532000000000046, 0.00015537499999999926, 0.0001553609999999997, 0.00015531900000000098, 0.00015574999999999617, 0.0001554159999999985, 0.0001559730000000037, 0.00015579100000000234, 0.0001553750000000062, 0.00015598599999999685, 0.00015601400000000293, 0.00015516599999999825, 0.00015562499999999951, 0.0001551809999999973, 0.00015512499999999901, 0.0001551939999999974, 0.0001557359999999966, 0.0001553060000000009, 0.00015526399999999524, 0.00015516700000000466, 0.0001558480000000001, 0.00015555500000000166, 0.0001558480000000001]</msg>
<status status="PASS" starttime="20201030 15:57:56.526" endtime="20201030 15:57:56.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.514" endtime="20201030 15:57:56.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:56.542" endtime="20201030 15:57:56.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.537" endtime="20201030 15:57:56.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.535" endtime="20201030 15:57:56.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.040" endtime="20201030 15:57:56.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.039" endtime="20201030 15:57:56.567"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:56.589" endtime="20201030 15:57:56.613"></status>
</kw>
<msg timestamp="20201030 15:57:56.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:56.586" endtime="20201030 15:57:56.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:56.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:56.616" endtime="20201030 15:57:56.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:56.623" endtime="20201030 15:57:56.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.579" endtime="20201030 15:57:56.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.573" endtime="20201030 15:57:56.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:56.646" endtime="20201030 15:57:56.982"></status>
</kw>
<msg timestamp="20201030 15:57:56.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041241375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041397694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:56.643" endtime="20201030 15:57:56.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:57.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041241375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041397694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:56.991" endtime="20201030 15:57:57.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:57.010" endtime="20201030 15:57:57.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.635" endtime="20201030 15:57:57.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.631" endtime="20201030 15:57:57.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:57.027" level="INFO">${RESULT} = [{'diff': 0.00015631900000000198}, {'diff': 0.00015630499999999548}, {'diff': 0.00015674999999999717}, {'diff': 0.00015604199999999513}, {'diff': 0.00015631999999999452}, {'diff': 0.000156443999999998...</msg>
<status status="PASS" starttime="20201030 15:57:57.019" endtime="20201030 15:57:57.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:57.036" level="INFO">${ACCURACY} = {'diff': [0.00015631900000000198, 0.00015630499999999548, 0.00015674999999999717, 0.00015604199999999513, 0.00015631999999999452, 0.00015644399999999864, 0.00015626399999999624, 0.0001563610000000007,...</msg>
<status status="PASS" starttime="20201030 15:57:57.029" endtime="20201030 15:57:57.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:57.047" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:57:57.045" endtime="20201030 15:57:57.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:57.053" level="INFO">VALUE: [0.00015631900000000198, 0.00015630499999999548, 0.00015674999999999717, 0.00015604199999999513, 0.00015631999999999452, 0.00015644399999999864, 0.00015626399999999624, 0.0001563610000000007, 0.0001565139999999965, 0.0001569029999999999, 0.0001564029999999994, 0.00015645800000000515, 0.0001560280000000025, 0.00015633299999999462, 0.00015677800000000325, 0.00015615299999999915, 0.00015649999999999692, 0.0001565139999999965, 0.00015648599999999735, 0.00015665299999999965, 0.00015659700000000137, 0.00015629200000000232, 0.00015642999999999907, 0.00015663900000000008, 0.00015684700000000162, 0.00015667999999999932, 0.00015698599999999785, 0.00015620899999999743, 0.000156013999999996, 0.0001568610000000012, 0.00015658299999999487, 0.00015608400000000078, 0.0001560830000000013, 0.0001565700000000017, 0.00015683299999999512, 0.00015673699999999707, 0.0001563060000000019, 0.0001560689999999948, 0.00015623600000000404, 0.0001568060000000024, 0.00015683400000000153, 0.00015661100000000094, 0.0001560280000000025, 0.00015688800000000086, 0.00015654199999999563, 0.00015620899999999743, 0.00015693099999999904, 0.00015682000000000196, 0.00015620799999999796, 0.00015601400000000293]</msg>
<status status="PASS" starttime="20201030 15:57:57.049" endtime="20201030 15:57:57.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.038" endtime="20201030 15:57:57.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:57.067" endtime="20201030 15:57:57.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.061" endtime="20201030 15:57:57.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.058" endtime="20201030 15:57:57.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.569" endtime="20201030 15:57:57.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:56.568" endtime="20201030 15:57:57.092"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:57.115" endtime="20201030 15:57:57.138"></status>
</kw>
<msg timestamp="20201030 15:57:57.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:57.111" endtime="20201030 15:57:57.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:57.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:57.141" endtime="20201030 15:57:57.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:57.148" endtime="20201030 15:57:57.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.104" endtime="20201030 15:57:57.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.098" endtime="20201030 15:57:57.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:57.171" endtime="20201030 15:57:57.521"></status>
</kw>
<msg timestamp="20201030 15:57:57.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039806153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039963639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:57.168" endtime="20201030 15:57:57.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:57.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039806153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039963639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:57.530" endtime="20201030 15:57:57.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:57.549" endtime="20201030 15:57:57.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.161" endtime="20201030 15:57:57.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.156" endtime="20201030 15:57:57.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:57.566" level="INFO">${RESULT} = [{'diff': 0.0001574860000000053}, {'diff': 0.0001575830000000028}, {'diff': 0.0001575559999999962}, {'diff': 0.00015763900000000108}, {'diff': 0.00015779100000000434}, {'diff': 0.00015719499999999886}...</msg>
<status status="PASS" starttime="20201030 15:57:57.558" endtime="20201030 15:57:57.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:57.577" level="INFO">${ACCURACY} = {'diff': [0.0001574860000000053, 0.0001575830000000028, 0.0001575559999999962, 0.00015763900000000108, 0.00015779100000000434, 0.00015719499999999886, 0.00015779100000000434, 0.00015745899999999868, 0...</msg>
<status status="PASS" starttime="20201030 15:57:57.569" endtime="20201030 15:57:57.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:57.588" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:57:57.585" endtime="20201030 15:57:57.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:57.593" level="INFO">VALUE: [0.0001574860000000053, 0.0001575830000000028, 0.0001575559999999962, 0.00015763900000000108, 0.00015779100000000434, 0.00015719499999999886, 0.00015779100000000434, 0.00015745899999999868, 0.0001574579999999992, 0.00015749999999999792, 0.00015738900000000083, 0.00015763899999999414, 0.0001579579999999997, 0.0001576939999999999, 0.00015716699999999972, 0.00015798599999999885, 0.00015745899999999868, 0.00015738800000000136, 0.00015748699999999782, 0.0001574449999999991, 0.0001576809999999998, 0.00015712500000000101, 0.00015724999999999767, 0.00015737499999999432, 0.00015729199999999638, 0.00015787500000000176, 0.00015780500000000391, 0.00015758400000000228, 0.000157916000000001, 0.00015808400000000278, 0.00015787499999999483, 0.000157528000000004, 0.0001574449999999991, 0.00015741699999999997, 0.00015776400000000468, 0.00015759700000000237, 0.0001576950000000063, 0.00015706900000000273, 0.00015717999999999982, 0.00015770799999999946, 0.00015752700000000452, 0.0001577500000000051, 0.00015783300000000305, 0.0001579030000000009, 0.00015781899999999655, 0.00015793100000000004, 0.00015751299999999802, 0.0001571380000000011, 0.0001576939999999999, 0.00015776400000000468]</msg>
<status status="PASS" starttime="20201030 15:57:57.590" endtime="20201030 15:57:57.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.579" endtime="20201030 15:57:57.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:57.606" endtime="20201030 15:57:57.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.601" endtime="20201030 15:57:57.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.599" endtime="20201030 15:57:57.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.094" endtime="20201030 15:57:57.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.093" endtime="20201030 15:57:57.631"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:57.654" endtime="20201030 15:57:57.677"></status>
</kw>
<msg timestamp="20201030 15:57:57.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:57.650" endtime="20201030 15:57:57.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:57.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:57.681" endtime="20201030 15:57:57.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:57.687" endtime="20201030 15:57:57.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.643" endtime="20201030 15:57:57.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.637" endtime="20201030 15:57:57.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:57.711" endtime="20201030 15:57:58.060"></status>
</kw>
<msg timestamp="20201030 15:57:58.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040150639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040308972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:57.707" endtime="20201030 15:57:58.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:58.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040150639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040308972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:58.069" endtime="20201030 15:57:58.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:58.090" endtime="20201030 15:57:58.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.700" endtime="20201030 15:57:58.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.695" endtime="20201030 15:57:58.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:58.109" level="INFO">${RESULT} = [{'diff': 0.00015833299999999662}, {'diff': 0.0001590689999999978}, {'diff': 0.00015884799999999616}, {'diff': 0.00015833299999999662}, {'diff': 0.00015838900000000183}, {'diff': 0.0001581389999999946...</msg>
<status status="PASS" starttime="20201030 15:57:58.100" endtime="20201030 15:57:58.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:58.120" level="INFO">${ACCURACY} = {'diff': [0.00015833299999999662, 0.0001590689999999978, 0.00015884799999999616, 0.00015833299999999662, 0.00015838900000000183, 0.00015813899999999464, 0.00015818000000000082, 0.0001584580000000002, ...</msg>
<status status="PASS" starttime="20201030 15:57:58.111" endtime="20201030 15:57:58.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:58.131" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:57:58.129" endtime="20201030 15:57:58.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:58.136" level="INFO">VALUE: [0.00015833299999999662, 0.0001590689999999978, 0.00015884799999999616, 0.00015833299999999662, 0.00015838900000000183, 0.00015813899999999464, 0.00015818000000000082, 0.0001584580000000002, 0.00015836099999999576, 0.00015805500000000416, 0.00015845899999999968, 0.00015834699999999619, 0.00015815199999999474, 0.0001583339999999961, 0.00015899999999999942, 0.0001584860000000063, 0.0001587909999999984, 0.00015873699999999907, 0.00015849999999999892, 0.00015829100000000484, 0.00015891700000000147, 0.00015902799999999856, 0.00015838800000000236, 0.00015862499999999558, 0.0001585559999999972, 0.00015826399999999824, 0.00015863900000000208, 0.00015883299999999712, 0.00015904199999999813, 0.00015881900000000448, 0.00015902699999999909, 0.0001584030000000014, 0.000158013999999998, 0.00015838900000000183, 0.0001587779999999983, 0.00015822199999999953, 0.00015862500000000251, 0.00015869500000000036, 0.00015865300000000165, 0.00015826399999999824, 0.0001580280000000045, 0.00015833300000000355, 0.00015841700000000097, 0.0001582359999999991, 0.00015820799999999996, 0.00015902799999999856, 0.00015865300000000165, 0.00015881899999999755, 0.0001585689999999973, 0.0001582779999999978]</msg>
<status status="PASS" starttime="20201030 15:57:58.133" endtime="20201030 15:57:58.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.122" endtime="20201030 15:57:58.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:58.149" endtime="20201030 15:57:58.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.144" endtime="20201030 15:57:58.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.142" endtime="20201030 15:57:58.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.633" endtime="20201030 15:57:58.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:57.632" endtime="20201030 15:57:58.174"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:58.197" endtime="20201030 15:57:58.221"></status>
</kw>
<msg timestamp="20201030 15:57:58.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:58.194" endtime="20201030 15:57:58.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:58.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:58.224" endtime="20201030 15:57:58.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:58.230" endtime="20201030 15:57:58.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.186" endtime="20201030 15:57:58.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.181" endtime="20201030 15:57:58.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:58.253" endtime="20201030 15:57:58.606"></status>
</kw>
<msg timestamp="20201030 15:57:58.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040014597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040174681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:58.250" endtime="20201030 15:57:58.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:58.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040014597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040174681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:58.615" endtime="20201030 15:57:58.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:58.634" endtime="20201030 15:57:58.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.243" endtime="20201030 15:57:58.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.238" endtime="20201030 15:57:58.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:58.651" level="INFO">${RESULT} = [{'diff': 0.00016008399999999784}, {'diff': 0.00015926399999999924}, {'diff': 0.00015912500000000301}, {'diff': 0.00015920800000000096}, {'diff': 0.00015926399999999924}, {'diff': 0.000159346999999997...</msg>
<status status="PASS" starttime="20201030 15:57:58.642" endtime="20201030 15:57:58.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:58.660" level="INFO">${ACCURACY} = {'diff': [0.00016008399999999784, 0.00015926399999999924, 0.00015912500000000301, 0.00015920800000000096, 0.00015926399999999924, 0.00015934699999999719, 0.00015997200000000128, 0.00015983299999999812...</msg>
<status status="PASS" starttime="20201030 15:57:58.653" endtime="20201030 15:57:58.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:58.671" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:57:58.669" endtime="20201030 15:57:58.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:58.676" level="INFO">VALUE: [0.00016008399999999784, 0.00015926399999999924, 0.00015912500000000301, 0.00015920800000000096, 0.00015926399999999924, 0.00015934699999999719, 0.00015997200000000128, 0.00015983299999999812, 0.000159223, 0.00015966700000000222, 0.00015958299999999787, 0.00015913900000000258, 0.00015937500000000326, 0.00015915200000000268, 0.00015936099999999676, 0.00015965300000000265, 0.0001597779999999993, 0.00015937499999999633, 0.00015975000000000017, 0.00016004200000000607, 0.00015937499999999633, 0.00015927699999999934, 0.0001594030000000024, 0.00015975000000000017, 0.00015912500000000301, 0.00016005499999999923, 0.00016000000000000042, 0.00015983299999999812, 0.0001599019999999965, 0.00015912499999999608, 0.00015972200000000103, 0.00015959699999999744, 0.00015931899999999805, 0.00015993100000000204, 0.0001594030000000024, 0.00015931899999999805, 0.00015962499999999658, 0.00015926399999999924, 0.0001598610000000042, 0.00016005499999999923, 0.0001593610000000037, 0.00015997200000000128, 0.00015998600000000085, 0.0001596940000000019, 0.00016002799999999956, 0.0001595689999999983, 0.00015979200000000582, 0.00015943100000000154, 0.00015998600000000085, 0.00015984699999999769]</msg>
<status status="PASS" starttime="20201030 15:57:58.673" endtime="20201030 15:57:58.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.662" endtime="20201030 15:57:58.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:58.689" endtime="20201030 15:57:58.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.685" endtime="20201030 15:57:58.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.682" endtime="20201030 15:57:58.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.176" endtime="20201030 15:57:58.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.175" endtime="20201030 15:57:58.714"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:58.737" endtime="20201030 15:57:58.762"></status>
</kw>
<msg timestamp="20201030 15:57:58.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:58.734" endtime="20201030 15:57:58.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:58.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:58.766" endtime="20201030 15:57:58.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:58.772" endtime="20201030 15:57:58.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.726" endtime="20201030 15:57:58.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.721" endtime="20201030 15:57:58.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:58.795" endtime="20201030 15:57:59.146"></status>
</kw>
<msg timestamp="20201030 15:57:59.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041411264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041571319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:58.792" endtime="20201030 15:57:59.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:59.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041411264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041571319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:59.155" endtime="20201030 15:57:59.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:59.174" endtime="20201030 15:57:59.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.785" endtime="20201030 15:57:59.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.780" endtime="20201030 15:57:59.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:59.191" level="INFO">${RESULT} = [{'diff': 0.00016005499999999923}, {'diff': 0.00016029199999999938}, {'diff': 0.00016080599999999945}, {'diff': 0.00016084699999999869}, {'diff': 0.00016093100000000304}, {'diff': 0.000160833999999998...</msg>
<status status="PASS" starttime="20201030 15:57:59.182" endtime="20201030 15:57:59.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:59.200" level="INFO">${ACCURACY} = {'diff': [0.00016005499999999923, 0.00016029199999999938, 0.00016080599999999945, 0.00016084699999999869, 0.00016093100000000304, 0.0001608339999999986, 0.00016048600000000135, 0.00016061100000000494,...</msg>
<status status="PASS" starttime="20201030 15:57:59.193" endtime="20201030 15:57:59.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:59.211" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:57:59.209" endtime="20201030 15:57:59.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:59.216" level="INFO">VALUE: [0.00016005499999999923, 0.00016029199999999938, 0.00016080599999999945, 0.00016084699999999869, 0.00016093100000000304, 0.0001608339999999986, 0.00016048600000000135, 0.00016061100000000494, 0.00016002799999999956, 0.00016025000000000067, 0.00016075000000000117, 0.00016080599999999945, 0.00016097199999999534, 0.00016033299999999862, 0.00016080599999999945, 0.00016054199999999963, 0.0001605140000000005, 0.00016075000000000117, 0.000160610999999998, 0.00016097200000000228, 0.00016069499999999542, 0.00016084700000000562, 0.00016070900000000193, 0.00016012500000000401, 0.00016068000000000332, 0.00016033299999999862, 0.00016042999999999613, 0.00016074999999999423, 0.00016033300000000555, 0.00016048700000000082, 0.00016017999999999588, 0.00016031999999999852, 0.00016020800000000196, 0.00016086099999999826, 0.000160401999999997, 0.0001603610000000047, 0.00016020800000000196, 0.0001608339999999986, 0.00016079199999999988, 0.00016062500000000451, 0.00016012499999999708, 0.00016041700000000297, 0.00016044400000000264, 0.00016100000000000142, 0.00016038800000000436, 0.00016016699999999578, 0.00016091699999999654, 0.00016048600000000135, 0.00016102800000000056, 0.00016097199999999534]</msg>
<status status="PASS" starttime="20201030 15:57:59.213" endtime="20201030 15:57:59.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.202" endtime="20201030 15:57:59.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:59.235" endtime="20201030 15:57:59.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.229" endtime="20201030 15:57:59.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.226" endtime="20201030 15:57:59.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.716" endtime="20201030 15:57:59.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.715" endtime="20201030 15:57:59.260"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:59.283" endtime="20201030 15:57:59.306"></status>
</kw>
<msg timestamp="20201030 15:57:59.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:59.280" endtime="20201030 15:57:59.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:59.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:59.310" endtime="20201030 15:57:59.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:59.316" endtime="20201030 15:57:59.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.272" endtime="20201030 15:57:59.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.266" endtime="20201030 15:57:59.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:59.340" endtime="20201030 15:57:59.689"></status>
</kw>
<msg timestamp="20201030 15:57:59.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040083458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040245389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:59.336" endtime="20201030 15:57:59.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:59.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040083458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040245389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:59.699" endtime="20201030 15:57:59.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:59.717" endtime="20201030 15:57:59.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.329" endtime="20201030 15:57:59.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.324" endtime="20201030 15:57:59.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:59.734" level="INFO">${RESULT} = [{'diff': 0.0001619309999999971}, {'diff': 0.00016165300000000465}, {'diff': 0.00016147199999999584}, {'diff': 0.00016152800000000106}, {'diff': 0.00016122200000000253}, {'diff': 0.0001616939999999969...</msg>
<status status="PASS" starttime="20201030 15:57:59.726" endtime="20201030 15:57:59.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:59.745" level="INFO">${ACCURACY} = {'diff': [0.0001619309999999971, 0.00016165300000000465, 0.00016147199999999584, 0.00016152800000000106, 0.00016122200000000253, 0.00016169399999999695, 0.00016109699999999894, 0.00016198600000000285,...</msg>
<status status="PASS" starttime="20201030 15:57:59.736" endtime="20201030 15:57:59.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:59.755" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:57:59.753" endtime="20201030 15:57:59.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:59.761" level="INFO">VALUE: [0.0001619309999999971, 0.00016165300000000465, 0.00016147199999999584, 0.00016152800000000106, 0.00016122200000000253, 0.00016169399999999695, 0.00016109699999999894, 0.00016198600000000285, 0.00016183300000000012, 0.00016133299999999962, 0.00016136099999999876, 0.00016162499999999858, 0.00016133299999999962, 0.00016152700000000159, 0.000161610999999999, 0.00016113899999999765, 0.00016133299999999962, 0.00016169500000000336, 0.00016191700000000447, 0.00016109699999999894, 0.00016147300000000225, 0.00016115300000000415, 0.00016159699999999944, 0.00016152799999999412, 0.00016172200000000303, 0.00016129200000000038, 0.00016168099999999686, 0.00016166699999999729, 0.00016166699999999729, 0.0001616659999999978, 0.00016154200000000063, 0.00016194499999999667, 0.00016123599999999516, 0.0001615690000000003, 0.00016147300000000225, 0.00016158299999999987, 0.00016182000000000002, 0.0001617780000000013, 0.00016112500000000501, 0.00016140299999999747, 0.00016108399999999884, 0.00016158399999999934, 0.00016134699999999919, 0.00016169499999999642, 0.00016120800000000296, 0.00016126300000000177, 0.00016105600000000664, 0.00016141699999999704, 0.0001611109999999985, 0.0001615560000000002]</msg>
<status status="PASS" starttime="20201030 15:57:59.758" endtime="20201030 15:57:59.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.746" endtime="20201030 15:57:59.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:59.774" endtime="20201030 15:57:59.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.769" endtime="20201030 15:57:59.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.767" endtime="20201030 15:57:59.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.262" endtime="20201030 15:57:59.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.261" endtime="20201030 15:57:59.799"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:59.822" endtime="20201030 15:57:59.845"></status>
</kw>
<msg timestamp="20201030 15:57:59.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:59.818" endtime="20201030 15:57:59.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:59.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:59.849" endtime="20201030 15:57:59.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:59.855" endtime="20201030 15:57:59.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.811" endtime="20201030 15:57:59.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.805" endtime="20201030 15:57:59.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:59.879" endtime="20201030 15:58:00.229"></status>
</kw>
<msg timestamp="20201030 15:58:00.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04002025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040182444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:59.875" endtime="20201030 15:58:00.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:00.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04002025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040182444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:58:00.238" endtime="20201030 15:58:00.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:00.256" endtime="20201030 15:58:00.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.868" endtime="20201030 15:58:00.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.863" endtime="20201030 15:58:00.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:00.274" level="INFO">${RESULT} = [{'diff': 0.00016219399999999745}, {'diff': 0.00016226299999999583}, {'diff': 0.00016286100000000026}, {'diff': 0.00016217999999999788}, {'diff': 0.00016259700000000044}, {'diff': 0.000162638999999999...</msg>
<status status="PASS" starttime="20201030 15:58:00.265" endtime="20201030 15:58:00.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:58:00.284" level="INFO">${ACCURACY} = {'diff': [0.00016219399999999745, 0.00016226299999999583, 0.00016286100000000026, 0.00016217999999999788, 0.00016259700000000044, 0.00016263899999999915, 0.00016244500000000411, 0.00016258400000000034...</msg>
<status status="PASS" starttime="20201030 15:58:00.276" endtime="20201030 15:58:00.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:00.295" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:58:00.293" endtime="20201030 15:58:00.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:00.301" level="INFO">VALUE: [0.00016219399999999745, 0.00016226299999999583, 0.00016286100000000026, 0.00016217999999999788, 0.00016259700000000044, 0.00016263899999999915, 0.00016244500000000411, 0.00016258400000000034, 0.00016302800000000256, 0.00016263899999999915, 0.0001623889999999989, 0.00016290299999999897, 0.00016276300000000327, 0.00016220799999999702, 0.00016274999999999623, 0.00016284699999999375, 0.0001623889999999989, 0.00016275000000000317, 0.00016279099999999547, 0.00016227799999999487, 0.00016262499999999958, 0.00016247200000000378, 0.00016215299999999822, 0.00016263899999999915, 0.00016284700000000069, 0.00016286199999999973, 0.0001628340000000006, 0.0001622639999999953, 0.00016231900000000105, 0.0001627219999999971, 0.00016267999999999838, 0.00016218099999999736, 0.00016277799999999537, 0.00016237499999999933, 0.00016227700000000234, 0.00016237499999999933, 0.00016225000000000267, 0.00016220800000000396, 0.00016287499999999983, 0.00016226400000000224, 0.0001626810000000048, 0.00016242999999999813, 0.00016279199999999494, 0.00016234700000000019, 0.00016232000000000052, 0.00016281900000000155, 0.00016273599999999666, 0.0001630560000000017, 0.00016262499999999958, 0.00016267999999999838]</msg>
<status status="PASS" starttime="20201030 15:58:00.298" endtime="20201030 15:58:00.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.286" endtime="20201030 15:58:00.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:00.313" endtime="20201030 15:58:00.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.309" endtime="20201030 15:58:00.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.306" endtime="20201030 15:58:00.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.801" endtime="20201030 15:58:00.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:59.800" endtime="20201030 15:58:00.339"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:00.362" endtime="20201030 15:58:00.385"></status>
</kw>
<msg timestamp="20201030 15:58:00.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:00.358" endtime="20201030 15:58:00.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:00.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:00.389" endtime="20201030 15:58:00.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:00.395" endtime="20201030 15:58:00.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.351" endtime="20201030 15:58:00.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.345" endtime="20201030 15:58:00.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:00.419" endtime="20201030 15:58:00.770"></status>
</kw>
<msg timestamp="20201030 15:58:00.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040046292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040209639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:00.415" endtime="20201030 15:58:00.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:00.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040046292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040209639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:00.780" endtime="20201030 15:58:00.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:00.798" endtime="20201030 15:58:00.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.408" endtime="20201030 15:58:00.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.403" endtime="20201030 15:58:00.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:00.815" level="INFO">${RESULT} = [{'diff': 0.00016334700000000119}, {'diff': 0.00016400000000000442}, {'diff': 0.00016352700000000359}, {'diff': 0.00016341699999999904}, {'diff': 0.0001639309999999991}, {'diff': 0.0001640700000000022...</msg>
<status status="PASS" starttime="20201030 15:58:00.806" endtime="20201030 15:58:00.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:58:00.824" level="INFO">${ACCURACY} = {'diff': [0.00016334700000000119, 0.00016400000000000442, 0.00016352700000000359, 0.00016341699999999904, 0.0001639309999999991, 0.00016407000000000227, 0.0001631110000000005, 0.00016391699999999954, ...</msg>
<status status="PASS" starttime="20201030 15:58:00.817" endtime="20201030 15:58:00.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:00.835" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:58:00.833" endtime="20201030 15:58:00.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:00.840" level="INFO">VALUE: [0.00016334700000000119, 0.00016400000000000442, 0.00016352700000000359, 0.00016341699999999904, 0.0001639309999999991, 0.00016407000000000227, 0.0001631110000000005, 0.00016391699999999954, 0.0001641110000000015, 0.00016344499999999818, 0.0001633889999999999, 0.0001640549999999963, 0.00016355500000000273, 0.00016377799999999637, 0.00016330600000000195, 0.0001635690000000023, 0.00016363900000000015, 0.00016355500000000273, 0.00016362499999999364, 0.00016323599999999716, 0.00016405500000000323, 0.00016334700000000119, 0.00016312500000000008, 0.00016316700000000572, 0.00016366699999999929, 0.000163402, 0.00016313899999999965, 0.00016362500000000058, 0.0001637360000000046, 0.00016333299999999468, 0.00016404099999999672, 0.00016333299999999468, 0.0001634859999999974, 0.00016381999999999508, 0.00016329200000000238, 0.00016384700000000169, 0.00016373700000000407, 0.000163611000000001, 0.0001638340000000016, 0.00016347199999999784, 0.00016313899999999965, 0.00016329200000000238, 0.00016391600000000006, 0.00016336200000000023, 0.00016334700000000119, 0.0001640419999999962, 0.0001631659999999993, 0.0001632910000000029, 0.00016355599999999526, 0.00016369399999999895]</msg>
<status status="PASS" starttime="20201030 15:58:00.837" endtime="20201030 15:58:00.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.826" endtime="20201030 15:58:00.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:00.853" endtime="20201030 15:58:00.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.849" endtime="20201030 15:58:00.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.846" endtime="20201030 15:58:00.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.341" endtime="20201030 15:58:00.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.340" endtime="20201030 15:58:00.878"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:00.901" endtime="20201030 15:58:00.930"></status>
</kw>
<msg timestamp="20201030 15:58:00.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:00.897" endtime="20201030 15:58:00.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:00.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:00.934" endtime="20201030 15:58:00.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:00.940" endtime="20201030 15:58:00.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.890" endtime="20201030 15:58:00.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.885" endtime="20201030 15:58:00.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:00.964" endtime="20201030 15:58:01.315"></status>
</kw>
<msg timestamp="20201030 15:58:01.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045506958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045671708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:00.960" endtime="20201030 15:58:01.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045506958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045671708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:01.324" endtime="20201030 15:58:01.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:01.343" endtime="20201030 15:58:01.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.953" endtime="20201030 15:58:01.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.948" endtime="20201030 15:58:01.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:01.360" level="INFO">${RESULT} = [{'diff': 0.00016474999999999823}, {'diff': 0.00016488899999999446}, {'diff': 0.0001644439999999997}, {'diff': 0.00016486100000000226}, {'diff': 0.00016472299999999857}, {'diff': 0.0001646670000000002...</msg>
<status status="PASS" starttime="20201030 15:58:01.351" endtime="20201030 15:58:01.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:58:01.369" level="INFO">${ACCURACY} = {'diff': [0.00016474999999999823, 0.00016488899999999446, 0.0001644439999999997, 0.00016486100000000226, 0.00016472299999999857, 0.00016466700000000029, 0.00016502799999999762, 0.00016473599999999866,...</msg>
<status status="PASS" starttime="20201030 15:58:01.362" endtime="20201030 15:58:01.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.380" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:58:01.378" endtime="20201030 15:58:01.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.385" level="INFO">VALUE: [0.00016474999999999823, 0.00016488899999999446, 0.0001644439999999997, 0.00016486100000000226, 0.00016472299999999857, 0.00016466700000000029, 0.00016502799999999762, 0.00016473599999999866, 0.00016413900000000065, 0.00016459700000000244, 0.00016448600000000535, 0.00016454200000000363, 0.0001640690000000028, 0.000165014000000005, 0.00016463799999999473, 0.00016447199999999884, 0.00016443000000000013, 0.00016483399999999565, 0.0001648189999999966, 0.0001642639999999973, 0.00016444499999999918, 0.00016423599999999816, 0.00016491700000000054, 0.00016425000000000467, 0.00016423599999999816, 0.00016416699999999979, 0.00016437500000000133, 0.00016491700000000054, 0.00016444499999999918, 0.00016490300000000097, 0.00016413800000000117, 0.00016473599999999866, 0.00016495799999999977, 0.00016499999999999848, 0.00016445900000000568, 0.00016417999999999988, 0.00016477799999999737, 0.00016412500000000108, 0.00016491700000000054, 0.00016436100000000176, 0.00016433299999999568, 0.0001641519999999938, 0.00016412499999999414, 0.00016409700000000194, 0.00016476400000000474, 0.0001649440000000002, 0.0001641660000000003, 0.00016419500000000586, 0.00016465300000000072, 0.00016502799999999762]</msg>
<status status="PASS" starttime="20201030 15:58:01.382" endtime="20201030 15:58:01.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.371" endtime="20201030 15:58:01.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:01.399" endtime="20201030 15:58:01.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.393" endtime="20201030 15:58:01.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.391" endtime="20201030 15:58:01.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.880" endtime="20201030 15:58:01.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:00.879" endtime="20201030 15:58:01.424"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:01.447" endtime="20201030 15:58:01.470"></status>
</kw>
<msg timestamp="20201030 15:58:01.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:01.444" endtime="20201030 15:58:01.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:01.473" endtime="20201030 15:58:01.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:01.479" endtime="20201030 15:58:01.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.437" endtime="20201030 15:58:01.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.431" endtime="20201030 15:58:01.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:01.502" endtime="20201030 15:58:01.848"></status>
</kw>
<msg timestamp="20201030 15:58:01.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039702236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039867792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:01.499" endtime="20201030 15:58:01.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039702236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039867792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:01.858" endtime="20201030 15:58:01.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:01.877" endtime="20201030 15:58:01.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.492" endtime="20201030 15:58:01.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.487" endtime="20201030 15:58:01.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:01.894" level="INFO">${RESULT} = [{'diff': 0.00016555599999999726}, {'diff': 0.00016545800000000027}, {'diff': 0.0001656660000000018}, {'diff': 0.00016602699999999915}, {'diff': 0.00016574999999999923}, {'diff': 0.0001654450000000001...</msg>
<status status="PASS" starttime="20201030 15:58:01.885" endtime="20201030 15:58:01.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:58:01.904" level="INFO">${ACCURACY} = {'diff': [0.00016555599999999726, 0.00016545800000000027, 0.0001656660000000018, 0.00016602699999999915, 0.00016574999999999923, 0.00016544500000000018, 0.00016566599999999487, 0.00016590300000000197,...</msg>
<status status="PASS" starttime="20201030 15:58:01.896" endtime="20201030 15:58:01.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.915" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:58:01.913" endtime="20201030 15:58:01.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.920" level="INFO">VALUE: [0.00016555599999999726, 0.00016545800000000027, 0.0001656660000000018, 0.00016602699999999915, 0.00016574999999999923, 0.00016544500000000018, 0.00016566599999999487, 0.00016590300000000197, 0.00016534700000000319, 0.00016580499999999804, 0.00016524999999999873, 0.00016577799999999837, 0.00016534699999999625, 0.00016529099999999797, 0.00016509700000000294, 0.00016574999999999923, 0.0001654440000000007, 0.00016593000000000163, 0.00016537500000000233, 0.00016533299999999668, 0.0001651389999999947, 0.00016551399999999855, 0.00016569400000000095, 0.0001656389999999952, 0.00016533299999999668, 0.00016555599999999726, 0.0001653340000000031, 0.0001661389999999957, 0.00016529199999999744, 0.0001658890000000024, 0.00016565300000000172, 0.00016512500000000208, 0.00016583299999999718, 0.0001652219999999996, 0.00016537500000000233, 0.0001659859999999999, 0.00016545899999999975, 0.00016543000000000113, 0.00016523599999999916, 0.00016591599999999512, 0.00016602799999999862, 0.00016570800000000052, 0.00016575000000000617, 0.00016584700000000369, 0.00016594500000000068, 0.00016570800000000052, 0.0001659440000000012, 0.00016515300000000122, 0.00016579200000000488, 0.000166014000000006]</msg>
<status status="PASS" starttime="20201030 15:58:01.917" endtime="20201030 15:58:01.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.906" endtime="20201030 15:58:01.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:01.933" endtime="20201030 15:58:01.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.929" endtime="20201030 15:58:01.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.926" endtime="20201030 15:58:01.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.427" endtime="20201030 15:58:01.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.425" endtime="20201030 15:58:01.958"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:01.981" endtime="20201030 15:58:02.003"></status>
</kw>
<msg timestamp="20201030 15:58:02.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:01.977" endtime="20201030 15:58:02.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:02.007" endtime="20201030 15:58:02.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.013" endtime="20201030 15:58:02.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.970" endtime="20201030 15:58:02.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.964" endtime="20201030 15:58:02.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.037" endtime="20201030 15:58:02.374"></status>
</kw>
<msg timestamp="20201030 15:58:02.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039864292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04003125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:58:02.033" endtime="20201030 15:58:02.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039864292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04003125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:58:02.383" endtime="20201030 15:58:02.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.401" endtime="20201030 15:58:02.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.026" endtime="20201030 15:58:02.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.021" endtime="20201030 15:58:02.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:02.419" level="INFO">${RESULT} = [{'diff': 0.00016695799999999483}, {'diff': 0.00016651399999999955}, {'diff': 0.00016615300000000222}, {'diff': 0.00016624999999999973}, {'diff': 0.00016659799999999697}, {'diff': 0.000167068999999998...</msg>
<status status="PASS" starttime="20201030 15:58:02.410" endtime="20201030 15:58:02.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:58:02.430" level="INFO">${ACCURACY} = {'diff': [0.00016695799999999483, 0.00016651399999999955, 0.00016615300000000222, 0.00016624999999999973, 0.00016659799999999697, 0.00016706899999999886, 0.00016684699999999775, 0.00016658299999999793...</msg>
<status status="PASS" starttime="20201030 15:58:02.421" endtime="20201030 15:58:02.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.440" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:58:02.438" endtime="20201030 15:58:02.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.446" level="INFO">VALUE: [0.00016695799999999483, 0.00016651399999999955, 0.00016615300000000222, 0.00016624999999999973, 0.00016659799999999697, 0.00016706899999999886, 0.00016684699999999775, 0.00016658299999999793, 0.0001663749999999964, 0.0001665419999999987, 0.00016700000000000048, 0.0001668059999999985, 0.00016644500000000118, 0.00016634699999999725, 0.00016686099999999732, 0.0001662220000000006, 0.0001670269999999932, 0.000167096999999998, 0.00016651399999999955, 0.00016679199999999894, 0.0001661389999999957, 0.00016705599999999876, 0.00016629199999999844, 0.00016668100000000186, 0.000166709000000001, 0.00016613900000000265, 0.00016675000000000023, 0.0001663189999999981, 0.0001660549999999983, 0.00016636099999999682, 0.00016700000000000048, 0.00016679199999999894, 0.00016655599999999826, 0.00016613900000000265, 0.00016649999999999998, 0.00016641600000000256, 0.00016636099999999682, 0.00016661099999999707, 0.00016655599999999826, 0.000166402000000003, 0.00016706999999999833, 0.00016666599999999587, 0.00016691700000000254, 0.0001664860000000004, 0.00016681999999999808, 0.00016700000000000048, 0.00016701400000000005, 0.0001661660000000023, 0.0001663890000000029, 0.00016608299999999743]</msg>
<status status="PASS" starttime="20201030 15:58:02.443" endtime="20201030 15:58:02.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.431" endtime="20201030 15:58:02.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:02.458" endtime="20201030 15:58:02.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.454" endtime="20201030 15:58:02.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.452" endtime="20201030 15:58:02.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.960" endtime="20201030 15:58:02.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.959" endtime="20201030 15:58:02.483"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.506" endtime="20201030 15:58:02.529"></status>
</kw>
<msg timestamp="20201030 15:58:02.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:02.503" endtime="20201030 15:58:02.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:02.532" endtime="20201030 15:58:02.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.538" endtime="20201030 15:58:02.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.495" endtime="20201030 15:58:02.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.490" endtime="20201030 15:58:02.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.561" endtime="20201030 15:58:02.901"></status>
</kw>
<msg timestamp="20201030 15:58:02.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039604458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039772458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:02.558" endtime="20201030 15:58:02.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039604458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039772458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:02.911" endtime="20201030 15:58:02.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.929" endtime="20201030 15:58:02.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.551" endtime="20201030 15:58:02.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.546" endtime="20201030 15:58:02.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:02.946" level="INFO">${RESULT} = [{'diff': 0.00016799999999999454}, {'diff': 0.00016752800000000012}, {'diff': 0.00016802800000000062}, {'diff': 0.00016709700000000494}, {'diff': 0.00016783399999999865}, {'diff': 0.000167944999999995...</msg>
<status status="PASS" starttime="20201030 15:58:02.938" endtime="20201030 15:58:02.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:58:02.955" level="INFO">${ACCURACY} = {'diff': [0.00016799999999999454, 0.00016752800000000012, 0.00016802800000000062, 0.00016709700000000494, 0.00016783399999999865, 0.00016794499999999574, 0.0001674860000000014, 0.00016811099999999857,...</msg>
<status status="PASS" starttime="20201030 15:58:02.949" endtime="20201030 15:58:02.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.966" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:58:02.964" endtime="20201030 15:58:02.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.972" level="INFO">VALUE: [0.00016799999999999454, 0.00016752800000000012, 0.00016802800000000062, 0.00016709700000000494, 0.00016783399999999865, 0.00016794499999999574, 0.0001674860000000014, 0.00016811099999999857, 0.0001678749999999979, 0.00016799999999999454, 0.00016802800000000062, 0.00016768000000000338, 0.00016773599999999472, 0.00016730499999999954, 0.00016811099999999857, 0.0001675419999999997, 0.0001677640000000008, 0.00016715299999999628, 0.00016712499999999714, 0.000167709000000002, 0.00016798599999999497, 0.0001674169999999961, 0.00016775000000000123, 0.00016805599999999976, 0.00016773600000000166, 0.0001678189999999996, 0.00016708299999999843, 0.00016762500000000458, 0.00016759799999999797, 0.00016790300000000397, 0.00016781999999999908, 0.00016711099999999757, 0.00016755599999999926, 0.0001676660000000038, 0.0001679860000000019, 0.00016797200000000234, 0.00016727799999999987, 0.00016733299999999868, 0.00016765300000000372, 0.00016727799999999987, 0.00016745900000000175, 0.00016712500000000408, 0.0001675549999999998, 0.00016795799999999583, 0.00016761099999999807, 0.0001672499999999938, 0.0001679299999999967, 0.00016794499999999574, 0.00016734800000000466, 0.00016761099999999807]</msg>
<status status="PASS" starttime="20201030 15:58:02.969" endtime="20201030 15:58:02.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.957" endtime="20201030 15:58:02.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:02.984" endtime="20201030 15:58:03.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.980" endtime="20201030 15:58:03.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.978" endtime="20201030 15:58:03.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.485" endtime="20201030 15:58:03.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.484" endtime="20201030 15:58:03.010"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:03.032" endtime="20201030 15:58:03.056"></status>
</kw>
<msg timestamp="20201030 15:58:03.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:03.029" endtime="20201030 15:58:03.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:03.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:03.060" endtime="20201030 15:58:03.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:03.066" endtime="20201030 15:58:03.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.022" endtime="20201030 15:58:03.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.016" endtime="20201030 15:58:03.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:03.090" endtime="20201030 15:58:03.448"></status>
</kw>
<msg timestamp="20201030 15:58:03.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041530083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041698333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:03.086" endtime="20201030 15:58:03.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:03.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041530083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041698333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:03.458" endtime="20201030 15:58:03.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:03.477" endtime="20201030 15:58:03.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.079" endtime="20201030 15:58:03.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.074" endtime="20201030 15:58:03.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:03.494" level="INFO">${RESULT} = [{'diff': 0.0001682499999999948}, {'diff': 0.00016869500000000343}, {'diff': 0.0001689299999999977}, {'diff': 0.00016840299999999753}, {'diff': 0.00016876399999999486}, {'diff': 0.00016901400000000205...</msg>
<status status="PASS" starttime="20201030 15:58:03.485" endtime="20201030 15:58:03.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:58:03.503" level="INFO">${ACCURACY} = {'diff': [0.0001682499999999948, 0.00016869500000000343, 0.0001689299999999977, 0.00016840299999999753, 0.00016876399999999486, 0.00016901400000000205, 0.00016883300000000018, 0.00016905600000000076, ...</msg>
<status status="PASS" starttime="20201030 15:58:03.496" endtime="20201030 15:58:03.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:03.514" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:58:03.512" endtime="20201030 15:58:03.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:03.519" level="INFO">VALUE: [0.0001682499999999948, 0.00016869500000000343, 0.0001689299999999977, 0.00016840299999999753, 0.00016876399999999486, 0.00016901400000000205, 0.00016883300000000018, 0.00016905600000000076, 0.00016840300000000447, 0.00016844399999999676, 0.0001689719999999964, 0.00016873599999999572, 0.00016890299999999803, 0.000168693999999997, 0.00016861099999999907, 0.00016899999999999554, 0.00016877800000000137, 0.00016862499999999864, 0.00016833299999999968, 0.00016875000000000223, 0.00016822300000000207, 0.000168306, 0.00016888899999999846, 0.00016862499999999864, 0.00016815299999999728, 0.000168096999999999, 0.000168402000000005, 0.0001681939999999965, 0.0001685550000000008, 0.00016872199999999615, 0.00016863900000000515, 0.0001685550000000008, 0.00016840300000000447, 0.0001688190000000006, 0.00016841700000000404, 0.00016829200000000044, 0.00016869400000000395, 0.00016908300000000043, 0.00016845799999999633, 0.00016900000000000248, 0.00016841700000000404, 0.00016875000000000223, 0.00016822199999999565, 0.0001688890000000054, 0.0001685969999999995, 0.0001683190000000001, 0.00016852800000000112, 0.00016897200000000334, 0.00016847300000000232, 0.0001682770000000014]</msg>
<status status="PASS" starttime="20201030 15:58:03.516" endtime="20201030 15:58:03.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.505" endtime="20201030 15:58:03.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:03.533" endtime="20201030 15:58:03.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.527" endtime="20201030 15:58:03.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.525" endtime="20201030 15:58:03.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.012" endtime="20201030 15:58:03.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.010" endtime="20201030 15:58:03.558"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:03.581" endtime="20201030 15:58:03.605"></status>
</kw>
<msg timestamp="20201030 15:58:03.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:03.578" endtime="20201030 15:58:03.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:03.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:03.608" endtime="20201030 15:58:03.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:03.615" endtime="20201030 15:58:03.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.571" endtime="20201030 15:58:03.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.565" endtime="20201030 15:58:03.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:03.638" endtime="20201030 15:58:03.985"></status>
</kw>
<msg timestamp="20201030 15:58:03.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039815833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039984944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:03.635" endtime="20201030 15:58:03.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:04.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039815833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039984944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:03.995" endtime="20201030 15:58:04.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:04.013" endtime="20201030 15:58:04.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.627" endtime="20201030 15:58:04.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.623" endtime="20201030 15:58:04.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:04.030" level="INFO">${RESULT} = [{'diff': 0.00016911099999999957}, {'diff': 0.0001690839999999999}, {'diff': 0.00016988899999999946}, {'diff': 0.00016948599999999647}, {'diff': 0.00016975000000000323}, {'diff': 0.0001691110000000065...</msg>
<status status="PASS" starttime="20201030 15:58:04.022" endtime="20201030 15:58:04.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:58:04.041" level="INFO">${ACCURACY} = {'diff': [0.00016911099999999957, 0.0001690839999999999, 0.00016988899999999946, 0.00016948599999999647, 0.00016975000000000323, 0.0001691110000000065, 0.00016975000000000323, 0.0001694310000000046, 0...</msg>
<status status="PASS" starttime="20201030 15:58:04.032" endtime="20201030 15:58:04.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:04.052" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:58:04.049" endtime="20201030 15:58:04.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:04.057" level="INFO">VALUE: [0.00016911099999999957, 0.0001690839999999999, 0.00016988899999999946, 0.00016948599999999647, 0.00016975000000000323, 0.0001691110000000065, 0.00016975000000000323, 0.0001694310000000046, 0.00016995900000000425, 0.00016968099999999792, 0.00016973599999999672, 0.00016945800000000427, 0.00016923599999999622, 0.00016926399999999536, 0.00016962499999999964, 0.00016984700000000075, 0.00016945799999999733, 0.00016947200000000384, 0.00016988799999999998, 0.00016945799999999733, 0.0001694299999999982, 0.00016972199999999715, 0.00016984700000000075, 0.00016952799999999518, 0.0001698749999999999, 0.00016925000000000273, 0.00017006900000000186, 0.0001692090000000035, 0.00016990299999999903, 0.00016948700000000289, 0.00016998599999999697, 0.00016965300000000572, 0.0001700550000000023, 0.00016961100000000007, 0.0001697640000000028, 0.00016906900000000086, 0.0001699719999999974, 0.00016961100000000007, 0.0001698749999999999, 0.00016927699999999546, 0.0001694719999999969, 0.0001700420000000022, 0.0001698749999999999, 0.00016976399999999586, 0.0001695420000000017, 0.00016972199999999715, 0.00016977800000000237, 0.0001699719999999974, 0.00016912499999999914, 0.00016944399999999776]</msg>
<status status="PASS" starttime="20201030 15:58:04.054" endtime="20201030 15:58:04.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.042" endtime="20201030 15:58:04.060"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:04.069" endtime="20201030 15:58:04.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.065" endtime="20201030 15:58:04.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.062" endtime="20201030 15:58:04.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.560" endtime="20201030 15:58:04.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:03.559" endtime="20201030 15:58:04.095"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:04.121" endtime="20201030 15:58:04.145"></status>
</kw>
<msg timestamp="20201030 15:58:04.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:04.118" endtime="20201030 15:58:04.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:04.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:04.149" endtime="20201030 15:58:04.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:04.155" endtime="20201030 15:58:04.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.108" endtime="20201030 15:58:04.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.101" endtime="20201030 15:58:04.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:04.179" endtime="20201030 15:58:04.520"></status>
</kw>
<msg timestamp="20201030 15:58:04.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043790764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043961778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:04.175" endtime="20201030 15:58:04.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:04.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043790764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043961778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:04.529" endtime="20201030 15:58:04.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:04.548" endtime="20201030 15:58:04.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.168" endtime="20201030 15:58:04.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.163" endtime="20201030 15:58:04.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:04.565" level="INFO">${RESULT} = [{'diff': 0.0001710139999999971}, {'diff': 0.00017043099999999867}, {'diff': 0.000170693999999999}, {'diff': 0.00017023600000000416}, {'diff': 0.0001703750000000004}, {'diff': 0.0001706390000000002}, ...</msg>
<status status="PASS" starttime="20201030 15:58:04.556" endtime="20201030 15:58:04.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:58:04.575" level="INFO">${ACCURACY} = {'diff': [0.0001710139999999971, 0.00017043099999999867, 0.000170693999999999, 0.00017023600000000416, 0.0001703750000000004, 0.0001706390000000002, 0.0001701389999999997, 0.0001704169999999991, 0.000...</msg>
<status status="PASS" starttime="20201030 15:58:04.567" endtime="20201030 15:58:04.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:04.586" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:58:04.584" endtime="20201030 15:58:04.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:04.592" level="INFO">VALUE: [0.0001710139999999971, 0.00017043099999999867, 0.000170693999999999, 0.00017023600000000416, 0.0001703750000000004, 0.0001706390000000002, 0.0001701389999999997, 0.0001704169999999991, 0.000170097000000001, 0.00017007000000000133, 0.0001700840000000009, 0.00017015299999999928, 0.0001709169999999996, 0.00017061100000000107, 0.00017094499999999874, 0.00017026399999999636, 0.00017084700000000175, 0.00017038899999999996, 0.0001703750000000004, 0.00017073600000000466, 0.0001708190000000026, 0.0001708750000000009, 0.00017065299999999978, 0.0001708049999999961, 0.00017065299999999978, 0.00017041599999999962, 0.0001706520000000003, 0.00017038899999999996, 0.00017038899999999996, 0.00017091600000000012, 0.00017076399999999686, 0.00017083300000000218, 0.00017048599999999747, 0.00017102799999999668, 0.00017091600000000012, 0.00017026399999999636, 0.00017095799999999883, 0.00017033300000000168, 0.00017082000000000208, 0.00017073600000000466, 0.00017062500000000064, 0.00017012500000000014, 0.000170582999999995, 0.00017061100000000107, 0.00017086100000000132, 0.00017034700000000125, 0.00017055600000000226, 0.00017008399999999396, 0.000170791999999996, 0.00017077799999999643]</msg>
<status status="PASS" starttime="20201030 15:58:04.589" endtime="20201030 15:58:04.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.577" endtime="20201030 15:58:04.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:04.604" endtime="20201030 15:58:04.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.600" endtime="20201030 15:58:04.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.597" endtime="20201030 15:58:04.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.097" endtime="20201030 15:58:04.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.095" endtime="20201030 15:58:04.629"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:04.652" endtime="20201030 15:58:04.675"></status>
</kw>
<msg timestamp="20201030 15:58:04.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:04.648" endtime="20201030 15:58:04.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:04.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:04.678" endtime="20201030 15:58:04.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:04.684" endtime="20201030 15:58:04.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.641" endtime="20201030 15:58:04.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.635" endtime="20201030 15:58:04.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:04.708" endtime="20201030 15:58:05.047"></status>
</kw>
<msg timestamp="20201030 15:58:05.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039696153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039868056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:04.704" endtime="20201030 15:58:05.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:05.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039696153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039868056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:05.056" endtime="20201030 15:58:05.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:05.075" endtime="20201030 15:58:05.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.697" endtime="20201030 15:58:05.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.692" endtime="20201030 15:58:05.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:05.092" level="INFO">${RESULT} = [{'diff': 0.00017190300000000103}, {'diff': 0.00017188900000000146}, {'diff': 0.00017120899999999856}, {'diff': 0.00017166700000000035}, {'diff': 0.0001719589999999993}, {'diff': 0.000171306000000003}...</msg>
<status status="PASS" starttime="20201030 15:58:05.083" endtime="20201030 15:58:05.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:58:05.101" level="INFO">${ACCURACY} = {'diff': [0.00017190300000000103, 0.00017188900000000146, 0.00017120899999999856, 0.00017166700000000035, 0.0001719589999999993, 0.000171306000000003, 0.00017186100000000232, 0.000171694, 0.0001712229...</msg>
<status status="PASS" starttime="20201030 15:58:05.094" endtime="20201030 15:58:05.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:05.112" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:58:05.109" endtime="20201030 15:58:05.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:05.117" level="INFO">VALUE: [0.00017190300000000103, 0.00017188900000000146, 0.00017120899999999856, 0.00017166700000000035, 0.0001719589999999993, 0.000171306000000003, 0.00017186100000000232, 0.000171694, 0.00017122299999999813, 0.00017138900000000096, 0.0001715420000000037, 0.0001717499999999983, 0.00017158300000000293, 0.00017172199999999915, 0.00017112500000000114, 0.00017172199999999915, 0.00017170899999999906, 0.0001714589999999988, 0.00017134800000000172, 0.00017195799999999983, 0.0001717499999999983, 0.00017175000000000523, 0.00017158399999999546, 0.0001719860000000059, 0.00017183300000000318, 0.00017141600000000062, 0.00017201400000000505, 0.00017161099999999513, 0.000171791999999997, 0.00017154100000000422, 0.00017133400000000215, 0.00017165300000000078, 0.000171097000000002, 0.00017205599999999682, 0.00017201400000000505, 0.0001717499999999983, 0.00017183300000000318, 0.00017145900000000575, 0.00017204199999999725, 0.00017105599999999582, 0.00017177799999999743, 0.00017141600000000062, 0.00017120799999999908, 0.00017162500000000164, 0.00017151400000000455, 0.00017194400000000026, 0.00017186100000000232, 0.00017151400000000455, 0.0001715420000000037, 0.0001719719999999994]</msg>
<status status="PASS" starttime="20201030 15:58:05.114" endtime="20201030 15:58:05.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:05.102" endtime="20201030 15:58:05.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:05.130" endtime="20201030 15:58:05.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:05.125" endtime="20201030 15:58:05.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:05.123" endtime="20201030 15:58:05.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.631" endtime="20201030 15:58:05.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:04.630" endtime="20201030 15:58:05.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.746" endtime="20201030 15:58:05.155"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:57:11.623" endtime="20201030 15:58:05.157" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:56:15.392" endtime="20201030 15:58:05.166"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:58:05.302" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:58:05.318" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:58:07.311" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:58:05.298" endtime="20201030 15:58:07.313"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:58:07.318" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:58:07.315" endtime="20201030 15:58:07.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:05.295" endtime="20201030 15:58:07.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:07.325" endtime="20201030 15:58:07.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.322" endtime="20201030 15:58:07.664"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:07.694" endtime="20201030 15:58:07.710"></status>
</kw>
<msg timestamp="20201030 15:58:07.711" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:07.691" endtime="20201030 15:58:07.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:07.717" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:07.713" endtime="20201030 15:58:07.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:58:07.724" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:58:07.720" endtime="20201030 15:58:07.725"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:07.684" endtime="20201030 15:58:07.727"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:07.679" endtime="20201030 15:58:07.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.676" endtime="20201030 15:58:07.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:58:07.739" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:58:07.737" endtime="20201030 15:58:07.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.731" endtime="20201030 15:58:07.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.674" endtime="20201030 15:58:07.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.673" endtime="20201030 15:58:07.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:07.742" endtime="20201030 15:58:07.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.669" endtime="20201030 15:58:07.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:07.749" endtime="20201030 15:58:07.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.666" endtime="20201030 15:58:07.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:05.293" endtime="20201030 15:58:07.755"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:07.769" endtime="20201030 15:58:07.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.765" endtime="20201030 15:58:07.793"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:07.825" endtime="20201030 15:58:07.840"></status>
</kw>
<msg timestamp="20201030 15:58:07.842" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:07.822" endtime="20201030 15:58:07.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:07.848" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:07.844" endtime="20201030 15:58:07.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:58:07.855" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:58:07.850" endtime="20201030 15:58:07.856"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:07.815" endtime="20201030 15:58:07.858"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:07.808" endtime="20201030 15:58:07.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.806" endtime="20201030 15:58:07.860"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:58:07.868" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:58:07.867" endtime="20201030 15:58:07.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.862" endtime="20201030 15:58:07.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.804" endtime="20201030 15:58:07.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.802" endtime="20201030 15:58:07.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:07.872" endtime="20201030 15:58:07.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.798" endtime="20201030 15:58:07.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.794" endtime="20201030 15:58:07.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.763" endtime="20201030 15:58:07.880"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:07.903" endtime="20201030 15:58:14.044"></status>
</kw>
<msg timestamp="20201030 15:58:14.045" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:07.898" endtime="20201030 15:58:14.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.051" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:14.047" endtime="20201030 15:58:14.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:14.054" endtime="20201030 15:58:14.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.891" endtime="20201030 15:58:14.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.885" endtime="20201030 15:58:14.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:14.067" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 15:58:14.063" endtime="20201030 15:58:14.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.078" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:14.076" endtime="20201030 15:58:14.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.083" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:58:14.081" endtime="20201030 15:58:14.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.069" endtime="20201030 15:58:14.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.095" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:14.093" endtime="20201030 15:58:14.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.100" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:58:14.097" endtime="20201030 15:58:14.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.087" endtime="20201030 15:58:14.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.111" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:58:14.109" endtime="20201030 15:58:14.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.116" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:58:14.114" endtime="20201030 15:58:14.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.103" endtime="20201030 15:58:14.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:14.135" endtime="20201030 15:58:14.506"></status>
</kw>
<msg timestamp="20201030 15:58:14.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125399903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.225775819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:14.131" endtime="20201030 15:58:14.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125399903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.225775819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:14.515" endtime="20201030 15:58:14.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:14.534" endtime="20201030 15:58:14.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.124" endtime="20201030 15:58:14.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.120" endtime="20201030 15:58:14.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:58:14.551" level="INFO">${FILTERED} = [{'diff': 0.10037591599999998}, {'diff': 0.10031025000000002}, {'diff': 0.10032019399999997}, {'diff': 0.10031879199999999}, {'diff': 0.10031163899999995}, {'diff': 0.10031206999999998}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 15:58:14.542" endtime="20201030 15:58:14.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:14.562" level="INFO">${RESULT} = {'diff': [0.10037591599999998, 0.10031025000000002, 0.10032019399999997, 0.10031879199999999, 0.10031163899999995, 0.10031206999999998, 0.100313875, 0.10031190300000004, 0.10031765300000006, 0.1003054...</msg>
<status status="PASS" starttime="20201030 15:58:14.553" endtime="20201030 15:58:14.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.572" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:58:14.570" endtime="20201030 15:58:14.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.577" level="INFO">VALUE: [0.10037591599999998, 0.10031025000000002, 0.10032019399999997, 0.10031879199999999, 0.10031163899999995, 0.10031206999999998, 0.100313875, 0.10031190300000004, 0.10031765300000006, 0.10030542999999992, 0.10030615300000001, 0.10029972199999992, 0.10029834799999993, 0.10031830599999991, 0.10030884699999998, 0.10030615299999979, 0.10031195799999981, 0.10029837500000016, 0.1003079859999998, 0.10031305499999998, 0.10030465300000024, 0.10030627700000005, 0.10030505599999984, 0.10030519500000024, 0.10030219499999982, 0.10030581999999999, 0.10030217999999991, 0.1003026939999998, 0.10030154199999997, 0.10030309699999984, 0.10031470799999997, 0.10031505500000026, 0.10031365299999973, 0.10031037499999984, 0.10029579199999983, 0.10030515299999987, 0.10031066599999994, 0.10031240300000022, 0.10030699999999948, 0.1002973469999997, 0.10029874999999944, 0.10030469400000008, 0.10030330500000062, 0.100306389, 0.1003073609999996, 0.1003144589999998, 0.10031038899999967, 0.10031544400000048, 0.10032522200000038, 0.10032592999999945, 0.100332431]</msg>
<status status="PASS" starttime="20201030 15:58:14.574" endtime="20201030 15:58:14.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.564" endtime="20201030 15:58:14.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:14.590" endtime="20201030 15:58:14.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.586" endtime="20201030 15:58:14.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.583" endtime="20201030 15:58:14.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:07.881" endtime="20201030 15:58:14.615"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:58:07.756" endtime="20201030 15:58:14.617" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:14.633" endtime="20201030 15:58:14.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.629" endtime="20201030 15:58:14.657"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:14.690" endtime="20201030 15:58:14.709"></status>
</kw>
<msg timestamp="20201030 15:58:14.710" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:14.687" endtime="20201030 15:58:14.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.717" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:14.712" endtime="20201030 15:58:14.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.723" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:58:14.719" endtime="20201030 15:58:14.724"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:14.679" endtime="20201030 15:58:14.726"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:14.673" endtime="20201030 15:58:14.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.670" endtime="20201030 15:58:14.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:58:14.738" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:58:14.736" endtime="20201030 15:58:14.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.730" endtime="20201030 15:58:14.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.668" endtime="20201030 15:58:14.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.667" endtime="20201030 15:58:14.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:14.742" endtime="20201030 15:58:14.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.663" endtime="20201030 15:58:14.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.658" endtime="20201030 15:58:14.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.627" endtime="20201030 15:58:14.749"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:14.770" endtime="20201030 15:58:20.917"></status>
</kw>
<msg timestamp="20201030 15:58:20.919" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:14.767" endtime="20201030 15:58:20.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:20.925" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:20.921" endtime="20201030 15:58:20.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:20.927" endtime="20201030 15:58:20.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.760" endtime="20201030 15:58:20.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.754" endtime="20201030 15:58:20.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:20.941" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 15:58:20.937" endtime="20201030 15:58:20.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:20.951" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:20.949" endtime="20201030 15:58:20.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:20.955" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:58:20.953" endtime="20201030 15:58:20.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:20.942" endtime="20201030 15:58:20.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:20.967" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:20.965" endtime="20201030 15:58:20.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:20.972" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:58:20.970" endtime="20201030 15:58:20.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:20.959" endtime="20201030 15:58:20.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:20.984" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:58:20.982" endtime="20201030 15:58:20.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:20.989" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:58:20.986" endtime="20201030 15:58:20.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:20.976" endtime="20201030 15:58:20.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:21.009" endtime="20201030 15:58:21.380"></status>
</kw>
<msg timestamp="20201030 15:58:21.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128384986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228758569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:21.005" endtime="20201030 15:58:21.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:21.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128384986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228758569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:21.390" endtime="20201030 15:58:21.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:21.409" endtime="20201030 15:58:21.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:20.998" endtime="20201030 15:58:21.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:20.993" endtime="20201030 15:58:21.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:58:21.426" level="INFO">${FILTERED} = [{'diff': 0.10037358299999999}, {'diff': 0.10030640300000002}, {'diff': 0.10030869400000003}, {'diff': 0.100310083}, {'diff': 0.10030994400000004}, {'diff': 0.10031174999999992}, {'diff': 0.1003049590...</msg>
<status status="PASS" starttime="20201030 15:58:21.418" endtime="20201030 15:58:21.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:21.437" level="INFO">${RESULT} = {'diff': [0.10037358299999999, 0.10030640300000002, 0.10030869400000003, 0.100310083, 0.10030994400000004, 0.10031174999999992, 0.10030495900000003, 0.10031557000000002, 0.10031158299999987, 0.1003144...</msg>
<status status="PASS" starttime="20201030 15:58:21.430" endtime="20201030 15:58:21.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:21.447" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:58:21.445" endtime="20201030 15:58:21.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:21.453" level="INFO">VALUE: [0.10037358299999999, 0.10030640300000002, 0.10030869400000003, 0.100310083, 0.10030994400000004, 0.10031174999999992, 0.10030495900000003, 0.10031557000000002, 0.10031158299999987, 0.10031445800000016, 0.10030152699999983, 0.10031154199999981, 0.10030091699999999, 0.1003085829999999, 0.10031198600000013, 0.10032434800000001, 0.10030213899999985, 0.1003040690000001, 0.10031822200000007, 0.10032116699999971, 0.10032077799999994, 0.10032676400000007, 0.10031943099999996, 0.10032952800000006, 0.10030955499999994, 0.10029505600000022, 0.1003016670000001, 0.10031061099999983, 0.10031708400000028, 0.10030301400000008, 0.10031609699999988, 0.10031886100000031, 0.10032277799999978, 0.1003087220000003, 0.10031552799999988, 0.10031476399999972, 0.10032309699999997, 0.10030262500000031, 0.10031708399999983, 0.1003161669999999, 0.10031663900000076, 0.10030581899999991, 0.10029756899999942, 0.10030625000000004, 0.10030038900000005, 0.10030448599999975, 0.10030208399999996, 0.10030972299999963, 0.10031023599999944, 0.10030511099999995, 0.1003022360000001]</msg>
<status status="PASS" starttime="20201030 15:58:21.450" endtime="20201030 15:58:21.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.439" endtime="20201030 15:58:21.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:21.465" endtime="20201030 15:58:21.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.461" endtime="20201030 15:58:21.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.458" endtime="20201030 15:58:21.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.750" endtime="20201030 15:58:21.490"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:58:14.621" endtime="20201030 15:58:21.492" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:21.509" endtime="20201030 15:58:21.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.505" endtime="20201030 15:58:21.532"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:21.567" endtime="20201030 15:58:21.587"></status>
</kw>
<msg timestamp="20201030 15:58:21.588" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:21.564" endtime="20201030 15:58:21.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:21.596" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:21.591" endtime="20201030 15:58:21.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:58:21.602" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:58:21.598" endtime="20201030 15:58:21.603"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:21.557" endtime="20201030 15:58:21.605"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:21.549" endtime="20201030 15:58:21.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.546" endtime="20201030 15:58:21.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:58:21.615" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:58:21.614" endtime="20201030 15:58:21.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.609" endtime="20201030 15:58:21.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.544" endtime="20201030 15:58:21.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.542" endtime="20201030 15:58:21.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:21.619" endtime="20201030 15:58:21.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.538" endtime="20201030 15:58:21.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.534" endtime="20201030 15:58:21.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.502" endtime="20201030 15:58:21.626"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:21.647" endtime="20201030 15:58:27.793"></status>
</kw>
<msg timestamp="20201030 15:58:27.794" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:21.644" endtime="20201030 15:58:27.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:27.800" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:27.796" endtime="20201030 15:58:27.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:27.803" endtime="20201030 15:58:27.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.636" endtime="20201030 15:58:27.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.631" endtime="20201030 15:58:27.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:27.816" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 15:58:27.812" endtime="20201030 15:58:27.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:27.826" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:27.824" endtime="20201030 15:58:27.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:27.831" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:58:27.829" endtime="20201030 15:58:27.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:27.818" endtime="20201030 15:58:27.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:27.843" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:27.841" endtime="20201030 15:58:27.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:27.848" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:58:27.846" endtime="20201030 15:58:27.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:27.834" endtime="20201030 15:58:27.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:27.860" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:58:27.858" endtime="20201030 15:58:27.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:27.865" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:58:27.862" endtime="20201030 15:58:27.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:27.852" endtime="20201030 15:58:27.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:27.886" endtime="20201030 15:58:28.248"></status>
</kw>
<msg timestamp="20201030 15:58:28.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130031625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.230555431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:27.882" endtime="20201030 15:58:28.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:28.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130031625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.230555431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:28.257" endtime="20201030 15:58:28.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:28.276" endtime="20201030 15:58:28.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:27.873" endtime="20201030 15:58:28.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:27.868" endtime="20201030 15:58:28.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:58:28.293" level="INFO">${FILTERED} = [{'diff': 0.100523806}, {'diff': 0.10031326400000001}, {'diff': 0.10018622199999999}, {'diff': 0.10030498600000004}, {'diff': 0.10029291699999998}, {'diff': 0.10029323599999995}, {'diff': 0.1003024020...</msg>
<status status="PASS" starttime="20201030 15:58:28.284" endtime="20201030 15:58:28.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:28.302" level="INFO">${RESULT} = {'diff': [0.100523806, 0.10031326400000001, 0.10018622199999999, 0.10030498600000004, 0.10029291699999998, 0.10029323599999995, 0.10030240200000007, 0.10031236099999996, 0.10029976399999996, 0.1002995...</msg>
<status status="PASS" starttime="20201030 15:58:28.295" endtime="20201030 15:58:28.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:28.313" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:58:28.310" endtime="20201030 15:58:28.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:28.318" level="INFO">VALUE: [0.100523806, 0.10031326400000001, 0.10018622199999999, 0.10030498600000004, 0.10029291699999998, 0.10029323599999995, 0.10030240200000007, 0.10031236099999996, 0.10029976399999996, 0.10029959799999988, 0.10030601399999983, 0.100291291, 0.10030130500000012, 0.10030354200000002, 0.10030288899999995, 0.1003130000000001, 0.10029790299999997, 0.10030154200000019, 0.10030366700000015, 0.1003044019999999, 0.10031552799999988, 0.10031726400000007, 0.10031684700000021, 0.10031556899999972, 0.1003092080000001, 0.10030483300000004, 0.10029747200000028, 0.10029752799999958, 0.10029480599999996, 0.10029337500000013, 0.1002882089999999, 0.10030347200000023, 0.10029913899999965, 0.1003020410000004, 0.1003023190000003, 0.10030361099999974, 0.10030677799999976, 0.10030879199999987, 0.10031319499999958, 0.10029951399999959, 0.1003060419999997, 0.10030243000000016, 0.10030970799999928, 0.10029522199999974, 0.10029231899999935, 0.10029845800000015, 0.10029695800000038, 0.1002887639999992, 0.10029019400000028, 0.10029368100000013, 0.10030306999999983]</msg>
<status status="PASS" starttime="20201030 15:58:28.315" endtime="20201030 15:58:28.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.304" endtime="20201030 15:58:28.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:28.331" endtime="20201030 15:58:28.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.326" endtime="20201030 15:58:28.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.324" endtime="20201030 15:58:28.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.627" endtime="20201030 15:58:28.356"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:58:21.496" endtime="20201030 15:58:28.357" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:28.375" endtime="20201030 15:58:28.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.370" endtime="20201030 15:58:28.399"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:28.432" endtime="20201030 15:58:28.452"></status>
</kw>
<msg timestamp="20201030 15:58:28.453" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:28.429" endtime="20201030 15:58:28.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:28.460" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:28.455" endtime="20201030 15:58:28.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:58:28.466" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:58:28.462" endtime="20201030 15:58:28.467"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:28.422" endtime="20201030 15:58:28.469"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:28.415" endtime="20201030 15:58:28.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.413" endtime="20201030 15:58:28.471"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:58:28.479" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:58:28.477" endtime="20201030 15:58:28.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.473" endtime="20201030 15:58:28.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.411" endtime="20201030 15:58:28.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.409" endtime="20201030 15:58:28.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:28.483" endtime="20201030 15:58:28.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.405" endtime="20201030 15:58:28.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.401" endtime="20201030 15:58:28.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.367" endtime="20201030 15:58:28.490"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:28.512" endtime="20201030 15:58:34.658"></status>
</kw>
<msg timestamp="20201030 15:58:34.659" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:28.508" endtime="20201030 15:58:34.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:34.665" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:34.661" endtime="20201030 15:58:34.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:34.668" endtime="20201030 15:58:34.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.501" endtime="20201030 15:58:34.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.495" endtime="20201030 15:58:34.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:34.682" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 15:58:34.677" endtime="20201030 15:58:34.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:34.698" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:34.693" endtime="20201030 15:58:34.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:34.705" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:58:34.703" endtime="20201030 15:58:34.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:34.685" endtime="20201030 15:58:34.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:34.723" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:34.719" endtime="20201030 15:58:34.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:34.729" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:58:34.726" endtime="20201030 15:58:34.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:34.710" endtime="20201030 15:58:34.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:34.747" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:58:34.745" endtime="20201030 15:58:34.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:34.752" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:58:34.750" endtime="20201030 15:58:34.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:34.736" endtime="20201030 15:58:34.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:34.772" endtime="20201030 15:58:35.131"></status>
</kw>
<msg timestamp="20201030 15:58:35.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128147083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228835764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:34.768" endtime="20201030 15:58:35.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:35.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128147083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228835764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:35.140" endtime="20201030 15:58:35.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:35.159" endtime="20201030 15:58:35.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:34.761" endtime="20201030 15:58:35.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:34.756" endtime="20201030 15:58:35.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:58:35.176" level="INFO">${FILTERED} = [{'diff': 0.100688681}, {'diff': 0.09998123600000003}, {'diff': 0.10029484799999999}, {'diff': 0.10028419500000002}, {'diff': 0.10028995899999993}, {'diff': 0.10029627799999996}, {'diff': 0.1002881799...</msg>
<status status="PASS" starttime="20201030 15:58:35.167" endtime="20201030 15:58:35.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:35.187" level="INFO">${RESULT} = {'diff': [0.100688681, 0.09998123600000003, 0.10029484799999999, 0.10028419500000002, 0.10028995899999993, 0.10029627799999996, 0.10028817999999995, 0.10029568099999997, 0.10029734700000004, 0.1002945...</msg>
<status status="PASS" starttime="20201030 15:58:35.178" endtime="20201030 15:58:35.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:35.197" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:58:35.195" endtime="20201030 15:58:35.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:35.202" level="INFO">VALUE: [0.100688681, 0.09998123600000003, 0.10029484799999999, 0.10028419500000002, 0.10028995899999993, 0.10029627799999996, 0.10028817999999995, 0.10029568099999997, 0.10029734700000004, 0.10029458299999994, 0.10029463899999991, 0.10029609699999997, 0.10029609699999997, 0.10030724999999996, 0.10030370799999999, 0.10030426400000003, 0.10030712500000005, 0.10031891700000006, 0.10031749999999984, 0.10031197299999972, 0.10032166700000023, 0.10031288799999993, 0.10031956999999991, 0.10031912499999995, 0.10030945899999999, 0.10032123700000017, 0.10030295899999997, 0.10029895899999985, 0.10031284699999965, 0.10030062500000003, 0.10030879100000023, 0.10030422200000011, 0.10030502799999974, 0.10031069500000012, 0.10031065200000011, 0.10030455599999977, 0.10030479199999975, 0.10028604099999994, 0.10029551400000036, 0.10030038900000005, 0.10029936100000025, 0.10029455499999962, 0.10029902800000023, 0.10029094500000024, 0.10029715199999956, 0.10028926399999971, 0.10029784700000022, 0.10030197299999966, 0.10031808399999953, 0.10030031999999967, 0.10029548699999946]</msg>
<status status="PASS" starttime="20201030 15:58:35.199" endtime="20201030 15:58:35.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.189" endtime="20201030 15:58:35.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:35.215" endtime="20201030 15:58:35.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.211" endtime="20201030 15:58:35.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.208" endtime="20201030 15:58:35.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.491" endtime="20201030 15:58:35.240"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:58:28.362" endtime="20201030 15:58:35.242" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:35.258" endtime="20201030 15:58:35.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.254" endtime="20201030 15:58:35.282"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:35.315" endtime="20201030 15:58:35.335"></status>
</kw>
<msg timestamp="20201030 15:58:35.336" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:35.312" endtime="20201030 15:58:35.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:35.342" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:35.338" endtime="20201030 15:58:35.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:58:35.349" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:58:35.345" endtime="20201030 15:58:35.350"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:35.304" endtime="20201030 15:58:35.351"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:35.298" endtime="20201030 15:58:35.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.295" endtime="20201030 15:58:35.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:58:35.362" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:58:35.360" endtime="20201030 15:58:35.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.356" endtime="20201030 15:58:35.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.294" endtime="20201030 15:58:35.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.292" endtime="20201030 15:58:35.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:35.366" endtime="20201030 15:58:35.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.288" endtime="20201030 15:58:35.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.283" endtime="20201030 15:58:35.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.252" endtime="20201030 15:58:35.373"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:35.397" endtime="20201030 15:58:41.542"></status>
</kw>
<msg timestamp="20201030 15:58:41.543" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:35.393" endtime="20201030 15:58:41.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:41.550" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:41.545" endtime="20201030 15:58:41.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:41.553" endtime="20201030 15:58:41.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.386" endtime="20201030 15:58:41.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.378" endtime="20201030 15:58:41.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:41.565" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 15:58:41.561" endtime="20201030 15:58:41.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:41.576" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:41.573" endtime="20201030 15:58:41.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:41.580" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:58:41.578" endtime="20201030 15:58:41.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:41.567" endtime="20201030 15:58:41.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:41.592" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:41.590" endtime="20201030 15:58:41.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:41.597" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:58:41.595" endtime="20201030 15:58:41.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:41.584" endtime="20201030 15:58:41.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:41.609" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:58:41.606" endtime="20201030 15:58:41.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:41.613" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:58:41.611" endtime="20201030 15:58:41.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:41.600" endtime="20201030 15:58:41.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:41.633" endtime="20201030 15:58:42.031"></status>
</kw>
<msg timestamp="20201030 15:58:42.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129959931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.230739028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:41.630" endtime="20201030 15:58:42.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:42.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129959931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.230739028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:42.040" endtime="20201030 15:58:42.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:42.058" endtime="20201030 15:58:42.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:41.622" endtime="20201030 15:58:42.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:41.617" endtime="20201030 15:58:42.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:58:42.075" level="INFO">${FILTERED} = [{'diff': 0.10077909700000001}, {'diff': 0.09988824999999998}, {'diff': 0.10032472200000003}, {'diff': 0.10030874999999995}, {'diff': 0.10030913900000005}, {'diff': 0.10030913899999994}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 15:58:42.066" endtime="20201030 15:58:42.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:42.085" level="INFO">${RESULT} = {'diff': [0.10077909700000001, 0.09988824999999998, 0.10032472200000003, 0.10030874999999995, 0.10030913900000005, 0.10030913899999994, 0.10030445799999999, 0.10030305499999992, 0.10030448599999997, 0...</msg>
<status status="PASS" starttime="20201030 15:58:42.077" endtime="20201030 15:58:42.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:42.095" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:58:42.093" endtime="20201030 15:58:42.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:42.100" level="INFO">VALUE: [0.10077909700000001, 0.09988824999999998, 0.10032472200000003, 0.10030874999999995, 0.10030913900000005, 0.10030913899999994, 0.10030445799999999, 0.10030305499999992, 0.10030448599999997, 0.10029380499999996, 0.10029383300000005, 0.10029988899999998, 0.10031472200000002, 0.10029380600000004, 0.10029998600000001, 0.10030031999999989, 0.10030570800000005, 0.10030972199999999, 0.10029218100000015, 0.10030088900000012, 0.10030658300000006, 0.10030876399999977, 0.1003095140000001, 0.10030795800000014, 0.10030411099999981, 0.10030550000000016, 0.10030702800000002, 0.1003000140000001, 0.10029894399999995, 0.10029650000000023, 0.10030599999999978, 0.10029459699999999, 0.10030366599999985, 0.1003069860000001, 0.1003080409999999, 0.10030777699999982, 0.10030576400000024, 0.1003101799999997, 0.10029420800000022, 0.10030397200000074, 0.10031433300000003, 0.10030340299999985, 0.1003120829999995, 0.10031709699999958, 0.10032081900000023, 0.10031491600000031, 0.10031216700000023, 0.10030744499999944, 0.10031215199999988, 0.10032502800000032, 0.10031654199999984]</msg>
<status status="PASS" starttime="20201030 15:58:42.097" endtime="20201030 15:58:42.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.087" endtime="20201030 15:58:42.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:42.113" endtime="20201030 15:58:42.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.108" endtime="20201030 15:58:42.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.106" endtime="20201030 15:58:42.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.374" endtime="20201030 15:58:42.137"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:58:35.246" endtime="20201030 15:58:42.139" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:42.155" endtime="20201030 15:58:42.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.151" endtime="20201030 15:58:42.179"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:42.211" endtime="20201030 15:58:42.232"></status>
</kw>
<msg timestamp="20201030 15:58:42.233" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:42.207" endtime="20201030 15:58:42.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:42.240" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:42.236" endtime="20201030 15:58:42.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:58:42.246" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:58:42.242" endtime="20201030 15:58:42.247"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:42.200" endtime="20201030 15:58:42.249"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:42.194" endtime="20201030 15:58:42.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.192" endtime="20201030 15:58:42.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:58:42.259" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:58:42.257" endtime="20201030 15:58:42.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.253" endtime="20201030 15:58:42.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.190" endtime="20201030 15:58:42.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.188" endtime="20201030 15:58:42.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:42.262" endtime="20201030 15:58:42.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.184" endtime="20201030 15:58:42.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.180" endtime="20201030 15:58:42.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.149" endtime="20201030 15:58:42.269"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:42.290" endtime="20201030 15:58:48.429"></status>
</kw>
<msg timestamp="20201030 15:58:48.430" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:42.287" endtime="20201030 15:58:48.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:48.437" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:48.433" endtime="20201030 15:58:48.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:48.440" endtime="20201030 15:58:48.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.280" endtime="20201030 15:58:48.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.274" endtime="20201030 15:58:48.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:48.452" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 15:58:48.448" endtime="20201030 15:58:48.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:48.462" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:48.460" endtime="20201030 15:58:48.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:48.466" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:58:48.464" endtime="20201030 15:58:48.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:48.454" endtime="20201030 15:58:48.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:48.478" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:48.476" endtime="20201030 15:58:48.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:48.483" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:58:48.480" endtime="20201030 15:58:48.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:48.470" endtime="20201030 15:58:48.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:48.494" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:58:48.492" endtime="20201030 15:58:48.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:48.499" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:58:48.497" endtime="20201030 15:58:48.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:48.486" endtime="20201030 15:58:48.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:48.517" endtime="20201030 15:58:48.876"></status>
</kw>
<msg timestamp="20201030 15:58:48.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126350208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227269542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:48.514" endtime="20201030 15:58:48.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:48.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126350208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227269542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:48.886" endtime="20201030 15:58:48.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:48.904" endtime="20201030 15:58:48.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:48.507" endtime="20201030 15:58:48.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:48.502" endtime="20201030 15:58:48.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:58:48.921" level="INFO">${FILTERED} = [{'diff': 0.100919334}, {'diff': 0.09974993100000001}, {'diff': 0.100306652}, {'diff': 0.10030645800000004}, {'diff': 0.100306542}, {'diff': 0.10029219500000008}, {'diff': 0.10030584799999998}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:58:48.912" endtime="20201030 15:58:48.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:48.931" level="INFO">${RESULT} = {'diff': [0.100919334, 0.09974993100000001, 0.100306652, 0.10030645800000004, 0.100306542, 0.10029219500000008, 0.10030584799999998, 0.10030344499999999, 0.1002900980000001, 0.10028030500000007, 0.100...</msg>
<status status="PASS" starttime="20201030 15:58:48.924" endtime="20201030 15:58:48.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:48.941" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:58:48.939" endtime="20201030 15:58:48.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:48.946" level="INFO">VALUE: [0.100919334, 0.09974993100000001, 0.100306652, 0.10030645800000004, 0.100306542, 0.10029219500000008, 0.10030584799999998, 0.10030344499999999, 0.1002900980000001, 0.10028030500000007, 0.10027826399999995, 0.1002782499999999, 0.10029255599999987, 0.10029966600000018, 0.100298958, 0.10030244399999999, 0.10029172199999992, 0.10029716700000013, 0.10030206999999991, 0.10030045900000006, 0.10029505600000022, 0.10029011100000007, 0.1002822499999998, 0.10028920900000005, 0.10029272299999992, 0.10029104200000027, 0.10029097199999981, 0.10028327699999995, 0.10028168100000023, 0.10030608299999999, 0.10030177799999995, 0.10029711100000016, 0.10031069400000003, 0.10030509700000012, 0.10030180600000005, 0.10030619499999993, 0.10030562499999984, 0.10030518000000033, 0.10030427799999941, 0.10029386099999993, 0.10030561099999957, 0.10030465299999936, 0.10028699999999979, 0.10030798699999988, 0.10030009699999987, 0.10029662499999947, 0.10029747199999939, 0.10030755499999966, 0.10029472200000011, 0.1002962639999998, 0.10029555599999984]</msg>
<status status="PASS" starttime="20201030 15:58:48.943" endtime="20201030 15:58:48.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:48.933" endtime="20201030 15:58:48.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:48.959" endtime="20201030 15:58:48.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:48.954" endtime="20201030 15:58:48.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:48.952" endtime="20201030 15:58:48.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.270" endtime="20201030 15:58:48.984"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:58:42.143" endtime="20201030 15:58:48.985" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:58:05.188" endtime="20201030 15:58:49.002"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:55:11.815" endtime="20201030 15:58:49.082"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_samr21-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
